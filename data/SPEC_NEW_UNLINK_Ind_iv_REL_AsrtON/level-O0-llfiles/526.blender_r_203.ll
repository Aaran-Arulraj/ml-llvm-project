; ModuleID = 'blender/source/blender/blenkernel/intern/multires.c'
source_filename = "blender/source/blender/blenkernel/intern/multires.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.ListBase = type { i8*, i8* }
%struct.AnimData = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.Ipo = type opaque
%struct.Key = type opaque
%struct.Material = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type { i32*, i32 }
%struct.PBVH = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type { %struct.ModifierData, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.ImBuf = type opaque
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.KeyBlock = type opaque
%struct.BMLog = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, void (%struct.ModifierData*, %struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, void (%struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)*, void (%struct.ModifierData*)*, i8 (%struct.ModifierData*, i32)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* }
%struct.DagNode = type opaque
%struct.CCGDerivedMesh = type { %struct.DerivedMesh, %struct.CCGSubSurf*, i32, i32, i32, %struct.anon*, %struct.anon.0*, %struct.anon.1*, i16*, %struct.DMFlagMat*, i32*, %struct.PBVH*, %struct.MeshElemMap*, i32*, %struct.CCGElem**, %struct.DMGridAdjacency*, i32*, %struct.CCGFace**, %struct.DMFlagMat*, i32**, %struct.anon.2, %struct.EdgeHash* }
%struct.CCGSubSurf = type opaque
%struct.anon = type { i32, %struct.CCGVert* }
%struct.CCGVert = type opaque
%struct.anon.0 = type { i32, i32, %struct.CCGEdge* }
%struct.CCGEdge = type opaque
%struct.anon.1 = type { i32, i32, i32, %struct.CCGFace* }
%struct.CCGFace = type opaque
%struct.anon.2 = type { %struct.MultiresModifierData*, i32, i32, i32, [3 x float]*, %struct.Object*, i32 }
%struct.EdgeHash = type opaque
%struct.MDisps = type { i32, i32, [3 x float]*, i32* }
%struct.GridPaintMask = type { float*, i32, i32 }
%struct.SubsurfModifierData = type { %struct.ModifierData, i16, i16, i16, i16, i8*, i8* }
%struct.MultiresLevel = type { %struct.MultiresLevel*, %struct.MultiresLevel*, %struct.MultiresFace*, %struct.MultiresColFace*, %struct.MultiresEdge*, i32, i32, i32, i32, %struct.MVert* }
%struct.MultiresFace = type { [4 x i32], i32, i8, i8, [2 x i8] }
%struct.MultiresColFace = type { [4 x %struct.MultiresCol] }
%struct.MultiresCol = type { float, float, float, float }
%struct.MultiresEdge = type { [2 x i32], i32 }
%struct.IndexNode = type { %struct.IndexNode*, %struct.IndexNode*, i32 }

@CD_MASK_BAREMESH = external dso_local constant i64, align 8
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [28 x i8] c"multiresReshape_deformVerts\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"multires apply base origco\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"fake_loops\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"fake_co\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"subGridData*\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"diff\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"subGridData\00", align 1
@multires_side_tot = internal constant [14 x i32] [i32 0, i32 2, i32 3, i32 5, i32 9, i32 17, i32 33, i32 65, i32 129, i32 257, i32 513, i32 1025, i32 2049, i32 4097], align 16, !dbg !0
@.str.7 = private unnamed_addr constant [27 x i8] c"disp in multires_set_space\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"multires disp in conversion\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"mdisp topology\00", align 1
@multires_grid_tot = internal constant [14 x i32] [i32 0, i32 4, i32 9, i32 25, i32 81, i32 289, i32 1089, i32 4225, i32 16641, i32 66049, i32 263169, i32 1050625, i32 4198401, i32 16785409], align 16, !dbg !2617
@.str.10 = private unnamed_addr constant [15 x i8] c"multires disps\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"downsample hidden\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"multires_grid_paint_mask_downsample\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"MDisps.hidden initialize\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"gpm.data\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.15 = private unnamed_addr constant [23 x i8] c"MDisps.hidden upsample\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"multires vvmap\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"multires fmap\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"multires emap\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"multires fmem\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"multires emem\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"vert face map\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"vert face map mem\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"vert edge map\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"vert edge map mem\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"multiresScale vertCos\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_customdata_delete(%struct.Mesh* %me) #0 !dbg !2629 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !2633, metadata !DIExpression()), !dbg !2634
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2635
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 20, !dbg !2637
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !2637
  %tobool = icmp ne %struct.BMEditMesh* %1, null, !dbg !2635
  br i1 %tobool, label %if.then, label %if.else, !dbg !2638

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !2639, metadata !DIExpression()), !dbg !2643
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2644
  %edit_btmesh1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 20, !dbg !2645
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh1, align 8, !dbg !2645
  store %struct.BMEditMesh* %3, %struct.BMEditMesh** %em, align 8, !dbg !2643
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2646
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !2647
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2647
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 26, !dbg !2648
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2649
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 0, !dbg !2650
  call void @CustomData_external_remove(%struct.CustomData* %ldata, %struct.ID* %id, i32 19, i32 0), !dbg !2651
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2652
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !2653
  %8 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !2653
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2654
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !2655
  %10 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !2655
  %ldata4 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 26, !dbg !2656
  call void @BM_data_layer_free(%struct.BMesh* %8, %struct.CustomData* %ldata4, i32 19), !dbg !2657
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2658
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !2659
  %12 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !2659
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2660
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !2661
  %14 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !2661
  %ldata7 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 26, !dbg !2662
  call void @BM_data_layer_free(%struct.BMesh* %12, %struct.CustomData* %ldata7, i32 35), !dbg !2663
  br label %if.end, !dbg !2664

if.else:                                          ; preds = %entry
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2665
  %ldata8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 25, !dbg !2667
  %16 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2668
  %id9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 0, !dbg !2669
  %17 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2670
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 31, !dbg !2671
  %18 = load i32, i32* %totloop, align 4, !dbg !2671
  call void @CustomData_external_remove(%struct.CustomData* %ldata8, %struct.ID* %id9, i32 19, i32 %18), !dbg !2672
  %19 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2673
  %ldata10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 25, !dbg !2674
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2675
  %totloop11 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 31, !dbg !2676
  %21 = load i32, i32* %totloop11, align 4, !dbg !2676
  %call = call zeroext i8 @CustomData_free_layer_active(%struct.CustomData* %ldata10, i32 19, i32 %21), !dbg !2677
  %22 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2678
  %ldata12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 25, !dbg !2679
  %23 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !2680
  %totloop13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 31, !dbg !2681
  %24 = load i32, i32* %totloop13, align 4, !dbg !2681
  %call14 = call zeroext i8 @CustomData_free_layer_active(%struct.CustomData* %ldata12, i32 35, i32 %24), !dbg !2682
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2683
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @CustomData_external_remove(%struct.CustomData*, %struct.ID*, i32, i32) #2

declare dso_local void @BM_data_layer_free(%struct.BMesh*, %struct.CustomData*, i32) #2

declare dso_local zeroext i8 @CustomData_free_layer_active(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @get_multires_dm(%struct.Scene* %scene, %struct.MultiresModifierData* %mmd, %struct.Object* %ob) #0 !dbg !2684 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %tdm = alloca %struct.DerivedMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2691, metadata !DIExpression()), !dbg !2692
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !2693, metadata !DIExpression()), !dbg !2694
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2695, metadata !DIExpression()), !dbg !2696
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !2697, metadata !DIExpression()), !dbg !2698
  %0 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2699
  %1 = bitcast %struct.MultiresModifierData* %0 to %struct.ModifierData*, !dbg !2700
  store %struct.ModifierData* %1, %struct.ModifierData** %md, align 8, !dbg !2698
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !2701, metadata !DIExpression()), !dbg !2792
  %2 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2793
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %2, i32 0, i32 2, !dbg !2794
  %3 = load i32, i32* %type, align 8, !dbg !2794
  %call = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %3), !dbg !2795
  store %struct.ModifierTypeInfo* %call, %struct.ModifierTypeInfo** %mti, align 8, !dbg !2792
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %tdm, metadata !2796, metadata !DIExpression()), !dbg !2797
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2798
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2799
  %6 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !2800
  %call1 = call %struct.DerivedMesh* @mesh_get_derived_deform(%struct.Scene* %4, %struct.Object* %5, i64 %6), !dbg !2801
  store %struct.DerivedMesh* %call1, %struct.DerivedMesh** %tdm, align 8, !dbg !2797
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !2802, metadata !DIExpression()), !dbg !2803
  %7 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !2804
  %applyModifier = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %7, i32 0, i32 10, !dbg !2805
  %8 = load %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)** %applyModifier, align 8, !dbg !2805
  %9 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2806
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2807
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !2808
  %call2 = call %struct.DerivedMesh* %8(%struct.ModifierData* %9, %struct.Object* %10, %struct.DerivedMesh* %11, i32 10), !dbg !2804
  store %struct.DerivedMesh* %call2, %struct.DerivedMesh** %dm, align 8, !dbg !2809
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2810
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !2812
  %cmp = icmp eq %struct.DerivedMesh* %12, %13, !dbg !2813
  br i1 %cmp, label %if.then, label %if.end, !dbg !2814

if.then:                                          ; preds = %entry
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %tdm, align 8, !dbg !2815
  %call3 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %14), !dbg !2817
  store %struct.DerivedMesh* %call3, %struct.DerivedMesh** %dm, align 8, !dbg !2818
  br label %if.end, !dbg !2819

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2820
  ret %struct.DerivedMesh* %15, !dbg !2821
}

declare dso_local %struct.ModifierTypeInfo* @modifierType_getInfo(i32) #2

declare dso_local %struct.DerivedMesh* @mesh_get_derived_deform(%struct.Scene*, %struct.Object*, i64) #2

declare dso_local %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MultiresModifierData* @find_multires_modifier_before(%struct.Scene* %scene, %struct.ModifierData* %lastmd) #0 !dbg !2822 {
entry:
  %retval = alloca %struct.MultiresModifierData*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %lastmd.addr = alloca %struct.ModifierData*, align 8
  %md = alloca %struct.ModifierData*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2825, metadata !DIExpression()), !dbg !2826
  store %struct.ModifierData* %lastmd, %struct.ModifierData** %lastmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %lastmd.addr, metadata !2827, metadata !DIExpression()), !dbg !2828
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !2829, metadata !DIExpression()), !dbg !2830
  %0 = load %struct.ModifierData*, %struct.ModifierData** %lastmd.addr, align 8, !dbg !2831
  store %struct.ModifierData* %0, %struct.ModifierData** %md, align 8, !dbg !2833
  br label %for.cond, !dbg !2834

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2835
  %tobool = icmp ne %struct.ModifierData* %1, null, !dbg !2837
  br i1 %tobool, label %for.body, label %for.end, !dbg !2837

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2838
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %2, i32 0, i32 2, !dbg !2841
  %3 = load i32, i32* %type, align 8, !dbg !2841
  %cmp = icmp eq i32 %3, 29, !dbg !2842
  br i1 %cmp, label %if.then, label %if.end3, !dbg !2843

if.then:                                          ; preds = %for.body
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2844
  %5 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2847
  %call = call zeroext i8 @modifier_isEnabled(%struct.Scene* %4, %struct.ModifierData* %5, i32 1), !dbg !2848
  %tobool1 = icmp ne i8 %call, 0, !dbg !2848
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2849

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2850
  %7 = bitcast %struct.ModifierData* %6 to %struct.MultiresModifierData*, !dbg !2851
  store %struct.MultiresModifierData* %7, %struct.MultiresModifierData** %retval, align 8, !dbg !2852
  br label %return, !dbg !2852

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !2853

if.end3:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !2854

for.inc:                                          ; preds = %if.end3
  %8 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2855
  %prev = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %8, i32 0, i32 1, !dbg !2856
  %9 = load %struct.ModifierData*, %struct.ModifierData** %prev, align 8, !dbg !2856
  store %struct.ModifierData* %9, %struct.ModifierData** %md, align 8, !dbg !2857
  br label %for.cond, !dbg !2858, !llvm.loop !2859

for.end:                                          ; preds = %for.cond
  store %struct.MultiresModifierData* null, %struct.MultiresModifierData** %retval, align 8, !dbg !2861
  br label %return, !dbg !2861

return:                                           ; preds = %for.end, %if.then2
  %10 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %retval, align 8, !dbg !2862
  ret %struct.MultiresModifierData* %10, !dbg !2862
}

declare dso_local zeroext i8 @modifier_isEnabled(%struct.Scene*, %struct.ModifierData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MultiresModifierData* @get_multires_modifier(%struct.Scene* %scene, %struct.Object* %ob, i8 zeroext %use_first) #0 !dbg !2863 {
entry:
  %retval = alloca %struct.MultiresModifierData*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %use_first.addr = alloca i8, align 1
  %md = alloca %struct.ModifierData*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %firstmmd = alloca %struct.MultiresModifierData*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !2866, metadata !DIExpression()), !dbg !2867
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2868, metadata !DIExpression()), !dbg !2869
  store i8 %use_first, i8* %use_first.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_first.addr, metadata !2870, metadata !DIExpression()), !dbg !2871
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !2872, metadata !DIExpression()), !dbg !2873
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !2874, metadata !DIExpression()), !dbg !2875
  store %struct.MultiresModifierData* null, %struct.MultiresModifierData** %mmd, align 8, !dbg !2875
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %firstmmd, metadata !2876, metadata !DIExpression()), !dbg !2877
  store %struct.MultiresModifierData* null, %struct.MultiresModifierData** %firstmmd, align 8, !dbg !2877
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2878
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 26, !dbg !2880
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !2881
  %1 = load i8*, i8** %first, align 8, !dbg !2881
  %2 = bitcast i8* %1 to %struct.ModifierData*, !dbg !2878
  store %struct.ModifierData* %2, %struct.ModifierData** %md, align 8, !dbg !2882
  br label %for.cond, !dbg !2883

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2884
  %tobool = icmp ne %struct.ModifierData* %3, null, !dbg !2886
  br i1 %tobool, label %for.body, label %for.end, !dbg !2886

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2887
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %4, i32 0, i32 2, !dbg !2890
  %5 = load i32, i32* %type, align 8, !dbg !2890
  %cmp = icmp eq i32 %5, 29, !dbg !2891
  br i1 %cmp, label %if.then, label %if.end6, !dbg !2892

if.then:                                          ; preds = %for.body
  %6 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %firstmmd, align 8, !dbg !2893
  %tobool1 = icmp ne %struct.MultiresModifierData* %6, null, !dbg !2893
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !2896

if.then2:                                         ; preds = %if.then
  %7 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2897
  %8 = bitcast %struct.ModifierData* %7 to %struct.MultiresModifierData*, !dbg !2898
  store %struct.MultiresModifierData* %8, %struct.MultiresModifierData** %firstmmd, align 8, !dbg !2899
  br label %if.end, !dbg !2900

if.end:                                           ; preds = %if.then2, %if.then
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !2901
  %10 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2903
  %call = call zeroext i8 @modifier_isEnabled(%struct.Scene* %9, %struct.ModifierData* %10, i32 1), !dbg !2904
  %tobool3 = icmp ne i8 %call, 0, !dbg !2904
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !2905

if.then4:                                         ; preds = %if.end
  %11 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2906
  %12 = bitcast %struct.ModifierData* %11 to %struct.MultiresModifierData*, !dbg !2908
  store %struct.MultiresModifierData* %12, %struct.MultiresModifierData** %mmd, align 8, !dbg !2909
  br label %for.end, !dbg !2910

if.end5:                                          ; preds = %if.end
  br label %if.end6, !dbg !2911

if.end6:                                          ; preds = %if.end5, %for.body
  br label %for.inc, !dbg !2912

for.inc:                                          ; preds = %if.end6
  %13 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !2913
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %13, i32 0, i32 0, !dbg !2914
  %14 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !2914
  store %struct.ModifierData* %14, %struct.ModifierData** %md, align 8, !dbg !2915
  br label %for.cond, !dbg !2916, !llvm.loop !2917

for.end:                                          ; preds = %if.then4, %for.cond
  %15 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !2919
  %tobool7 = icmp ne %struct.MultiresModifierData* %15, null, !dbg !2919
  br i1 %tobool7, label %if.end10, label %land.lhs.true, !dbg !2921

land.lhs.true:                                    ; preds = %for.end
  %16 = load i8, i8* %use_first.addr, align 1, !dbg !2922
  %conv = zext i8 %16 to i32, !dbg !2922
  %tobool8 = icmp ne i32 %conv, 0, !dbg !2922
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !2923

if.then9:                                         ; preds = %land.lhs.true
  %17 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %firstmmd, align 8, !dbg !2924
  store %struct.MultiresModifierData* %17, %struct.MultiresModifierData** %retval, align 8, !dbg !2926
  br label %return, !dbg !2926

if.end10:                                         ; preds = %land.lhs.true, %for.end
  %18 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !2927
  store %struct.MultiresModifierData* %18, %struct.MultiresModifierData** %retval, align 8, !dbg !2928
  br label %return, !dbg !2928

return:                                           ; preds = %if.end10, %if.then9
  %19 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %retval, align 8, !dbg !2929
  ret %struct.MultiresModifierData* %19, !dbg !2929
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_set_tot_level(%struct.Object* %ob, %struct.MultiresModifierData* %mmd, i32 %lvl) #0 !dbg !2930 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %lvl.addr = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2933, metadata !DIExpression()), !dbg !2934
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !2935, metadata !DIExpression()), !dbg !2936
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !2937, metadata !DIExpression()), !dbg !2938
  %0 = load i32, i32* %lvl.addr, align 4, !dbg !2939
  %conv = trunc i32 %0 to i8, !dbg !2939
  %1 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2940
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %1, i32 0, i32 4, !dbg !2941
  store i8 %conv, i8* %totlvl, align 1, !dbg !2942
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2943
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !2945
  %3 = load i32, i32* %mode, align 8, !dbg !2945
  %cmp = icmp ne i32 %3, 2, !dbg !2946
  br i1 %cmp, label %if.then, label %if.end, !dbg !2947

if.then:                                          ; preds = %entry
  %4 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2948
  %lvl2 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %4, i32 0, i32 1, !dbg !2948
  %5 = load i8, i8* %lvl2, align 8, !dbg !2948
  %conv3 = zext i8 %5 to i32, !dbg !2948
  %6 = load i32, i32* %lvl.addr, align 4, !dbg !2948
  %cmp4 = icmp sgt i32 %conv3, %6, !dbg !2948
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !2948

cond.true:                                        ; preds = %if.then
  %7 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2948
  %lvl6 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %7, i32 0, i32 1, !dbg !2948
  %8 = load i8, i8* %lvl6, align 8, !dbg !2948
  %conv7 = zext i8 %8 to i32, !dbg !2948
  br label %cond.end, !dbg !2948

cond.false:                                       ; preds = %if.then
  %9 = load i32, i32* %lvl.addr, align 4, !dbg !2948
  br label %cond.end, !dbg !2948

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ %9, %cond.false ], !dbg !2948
  %cmp8 = icmp slt i32 %cond, 0, !dbg !2948
  br i1 %cmp8, label %cond.true10, label %cond.false11, !dbg !2948

cond.true10:                                      ; preds = %cond.end
  br label %cond.end42, !dbg !2948

cond.false11:                                     ; preds = %cond.end
  %10 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2948
  %lvl12 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %10, i32 0, i32 1, !dbg !2948
  %11 = load i8, i8* %lvl12, align 8, !dbg !2948
  %conv13 = zext i8 %11 to i32, !dbg !2948
  %12 = load i32, i32* %lvl.addr, align 4, !dbg !2948
  %cmp14 = icmp sgt i32 %conv13, %12, !dbg !2948
  br i1 %cmp14, label %cond.true16, label %cond.false19, !dbg !2948

cond.true16:                                      ; preds = %cond.false11
  %13 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2948
  %lvl17 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %13, i32 0, i32 1, !dbg !2948
  %14 = load i8, i8* %lvl17, align 8, !dbg !2948
  %conv18 = zext i8 %14 to i32, !dbg !2948
  br label %cond.end20, !dbg !2948

cond.false19:                                     ; preds = %cond.false11
  %15 = load i32, i32* %lvl.addr, align 4, !dbg !2948
  br label %cond.end20, !dbg !2948

cond.end20:                                       ; preds = %cond.false19, %cond.true16
  %cond21 = phi i32 [ %conv18, %cond.true16 ], [ %15, %cond.false19 ], !dbg !2948
  %16 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2948
  %totlvl22 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %16, i32 0, i32 4, !dbg !2948
  %17 = load i8, i8* %totlvl22, align 1, !dbg !2948
  %conv23 = zext i8 %17 to i32, !dbg !2948
  %cmp24 = icmp sgt i32 %cond21, %conv23, !dbg !2948
  br i1 %cmp24, label %cond.true26, label %cond.false29, !dbg !2948

cond.true26:                                      ; preds = %cond.end20
  %18 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2948
  %totlvl27 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %18, i32 0, i32 4, !dbg !2948
  %19 = load i8, i8* %totlvl27, align 1, !dbg !2948
  %conv28 = zext i8 %19 to i32, !dbg !2948
  br label %cond.end40, !dbg !2948

cond.false29:                                     ; preds = %cond.end20
  %20 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2948
  %lvl30 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %20, i32 0, i32 1, !dbg !2948
  %21 = load i8, i8* %lvl30, align 8, !dbg !2948
  %conv31 = zext i8 %21 to i32, !dbg !2948
  %22 = load i32, i32* %lvl.addr, align 4, !dbg !2948
  %cmp32 = icmp sgt i32 %conv31, %22, !dbg !2948
  br i1 %cmp32, label %cond.true34, label %cond.false37, !dbg !2948

cond.true34:                                      ; preds = %cond.false29
  %23 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2948
  %lvl35 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %23, i32 0, i32 1, !dbg !2948
  %24 = load i8, i8* %lvl35, align 8, !dbg !2948
  %conv36 = zext i8 %24 to i32, !dbg !2948
  br label %cond.end38, !dbg !2948

cond.false37:                                     ; preds = %cond.false29
  %25 = load i32, i32* %lvl.addr, align 4, !dbg !2948
  br label %cond.end38, !dbg !2948

cond.end38:                                       ; preds = %cond.false37, %cond.true34
  %cond39 = phi i32 [ %conv36, %cond.true34 ], [ %25, %cond.false37 ], !dbg !2948
  br label %cond.end40, !dbg !2948

cond.end40:                                       ; preds = %cond.end38, %cond.true26
  %cond41 = phi i32 [ %conv28, %cond.true26 ], [ %cond39, %cond.end38 ], !dbg !2948
  br label %cond.end42, !dbg !2948

cond.end42:                                       ; preds = %cond.end40, %cond.true10
  %cond43 = phi i32 [ 0, %cond.true10 ], [ %cond41, %cond.end40 ], !dbg !2948
  %conv44 = trunc i32 %cond43 to i8, !dbg !2948
  %26 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2949
  %lvl45 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %26, i32 0, i32 1, !dbg !2950
  store i8 %conv44, i8* %lvl45, align 8, !dbg !2951
  br label %if.end, !dbg !2949

if.end:                                           ; preds = %cond.end42, %entry
  %27 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2952
  %sculptlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %27, i32 0, i32 2, !dbg !2952
  %28 = load i8, i8* %sculptlvl, align 1, !dbg !2952
  %conv46 = zext i8 %28 to i32, !dbg !2952
  %29 = load i32, i32* %lvl.addr, align 4, !dbg !2952
  %cmp47 = icmp sgt i32 %conv46, %29, !dbg !2952
  br i1 %cmp47, label %cond.true49, label %cond.false52, !dbg !2952

cond.true49:                                      ; preds = %if.end
  %30 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2952
  %sculptlvl50 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %30, i32 0, i32 2, !dbg !2952
  %31 = load i8, i8* %sculptlvl50, align 1, !dbg !2952
  %conv51 = zext i8 %31 to i32, !dbg !2952
  br label %cond.end53, !dbg !2952

cond.false52:                                     ; preds = %if.end
  %32 = load i32, i32* %lvl.addr, align 4, !dbg !2952
  br label %cond.end53, !dbg !2952

cond.end53:                                       ; preds = %cond.false52, %cond.true49
  %cond54 = phi i32 [ %conv51, %cond.true49 ], [ %32, %cond.false52 ], !dbg !2952
  %cmp55 = icmp slt i32 %cond54, 0, !dbg !2952
  br i1 %cmp55, label %cond.true57, label %cond.false58, !dbg !2952

cond.true57:                                      ; preds = %cond.end53
  br label %cond.end89, !dbg !2952

cond.false58:                                     ; preds = %cond.end53
  %33 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2952
  %sculptlvl59 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %33, i32 0, i32 2, !dbg !2952
  %34 = load i8, i8* %sculptlvl59, align 1, !dbg !2952
  %conv60 = zext i8 %34 to i32, !dbg !2952
  %35 = load i32, i32* %lvl.addr, align 4, !dbg !2952
  %cmp61 = icmp sgt i32 %conv60, %35, !dbg !2952
  br i1 %cmp61, label %cond.true63, label %cond.false66, !dbg !2952

cond.true63:                                      ; preds = %cond.false58
  %36 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2952
  %sculptlvl64 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %36, i32 0, i32 2, !dbg !2952
  %37 = load i8, i8* %sculptlvl64, align 1, !dbg !2952
  %conv65 = zext i8 %37 to i32, !dbg !2952
  br label %cond.end67, !dbg !2952

cond.false66:                                     ; preds = %cond.false58
  %38 = load i32, i32* %lvl.addr, align 4, !dbg !2952
  br label %cond.end67, !dbg !2952

cond.end67:                                       ; preds = %cond.false66, %cond.true63
  %cond68 = phi i32 [ %conv65, %cond.true63 ], [ %38, %cond.false66 ], !dbg !2952
  %39 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2952
  %totlvl69 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %39, i32 0, i32 4, !dbg !2952
  %40 = load i8, i8* %totlvl69, align 1, !dbg !2952
  %conv70 = zext i8 %40 to i32, !dbg !2952
  %cmp71 = icmp sgt i32 %cond68, %conv70, !dbg !2952
  br i1 %cmp71, label %cond.true73, label %cond.false76, !dbg !2952

cond.true73:                                      ; preds = %cond.end67
  %41 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2952
  %totlvl74 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %41, i32 0, i32 4, !dbg !2952
  %42 = load i8, i8* %totlvl74, align 1, !dbg !2952
  %conv75 = zext i8 %42 to i32, !dbg !2952
  br label %cond.end87, !dbg !2952

cond.false76:                                     ; preds = %cond.end67
  %43 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2952
  %sculptlvl77 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %43, i32 0, i32 2, !dbg !2952
  %44 = load i8, i8* %sculptlvl77, align 1, !dbg !2952
  %conv78 = zext i8 %44 to i32, !dbg !2952
  %45 = load i32, i32* %lvl.addr, align 4, !dbg !2952
  %cmp79 = icmp sgt i32 %conv78, %45, !dbg !2952
  br i1 %cmp79, label %cond.true81, label %cond.false84, !dbg !2952

cond.true81:                                      ; preds = %cond.false76
  %46 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2952
  %sculptlvl82 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %46, i32 0, i32 2, !dbg !2952
  %47 = load i8, i8* %sculptlvl82, align 1, !dbg !2952
  %conv83 = zext i8 %47 to i32, !dbg !2952
  br label %cond.end85, !dbg !2952

cond.false84:                                     ; preds = %cond.false76
  %48 = load i32, i32* %lvl.addr, align 4, !dbg !2952
  br label %cond.end85, !dbg !2952

cond.end85:                                       ; preds = %cond.false84, %cond.true81
  %cond86 = phi i32 [ %conv83, %cond.true81 ], [ %48, %cond.false84 ], !dbg !2952
  br label %cond.end87, !dbg !2952

cond.end87:                                       ; preds = %cond.end85, %cond.true73
  %cond88 = phi i32 [ %conv75, %cond.true73 ], [ %cond86, %cond.end85 ], !dbg !2952
  br label %cond.end89, !dbg !2952

cond.end89:                                       ; preds = %cond.end87, %cond.true57
  %cond90 = phi i32 [ 0, %cond.true57 ], [ %cond88, %cond.end87 ], !dbg !2952
  %conv91 = trunc i32 %cond90 to i8, !dbg !2952
  %49 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2953
  %sculptlvl92 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %49, i32 0, i32 2, !dbg !2954
  store i8 %conv91, i8* %sculptlvl92, align 1, !dbg !2955
  %50 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2956
  %renderlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %50, i32 0, i32 3, !dbg !2956
  %51 = load i8, i8* %renderlvl, align 2, !dbg !2956
  %conv93 = zext i8 %51 to i32, !dbg !2956
  %52 = load i32, i32* %lvl.addr, align 4, !dbg !2956
  %cmp94 = icmp sgt i32 %conv93, %52, !dbg !2956
  br i1 %cmp94, label %cond.true96, label %cond.false99, !dbg !2956

cond.true96:                                      ; preds = %cond.end89
  %53 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2956
  %renderlvl97 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %53, i32 0, i32 3, !dbg !2956
  %54 = load i8, i8* %renderlvl97, align 2, !dbg !2956
  %conv98 = zext i8 %54 to i32, !dbg !2956
  br label %cond.end100, !dbg !2956

cond.false99:                                     ; preds = %cond.end89
  %55 = load i32, i32* %lvl.addr, align 4, !dbg !2956
  br label %cond.end100, !dbg !2956

cond.end100:                                      ; preds = %cond.false99, %cond.true96
  %cond101 = phi i32 [ %conv98, %cond.true96 ], [ %55, %cond.false99 ], !dbg !2956
  %cmp102 = icmp slt i32 %cond101, 0, !dbg !2956
  br i1 %cmp102, label %cond.true104, label %cond.false105, !dbg !2956

cond.true104:                                     ; preds = %cond.end100
  br label %cond.end136, !dbg !2956

cond.false105:                                    ; preds = %cond.end100
  %56 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2956
  %renderlvl106 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %56, i32 0, i32 3, !dbg !2956
  %57 = load i8, i8* %renderlvl106, align 2, !dbg !2956
  %conv107 = zext i8 %57 to i32, !dbg !2956
  %58 = load i32, i32* %lvl.addr, align 4, !dbg !2956
  %cmp108 = icmp sgt i32 %conv107, %58, !dbg !2956
  br i1 %cmp108, label %cond.true110, label %cond.false113, !dbg !2956

cond.true110:                                     ; preds = %cond.false105
  %59 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2956
  %renderlvl111 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %59, i32 0, i32 3, !dbg !2956
  %60 = load i8, i8* %renderlvl111, align 2, !dbg !2956
  %conv112 = zext i8 %60 to i32, !dbg !2956
  br label %cond.end114, !dbg !2956

cond.false113:                                    ; preds = %cond.false105
  %61 = load i32, i32* %lvl.addr, align 4, !dbg !2956
  br label %cond.end114, !dbg !2956

cond.end114:                                      ; preds = %cond.false113, %cond.true110
  %cond115 = phi i32 [ %conv112, %cond.true110 ], [ %61, %cond.false113 ], !dbg !2956
  %62 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2956
  %totlvl116 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %62, i32 0, i32 4, !dbg !2956
  %63 = load i8, i8* %totlvl116, align 1, !dbg !2956
  %conv117 = zext i8 %63 to i32, !dbg !2956
  %cmp118 = icmp sgt i32 %cond115, %conv117, !dbg !2956
  br i1 %cmp118, label %cond.true120, label %cond.false123, !dbg !2956

cond.true120:                                     ; preds = %cond.end114
  %64 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2956
  %totlvl121 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %64, i32 0, i32 4, !dbg !2956
  %65 = load i8, i8* %totlvl121, align 1, !dbg !2956
  %conv122 = zext i8 %65 to i32, !dbg !2956
  br label %cond.end134, !dbg !2956

cond.false123:                                    ; preds = %cond.end114
  %66 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2956
  %renderlvl124 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %66, i32 0, i32 3, !dbg !2956
  %67 = load i8, i8* %renderlvl124, align 2, !dbg !2956
  %conv125 = zext i8 %67 to i32, !dbg !2956
  %68 = load i32, i32* %lvl.addr, align 4, !dbg !2956
  %cmp126 = icmp sgt i32 %conv125, %68, !dbg !2956
  br i1 %cmp126, label %cond.true128, label %cond.false131, !dbg !2956

cond.true128:                                     ; preds = %cond.false123
  %69 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2956
  %renderlvl129 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %69, i32 0, i32 3, !dbg !2956
  %70 = load i8, i8* %renderlvl129, align 2, !dbg !2956
  %conv130 = zext i8 %70 to i32, !dbg !2956
  br label %cond.end132, !dbg !2956

cond.false131:                                    ; preds = %cond.false123
  %71 = load i32, i32* %lvl.addr, align 4, !dbg !2956
  br label %cond.end132, !dbg !2956

cond.end132:                                      ; preds = %cond.false131, %cond.true128
  %cond133 = phi i32 [ %conv130, %cond.true128 ], [ %71, %cond.false131 ], !dbg !2956
  br label %cond.end134, !dbg !2956

cond.end134:                                      ; preds = %cond.end132, %cond.true120
  %cond135 = phi i32 [ %conv122, %cond.true120 ], [ %cond133, %cond.end132 ], !dbg !2956
  br label %cond.end136, !dbg !2956

cond.end136:                                      ; preds = %cond.end134, %cond.true104
  %cond137 = phi i32 [ 0, %cond.true104 ], [ %cond135, %cond.end134 ], !dbg !2956
  %conv138 = trunc i32 %cond137 to i8, !dbg !2956
  %72 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !2957
  %renderlvl139 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %72, i32 0, i32 3, !dbg !2958
  store i8 %conv138, i8* %renderlvl139, align 2, !dbg !2959
  ret void, !dbg !2960
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_mark_as_modified(%struct.Object* %ob, i32 %flags) #0 !dbg !2961 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2964, metadata !DIExpression()), !dbg !2965
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !2966, metadata !DIExpression()), !dbg !2967
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2968
  %tobool = icmp ne %struct.Object* %0, null, !dbg !2968
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2970

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2971
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 120, !dbg !2972
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !2972
  %tobool1 = icmp ne %struct.DerivedMesh* %2, null, !dbg !2971
  br i1 %tobool1, label %if.then, label %if.end, !dbg !2973

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2974
  %derivedFinal2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 120, !dbg !2975
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal2, align 8, !dbg !2975
  %5 = load i32, i32* %flags.addr, align 4, !dbg !2976
  call void @multires_dm_mark_as_modified(%struct.DerivedMesh* %4, i32 %5), !dbg !2977
  br label %if.end, !dbg !2977

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !2978
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_dm_mark_as_modified(%struct.DerivedMesh* %dm, i32 %flags) #0 !dbg !2979 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %flags.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2982, metadata !DIExpression()), !dbg !2983
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !2984, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !2986, metadata !DIExpression()), !dbg !2987
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2988
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !2989
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !2987
  %2 = load i32, i32* %flags.addr, align 4, !dbg !2990
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !2991
  %multires = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 20, !dbg !2992
  %modified_flags = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires, i32 0, i32 6, !dbg !2993
  %4 = load i32, i32* %modified_flags, align 8, !dbg !2994
  %or = or i32 %4, %2, !dbg !2994
  store i32 %or, i32* %modified_flags, align 8, !dbg !2994
  ret void, !dbg !2995
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_force_update(%struct.Object* %ob) #0 !dbg !2996 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2999, metadata !DIExpression()), !dbg !3000
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3001
  %tobool = icmp ne %struct.Object* %0, null, !dbg !3001
  br i1 %tobool, label %if.then, label %if.end9, !dbg !3003

if.then:                                          ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3004
  call void @BKE_object_free_derived_caches(%struct.Object* %1), !dbg !3006
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3007
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 2, !dbg !3009
  %3 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !3009
  %tobool1 = icmp ne %struct.SculptSession* %3, null, !dbg !3007
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !3010

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3011
  %sculpt2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 2, !dbg !3012
  %5 = load %struct.SculptSession*, %struct.SculptSession** %sculpt2, align 8, !dbg !3012
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 15, !dbg !3013
  %6 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !3013
  %tobool3 = icmp ne %struct.PBVH* %6, null, !dbg !3011
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !3014

if.then4:                                         ; preds = %land.lhs.true
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3015
  %sculpt5 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 2, !dbg !3017
  %8 = load %struct.SculptSession*, %struct.SculptSession** %sculpt5, align 8, !dbg !3017
  %pbvh6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %8, i32 0, i32 15, !dbg !3018
  %9 = load %struct.PBVH*, %struct.PBVH** %pbvh6, align 8, !dbg !3018
  call void @BKE_pbvh_free(%struct.PBVH* %9), !dbg !3019
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3020
  %sculpt7 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 2, !dbg !3021
  %11 = load %struct.SculptSession*, %struct.SculptSession** %sculpt7, align 8, !dbg !3021
  %pbvh8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %11, i32 0, i32 15, !dbg !3022
  store %struct.PBVH* null, %struct.PBVH** %pbvh8, align 8, !dbg !3023
  br label %if.end, !dbg !3024

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end9, !dbg !3025

if.end9:                                          ; preds = %if.end, %entry
  ret void, !dbg !3026
}

declare dso_local void @BKE_object_free_derived_caches(%struct.Object*) #2

declare dso_local void @BKE_pbvh_free(%struct.PBVH*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_force_external_reload(%struct.Object* %ob) #0 !dbg !3027 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3028, metadata !DIExpression()), !dbg !3029
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3030, metadata !DIExpression()), !dbg !3031
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3032
  %call = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %0), !dbg !3033
  store %struct.Mesh* %call, %struct.Mesh** %me, align 8, !dbg !3031
  %1 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3034
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 25, !dbg !3035
  %2 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3036
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 0, !dbg !3037
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3038
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 31, !dbg !3039
  %4 = load i32, i32* %totloop, align 4, !dbg !3039
  call void @CustomData_external_reload(%struct.CustomData* %ldata, %struct.ID* %id, i64 524288, i32 %4), !dbg !3040
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3041
  call void @multires_force_update(%struct.Object* %5), !dbg !3042
  ret void, !dbg !3043
}

declare dso_local %struct.Mesh* @BKE_mesh_from_object(%struct.Object*) #2

declare dso_local void @CustomData_external_reload(%struct.CustomData*, %struct.ID*, i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_force_render_update(%struct.Object* %ob) #0 !dbg !3044 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3045, metadata !DIExpression()), !dbg !3046
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3047
  %tobool = icmp ne %struct.Object* %0, null, !dbg !3047
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3049

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3050
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 27, !dbg !3051
  %2 = load i32, i32* %mode, align 8, !dbg !3051
  %and = and i32 %2, 2, !dbg !3052
  %tobool1 = icmp ne i32 %and, 0, !dbg !3052
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !3053

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3054
  %call = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %3, i32 29), !dbg !3055
  %tobool3 = icmp ne %struct.ModifierData* %call, null, !dbg !3055
  br i1 %tobool3, label %if.then, label %if.end, !dbg !3056

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3057
  call void @multires_force_update(%struct.Object* %4), !dbg !3058
  br label %if.end, !dbg !3058

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !3059
}

declare dso_local %struct.ModifierData* @modifiers_findByType(%struct.Object*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @multiresModifier_reshapeFromDM(%struct.Scene* %scene, %struct.MultiresModifierData* %mmd, %struct.Object* %ob, %struct.DerivedMesh* %srcdm) #0 !dbg !3060 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %srcdm.addr = alloca %struct.DerivedMesh*, align 8
  %mrdm = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3063, metadata !DIExpression()), !dbg !3064
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !3065, metadata !DIExpression()), !dbg !3066
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3067, metadata !DIExpression()), !dbg !3068
  store %struct.DerivedMesh* %srcdm, %struct.DerivedMesh** %srcdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %srcdm.addr, metadata !3069, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %mrdm, metadata !3071, metadata !DIExpression()), !dbg !3072
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3073
  %1 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3074
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3075
  %call = call %struct.DerivedMesh* @get_multires_dm(%struct.Scene* %0, %struct.MultiresModifierData* %1, %struct.Object* %2), !dbg !3076
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %mrdm, align 8, !dbg !3072
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3077
  %tobool = icmp ne %struct.DerivedMesh* %3, null, !dbg !3077
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3079

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %srcdm.addr, align 8, !dbg !3080
  %tobool1 = icmp ne %struct.DerivedMesh* %4, null, !dbg !3080
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !3081

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3082
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 23, !dbg !3083
  %6 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !3083
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3084
  %call3 = call i32 %6(%struct.DerivedMesh* %7), !dbg !3082
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %srcdm.addr, align 8, !dbg !3085
  %getNumVerts4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 23, !dbg !3086
  %9 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts4, align 8, !dbg !3086
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %srcdm.addr, align 8, !dbg !3087
  %call5 = call i32 %9(%struct.DerivedMesh* %10), !dbg !3085
  %cmp = icmp eq i32 %call3, %call5, !dbg !3088
  br i1 %cmp, label %if.then, label %if.end, !dbg !3089

if.then:                                          ; preds = %land.lhs.true2
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3090
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %srcdm.addr, align 8, !dbg !3092
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 31, !dbg !3093
  %13 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !3093
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %srcdm.addr, align 8, !dbg !3094
  %call6 = call %struct.MVert* %13(%struct.DerivedMesh* %14), !dbg !3092
  call void @multires_mvert_to_ss(%struct.DerivedMesh* %11, %struct.MVert* %call6), !dbg !3095
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3096
  call void @multires_dm_mark_as_modified(%struct.DerivedMesh* %15, i32 1), !dbg !3097
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3098
  call void @multires_force_update(%struct.Object* %16), !dbg !3099
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3100
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 95, !dbg !3101
  %18 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !3101
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3102
  call void %18(%struct.DerivedMesh* %19), !dbg !3100
  store i32 1, i32* %retval, align 4, !dbg !3103
  br label %return, !dbg !3103

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3104
  %tobool7 = icmp ne %struct.DerivedMesh* %20, null, !dbg !3104
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !3106

if.then8:                                         ; preds = %if.end
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3107
  %release9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 95, !dbg !3108
  %22 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release9, align 8, !dbg !3108
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %mrdm, align 8, !dbg !3109
  call void %22(%struct.DerivedMesh* %23), !dbg !3107
  br label %if.end10, !dbg !3107

if.end10:                                         ; preds = %if.then8, %if.end
  store i32 0, i32* %retval, align 4, !dbg !3110
  br label %return, !dbg !3110

return:                                           ; preds = %if.end10, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !3111
  ret i32 %24, !dbg !3111
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_mvert_to_ss(%struct.DerivedMesh* %dm, %struct.MVert* %mvert) #0 !dbg !3112 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %vd = alloca %struct.CCGElem*, align 8
  %key = alloca %struct.CCGKey, align 4
  %index = alloca i32, align 4
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totface = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %i = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %x62 = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3115, metadata !DIExpression()), !dbg !3116
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !3117, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !3119, metadata !DIExpression()), !dbg !3120
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3121
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !3122
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3120
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !3123, metadata !DIExpression()), !dbg !3127
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3128
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !3129
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !3129
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !3127
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vd, metadata !3130, metadata !DIExpression()), !dbg !3131
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !3132, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !3137, metadata !DIExpression()), !dbg !3138
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !3139, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !3141, metadata !DIExpression()), !dbg !3142
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !3143, metadata !DIExpression()), !dbg !3144
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3145
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %4), !dbg !3146
  store i32 %call, i32* %gridSize, align 4, !dbg !3144
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !3147, metadata !DIExpression()), !dbg !3148
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3149
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %5), !dbg !3150
  store i32 %call2, i32* %edgeSize, align 4, !dbg !3148
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3151, metadata !DIExpression()), !dbg !3152
  store i32 0, i32* %i, align 4, !dbg !3152
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3153
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 68, !dbg !3154
  %7 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !3154
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3155
  call void %7(%struct.DerivedMesh* %8, %struct.CCGKey* %key), !dbg !3153
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3156
  %call3 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %9), !dbg !3157
  store i32 %call3, i32* %totface, align 4, !dbg !3158
  store i32 0, i32* %index, align 4, !dbg !3159
  br label %for.cond, !dbg !3161

for.cond:                                         ; preds = %for.inc53, %entry
  %10 = load i32, i32* %index, align 4, !dbg !3162
  %11 = load i32, i32* %totface, align 4, !dbg !3164
  %cmp = icmp slt i32 %10, %11, !dbg !3165
  br i1 %cmp, label %for.body, label %for.end55, !dbg !3166

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !3167, metadata !DIExpression()), !dbg !3171
  %12 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3172
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %12, i32 0, i32 7, !dbg !3173
  %13 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !3173
  %14 = load i32, i32* %index, align 4, !dbg !3174
  %idxprom = sext i32 %14 to i64, !dbg !3172
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %13, i64 %idxprom, !dbg !3172
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !3175
  %15 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !3175
  store %struct.CCGFace* %15, %struct.CCGFace** %f, align 8, !dbg !3171
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3176, metadata !DIExpression()), !dbg !3177
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3178, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.declare(metadata i32* %S, metadata !3180, metadata !DIExpression()), !dbg !3181
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !3182, metadata !DIExpression()), !dbg !3183
  %16 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3184
  %call4 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %16), !dbg !3185
  store i32 %call4, i32* %numVerts, align 4, !dbg !3183
  %17 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3186
  %call5 = call i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace* %17), !dbg !3187
  %18 = bitcast i8* %call5 to %struct.CCGElem*, !dbg !3187
  store %struct.CCGElem* %18, %struct.CCGElem** %vd, align 8, !dbg !3188
  %19 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !3189
  %call6 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %19), !dbg !3190
  %20 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3191
  %21 = load i32, i32* %i, align 4, !dbg !3192
  %idxprom7 = sext i32 %21 to i64, !dbg !3191
  %arrayidx8 = getelementptr inbounds %struct.MVert, %struct.MVert* %20, i64 %idxprom7, !dbg !3191
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx8, i32 0, i32 0, !dbg !3193
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3191
  call void @copy_v3_v3(float* %call6, float* %arraydecay), !dbg !3194
  %22 = load i32, i32* %i, align 4, !dbg !3195
  %inc = add nsw i32 %22, 1, !dbg !3195
  store i32 %inc, i32* %i, align 4, !dbg !3195
  store i32 0, i32* %S, align 4, !dbg !3196
  br label %for.cond9, !dbg !3198

for.cond9:                                        ; preds = %for.inc23, %for.body
  %23 = load i32, i32* %S, align 4, !dbg !3199
  %24 = load i32, i32* %numVerts, align 4, !dbg !3201
  %cmp10 = icmp slt i32 %23, %24, !dbg !3202
  br i1 %cmp10, label %for.body11, label %for.end25, !dbg !3203

for.body11:                                       ; preds = %for.cond9
  store i32 1, i32* %x, align 4, !dbg !3204
  br label %for.cond12, !dbg !3207

for.cond12:                                       ; preds = %for.inc, %for.body11
  %25 = load i32, i32* %x, align 4, !dbg !3208
  %26 = load i32, i32* %gridSize, align 4, !dbg !3210
  %sub = sub nsw i32 %26, 1, !dbg !3211
  %cmp13 = icmp slt i32 %25, %sub, !dbg !3212
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !3213

for.body14:                                       ; preds = %for.cond12
  %27 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3214
  %28 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3216
  %29 = load i32, i32* %S, align 4, !dbg !3217
  %30 = load i32, i32* %x, align 4, !dbg !3218
  %call15 = call i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf* %27, %struct.CCGFace* %28, i32 %29, i32 %30), !dbg !3219
  %31 = bitcast i8* %call15 to %struct.CCGElem*, !dbg !3219
  store %struct.CCGElem* %31, %struct.CCGElem** %vd, align 8, !dbg !3220
  %32 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !3221
  %call16 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %32), !dbg !3222
  %33 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3223
  %34 = load i32, i32* %i, align 4, !dbg !3224
  %idxprom17 = sext i32 %34 to i64, !dbg !3223
  %arrayidx18 = getelementptr inbounds %struct.MVert, %struct.MVert* %33, i64 %idxprom17, !dbg !3223
  %co19 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx18, i32 0, i32 0, !dbg !3225
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %co19, i64 0, i64 0, !dbg !3223
  call void @copy_v3_v3(float* %call16, float* %arraydecay20), !dbg !3226
  br label %for.inc, !dbg !3227

for.inc:                                          ; preds = %for.body14
  %35 = load i32, i32* %x, align 4, !dbg !3228
  %inc21 = add nsw i32 %35, 1, !dbg !3228
  store i32 %inc21, i32* %x, align 4, !dbg !3228
  %36 = load i32, i32* %i, align 4, !dbg !3229
  %inc22 = add nsw i32 %36, 1, !dbg !3229
  store i32 %inc22, i32* %i, align 4, !dbg !3229
  br label %for.cond12, !dbg !3230, !llvm.loop !3231

for.end:                                          ; preds = %for.cond12
  br label %for.inc23, !dbg !3233

for.inc23:                                        ; preds = %for.end
  %37 = load i32, i32* %S, align 4, !dbg !3234
  %inc24 = add nsw i32 %37, 1, !dbg !3234
  store i32 %inc24, i32* %S, align 4, !dbg !3234
  br label %for.cond9, !dbg !3235, !llvm.loop !3236

for.end25:                                        ; preds = %for.cond9
  store i32 0, i32* %S, align 4, !dbg !3238
  br label %for.cond26, !dbg !3240

for.cond26:                                       ; preds = %for.inc50, %for.end25
  %38 = load i32, i32* %S, align 4, !dbg !3241
  %39 = load i32, i32* %numVerts, align 4, !dbg !3243
  %cmp27 = icmp slt i32 %38, %39, !dbg !3244
  br i1 %cmp27, label %for.body28, label %for.end52, !dbg !3245

for.body28:                                       ; preds = %for.cond26
  store i32 1, i32* %y, align 4, !dbg !3246
  br label %for.cond29, !dbg !3249

for.cond29:                                       ; preds = %for.inc47, %for.body28
  %40 = load i32, i32* %y, align 4, !dbg !3250
  %41 = load i32, i32* %gridSize, align 4, !dbg !3252
  %sub30 = sub nsw i32 %41, 1, !dbg !3253
  %cmp31 = icmp slt i32 %40, %sub30, !dbg !3254
  br i1 %cmp31, label %for.body32, label %for.end49, !dbg !3255

for.body32:                                       ; preds = %for.cond29
  store i32 1, i32* %x, align 4, !dbg !3256
  br label %for.cond33, !dbg !3259

for.cond33:                                       ; preds = %for.inc43, %for.body32
  %42 = load i32, i32* %x, align 4, !dbg !3260
  %43 = load i32, i32* %gridSize, align 4, !dbg !3262
  %sub34 = sub nsw i32 %43, 1, !dbg !3263
  %cmp35 = icmp slt i32 %42, %sub34, !dbg !3264
  br i1 %cmp35, label %for.body36, label %for.end46, !dbg !3265

for.body36:                                       ; preds = %for.cond33
  %44 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3266
  %45 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3268
  %46 = load i32, i32* %S, align 4, !dbg !3269
  %47 = load i32, i32* %x, align 4, !dbg !3270
  %48 = load i32, i32* %y, align 4, !dbg !3271
  %call37 = call i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf* %44, %struct.CCGFace* %45, i32 %46, i32 %47, i32 %48), !dbg !3272
  %49 = bitcast i8* %call37 to %struct.CCGElem*, !dbg !3272
  store %struct.CCGElem* %49, %struct.CCGElem** %vd, align 8, !dbg !3273
  %50 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !3274
  %call38 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %50), !dbg !3275
  %51 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3276
  %52 = load i32, i32* %i, align 4, !dbg !3277
  %idxprom39 = sext i32 %52 to i64, !dbg !3276
  %arrayidx40 = getelementptr inbounds %struct.MVert, %struct.MVert* %51, i64 %idxprom39, !dbg !3276
  %co41 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx40, i32 0, i32 0, !dbg !3278
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !3276
  call void @copy_v3_v3(float* %call38, float* %arraydecay42), !dbg !3279
  br label %for.inc43, !dbg !3280

for.inc43:                                        ; preds = %for.body36
  %53 = load i32, i32* %x, align 4, !dbg !3281
  %inc44 = add nsw i32 %53, 1, !dbg !3281
  store i32 %inc44, i32* %x, align 4, !dbg !3281
  %54 = load i32, i32* %i, align 4, !dbg !3282
  %inc45 = add nsw i32 %54, 1, !dbg !3282
  store i32 %inc45, i32* %i, align 4, !dbg !3282
  br label %for.cond33, !dbg !3283, !llvm.loop !3284

for.end46:                                        ; preds = %for.cond33
  br label %for.inc47, !dbg !3286

for.inc47:                                        ; preds = %for.end46
  %55 = load i32, i32* %y, align 4, !dbg !3287
  %inc48 = add nsw i32 %55, 1, !dbg !3287
  store i32 %inc48, i32* %y, align 4, !dbg !3287
  br label %for.cond29, !dbg !3288, !llvm.loop !3289

for.end49:                                        ; preds = %for.cond29
  br label %for.inc50, !dbg !3291

for.inc50:                                        ; preds = %for.end49
  %56 = load i32, i32* %S, align 4, !dbg !3292
  %inc51 = add nsw i32 %56, 1, !dbg !3292
  store i32 %inc51, i32* %S, align 4, !dbg !3292
  br label %for.cond26, !dbg !3293, !llvm.loop !3294

for.end52:                                        ; preds = %for.cond26
  br label %for.inc53, !dbg !3296

for.inc53:                                        ; preds = %for.end52
  %57 = load i32, i32* %index, align 4, !dbg !3297
  %inc54 = add nsw i32 %57, 1, !dbg !3297
  store i32 %inc54, i32* %index, align 4, !dbg !3297
  br label %for.cond, !dbg !3298, !llvm.loop !3299

for.end55:                                        ; preds = %for.cond
  %58 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3301
  %call56 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %58), !dbg !3302
  store i32 %call56, i32* %totedge, align 4, !dbg !3303
  store i32 0, i32* %index, align 4, !dbg !3304
  br label %for.cond57, !dbg !3306

for.cond57:                                       ; preds = %for.inc77, %for.end55
  %59 = load i32, i32* %index, align 4, !dbg !3307
  %60 = load i32, i32* %totedge, align 4, !dbg !3309
  %cmp58 = icmp slt i32 %59, %60, !dbg !3310
  br i1 %cmp58, label %for.body59, label %for.end79, !dbg !3311

for.body59:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !3312, metadata !DIExpression()), !dbg !3316
  %61 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3317
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %61, i32 0, i32 6, !dbg !3318
  %62 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !3318
  %63 = load i32, i32* %index, align 4, !dbg !3319
  %idxprom60 = sext i32 %63 to i64, !dbg !3317
  %arrayidx61 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %62, i64 %idxprom60, !dbg !3317
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx61, i32 0, i32 2, !dbg !3320
  %64 = load %struct.CCGEdge*, %struct.CCGEdge** %edge, align 8, !dbg !3320
  store %struct.CCGEdge* %64, %struct.CCGEdge** %e, align 8, !dbg !3316
  call void @llvm.dbg.declare(metadata i32* %x62, metadata !3321, metadata !DIExpression()), !dbg !3322
  store i32 1, i32* %x62, align 4, !dbg !3323
  br label %for.cond63, !dbg !3325

for.cond63:                                       ; preds = %for.inc73, %for.body59
  %65 = load i32, i32* %x62, align 4, !dbg !3326
  %66 = load i32, i32* %edgeSize, align 4, !dbg !3328
  %sub64 = sub nsw i32 %66, 1, !dbg !3329
  %cmp65 = icmp slt i32 %65, %sub64, !dbg !3330
  br i1 %cmp65, label %for.body66, label %for.end76, !dbg !3331

for.body66:                                       ; preds = %for.cond63
  %67 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3332
  %68 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !3334
  %69 = load i32, i32* %x62, align 4, !dbg !3335
  %call67 = call i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf* %67, %struct.CCGEdge* %68, i32 %69), !dbg !3336
  %70 = bitcast i8* %call67 to %struct.CCGElem*, !dbg !3336
  store %struct.CCGElem* %70, %struct.CCGElem** %vd, align 8, !dbg !3337
  %71 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !3338
  %call68 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %71), !dbg !3339
  %72 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3340
  %73 = load i32, i32* %i, align 4, !dbg !3341
  %idxprom69 = sext i32 %73 to i64, !dbg !3340
  %arrayidx70 = getelementptr inbounds %struct.MVert, %struct.MVert* %72, i64 %idxprom69, !dbg !3340
  %co71 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx70, i32 0, i32 0, !dbg !3342
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %co71, i64 0, i64 0, !dbg !3340
  call void @copy_v3_v3(float* %call68, float* %arraydecay72), !dbg !3343
  br label %for.inc73, !dbg !3344

for.inc73:                                        ; preds = %for.body66
  %74 = load i32, i32* %x62, align 4, !dbg !3345
  %inc74 = add nsw i32 %74, 1, !dbg !3345
  store i32 %inc74, i32* %x62, align 4, !dbg !3345
  %75 = load i32, i32* %i, align 4, !dbg !3346
  %inc75 = add nsw i32 %75, 1, !dbg !3346
  store i32 %inc75, i32* %i, align 4, !dbg !3346
  br label %for.cond63, !dbg !3347, !llvm.loop !3348

for.end76:                                        ; preds = %for.cond63
  br label %for.inc77, !dbg !3350

for.inc77:                                        ; preds = %for.end76
  %76 = load i32, i32* %index, align 4, !dbg !3351
  %inc78 = add nsw i32 %76, 1, !dbg !3351
  store i32 %inc78, i32* %index, align 4, !dbg !3351
  br label %for.cond57, !dbg !3352, !llvm.loop !3353

for.end79:                                        ; preds = %for.cond57
  %77 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3355
  %call80 = call i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf* %77), !dbg !3356
  store i32 %call80, i32* %totvert, align 4, !dbg !3357
  store i32 0, i32* %index, align 4, !dbg !3358
  br label %for.cond81, !dbg !3360

for.cond81:                                       ; preds = %for.inc93, %for.end79
  %78 = load i32, i32* %index, align 4, !dbg !3361
  %79 = load i32, i32* %totvert, align 4, !dbg !3363
  %cmp82 = icmp slt i32 %78, %79, !dbg !3364
  br i1 %cmp82, label %for.body83, label %for.end95, !dbg !3365

for.body83:                                       ; preds = %for.cond81
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !3366, metadata !DIExpression()), !dbg !3370
  %80 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3371
  %vertMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %80, i32 0, i32 5, !dbg !3372
  %81 = load %struct.anon*, %struct.anon** %vertMap, align 8, !dbg !3372
  %82 = load i32, i32* %index, align 4, !dbg !3373
  %idxprom84 = sext i32 %82 to i64, !dbg !3371
  %arrayidx85 = getelementptr inbounds %struct.anon, %struct.anon* %81, i64 %idxprom84, !dbg !3371
  %vert = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx85, i32 0, i32 1, !dbg !3374
  %83 = load %struct.CCGVert*, %struct.CCGVert** %vert, align 8, !dbg !3374
  store %struct.CCGVert* %83, %struct.CCGVert** %v, align 8, !dbg !3370
  %84 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3375
  %85 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !3376
  %call86 = call i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %84, %struct.CCGVert* %85), !dbg !3377
  %86 = bitcast i8* %call86 to %struct.CCGElem*, !dbg !3377
  store %struct.CCGElem* %86, %struct.CCGElem** %vd, align 8, !dbg !3378
  %87 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !3379
  %call87 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %87), !dbg !3380
  %88 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !3381
  %89 = load i32, i32* %i, align 4, !dbg !3382
  %idxprom88 = sext i32 %89 to i64, !dbg !3381
  %arrayidx89 = getelementptr inbounds %struct.MVert, %struct.MVert* %88, i64 %idxprom88, !dbg !3381
  %co90 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx89, i32 0, i32 0, !dbg !3383
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %co90, i64 0, i64 0, !dbg !3381
  call void @copy_v3_v3(float* %call87, float* %arraydecay91), !dbg !3384
  %90 = load i32, i32* %i, align 4, !dbg !3385
  %inc92 = add nsw i32 %90, 1, !dbg !3385
  store i32 %inc92, i32* %i, align 4, !dbg !3385
  br label %for.inc93, !dbg !3386

for.inc93:                                        ; preds = %for.body83
  %91 = load i32, i32* %index, align 4, !dbg !3387
  %inc94 = add nsw i32 %91, 1, !dbg !3387
  store i32 %inc94, i32* %index, align 4, !dbg !3387
  br label %for.cond81, !dbg !3388, !llvm.loop !3389

for.end95:                                        ; preds = %for.cond81
  %92 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3391
  %call96 = call i32 @ccgSubSurf_updateToFaces(%struct.CCGSubSurf* %92, i32 0, %struct.CCGFace** null, i32 0), !dbg !3392
  ret void, !dbg !3393
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @multiresModifier_reshape(%struct.Scene* %scene, %struct.MultiresModifierData* %mmd, %struct.Object* %dst, %struct.Object* %src) #0 !dbg !3394 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %dst.addr = alloca %struct.Object*, align 8
  %src.addr = alloca %struct.Object*, align 8
  %srcdm = alloca %struct.DerivedMesh*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3397, metadata !DIExpression()), !dbg !3398
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !3399, metadata !DIExpression()), !dbg !3400
  store %struct.Object* %dst, %struct.Object** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %dst.addr, metadata !3401, metadata !DIExpression()), !dbg !3402
  store %struct.Object* %src, %struct.Object** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %src.addr, metadata !3403, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %srcdm, metadata !3405, metadata !DIExpression()), !dbg !3406
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3407
  %1 = load %struct.Object*, %struct.Object** %src.addr, align 8, !dbg !3408
  %2 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !3409
  %call = call %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene* %0, %struct.Object* %1, i64 %2), !dbg !3410
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %srcdm, align 8, !dbg !3406
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3411
  %4 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3412
  %5 = load %struct.Object*, %struct.Object** %dst.addr, align 8, !dbg !3413
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %srcdm, align 8, !dbg !3414
  %call1 = call i32 @multiresModifier_reshapeFromDM(%struct.Scene* %3, %struct.MultiresModifierData* %4, %struct.Object* %5, %struct.DerivedMesh* %6), !dbg !3415
  ret i32 %call1, !dbg !3416
}

declare dso_local %struct.DerivedMesh* @mesh_get_derived_final(%struct.Scene*, %struct.Object*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @multiresModifier_reshapeFromDeformMod(%struct.Scene* %scene, %struct.MultiresModifierData* %mmd, %struct.Object* %ob, %struct.ModifierData* %md) #0 !dbg !3417 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %md.addr = alloca %struct.ModifierData*, align 8
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %ndm = alloca %struct.DerivedMesh*, align 8
  %numVerts = alloca i32, align 4
  %result = alloca i32, align 4
  %deformedVerts = alloca [3 x float]*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !3420, metadata !DIExpression()), !dbg !3421
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !3422, metadata !DIExpression()), !dbg !3423
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3424, metadata !DIExpression()), !dbg !3425
  store %struct.ModifierData* %md, %struct.ModifierData** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md.addr, metadata !3426, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !3428, metadata !DIExpression()), !dbg !3429
  %0 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !3430
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %0, i32 0, i32 2, !dbg !3431
  %1 = load i32, i32* %type, align 8, !dbg !3431
  %call = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %1), !dbg !3432
  store %struct.ModifierTypeInfo* %call, %struct.ModifierTypeInfo** %mti, align 8, !dbg !3429
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !3433, metadata !DIExpression()), !dbg !3434
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %ndm, metadata !3435, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !3437, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3439, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.declare(metadata [3 x float]** %deformedVerts, metadata !3441, metadata !DIExpression()), !dbg !3442
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3443
  %3 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3445
  %call1 = call i32 @multires_get_level(%struct.Object* %2, %struct.MultiresModifierData* %3, i8 zeroext 0, i8 zeroext 1), !dbg !3446
  %cmp = icmp eq i32 %call1, 0, !dbg !3447
  br i1 %cmp, label %if.then, label %if.end, !dbg !3448

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3449
  br label %return, !dbg !3449

if.end:                                           ; preds = %entry
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3450
  %5 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3451
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3452
  %call2 = call %struct.DerivedMesh* @get_multires_dm(%struct.Scene* %4, %struct.MultiresModifierData* %5, %struct.Object* %6), !dbg !3453
  store %struct.DerivedMesh* %call2, %struct.DerivedMesh** %dm, align 8, !dbg !3454
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3455
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 23, !dbg !3456
  %8 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !3456
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3457
  %call3 = call i32 %8(%struct.DerivedMesh* %9), !dbg !3455
  store i32 %call3, i32* %numVerts, align 4, !dbg !3458
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3459
  %11 = load i32, i32* %numVerts, align 4, !dbg !3460
  %conv = sext i32 %11 to i64, !dbg !3460
  %mul = mul i64 12, %conv, !dbg !3461
  %call4 = call i8* %10(i64 %mul, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)), !dbg !3459
  %12 = bitcast i8* %call4 to [3 x float]*, !dbg !3459
  store [3 x float]* %12, [3 x float]** %deformedVerts, align 8, !dbg !3462
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3463
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 77, !dbg !3464
  %14 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !3464
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3465
  %16 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3466
  call void %14(%struct.DerivedMesh* %15, [3 x float]* %16), !dbg !3463
  %17 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !3467
  %deformVerts = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %17, i32 0, i32 6, !dbg !3468
  %18 = load void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)** %deformVerts, align 8, !dbg !3468
  %19 = load %struct.ModifierData*, %struct.ModifierData** %md.addr, align 8, !dbg !3469
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3470
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3471
  %22 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3472
  %23 = load i32, i32* %numVerts, align 4, !dbg !3473
  call void %18(%struct.ModifierData* %19, %struct.Object* %20, %struct.DerivedMesh* %21, [3 x float]* %22, i32 %23, i32 0), !dbg !3467
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3474
  %call5 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %24), !dbg !3475
  store %struct.DerivedMesh* %call5, %struct.DerivedMesh** %ndm, align 8, !dbg !3476
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !3477
  %26 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3478
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %25, [3 x float]* %26), !dbg !3479
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3480
  %28 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !3481
  %29 = bitcast [3 x float]* %28 to i8*, !dbg !3481
  call void %27(i8* %29), !dbg !3480
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3482
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 95, !dbg !3483
  %31 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !3483
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3484
  call void %31(%struct.DerivedMesh* %32), !dbg !3482
  %33 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !3485
  %34 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3486
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3487
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !3488
  %call6 = call i32 @multiresModifier_reshapeFromDM(%struct.Scene* %33, %struct.MultiresModifierData* %34, %struct.Object* %35, %struct.DerivedMesh* %36), !dbg !3489
  store i32 %call6, i32* %result, align 4, !dbg !3490
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !3491
  %release7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 95, !dbg !3492
  %38 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release7, align 8, !dbg !3492
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ndm, align 8, !dbg !3493
  call void %38(%struct.DerivedMesh* %39), !dbg !3491
  %40 = load i32, i32* %result, align 4, !dbg !3494
  store i32 %40, i32* %retval, align 4, !dbg !3495
  br label %return, !dbg !3495

return:                                           ; preds = %if.end, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !3496
  ret i32 %41, !dbg !3496
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @multires_get_level(%struct.Object* %ob, %struct.MultiresModifierData* %mmd, i8 zeroext %render, i8 zeroext %ignore_simplify) #0 !dbg !3497 {
entry:
  %retval = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %render.addr = alloca i8, align 1
  %ignore_simplify.addr = alloca i8, align 1
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3500, metadata !DIExpression()), !dbg !3501
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !3502, metadata !DIExpression()), !dbg !3503
  store i8 %render, i8* %render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %render.addr, metadata !3504, metadata !DIExpression()), !dbg !3505
  store i8 %ignore_simplify, i8* %ignore_simplify.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ignore_simplify.addr, metadata !3506, metadata !DIExpression()), !dbg !3507
  %0 = load i8, i8* %render.addr, align 1, !dbg !3508
  %tobool = icmp ne i8 %0, 0, !dbg !3508
  br i1 %tobool, label %if.then, label %if.else, !dbg !3510

if.then:                                          ; preds = %entry
  %1 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3511
  %modifier = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %1, i32 0, i32 0, !dbg !3512
  %scene = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier, i32 0, i32 7, !dbg !3513
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3513
  %tobool1 = icmp ne %struct.Scene* %2, null, !dbg !3514
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !3514

cond.true:                                        ; preds = %if.then
  %3 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3515
  %modifier2 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %3, i32 0, i32 0, !dbg !3516
  %scene3 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier2, i32 0, i32 7, !dbg !3517
  %4 = load %struct.Scene*, %struct.Scene** %scene3, align 8, !dbg !3517
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 22, !dbg !3518
  %5 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3519
  %renderlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %5, i32 0, i32 3, !dbg !3520
  %6 = load i8, i8* %renderlvl, align 2, !dbg !3520
  %conv = zext i8 %6 to i32, !dbg !3519
  %call = call i32 @get_render_subsurf_level(%struct.RenderData* %r, i32 %conv), !dbg !3521
  br label %cond.end, !dbg !3514

cond.false:                                       ; preds = %if.then
  %7 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3522
  %renderlvl4 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %7, i32 0, i32 3, !dbg !3523
  %8 = load i8, i8* %renderlvl4, align 2, !dbg !3523
  %conv5 = zext i8 %8 to i32, !dbg !3522
  br label %cond.end, !dbg !3514

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv5, %cond.false ], !dbg !3514
  store i32 %cond, i32* %retval, align 4, !dbg !3524
  br label %return, !dbg !3524

if.else:                                          ; preds = %entry
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3525
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 27, !dbg !3527
  %10 = load i32, i32* %mode, align 8, !dbg !3527
  %cmp = icmp eq i32 %10, 2, !dbg !3528
  br i1 %cmp, label %if.then7, label %if.else9, !dbg !3529

if.then7:                                         ; preds = %if.else
  %11 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3530
  %sculptlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %11, i32 0, i32 2, !dbg !3531
  %12 = load i8, i8* %sculptlvl, align 1, !dbg !3531
  %conv8 = zext i8 %12 to i32, !dbg !3530
  store i32 %conv8, i32* %retval, align 4, !dbg !3532
  br label %return, !dbg !3532

if.else9:                                         ; preds = %if.else
  %13 = load i8, i8* %ignore_simplify.addr, align 1, !dbg !3533
  %tobool10 = icmp ne i8 %13, 0, !dbg !3533
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !3535

if.then11:                                        ; preds = %if.else9
  %14 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3536
  %lvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %14, i32 0, i32 1, !dbg !3537
  %15 = load i8, i8* %lvl, align 8, !dbg !3537
  %conv12 = zext i8 %15 to i32, !dbg !3536
  store i32 %conv12, i32* %retval, align 4, !dbg !3538
  br label %return, !dbg !3538

if.else13:                                        ; preds = %if.else9
  %16 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3539
  %modifier14 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %16, i32 0, i32 0, !dbg !3540
  %scene15 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier14, i32 0, i32 7, !dbg !3541
  %17 = load %struct.Scene*, %struct.Scene** %scene15, align 8, !dbg !3541
  %tobool16 = icmp ne %struct.Scene* %17, null, !dbg !3542
  br i1 %tobool16, label %cond.true17, label %cond.false24, !dbg !3542

cond.true17:                                      ; preds = %if.else13
  %18 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3543
  %modifier18 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %18, i32 0, i32 0, !dbg !3544
  %scene19 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier18, i32 0, i32 7, !dbg !3545
  %19 = load %struct.Scene*, %struct.Scene** %scene19, align 8, !dbg !3545
  %r20 = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 22, !dbg !3546
  %20 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3547
  %lvl21 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %20, i32 0, i32 1, !dbg !3548
  %21 = load i8, i8* %lvl21, align 8, !dbg !3548
  %conv22 = zext i8 %21 to i32, !dbg !3547
  %call23 = call i32 @get_render_subsurf_level(%struct.RenderData* %r20, i32 %conv22), !dbg !3549
  br label %cond.end27, !dbg !3542

cond.false24:                                     ; preds = %if.else13
  %22 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3550
  %lvl25 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %22, i32 0, i32 1, !dbg !3551
  %23 = load i8, i8* %lvl25, align 8, !dbg !3551
  %conv26 = zext i8 %23 to i32, !dbg !3550
  br label %cond.end27, !dbg !3542

cond.end27:                                       ; preds = %cond.false24, %cond.true17
  %cond28 = phi i32 [ %call23, %cond.true17 ], [ %conv26, %cond.false24 ], !dbg !3542
  store i32 %cond28, i32* %retval, align 4, !dbg !3552
  br label %return, !dbg !3552

return:                                           ; preds = %cond.end27, %if.then11, %if.then7, %cond.end
  %24 = load i32, i32* %retval, align 4, !dbg !3553
  ret i32 %24, !dbg !3553
}

declare dso_local void @CDDM_apply_vert_coords(%struct.DerivedMesh*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @multiresModifier_set_levels_from_disps(%struct.MultiresModifierData* %mmd, %struct.Object* %ob) #0 !dbg !3554 {
entry:
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mdisp = alloca %struct.MDisps*, align 8
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !3557, metadata !DIExpression()), !dbg !3558
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3559, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3561, metadata !DIExpression()), !dbg !3562
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3563
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3564
  %1 = load i8*, i8** %data, align 8, !dbg !3564
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !3563
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !3562
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisp, metadata !3565, metadata !DIExpression()), !dbg !3574
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3575
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 20, !dbg !3577
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !3577
  %tobool = icmp ne %struct.BMEditMesh* %4, null, !dbg !3575
  br i1 %tobool, label %if.then, label %if.else, !dbg !3578

if.then:                                          ; preds = %entry
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3579
  %edit_btmesh1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 20, !dbg !3580
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh1, align 8, !dbg !3580
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !3581
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3581
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 26, !dbg !3582
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata, i32 19), !dbg !3583
  %8 = bitcast i8* %call to %struct.MDisps*, !dbg !3583
  store %struct.MDisps* %8, %struct.MDisps** %mdisp, align 8, !dbg !3584
  br label %if.end, !dbg !3585

if.else:                                          ; preds = %entry
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3586
  %ldata2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 25, !dbg !3587
  %call3 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata2, i32 19), !dbg !3588
  %10 = bitcast i8* %call3 to %struct.MDisps*, !dbg !3588
  store %struct.MDisps* %10, %struct.MDisps** %mdisp, align 8, !dbg !3589
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3590
  %tobool4 = icmp ne %struct.MDisps* %11, null, !dbg !3590
  br i1 %tobool4, label %if.then5, label %if.end47, !dbg !3592

if.then5:                                         ; preds = %if.end
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3593
  %call6 = call i32 @get_levels_from_disps(%struct.Object* %12), !dbg !3595
  %conv = trunc i32 %call6 to i8, !dbg !3595
  %13 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3596
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %13, i32 0, i32 4, !dbg !3597
  store i8 %conv, i8* %totlvl, align 1, !dbg !3598
  %14 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3599
  %sculptlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %14, i32 0, i32 2, !dbg !3599
  %15 = load i8, i8* %sculptlvl, align 1, !dbg !3599
  %conv7 = zext i8 %15 to i32, !dbg !3599
  %16 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3599
  %totlvl8 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %16, i32 0, i32 4, !dbg !3599
  %17 = load i8, i8* %totlvl8, align 1, !dbg !3599
  %conv9 = zext i8 %17 to i32, !dbg !3599
  %cmp = icmp slt i32 %conv7, %conv9, !dbg !3599
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3599

cond.true:                                        ; preds = %if.then5
  %18 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3599
  %sculptlvl11 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %18, i32 0, i32 2, !dbg !3599
  %19 = load i8, i8* %sculptlvl11, align 1, !dbg !3599
  %conv12 = zext i8 %19 to i32, !dbg !3599
  br label %cond.end, !dbg !3599

cond.false:                                       ; preds = %if.then5
  %20 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3599
  %totlvl13 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %20, i32 0, i32 4, !dbg !3599
  %21 = load i8, i8* %totlvl13, align 1, !dbg !3599
  %conv14 = zext i8 %21 to i32, !dbg !3599
  br label %cond.end, !dbg !3599

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv12, %cond.true ], [ %conv14, %cond.false ], !dbg !3599
  %conv15 = trunc i32 %cond to i8, !dbg !3599
  %22 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3600
  %lvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %22, i32 0, i32 1, !dbg !3601
  store i8 %conv15, i8* %lvl, align 8, !dbg !3602
  %23 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3603
  %sculptlvl16 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %23, i32 0, i32 2, !dbg !3603
  %24 = load i8, i8* %sculptlvl16, align 1, !dbg !3603
  %conv17 = zext i8 %24 to i32, !dbg !3603
  %25 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3603
  %totlvl18 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %25, i32 0, i32 4, !dbg !3603
  %26 = load i8, i8* %totlvl18, align 1, !dbg !3603
  %conv19 = zext i8 %26 to i32, !dbg !3603
  %cmp20 = icmp slt i32 %conv17, %conv19, !dbg !3603
  br i1 %cmp20, label %cond.true22, label %cond.false25, !dbg !3603

cond.true22:                                      ; preds = %cond.end
  %27 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3603
  %sculptlvl23 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %27, i32 0, i32 2, !dbg !3603
  %28 = load i8, i8* %sculptlvl23, align 1, !dbg !3603
  %conv24 = zext i8 %28 to i32, !dbg !3603
  br label %cond.end28, !dbg !3603

cond.false25:                                     ; preds = %cond.end
  %29 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3603
  %totlvl26 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %29, i32 0, i32 4, !dbg !3603
  %30 = load i8, i8* %totlvl26, align 1, !dbg !3603
  %conv27 = zext i8 %30 to i32, !dbg !3603
  br label %cond.end28, !dbg !3603

cond.end28:                                       ; preds = %cond.false25, %cond.true22
  %cond29 = phi i32 [ %conv24, %cond.true22 ], [ %conv27, %cond.false25 ], !dbg !3603
  %conv30 = trunc i32 %cond29 to i8, !dbg !3603
  %31 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3604
  %sculptlvl31 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %31, i32 0, i32 2, !dbg !3605
  store i8 %conv30, i8* %sculptlvl31, align 1, !dbg !3606
  %32 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3607
  %renderlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %32, i32 0, i32 3, !dbg !3607
  %33 = load i8, i8* %renderlvl, align 2, !dbg !3607
  %conv32 = zext i8 %33 to i32, !dbg !3607
  %34 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3607
  %totlvl33 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %34, i32 0, i32 4, !dbg !3607
  %35 = load i8, i8* %totlvl33, align 1, !dbg !3607
  %conv34 = zext i8 %35 to i32, !dbg !3607
  %cmp35 = icmp slt i32 %conv32, %conv34, !dbg !3607
  br i1 %cmp35, label %cond.true37, label %cond.false40, !dbg !3607

cond.true37:                                      ; preds = %cond.end28
  %36 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3607
  %renderlvl38 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %36, i32 0, i32 3, !dbg !3607
  %37 = load i8, i8* %renderlvl38, align 2, !dbg !3607
  %conv39 = zext i8 %37 to i32, !dbg !3607
  br label %cond.end43, !dbg !3607

cond.false40:                                     ; preds = %cond.end28
  %38 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3607
  %totlvl41 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %38, i32 0, i32 4, !dbg !3607
  %39 = load i8, i8* %totlvl41, align 1, !dbg !3607
  %conv42 = zext i8 %39 to i32, !dbg !3607
  br label %cond.end43, !dbg !3607

cond.end43:                                       ; preds = %cond.false40, %cond.true37
  %cond44 = phi i32 [ %conv39, %cond.true37 ], [ %conv42, %cond.false40 ], !dbg !3607
  %conv45 = trunc i32 %cond44 to i8, !dbg !3607
  %40 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3608
  %renderlvl46 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %40, i32 0, i32 3, !dbg !3609
  store i8 %conv45, i8* %renderlvl46, align 2, !dbg !3610
  br label %if.end47, !dbg !3611

if.end47:                                         ; preds = %cond.end43, %if.end
  ret void, !dbg !3612
}

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_levels_from_disps(%struct.Object* %ob) #0 !dbg !3613 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mdisp = alloca %struct.MDisps*, align 8
  %md = alloca %struct.MDisps*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %totlvl = alloca i32, align 4
  %side = alloca i32, align 4
  %lvl_totdisp = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3616, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3618, metadata !DIExpression()), !dbg !3619
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3620
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3621
  %1 = load i8*, i8** %data, align 8, !dbg !3621
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !3620
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !3619
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisp, metadata !3622, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata %struct.MDisps** %md, metadata !3624, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3626, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3628, metadata !DIExpression()), !dbg !3629
  call void @llvm.dbg.declare(metadata i32* %totlvl, metadata !3630, metadata !DIExpression()), !dbg !3631
  store i32 0, i32* %totlvl, align 4, !dbg !3631
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3632
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 25, !dbg !3633
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata, i32 19), !dbg !3634
  %4 = bitcast i8* %call to %struct.MDisps*, !dbg !3634
  store %struct.MDisps* %4, %struct.MDisps** %mdisp, align 8, !dbg !3635
  store i32 0, i32* %i, align 4, !dbg !3636
  br label %for.cond, !dbg !3638

for.cond:                                         ; preds = %for.inc18, %entry
  %5 = load i32, i32* %i, align 4, !dbg !3639
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3641
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 30, !dbg !3642
  %7 = load i32, i32* %totpoly, align 8, !dbg !3642
  %cmp = icmp slt i32 %5, %7, !dbg !3643
  br i1 %cmp, label %for.body, label %for.end20, !dbg !3644

for.body:                                         ; preds = %for.cond
  %8 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3645
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3647
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 7, !dbg !3648
  %10 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3648
  %11 = load i32, i32* %i, align 4, !dbg !3649
  %idxprom = sext i32 %11 to i64, !dbg !3647
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %10, i64 %idxprom, !dbg !3647
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 0, !dbg !3650
  %12 = load i32, i32* %loopstart, align 4, !dbg !3650
  %idx.ext = sext i32 %12 to i64, !dbg !3651
  %add.ptr = getelementptr inbounds %struct.MDisps, %struct.MDisps* %8, i64 %idx.ext, !dbg !3651
  store %struct.MDisps* %add.ptr, %struct.MDisps** %md, align 8, !dbg !3652
  store i32 0, i32* %j, align 4, !dbg !3653
  br label %for.cond1, !dbg !3655

for.cond1:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %j, align 4, !dbg !3656
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3658
  %mpoly2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 7, !dbg !3659
  %15 = load %struct.MPoly*, %struct.MPoly** %mpoly2, align 8, !dbg !3659
  %16 = load i32, i32* %i, align 4, !dbg !3660
  %idxprom3 = sext i32 %16 to i64, !dbg !3658
  %arrayidx4 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %15, i64 %idxprom3, !dbg !3658
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx4, i32 0, i32 1, !dbg !3661
  %17 = load i32, i32* %totloop, align 4, !dbg !3661
  %cmp5 = icmp slt i32 %13, %17, !dbg !3662
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !3663

for.body6:                                        ; preds = %for.cond1
  %18 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !3664
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %18, i32 0, i32 0, !dbg !3667
  %19 = load i32, i32* %totdisp, align 8, !dbg !3667
  %cmp7 = icmp eq i32 %19, 0, !dbg !3668
  br i1 %cmp7, label %if.then, label %if.end, !dbg !3669

if.then:                                          ; preds = %for.body6
  br label %for.inc, !dbg !3670

if.end:                                           ; preds = %for.body6
  br label %while.body, !dbg !3671

while.body:                                       ; preds = %if.end, %if.end16
  call void @llvm.dbg.declare(metadata i32* %side, metadata !3672, metadata !DIExpression()), !dbg !3674
  %20 = load i32, i32* %totlvl, align 4, !dbg !3675
  %sub = sub nsw i32 %20, 1, !dbg !3676
  %shl = shl i32 1, %sub, !dbg !3677
  %add = add nsw i32 %shl, 1, !dbg !3678
  store i32 %add, i32* %side, align 4, !dbg !3674
  call void @llvm.dbg.declare(metadata i32* %lvl_totdisp, metadata !3679, metadata !DIExpression()), !dbg !3680
  %21 = load i32, i32* %side, align 4, !dbg !3681
  %22 = load i32, i32* %side, align 4, !dbg !3682
  %mul = mul nsw i32 %21, %22, !dbg !3683
  store i32 %mul, i32* %lvl_totdisp, align 4, !dbg !3680
  %23 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !3684
  %totdisp8 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %23, i32 0, i32 0, !dbg !3686
  %24 = load i32, i32* %totdisp8, align 8, !dbg !3686
  %25 = load i32, i32* %lvl_totdisp, align 4, !dbg !3687
  %cmp9 = icmp eq i32 %24, %25, !dbg !3688
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !3689

if.then10:                                        ; preds = %while.body
  br label %while.end, !dbg !3690

if.else:                                          ; preds = %while.body
  %26 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !3691
  %totdisp11 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %26, i32 0, i32 0, !dbg !3693
  %27 = load i32, i32* %totdisp11, align 8, !dbg !3693
  %28 = load i32, i32* %lvl_totdisp, align 4, !dbg !3694
  %cmp12 = icmp slt i32 %27, %28, !dbg !3695
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !3696

if.then13:                                        ; preds = %if.else
  %29 = load i32, i32* %totlvl, align 4, !dbg !3697
  %dec = add nsw i32 %29, -1, !dbg !3697
  store i32 %dec, i32* %totlvl, align 4, !dbg !3697
  br label %if.end15, !dbg !3698

if.else14:                                        ; preds = %if.else
  %30 = load i32, i32* %totlvl, align 4, !dbg !3699
  %inc = add nsw i32 %30, 1, !dbg !3699
  store i32 %inc, i32* %totlvl, align 4, !dbg !3699
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then13
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  br label %while.body, !dbg !3671, !llvm.loop !3700

while.end:                                        ; preds = %if.then10
  br label %for.end, !dbg !3702

for.inc:                                          ; preds = %if.then
  %31 = load i32, i32* %j, align 4, !dbg !3703
  %inc17 = add nsw i32 %31, 1, !dbg !3703
  store i32 %inc17, i32* %j, align 4, !dbg !3703
  %32 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !3704
  %incdec.ptr = getelementptr inbounds %struct.MDisps, %struct.MDisps* %32, i32 1, !dbg !3704
  store %struct.MDisps* %incdec.ptr, %struct.MDisps** %md, align 8, !dbg !3704
  br label %for.cond1, !dbg !3705, !llvm.loop !3706

for.end:                                          ; preds = %while.end, %for.cond1
  br label %for.inc18, !dbg !3708

for.inc18:                                        ; preds = %for.end
  %33 = load i32, i32* %i, align 4, !dbg !3709
  %inc19 = add nsw i32 %33, 1, !dbg !3709
  store i32 %inc19, i32* %i, align 4, !dbg !3709
  br label %for.cond, !dbg !3710, !llvm.loop !3711

for.end20:                                        ; preds = %for.cond
  %34 = load i32, i32* %totlvl, align 4, !dbg !3713
  ret i32 %34, !dbg !3714
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multiresModifier_del_levels(%struct.MultiresModifierData* %mmd, %struct.Object* %ob, i32 %direction) #0 !dbg !3715 {
entry:
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %direction.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %lvl = alloca i32, align 4
  %levels = alloca i32, align 4
  %mdisps = alloca %struct.MDisps*, align 8
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !3718, metadata !DIExpression()), !dbg !3719
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3720, metadata !DIExpression()), !dbg !3721
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !3722, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3724, metadata !DIExpression()), !dbg !3725
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3726
  %call = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %0), !dbg !3727
  store %struct.Mesh* %call, %struct.Mesh** %me, align 8, !dbg !3725
  call void @llvm.dbg.declare(metadata i32* %lvl, metadata !3728, metadata !DIExpression()), !dbg !3729
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3730
  %2 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3731
  %call1 = call i32 @multires_get_level(%struct.Object* %1, %struct.MultiresModifierData* %2, i8 zeroext 0, i8 zeroext 1), !dbg !3732
  store i32 %call1, i32* %lvl, align 4, !dbg !3729
  call void @llvm.dbg.declare(metadata i32* %levels, metadata !3733, metadata !DIExpression()), !dbg !3734
  %3 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3735
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %3, i32 0, i32 4, !dbg !3736
  %4 = load i8, i8* %totlvl, align 1, !dbg !3736
  %conv = zext i8 %4 to i32, !dbg !3735
  %5 = load i32, i32* %lvl, align 4, !dbg !3737
  %sub = sub nsw i32 %conv, %5, !dbg !3738
  store i32 %sub, i32* %levels, align 4, !dbg !3734
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !3739, metadata !DIExpression()), !dbg !3740
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3741
  %7 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3742
  %totlvl2 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %7, i32 0, i32 4, !dbg !3743
  %8 = load i8, i8* %totlvl2, align 1, !dbg !3743
  %conv3 = zext i8 %8 to i32, !dbg !3742
  call void @multires_set_tot_mdisps(%struct.Mesh* %6, i32 %conv3), !dbg !3744
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3745
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 25, !dbg !3746
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3747
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 0, !dbg !3748
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3749
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 31, !dbg !3750
  %12 = load i32, i32* %totloop, align 4, !dbg !3750
  call void @CustomData_external_read(%struct.CustomData* %ldata, %struct.ID* %id, i64 524288, i32 %12), !dbg !3751
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3752
  %ldata4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 25, !dbg !3753
  %call5 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata4, i32 19), !dbg !3754
  %14 = bitcast i8* %call5 to %struct.MDisps*, !dbg !3754
  store %struct.MDisps* %14, %struct.MDisps** %mdisps, align 8, !dbg !3755
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3756
  call void @multires_force_update(%struct.Object* %15), !dbg !3757
  %16 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !3758
  %tobool = icmp ne %struct.MDisps* %16, null, !dbg !3758
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3760

land.lhs.true:                                    ; preds = %entry
  %17 = load i32, i32* %levels, align 4, !dbg !3761
  %cmp = icmp sgt i32 %17, 0, !dbg !3762
  br i1 %cmp, label %land.lhs.true7, label %if.end, !dbg !3763

land.lhs.true7:                                   ; preds = %land.lhs.true
  %18 = load i32, i32* %direction.addr, align 4, !dbg !3764
  %cmp8 = icmp eq i32 %18, 1, !dbg !3765
  br i1 %cmp8, label %if.then, label %if.end, !dbg !3766

if.then:                                          ; preds = %land.lhs.true7
  %19 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3767
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3769
  %21 = load i32, i32* %lvl, align 4, !dbg !3770
  call void @multires_del_higher(%struct.MultiresModifierData* %19, %struct.Object* %20, i32 %21), !dbg !3771
  br label %if.end, !dbg !3772

if.end:                                           ; preds = %if.then, %land.lhs.true7, %land.lhs.true, %entry
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3773
  %23 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3774
  %24 = load i32, i32* %lvl, align 4, !dbg !3775
  call void @multires_set_tot_level(%struct.Object* %22, %struct.MultiresModifierData* %23, i32 %24), !dbg !3776
  ret void, !dbg !3777
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_set_tot_mdisps(%struct.Mesh* %me, i32 %lvl) #0 !dbg !3778 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %lvl.addr = alloca i32, align 4
  %mdisps = alloca %struct.MDisps*, align 8
  %i = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !3781, metadata !DIExpression()), !dbg !3782
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !3783, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !3785, metadata !DIExpression()), !dbg !3786
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3787
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 25, !dbg !3788
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata, i32 19), !dbg !3789
  %1 = bitcast i8* %call to %struct.MDisps*, !dbg !3789
  store %struct.MDisps* %1, %struct.MDisps** %mdisps, align 8, !dbg !3786
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3790, metadata !DIExpression()), !dbg !3791
  %2 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !3792
  %tobool = icmp ne %struct.MDisps* %2, null, !dbg !3792
  br i1 %tobool, label %if.then, label %if.end, !dbg !3794

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !3795
  br label %for.cond, !dbg !3798

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !3799
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !3801
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 31, !dbg !3802
  %5 = load i32, i32* %totloop, align 4, !dbg !3802
  %cmp = icmp slt i32 %3, %5, !dbg !3803
  br i1 %cmp, label %for.body, label %for.end, !dbg !3804

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %lvl.addr, align 4, !dbg !3805
  %idxprom = sext i32 %6 to i64, !dbg !3807
  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @multires_grid_tot, i64 0, i64 %idxprom, !dbg !3807
  %7 = load i32, i32* %arrayidx, align 4, !dbg !3807
  %8 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !3808
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %8, i32 0, i32 0, !dbg !3809
  store i32 %7, i32* %totdisp, align 8, !dbg !3810
  %9 = load i32, i32* %lvl.addr, align 4, !dbg !3811
  %10 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !3812
  %level = getelementptr inbounds %struct.MDisps, %struct.MDisps* %10, i32 0, i32 1, !dbg !3813
  store i32 %9, i32* %level, align 4, !dbg !3814
  br label %for.inc, !dbg !3815

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !3816
  %inc = add nsw i32 %11, 1, !dbg !3816
  store i32 %inc, i32* %i, align 4, !dbg !3816
  %12 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !3817
  %incdec.ptr = getelementptr inbounds %struct.MDisps, %struct.MDisps* %12, i32 1, !dbg !3817
  store %struct.MDisps* %incdec.ptr, %struct.MDisps** %mdisps, align 8, !dbg !3817
  br label %for.cond, !dbg !3818, !llvm.loop !3819

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !3821

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !3822
}

declare dso_local void @CustomData_external_read(%struct.CustomData*, %struct.ID*, i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @multires_del_higher(%struct.MultiresModifierData* %mmd, %struct.Object* %ob, i32 %lvl) #0 !dbg !3823 {
entry:
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %lvl.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %levels = alloca i32, align 4
  %mdisps = alloca %struct.MDisps*, align 8
  %gpm = alloca %struct.GridPaintMask*, align 8
  %nsize = alloca i32, align 4
  %hsize = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %g = alloca i32, align 4
  %mdisp = alloca %struct.MDisps*, align 8
  %disps = alloca [3 x float]*, align 8
  %ndisps = alloca [3 x float]*, align 8
  %hdisps = alloca [3 x float]*, align 8
  %totdisp = alloca i32, align 4
  %gh = alloca i32*, align 8
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !3824, metadata !DIExpression()), !dbg !3825
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3826, metadata !DIExpression()), !dbg !3827
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !3828, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3830, metadata !DIExpression()), !dbg !3831
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3832
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3833
  %1 = load i8*, i8** %data, align 8, !dbg !3833
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !3834
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !3831
  call void @llvm.dbg.declare(metadata i32* %levels, metadata !3835, metadata !DIExpression()), !dbg !3836
  %3 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3837
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %3, i32 0, i32 4, !dbg !3838
  %4 = load i8, i8* %totlvl, align 1, !dbg !3838
  %conv = zext i8 %4 to i32, !dbg !3837
  %5 = load i32, i32* %lvl.addr, align 4, !dbg !3839
  %sub = sub nsw i32 %conv, %5, !dbg !3840
  store i32 %sub, i32* %levels, align 4, !dbg !3836
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !3841, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.declare(metadata %struct.GridPaintMask** %gpm, metadata !3843, metadata !DIExpression()), !dbg !3851
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3852
  %7 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3853
  %totlvl1 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %7, i32 0, i32 4, !dbg !3854
  %8 = load i8, i8* %totlvl1, align 1, !dbg !3854
  %conv2 = zext i8 %8 to i32, !dbg !3853
  call void @multires_set_tot_mdisps(%struct.Mesh* %6, i32 %conv2), !dbg !3855
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3856
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 25, !dbg !3857
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3858
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 0, !dbg !3859
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3860
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 31, !dbg !3861
  %12 = load i32, i32* %totloop, align 4, !dbg !3861
  call void @CustomData_external_read(%struct.CustomData* %ldata, %struct.ID* %id, i64 524288, i32 %12), !dbg !3862
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3863
  %ldata3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 25, !dbg !3864
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata3, i32 19), !dbg !3865
  %14 = bitcast i8* %call to %struct.MDisps*, !dbg !3865
  store %struct.MDisps* %14, %struct.MDisps** %mdisps, align 8, !dbg !3866
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3867
  %ldata4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 25, !dbg !3868
  %call5 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata4, i32 35), !dbg !3869
  %16 = bitcast i8* %call5 to %struct.GridPaintMask*, !dbg !3869
  store %struct.GridPaintMask* %16, %struct.GridPaintMask** %gpm, align 8, !dbg !3870
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3871
  call void @multires_force_update(%struct.Object* %17), !dbg !3872
  %18 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !3873
  %tobool = icmp ne %struct.MDisps* %18, null, !dbg !3873
  br i1 %tobool, label %land.lhs.true, label %if.end55, !dbg !3875

land.lhs.true:                                    ; preds = %entry
  %19 = load i32, i32* %levels, align 4, !dbg !3876
  %cmp = icmp sgt i32 %19, 0, !dbg !3877
  br i1 %cmp, label %if.then, label %if.end55, !dbg !3878

if.then:                                          ; preds = %land.lhs.true
  %20 = load i32, i32* %lvl.addr, align 4, !dbg !3879
  %cmp7 = icmp sgt i32 %20, 0, !dbg !3882
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !3883

if.then9:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %nsize, metadata !3884, metadata !DIExpression()), !dbg !3886
  %21 = load i32, i32* %lvl.addr, align 4, !dbg !3887
  %idxprom = sext i32 %21 to i64, !dbg !3888
  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom, !dbg !3888
  %22 = load i32, i32* %arrayidx, align 4, !dbg !3888
  store i32 %22, i32* %nsize, align 4, !dbg !3886
  call void @llvm.dbg.declare(metadata i32* %hsize, metadata !3889, metadata !DIExpression()), !dbg !3890
  %23 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !3891
  %totlvl10 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %23, i32 0, i32 4, !dbg !3892
  %24 = load i8, i8* %totlvl10, align 1, !dbg !3892
  %idxprom11 = zext i8 %24 to i64, !dbg !3893
  %arrayidx12 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom11, !dbg !3893
  %25 = load i32, i32* %arrayidx12, align 4, !dbg !3893
  store i32 %25, i32* %hsize, align 4, !dbg !3890
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3894, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3896, metadata !DIExpression()), !dbg !3897
  store i32 0, i32* %i, align 4, !dbg !3898
  br label %for.cond, !dbg !3900

for.cond:                                         ; preds = %for.inc51, %if.then9
  %26 = load i32, i32* %i, align 4, !dbg !3901
  %27 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3903
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 30, !dbg !3904
  %28 = load i32, i32* %totpoly, align 8, !dbg !3904
  %cmp13 = icmp slt i32 %26, %28, !dbg !3905
  br i1 %cmp13, label %for.body, label %for.end53, !dbg !3906

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !3907
  br label %for.cond15, !dbg !3910

for.cond15:                                       ; preds = %for.inc, %for.body
  %29 = load i32, i32* %j, align 4, !dbg !3911
  %30 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3913
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %30, i32 0, i32 7, !dbg !3914
  %31 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3914
  %32 = load i32, i32* %i, align 4, !dbg !3915
  %idxprom16 = sext i32 %32 to i64, !dbg !3913
  %arrayidx17 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %31, i64 %idxprom16, !dbg !3913
  %totloop18 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx17, i32 0, i32 1, !dbg !3916
  %33 = load i32, i32* %totloop18, align 4, !dbg !3916
  %cmp19 = icmp slt i32 %29, %33, !dbg !3917
  br i1 %cmp19, label %for.body21, label %for.end, !dbg !3918

for.body21:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata i32* %g, metadata !3919, metadata !DIExpression()), !dbg !3921
  %34 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3922
  %mpoly22 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %34, i32 0, i32 7, !dbg !3923
  %35 = load %struct.MPoly*, %struct.MPoly** %mpoly22, align 8, !dbg !3923
  %36 = load i32, i32* %i, align 4, !dbg !3924
  %idxprom23 = sext i32 %36 to i64, !dbg !3922
  %arrayidx24 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %35, i64 %idxprom23, !dbg !3922
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx24, i32 0, i32 0, !dbg !3925
  %37 = load i32, i32* %loopstart, align 4, !dbg !3925
  %38 = load i32, i32* %j, align 4, !dbg !3926
  %add = add nsw i32 %37, %38, !dbg !3927
  store i32 %add, i32* %g, align 4, !dbg !3921
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisp, metadata !3928, metadata !DIExpression()), !dbg !3929
  %39 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !3930
  %40 = load i32, i32* %g, align 4, !dbg !3931
  %idxprom25 = sext i32 %40 to i64, !dbg !3930
  %arrayidx26 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %39, i64 %idxprom25, !dbg !3930
  store %struct.MDisps* %arrayidx26, %struct.MDisps** %mdisp, align 8, !dbg !3929
  call void @llvm.dbg.declare(metadata [3 x float]** %disps, metadata !3932, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.declare(metadata [3 x float]** %ndisps, metadata !3934, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.declare(metadata [3 x float]** %hdisps, metadata !3936, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.declare(metadata i32* %totdisp, metadata !3938, metadata !DIExpression()), !dbg !3939
  %41 = load i32, i32* %lvl.addr, align 4, !dbg !3940
  %idxprom27 = sext i32 %41 to i64, !dbg !3941
  %arrayidx28 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_grid_tot, i64 0, i64 %idxprom27, !dbg !3941
  %42 = load i32, i32* %arrayidx28, align 4, !dbg !3941
  store i32 %42, i32* %totdisp, align 4, !dbg !3939
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3942
  %44 = load i32, i32* %totdisp, align 4, !dbg !3943
  %conv29 = sext i32 %44 to i64, !dbg !3943
  %mul = mul i64 12, %conv29, !dbg !3944
  %call30 = call i8* %43(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)), !dbg !3942
  %45 = bitcast i8* %call30 to [3 x float]*, !dbg !3942
  store [3 x float]* %45, [3 x float]** %disps, align 8, !dbg !3945
  %46 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !3946
  store [3 x float]* %46, [3 x float]** %ndisps, align 8, !dbg !3947
  %47 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3948
  %disps31 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %47, i32 0, i32 2, !dbg !3949
  %48 = load [3 x float]*, [3 x float]** %disps31, align 8, !dbg !3949
  store [3 x float]* %48, [3 x float]** %hdisps, align 8, !dbg !3950
  %49 = load [3 x float]*, [3 x float]** %ndisps, align 8, !dbg !3951
  %50 = load [3 x float]*, [3 x float]** %hdisps, align 8, !dbg !3952
  %51 = load i32, i32* %nsize, align 4, !dbg !3953
  %52 = load i32, i32* %hsize, align 4, !dbg !3954
  call void @multires_copy_grid([3 x float]* %49, [3 x float]* %50, i32 %51, i32 %52), !dbg !3955
  %53 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3956
  %hidden = getelementptr inbounds %struct.MDisps, %struct.MDisps* %53, i32 0, i32 3, !dbg !3958
  %54 = load i32*, i32** %hidden, align 8, !dbg !3958
  %tobool32 = icmp ne i32* %54, null, !dbg !3956
  br i1 %tobool32, label %if.then33, label %if.end, !dbg !3959

if.then33:                                        ; preds = %for.body21
  call void @llvm.dbg.declare(metadata i32** %gh, metadata !3960, metadata !DIExpression()), !dbg !3962
  %55 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3963
  %hidden34 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %55, i32 0, i32 3, !dbg !3964
  %56 = load i32*, i32** %hidden34, align 8, !dbg !3964
  %57 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3965
  %level = getelementptr inbounds %struct.MDisps, %struct.MDisps* %57, i32 0, i32 1, !dbg !3966
  %58 = load i32, i32* %level, align 4, !dbg !3966
  %59 = load i32, i32* %lvl.addr, align 4, !dbg !3967
  %call35 = call i32* @multires_mdisps_downsample_hidden(i32* %56, i32 %58, i32 %59), !dbg !3968
  store i32* %call35, i32** %gh, align 8, !dbg !3962
  %60 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3969
  %61 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3970
  %hidden36 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %61, i32 0, i32 3, !dbg !3971
  %62 = load i32*, i32** %hidden36, align 8, !dbg !3971
  %63 = bitcast i32* %62 to i8*, !dbg !3970
  call void %60(i8* %63), !dbg !3969
  %64 = load i32*, i32** %gh, align 8, !dbg !3972
  %65 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3973
  %hidden37 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %65, i32 0, i32 3, !dbg !3974
  store i32* %64, i32** %hidden37, align 8, !dbg !3975
  br label %if.end, !dbg !3976

if.end:                                           ; preds = %if.then33, %for.body21
  %66 = load i32, i32* %nsize, align 4, !dbg !3977
  %67 = load i32, i32* %nsize, align 4, !dbg !3978
  %mul38 = mul nsw i32 %66, %67, !dbg !3979
  %68 = load [3 x float]*, [3 x float]** %ndisps, align 8, !dbg !3980
  %idx.ext = sext i32 %mul38 to i64, !dbg !3980
  %add.ptr = getelementptr inbounds [3 x float], [3 x float]* %68, i64 %idx.ext, !dbg !3980
  store [3 x float]* %add.ptr, [3 x float]** %ndisps, align 8, !dbg !3980
  %69 = load i32, i32* %hsize, align 4, !dbg !3981
  %70 = load i32, i32* %hsize, align 4, !dbg !3982
  %mul39 = mul nsw i32 %69, %70, !dbg !3983
  %71 = load [3 x float]*, [3 x float]** %hdisps, align 8, !dbg !3984
  %idx.ext40 = sext i32 %mul39 to i64, !dbg !3984
  %add.ptr41 = getelementptr inbounds [3 x float], [3 x float]* %71, i64 %idx.ext40, !dbg !3984
  store [3 x float]* %add.ptr41, [3 x float]** %hdisps, align 8, !dbg !3984
  %72 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3985
  %73 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3986
  %disps42 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %73, i32 0, i32 2, !dbg !3987
  %74 = load [3 x float]*, [3 x float]** %disps42, align 8, !dbg !3987
  %75 = bitcast [3 x float]* %74 to i8*, !dbg !3986
  call void %72(i8* %75), !dbg !3985
  %76 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !3988
  %77 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3989
  %disps43 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %77, i32 0, i32 2, !dbg !3990
  store [3 x float]* %76, [3 x float]** %disps43, align 8, !dbg !3991
  %78 = load i32, i32* %totdisp, align 4, !dbg !3992
  %79 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3993
  %totdisp44 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %79, i32 0, i32 0, !dbg !3994
  store i32 %78, i32* %totdisp44, align 8, !dbg !3995
  %80 = load i32, i32* %lvl.addr, align 4, !dbg !3996
  %81 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !3997
  %level45 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %81, i32 0, i32 1, !dbg !3998
  store i32 %80, i32* %level45, align 4, !dbg !3999
  %82 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4000
  %tobool46 = icmp ne %struct.GridPaintMask* %82, null, !dbg !4000
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !4002

if.then47:                                        ; preds = %if.end
  %83 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4003
  %84 = load i32, i32* %g, align 4, !dbg !4005
  %idxprom48 = sext i32 %84 to i64, !dbg !4003
  %arrayidx49 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %83, i64 %idxprom48, !dbg !4003
  %85 = load i32, i32* %lvl.addr, align 4, !dbg !4006
  call void @multires_grid_paint_mask_downsample(%struct.GridPaintMask* %arrayidx49, i32 %85), !dbg !4007
  br label %if.end50, !dbg !4008

if.end50:                                         ; preds = %if.then47, %if.end
  br label %for.inc, !dbg !4009

for.inc:                                          ; preds = %if.end50
  %86 = load i32, i32* %j, align 4, !dbg !4010
  %inc = add nsw i32 %86, 1, !dbg !4010
  store i32 %inc, i32* %j, align 4, !dbg !4010
  br label %for.cond15, !dbg !4011, !llvm.loop !4012

for.end:                                          ; preds = %for.cond15
  br label %for.inc51, !dbg !4014

for.inc51:                                        ; preds = %for.end
  %87 = load i32, i32* %i, align 4, !dbg !4015
  %inc52 = add nsw i32 %87, 1, !dbg !4015
  store i32 %inc52, i32* %i, align 4, !dbg !4015
  br label %for.cond, !dbg !4016, !llvm.loop !4017

for.end53:                                        ; preds = %for.cond
  br label %if.end54, !dbg !4019

if.else:                                          ; preds = %if.then
  %88 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4020
  call void @multires_customdata_delete(%struct.Mesh* %88), !dbg !4022
  br label %if.end54

if.end54:                                         ; preds = %if.else, %for.end53
  br label %if.end55, !dbg !4023

if.end55:                                         ; preds = %if.end54, %land.lhs.true, %entry
  %89 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4024
  %90 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !4025
  %91 = load i32, i32* %lvl.addr, align 4, !dbg !4026
  call void @multires_set_tot_level(%struct.Object* %89, %struct.MultiresModifierData* %90, i32 %91), !dbg !4027
  ret void, !dbg !4028
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multiresModifier_base_apply(%struct.MultiresModifierData* %mmd, %struct.Object* %ob) #0 !dbg !4029 {
entry:
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %cddm = alloca %struct.DerivedMesh*, align 8
  %dispdm = alloca %struct.DerivedMesh*, align 8
  %origdm = alloca %struct.DerivedMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  %pmap = alloca %struct.MeshElemMap*, align 8
  %origco = alloca [3 x float]*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %offset = alloca i32, align 4
  %totlvl = alloca i32, align 4
  %avg_no = alloca [3 x float], align 4
  %center = alloca [3 x float], align 4
  %push = alloca [3 x float], align 4
  %dist = alloca float, align 4
  %tot = alloca i32, align 4
  %p = alloca %struct.MPoly*, align 8
  %vndx = alloca i32, align 4
  %p82 = alloca %struct.MPoly*, align 8
  %fake_poly = alloca %struct.MPoly, align 4
  %fake_loops = alloca %struct.MLoop*, align 8
  %fake_co = alloca [3 x float]*, align 8
  %no = alloca [3 x float], align 4
  %vndx107 = alloca i32, align 4
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !4030, metadata !DIExpression()), !dbg !4031
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4032, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %cddm, metadata !4034, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dispdm, metadata !4036, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %origdm, metadata !4038, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !4040, metadata !DIExpression()), !dbg !4041
  call void @llvm.dbg.declare(metadata %struct.MeshElemMap** %pmap, metadata !4042, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.declare(metadata [3 x float]** %origco, metadata !4047, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4049, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4051, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4053, metadata !DIExpression()), !dbg !4054
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4055, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.declare(metadata i32* %totlvl, metadata !4057, metadata !DIExpression()), !dbg !4058
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4059
  call void @multires_force_update(%struct.Object* %0), !dbg !4060
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4061
  %call = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %1), !dbg !4062
  store %struct.Mesh* %call, %struct.Mesh** %me, align 8, !dbg !4063
  %2 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !4064
  %totlvl1 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %2, i32 0, i32 4, !dbg !4065
  %3 = load i8, i8* %totlvl1, align 1, !dbg !4065
  %conv = zext i8 %3 to i32, !dbg !4064
  store i32 %conv, i32* %totlvl, align 4, !dbg !4066
  %4 = load i32, i32* %totlvl, align 4, !dbg !4067
  %tobool = icmp ne i32 %4, 0, !dbg !4067
  br i1 %tobool, label %if.end, label %if.then, !dbg !4069

if.then:                                          ; preds = %entry
  br label %return, !dbg !4070

if.end:                                           ; preds = %entry
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4071
  %call2 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %5), !dbg !4072
  store %struct.DerivedMesh* %call2, %struct.DerivedMesh** %cddm, align 8, !dbg !4073
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4074
  %7 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !4075
  call void @DM_set_only_copy(%struct.DerivedMesh* %6, i64 %7), !dbg !4076
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4077
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4078
  %10 = load i32, i32* %totlvl, align 4, !dbg !4079
  %11 = load i32, i32* %totlvl, align 4, !dbg !4080
  %call3 = call %struct.DerivedMesh* @multires_dm_create_local(%struct.Object* %8, %struct.DerivedMesh* %9, i32 %10, i32 %11, i32 0, i8 zeroext 0), !dbg !4081
  store %struct.DerivedMesh* %call3, %struct.DerivedMesh** %dispdm, align 8, !dbg !4082
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4083
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 95, !dbg !4084
  %13 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !4084
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4085
  call void %13(%struct.DerivedMesh* %14), !dbg !4083
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dispdm, align 8, !dbg !4086
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 23, !dbg !4087
  %16 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !4087
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dispdm, align 8, !dbg !4088
  %call4 = call i32 %16(%struct.DerivedMesh* %17), !dbg !4086
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4089
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 26, !dbg !4090
  %19 = load i32, i32* %totvert, align 8, !dbg !4090
  %sub = sub nsw i32 %call4, %19, !dbg !4091
  store i32 %sub, i32* %offset, align 4, !dbg !4092
  store i32 0, i32* %i, align 4, !dbg !4093
  br label %for.cond, !dbg !4095

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load i32, i32* %i, align 4, !dbg !4096
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4098
  %totvert5 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 26, !dbg !4099
  %22 = load i32, i32* %totvert5, align 8, !dbg !4099
  %cmp = icmp slt i32 %20, %22, !dbg !4100
  br i1 %cmp, label %for.body, label %for.end, !dbg !4101

for.body:                                         ; preds = %for.cond
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dispdm, align 8, !dbg !4102
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 76, !dbg !4104
  %24 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !4104
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dispdm, align 8, !dbg !4105
  %26 = load i32, i32* %offset, align 4, !dbg !4106
  %27 = load i32, i32* %i, align 4, !dbg !4107
  %add = add nsw i32 %26, %27, !dbg !4108
  %28 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4109
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 15, !dbg !4110
  %29 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !4110
  %30 = load i32, i32* %i, align 4, !dbg !4111
  %idxprom = sext i32 %30 to i64, !dbg !4109
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i64 %idxprom, !dbg !4109
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !4112
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4109
  call void %24(%struct.DerivedMesh* %25, i32 %add, float* %arraydecay), !dbg !4102
  br label %for.inc, !dbg !4113

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !4114
  %inc = add nsw i32 %31, 1, !dbg !4114
  store i32 %inc, i32* %i, align 4, !dbg !4114
  br label %for.cond, !dbg !4115, !llvm.loop !4116

for.end:                                          ; preds = %for.cond
  %32 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4118
  %call7 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %32), !dbg !4119
  store %struct.DerivedMesh* %call7, %struct.DerivedMesh** %cddm, align 8, !dbg !4120
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4121
  %getPolyMap = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 80, !dbg !4122
  %34 = load %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)** %getPolyMap, align 8, !dbg !4122
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4123
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4124
  %call8 = call %struct.MeshElemMap* %34(%struct.Object* %35, %struct.DerivedMesh* %36), !dbg !4121
  store %struct.MeshElemMap* %call8, %struct.MeshElemMap** %pmap, align 8, !dbg !4125
  %37 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4126
  %38 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4127
  %totvert9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %38, i32 0, i32 26, !dbg !4128
  %39 = load i32, i32* %totvert9, align 8, !dbg !4128
  %conv10 = sext i32 %39 to i64, !dbg !4127
  %mul = mul i64 12, %conv10, !dbg !4129
  %call11 = call i8* %37(i64 %mul, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)), !dbg !4126
  %40 = bitcast i8* %call11 to [3 x float]*, !dbg !4126
  store [3 x float]* %40, [3 x float]** %origco, align 8, !dbg !4130
  store i32 0, i32* %i, align 4, !dbg !4131
  br label %for.cond12, !dbg !4133

for.cond12:                                       ; preds = %for.inc25, %for.end
  %41 = load i32, i32* %i, align 4, !dbg !4134
  %42 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4136
  %totvert13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %42, i32 0, i32 26, !dbg !4137
  %43 = load i32, i32* %totvert13, align 8, !dbg !4137
  %cmp14 = icmp slt i32 %41, %43, !dbg !4138
  br i1 %cmp14, label %for.body16, label %for.end27, !dbg !4139

for.body16:                                       ; preds = %for.cond12
  %44 = load [3 x float]*, [3 x float]** %origco, align 8, !dbg !4140
  %45 = load i32, i32* %i, align 4, !dbg !4141
  %idxprom17 = sext i32 %45 to i64, !dbg !4140
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %44, i64 %idxprom17, !dbg !4140
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !4140
  %46 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4142
  %mvert20 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %46, i32 0, i32 15, !dbg !4143
  %47 = load %struct.MVert*, %struct.MVert** %mvert20, align 8, !dbg !4143
  %48 = load i32, i32* %i, align 4, !dbg !4144
  %idxprom21 = sext i32 %48 to i64, !dbg !4142
  %arrayidx22 = getelementptr inbounds %struct.MVert, %struct.MVert* %47, i64 %idxprom21, !dbg !4142
  %co23 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx22, i32 0, i32 0, !dbg !4145
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %co23, i64 0, i64 0, !dbg !4142
  call void @copy_v3_v3(float* %arraydecay19, float* %arraydecay24), !dbg !4146
  br label %for.inc25, !dbg !4146

for.inc25:                                        ; preds = %for.body16
  %49 = load i32, i32* %i, align 4, !dbg !4147
  %inc26 = add nsw i32 %49, 1, !dbg !4147
  store i32 %inc26, i32* %i, align 4, !dbg !4147
  br label %for.cond12, !dbg !4148, !llvm.loop !4149

for.end27:                                        ; preds = %for.cond12
  store i32 0, i32* %i, align 4, !dbg !4151
  br label %for.cond28, !dbg !4153

for.cond28:                                       ; preds = %for.inc159, %for.end27
  %50 = load i32, i32* %i, align 4, !dbg !4154
  %51 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4156
  %totvert29 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %51, i32 0, i32 26, !dbg !4157
  %52 = load i32, i32* %totvert29, align 8, !dbg !4157
  %cmp30 = icmp slt i32 %50, %52, !dbg !4158
  br i1 %cmp30, label %for.body32, label %for.end161, !dbg !4159

for.body32:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata [3 x float]* %avg_no, metadata !4160, metadata !DIExpression()), !dbg !4162
  %53 = bitcast [3 x float]* %avg_no to i8*, !dbg !4162
  call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 12, i1 false), !dbg !4162
  call void @llvm.dbg.declare(metadata [3 x float]* %center, metadata !4163, metadata !DIExpression()), !dbg !4164
  %54 = bitcast [3 x float]* %center to i8*, !dbg !4164
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 12, i1 false), !dbg !4164
  call void @llvm.dbg.declare(metadata [3 x float]* %push, metadata !4165, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.declare(metadata float* %dist, metadata !4167, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !4169, metadata !DIExpression()), !dbg !4170
  store i32 0, i32* %tot, align 4, !dbg !4170
  %55 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !4171
  %56 = load i32, i32* %i, align 4, !dbg !4173
  %idxprom33 = sext i32 %56 to i64, !dbg !4171
  %arrayidx34 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %55, i64 %idxprom33, !dbg !4171
  %count = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx34, i32 0, i32 1, !dbg !4174
  %57 = load i32, i32* %count, align 8, !dbg !4174
  %tobool35 = icmp ne i32 %57, 0, !dbg !4171
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !4175

if.then36:                                        ; preds = %for.body32
  br label %for.inc159, !dbg !4176

if.end37:                                         ; preds = %for.body32
  store i32 0, i32* %j, align 4, !dbg !4177
  br label %for.cond38, !dbg !4179

for.cond38:                                       ; preds = %for.inc70, %if.end37
  %58 = load i32, i32* %j, align 4, !dbg !4180
  %59 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !4182
  %60 = load i32, i32* %i, align 4, !dbg !4183
  %idxprom39 = sext i32 %60 to i64, !dbg !4182
  %arrayidx40 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %59, i64 %idxprom39, !dbg !4182
  %count41 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx40, i32 0, i32 1, !dbg !4184
  %61 = load i32, i32* %count41, align 8, !dbg !4184
  %cmp42 = icmp slt i32 %58, %61, !dbg !4185
  br i1 %cmp42, label %for.body44, label %for.end72, !dbg !4186

for.body44:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata %struct.MPoly** %p, metadata !4187, metadata !DIExpression()), !dbg !4192
  %62 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4193
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %62, i32 0, i32 7, !dbg !4194
  %63 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4194
  %64 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !4195
  %65 = load i32, i32* %i, align 4, !dbg !4196
  %idxprom45 = sext i32 %65 to i64, !dbg !4195
  %arrayidx46 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %64, i64 %idxprom45, !dbg !4195
  %indices = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx46, i32 0, i32 0, !dbg !4197
  %66 = load i32*, i32** %indices, align 8, !dbg !4197
  %67 = load i32, i32* %j, align 4, !dbg !4198
  %idxprom47 = sext i32 %67 to i64, !dbg !4195
  %arrayidx48 = getelementptr inbounds i32, i32* %66, i64 %idxprom47, !dbg !4195
  %68 = load i32, i32* %arrayidx48, align 4, !dbg !4195
  %idxprom49 = sext i32 %68 to i64, !dbg !4193
  %arrayidx50 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %63, i64 %idxprom49, !dbg !4193
  store %struct.MPoly* %arrayidx50, %struct.MPoly** %p, align 8, !dbg !4192
  store i32 0, i32* %k, align 4, !dbg !4199
  br label %for.cond51, !dbg !4201

for.cond51:                                       ; preds = %for.inc67, %for.body44
  %69 = load i32, i32* %k, align 4, !dbg !4202
  %70 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !4204
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %70, i32 0, i32 1, !dbg !4205
  %71 = load i32, i32* %totloop, align 4, !dbg !4205
  %cmp52 = icmp slt i32 %69, %71, !dbg !4206
  br i1 %cmp52, label %for.body54, label %for.end69, !dbg !4207

for.body54:                                       ; preds = %for.cond51
  call void @llvm.dbg.declare(metadata i32* %vndx, metadata !4208, metadata !DIExpression()), !dbg !4210
  %72 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4211
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %72, i32 0, i32 9, !dbg !4212
  %73 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !4212
  %74 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !4213
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %74, i32 0, i32 0, !dbg !4214
  %75 = load i32, i32* %loopstart, align 4, !dbg !4214
  %76 = load i32, i32* %k, align 4, !dbg !4215
  %add55 = add nsw i32 %75, %76, !dbg !4216
  %idxprom56 = sext i32 %add55 to i64, !dbg !4211
  %arrayidx57 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %73, i64 %idxprom56, !dbg !4211
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx57, i32 0, i32 0, !dbg !4217
  %77 = load i32, i32* %v, align 4, !dbg !4217
  store i32 %77, i32* %vndx, align 4, !dbg !4210
  %78 = load i32, i32* %vndx, align 4, !dbg !4218
  %79 = load i32, i32* %i, align 4, !dbg !4220
  %cmp58 = icmp ne i32 %78, %79, !dbg !4221
  br i1 %cmp58, label %if.then60, label %if.end66, !dbg !4222

if.then60:                                        ; preds = %for.body54
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !4223
  %80 = load [3 x float]*, [3 x float]** %origco, align 8, !dbg !4225
  %81 = load i32, i32* %vndx, align 4, !dbg !4226
  %idxprom62 = sext i32 %81 to i64, !dbg !4225
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %80, i64 %idxprom62, !dbg !4225
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx63, i64 0, i64 0, !dbg !4225
  call void @add_v3_v3(float* %arraydecay61, float* %arraydecay64), !dbg !4227
  %82 = load i32, i32* %tot, align 4, !dbg !4228
  %inc65 = add nsw i32 %82, 1, !dbg !4228
  store i32 %inc65, i32* %tot, align 4, !dbg !4228
  br label %if.end66, !dbg !4229

if.end66:                                         ; preds = %if.then60, %for.body54
  br label %for.inc67, !dbg !4230

for.inc67:                                        ; preds = %if.end66
  %83 = load i32, i32* %k, align 4, !dbg !4231
  %inc68 = add nsw i32 %83, 1, !dbg !4231
  store i32 %inc68, i32* %k, align 4, !dbg !4231
  br label %for.cond51, !dbg !4232, !llvm.loop !4233

for.end69:                                        ; preds = %for.cond51
  br label %for.inc70, !dbg !4235

for.inc70:                                        ; preds = %for.end69
  %84 = load i32, i32* %j, align 4, !dbg !4236
  %inc71 = add nsw i32 %84, 1, !dbg !4236
  store i32 %inc71, i32* %j, align 4, !dbg !4236
  br label %for.cond38, !dbg !4237, !llvm.loop !4238

for.end72:                                        ; preds = %for.cond38
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !4240
  %85 = load i32, i32* %tot, align 4, !dbg !4241
  %conv74 = sitofp i32 %85 to float, !dbg !4241
  %div = fdiv float 1.000000e+00, %conv74, !dbg !4242
  call void @mul_v3_fl(float* %arraydecay73, float %div), !dbg !4243
  store i32 0, i32* %j, align 4, !dbg !4244
  br label %for.cond75, !dbg !4246

for.cond75:                                       ; preds = %for.inc137, %for.end72
  %86 = load i32, i32* %j, align 4, !dbg !4247
  %87 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !4249
  %88 = load i32, i32* %i, align 4, !dbg !4250
  %idxprom76 = sext i32 %88 to i64, !dbg !4249
  %arrayidx77 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %87, i64 %idxprom76, !dbg !4249
  %count78 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx77, i32 0, i32 1, !dbg !4251
  %89 = load i32, i32* %count78, align 8, !dbg !4251
  %cmp79 = icmp slt i32 %86, %89, !dbg !4252
  br i1 %cmp79, label %for.body81, label %for.end139, !dbg !4253

for.body81:                                       ; preds = %for.cond75
  call void @llvm.dbg.declare(metadata %struct.MPoly** %p82, metadata !4254, metadata !DIExpression()), !dbg !4256
  %90 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4257
  %mpoly83 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %90, i32 0, i32 7, !dbg !4258
  %91 = load %struct.MPoly*, %struct.MPoly** %mpoly83, align 8, !dbg !4258
  %92 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !4259
  %93 = load i32, i32* %i, align 4, !dbg !4260
  %idxprom84 = sext i32 %93 to i64, !dbg !4259
  %arrayidx85 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %92, i64 %idxprom84, !dbg !4259
  %indices86 = getelementptr inbounds %struct.MeshElemMap, %struct.MeshElemMap* %arrayidx85, i32 0, i32 0, !dbg !4261
  %94 = load i32*, i32** %indices86, align 8, !dbg !4261
  %95 = load i32, i32* %j, align 4, !dbg !4262
  %idxprom87 = sext i32 %95 to i64, !dbg !4259
  %arrayidx88 = getelementptr inbounds i32, i32* %94, i64 %idxprom87, !dbg !4259
  %96 = load i32, i32* %arrayidx88, align 4, !dbg !4259
  %idxprom89 = sext i32 %96 to i64, !dbg !4257
  %arrayidx90 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %91, i64 %idxprom89, !dbg !4257
  store %struct.MPoly* %arrayidx90, %struct.MPoly** %p82, align 8, !dbg !4256
  call void @llvm.dbg.declare(metadata %struct.MPoly* %fake_poly, metadata !4263, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.declare(metadata %struct.MLoop** %fake_loops, metadata !4265, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.declare(metadata [3 x float]** %fake_co, metadata !4269, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !4271, metadata !DIExpression()), !dbg !4272
  %97 = load %struct.MPoly*, %struct.MPoly** %p82, align 8, !dbg !4273
  %totloop91 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %97, i32 0, i32 1, !dbg !4274
  %98 = load i32, i32* %totloop91, align 4, !dbg !4274
  %totloop92 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %fake_poly, i32 0, i32 1, !dbg !4275
  store i32 %98, i32* %totloop92, align 4, !dbg !4276
  %loopstart93 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %fake_poly, i32 0, i32 0, !dbg !4277
  store i32 0, i32* %loopstart93, align 4, !dbg !4278
  %99 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4279
  %100 = load %struct.MPoly*, %struct.MPoly** %p82, align 8, !dbg !4280
  %totloop94 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %100, i32 0, i32 1, !dbg !4281
  %101 = load i32, i32* %totloop94, align 4, !dbg !4281
  %conv95 = sext i32 %101 to i64, !dbg !4280
  %mul96 = mul i64 8, %conv95, !dbg !4282
  %call97 = call i8* %99(i64 %mul96, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)), !dbg !4279
  %102 = bitcast i8* %call97 to %struct.MLoop*, !dbg !4279
  store %struct.MLoop* %102, %struct.MLoop** %fake_loops, align 8, !dbg !4283
  %103 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4284
  %104 = load %struct.MPoly*, %struct.MPoly** %p82, align 8, !dbg !4285
  %totloop98 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %104, i32 0, i32 1, !dbg !4286
  %105 = load i32, i32* %totloop98, align 4, !dbg !4286
  %conv99 = sext i32 %105 to i64, !dbg !4285
  %mul100 = mul i64 12, %conv99, !dbg !4287
  %call101 = call i8* %103(i64 %mul100, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)), !dbg !4284
  %106 = bitcast i8* %call101 to [3 x float]*, !dbg !4284
  store [3 x float]* %106, [3 x float]** %fake_co, align 8, !dbg !4288
  store i32 0, i32* %k, align 4, !dbg !4289
  br label %for.cond102, !dbg !4291

for.cond102:                                      ; preds = %for.inc131, %for.body81
  %107 = load i32, i32* %k, align 4, !dbg !4292
  %108 = load %struct.MPoly*, %struct.MPoly** %p82, align 8, !dbg !4294
  %totloop103 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %108, i32 0, i32 1, !dbg !4295
  %109 = load i32, i32* %totloop103, align 4, !dbg !4295
  %cmp104 = icmp slt i32 %107, %109, !dbg !4296
  br i1 %cmp104, label %for.body106, label %for.end133, !dbg !4297

for.body106:                                      ; preds = %for.cond102
  call void @llvm.dbg.declare(metadata i32* %vndx107, metadata !4298, metadata !DIExpression()), !dbg !4300
  %110 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4301
  %mloop108 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %110, i32 0, i32 9, !dbg !4302
  %111 = load %struct.MLoop*, %struct.MLoop** %mloop108, align 8, !dbg !4302
  %112 = load %struct.MPoly*, %struct.MPoly** %p82, align 8, !dbg !4303
  %loopstart109 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %112, i32 0, i32 0, !dbg !4304
  %113 = load i32, i32* %loopstart109, align 4, !dbg !4304
  %114 = load i32, i32* %k, align 4, !dbg !4305
  %add110 = add nsw i32 %113, %114, !dbg !4306
  %idxprom111 = sext i32 %add110 to i64, !dbg !4301
  %arrayidx112 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %111, i64 %idxprom111, !dbg !4301
  %v113 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx112, i32 0, i32 0, !dbg !4307
  %115 = load i32, i32* %v113, align 4, !dbg !4307
  store i32 %115, i32* %vndx107, align 4, !dbg !4300
  %116 = load i32, i32* %k, align 4, !dbg !4308
  %117 = load %struct.MLoop*, %struct.MLoop** %fake_loops, align 8, !dbg !4309
  %118 = load i32, i32* %k, align 4, !dbg !4310
  %idxprom114 = sext i32 %118 to i64, !dbg !4309
  %arrayidx115 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %117, i64 %idxprom114, !dbg !4309
  %v116 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx115, i32 0, i32 0, !dbg !4311
  store i32 %116, i32* %v116, align 4, !dbg !4312
  %119 = load i32, i32* %vndx107, align 4, !dbg !4313
  %120 = load i32, i32* %i, align 4, !dbg !4315
  %cmp117 = icmp eq i32 %119, %120, !dbg !4316
  br i1 %cmp117, label %if.then119, label %if.else, !dbg !4317

if.then119:                                       ; preds = %for.body106
  %121 = load [3 x float]*, [3 x float]** %fake_co, align 8, !dbg !4318
  %122 = load i32, i32* %k, align 4, !dbg !4319
  %idxprom120 = sext i32 %122 to i64, !dbg !4318
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %121, i64 %idxprom120, !dbg !4318
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx121, i64 0, i64 0, !dbg !4318
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !4320
  call void @copy_v3_v3(float* %arraydecay122, float* %arraydecay123), !dbg !4321
  br label %if.end130, !dbg !4321

if.else:                                          ; preds = %for.body106
  %123 = load [3 x float]*, [3 x float]** %fake_co, align 8, !dbg !4322
  %124 = load i32, i32* %k, align 4, !dbg !4323
  %idxprom124 = sext i32 %124 to i64, !dbg !4322
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %123, i64 %idxprom124, !dbg !4322
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx125, i64 0, i64 0, !dbg !4322
  %125 = load [3 x float]*, [3 x float]** %origco, align 8, !dbg !4324
  %126 = load i32, i32* %vndx107, align 4, !dbg !4325
  %idxprom127 = sext i32 %126 to i64, !dbg !4324
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %125, i64 %idxprom127, !dbg !4324
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx128, i64 0, i64 0, !dbg !4324
  call void @copy_v3_v3(float* %arraydecay126, float* %arraydecay129), !dbg !4326
  br label %if.end130

if.end130:                                        ; preds = %if.else, %if.then119
  br label %for.inc131, !dbg !4327

for.inc131:                                       ; preds = %if.end130
  %127 = load i32, i32* %k, align 4, !dbg !4328
  %inc132 = add nsw i32 %127, 1, !dbg !4328
  store i32 %inc132, i32* %k, align 4, !dbg !4328
  br label %for.cond102, !dbg !4329, !llvm.loop !4330

for.end133:                                       ; preds = %for.cond102
  %128 = load %struct.MLoop*, %struct.MLoop** %fake_loops, align 8, !dbg !4332
  %129 = load [3 x float]*, [3 x float]** %fake_co, align 8, !dbg !4333
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !4334
  call void @BKE_mesh_calc_poly_normal_coords(%struct.MPoly* %fake_poly, %struct.MLoop* %128, [3 x float]* %129, float* %arraydecay134), !dbg !4335
  %130 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4336
  %131 = load %struct.MLoop*, %struct.MLoop** %fake_loops, align 8, !dbg !4337
  %132 = bitcast %struct.MLoop* %131 to i8*, !dbg !4337
  call void %130(i8* %132), !dbg !4336
  %133 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4338
  %134 = load [3 x float]*, [3 x float]** %fake_co, align 8, !dbg !4339
  %135 = bitcast [3 x float]* %134 to i8*, !dbg !4339
  call void %133(i8* %135), !dbg !4338
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %avg_no, i64 0, i64 0, !dbg !4340
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !4341
  call void @add_v3_v3(float* %arraydecay135, float* %arraydecay136), !dbg !4342
  br label %for.inc137, !dbg !4343

for.inc137:                                       ; preds = %for.end133
  %136 = load i32, i32* %j, align 4, !dbg !4344
  %inc138 = add nsw i32 %136, 1, !dbg !4344
  store i32 %inc138, i32* %j, align 4, !dbg !4344
  br label %for.cond75, !dbg !4345, !llvm.loop !4346

for.end139:                                       ; preds = %for.cond75
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %avg_no, i64 0, i64 0, !dbg !4348
  %call141 = call float @normalize_v3(float* %arraydecay140), !dbg !4349
  %137 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4350
  %mvert142 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %137, i32 0, i32 15, !dbg !4351
  %138 = load %struct.MVert*, %struct.MVert** %mvert142, align 8, !dbg !4351
  %139 = load i32, i32* %i, align 4, !dbg !4352
  %idxprom143 = sext i32 %139 to i64, !dbg !4350
  %arrayidx144 = getelementptr inbounds %struct.MVert, %struct.MVert* %138, i64 %idxprom143, !dbg !4350
  %co145 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx144, i32 0, i32 0, !dbg !4353
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %co145, i64 0, i64 0, !dbg !4350
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %center, i64 0, i64 0, !dbg !4354
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %avg_no, i64 0, i64 0, !dbg !4355
  %call149 = call float @v3_dist_from_plane(float* %arraydecay146, float* %arraydecay147, float* %arraydecay148), !dbg !4356
  store float %call149, float* %dist, align 4, !dbg !4357
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %push, i64 0, i64 0, !dbg !4358
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %avg_no, i64 0, i64 0, !dbg !4359
  call void @copy_v3_v3(float* %arraydecay150, float* %arraydecay151), !dbg !4360
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %push, i64 0, i64 0, !dbg !4361
  %140 = load float, float* %dist, align 4, !dbg !4362
  call void @mul_v3_fl(float* %arraydecay152, float %140), !dbg !4363
  %141 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4364
  %mvert153 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %141, i32 0, i32 15, !dbg !4365
  %142 = load %struct.MVert*, %struct.MVert** %mvert153, align 8, !dbg !4365
  %143 = load i32, i32* %i, align 4, !dbg !4366
  %idxprom154 = sext i32 %143 to i64, !dbg !4364
  %arrayidx155 = getelementptr inbounds %struct.MVert, %struct.MVert* %142, i64 %idxprom154, !dbg !4364
  %co156 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx155, i32 0, i32 0, !dbg !4367
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %co156, i64 0, i64 0, !dbg !4364
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %push, i64 0, i64 0, !dbg !4368
  call void @add_v3_v3(float* %arraydecay157, float* %arraydecay158), !dbg !4369
  br label %for.inc159, !dbg !4370

for.inc159:                                       ; preds = %for.end139, %if.then36
  %144 = load i32, i32* %i, align 4, !dbg !4371
  %inc160 = add nsw i32 %144, 1, !dbg !4371
  store i32 %inc160, i32* %i, align 4, !dbg !4371
  br label %for.cond28, !dbg !4372, !llvm.loop !4373

for.end161:                                       ; preds = %for.cond28
  %145 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4375
  %146 = load [3 x float]*, [3 x float]** %origco, align 8, !dbg !4376
  %147 = bitcast [3 x float]* %146 to i8*, !dbg !4376
  call void %145(i8* %147), !dbg !4375
  %148 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4377
  %release162 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %148, i32 0, i32 95, !dbg !4378
  %149 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release162, align 8, !dbg !4378
  %150 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4379
  call void %149(%struct.DerivedMesh* %150), !dbg !4377
  %151 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4380
  call void @BKE_mesh_calc_normals(%struct.Mesh* %151), !dbg !4381
  %152 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4382
  %call163 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %152), !dbg !4383
  store %struct.DerivedMesh* %call163, %struct.DerivedMesh** %cddm, align 8, !dbg !4384
  %153 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4385
  %154 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !4386
  call void @DM_set_only_copy(%struct.DerivedMesh* %153, i64 %154), !dbg !4387
  %155 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4388
  %156 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4389
  %157 = load i32, i32* %totlvl, align 4, !dbg !4390
  %158 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !4391
  %flags = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %158, i32 0, i32 6, !dbg !4392
  %159 = load i8, i8* %flags, align 1, !dbg !4392
  %conv164 = zext i8 %159 to i32, !dbg !4391
  %and = and i32 %conv164, 2, !dbg !4393
  %call165 = call %struct.DerivedMesh* @subsurf_dm_create_local(%struct.Object* %155, %struct.DerivedMesh* %156, i32 %157, i32 0, i32 0, i32 %and, i32 0), !dbg !4394
  store %struct.DerivedMesh* %call165, %struct.DerivedMesh** %origdm, align 8, !dbg !4395
  %160 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4396
  %release166 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %160, i32 0, i32 95, !dbg !4397
  %161 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release166, align 8, !dbg !4397
  %162 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !4398
  call void %161(%struct.DerivedMesh* %162), !dbg !4396
  %163 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dispdm, align 8, !dbg !4399
  %164 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4400
  %165 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm, align 8, !dbg !4401
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %165, i32 0, i32 65, !dbg !4402
  %166 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !4402
  %167 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm, align 8, !dbg !4403
  %call167 = call %struct.CCGElem** %166(%struct.DerivedMesh* %167), !dbg !4401
  %168 = load i32, i32* %totlvl, align 4, !dbg !4404
  call void @multiresModifier_disp_run(%struct.DerivedMesh* %163, %struct.Mesh* %164, %struct.DerivedMesh* null, i32 1, %struct.CCGElem** %call167, i32 %168), !dbg !4405
  %169 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm, align 8, !dbg !4406
  %release168 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %169, i32 0, i32 95, !dbg !4407
  %170 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release168, align 8, !dbg !4407
  %171 = load %struct.DerivedMesh*, %struct.DerivedMesh** %origdm, align 8, !dbg !4408
  call void %170(%struct.DerivedMesh* %171), !dbg !4406
  %172 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dispdm, align 8, !dbg !4409
  %release169 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %172, i32 0, i32 95, !dbg !4410
  %173 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release169, align 8, !dbg !4410
  %174 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dispdm, align 8, !dbg !4411
  call void %173(%struct.DerivedMesh* %174), !dbg !4409
  br label %return, !dbg !4412

return:                                           ; preds = %for.end161, %if.then
  ret void, !dbg !4412
}

declare dso_local %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh*) #2

declare dso_local void @DM_set_only_copy(%struct.DerivedMesh*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @multires_dm_create_local(%struct.Object* %ob, %struct.DerivedMesh* %dm, i32 %lvl, i32 %totlvl, i32 %simple, i8 zeroext %alloc_paint_mask) #0 !dbg !4413 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %lvl.addr = alloca i32, align 4
  %totlvl.addr = alloca i32, align 4
  %simple.addr = alloca i32, align 4
  %alloc_paint_mask.addr = alloca i8, align 1
  %mmd = alloca %struct.MultiresModifierData, align 8
  %flags = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4416, metadata !DIExpression()), !dbg !4417
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4418, metadata !DIExpression()), !dbg !4419
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !4420, metadata !DIExpression()), !dbg !4421
  store i32 %totlvl, i32* %totlvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totlvl.addr, metadata !4422, metadata !DIExpression()), !dbg !4423
  store i32 %simple, i32* %simple.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %simple.addr, metadata !4424, metadata !DIExpression()), !dbg !4425
  store i8 %alloc_paint_mask, i8* %alloc_paint_mask.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %alloc_paint_mask.addr, metadata !4426, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData* %mmd, metadata !4428, metadata !DIExpression()), !dbg !4429
  %0 = bitcast %struct.MultiresModifierData* %mmd to i8*, !dbg !4429
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 120, i1 false), !dbg !4429
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !4430, metadata !DIExpression()), !dbg !4432
  store i32 1, i32* %flags, align 4, !dbg !4432
  %1 = load i32, i32* %lvl.addr, align 4, !dbg !4433
  %conv = trunc i32 %1 to i8, !dbg !4433
  %lvl1 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %mmd, i32 0, i32 1, !dbg !4434
  store i8 %conv, i8* %lvl1, align 8, !dbg !4435
  %2 = load i32, i32* %lvl.addr, align 4, !dbg !4436
  %conv2 = trunc i32 %2 to i8, !dbg !4436
  %sculptlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %mmd, i32 0, i32 2, !dbg !4437
  store i8 %conv2, i8* %sculptlvl, align 1, !dbg !4438
  %3 = load i32, i32* %lvl.addr, align 4, !dbg !4439
  %conv3 = trunc i32 %3 to i8, !dbg !4439
  %renderlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %mmd, i32 0, i32 3, !dbg !4440
  store i8 %conv3, i8* %renderlvl, align 2, !dbg !4441
  %4 = load i32, i32* %totlvl.addr, align 4, !dbg !4442
  %conv4 = trunc i32 %4 to i8, !dbg !4442
  %totlvl5 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %mmd, i32 0, i32 4, !dbg !4443
  store i8 %conv4, i8* %totlvl5, align 1, !dbg !4444
  %5 = load i32, i32* %simple.addr, align 4, !dbg !4445
  %conv6 = trunc i32 %5 to i8, !dbg !4445
  %simple7 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %mmd, i32 0, i32 5, !dbg !4446
  store i8 %conv6, i8* %simple7, align 4, !dbg !4447
  %6 = load i8, i8* %alloc_paint_mask.addr, align 1, !dbg !4448
  %tobool = icmp ne i8 %6, 0, !dbg !4448
  br i1 %tobool, label %if.then, label %if.end, !dbg !4450

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %flags, align 4, !dbg !4451
  %or = or i32 %7, 4, !dbg !4451
  store i32 %or, i32* %flags, align 4, !dbg !4451
  br label %if.end, !dbg !4452

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4453
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4454
  %10 = load i32, i32* %flags, align 4, !dbg !4455
  %call = call %struct.DerivedMesh* @multires_make_derived_from_derived(%struct.DerivedMesh* %8, %struct.MultiresModifierData* %mmd, %struct.Object* %9, i32 %10), !dbg !4456
  ret %struct.DerivedMesh* %call, !dbg !4457
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4458 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4462, metadata !DIExpression()), !dbg !4463
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4464, metadata !DIExpression()), !dbg !4465
  %0 = load float*, float** %a.addr, align 8, !dbg !4466
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4466
  %1 = load float, float* %arrayidx, align 4, !dbg !4466
  %2 = load float*, float** %r.addr, align 8, !dbg !4467
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4467
  store float %1, float* %arrayidx1, align 4, !dbg !4468
  %3 = load float*, float** %a.addr, align 8, !dbg !4469
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4469
  %4 = load float, float* %arrayidx2, align 4, !dbg !4469
  %5 = load float*, float** %r.addr, align 8, !dbg !4470
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4470
  store float %4, float* %arrayidx3, align 4, !dbg !4471
  %6 = load float*, float** %a.addr, align 8, !dbg !4472
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4472
  %7 = load float, float* %arrayidx4, align 4, !dbg !4472
  %8 = load float*, float** %r.addr, align 8, !dbg !4473
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4473
  store float %7, float* %arrayidx5, align 4, !dbg !4474
  ret void, !dbg !4475
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !4476 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4477, metadata !DIExpression()), !dbg !4478
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4479, metadata !DIExpression()), !dbg !4480
  %0 = load float*, float** %a.addr, align 8, !dbg !4481
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4481
  %1 = load float, float* %arrayidx, align 4, !dbg !4481
  %2 = load float*, float** %r.addr, align 8, !dbg !4482
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4482
  %3 = load float, float* %arrayidx1, align 4, !dbg !4483
  %add = fadd float %3, %1, !dbg !4483
  store float %add, float* %arrayidx1, align 4, !dbg !4483
  %4 = load float*, float** %a.addr, align 8, !dbg !4484
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !4484
  %5 = load float, float* %arrayidx2, align 4, !dbg !4484
  %6 = load float*, float** %r.addr, align 8, !dbg !4485
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !4485
  %7 = load float, float* %arrayidx3, align 4, !dbg !4486
  %add4 = fadd float %7, %5, !dbg !4486
  store float %add4, float* %arrayidx3, align 4, !dbg !4486
  %8 = load float*, float** %a.addr, align 8, !dbg !4487
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4487
  %9 = load float, float* %arrayidx5, align 4, !dbg !4487
  %10 = load float*, float** %r.addr, align 8, !dbg !4488
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !4488
  %11 = load float, float* %arrayidx6, align 4, !dbg !4489
  %add7 = fadd float %11, %9, !dbg !4489
  store float %add7, float* %arrayidx6, align 4, !dbg !4489
  ret void, !dbg !4490
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !4491 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4494, metadata !DIExpression()), !dbg !4495
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !4496, metadata !DIExpression()), !dbg !4497
  %0 = load float, float* %f.addr, align 4, !dbg !4498
  %1 = load float*, float** %r.addr, align 8, !dbg !4499
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !4499
  %2 = load float, float* %arrayidx, align 4, !dbg !4500
  %mul = fmul float %2, %0, !dbg !4500
  store float %mul, float* %arrayidx, align 4, !dbg !4500
  %3 = load float, float* %f.addr, align 4, !dbg !4501
  %4 = load float*, float** %r.addr, align 8, !dbg !4502
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !4502
  %5 = load float, float* %arrayidx1, align 4, !dbg !4503
  %mul2 = fmul float %5, %3, !dbg !4503
  store float %mul2, float* %arrayidx1, align 4, !dbg !4503
  %6 = load float, float* %f.addr, align 4, !dbg !4504
  %7 = load float*, float** %r.addr, align 8, !dbg !4505
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !4505
  %8 = load float, float* %arrayidx3, align 4, !dbg !4506
  %mul4 = fmul float %8, %6, !dbg !4506
  store float %mul4, float* %arrayidx3, align 4, !dbg !4506
  ret void, !dbg !4507
}

declare dso_local void @BKE_mesh_calc_poly_normal_coords(%struct.MPoly*, %struct.MLoop*, [3 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !4508 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4511, metadata !DIExpression()), !dbg !4512
  %0 = load float*, float** %n.addr, align 8, !dbg !4513
  %1 = load float*, float** %n.addr, align 8, !dbg !4514
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !4515
  ret float %call, !dbg !4516
}

; Function Attrs: noinline nounwind uwtable
define internal float @v3_dist_from_plane(float* %v, float* %center, float* %no) #0 !dbg !4517 {
entry:
  %v.addr = alloca float*, align 8
  %center.addr = alloca float*, align 8
  %no.addr = alloca float*, align 8
  %s = alloca [3 x float], align 4
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  store float* %center, float** %center.addr, align 8
  call void @llvm.dbg.declare(metadata float** %center.addr, metadata !4522, metadata !DIExpression()), !dbg !4523
  store float* %no, float** %no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %no.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.declare(metadata [3 x float]* %s, metadata !4526, metadata !DIExpression()), !dbg !4527
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !4528
  %0 = load float*, float** %v.addr, align 8, !dbg !4529
  %1 = load float*, float** %center.addr, align 8, !dbg !4530
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !4531
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %s, i64 0, i64 0, !dbg !4532
  %2 = load float*, float** %no.addr, align 8, !dbg !4533
  %call = call float @dot_v3v3(float* %arraydecay1, float* %2), !dbg !4534
  ret float %call, !dbg !4535
}

declare dso_local void @BKE_mesh_calc_normals(%struct.Mesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @subsurf_dm_create_local(%struct.Object* %ob, %struct.DerivedMesh* %dm, i32 %lvl, i32 %simple, i32 %optimal, i32 %plain_uv, i32 %alloc_paint_mask) #0 !dbg !4536 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %lvl.addr = alloca i32, align 4
  %simple.addr = alloca i32, align 4
  %optimal.addr = alloca i32, align 4
  %plain_uv.addr = alloca i32, align 4
  %alloc_paint_mask.addr = alloca i32, align 4
  %smd = alloca %struct.SubsurfModifierData, align 8
  %flags = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4539, metadata !DIExpression()), !dbg !4540
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4541, metadata !DIExpression()), !dbg !4542
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !4543, metadata !DIExpression()), !dbg !4544
  store i32 %simple, i32* %simple.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %simple.addr, metadata !4545, metadata !DIExpression()), !dbg !4546
  store i32 %optimal, i32* %optimal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %optimal.addr, metadata !4547, metadata !DIExpression()), !dbg !4548
  store i32 %plain_uv, i32* %plain_uv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plain_uv.addr, metadata !4549, metadata !DIExpression()), !dbg !4550
  store i32 %alloc_paint_mask, i32* %alloc_paint_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_paint_mask.addr, metadata !4551, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.declare(metadata %struct.SubsurfModifierData* %smd, metadata !4553, metadata !DIExpression()), !dbg !4564
  %0 = bitcast %struct.SubsurfModifierData* %smd to i8*, !dbg !4564
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 136, i1 false), !dbg !4564
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !4565, metadata !DIExpression()), !dbg !4567
  store i32 0, i32* %flags, align 4, !dbg !4567
  %1 = load i32, i32* %lvl.addr, align 4, !dbg !4568
  %conv = trunc i32 %1 to i16, !dbg !4568
  %renderLevels = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 3, !dbg !4569
  store i16 %conv, i16* %renderLevels, align 4, !dbg !4570
  %levels = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 2, !dbg !4571
  store i16 %conv, i16* %levels, align 2, !dbg !4572
  %2 = load i32, i32* %plain_uv.addr, align 4, !dbg !4573
  %tobool = icmp ne i32 %2, 0, !dbg !4573
  br i1 %tobool, label %if.end, label %if.then, !dbg !4575

if.then:                                          ; preds = %entry
  %flags1 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 4, !dbg !4576
  %3 = load i16, i16* %flags1, align 2, !dbg !4577
  %conv2 = sext i16 %3 to i32, !dbg !4577
  %or = or i32 %conv2, 8, !dbg !4577
  %conv3 = trunc i32 %or to i16, !dbg !4577
  store i16 %conv3, i16* %flags1, align 2, !dbg !4577
  br label %if.end, !dbg !4578

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %simple.addr, align 4, !dbg !4579
  %tobool4 = icmp ne i32 %4, 0, !dbg !4579
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4581

if.then5:                                         ; preds = %if.end
  %subdivType = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 1, !dbg !4582
  store i16 1, i16* %subdivType, align 8, !dbg !4583
  br label %if.end6, !dbg !4584

if.end6:                                          ; preds = %if.then5, %if.end
  %5 = load i32, i32* %optimal.addr, align 4, !dbg !4585
  %tobool7 = icmp ne i32 %5, 0, !dbg !4585
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !4587

if.then8:                                         ; preds = %if.end6
  %flags9 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 4, !dbg !4588
  %6 = load i16, i16* %flags9, align 2, !dbg !4589
  %conv10 = sext i16 %6 to i32, !dbg !4589
  %or11 = or i32 %conv10, 4, !dbg !4589
  %conv12 = trunc i32 %or11 to i16, !dbg !4589
  store i16 %conv12, i16* %flags9, align 2, !dbg !4589
  br label %if.end13, !dbg !4590

if.end13:                                         ; preds = %if.then8, %if.end6
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4591
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 27, !dbg !4593
  %8 = load i32, i32* %mode, align 8, !dbg !4593
  %and = and i32 %8, 1, !dbg !4594
  %tobool14 = icmp ne i32 %and, 0, !dbg !4594
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !4595

if.then15:                                        ; preds = %if.end13
  %9 = load i32, i32* %flags, align 4, !dbg !4596
  %or16 = or i32 %9, 8, !dbg !4596
  store i32 %or16, i32* %flags, align 4, !dbg !4596
  br label %if.end17, !dbg !4597

if.end17:                                         ; preds = %if.then15, %if.end13
  %10 = load i32, i32* %alloc_paint_mask.addr, align 4, !dbg !4598
  %tobool18 = icmp ne i32 %10, 0, !dbg !4598
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !4600

if.then19:                                        ; preds = %if.end17
  %11 = load i32, i32* %flags, align 4, !dbg !4601
  %or20 = or i32 %11, 16, !dbg !4601
  store i32 %or20, i32* %flags, align 4, !dbg !4601
  br label %if.end21, !dbg !4602

if.end21:                                         ; preds = %if.then19, %if.end17
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4603
  %13 = load i32, i32* %flags, align 4, !dbg !4604
  %call = call %struct.DerivedMesh* @subsurf_make_derived_from_derived(%struct.DerivedMesh* %12, %struct.SubsurfModifierData* %smd, [3 x float]* null, i32 %13), !dbg !4605
  ret %struct.DerivedMesh* %call, !dbg !4606
}

; Function Attrs: noinline nounwind uwtable
define internal void @multiresModifier_disp_run(%struct.DerivedMesh* %dm, %struct.Mesh* %me, %struct.DerivedMesh* %dm2, i32 %op, %struct.CCGElem** %oldGridData, i32 %totlvl) #0 !dbg !4607 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %dm2.addr = alloca %struct.DerivedMesh*, align 8
  %op.addr = alloca i32, align 4
  %oldGridData.addr = alloca %struct.CCGElem**, align 8
  %totlvl.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %gridData = alloca %struct.CCGElem**, align 8
  %subGridData = alloca %struct.CCGElem**, align 8
  %key = alloca %struct.CCGKey, align 4
  %mpoly = alloca %struct.MPoly*, align 8
  %mdisps = alloca %struct.MDisps*, align 8
  %grid_paint_mask = alloca %struct.GridPaintMask*, align 8
  %gridOffset = alloca i32*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %dGridSize = alloca i32, align 4
  %dSkip = alloca i32, align 4
  %totloop = alloca i32, align 4
  %totpoly = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %gIndex = alloca i32, align 4
  %gpm = alloca %struct.GridPaintMask*, align 8
  %mdisp = alloca %struct.MDisps*, align 8
  %grid = alloca %struct.CCGElem*, align 8
  %subgrid = alloca %struct.CCGElem*, align 8
  %dispgrid = alloca [3 x float]*, align 8
  %co = alloca float*, align 8
  %sco = alloca float*, align 8
  %data85 = alloca float*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %disp = alloca [3 x float], align 4
  %d = alloca [3 x float], align 4
  %mask = alloca float, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4612, metadata !DIExpression()), !dbg !4613
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !4614, metadata !DIExpression()), !dbg !4615
  store %struct.DerivedMesh* %dm2, %struct.DerivedMesh** %dm2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm2.addr, metadata !4616, metadata !DIExpression()), !dbg !4617
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !4618, metadata !DIExpression()), !dbg !4619
  store %struct.CCGElem** %oldGridData, %struct.CCGElem*** %oldGridData.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %oldGridData.addr, metadata !4620, metadata !DIExpression()), !dbg !4621
  store i32 %totlvl, i32* %totlvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totlvl.addr, metadata !4622, metadata !DIExpression()), !dbg !4623
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !4624, metadata !DIExpression()), !dbg !4625
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4626
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !4627
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4625
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %gridData, metadata !4628, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %subGridData, metadata !4630, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !4632, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !4634, metadata !DIExpression()), !dbg !4636
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4637
  %mpoly1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 7, !dbg !4638
  %3 = load %struct.MPoly*, %struct.MPoly** %mpoly1, align 8, !dbg !4638
  store %struct.MPoly* %3, %struct.MPoly** %mpoly, align 8, !dbg !4636
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !4639, metadata !DIExpression()), !dbg !4640
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4641
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 25, !dbg !4642
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata, i32 19), !dbg !4643
  %5 = bitcast i8* %call to %struct.MDisps*, !dbg !4643
  store %struct.MDisps* %5, %struct.MDisps** %mdisps, align 8, !dbg !4640
  call void @llvm.dbg.declare(metadata %struct.GridPaintMask** %grid_paint_mask, metadata !4644, metadata !DIExpression()), !dbg !4645
  store %struct.GridPaintMask* null, %struct.GridPaintMask** %grid_paint_mask, align 8, !dbg !4645
  call void @llvm.dbg.declare(metadata i32** %gridOffset, metadata !4646, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4648, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4650, metadata !DIExpression()), !dbg !4651
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !4652, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.declare(metadata i32* %dGridSize, metadata !4654, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.declare(metadata i32* %dSkip, metadata !4656, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !4658, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !4660, metadata !DIExpression()), !dbg !4661
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2.addr, align 8, !dbg !4662
  %tobool = icmp ne %struct.DerivedMesh* %6, null, !dbg !4662
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4664

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2.addr, align 8, !dbg !4665
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 3, !dbg !4666
  %call2 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %loopData, i32 19), !dbg !4667
  %conv = zext i8 %call2 to i32, !dbg !4667
  %tobool3 = icmp ne i32 %conv, 0, !dbg !4667
  br i1 %tobool3, label %if.then, label %if.else, !dbg !4668

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2.addr, align 8, !dbg !4669
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 4, !dbg !4671
  %call4 = call i8* @CustomData_get_layer(%struct.CustomData* %polyData, i32 25), !dbg !4672
  %9 = bitcast i8* %call4 to %struct.MPoly*, !dbg !4672
  store %struct.MPoly* %9, %struct.MPoly** %mpoly, align 8, !dbg !4673
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2.addr, align 8, !dbg !4674
  %loopData5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 3, !dbg !4675
  %call6 = call i8* @CustomData_get_layer(%struct.CustomData* %loopData5, i32 19), !dbg !4676
  %11 = bitcast i8* %call6 to %struct.MDisps*, !dbg !4676
  store %struct.MDisps* %11, %struct.MDisps** %mdisps, align 8, !dbg !4677
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2.addr, align 8, !dbg !4678
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 8, !dbg !4679
  %13 = load i32, i32* %numLoopData, align 4, !dbg !4679
  store i32 %13, i32* %totloop, align 4, !dbg !4680
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2.addr, align 8, !dbg !4681
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 9, !dbg !4682
  %15 = load i32, i32* %numPolyData, align 8, !dbg !4682
  store i32 %15, i32* %totpoly, align 4, !dbg !4683
  br label %if.end, !dbg !4684

if.else:                                          ; preds = %land.lhs.true, %entry
  %16 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4685
  %totloop7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 31, !dbg !4687
  %17 = load i32, i32* %totloop7, align 4, !dbg !4687
  store i32 %17, i32* %totloop, align 4, !dbg !4688
  %18 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4689
  %totpoly8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 30, !dbg !4690
  %19 = load i32, i32* %totpoly8, align 8, !dbg !4690
  store i32 %19, i32* %totpoly, align 4, !dbg !4691
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !4692
  %tobool9 = icmp ne %struct.MDisps* %20, null, !dbg !4692
  br i1 %tobool9, label %if.end18, label %if.then10, !dbg !4694

if.then10:                                        ; preds = %if.end
  %21 = load i32, i32* %op.addr, align 4, !dbg !4695
  %cmp = icmp eq i32 %21, 1, !dbg !4698
  br i1 %cmp, label %if.then12, label %if.else16, !dbg !4699

if.then12:                                        ; preds = %if.then10
  %22 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4700
  %ldata13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 25, !dbg !4701
  %23 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4702
  %totloop14 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 31, !dbg !4703
  %24 = load i32, i32* %totloop14, align 4, !dbg !4703
  %call15 = call i8* @CustomData_add_layer(%struct.CustomData* %ldata13, i32 19, i32 2, i8* null, i32 %24), !dbg !4704
  %25 = bitcast i8* %call15 to %struct.MDisps*, !dbg !4704
  store %struct.MDisps* %25, %struct.MDisps** %mdisps, align 8, !dbg !4705
  br label %if.end17, !dbg !4706

if.else16:                                        ; preds = %if.then10
  br label %if.end160, !dbg !4707

if.end17:                                         ; preds = %if.then12
  br label %if.end18, !dbg !4708

if.end18:                                         ; preds = %if.end17, %if.end
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4709
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 64, !dbg !4710
  %27 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !4710
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4711
  %call19 = call i32 %27(%struct.DerivedMesh* %28), !dbg !4709
  store i32 %call19, i32* %gridSize, align 4, !dbg !4712
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4713
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 65, !dbg !4714
  %30 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !4714
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4715
  %call20 = call %struct.CCGElem** %30(%struct.DerivedMesh* %31), !dbg !4713
  store %struct.CCGElem** %call20, %struct.CCGElem*** %gridData, align 8, !dbg !4716
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4717
  %getGridOffset = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 67, !dbg !4718
  %33 = load i32* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)** %getGridOffset, align 8, !dbg !4718
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4719
  %call21 = call i32* %33(%struct.DerivedMesh* %34), !dbg !4717
  store i32* %call21, i32** %gridOffset, align 8, !dbg !4720
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4721
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %35, i32 0, i32 68, !dbg !4722
  %36 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !4722
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4723
  call void %36(%struct.DerivedMesh* %37, %struct.CCGKey* %key), !dbg !4721
  %38 = load %struct.CCGElem**, %struct.CCGElem*** %oldGridData.addr, align 8, !dbg !4724
  %tobool22 = icmp ne %struct.CCGElem** %38, null, !dbg !4725
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !4725

cond.true:                                        ; preds = %if.end18
  %39 = load %struct.CCGElem**, %struct.CCGElem*** %oldGridData.addr, align 8, !dbg !4726
  br label %cond.end, !dbg !4725

cond.false:                                       ; preds = %if.end18
  %40 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !4727
  br label %cond.end, !dbg !4725

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.CCGElem** [ %39, %cond.true ], [ %40, %cond.false ], !dbg !4725
  store %struct.CCGElem** %cond, %struct.CCGElem*** %subGridData, align 8, !dbg !4728
  %41 = load i32, i32* %totlvl.addr, align 4, !dbg !4729
  %idxprom = sext i32 %41 to i64, !dbg !4730
  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom, !dbg !4730
  %42 = load i32, i32* %arrayidx, align 4, !dbg !4730
  store i32 %42, i32* %dGridSize, align 4, !dbg !4731
  %43 = load i32, i32* %dGridSize, align 4, !dbg !4732
  %sub = sub nsw i32 %43, 1, !dbg !4733
  %44 = load i32, i32* %gridSize, align 4, !dbg !4734
  %sub23 = sub nsw i32 %44, 1, !dbg !4735
  %div = sdiv i32 %sub, %sub23, !dbg !4736
  store i32 %div, i32* %dSkip, align 4, !dbg !4737
  %has_mask = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 9, !dbg !4738
  %45 = load i32, i32* %has_mask, align 4, !dbg !4738
  %tobool24 = icmp ne i32 %45, 0, !dbg !4740
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !4741

if.then25:                                        ; preds = %cond.end
  %46 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !4742
  %ldata26 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %46, i32 0, i32 25, !dbg !4743
  %call27 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata26, i32 35), !dbg !4744
  %47 = bitcast i8* %call27 to %struct.GridPaintMask*, !dbg !4744
  store %struct.GridPaintMask* %47, %struct.GridPaintMask** %grid_paint_mask, align 8, !dbg !4745
  br label %if.end28, !dbg !4746

if.end28:                                         ; preds = %if.then25, %cond.end
  store i32 0, i32* %k, align 4, !dbg !4747
  store i32 0, i32* %i, align 4, !dbg !4748
  br label %for.cond, !dbg !4750

for.cond:                                         ; preds = %for.inc151, %if.end28
  %48 = load i32, i32* %i, align 4, !dbg !4751
  %49 = load i32, i32* %totpoly, align 4, !dbg !4753
  %cmp29 = icmp slt i32 %48, %49, !dbg !4754
  br i1 %cmp29, label %for.body, label %for.end153, !dbg !4755

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !4756, metadata !DIExpression()), !dbg !4758
  %50 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4759
  %51 = load i32, i32* %i, align 4, !dbg !4760
  %idxprom31 = sext i32 %51 to i64, !dbg !4759
  %arrayidx32 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %50, i64 %idxprom31, !dbg !4759
  %totloop33 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx32, i32 0, i32 1, !dbg !4761
  %52 = load i32, i32* %totloop33, align 4, !dbg !4761
  store i32 %52, i32* %numVerts, align 4, !dbg !4758
  call void @llvm.dbg.declare(metadata i32* %S, metadata !4762, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4766, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata i32* %gIndex, metadata !4768, metadata !DIExpression()), !dbg !4769
  %53 = load i32*, i32** %gridOffset, align 8, !dbg !4770
  %54 = load i32, i32* %i, align 4, !dbg !4771
  %idxprom34 = sext i32 %54 to i64, !dbg !4770
  %arrayidx35 = getelementptr inbounds i32, i32* %53, i64 %idxprom34, !dbg !4770
  %55 = load i32, i32* %arrayidx35, align 4, !dbg !4770
  store i32 %55, i32* %gIndex, align 4, !dbg !4769
  store i32 0, i32* %S, align 4, !dbg !4772
  br label %for.cond36, !dbg !4774

for.cond36:                                       ; preds = %for.inc146, %for.body
  %56 = load i32, i32* %S, align 4, !dbg !4775
  %57 = load i32, i32* %numVerts, align 4, !dbg !4777
  %cmp37 = icmp slt i32 %56, %57, !dbg !4778
  br i1 %cmp37, label %for.body39, label %for.end150, !dbg !4779

for.body39:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata %struct.GridPaintMask** %gpm, metadata !4780, metadata !DIExpression()), !dbg !4782
  %58 = load %struct.GridPaintMask*, %struct.GridPaintMask** %grid_paint_mask, align 8, !dbg !4783
  %tobool40 = icmp ne %struct.GridPaintMask* %58, null, !dbg !4783
  br i1 %tobool40, label %cond.true41, label %cond.false44, !dbg !4783

cond.true41:                                      ; preds = %for.body39
  %59 = load %struct.GridPaintMask*, %struct.GridPaintMask** %grid_paint_mask, align 8, !dbg !4784
  %60 = load i32, i32* %gIndex, align 4, !dbg !4785
  %idxprom42 = sext i32 %60 to i64, !dbg !4784
  %arrayidx43 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %59, i64 %idxprom42, !dbg !4784
  br label %cond.end45, !dbg !4783

cond.false44:                                     ; preds = %for.body39
  br label %cond.end45, !dbg !4783

cond.end45:                                       ; preds = %cond.false44, %cond.true41
  %cond46 = phi %struct.GridPaintMask* [ %arrayidx43, %cond.true41 ], [ null, %cond.false44 ], !dbg !4783
  store %struct.GridPaintMask* %cond46, %struct.GridPaintMask** %gpm, align 8, !dbg !4782
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisp, metadata !4786, metadata !DIExpression()), !dbg !4787
  %61 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !4788
  %62 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4789
  %63 = load i32, i32* %i, align 4, !dbg !4790
  %idxprom47 = sext i32 %63 to i64, !dbg !4789
  %arrayidx48 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %62, i64 %idxprom47, !dbg !4789
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx48, i32 0, i32 0, !dbg !4791
  %64 = load i32, i32* %loopstart, align 4, !dbg !4791
  %65 = load i32, i32* %S, align 4, !dbg !4792
  %add = add nsw i32 %64, %65, !dbg !4793
  %idxprom49 = sext i32 %add to i64, !dbg !4788
  %arrayidx50 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %61, i64 %idxprom49, !dbg !4788
  store %struct.MDisps* %arrayidx50, %struct.MDisps** %mdisp, align 8, !dbg !4787
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %grid, metadata !4794, metadata !DIExpression()), !dbg !4795
  %66 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !4796
  %67 = load i32, i32* %gIndex, align 4, !dbg !4797
  %idxprom51 = sext i32 %67 to i64, !dbg !4796
  %arrayidx52 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %66, i64 %idxprom51, !dbg !4796
  %68 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx52, align 8, !dbg !4796
  store %struct.CCGElem* %68, %struct.CCGElem** %grid, align 8, !dbg !4795
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %subgrid, metadata !4798, metadata !DIExpression()), !dbg !4799
  %69 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !4800
  %70 = load i32, i32* %gIndex, align 4, !dbg !4801
  %idxprom53 = sext i32 %70 to i64, !dbg !4800
  %arrayidx54 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %69, i64 %idxprom53, !dbg !4800
  %71 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx54, align 8, !dbg !4800
  store %struct.CCGElem* %71, %struct.CCGElem** %subgrid, align 8, !dbg !4799
  call void @llvm.dbg.declare(metadata [3 x float]** %dispgrid, metadata !4802, metadata !DIExpression()), !dbg !4803
  store [3 x float]* null, [3 x float]** %dispgrid, align 8, !dbg !4803
  %72 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !4804
  %disps = getelementptr inbounds %struct.MDisps, %struct.MDisps* %72, i32 0, i32 2, !dbg !4806
  %73 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !4806
  %tobool55 = icmp ne [3 x float]* %73, null, !dbg !4804
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !4807

if.then56:                                        ; preds = %cond.end45
  %74 = load i32, i32* %totloop, align 4, !dbg !4808
  %75 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !4810
  %76 = load i32, i32* %totlvl.addr, align 4, !dbg !4811
  call void @multires_reallocate_mdisps(i32 %74, %struct.MDisps* %75, i32 %76), !dbg !4812
  br label %if.end57, !dbg !4813

if.end57:                                         ; preds = %if.then56, %cond.end45
  %77 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !4814
  %disps58 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %77, i32 0, i32 2, !dbg !4815
  %78 = load [3 x float]*, [3 x float]** %disps58, align 8, !dbg !4815
  store [3 x float]* %78, [3 x float]** %dispgrid, align 8, !dbg !4816
  %79 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4817
  %tobool59 = icmp ne %struct.GridPaintMask* %79, null, !dbg !4817
  br i1 %tobool59, label %land.lhs.true60, label %if.end74, !dbg !4819

land.lhs.true60:                                  ; preds = %if.end57
  %80 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4820
  %level = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %80, i32 0, i32 1, !dbg !4821
  %81 = load i32, i32* %level, align 8, !dbg !4821
  %level61 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 0, !dbg !4822
  %82 = load i32, i32* %level61, align 4, !dbg !4822
  %cmp62 = icmp ult i32 %81, %82, !dbg !4823
  br i1 %cmp62, label %if.then64, label %if.end74, !dbg !4824

if.then64:                                        ; preds = %land.lhs.true60
  %level65 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 0, !dbg !4825
  %83 = load i32, i32* %level65, align 4, !dbg !4825
  %84 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4827
  %level66 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %84, i32 0, i32 1, !dbg !4828
  store i32 %83, i32* %level66, align 8, !dbg !4829
  %85 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4830
  %data = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %85, i32 0, i32 0, !dbg !4833
  %86 = load float*, float** %data, align 8, !dbg !4833
  %tobool67 = icmp ne float* %86, null, !dbg !4830
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !4834

if.then68:                                        ; preds = %if.then64
  %87 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4835
  %88 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4836
  %data69 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %88, i32 0, i32 0, !dbg !4837
  %89 = load float*, float** %data69, align 8, !dbg !4837
  %90 = bitcast float* %89 to i8*, !dbg !4836
  call void %87(i8* %90), !dbg !4835
  br label %if.end70, !dbg !4835

if.end70:                                         ; preds = %if.then68, %if.then64
  %91 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4838
  %grid_area = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 3, !dbg !4839
  %92 = load i32, i32* %grid_area, align 4, !dbg !4839
  %conv71 = sext i32 %92 to i64, !dbg !4840
  %mul = mul i64 4, %conv71, !dbg !4841
  %call72 = call i8* %91(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0)), !dbg !4838
  %93 = bitcast i8* %call72 to float*, !dbg !4838
  %94 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4842
  %data73 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %94, i32 0, i32 0, !dbg !4843
  store float* %93, float** %data73, align 8, !dbg !4844
  br label %if.end74, !dbg !4845

if.end74:                                         ; preds = %if.end70, %land.lhs.true60, %if.end57
  store i32 0, i32* %y, align 4, !dbg !4846
  br label %for.cond75, !dbg !4848

for.cond75:                                       ; preds = %for.inc143, %if.end74
  %95 = load i32, i32* %y, align 4, !dbg !4849
  %96 = load i32, i32* %gridSize, align 4, !dbg !4851
  %cmp76 = icmp slt i32 %95, %96, !dbg !4852
  br i1 %cmp76, label %for.body78, label %for.end145, !dbg !4853

for.body78:                                       ; preds = %for.cond75
  store i32 0, i32* %x, align 4, !dbg !4854
  br label %for.cond79, !dbg !4857

for.cond79:                                       ; preds = %for.inc, %for.body78
  %97 = load i32, i32* %x, align 4, !dbg !4858
  %98 = load i32, i32* %gridSize, align 4, !dbg !4860
  %cmp80 = icmp slt i32 %97, %98, !dbg !4861
  br i1 %cmp80, label %for.body82, label %for.end, !dbg !4862

for.body82:                                       ; preds = %for.cond79
  call void @llvm.dbg.declare(metadata float** %co, metadata !4863, metadata !DIExpression()), !dbg !4865
  %99 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4866
  %100 = load i32, i32* %x, align 4, !dbg !4867
  %101 = load i32, i32* %y, align 4, !dbg !4868
  %call83 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %99, i32 %100, i32 %101), !dbg !4869
  store float* %call83, float** %co, align 8, !dbg !4865
  call void @llvm.dbg.declare(metadata float** %sco, metadata !4870, metadata !DIExpression()), !dbg !4871
  %102 = load %struct.CCGElem*, %struct.CCGElem** %subgrid, align 8, !dbg !4872
  %103 = load i32, i32* %x, align 4, !dbg !4873
  %104 = load i32, i32* %y, align 4, !dbg !4874
  %call84 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %102, i32 %103, i32 %104), !dbg !4875
  store float* %call84, float** %sco, align 8, !dbg !4871
  call void @llvm.dbg.declare(metadata float** %data85, metadata !4876, metadata !DIExpression()), !dbg !4877
  %105 = load [3 x float]*, [3 x float]** %dispgrid, align 8, !dbg !4878
  %106 = load i32, i32* %dGridSize, align 4, !dbg !4879
  %107 = load i32, i32* %y, align 4, !dbg !4880
  %mul86 = mul nsw i32 %106, %107, !dbg !4881
  %108 = load i32, i32* %dSkip, align 4, !dbg !4882
  %mul87 = mul nsw i32 %mul86, %108, !dbg !4883
  %109 = load i32, i32* %x, align 4, !dbg !4884
  %110 = load i32, i32* %dSkip, align 4, !dbg !4885
  %mul88 = mul nsw i32 %109, %110, !dbg !4886
  %add89 = add nsw i32 %mul87, %mul88, !dbg !4887
  %idxprom90 = sext i32 %add89 to i64, !dbg !4878
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %105, i64 %idxprom90, !dbg !4878
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx91, i64 0, i64 0, !dbg !4878
  store float* %arraydecay, float** %data85, align 8, !dbg !4877
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.declare(metadata [3 x float]* %disp, metadata !4890, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !4892, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.declare(metadata float* %mask, metadata !4894, metadata !DIExpression()), !dbg !4895
  %arraydecay92 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4896
  %111 = load i32, i32* %x, align 4, !dbg !4897
  %112 = load i32, i32* %y, align 4, !dbg !4898
  %113 = load %struct.CCGElem*, %struct.CCGElem** %subgrid, align 8, !dbg !4899
  call void @grid_tangent_matrix([3 x float]* %arraydecay92, %struct.CCGKey* %key, i32 %111, i32 %112, %struct.CCGElem* %113), !dbg !4900
  %114 = load i32, i32* %op.addr, align 4, !dbg !4901
  switch i32 %114, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb96
    i32 2, label %sw.bb102
  ], !dbg !4902

sw.bb:                                            ; preds = %for.body82
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !4903
  %arraydecay94 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4905
  %115 = load float*, float** %data85, align 8, !dbg !4906
  call void @mul_v3_m3v3(float* %arraydecay93, [3 x float]* %arraydecay94, float* %115), !dbg !4907
  %116 = load float*, float** %co, align 8, !dbg !4908
  %117 = load float*, float** %sco, align 8, !dbg !4909
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !4910
  call void @add_v3_v3v3(float* %116, float* %117, float* %arraydecay95), !dbg !4911
  br label %sw.epilog, !dbg !4912

sw.bb96:                                          ; preds = %for.body82
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !4913
  %118 = load float*, float** %co, align 8, !dbg !4914
  %119 = load float*, float** %sco, align 8, !dbg !4915
  call void @sub_v3_v3v3(float* %arraydecay97, float* %118, float* %119), !dbg !4916
  %arraydecay98 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4917
  %call99 = call zeroext i8 @invert_m3([3 x float]* %arraydecay98), !dbg !4918
  %120 = load float*, float** %data85, align 8, !dbg !4919
  %arraydecay100 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4920
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !4921
  call void @mul_v3_m3v3(float* %120, [3 x float]* %arraydecay100, float* %arraydecay101), !dbg !4922
  br label %sw.epilog, !dbg !4923

sw.bb102:                                         ; preds = %for.body82
  %arraydecay103 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4924
  %call104 = call zeroext i8 @invert_m3([3 x float]* %arraydecay103), !dbg !4925
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !4926
  %arraydecay106 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4927
  %121 = load float*, float** %co, align 8, !dbg !4928
  call void @mul_v3_m3v3(float* %arraydecay105, [3 x float]* %arraydecay106, float* %121), !dbg !4929
  %122 = load float*, float** %data85, align 8, !dbg !4930
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !4931
  call void @add_v3_v3(float* %122, float* %arraydecay107), !dbg !4932
  br label %sw.epilog, !dbg !4933

sw.epilog:                                        ; preds = %for.body82, %sw.bb102, %sw.bb96, %sw.bb
  %123 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4934
  %tobool108 = icmp ne %struct.GridPaintMask* %123, null, !dbg !4934
  br i1 %tobool108, label %if.then109, label %if.end142, !dbg !4936

if.then109:                                       ; preds = %sw.epilog
  %124 = load i32, i32* %op.addr, align 4, !dbg !4937
  switch i32 %124, label %sw.epilog141 [
    i32 0, label %sw.bb110
    i32 1, label %sw.bb114
    i32 2, label %sw.bb133
  ], !dbg !4939

sw.bb110:                                         ; preds = %if.then109
  %125 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4940
  %level111 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 0, !dbg !4942
  %126 = load i32, i32* %level111, align 4, !dbg !4942
  %127 = load i32, i32* %x, align 4, !dbg !4943
  %128 = load i32, i32* %y, align 4, !dbg !4944
  %call112 = call float @paint_grid_paint_mask(%struct.GridPaintMask* %125, i32 %126, i32 %127, i32 %128), !dbg !4945
  %129 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4946
  %130 = load i32, i32* %x, align 4, !dbg !4947
  %131 = load i32, i32* %y, align 4, !dbg !4948
  %call113 = call float* @CCG_grid_elem_mask(%struct.CCGKey* %key, %struct.CCGElem* %129, i32 %130, i32 %131), !dbg !4949
  store float %call112, float* %call113, align 4, !dbg !4950
  br label %sw.epilog141, !dbg !4951

sw.bb114:                                         ; preds = %if.then109
  %132 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4952
  %133 = load i32, i32* %x, align 4, !dbg !4953
  %134 = load i32, i32* %y, align 4, !dbg !4954
  %call115 = call float* @CCG_grid_elem_mask(%struct.CCGKey* %key, %struct.CCGElem* %132, i32 %133, i32 %134), !dbg !4955
  %135 = load float, float* %call115, align 4, !dbg !4956
  store float %135, float* %mask, align 4, !dbg !4957
  %136 = load float, float* %mask, align 4, !dbg !4958
  %cmp116 = fcmp olt float %136, 0.000000e+00, !dbg !4958
  br i1 %cmp116, label %cond.true118, label %cond.false119, !dbg !4958

cond.true118:                                     ; preds = %sw.bb114
  br label %cond.end126, !dbg !4958

cond.false119:                                    ; preds = %sw.bb114
  %137 = load float, float* %mask, align 4, !dbg !4958
  %cmp120 = fcmp ogt float %137, 1.000000e+00, !dbg !4958
  br i1 %cmp120, label %cond.true122, label %cond.false123, !dbg !4958

cond.true122:                                     ; preds = %cond.false119
  br label %cond.end124, !dbg !4958

cond.false123:                                    ; preds = %cond.false119
  %138 = load float, float* %mask, align 4, !dbg !4958
  br label %cond.end124, !dbg !4958

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi float [ 1.000000e+00, %cond.true122 ], [ %138, %cond.false123 ], !dbg !4958
  br label %cond.end126, !dbg !4958

cond.end126:                                      ; preds = %cond.end124, %cond.true118
  %cond127 = phi float [ 0.000000e+00, %cond.true118 ], [ %cond125, %cond.end124 ], !dbg !4958
  %139 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4959
  %data128 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %139, i32 0, i32 0, !dbg !4960
  %140 = load float*, float** %data128, align 8, !dbg !4960
  %141 = load i32, i32* %y, align 4, !dbg !4961
  %142 = load i32, i32* %gridSize, align 4, !dbg !4962
  %mul129 = mul nsw i32 %141, %142, !dbg !4963
  %143 = load i32, i32* %x, align 4, !dbg !4964
  %add130 = add nsw i32 %mul129, %143, !dbg !4965
  %idxprom131 = sext i32 %add130 to i64, !dbg !4959
  %arrayidx132 = getelementptr inbounds float, float* %140, i64 %idxprom131, !dbg !4959
  store float %cond127, float* %arrayidx132, align 4, !dbg !4966
  br label %sw.epilog141, !dbg !4967

sw.bb133:                                         ; preds = %if.then109
  %144 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !4968
  %145 = load i32, i32* %x, align 4, !dbg !4969
  %146 = load i32, i32* %y, align 4, !dbg !4970
  %call134 = call float* @CCG_grid_elem_mask(%struct.CCGKey* %key, %struct.CCGElem* %144, i32 %145, i32 %146), !dbg !4971
  %147 = load float, float* %call134, align 4, !dbg !4972
  %148 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !4973
  %data135 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %148, i32 0, i32 0, !dbg !4974
  %149 = load float*, float** %data135, align 8, !dbg !4974
  %150 = load i32, i32* %y, align 4, !dbg !4975
  %151 = load i32, i32* %gridSize, align 4, !dbg !4976
  %mul136 = mul nsw i32 %150, %151, !dbg !4977
  %152 = load i32, i32* %x, align 4, !dbg !4978
  %add137 = add nsw i32 %mul136, %152, !dbg !4979
  %idxprom138 = sext i32 %add137 to i64, !dbg !4973
  %arrayidx139 = getelementptr inbounds float, float* %149, i64 %idxprom138, !dbg !4973
  %153 = load float, float* %arrayidx139, align 4, !dbg !4980
  %add140 = fadd float %153, %147, !dbg !4980
  store float %add140, float* %arrayidx139, align 4, !dbg !4980
  br label %sw.epilog141, !dbg !4981

sw.epilog141:                                     ; preds = %if.then109, %sw.bb133, %cond.end126, %sw.bb110
  br label %if.end142, !dbg !4982

if.end142:                                        ; preds = %sw.epilog141, %sw.epilog
  br label %for.inc, !dbg !4983

for.inc:                                          ; preds = %if.end142
  %154 = load i32, i32* %x, align 4, !dbg !4984
  %inc = add nsw i32 %154, 1, !dbg !4984
  store i32 %inc, i32* %x, align 4, !dbg !4984
  br label %for.cond79, !dbg !4985, !llvm.loop !4986

for.end:                                          ; preds = %for.cond79
  br label %for.inc143, !dbg !4988

for.inc143:                                       ; preds = %for.end
  %155 = load i32, i32* %y, align 4, !dbg !4989
  %inc144 = add nsw i32 %155, 1, !dbg !4989
  store i32 %inc144, i32* %y, align 4, !dbg !4989
  br label %for.cond75, !dbg !4990, !llvm.loop !4991

for.end145:                                       ; preds = %for.cond75
  br label %for.inc146, !dbg !4993

for.inc146:                                       ; preds = %for.end145
  %156 = load i32, i32* %S, align 4, !dbg !4994
  %inc147 = add nsw i32 %156, 1, !dbg !4994
  store i32 %inc147, i32* %S, align 4, !dbg !4994
  %157 = load i32, i32* %gIndex, align 4, !dbg !4995
  %inc148 = add nsw i32 %157, 1, !dbg !4995
  store i32 %inc148, i32* %gIndex, align 4, !dbg !4995
  %158 = load i32, i32* %k, align 4, !dbg !4996
  %inc149 = add nsw i32 %158, 1, !dbg !4996
  store i32 %inc149, i32* %k, align 4, !dbg !4996
  br label %for.cond36, !dbg !4997, !llvm.loop !4998

for.end150:                                       ; preds = %for.cond36
  br label %for.inc151, !dbg !5000

for.inc151:                                       ; preds = %for.end150
  %159 = load i32, i32* %i, align 4, !dbg !5001
  %inc152 = add nsw i32 %159, 1, !dbg !5001
  store i32 %inc152, i32* %i, align 4, !dbg !5001
  br label %for.cond, !dbg !5002, !llvm.loop !5003

for.end153:                                       ; preds = %for.cond
  %160 = load i32, i32* %op.addr, align 4, !dbg !5005
  %cmp154 = icmp eq i32 %160, 0, !dbg !5007
  br i1 %cmp154, label %if.then156, label %if.end160, !dbg !5008

if.then156:                                       ; preds = %for.end153
  %161 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5009
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %161, i32 0, i32 1, !dbg !5011
  %162 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5011
  %call157 = call i32 @ccgSubSurf_stitchFaces(%struct.CCGSubSurf* %162, i32 0, %struct.CCGFace** null, i32 0), !dbg !5012
  %163 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5013
  %ss158 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %163, i32 0, i32 1, !dbg !5014
  %164 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss158, align 8, !dbg !5014
  %call159 = call i32 @ccgSubSurf_updateNormals(%struct.CCGSubSurf* %164, %struct.CCGFace** null, i32 0), !dbg !5015
  br label %if.end160, !dbg !5016

if.end160:                                        ; preds = %if.else16, %if.then156, %for.end153
  ret void, !dbg !5017
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multiresModifier_subdivide(%struct.MultiresModifierData* %mmd, %struct.Object* %ob, i32 %updateblock, i32 %simple) #0 !dbg !5018 {
entry:
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %updateblock.addr = alloca i32, align 4
  %simple.addr = alloca i32, align 4
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !5021, metadata !DIExpression()), !dbg !5022
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5023, metadata !DIExpression()), !dbg !5024
  store i32 %updateblock, i32* %updateblock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %updateblock.addr, metadata !5025, metadata !DIExpression()), !dbg !5026
  store i32 %simple, i32* %simple.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %simple.addr, metadata !5027, metadata !DIExpression()), !dbg !5028
  %0 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !5029
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5030
  %2 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !5031
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %2, i32 0, i32 4, !dbg !5032
  %3 = load i8, i8* %totlvl, align 1, !dbg !5032
  %conv = zext i8 %3 to i32, !dbg !5031
  %add = add nsw i32 %conv, 1, !dbg !5033
  %4 = load i32, i32* %updateblock.addr, align 4, !dbg !5034
  %5 = load i32, i32* %simple.addr, align 4, !dbg !5035
  call void @multires_subdivide(%struct.MultiresModifierData* %0, %struct.Object* %1, i32 %add, i32 %4, i32 %5), !dbg !5036
  ret void, !dbg !5037
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_subdivide(%struct.MultiresModifierData* %mmd, %struct.Object* %ob, i32 %totlvl, i32 %updateblock, i32 %simple) #0 !dbg !5038 {
entry:
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %totlvl.addr = alloca i32, align 4
  %updateblock.addr = alloca i32, align 4
  %simple.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %mdisps = alloca %struct.MDisps*, align 8
  %lvl = alloca i32, align 4
  %lowdm = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.DerivedMesh*, align 8
  %highdm = alloca %struct.DerivedMesh*, align 8
  %highGridData = alloca %struct.CCGElem**, align 8
  %lowGridData = alloca %struct.CCGElem**, align 8
  %subGridData = alloca %struct.CCGElem**, align 8
  %highGridKey = alloca %struct.CCGKey, align 4
  %lowGridKey = alloca %struct.CCGKey, align 4
  %ss = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  %numGrids = alloca i32, align 4
  %highGridSize = alloca i32, align 4
  %has_mask = alloca i8, align 1
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !5041, metadata !DIExpression()), !dbg !5042
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5043, metadata !DIExpression()), !dbg !5044
  store i32 %totlvl, i32* %totlvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totlvl.addr, metadata !5045, metadata !DIExpression()), !dbg !5046
  store i32 %updateblock, i32* %updateblock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %updateblock.addr, metadata !5047, metadata !DIExpression()), !dbg !5048
  store i32 %simple, i32* %simple.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %simple.addr, metadata !5049, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5051, metadata !DIExpression()), !dbg !5052
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5053
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5054
  %1 = load i8*, i8** %data, align 8, !dbg !5054
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !5053
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !5052
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !5055, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.declare(metadata i32* %lvl, metadata !5057, metadata !DIExpression()), !dbg !5058
  %3 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !5059
  %totlvl1 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %3, i32 0, i32 4, !dbg !5060
  %4 = load i8, i8* %totlvl1, align 1, !dbg !5060
  %conv = zext i8 %4 to i32, !dbg !5059
  store i32 %conv, i32* %lvl, align 4, !dbg !5058
  %5 = load i32, i32* %totlvl.addr, align 4, !dbg !5061
  %cmp = icmp sgt i32 %5, 13, !dbg !5063
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5064

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5065
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 30, !dbg !5066
  %7 = load i32, i32* %totpoly, align 8, !dbg !5066
  %cmp3 = icmp eq i32 %7, 0, !dbg !5067
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5068

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5069

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5070
  call void @multires_force_update(%struct.Object* %8), !dbg !5071
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5072
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 25, !dbg !5073
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata, i32 19), !dbg !5074
  %10 = bitcast i8* %call to %struct.MDisps*, !dbg !5074
  store %struct.MDisps* %10, %struct.MDisps** %mdisps, align 8, !dbg !5075
  %11 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !5076
  %tobool = icmp ne %struct.MDisps* %11, null, !dbg !5076
  br i1 %tobool, label %if.end7, label %if.then5, !dbg !5078

if.then5:                                         ; preds = %if.end
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5079
  %13 = load i32, i32* %totlvl.addr, align 4, !dbg !5080
  %call6 = call %struct.MDisps* @multires_mdisps_initialize_hidden(%struct.Mesh* %12, i32 %13), !dbg !5081
  store %struct.MDisps* %call6, %struct.MDisps** %mdisps, align 8, !dbg !5082
  br label %if.end7, !dbg !5083

if.end7:                                          ; preds = %if.then5, %if.end
  %14 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !5084
  %disps = getelementptr inbounds %struct.MDisps, %struct.MDisps* %14, i32 0, i32 2, !dbg !5086
  %15 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !5086
  %tobool8 = icmp ne [3 x float]* %15, null, !dbg !5084
  br i1 %tobool8, label %land.lhs.true, label %if.else, !dbg !5087

land.lhs.true:                                    ; preds = %if.end7
  %16 = load i32, i32* %updateblock.addr, align 4, !dbg !5088
  %tobool9 = icmp ne i32 %16, 0, !dbg !5088
  br i1 %tobool9, label %if.else, label %land.lhs.true10, !dbg !5089

land.lhs.true10:                                  ; preds = %land.lhs.true
  %17 = load i32, i32* %totlvl.addr, align 4, !dbg !5090
  %cmp11 = icmp sgt i32 %17, 1, !dbg !5091
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !5092

if.then13:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lowdm, metadata !5093, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %cddm, metadata !5096, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %highdm, metadata !5098, metadata !DIExpression()), !dbg !5099
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %highGridData, metadata !5100, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %lowGridData, metadata !5102, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %subGridData, metadata !5104, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %highGridKey, metadata !5106, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %lowGridKey, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata i32* %numGrids, metadata !5114, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.declare(metadata i32* %highGridSize, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.declare(metadata i8* %has_mask, metadata !5118, metadata !DIExpression()), !dbg !5119
  %18 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5120
  %ldata14 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 25, !dbg !5121
  %call15 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %ldata14, i32 35), !dbg !5122
  store i8 %call15, i8* %has_mask, align 1, !dbg !5119
  %19 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5123
  %call16 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %19), !dbg !5124
  store %struct.DerivedMesh* %call16, %struct.DerivedMesh** %cddm, align 8, !dbg !5125
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5126
  %21 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !5127
  call void @DM_set_only_copy(%struct.DerivedMesh* %20, i64 %21), !dbg !5128
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5129
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5130
  %24 = load i32, i32* %totlvl.addr, align 4, !dbg !5131
  %25 = load i32, i32* %simple.addr, align 4, !dbg !5132
  %26 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !5133
  %flags = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %26, i32 0, i32 6, !dbg !5134
  %27 = load i8, i8* %flags, align 1, !dbg !5134
  %conv17 = zext i8 %27 to i32, !dbg !5133
  %and = and i32 %conv17, 2, !dbg !5135
  %28 = load i8, i8* %has_mask, align 1, !dbg !5136
  %conv18 = zext i8 %28 to i32, !dbg !5136
  %call19 = call %struct.DerivedMesh* @subsurf_dm_create_local(%struct.Object* %22, %struct.DerivedMesh* %23, i32 %24, i32 %25, i32 0, i32 %and, i32 %conv18), !dbg !5137
  store %struct.DerivedMesh* %call19, %struct.DerivedMesh** %highdm, align 8, !dbg !5138
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5139
  %30 = bitcast %struct.DerivedMesh* %29 to %struct.CCGDerivedMesh*, !dbg !5140
  %ss20 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %30, i32 0, i32 1, !dbg !5140
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss20, align 8, !dbg !5140
  store %struct.CCGSubSurf* %31, %struct.CCGSubSurf** %ss, align 8, !dbg !5141
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5142
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5143
  %34 = load i32, i32* %lvl, align 4, !dbg !5144
  %35 = load i32, i32* %lvl, align 4, !dbg !5145
  %36 = load i32, i32* %simple.addr, align 4, !dbg !5146
  %37 = load i8, i8* %has_mask, align 1, !dbg !5147
  %call21 = call %struct.DerivedMesh* @multires_dm_create_local(%struct.Object* %32, %struct.DerivedMesh* %33, i32 %34, i32 %35, i32 %36, i8 zeroext %37), !dbg !5148
  store %struct.DerivedMesh* %call21, %struct.DerivedMesh** %lowdm, align 8, !dbg !5149
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5150
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %38, i32 0, i32 95, !dbg !5151
  %39 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !5151
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5152
  call void %39(%struct.DerivedMesh* %40), !dbg !5150
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5153
  %getNumGrids = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %41, i32 0, i32 63, !dbg !5154
  %42 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumGrids, align 8, !dbg !5154
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5155
  %call22 = call i32 %42(%struct.DerivedMesh* %43), !dbg !5153
  store i32 %call22, i32* %numGrids, align 4, !dbg !5156
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5157
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %44, i32 0, i32 64, !dbg !5158
  %45 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !5158
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5159
  %call23 = call i32 %45(%struct.DerivedMesh* %46), !dbg !5157
  store i32 %call23, i32* %highGridSize, align 4, !dbg !5160
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5161
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %47, i32 0, i32 65, !dbg !5162
  %48 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !5162
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5163
  %call24 = call %struct.CCGElem** %48(%struct.DerivedMesh* %49), !dbg !5161
  store %struct.CCGElem** %call24, %struct.CCGElem*** %highGridData, align 8, !dbg !5164
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5165
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %50, i32 0, i32 68, !dbg !5166
  %51 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !5166
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5167
  call void %51(%struct.DerivedMesh* %52, %struct.CCGKey* %highGridKey), !dbg !5165
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5168
  %getGridData25 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %53, i32 0, i32 65, !dbg !5169
  %54 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData25, align 8, !dbg !5169
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5170
  %call26 = call %struct.CCGElem** %54(%struct.DerivedMesh* %55), !dbg !5168
  store %struct.CCGElem** %call26, %struct.CCGElem*** %lowGridData, align 8, !dbg !5171
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5172
  %getGridKey27 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %56, i32 0, i32 68, !dbg !5173
  %57 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey27, align 8, !dbg !5173
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5174
  call void %57(%struct.DerivedMesh* %58, %struct.CCGKey* %lowGridKey), !dbg !5172
  %59 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5175
  %60 = load i32, i32* %numGrids, align 4, !dbg !5176
  %conv28 = sext i32 %60 to i64, !dbg !5176
  %mul = mul i64 8, %conv28, !dbg !5177
  %call29 = call i8* %59(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !5175
  %61 = bitcast i8* %call29 to %struct.CCGElem**, !dbg !5175
  store %struct.CCGElem** %61, %struct.CCGElem*** %subGridData, align 8, !dbg !5178
  store i32 0, i32* %i, align 4, !dbg !5179
  br label %for.cond, !dbg !5181

for.cond:                                         ; preds = %for.inc, %if.then13
  %62 = load i32, i32* %i, align 4, !dbg !5182
  %63 = load i32, i32* %numGrids, align 4, !dbg !5184
  %cmp30 = icmp slt i32 %62, %63, !dbg !5185
  br i1 %cmp30, label %for.body, label %for.end, !dbg !5186

for.body:                                         ; preds = %for.cond
  %64 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5187
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %highGridKey, i32 0, i32 1, !dbg !5189
  %65 = load i32, i32* %elem_size, align 4, !dbg !5189
  %66 = load i32, i32* %highGridSize, align 4, !dbg !5190
  %mul32 = mul nsw i32 %65, %66, !dbg !5191
  %67 = load i32, i32* %highGridSize, align 4, !dbg !5192
  %mul33 = mul nsw i32 %mul32, %67, !dbg !5193
  %conv34 = sext i32 %mul33 to i64, !dbg !5194
  %call35 = call i8* %64(i64 %conv34, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)), !dbg !5187
  %68 = bitcast i8* %call35 to %struct.CCGElem*, !dbg !5187
  %69 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5195
  %70 = load i32, i32* %i, align 4, !dbg !5196
  %idxprom = sext i32 %70 to i64, !dbg !5195
  %arrayidx = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %69, i64 %idxprom, !dbg !5195
  store %struct.CCGElem* %68, %struct.CCGElem** %arrayidx, align 8, !dbg !5197
  %71 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5198
  %72 = load i32, i32* %i, align 4, !dbg !5199
  %idxprom36 = sext i32 %72 to i64, !dbg !5198
  %arrayidx37 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %71, i64 %idxprom36, !dbg !5198
  %73 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx37, align 8, !dbg !5198
  %74 = bitcast %struct.CCGElem* %73 to i8*, !dbg !5200
  %75 = load %struct.CCGElem**, %struct.CCGElem*** %highGridData, align 8, !dbg !5201
  %76 = load i32, i32* %i, align 4, !dbg !5202
  %idxprom38 = sext i32 %76 to i64, !dbg !5201
  %arrayidx39 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %75, i64 %idxprom38, !dbg !5201
  %77 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx39, align 8, !dbg !5201
  %78 = bitcast %struct.CCGElem* %77 to i8*, !dbg !5200
  %elem_size40 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %highGridKey, i32 0, i32 1, !dbg !5203
  %79 = load i32, i32* %elem_size40, align 4, !dbg !5203
  %80 = load i32, i32* %highGridSize, align 4, !dbg !5204
  %mul41 = mul nsw i32 %79, %80, !dbg !5205
  %81 = load i32, i32* %highGridSize, align 4, !dbg !5206
  %mul42 = mul nsw i32 %mul41, %81, !dbg !5207
  %conv43 = sext i32 %mul42 to i64, !dbg !5208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %78, i64 %conv43, i1 false), !dbg !5200
  %82 = load %struct.CCGElem**, %struct.CCGElem*** %highGridData, align 8, !dbg !5209
  %83 = load i32, i32* %i, align 4, !dbg !5210
  %idxprom44 = sext i32 %83 to i64, !dbg !5209
  %arrayidx45 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %82, i64 %idxprom44, !dbg !5209
  %84 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx45, align 8, !dbg !5209
  %85 = load %struct.CCGElem**, %struct.CCGElem*** %lowGridData, align 8, !dbg !5211
  %86 = load i32, i32* %i, align 4, !dbg !5212
  %idxprom46 = sext i32 %86 to i64, !dbg !5211
  %arrayidx47 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %85, i64 %idxprom46, !dbg !5211
  %87 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx47, align 8, !dbg !5211
  call void @multires_copy_dm_grid(%struct.CCGElem* %84, %struct.CCGElem* %87, %struct.CCGKey* %highGridKey, %struct.CCGKey* %lowGridKey), !dbg !5213
  br label %for.inc, !dbg !5214

for.inc:                                          ; preds = %for.body
  %88 = load i32, i32* %i, align 4, !dbg !5215
  %inc = add nsw i32 %88, 1, !dbg !5215
  store i32 %inc, i32* %i, align 4, !dbg !5215
  br label %for.cond, !dbg !5216, !llvm.loop !5217

for.end:                                          ; preds = %for.cond
  %89 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5219
  %release48 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %89, i32 0, i32 95, !dbg !5220
  %90 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release48, align 8, !dbg !5220
  %91 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5221
  call void %90(%struct.DerivedMesh* %91), !dbg !5219
  %92 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5222
  %93 = load i32, i32* %lvl, align 4, !dbg !5223
  %call49 = call i32 @ccgSubSurf_updateFromFaces(%struct.CCGSubSurf* %92, i32 %93, %struct.CCGFace** null, i32 0), !dbg !5224
  %94 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5225
  %95 = load i32, i32* %lvl, align 4, !dbg !5226
  %call50 = call i32 @ccgSubSurf_updateLevels(%struct.CCGSubSurf* %94, i32 %95, %struct.CCGFace** null, i32 0), !dbg !5227
  %96 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5228
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %96, i32 0, i32 31, !dbg !5229
  %97 = load i32, i32* %totloop, align 4, !dbg !5229
  %98 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !5230
  %99 = load i32, i32* %totlvl.addr, align 4, !dbg !5231
  call void @multires_reallocate_mdisps(i32 %97, %struct.MDisps* %98, i32 %99), !dbg !5232
  %100 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5233
  %101 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5234
  %102 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5235
  %103 = load i32, i32* %totlvl.addr, align 4, !dbg !5236
  call void @multiresModifier_disp_run(%struct.DerivedMesh* %100, %struct.Mesh* %101, %struct.DerivedMesh* null, i32 1, %struct.CCGElem** %102, i32 %103), !dbg !5237
  %104 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5238
  %release51 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %104, i32 0, i32 95, !dbg !5239
  %105 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release51, align 8, !dbg !5239
  %106 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5240
  call void %105(%struct.DerivedMesh* %106), !dbg !5238
  store i32 0, i32* %i, align 4, !dbg !5241
  br label %for.cond52, !dbg !5243

for.cond52:                                       ; preds = %for.inc58, %for.end
  %107 = load i32, i32* %i, align 4, !dbg !5244
  %108 = load i32, i32* %numGrids, align 4, !dbg !5246
  %cmp53 = icmp slt i32 %107, %108, !dbg !5247
  br i1 %cmp53, label %for.body55, label %for.end60, !dbg !5248

for.body55:                                       ; preds = %for.cond52
  %109 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5249
  %110 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5250
  %111 = load i32, i32* %i, align 4, !dbg !5251
  %idxprom56 = sext i32 %111 to i64, !dbg !5250
  %arrayidx57 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %110, i64 %idxprom56, !dbg !5250
  %112 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx57, align 8, !dbg !5250
  %113 = bitcast %struct.CCGElem* %112 to i8*, !dbg !5250
  call void %109(i8* %113), !dbg !5249
  br label %for.inc58, !dbg !5249

for.inc58:                                        ; preds = %for.body55
  %114 = load i32, i32* %i, align 4, !dbg !5252
  %inc59 = add nsw i32 %114, 1, !dbg !5252
  store i32 %inc59, i32* %i, align 4, !dbg !5252
  br label %for.cond52, !dbg !5253, !llvm.loop !5254

for.end60:                                        ; preds = %for.cond52
  %115 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5256
  %116 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5257
  %117 = bitcast %struct.CCGElem** %116 to i8*, !dbg !5257
  call void %115(i8* %117), !dbg !5256
  br label %if.end62, !dbg !5258

if.else:                                          ; preds = %land.lhs.true10, %land.lhs.true, %if.end7
  %118 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5259
  %totloop61 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %118, i32 0, i32 31, !dbg !5261
  %119 = load i32, i32* %totloop61, align 4, !dbg !5261
  %120 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !5262
  %121 = load i32, i32* %totlvl.addr, align 4, !dbg !5263
  call void @multires_reallocate_mdisps(i32 %119, %struct.MDisps* %120, i32 %121), !dbg !5264
  br label %if.end62

if.end62:                                         ; preds = %if.else, %for.end60
  %122 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5265
  %123 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !5266
  %124 = load i32, i32* %totlvl.addr, align 4, !dbg !5267
  call void @multires_set_tot_level(%struct.Object* %122, %struct.MultiresModifierData* %123, i32 %124), !dbg !5268
  br label %return, !dbg !5269

return:                                           ; preds = %if.end62, %if.then
  ret void, !dbg !5269
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_modifier_update_mdisps(%struct.DerivedMesh* %dm) #0 !dbg !5270 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mdisps = alloca %struct.MDisps*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %lvl = alloca i32, align 4
  %totlvl9 = alloca i32, align 4
  %lowdm = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.DerivedMesh*, align 8
  %highdm = alloca %struct.DerivedMesh*, align 8
  %highGridData = alloca %struct.CCGElem**, align 8
  %lowGridData = alloca %struct.CCGElem**, align 8
  %subGridData = alloca %struct.CCGElem**, align 8
  %gridData = alloca %struct.CCGElem**, align 8
  %diffGrid = alloca %struct.CCGElem*, align 8
  %highGridKey = alloca %struct.CCGKey, align 4
  %lowGridKey = alloca %struct.CCGKey, align 4
  %ss = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %numGrids = alloca i32, align 4
  %highGridSize = alloca i32, align 4
  %lowGridSize = alloca i32, align 4
  %has_mask = alloca i8, align 1
  %cddm93 = alloca %struct.DerivedMesh*, align 8
  %subdm = alloca %struct.DerivedMesh*, align 8
  %has_mask94 = alloca i8, align 1
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5273, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !5275, metadata !DIExpression()), !dbg !5276
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5277
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !5278
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5276
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5279, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5281, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !5283, metadata !DIExpression()), !dbg !5284
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !5285, metadata !DIExpression()), !dbg !5286
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5287
  %multires = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 20, !dbg !5288
  %ob1 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires, i32 0, i32 5, !dbg !5289
  %3 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !5289
  store %struct.Object* %3, %struct.Object** %ob, align 8, !dbg !5290
  %4 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5291
  %multires2 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %4, i32 0, i32 20, !dbg !5292
  %ob3 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires2, i32 0, i32 5, !dbg !5293
  %5 = load %struct.Object*, %struct.Object** %ob3, align 8, !dbg !5293
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !5294
  %6 = load i8*, i8** %data, align 8, !dbg !5294
  %7 = bitcast i8* %6 to %struct.Mesh*, !dbg !5291
  store %struct.Mesh* %7, %struct.Mesh** %me, align 8, !dbg !5295
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5296
  %multires4 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %8, i32 0, i32 20, !dbg !5297
  %mmd5 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires4, i32 0, i32 0, !dbg !5298
  %9 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd5, align 8, !dbg !5298
  store %struct.MultiresModifierData* %9, %struct.MultiresModifierData** %mmd, align 8, !dbg !5299
  %10 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5300
  %11 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5301
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %11, i32 0, i32 4, !dbg !5302
  %12 = load i8, i8* %totlvl, align 1, !dbg !5302
  %conv = zext i8 %12 to i32, !dbg !5301
  call void @multires_set_tot_mdisps(%struct.Mesh* %10, i32 %conv), !dbg !5303
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5304
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 25, !dbg !5305
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5306
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 0, !dbg !5307
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5308
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 31, !dbg !5309
  %16 = load i32, i32* %totloop, align 4, !dbg !5309
  call void @CustomData_external_read(%struct.CustomData* %ldata, %struct.ID* %id, i64 524288, i32 %16), !dbg !5310
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5311
  %ldata6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 25, !dbg !5312
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata6, i32 19), !dbg !5313
  %18 = bitcast i8* %call to %struct.MDisps*, !dbg !5313
  store %struct.MDisps* %18, %struct.MDisps** %mdisps, align 8, !dbg !5314
  %19 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !5315
  %tobool = icmp ne %struct.MDisps* %19, null, !dbg !5315
  br i1 %tobool, label %if.then, label %if.end121, !dbg !5317

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %lvl, metadata !5318, metadata !DIExpression()), !dbg !5320
  %20 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5321
  %multires7 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %20, i32 0, i32 20, !dbg !5322
  %lvl8 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires7, i32 0, i32 2, !dbg !5323
  %21 = load i32, i32* %lvl8, align 4, !dbg !5323
  store i32 %21, i32* %lvl, align 4, !dbg !5320
  call void @llvm.dbg.declare(metadata i32* %totlvl9, metadata !5324, metadata !DIExpression()), !dbg !5325
  %22 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5326
  %multires10 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %22, i32 0, i32 20, !dbg !5327
  %totlvl11 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires10, i32 0, i32 3, !dbg !5328
  %23 = load i32, i32* %totlvl11, align 8, !dbg !5328
  store i32 %23, i32* %totlvl9, align 4, !dbg !5325
  %24 = load i32, i32* %lvl, align 4, !dbg !5329
  %25 = load i32, i32* %totlvl9, align 4, !dbg !5331
  %cmp = icmp slt i32 %24, %25, !dbg !5332
  br i1 %cmp, label %if.then13, label %if.else92, !dbg !5333

if.then13:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lowdm, metadata !5334, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %cddm, metadata !5337, metadata !DIExpression()), !dbg !5338
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %highdm, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %highGridData, metadata !5341, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %lowGridData, metadata !5343, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %subGridData, metadata !5345, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %gridData, metadata !5347, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %diffGrid, metadata !5349, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %highGridKey, metadata !5351, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %lowGridKey, metadata !5353, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !5355, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5357, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5359, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.declare(metadata i32* %numGrids, metadata !5361, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.declare(metadata i32* %highGridSize, metadata !5363, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.declare(metadata i32* %lowGridSize, metadata !5365, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.declare(metadata i8* %has_mask, metadata !5367, metadata !DIExpression()), !dbg !5368
  %26 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5369
  %ldata14 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 25, !dbg !5370
  %call15 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %ldata14, i32 35), !dbg !5371
  store i8 %call15, i8* %has_mask, align 1, !dbg !5368
  %27 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5372
  %derivedDeform = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 119, !dbg !5374
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform, align 8, !dbg !5374
  %tobool16 = icmp ne %struct.DerivedMesh* %28, null, !dbg !5372
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !5375

if.then17:                                        ; preds = %if.then13
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5376
  %derivedDeform18 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 119, !dbg !5377
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform18, align 8, !dbg !5377
  %call19 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %30), !dbg !5378
  store %struct.DerivedMesh* %call19, %struct.DerivedMesh** %cddm, align 8, !dbg !5379
  br label %if.end, !dbg !5380

if.else:                                          ; preds = %if.then13
  %31 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5381
  %call20 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %31), !dbg !5382
  store %struct.DerivedMesh* %call20, %struct.DerivedMesh** %cddm, align 8, !dbg !5383
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then17
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5384
  %33 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !5385
  call void @DM_set_only_copy(%struct.DerivedMesh* %32, i64 %33), !dbg !5386
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5387
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5388
  %36 = load i32, i32* %totlvl9, align 4, !dbg !5389
  %37 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5390
  %simple = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %37, i32 0, i32 5, !dbg !5391
  %38 = load i8, i8* %simple, align 4, !dbg !5391
  %conv21 = zext i8 %38 to i32, !dbg !5390
  %39 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5392
  %flags = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %39, i32 0, i32 6, !dbg !5393
  %40 = load i8, i8* %flags, align 1, !dbg !5393
  %conv22 = zext i8 %40 to i32, !dbg !5392
  %and = and i32 %conv22, 2, !dbg !5394
  %41 = load i8, i8* %has_mask, align 1, !dbg !5395
  %conv23 = zext i8 %41 to i32, !dbg !5395
  %call24 = call %struct.DerivedMesh* @subsurf_dm_create_local(%struct.Object* %34, %struct.DerivedMesh* %35, i32 %36, i32 %conv21, i32 0, i32 %and, i32 %conv23), !dbg !5396
  store %struct.DerivedMesh* %call24, %struct.DerivedMesh** %highdm, align 8, !dbg !5397
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5398
  %43 = bitcast %struct.DerivedMesh* %42 to %struct.CCGDerivedMesh*, !dbg !5399
  %ss25 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %43, i32 0, i32 1, !dbg !5399
  %44 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss25, align 8, !dbg !5399
  store %struct.CCGSubSurf* %44, %struct.CCGSubSurf** %ss, align 8, !dbg !5400
  %45 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5401
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5402
  %47 = load i32, i32* %lvl, align 4, !dbg !5403
  %48 = load i32, i32* %totlvl9, align 4, !dbg !5404
  %49 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5405
  %simple26 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %49, i32 0, i32 5, !dbg !5406
  %50 = load i8, i8* %simple26, align 4, !dbg !5406
  %conv27 = zext i8 %50 to i32, !dbg !5405
  %51 = load i8, i8* %has_mask, align 1, !dbg !5407
  %call28 = call %struct.DerivedMesh* @multires_dm_create_local(%struct.Object* %45, %struct.DerivedMesh* %46, i32 %47, i32 %48, i32 %conv27, i8 zeroext %51), !dbg !5408
  store %struct.DerivedMesh* %call28, %struct.DerivedMesh** %lowdm, align 8, !dbg !5409
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5410
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %52, i32 0, i32 95, !dbg !5411
  %53 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !5411
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !5412
  call void %53(%struct.DerivedMesh* %54), !dbg !5410
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5413
  %getNumGrids = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %55, i32 0, i32 63, !dbg !5414
  %56 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumGrids, align 8, !dbg !5414
  %57 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5415
  %call29 = call i32 %56(%struct.DerivedMesh* %57), !dbg !5413
  store i32 %call29, i32* %numGrids, align 4, !dbg !5416
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5417
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %58, i32 0, i32 64, !dbg !5418
  %59 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !5418
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5419
  %call30 = call i32 %59(%struct.DerivedMesh* %60), !dbg !5417
  store i32 %call30, i32* %highGridSize, align 4, !dbg !5420
  %61 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5421
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %61, i32 0, i32 65, !dbg !5422
  %62 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !5422
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5423
  %call31 = call %struct.CCGElem** %62(%struct.DerivedMesh* %63), !dbg !5421
  store %struct.CCGElem** %call31, %struct.CCGElem*** %highGridData, align 8, !dbg !5424
  %64 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5425
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %64, i32 0, i32 68, !dbg !5426
  %65 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !5426
  %66 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5427
  call void %65(%struct.DerivedMesh* %66, %struct.CCGKey* %highGridKey), !dbg !5425
  %67 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5428
  %getGridSize32 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %67, i32 0, i32 64, !dbg !5429
  %68 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize32, align 8, !dbg !5429
  %69 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5430
  %call33 = call i32 %68(%struct.DerivedMesh* %69), !dbg !5428
  store i32 %call33, i32* %lowGridSize, align 4, !dbg !5431
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5432
  %getGridData34 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %70, i32 0, i32 65, !dbg !5433
  %71 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData34, align 8, !dbg !5433
  %72 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5434
  %call35 = call %struct.CCGElem** %71(%struct.DerivedMesh* %72), !dbg !5432
  store %struct.CCGElem** %call35, %struct.CCGElem*** %lowGridData, align 8, !dbg !5435
  %73 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5436
  %getGridKey36 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %73, i32 0, i32 68, !dbg !5437
  %74 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey36, align 8, !dbg !5437
  %75 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5438
  call void %74(%struct.DerivedMesh* %75, %struct.CCGKey* %lowGridKey), !dbg !5436
  %76 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5439
  %getGridData37 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %76, i32 0, i32 65, !dbg !5440
  %77 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData37, align 8, !dbg !5440
  %78 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5441
  %call38 = call %struct.CCGElem** %77(%struct.DerivedMesh* %78), !dbg !5439
  store %struct.CCGElem** %call38, %struct.CCGElem*** %gridData, align 8, !dbg !5442
  %79 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5443
  %80 = load i32, i32* %numGrids, align 4, !dbg !5444
  %conv39 = sext i32 %80 to i64, !dbg !5444
  %mul = mul i64 8, %conv39, !dbg !5445
  %call40 = call i8* %79(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !5443
  %81 = bitcast i8* %call40 to %struct.CCGElem**, !dbg !5443
  store %struct.CCGElem** %81, %struct.CCGElem*** %subGridData, align 8, !dbg !5446
  %82 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5447
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %lowGridKey, i32 0, i32 1, !dbg !5448
  %83 = load i32, i32* %elem_size, align 4, !dbg !5448
  %84 = load i32, i32* %lowGridSize, align 4, !dbg !5449
  %mul41 = mul nsw i32 %83, %84, !dbg !5450
  %85 = load i32, i32* %lowGridSize, align 4, !dbg !5451
  %mul42 = mul nsw i32 %mul41, %85, !dbg !5452
  %conv43 = sext i32 %mul42 to i64, !dbg !5453
  %call44 = call i8* %82(i64 %conv43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)), !dbg !5447
  %86 = bitcast i8* %call44 to %struct.CCGElem*, !dbg !5447
  store %struct.CCGElem* %86, %struct.CCGElem** %diffGrid, align 8, !dbg !5454
  store i32 0, i32* %i, align 4, !dbg !5455
  br label %for.cond, !dbg !5457

for.cond:                                         ; preds = %for.inc74, %if.end
  %87 = load i32, i32* %i, align 4, !dbg !5458
  %88 = load i32, i32* %numGrids, align 4, !dbg !5460
  %cmp45 = icmp slt i32 %87, %88, !dbg !5461
  br i1 %cmp45, label %for.body, label %for.end76, !dbg !5462

for.body:                                         ; preds = %for.cond
  %89 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5463
  %elem_size47 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %highGridKey, i32 0, i32 1, !dbg !5465
  %90 = load i32, i32* %elem_size47, align 4, !dbg !5465
  %91 = load i32, i32* %highGridSize, align 4, !dbg !5466
  %mul48 = mul nsw i32 %90, %91, !dbg !5467
  %92 = load i32, i32* %highGridSize, align 4, !dbg !5468
  %mul49 = mul nsw i32 %mul48, %92, !dbg !5469
  %conv50 = sext i32 %mul49 to i64, !dbg !5470
  %call51 = call i8* %89(i64 %conv50, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)), !dbg !5463
  %93 = bitcast i8* %call51 to %struct.CCGElem*, !dbg !5463
  %94 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5471
  %95 = load i32, i32* %i, align 4, !dbg !5472
  %idxprom = sext i32 %95 to i64, !dbg !5471
  %arrayidx = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %94, i64 %idxprom, !dbg !5471
  store %struct.CCGElem* %93, %struct.CCGElem** %arrayidx, align 8, !dbg !5473
  %96 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5474
  %97 = load i32, i32* %i, align 4, !dbg !5475
  %idxprom52 = sext i32 %97 to i64, !dbg !5474
  %arrayidx53 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %96, i64 %idxprom52, !dbg !5474
  %98 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx53, align 8, !dbg !5474
  %99 = bitcast %struct.CCGElem* %98 to i8*, !dbg !5476
  %100 = load %struct.CCGElem**, %struct.CCGElem*** %highGridData, align 8, !dbg !5477
  %101 = load i32, i32* %i, align 4, !dbg !5478
  %idxprom54 = sext i32 %101 to i64, !dbg !5477
  %arrayidx55 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %100, i64 %idxprom54, !dbg !5477
  %102 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx55, align 8, !dbg !5477
  %103 = bitcast %struct.CCGElem* %102 to i8*, !dbg !5476
  %elem_size56 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %highGridKey, i32 0, i32 1, !dbg !5479
  %104 = load i32, i32* %elem_size56, align 4, !dbg !5479
  %105 = load i32, i32* %highGridSize, align 4, !dbg !5480
  %mul57 = mul nsw i32 %104, %105, !dbg !5481
  %106 = load i32, i32* %highGridSize, align 4, !dbg !5482
  %mul58 = mul nsw i32 %mul57, %106, !dbg !5483
  %conv59 = sext i32 %mul58 to i64, !dbg !5484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %103, i64 %conv59, i1 false), !dbg !5476
  store i32 0, i32* %j, align 4, !dbg !5485
  br label %for.cond60, !dbg !5487

for.cond60:                                       ; preds = %for.inc, %for.body
  %107 = load i32, i32* %j, align 4, !dbg !5488
  %108 = load i32, i32* %lowGridSize, align 4, !dbg !5490
  %109 = load i32, i32* %lowGridSize, align 4, !dbg !5491
  %mul61 = mul nsw i32 %108, %109, !dbg !5492
  %cmp62 = icmp slt i32 %107, %mul61, !dbg !5493
  br i1 %cmp62, label %for.body64, label %for.end, !dbg !5494

for.body64:                                       ; preds = %for.cond60
  %110 = load %struct.CCGElem*, %struct.CCGElem** %diffGrid, align 8, !dbg !5495
  %111 = load i32, i32* %j, align 4, !dbg !5497
  %call65 = call float* @CCG_elem_offset_co(%struct.CCGKey* %lowGridKey, %struct.CCGElem* %110, i32 %111), !dbg !5498
  %112 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !5499
  %113 = load i32, i32* %i, align 4, !dbg !5500
  %idxprom66 = sext i32 %113 to i64, !dbg !5499
  %arrayidx67 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %112, i64 %idxprom66, !dbg !5499
  %114 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx67, align 8, !dbg !5499
  %115 = load i32, i32* %j, align 4, !dbg !5501
  %call68 = call float* @CCG_elem_offset_co(%struct.CCGKey* %lowGridKey, %struct.CCGElem* %114, i32 %115), !dbg !5502
  %116 = load %struct.CCGElem**, %struct.CCGElem*** %lowGridData, align 8, !dbg !5503
  %117 = load i32, i32* %i, align 4, !dbg !5504
  %idxprom69 = sext i32 %117 to i64, !dbg !5503
  %arrayidx70 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %116, i64 %idxprom69, !dbg !5503
  %118 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx70, align 8, !dbg !5503
  %119 = load i32, i32* %j, align 4, !dbg !5505
  %call71 = call float* @CCG_elem_offset_co(%struct.CCGKey* %lowGridKey, %struct.CCGElem* %118, i32 %119), !dbg !5506
  call void @sub_v4_v4v4(float* %call65, float* %call68, float* %call71), !dbg !5507
  br label %for.inc, !dbg !5508

for.inc:                                          ; preds = %for.body64
  %120 = load i32, i32* %j, align 4, !dbg !5509
  %inc = add nsw i32 %120, 1, !dbg !5509
  store i32 %inc, i32* %j, align 4, !dbg !5509
  br label %for.cond60, !dbg !5510, !llvm.loop !5511

for.end:                                          ; preds = %for.cond60
  %121 = load %struct.CCGElem**, %struct.CCGElem*** %highGridData, align 8, !dbg !5513
  %122 = load i32, i32* %i, align 4, !dbg !5514
  %idxprom72 = sext i32 %122 to i64, !dbg !5513
  %arrayidx73 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %121, i64 %idxprom72, !dbg !5513
  %123 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx73, align 8, !dbg !5513
  %124 = load %struct.CCGElem*, %struct.CCGElem** %diffGrid, align 8, !dbg !5515
  call void @multires_copy_dm_grid(%struct.CCGElem* %123, %struct.CCGElem* %124, %struct.CCGKey* %highGridKey, %struct.CCGKey* %lowGridKey), !dbg !5516
  br label %for.inc74, !dbg !5517

for.inc74:                                        ; preds = %for.end
  %125 = load i32, i32* %i, align 4, !dbg !5518
  %inc75 = add nsw i32 %125, 1, !dbg !5518
  store i32 %inc75, i32* %i, align 4, !dbg !5518
  br label %for.cond, !dbg !5519, !llvm.loop !5520

for.end76:                                        ; preds = %for.cond
  %126 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5522
  %127 = load %struct.CCGElem*, %struct.CCGElem** %diffGrid, align 8, !dbg !5523
  %128 = bitcast %struct.CCGElem* %127 to i8*, !dbg !5523
  call void %126(i8* %128), !dbg !5522
  %129 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5524
  %release77 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %129, i32 0, i32 95, !dbg !5525
  %130 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release77, align 8, !dbg !5525
  %131 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lowdm, align 8, !dbg !5526
  call void %130(%struct.DerivedMesh* %131), !dbg !5524
  %132 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5527
  %133 = load i32, i32* %lvl, align 4, !dbg !5528
  %call78 = call i32 @ccgSubSurf_updateFromFaces(%struct.CCGSubSurf* %132, i32 %133, %struct.CCGFace** null, i32 0), !dbg !5529
  %134 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5530
  %135 = load i32, i32* %lvl, align 4, !dbg !5531
  %call79 = call i32 @ccgSubSurf_updateLevels(%struct.CCGSubSurf* %134, i32 %135, %struct.CCGFace** null, i32 0), !dbg !5532
  %136 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5533
  %137 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5534
  %138 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5535
  %139 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5536
  %totlvl80 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %139, i32 0, i32 4, !dbg !5537
  %140 = load i8, i8* %totlvl80, align 1, !dbg !5537
  %conv81 = zext i8 %140 to i32, !dbg !5536
  call void @multiresModifier_disp_run(%struct.DerivedMesh* %136, %struct.Mesh* %137, %struct.DerivedMesh* null, i32 2, %struct.CCGElem** %138, i32 %conv81), !dbg !5538
  %141 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5539
  %release82 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %141, i32 0, i32 95, !dbg !5540
  %142 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release82, align 8, !dbg !5540
  %143 = load %struct.DerivedMesh*, %struct.DerivedMesh** %highdm, align 8, !dbg !5541
  call void %142(%struct.DerivedMesh* %143), !dbg !5539
  store i32 0, i32* %i, align 4, !dbg !5542
  br label %for.cond83, !dbg !5544

for.cond83:                                       ; preds = %for.inc89, %for.end76
  %144 = load i32, i32* %i, align 4, !dbg !5545
  %145 = load i32, i32* %numGrids, align 4, !dbg !5547
  %cmp84 = icmp slt i32 %144, %145, !dbg !5548
  br i1 %cmp84, label %for.body86, label %for.end91, !dbg !5549

for.body86:                                       ; preds = %for.cond83
  %146 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5550
  %147 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5551
  %148 = load i32, i32* %i, align 4, !dbg !5552
  %idxprom87 = sext i32 %148 to i64, !dbg !5551
  %arrayidx88 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %147, i64 %idxprom87, !dbg !5551
  %149 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx88, align 8, !dbg !5551
  %150 = bitcast %struct.CCGElem* %149 to i8*, !dbg !5551
  call void %146(i8* %150), !dbg !5550
  br label %for.inc89, !dbg !5550

for.inc89:                                        ; preds = %for.body86
  %151 = load i32, i32* %i, align 4, !dbg !5553
  %inc90 = add nsw i32 %151, 1, !dbg !5553
  store i32 %inc90, i32* %i, align 4, !dbg !5553
  br label %for.cond83, !dbg !5554, !llvm.loop !5555

for.end91:                                        ; preds = %for.cond83
  %152 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5557
  %153 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !5558
  %154 = bitcast %struct.CCGElem** %153 to i8*, !dbg !5558
  call void %152(i8* %154), !dbg !5557
  br label %if.end120, !dbg !5559

if.else92:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %cddm93, metadata !5560, metadata !DIExpression()), !dbg !5562
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %subdm, metadata !5563, metadata !DIExpression()), !dbg !5564
  call void @llvm.dbg.declare(metadata i8* %has_mask94, metadata !5565, metadata !DIExpression()), !dbg !5566
  %155 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5567
  %ldata95 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %155, i32 0, i32 25, !dbg !5568
  %call96 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %ldata95, i32 35), !dbg !5569
  store i8 %call96, i8* %has_mask94, align 1, !dbg !5566
  %156 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5570
  %derivedDeform97 = getelementptr inbounds %struct.Object, %struct.Object* %156, i32 0, i32 119, !dbg !5572
  %157 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform97, align 8, !dbg !5572
  %tobool98 = icmp ne %struct.DerivedMesh* %157, null, !dbg !5570
  br i1 %tobool98, label %if.then99, label %if.else102, !dbg !5573

if.then99:                                        ; preds = %if.else92
  %158 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5574
  %derivedDeform100 = getelementptr inbounds %struct.Object, %struct.Object* %158, i32 0, i32 119, !dbg !5575
  %159 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform100, align 8, !dbg !5575
  %call101 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %159), !dbg !5576
  store %struct.DerivedMesh* %call101, %struct.DerivedMesh** %cddm93, align 8, !dbg !5577
  br label %if.end104, !dbg !5578

if.else102:                                       ; preds = %if.else92
  %160 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5579
  %call103 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %160), !dbg !5580
  store %struct.DerivedMesh* %call103, %struct.DerivedMesh** %cddm93, align 8, !dbg !5581
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.then99
  %161 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm93, align 8, !dbg !5582
  %162 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !5583
  call void @DM_set_only_copy(%struct.DerivedMesh* %161, i64 %162), !dbg !5584
  %163 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5585
  %164 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm93, align 8, !dbg !5586
  %165 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5587
  %totlvl105 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %165, i32 0, i32 4, !dbg !5588
  %166 = load i8, i8* %totlvl105, align 1, !dbg !5588
  %conv106 = zext i8 %166 to i32, !dbg !5587
  %167 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5589
  %simple107 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %167, i32 0, i32 5, !dbg !5590
  %168 = load i8, i8* %simple107, align 4, !dbg !5590
  %conv108 = zext i8 %168 to i32, !dbg !5589
  %169 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5591
  %flags109 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %169, i32 0, i32 6, !dbg !5592
  %170 = load i8, i8* %flags109, align 1, !dbg !5592
  %conv110 = zext i8 %170 to i32, !dbg !5591
  %and111 = and i32 %conv110, 2, !dbg !5593
  %171 = load i8, i8* %has_mask94, align 1, !dbg !5594
  %conv112 = zext i8 %171 to i32, !dbg !5594
  %call113 = call %struct.DerivedMesh* @subsurf_dm_create_local(%struct.Object* %163, %struct.DerivedMesh* %164, i32 %conv106, i32 %conv108, i32 0, i32 %and111, i32 %conv112), !dbg !5595
  store %struct.DerivedMesh* %call113, %struct.DerivedMesh** %subdm, align 8, !dbg !5596
  %172 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm93, align 8, !dbg !5597
  %release114 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %172, i32 0, i32 95, !dbg !5598
  %173 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release114, align 8, !dbg !5598
  %174 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm93, align 8, !dbg !5599
  call void %173(%struct.DerivedMesh* %174), !dbg !5597
  %175 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5600
  %176 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5601
  %177 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !5602
  %getGridData115 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %177, i32 0, i32 65, !dbg !5603
  %178 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData115, align 8, !dbg !5603
  %179 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !5604
  %call116 = call %struct.CCGElem** %178(%struct.DerivedMesh* %179), !dbg !5602
  %180 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !5605
  %totlvl117 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %180, i32 0, i32 4, !dbg !5606
  %181 = load i8, i8* %totlvl117, align 1, !dbg !5606
  %conv118 = zext i8 %181 to i32, !dbg !5605
  call void @multiresModifier_disp_run(%struct.DerivedMesh* %175, %struct.Mesh* %176, %struct.DerivedMesh* null, i32 1, %struct.CCGElem** %call116, i32 %conv118), !dbg !5607
  %182 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !5608
  %release119 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %182, i32 0, i32 95, !dbg !5609
  %183 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release119, align 8, !dbg !5609
  %184 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !5610
  call void %183(%struct.DerivedMesh* %184), !dbg !5608
  br label %if.end120

if.end120:                                        ; preds = %if.end104, %for.end91
  br label %if.end121, !dbg !5611

if.end121:                                        ; preds = %if.end120, %entry
  ret void, !dbg !5612
}

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v4_v4v4(float* %r, float* %a, float* %b) #0 !dbg !5613 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5616, metadata !DIExpression()), !dbg !5617
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5618, metadata !DIExpression()), !dbg !5619
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5620, metadata !DIExpression()), !dbg !5621
  %0 = load float*, float** %a.addr, align 8, !dbg !5622
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5622
  %1 = load float, float* %arrayidx, align 4, !dbg !5622
  %2 = load float*, float** %b.addr, align 8, !dbg !5623
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5623
  %3 = load float, float* %arrayidx1, align 4, !dbg !5623
  %sub = fsub float %1, %3, !dbg !5624
  %4 = load float*, float** %r.addr, align 8, !dbg !5625
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5625
  store float %sub, float* %arrayidx2, align 4, !dbg !5626
  %5 = load float*, float** %a.addr, align 8, !dbg !5627
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5627
  %6 = load float, float* %arrayidx3, align 4, !dbg !5627
  %7 = load float*, float** %b.addr, align 8, !dbg !5628
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5628
  %8 = load float, float* %arrayidx4, align 4, !dbg !5628
  %sub5 = fsub float %6, %8, !dbg !5629
  %9 = load float*, float** %r.addr, align 8, !dbg !5630
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5630
  store float %sub5, float* %arrayidx6, align 4, !dbg !5631
  %10 = load float*, float** %a.addr, align 8, !dbg !5632
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5632
  %11 = load float, float* %arrayidx7, align 4, !dbg !5632
  %12 = load float*, float** %b.addr, align 8, !dbg !5633
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5633
  %13 = load float, float* %arrayidx8, align 4, !dbg !5633
  %sub9 = fsub float %11, %13, !dbg !5634
  %14 = load float*, float** %r.addr, align 8, !dbg !5635
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5635
  store float %sub9, float* %arrayidx10, align 4, !dbg !5636
  %15 = load float*, float** %a.addr, align 8, !dbg !5637
  %arrayidx11 = getelementptr inbounds float, float* %15, i64 3, !dbg !5637
  %16 = load float, float* %arrayidx11, align 4, !dbg !5637
  %17 = load float*, float** %b.addr, align 8, !dbg !5638
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 3, !dbg !5638
  %18 = load float, float* %arrayidx12, align 4, !dbg !5638
  %sub13 = fsub float %16, %18, !dbg !5639
  %19 = load float*, float** %r.addr, align 8, !dbg !5640
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 3, !dbg !5640
  store float %sub13, float* %arrayidx14, align 4, !dbg !5641
  ret void, !dbg !5642
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !5643 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5650, metadata !DIExpression()), !dbg !5651
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5654
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5655
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5656
  %3 = load i32, i32* %offset.addr, align 4, !dbg !5657
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3), !dbg !5658
  %call1 = call float* @CCG_elem_co(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !5659
  ret float* %call1, !dbg !5660
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_copy_dm_grid(%struct.CCGElem* %gridA, %struct.CCGElem* %gridB, %struct.CCGKey* %keyA, %struct.CCGKey* %keyB) #0 !dbg !5661 {
entry:
  %gridA.addr = alloca %struct.CCGElem*, align 8
  %gridB.addr = alloca %struct.CCGElem*, align 8
  %keyA.addr = alloca %struct.CCGKey*, align 8
  %keyB.addr = alloca %struct.CCGKey*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %j = alloca i32, align 4
  %skip = alloca i32, align 4
  store %struct.CCGElem* %gridA, %struct.CCGElem** %gridA.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %gridA.addr, metadata !5665, metadata !DIExpression()), !dbg !5666
  store %struct.CCGElem* %gridB, %struct.CCGElem** %gridB.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %gridB.addr, metadata !5667, metadata !DIExpression()), !dbg !5668
  store %struct.CCGKey* %keyA, %struct.CCGKey** %keyA.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %keyA.addr, metadata !5669, metadata !DIExpression()), !dbg !5670
  store %struct.CCGKey* %keyB, %struct.CCGKey** %keyB.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %keyB.addr, metadata !5671, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5673, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5675, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5677, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !5679, metadata !DIExpression()), !dbg !5680
  %0 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5681
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %0, i32 0, i32 2, !dbg !5683
  %1 = load i32, i32* %grid_size, align 4, !dbg !5683
  %2 = load %struct.CCGKey*, %struct.CCGKey** %keyB.addr, align 8, !dbg !5684
  %grid_size1 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 2, !dbg !5685
  %3 = load i32, i32* %grid_size1, align 4, !dbg !5685
  %cmp = icmp sgt i32 %1, %3, !dbg !5686
  br i1 %cmp, label %if.then, label %if.else, !dbg !5687

if.then:                                          ; preds = %entry
  %4 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5688
  %grid_size2 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %4, i32 0, i32 2, !dbg !5690
  %5 = load i32, i32* %grid_size2, align 4, !dbg !5690
  %sub = sub nsw i32 %5, 1, !dbg !5691
  %6 = load %struct.CCGKey*, %struct.CCGKey** %keyB.addr, align 8, !dbg !5692
  %grid_size3 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %6, i32 0, i32 2, !dbg !5693
  %7 = load i32, i32* %grid_size3, align 4, !dbg !5693
  %sub4 = sub nsw i32 %7, 1, !dbg !5694
  %div = sdiv i32 %sub, %sub4, !dbg !5695
  store i32 %div, i32* %skip, align 4, !dbg !5696
  store i32 0, i32* %j, align 4, !dbg !5697
  store i32 0, i32* %y, align 4, !dbg !5699
  br label %for.cond, !dbg !5700

for.cond:                                         ; preds = %for.inc17, %if.then
  %8 = load i32, i32* %y, align 4, !dbg !5701
  %9 = load %struct.CCGKey*, %struct.CCGKey** %keyB.addr, align 8, !dbg !5703
  %grid_size5 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %9, i32 0, i32 2, !dbg !5704
  %10 = load i32, i32* %grid_size5, align 4, !dbg !5704
  %cmp6 = icmp slt i32 %8, %10, !dbg !5705
  br i1 %cmp6, label %for.body, label %for.end19, !dbg !5706

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !5707
  br label %for.cond7, !dbg !5709

for.cond7:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %x, align 4, !dbg !5710
  %12 = load %struct.CCGKey*, %struct.CCGKey** %keyB.addr, align 8, !dbg !5712
  %grid_size8 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %12, i32 0, i32 2, !dbg !5713
  %13 = load i32, i32* %grid_size8, align 4, !dbg !5713
  %cmp9 = icmp slt i32 %11, %13, !dbg !5714
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !5715

for.body10:                                       ; preds = %for.cond7
  %14 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5716
  %15 = load %struct.CCGElem*, %struct.CCGElem** %gridA.addr, align 8, !dbg !5717
  %16 = load i32, i32* %y, align 4, !dbg !5718
  %17 = load i32, i32* %skip, align 4, !dbg !5719
  %mul = mul nsw i32 %16, %17, !dbg !5720
  %18 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5721
  %grid_size11 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %18, i32 0, i32 2, !dbg !5722
  %19 = load i32, i32* %grid_size11, align 4, !dbg !5722
  %mul12 = mul nsw i32 %mul, %19, !dbg !5723
  %20 = load i32, i32* %x, align 4, !dbg !5724
  %21 = load i32, i32* %skip, align 4, !dbg !5725
  %mul13 = mul nsw i32 %20, %21, !dbg !5726
  %add = add nsw i32 %mul12, %mul13, !dbg !5727
  %call = call float* @CCG_elem_offset_co(%struct.CCGKey* %14, %struct.CCGElem* %15, i32 %add), !dbg !5728
  %22 = bitcast float* %call to i8*, !dbg !5729
  %23 = load %struct.CCGKey*, %struct.CCGKey** %keyB.addr, align 8, !dbg !5730
  %24 = load %struct.CCGElem*, %struct.CCGElem** %gridB.addr, align 8, !dbg !5731
  %25 = load i32, i32* %j, align 4, !dbg !5732
  %call14 = call float* @CCG_elem_offset_co(%struct.CCGKey* %23, %struct.CCGElem* %24, i32 %25), !dbg !5733
  %26 = bitcast float* %call14 to i8*, !dbg !5729
  %27 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5734
  %num_layers = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %27, i32 0, i32 7, !dbg !5735
  %28 = load i32, i32* %num_layers, align 4, !dbg !5735
  %conv = sext i32 %28 to i64, !dbg !5734
  %mul15 = mul i64 4, %conv, !dbg !5736
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %26, i64 %mul15, i1 false), !dbg !5729
  br label %for.inc, !dbg !5729

for.inc:                                          ; preds = %for.body10
  %29 = load i32, i32* %x, align 4, !dbg !5737
  %inc = add nsw i32 %29, 1, !dbg !5737
  store i32 %inc, i32* %x, align 4, !dbg !5737
  %30 = load i32, i32* %j, align 4, !dbg !5738
  %inc16 = add nsw i32 %30, 1, !dbg !5738
  store i32 %inc16, i32* %j, align 4, !dbg !5738
  br label %for.cond7, !dbg !5739, !llvm.loop !5740

for.end:                                          ; preds = %for.cond7
  br label %for.inc17, !dbg !5741

for.inc17:                                        ; preds = %for.end
  %31 = load i32, i32* %y, align 4, !dbg !5742
  %inc18 = add nsw i32 %31, 1, !dbg !5742
  store i32 %inc18, i32* %y, align 4, !dbg !5742
  br label %for.cond, !dbg !5743, !llvm.loop !5744

for.end19:                                        ; preds = %for.cond
  br label %if.end, !dbg !5746

if.else:                                          ; preds = %entry
  %32 = load %struct.CCGKey*, %struct.CCGKey** %keyB.addr, align 8, !dbg !5747
  %grid_size20 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %32, i32 0, i32 2, !dbg !5749
  %33 = load i32, i32* %grid_size20, align 4, !dbg !5749
  %sub21 = sub nsw i32 %33, 1, !dbg !5750
  %34 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5751
  %grid_size22 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %34, i32 0, i32 2, !dbg !5752
  %35 = load i32, i32* %grid_size22, align 4, !dbg !5752
  %sub23 = sub nsw i32 %35, 1, !dbg !5753
  %div24 = sdiv i32 %sub21, %sub23, !dbg !5754
  store i32 %div24, i32* %skip, align 4, !dbg !5755
  store i32 0, i32* %j, align 4, !dbg !5756
  store i32 0, i32* %y, align 4, !dbg !5758
  br label %for.cond25, !dbg !5759

for.cond25:                                       ; preds = %for.inc49, %if.else
  %36 = load i32, i32* %y, align 4, !dbg !5760
  %37 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5762
  %grid_size26 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %37, i32 0, i32 2, !dbg !5763
  %38 = load i32, i32* %grid_size26, align 4, !dbg !5763
  %cmp27 = icmp slt i32 %36, %38, !dbg !5764
  br i1 %cmp27, label %for.body29, label %for.end51, !dbg !5765

for.body29:                                       ; preds = %for.cond25
  store i32 0, i32* %x, align 4, !dbg !5766
  br label %for.cond30, !dbg !5768

for.cond30:                                       ; preds = %for.inc45, %for.body29
  %39 = load i32, i32* %x, align 4, !dbg !5769
  %40 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5771
  %grid_size31 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %40, i32 0, i32 2, !dbg !5772
  %41 = load i32, i32* %grid_size31, align 4, !dbg !5772
  %cmp32 = icmp slt i32 %39, %41, !dbg !5773
  br i1 %cmp32, label %for.body34, label %for.end48, !dbg !5774

for.body34:                                       ; preds = %for.cond30
  %42 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5775
  %43 = load %struct.CCGElem*, %struct.CCGElem** %gridA.addr, align 8, !dbg !5776
  %44 = load i32, i32* %j, align 4, !dbg !5777
  %call35 = call float* @CCG_elem_offset_co(%struct.CCGKey* %42, %struct.CCGElem* %43, i32 %44), !dbg !5778
  %45 = bitcast float* %call35 to i8*, !dbg !5779
  %46 = load %struct.CCGKey*, %struct.CCGKey** %keyB.addr, align 8, !dbg !5780
  %47 = load %struct.CCGElem*, %struct.CCGElem** %gridB.addr, align 8, !dbg !5781
  %48 = load i32, i32* %y, align 4, !dbg !5782
  %49 = load i32, i32* %skip, align 4, !dbg !5783
  %mul36 = mul nsw i32 %48, %49, !dbg !5784
  %50 = load %struct.CCGKey*, %struct.CCGKey** %keyB.addr, align 8, !dbg !5785
  %grid_size37 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %50, i32 0, i32 2, !dbg !5786
  %51 = load i32, i32* %grid_size37, align 4, !dbg !5786
  %mul38 = mul nsw i32 %mul36, %51, !dbg !5787
  %52 = load i32, i32* %x, align 4, !dbg !5788
  %53 = load i32, i32* %skip, align 4, !dbg !5789
  %mul39 = mul nsw i32 %52, %53, !dbg !5790
  %add40 = add nsw i32 %mul38, %mul39, !dbg !5791
  %call41 = call float* @CCG_elem_offset_co(%struct.CCGKey* %46, %struct.CCGElem* %47, i32 %add40), !dbg !5792
  %54 = bitcast float* %call41 to i8*, !dbg !5779
  %55 = load %struct.CCGKey*, %struct.CCGKey** %keyA.addr, align 8, !dbg !5793
  %num_layers42 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %55, i32 0, i32 7, !dbg !5794
  %56 = load i32, i32* %num_layers42, align 4, !dbg !5794
  %conv43 = sext i32 %56 to i64, !dbg !5793
  %mul44 = mul i64 4, %conv43, !dbg !5795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %54, i64 %mul44, i1 false), !dbg !5779
  br label %for.inc45, !dbg !5779

for.inc45:                                        ; preds = %for.body34
  %57 = load i32, i32* %x, align 4, !dbg !5796
  %inc46 = add nsw i32 %57, 1, !dbg !5796
  store i32 %inc46, i32* %x, align 4, !dbg !5796
  %58 = load i32, i32* %j, align 4, !dbg !5797
  %inc47 = add nsw i32 %58, 1, !dbg !5797
  store i32 %inc47, i32* %j, align 4, !dbg !5797
  br label %for.cond30, !dbg !5798, !llvm.loop !5799

for.end48:                                        ; preds = %for.cond30
  br label %for.inc49, !dbg !5800

for.inc49:                                        ; preds = %for.end48
  %59 = load i32, i32* %y, align 4, !dbg !5801
  %inc50 = add nsw i32 %59, 1, !dbg !5801
  store i32 %inc50, i32* %y, align 4, !dbg !5801
  br label %for.cond25, !dbg !5802, !llvm.loop !5803

for.end51:                                        ; preds = %for.cond25
  br label %if.end

if.end:                                           ; preds = %for.end51, %for.end19
  ret void, !dbg !5805
}

declare dso_local i32 @ccgSubSurf_updateFromFaces(%struct.CCGSubSurf*, i32, %struct.CCGFace**, i32) #2

declare dso_local i32 @ccgSubSurf_updateLevels(%struct.CCGSubSurf*, i32, %struct.CCGFace**, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_modifier_update_hidden(%struct.DerivedMesh* %dm) #0 !dbg !5806 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %grid_hidden = alloca i32**, align 8
  %me = alloca %struct.Mesh*, align 8
  %mdisps = alloca %struct.MDisps*, align 8
  %totlvl = alloca i32, align 4
  %lvl = alloca i32, align 4
  %i = alloca i32, align 4
  %md = alloca %struct.MDisps*, align 8
  %gh = alloca i32*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5807, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !5809, metadata !DIExpression()), !dbg !5810
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5811
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !5812
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5810
  call void @llvm.dbg.declare(metadata i32*** %grid_hidden, metadata !5813, metadata !DIExpression()), !dbg !5815
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5816
  %gridHidden = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 19, !dbg !5817
  %3 = load i32**, i32*** %gridHidden, align 8, !dbg !5817
  store i32** %3, i32*** %grid_hidden, align 8, !dbg !5815
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5818, metadata !DIExpression()), !dbg !5819
  %4 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5820
  %multires = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %4, i32 0, i32 20, !dbg !5821
  %ob = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires, i32 0, i32 5, !dbg !5822
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5822
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !5823
  %6 = load i8*, i8** %data, align 8, !dbg !5823
  %7 = bitcast i8* %6 to %struct.Mesh*, !dbg !5820
  store %struct.Mesh* %7, %struct.Mesh** %me, align 8, !dbg !5819
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !5824, metadata !DIExpression()), !dbg !5825
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5826
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 25, !dbg !5827
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata, i32 19), !dbg !5828
  %9 = bitcast i8* %call to %struct.MDisps*, !dbg !5828
  store %struct.MDisps* %9, %struct.MDisps** %mdisps, align 8, !dbg !5825
  call void @llvm.dbg.declare(metadata i32* %totlvl, metadata !5829, metadata !DIExpression()), !dbg !5830
  %10 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5831
  %multires1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %10, i32 0, i32 20, !dbg !5832
  %totlvl2 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires1, i32 0, i32 3, !dbg !5833
  %11 = load i32, i32* %totlvl2, align 8, !dbg !5833
  store i32 %11, i32* %totlvl, align 4, !dbg !5830
  call void @llvm.dbg.declare(metadata i32* %lvl, metadata !5834, metadata !DIExpression()), !dbg !5835
  %12 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5836
  %multires3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %12, i32 0, i32 20, !dbg !5837
  %lvl4 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires3, i32 0, i32 2, !dbg !5838
  %13 = load i32, i32* %lvl4, align 4, !dbg !5838
  store i32 %13, i32* %lvl, align 4, !dbg !5835
  %14 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !5839
  %tobool = icmp ne %struct.MDisps* %14, null, !dbg !5839
  br i1 %tobool, label %if.then, label %if.end23, !dbg !5841

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5842, metadata !DIExpression()), !dbg !5844
  store i32 0, i32* %i, align 4, !dbg !5845
  br label %for.cond, !dbg !5847

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !5848
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5850
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 31, !dbg !5851
  %17 = load i32, i32* %totloop, align 4, !dbg !5851
  %cmp = icmp slt i32 %15, %17, !dbg !5852
  br i1 %cmp, label %for.body, label %for.end, !dbg !5853

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MDisps** %md, metadata !5854, metadata !DIExpression()), !dbg !5856
  %18 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !5857
  %19 = load i32, i32* %i, align 4, !dbg !5858
  %idxprom = sext i32 %19 to i64, !dbg !5857
  %arrayidx = getelementptr inbounds %struct.MDisps, %struct.MDisps* %18, i64 %idxprom, !dbg !5857
  store %struct.MDisps* %arrayidx, %struct.MDisps** %md, align 8, !dbg !5856
  call void @llvm.dbg.declare(metadata i32** %gh, metadata !5859, metadata !DIExpression()), !dbg !5860
  %20 = load i32**, i32*** %grid_hidden, align 8, !dbg !5861
  %21 = load i32, i32* %i, align 4, !dbg !5862
  %idxprom5 = sext i32 %21 to i64, !dbg !5861
  %arrayidx6 = getelementptr inbounds i32*, i32** %20, i64 %idxprom5, !dbg !5861
  %22 = load i32*, i32** %arrayidx6, align 8, !dbg !5861
  store i32* %22, i32** %gh, align 8, !dbg !5860
  %23 = load i32*, i32** %gh, align 8, !dbg !5863
  %tobool7 = icmp ne i32* %23, null, !dbg !5863
  br i1 %tobool7, label %if.else, label %land.lhs.true, !dbg !5865

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !5866
  %hidden = getelementptr inbounds %struct.MDisps, %struct.MDisps* %24, i32 0, i32 3, !dbg !5867
  %25 = load i32*, i32** %hidden, align 8, !dbg !5867
  %tobool8 = icmp ne i32* %25, null, !dbg !5866
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !5868

if.then9:                                         ; preds = %land.lhs.true
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5869
  %27 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !5871
  %hidden10 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %27, i32 0, i32 3, !dbg !5872
  %28 = load i32*, i32** %hidden10, align 8, !dbg !5872
  %29 = bitcast i32* %28 to i8*, !dbg !5871
  call void %26(i8* %29), !dbg !5869
  %30 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !5873
  %hidden11 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %30, i32 0, i32 3, !dbg !5874
  store i32* null, i32** %hidden11, align 8, !dbg !5875
  br label %if.end22, !dbg !5876

if.else:                                          ; preds = %land.lhs.true, %for.body
  %31 = load i32*, i32** %gh, align 8, !dbg !5877
  %tobool12 = icmp ne i32* %31, null, !dbg !5877
  br i1 %tobool12, label %if.then13, label %if.end21, !dbg !5879

if.then13:                                        ; preds = %if.else
  %32 = load i32*, i32** %gh, align 8, !dbg !5880
  %33 = load i32, i32* %lvl, align 4, !dbg !5882
  %34 = load i32, i32* %totlvl, align 4, !dbg !5883
  %35 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !5884
  %hidden14 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %35, i32 0, i32 3, !dbg !5885
  %36 = load i32*, i32** %hidden14, align 8, !dbg !5885
  %call15 = call i32* @multires_mdisps_upsample_hidden(i32* %32, i32 %33, i32 %34, i32* %36), !dbg !5886
  store i32* %call15, i32** %gh, align 8, !dbg !5887
  %37 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !5888
  %hidden16 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %37, i32 0, i32 3, !dbg !5890
  %38 = load i32*, i32** %hidden16, align 8, !dbg !5890
  %tobool17 = icmp ne i32* %38, null, !dbg !5888
  br i1 %tobool17, label %if.then18, label %if.end, !dbg !5891

if.then18:                                        ; preds = %if.then13
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5892
  %40 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !5893
  %hidden19 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %40, i32 0, i32 3, !dbg !5894
  %41 = load i32*, i32** %hidden19, align 8, !dbg !5894
  %42 = bitcast i32* %41 to i8*, !dbg !5893
  call void %39(i8* %42), !dbg !5892
  br label %if.end, !dbg !5892

if.end:                                           ; preds = %if.then18, %if.then13
  %43 = load i32*, i32** %gh, align 8, !dbg !5895
  %44 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !5896
  %hidden20 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %44, i32 0, i32 3, !dbg !5897
  store i32* %43, i32** %hidden20, align 8, !dbg !5898
  br label %if.end21, !dbg !5899

if.end21:                                         ; preds = %if.end, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then9
  br label %for.inc, !dbg !5900

for.inc:                                          ; preds = %if.end22
  %45 = load i32, i32* %i, align 4, !dbg !5901
  %inc = add nsw i32 %45, 1, !dbg !5901
  store i32 %inc, i32* %i, align 4, !dbg !5901
  br label %for.cond, !dbg !5902, !llvm.loop !5903

for.end:                                          ; preds = %for.cond
  br label %if.end23, !dbg !5905

if.end23:                                         ; preds = %for.end, %entry
  ret void, !dbg !5906
}

; Function Attrs: noinline nounwind uwtable
define internal i32* @multires_mdisps_upsample_hidden(i32* %lo_hidden, i32 %lo_level, i32 %hi_level, i32* %prev_hidden) #0 !dbg !5907 {
entry:
  %retval = alloca i32*, align 8
  %lo_hidden.addr = alloca i32*, align 8
  %lo_level.addr = alloca i32, align 4
  %hi_level.addr = alloca i32, align 4
  %prev_hidden.addr = alloca i32*, align 8
  %subd = alloca i32*, align 8
  %hi_gridsize = alloca i32, align 4
  %lo_gridsize = alloca i32, align 4
  %yh = alloca i32, align 4
  %xh = alloca i32, align 4
  %xl = alloca i32, align 4
  %yl = alloca i32, align 4
  %xo = alloca i32, align 4
  %yo = alloca i32, align 4
  %hi_ndx = alloca i32, align 4
  %offset = alloca i32, align 4
  %factor = alloca i32, align 4
  %lo_val = alloca i32, align 4
  store i32* %lo_hidden, i32** %lo_hidden.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lo_hidden.addr, metadata !5912, metadata !DIExpression()), !dbg !5913
  store i32 %lo_level, i32* %lo_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lo_level.addr, metadata !5914, metadata !DIExpression()), !dbg !5915
  store i32 %hi_level, i32* %hi_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hi_level.addr, metadata !5916, metadata !DIExpression()), !dbg !5917
  store i32* %prev_hidden, i32** %prev_hidden.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %prev_hidden.addr, metadata !5918, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.declare(metadata i32** %subd, metadata !5920, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.declare(metadata i32* %hi_gridsize, metadata !5922, metadata !DIExpression()), !dbg !5923
  %0 = load i32, i32* %hi_level.addr, align 4, !dbg !5924
  %call = call i32 @BKE_ccg_gridsize(i32 %0), !dbg !5925
  store i32 %call, i32* %hi_gridsize, align 4, !dbg !5923
  call void @llvm.dbg.declare(metadata i32* %lo_gridsize, metadata !5926, metadata !DIExpression()), !dbg !5927
  %1 = load i32, i32* %lo_level.addr, align 4, !dbg !5928
  %call1 = call i32 @BKE_ccg_gridsize(i32 %1), !dbg !5929
  store i32 %call1, i32* %lo_gridsize, align 4, !dbg !5927
  call void @llvm.dbg.declare(metadata i32* %yh, metadata !5930, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.declare(metadata i32* %xh, metadata !5932, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.declare(metadata i32* %xl, metadata !5934, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.declare(metadata i32* %yl, metadata !5936, metadata !DIExpression()), !dbg !5937
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !5938, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.declare(metadata i32* %yo, metadata !5940, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.declare(metadata i32* %hi_ndx, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5944, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.declare(metadata i32* %factor, metadata !5946, metadata !DIExpression()), !dbg !5947
  %2 = load i32, i32* %lo_level.addr, align 4, !dbg !5948
  %3 = load i32, i32* %hi_level.addr, align 4, !dbg !5950
  %cmp = icmp eq i32 %2, %3, !dbg !5951
  br i1 %cmp, label %if.then, label %if.end, !dbg !5952

if.then:                                          ; preds = %entry
  %4 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5953
  %5 = load i32*, i32** %lo_hidden.addr, align 8, !dbg !5954
  %6 = bitcast i32* %5 to i8*, !dbg !5954
  %call2 = call i8* %4(i8* %6), !dbg !5953
  %7 = bitcast i8* %call2 to i32*, !dbg !5953
  store i32* %7, i32** %retval, align 8, !dbg !5955
  br label %return, !dbg !5955

if.end:                                           ; preds = %entry
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5956
  %9 = load i32, i32* %hi_gridsize, align 4, !dbg !5956
  %10 = load i32, i32* %hi_gridsize, align 4, !dbg !5956
  %mul = mul nsw i32 %9, %10, !dbg !5956
  %shr = ashr i32 %mul, 5, !dbg !5956
  %add = add nsw i32 %shr, 1, !dbg !5956
  %conv = sext i32 %add to i64, !dbg !5956
  %mul3 = mul i64 %conv, 4, !dbg !5956
  %call4 = call i8* %8(i64 %mul3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)), !dbg !5956
  %11 = bitcast i8* %call4 to i32*, !dbg !5956
  store i32* %11, i32** %subd, align 8, !dbg !5957
  %12 = load i32, i32* %lo_level.addr, align 4, !dbg !5958
  %13 = load i32, i32* %hi_level.addr, align 4, !dbg !5959
  %call5 = call i32 @BKE_ccg_factor(i32 %12, i32 %13), !dbg !5960
  store i32 %call5, i32* %factor, align 4, !dbg !5961
  %14 = load i32, i32* %hi_level.addr, align 4, !dbg !5962
  %15 = load i32, i32* %lo_level.addr, align 4, !dbg !5963
  %sub = sub nsw i32 %14, %15, !dbg !5964
  %sub6 = sub nsw i32 %sub, 1, !dbg !5965
  %shl = shl i32 1, %sub6, !dbg !5966
  store i32 %shl, i32* %offset, align 4, !dbg !5967
  store i32 0, i32* %yl, align 4, !dbg !5968
  br label %for.cond, !dbg !5970

for.cond:                                         ; preds = %for.inc115, %if.end
  %16 = load i32, i32* %yl, align 4, !dbg !5971
  %17 = load i32, i32* %lo_gridsize, align 4, !dbg !5973
  %cmp7 = icmp slt i32 %16, %17, !dbg !5974
  br i1 %cmp7, label %for.body, label %for.end117, !dbg !5975

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %xl, align 4, !dbg !5976
  br label %for.cond9, !dbg !5979

for.cond9:                                        ; preds = %for.inc112, %for.body
  %18 = load i32, i32* %xl, align 4, !dbg !5980
  %19 = load i32, i32* %lo_gridsize, align 4, !dbg !5982
  %cmp10 = icmp slt i32 %18, %19, !dbg !5983
  br i1 %cmp10, label %for.body12, label %for.end114, !dbg !5984

for.body12:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i32* %lo_val, metadata !5985, metadata !DIExpression()), !dbg !5987
  %20 = load i32*, i32** %lo_hidden.addr, align 8, !dbg !5988
  %21 = load i32, i32* %yl, align 4, !dbg !5988
  %22 = load i32, i32* %lo_gridsize, align 4, !dbg !5988
  %mul13 = mul nsw i32 %21, %22, !dbg !5988
  %23 = load i32, i32* %xl, align 4, !dbg !5988
  %add14 = add nsw i32 %mul13, %23, !dbg !5988
  %shr15 = ashr i32 %add14, 5, !dbg !5988
  %idxprom = sext i32 %shr15 to i64, !dbg !5988
  %arrayidx = getelementptr inbounds i32, i32* %20, i64 %idxprom, !dbg !5988
  %24 = load i32, i32* %arrayidx, align 4, !dbg !5988
  %25 = load i32, i32* %yl, align 4, !dbg !5988
  %26 = load i32, i32* %lo_gridsize, align 4, !dbg !5988
  %mul16 = mul nsw i32 %25, %26, !dbg !5988
  %27 = load i32, i32* %xl, align 4, !dbg !5988
  %add17 = add nsw i32 %mul16, %27, !dbg !5988
  %and = and i32 %add17, 31, !dbg !5988
  %shl18 = shl i32 1, %and, !dbg !5988
  %and19 = and i32 %24, %shl18, !dbg !5988
  store i32 %and19, i32* %lo_val, align 4, !dbg !5987
  %28 = load i32, i32* %offset, align 4, !dbg !5989
  %sub20 = sub nsw i32 0, %28, !dbg !5991
  store i32 %sub20, i32* %yo, align 4, !dbg !5992
  br label %for.cond21, !dbg !5993

for.cond21:                                       ; preds = %for.inc109, %for.body12
  %29 = load i32, i32* %yo, align 4, !dbg !5994
  %30 = load i32, i32* %offset, align 4, !dbg !5996
  %cmp22 = icmp sle i32 %29, %30, !dbg !5997
  br i1 %cmp22, label %for.body24, label %for.end111, !dbg !5998

for.body24:                                       ; preds = %for.cond21
  %31 = load i32, i32* %yl, align 4, !dbg !5999
  %32 = load i32, i32* %factor, align 4, !dbg !6001
  %mul25 = mul nsw i32 %31, %32, !dbg !6002
  %33 = load i32, i32* %yo, align 4, !dbg !6003
  %add26 = add nsw i32 %mul25, %33, !dbg !6004
  store i32 %add26, i32* %yh, align 4, !dbg !6005
  %34 = load i32, i32* %yh, align 4, !dbg !6006
  %cmp27 = icmp slt i32 %34, 0, !dbg !6008
  br i1 %cmp27, label %if.then31, label %lor.lhs.false, !dbg !6009

lor.lhs.false:                                    ; preds = %for.body24
  %35 = load i32, i32* %yh, align 4, !dbg !6010
  %36 = load i32, i32* %hi_gridsize, align 4, !dbg !6011
  %cmp29 = icmp sge i32 %35, %36, !dbg !6012
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !6013

if.then31:                                        ; preds = %lor.lhs.false, %for.body24
  br label %for.inc109, !dbg !6014

if.end32:                                         ; preds = %lor.lhs.false
  %37 = load i32, i32* %offset, align 4, !dbg !6015
  %sub33 = sub nsw i32 0, %37, !dbg !6017
  store i32 %sub33, i32* %xo, align 4, !dbg !6018
  br label %for.cond34, !dbg !6019

for.cond34:                                       ; preds = %for.inc, %if.end32
  %38 = load i32, i32* %xo, align 4, !dbg !6020
  %39 = load i32, i32* %offset, align 4, !dbg !6022
  %cmp35 = icmp sle i32 %38, %39, !dbg !6023
  br i1 %cmp35, label %for.body37, label %for.end, !dbg !6024

for.body37:                                       ; preds = %for.cond34
  %40 = load i32, i32* %xl, align 4, !dbg !6025
  %41 = load i32, i32* %factor, align 4, !dbg !6027
  %mul38 = mul nsw i32 %40, %41, !dbg !6028
  %42 = load i32, i32* %xo, align 4, !dbg !6029
  %add39 = add nsw i32 %mul38, %42, !dbg !6030
  store i32 %add39, i32* %xh, align 4, !dbg !6031
  %43 = load i32, i32* %xh, align 4, !dbg !6032
  %cmp40 = icmp slt i32 %43, 0, !dbg !6034
  br i1 %cmp40, label %if.then45, label %lor.lhs.false42, !dbg !6035

lor.lhs.false42:                                  ; preds = %for.body37
  %44 = load i32, i32* %xh, align 4, !dbg !6036
  %45 = load i32, i32* %hi_gridsize, align 4, !dbg !6037
  %cmp43 = icmp sge i32 %44, %45, !dbg !6038
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !6039

if.then45:                                        ; preds = %lor.lhs.false42, %for.body37
  br label %for.inc, !dbg !6040

if.end46:                                         ; preds = %lor.lhs.false42
  %46 = load i32, i32* %yh, align 4, !dbg !6041
  %47 = load i32, i32* %hi_gridsize, align 4, !dbg !6042
  %mul47 = mul nsw i32 %46, %47, !dbg !6043
  %48 = load i32, i32* %xh, align 4, !dbg !6044
  %add48 = add nsw i32 %mul47, %48, !dbg !6045
  store i32 %add48, i32* %hi_ndx, align 4, !dbg !6046
  %49 = load i32*, i32** %prev_hidden.addr, align 8, !dbg !6047
  %tobool = icmp ne i32* %49, null, !dbg !6047
  br i1 %tobool, label %if.then49, label %if.else90, !dbg !6049

if.then49:                                        ; preds = %if.end46
  %50 = load i32, i32* %lo_val, align 4, !dbg !6050
  %51 = load i32*, i32** %prev_hidden.addr, align 8, !dbg !6053
  %52 = load i32, i32* %hi_ndx, align 4, !dbg !6054
  %idxprom50 = sext i32 %52 to i64, !dbg !6053
  %arrayidx51 = getelementptr inbounds i32, i32* %51, i64 %idxprom50, !dbg !6053
  %53 = load i32, i32* %arrayidx51, align 4, !dbg !6053
  %cmp52 = icmp ne i32 %50, %53, !dbg !6055
  br i1 %cmp52, label %if.then54, label %if.else69, !dbg !6056

if.then54:                                        ; preds = %if.then49
  %54 = load i32, i32* %lo_val, align 4, !dbg !6057
  %tobool55 = icmp ne i32 %54, 0, !dbg !6057
  br i1 %tobool55, label %if.then56, label %if.else, !dbg !6061

if.then56:                                        ; preds = %if.then54
  %55 = load i32, i32* %hi_ndx, align 4, !dbg !6057
  %and57 = and i32 %55, 31, !dbg !6057
  %shl58 = shl i32 1, %and57, !dbg !6057
  %56 = load i32*, i32** %subd, align 8, !dbg !6057
  %57 = load i32, i32* %hi_ndx, align 4, !dbg !6057
  %shr59 = ashr i32 %57, 5, !dbg !6057
  %idxprom60 = sext i32 %shr59 to i64, !dbg !6057
  %arrayidx61 = getelementptr inbounds i32, i32* %56, i64 %idxprom60, !dbg !6057
  %58 = load i32, i32* %arrayidx61, align 4, !dbg !6057
  %or = or i32 %58, %shl58, !dbg !6057
  store i32 %or, i32* %arrayidx61, align 4, !dbg !6057
  br label %if.end68, !dbg !6057

if.else:                                          ; preds = %if.then54
  %59 = load i32, i32* %hi_ndx, align 4, !dbg !6057
  %and62 = and i32 %59, 31, !dbg !6057
  %shl63 = shl i32 1, %and62, !dbg !6057
  %neg = xor i32 %shl63, -1, !dbg !6057
  %60 = load i32*, i32** %subd, align 8, !dbg !6057
  %61 = load i32, i32* %hi_ndx, align 4, !dbg !6057
  %shr64 = ashr i32 %61, 5, !dbg !6057
  %idxprom65 = sext i32 %shr64 to i64, !dbg !6057
  %arrayidx66 = getelementptr inbounds i32, i32* %60, i64 %idxprom65, !dbg !6057
  %62 = load i32, i32* %arrayidx66, align 4, !dbg !6057
  %and67 = and i32 %62, %neg, !dbg !6057
  store i32 %and67, i32* %arrayidx66, align 4, !dbg !6057
  br label %if.end68

if.end68:                                         ; preds = %if.else, %if.then56
  br label %if.end89, !dbg !6062

if.else69:                                        ; preds = %if.then49
  %63 = load i32*, i32** %prev_hidden.addr, align 8, !dbg !6063
  %64 = load i32, i32* %hi_ndx, align 4, !dbg !6063
  %idxprom70 = sext i32 %64 to i64, !dbg !6063
  %arrayidx71 = getelementptr inbounds i32, i32* %63, i64 %idxprom70, !dbg !6063
  %65 = load i32, i32* %arrayidx71, align 4, !dbg !6063
  %tobool72 = icmp ne i32 %65, 0, !dbg !6063
  br i1 %tobool72, label %if.then73, label %if.else80, !dbg !6067

if.then73:                                        ; preds = %if.else69
  %66 = load i32, i32* %hi_ndx, align 4, !dbg !6063
  %and74 = and i32 %66, 31, !dbg !6063
  %shl75 = shl i32 1, %and74, !dbg !6063
  %67 = load i32*, i32** %subd, align 8, !dbg !6063
  %68 = load i32, i32* %hi_ndx, align 4, !dbg !6063
  %shr76 = ashr i32 %68, 5, !dbg !6063
  %idxprom77 = sext i32 %shr76 to i64, !dbg !6063
  %arrayidx78 = getelementptr inbounds i32, i32* %67, i64 %idxprom77, !dbg !6063
  %69 = load i32, i32* %arrayidx78, align 4, !dbg !6063
  %or79 = or i32 %69, %shl75, !dbg !6063
  store i32 %or79, i32* %arrayidx78, align 4, !dbg !6063
  br label %if.end88, !dbg !6063

if.else80:                                        ; preds = %if.else69
  %70 = load i32, i32* %hi_ndx, align 4, !dbg !6063
  %and81 = and i32 %70, 31, !dbg !6063
  %shl82 = shl i32 1, %and81, !dbg !6063
  %neg83 = xor i32 %shl82, -1, !dbg !6063
  %71 = load i32*, i32** %subd, align 8, !dbg !6063
  %72 = load i32, i32* %hi_ndx, align 4, !dbg !6063
  %shr84 = ashr i32 %72, 5, !dbg !6063
  %idxprom85 = sext i32 %shr84 to i64, !dbg !6063
  %arrayidx86 = getelementptr inbounds i32, i32* %71, i64 %idxprom85, !dbg !6063
  %73 = load i32, i32* %arrayidx86, align 4, !dbg !6063
  %and87 = and i32 %73, %neg83, !dbg !6063
  store i32 %and87, i32* %arrayidx86, align 4, !dbg !6063
  br label %if.end88

if.end88:                                         ; preds = %if.else80, %if.then73
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end68
  br label %if.end108, !dbg !6068

if.else90:                                        ; preds = %if.end46
  %74 = load i32, i32* %lo_val, align 4, !dbg !6069
  %tobool91 = icmp ne i32 %74, 0, !dbg !6069
  br i1 %tobool91, label %if.then92, label %if.else99, !dbg !6073

if.then92:                                        ; preds = %if.else90
  %75 = load i32, i32* %hi_ndx, align 4, !dbg !6069
  %and93 = and i32 %75, 31, !dbg !6069
  %shl94 = shl i32 1, %and93, !dbg !6069
  %76 = load i32*, i32** %subd, align 8, !dbg !6069
  %77 = load i32, i32* %hi_ndx, align 4, !dbg !6069
  %shr95 = ashr i32 %77, 5, !dbg !6069
  %idxprom96 = sext i32 %shr95 to i64, !dbg !6069
  %arrayidx97 = getelementptr inbounds i32, i32* %76, i64 %idxprom96, !dbg !6069
  %78 = load i32, i32* %arrayidx97, align 4, !dbg !6069
  %or98 = or i32 %78, %shl94, !dbg !6069
  store i32 %or98, i32* %arrayidx97, align 4, !dbg !6069
  br label %if.end107, !dbg !6069

if.else99:                                        ; preds = %if.else90
  %79 = load i32, i32* %hi_ndx, align 4, !dbg !6069
  %and100 = and i32 %79, 31, !dbg !6069
  %shl101 = shl i32 1, %and100, !dbg !6069
  %neg102 = xor i32 %shl101, -1, !dbg !6069
  %80 = load i32*, i32** %subd, align 8, !dbg !6069
  %81 = load i32, i32* %hi_ndx, align 4, !dbg !6069
  %shr103 = ashr i32 %81, 5, !dbg !6069
  %idxprom104 = sext i32 %shr103 to i64, !dbg !6069
  %arrayidx105 = getelementptr inbounds i32, i32* %80, i64 %idxprom104, !dbg !6069
  %82 = load i32, i32* %arrayidx105, align 4, !dbg !6069
  %and106 = and i32 %82, %neg102, !dbg !6069
  store i32 %and106, i32* %arrayidx105, align 4, !dbg !6069
  br label %if.end107

if.end107:                                        ; preds = %if.else99, %if.then92
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end89
  br label %for.inc, !dbg !6074

for.inc:                                          ; preds = %if.end108, %if.then45
  %83 = load i32, i32* %xo, align 4, !dbg !6075
  %inc = add nsw i32 %83, 1, !dbg !6075
  store i32 %inc, i32* %xo, align 4, !dbg !6075
  br label %for.cond34, !dbg !6076, !llvm.loop !6077

for.end:                                          ; preds = %for.cond34
  br label %for.inc109, !dbg !6079

for.inc109:                                       ; preds = %for.end, %if.then31
  %84 = load i32, i32* %yo, align 4, !dbg !6080
  %inc110 = add nsw i32 %84, 1, !dbg !6080
  store i32 %inc110, i32* %yo, align 4, !dbg !6080
  br label %for.cond21, !dbg !6081, !llvm.loop !6082

for.end111:                                       ; preds = %for.cond21
  br label %for.inc112, !dbg !6084

for.inc112:                                       ; preds = %for.end111
  %85 = load i32, i32* %xl, align 4, !dbg !6085
  %inc113 = add nsw i32 %85, 1, !dbg !6085
  store i32 %inc113, i32* %xl, align 4, !dbg !6085
  br label %for.cond9, !dbg !6086, !llvm.loop !6087

for.end114:                                       ; preds = %for.cond9
  br label %for.inc115, !dbg !6089

for.inc115:                                       ; preds = %for.end114
  %86 = load i32, i32* %yl, align 4, !dbg !6090
  %inc116 = add nsw i32 %86, 1, !dbg !6090
  store i32 %inc116, i32* %yl, align 4, !dbg !6090
  br label %for.cond, !dbg !6091, !llvm.loop !6092

for.end117:                                       ; preds = %for.cond
  %87 = load i32*, i32** %subd, align 8, !dbg !6094
  store i32* %87, i32** %retval, align 8, !dbg !6095
  br label %return, !dbg !6095

return:                                           ; preds = %for.end117, %if.then
  %88 = load i32*, i32** %retval, align 8, !dbg !6096
  ret i32* %88, !dbg !6096
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_set_space(%struct.DerivedMesh* %dm, %struct.Object* %ob, i32 %from, i32 %to) #0 !dbg !6097 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  %ccgdm = alloca %struct.DerivedMesh*, align 8
  %subsurf = alloca %struct.DerivedMesh*, align 8
  %gridData = alloca %struct.CCGElem**, align 8
  %subGridData = alloca %struct.CCGElem**, align 8
  %key = alloca %struct.CCGKey, align 4
  %mpoly = alloca %struct.MPoly*, align 8
  %mdisps = alloca %struct.MDisps*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %gridOffset = alloca i32*, align 8
  %totlvl = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %numGrids = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %dGridSize = alloca i32, align 4
  %dSkip = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %gIndex = alloca i32, align 4
  %mdisp = alloca %struct.MDisps*, align 8
  %subgrid = alloca %struct.CCGElem*, align 8
  %dispgrid = alloca [3 x float]*, align 8
  %data = alloca float*, align 8
  %co = alloca float*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %dco = alloca [3 x float], align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6100, metadata !DIExpression()), !dbg !6101
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6102, metadata !DIExpression()), !dbg !6103
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !6104, metadata !DIExpression()), !dbg !6105
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !6106, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %ccgdm, metadata !6108, metadata !DIExpression()), !dbg !6109
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6109
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %subsurf, metadata !6110, metadata !DIExpression()), !dbg !6111
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %subsurf, align 8, !dbg !6111
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %gridData, metadata !6112, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %subGridData, metadata !6114, metadata !DIExpression()), !dbg !6115
  store %struct.CCGElem** null, %struct.CCGElem*** %subGridData, align 8, !dbg !6115
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !6118, metadata !DIExpression()), !dbg !6119
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6120
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 4, !dbg !6121
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %polyData, i32 25), !dbg !6122
  %1 = bitcast i8* %call to %struct.MPoly*, !dbg !6122
  store %struct.MPoly* %1, %struct.MPoly** %mpoly, align 8, !dbg !6119
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !6123, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !6125, metadata !DIExpression()), !dbg !6126
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6127
  %call1 = call %struct.MultiresModifierData* @get_multires_modifier(%struct.Scene* null, %struct.Object* %2, i8 zeroext 1), !dbg !6128
  store %struct.MultiresModifierData* %call1, %struct.MultiresModifierData** %mmd, align 8, !dbg !6126
  call void @llvm.dbg.declare(metadata i32** %gridOffset, metadata !6129, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.declare(metadata i32* %totlvl, metadata !6131, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6133, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6135, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.declare(metadata i32* %numGrids, metadata !6137, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !6139, metadata !DIExpression()), !dbg !6140
  call void @llvm.dbg.declare(metadata i32* %dGridSize, metadata !6141, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.declare(metadata i32* %dSkip, metadata !6143, metadata !DIExpression()), !dbg !6144
  %3 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !6145
  %tobool = icmp ne %struct.MultiresModifierData* %3, null, !dbg !6145
  br i1 %tobool, label %if.end, label %if.then, !dbg !6147

if.then:                                          ; preds = %entry
  br label %if.end148, !dbg !6148

if.end:                                           ; preds = %entry
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6149
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 3, !dbg !6150
  %call2 = call i8* @CustomData_get_layer(%struct.CustomData* %loopData, i32 19), !dbg !6151
  %5 = bitcast i8* %call2 to %struct.MDisps*, !dbg !6151
  store %struct.MDisps* %5, %struct.MDisps** %mdisps, align 8, !dbg !6152
  %6 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !6153
  %tobool3 = icmp ne %struct.MDisps* %6, null, !dbg !6153
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6155

if.then4:                                         ; preds = %if.end
  br label %cleanup, !dbg !6156

if.end5:                                          ; preds = %if.end
  %7 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !6158
  %totlvl6 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %7, i32 0, i32 4, !dbg !6159
  %8 = load i8, i8* %totlvl6, align 1, !dbg !6159
  %conv = zext i8 %8 to i32, !dbg !6158
  store i32 %conv, i32* %totlvl, align 4, !dbg !6160
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6161
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6162
  %11 = load i32, i32* %totlvl, align 4, !dbg !6163
  %12 = load i32, i32* %totlvl, align 4, !dbg !6164
  %13 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !6165
  %simple = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %13, i32 0, i32 5, !dbg !6166
  %14 = load i8, i8* %simple, align 4, !dbg !6166
  %conv7 = zext i8 %14 to i32, !dbg !6165
  %call8 = call %struct.DerivedMesh* @multires_dm_create_local(%struct.Object* %9, %struct.DerivedMesh* %10, i32 %11, i32 %12, i32 %conv7, i8 zeroext 0), !dbg !6167
  store %struct.DerivedMesh* %call8, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6168
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6169
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6170
  %17 = load i32, i32* %totlvl, align 4, !dbg !6171
  %18 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !6172
  %simple9 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %18, i32 0, i32 5, !dbg !6173
  %19 = load i8, i8* %simple9, align 4, !dbg !6173
  %conv10 = zext i8 %19 to i32, !dbg !6172
  %20 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !6174
  %flags = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %20, i32 0, i32 6, !dbg !6175
  %21 = load i8, i8* %flags, align 1, !dbg !6175
  %conv11 = zext i8 %21 to i32, !dbg !6174
  %and = and i32 %conv11, 1, !dbg !6176
  %22 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !6177
  %flags12 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %22, i32 0, i32 6, !dbg !6178
  %23 = load i8, i8* %flags12, align 1, !dbg !6178
  %conv13 = zext i8 %23 to i32, !dbg !6177
  %and14 = and i32 %conv13, 2, !dbg !6179
  %call15 = call %struct.DerivedMesh* @subsurf_dm_create_local(%struct.Object* %15, %struct.DerivedMesh* %16, i32 %17, i32 %conv10, i32 %and, i32 %and14, i32 0), !dbg !6180
  store %struct.DerivedMesh* %call15, %struct.DerivedMesh** %subsurf, align 8, !dbg !6181
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6182
  %getNumGrids = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 63, !dbg !6183
  %25 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumGrids, align 8, !dbg !6183
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6184
  %call16 = call i32 %25(%struct.DerivedMesh* %26), !dbg !6182
  store i32 %call16, i32* %numGrids, align 4, !dbg !6185
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6186
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %27, i32 0, i32 64, !dbg !6187
  %28 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !6187
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6188
  %call17 = call i32 %28(%struct.DerivedMesh* %29), !dbg !6186
  store i32 %call17, i32* %gridSize, align 4, !dbg !6189
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6190
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 65, !dbg !6191
  %31 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !6191
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6192
  %call18 = call %struct.CCGElem** %31(%struct.DerivedMesh* %32), !dbg !6190
  store %struct.CCGElem** %call18, %struct.CCGElem*** %gridData, align 8, !dbg !6193
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6194
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 68, !dbg !6195
  %34 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !6195
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6196
  call void %34(%struct.DerivedMesh* %35, %struct.CCGKey* %key), !dbg !6194
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6197
  %37 = load i32, i32* %numGrids, align 4, !dbg !6198
  %conv19 = sext i32 %37 to i64, !dbg !6198
  %mul = mul i64 8, %conv19, !dbg !6199
  %call20 = call i8* %36(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !6197
  %38 = bitcast i8* %call20 to %struct.CCGElem**, !dbg !6197
  store %struct.CCGElem** %38, %struct.CCGElem*** %subGridData, align 8, !dbg !6200
  store i32 0, i32* %i, align 4, !dbg !6201
  br label %for.cond, !dbg !6203

for.cond:                                         ; preds = %for.inc, %if.end5
  %39 = load i32, i32* %i, align 4, !dbg !6204
  %40 = load i32, i32* %numGrids, align 4, !dbg !6206
  %cmp = icmp slt i32 %39, %40, !dbg !6207
  br i1 %cmp, label %for.body, label %for.end, !dbg !6208

for.body:                                         ; preds = %for.cond
  %41 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6209
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 1, !dbg !6211
  %42 = load i32, i32* %elem_size, align 4, !dbg !6211
  %43 = load i32, i32* %gridSize, align 4, !dbg !6212
  %mul22 = mul nsw i32 %42, %43, !dbg !6213
  %44 = load i32, i32* %gridSize, align 4, !dbg !6214
  %mul23 = mul nsw i32 %mul22, %44, !dbg !6215
  %conv24 = sext i32 %mul23 to i64, !dbg !6216
  %call25 = call i8* %41(i64 %conv24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)), !dbg !6209
  %45 = bitcast i8* %call25 to %struct.CCGElem*, !dbg !6209
  %46 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !6217
  %47 = load i32, i32* %i, align 4, !dbg !6218
  %idxprom = sext i32 %47 to i64, !dbg !6217
  %arrayidx = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %46, i64 %idxprom, !dbg !6217
  store %struct.CCGElem* %45, %struct.CCGElem** %arrayidx, align 8, !dbg !6219
  %48 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !6220
  %49 = load i32, i32* %i, align 4, !dbg !6221
  %idxprom26 = sext i32 %49 to i64, !dbg !6220
  %arrayidx27 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %48, i64 %idxprom26, !dbg !6220
  %50 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx27, align 8, !dbg !6220
  %51 = bitcast %struct.CCGElem* %50 to i8*, !dbg !6222
  %52 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !6223
  %53 = load i32, i32* %i, align 4, !dbg !6224
  %idxprom28 = sext i32 %53 to i64, !dbg !6223
  %arrayidx29 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %52, i64 %idxprom28, !dbg !6223
  %54 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx29, align 8, !dbg !6223
  %55 = bitcast %struct.CCGElem* %54 to i8*, !dbg !6222
  %elem_size30 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 1, !dbg !6225
  %56 = load i32, i32* %elem_size30, align 4, !dbg !6225
  %57 = load i32, i32* %gridSize, align 4, !dbg !6226
  %mul31 = mul nsw i32 %56, %57, !dbg !6227
  %58 = load i32, i32* %gridSize, align 4, !dbg !6228
  %mul32 = mul nsw i32 %mul31, %58, !dbg !6229
  %conv33 = sext i32 %mul32 to i64, !dbg !6230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %55, i64 %conv33, i1 false), !dbg !6222
  br label %for.inc, !dbg !6231

for.inc:                                          ; preds = %for.body
  %59 = load i32, i32* %i, align 4, !dbg !6232
  %inc = add nsw i32 %59, 1, !dbg !6232
  store i32 %inc, i32* %i, align 4, !dbg !6232
  br label %for.cond, !dbg !6233, !llvm.loop !6234

for.end:                                          ; preds = %for.cond
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6236
  %getGridSize34 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %60, i32 0, i32 64, !dbg !6237
  %61 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize34, align 8, !dbg !6237
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6238
  %call35 = call i32 %61(%struct.DerivedMesh* %62), !dbg !6236
  store i32 %call35, i32* %gridSize, align 4, !dbg !6239
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6240
  %getGridData36 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %63, i32 0, i32 65, !dbg !6241
  %64 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData36, align 8, !dbg !6241
  %65 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6242
  %call37 = call %struct.CCGElem** %64(%struct.DerivedMesh* %65), !dbg !6240
  store %struct.CCGElem** %call37, %struct.CCGElem*** %gridData, align 8, !dbg !6243
  %66 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6244
  %getGridOffset = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %66, i32 0, i32 67, !dbg !6245
  %67 = load i32* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)** %getGridOffset, align 8, !dbg !6245
  %68 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6246
  %call38 = call i32* %67(%struct.DerivedMesh* %68), !dbg !6244
  store i32* %call38, i32** %gridOffset, align 8, !dbg !6247
  %69 = load i32, i32* %totlvl, align 4, !dbg !6248
  %idxprom39 = sext i32 %69 to i64, !dbg !6249
  %arrayidx40 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom39, !dbg !6249
  %70 = load i32, i32* %arrayidx40, align 4, !dbg !6249
  store i32 %70, i32* %dGridSize, align 4, !dbg !6250
  %71 = load i32, i32* %dGridSize, align 4, !dbg !6251
  %sub = sub nsw i32 %71, 1, !dbg !6252
  %72 = load i32, i32* %gridSize, align 4, !dbg !6253
  %sub41 = sub nsw i32 %72, 1, !dbg !6254
  %div = sdiv i32 %sub, %sub41, !dbg !6255
  store i32 %div, i32* %dSkip, align 4, !dbg !6256
  store i32 0, i32* %k, align 4, !dbg !6257
  store i32 0, i32* %i, align 4, !dbg !6258
  br label %for.cond42, !dbg !6260

for.cond42:                                       ; preds = %for.inc138, %for.end
  %73 = load i32, i32* %i, align 4, !dbg !6261
  %74 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6263
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %74, i32 0, i32 9, !dbg !6264
  %75 = load i32, i32* %numPolyData, align 8, !dbg !6264
  %cmp43 = icmp slt i32 %73, %75, !dbg !6265
  br i1 %cmp43, label %for.body45, label %for.end140, !dbg !6266

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !6267, metadata !DIExpression()), !dbg !6269
  %76 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6270
  %77 = load i32, i32* %i, align 4, !dbg !6271
  %idxprom46 = sext i32 %77 to i64, !dbg !6270
  %arrayidx47 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %76, i64 %idxprom46, !dbg !6270
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx47, i32 0, i32 1, !dbg !6272
  %78 = load i32, i32* %totloop, align 4, !dbg !6272
  store i32 %78, i32* %numVerts, align 4, !dbg !6269
  call void @llvm.dbg.declare(metadata i32* %S, metadata !6273, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6277, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.declare(metadata i32* %gIndex, metadata !6279, metadata !DIExpression()), !dbg !6280
  %79 = load i32*, i32** %gridOffset, align 8, !dbg !6281
  %80 = load i32, i32* %i, align 4, !dbg !6282
  %idxprom48 = sext i32 %80 to i64, !dbg !6281
  %arrayidx49 = getelementptr inbounds i32, i32* %79, i64 %idxprom48, !dbg !6281
  %81 = load i32, i32* %arrayidx49, align 4, !dbg !6281
  store i32 %81, i32* %gIndex, align 4, !dbg !6280
  store i32 0, i32* %S, align 4, !dbg !6283
  br label %for.cond50, !dbg !6285

for.cond50:                                       ; preds = %for.inc133, %for.body45
  %82 = load i32, i32* %S, align 4, !dbg !6286
  %83 = load i32, i32* %numVerts, align 4, !dbg !6288
  %cmp51 = icmp slt i32 %82, %83, !dbg !6289
  br i1 %cmp51, label %for.body53, label %for.end137, !dbg !6290

for.body53:                                       ; preds = %for.cond50
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisp, metadata !6291, metadata !DIExpression()), !dbg !6293
  %84 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !6294
  %85 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6295
  %86 = load i32, i32* %i, align 4, !dbg !6296
  %idxprom54 = sext i32 %86 to i64, !dbg !6295
  %arrayidx55 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %85, i64 %idxprom54, !dbg !6295
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx55, i32 0, i32 0, !dbg !6297
  %87 = load i32, i32* %loopstart, align 4, !dbg !6297
  %88 = load i32, i32* %S, align 4, !dbg !6298
  %add = add nsw i32 %87, %88, !dbg !6299
  %idxprom56 = sext i32 %add to i64, !dbg !6294
  %arrayidx57 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %84, i64 %idxprom56, !dbg !6294
  store %struct.MDisps* %arrayidx57, %struct.MDisps** %mdisp, align 8, !dbg !6293
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %subgrid, metadata !6300, metadata !DIExpression()), !dbg !6301
  %89 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !6302
  %90 = load i32, i32* %gIndex, align 4, !dbg !6303
  %idxprom58 = sext i32 %90 to i64, !dbg !6302
  %arrayidx59 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %89, i64 %idxprom58, !dbg !6302
  %91 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx59, align 8, !dbg !6302
  store %struct.CCGElem* %91, %struct.CCGElem** %subgrid, align 8, !dbg !6301
  call void @llvm.dbg.declare(metadata [3 x float]** %dispgrid, metadata !6304, metadata !DIExpression()), !dbg !6305
  store [3 x float]* null, [3 x float]** %dispgrid, align 8, !dbg !6305
  %92 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !6306
  %disps = getelementptr inbounds %struct.MDisps, %struct.MDisps* %92, i32 0, i32 2, !dbg !6308
  %93 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !6308
  %tobool60 = icmp ne [3 x float]* %93, null, !dbg !6306
  br i1 %tobool60, label %if.end68, label %if.then61, !dbg !6309

if.then61:                                        ; preds = %for.body53
  %94 = load i32, i32* %gridSize, align 4, !dbg !6310
  %95 = load i32, i32* %gridSize, align 4, !dbg !6312
  %mul62 = mul nsw i32 %94, %95, !dbg !6313
  %96 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !6314
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %96, i32 0, i32 0, !dbg !6315
  store i32 %mul62, i32* %totdisp, align 8, !dbg !6316
  %97 = load i32, i32* %totlvl, align 4, !dbg !6317
  %98 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !6318
  %level = getelementptr inbounds %struct.MDisps, %struct.MDisps* %98, i32 0, i32 1, !dbg !6319
  store i32 %97, i32* %level, align 4, !dbg !6320
  %99 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6321
  %100 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !6322
  %totdisp63 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %100, i32 0, i32 0, !dbg !6323
  %101 = load i32, i32* %totdisp63, align 8, !dbg !6323
  %conv64 = sext i32 %101 to i64, !dbg !6322
  %mul65 = mul i64 12, %conv64, !dbg !6324
  %call66 = call i8* %99(i64 %mul65, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)), !dbg !6321
  %102 = bitcast i8* %call66 to [3 x float]*, !dbg !6321
  %103 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !6325
  %disps67 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %103, i32 0, i32 2, !dbg !6326
  store [3 x float]* %102, [3 x float]** %disps67, align 8, !dbg !6327
  br label %if.end68, !dbg !6328

if.end68:                                         ; preds = %if.then61, %for.body53
  %104 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !6329
  %disps69 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %104, i32 0, i32 2, !dbg !6330
  %105 = load [3 x float]*, [3 x float]** %disps69, align 8, !dbg !6330
  store [3 x float]* %105, [3 x float]** %dispgrid, align 8, !dbg !6331
  store i32 0, i32* %y, align 4, !dbg !6332
  br label %for.cond70, !dbg !6334

for.cond70:                                       ; preds = %for.inc130, %if.end68
  %106 = load i32, i32* %y, align 4, !dbg !6335
  %107 = load i32, i32* %gridSize, align 4, !dbg !6337
  %cmp71 = icmp slt i32 %106, %107, !dbg !6338
  br i1 %cmp71, label %for.body73, label %for.end132, !dbg !6339

for.body73:                                       ; preds = %for.cond70
  store i32 0, i32* %x, align 4, !dbg !6340
  br label %for.cond74, !dbg !6343

for.cond74:                                       ; preds = %for.inc127, %for.body73
  %108 = load i32, i32* %x, align 4, !dbg !6344
  %109 = load i32, i32* %gridSize, align 4, !dbg !6346
  %cmp75 = icmp slt i32 %108, %109, !dbg !6347
  br i1 %cmp75, label %for.body77, label %for.end129, !dbg !6348

for.body77:                                       ; preds = %for.cond74
  call void @llvm.dbg.declare(metadata float** %data, metadata !6349, metadata !DIExpression()), !dbg !6351
  %110 = load [3 x float]*, [3 x float]** %dispgrid, align 8, !dbg !6352
  %111 = load i32, i32* %dGridSize, align 4, !dbg !6353
  %112 = load i32, i32* %y, align 4, !dbg !6354
  %mul78 = mul nsw i32 %111, %112, !dbg !6355
  %113 = load i32, i32* %dSkip, align 4, !dbg !6356
  %mul79 = mul nsw i32 %mul78, %113, !dbg !6357
  %114 = load i32, i32* %x, align 4, !dbg !6358
  %115 = load i32, i32* %dSkip, align 4, !dbg !6359
  %mul80 = mul nsw i32 %114, %115, !dbg !6360
  %add81 = add nsw i32 %mul79, %mul80, !dbg !6361
  %idxprom82 = sext i32 %add81 to i64, !dbg !6352
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %110, i64 %idxprom82, !dbg !6352
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx83, i64 0, i64 0, !dbg !6352
  store float* %arraydecay, float** %data, align 8, !dbg !6351
  call void @llvm.dbg.declare(metadata float** %co, metadata !6362, metadata !DIExpression()), !dbg !6363
  %116 = load %struct.CCGElem*, %struct.CCGElem** %subgrid, align 8, !dbg !6364
  %117 = load i32, i32* %x, align 4, !dbg !6365
  %118 = load i32, i32* %y, align 4, !dbg !6366
  %call84 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %116, i32 %117, i32 %118), !dbg !6367
  store float* %call84, float** %co, align 8, !dbg !6363
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !6368, metadata !DIExpression()), !dbg !6369
  call void @llvm.dbg.declare(metadata [3 x float]* %dco, metadata !6370, metadata !DIExpression()), !dbg !6371
  %arraydecay85 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !6372
  %119 = load i32, i32* %x, align 4, !dbg !6373
  %120 = load i32, i32* %y, align 4, !dbg !6374
  %121 = load %struct.CCGElem*, %struct.CCGElem** %subgrid, align 8, !dbg !6375
  call void @grid_tangent_matrix([3 x float]* %arraydecay85, %struct.CCGKey* %key, i32 %119, i32 %120, %struct.CCGElem* %121), !dbg !6376
  %122 = load i32, i32* %from.addr, align 4, !dbg !6377
  %cmp86 = icmp eq i32 %122, 0, !dbg !6379
  br i1 %cmp86, label %if.then88, label %if.else, !dbg !6380

if.then88:                                        ; preds = %for.body77
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6381
  %arraydecay90 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !6383
  %123 = load float*, float** %data, align 8, !dbg !6384
  call void @mul_v3_m3v3(float* %arraydecay89, [3 x float]* %arraydecay90, float* %123), !dbg !6385
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6386
  %124 = load float*, float** %co, align 8, !dbg !6387
  call void @add_v3_v3(float* %arraydecay91, float* %124), !dbg !6388
  br label %if.end103, !dbg !6389

if.else:                                          ; preds = %for.body77
  %125 = load i32, i32* %from.addr, align 4, !dbg !6390
  %cmp92 = icmp eq i32 %125, 1, !dbg !6392
  br i1 %cmp92, label %if.then94, label %if.else96, !dbg !6393

if.then94:                                        ; preds = %if.else
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6394
  %126 = load float*, float** %co, align 8, !dbg !6396
  %127 = load float*, float** %data, align 8, !dbg !6397
  call void @add_v3_v3v3(float* %arraydecay95, float* %126, float* %127), !dbg !6398
  br label %if.end102, !dbg !6399

if.else96:                                        ; preds = %if.else
  %128 = load i32, i32* %from.addr, align 4, !dbg !6400
  %cmp97 = icmp eq i32 %128, 2, !dbg !6402
  br i1 %cmp97, label %if.then99, label %if.end101, !dbg !6403

if.then99:                                        ; preds = %if.else96
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6404
  %129 = load float*, float** %data, align 8, !dbg !6406
  call void @copy_v3_v3(float* %arraydecay100, float* %129), !dbg !6407
  br label %if.end101, !dbg !6408

if.end101:                                        ; preds = %if.then99, %if.else96
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then94
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then88
  %130 = load i32, i32* %to.addr, align 4, !dbg !6409
  %cmp104 = icmp eq i32 %130, 0, !dbg !6411
  br i1 %cmp104, label %if.then106, label %if.else112, !dbg !6412

if.then106:                                       ; preds = %if.end103
  %arraydecay107 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !6413
  %call108 = call zeroext i8 @invert_m3([3 x float]* %arraydecay107), !dbg !6415
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6416
  %131 = load float*, float** %co, align 8, !dbg !6417
  call void @sub_v3_v3(float* %arraydecay109, float* %131), !dbg !6418
  %132 = load float*, float** %data, align 8, !dbg !6419
  %arraydecay110 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !6420
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6421
  call void @mul_v3_m3v3(float* %132, [3 x float]* %arraydecay110, float* %arraydecay111), !dbg !6422
  br label %if.end126, !dbg !6423

if.else112:                                       ; preds = %if.end103
  %133 = load i32, i32* %to.addr, align 4, !dbg !6424
  %cmp113 = icmp eq i32 %133, 1, !dbg !6426
  br i1 %cmp113, label %if.then115, label %if.else119, !dbg !6427

if.then115:                                       ; preds = %if.else112
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6428
  %134 = load float*, float** %co, align 8, !dbg !6430
  call void @sub_v3_v3(float* %arraydecay116, float* %134), !dbg !6431
  %135 = load float*, float** %data, align 8, !dbg !6432
  %arraydecay117 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !6433
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6434
  call void @mul_v3_m3v3(float* %135, [3 x float]* %arraydecay117, float* %arraydecay118), !dbg !6435
  br label %if.end125, !dbg !6436

if.else119:                                       ; preds = %if.else112
  %136 = load i32, i32* %to.addr, align 4, !dbg !6437
  %cmp120 = icmp eq i32 %136, 2, !dbg !6439
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !6440

if.then122:                                       ; preds = %if.else119
  %137 = load float*, float** %data, align 8, !dbg !6441
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !6443
  call void @copy_v3_v3(float* %137, float* %arraydecay123), !dbg !6444
  br label %if.end124, !dbg !6445

if.end124:                                        ; preds = %if.then122, %if.else119
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then115
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then106
  br label %for.inc127, !dbg !6446

for.inc127:                                       ; preds = %if.end126
  %138 = load i32, i32* %x, align 4, !dbg !6447
  %inc128 = add nsw i32 %138, 1, !dbg !6447
  store i32 %inc128, i32* %x, align 4, !dbg !6447
  br label %for.cond74, !dbg !6448, !llvm.loop !6449

for.end129:                                       ; preds = %for.cond74
  br label %for.inc130, !dbg !6451

for.inc130:                                       ; preds = %for.end129
  %139 = load i32, i32* %y, align 4, !dbg !6452
  %inc131 = add nsw i32 %139, 1, !dbg !6452
  store i32 %inc131, i32* %y, align 4, !dbg !6452
  br label %for.cond70, !dbg !6453, !llvm.loop !6454

for.end132:                                       ; preds = %for.cond70
  br label %for.inc133, !dbg !6456

for.inc133:                                       ; preds = %for.end132
  %140 = load i32, i32* %S, align 4, !dbg !6457
  %inc134 = add nsw i32 %140, 1, !dbg !6457
  store i32 %inc134, i32* %S, align 4, !dbg !6457
  %141 = load i32, i32* %gIndex, align 4, !dbg !6458
  %inc135 = add nsw i32 %141, 1, !dbg !6458
  store i32 %inc135, i32* %gIndex, align 4, !dbg !6458
  %142 = load i32, i32* %k, align 4, !dbg !6459
  %inc136 = add nsw i32 %142, 1, !dbg !6459
  store i32 %inc136, i32* %k, align 4, !dbg !6459
  br label %for.cond50, !dbg !6460, !llvm.loop !6461

for.end137:                                       ; preds = %for.cond50
  br label %for.inc138, !dbg !6463

for.inc138:                                       ; preds = %for.end137
  %143 = load i32, i32* %i, align 4, !dbg !6464
  %inc139 = add nsw i32 %143, 1, !dbg !6464
  store i32 %inc139, i32* %i, align 4, !dbg !6464
  br label %for.cond42, !dbg !6465, !llvm.loop !6466

for.end140:                                       ; preds = %for.cond42
  br label %cleanup, !dbg !6467

cleanup:                                          ; preds = %for.end140, %if.then4
  call void @llvm.dbg.label(metadata !6468), !dbg !6469
  %144 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6470
  %tobool141 = icmp ne %struct.DerivedMesh* %144, null, !dbg !6470
  br i1 %tobool141, label %if.then142, label %if.end143, !dbg !6472

if.then142:                                       ; preds = %cleanup
  %145 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6473
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %145, i32 0, i32 10, !dbg !6475
  store i32 1, i32* %needsFree, align 4, !dbg !6476
  %146 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6477
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %146, i32 0, i32 95, !dbg !6478
  %147 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !6478
  %148 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subsurf, align 8, !dbg !6479
  call void %147(%struct.DerivedMesh* %148), !dbg !6477
  br label %if.end143, !dbg !6480

if.end143:                                        ; preds = %if.then142, %cleanup
  %149 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6481
  %tobool144 = icmp ne %struct.DerivedMesh* %149, null, !dbg !6481
  br i1 %tobool144, label %if.then145, label %if.end148, !dbg !6483

if.then145:                                       ; preds = %if.end143
  %150 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6484
  %needsFree146 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %150, i32 0, i32 10, !dbg !6486
  store i32 1, i32* %needsFree146, align 4, !dbg !6487
  %151 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6488
  %release147 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %151, i32 0, i32 95, !dbg !6489
  %152 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release147, align 8, !dbg !6489
  %153 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ccgdm, align 8, !dbg !6490
  call void %152(%struct.DerivedMesh* %153), !dbg !6488
  br label %if.end148, !dbg !6491

if.end148:                                        ; preds = %if.then, %if.then145, %if.end143
  ret void, !dbg !6492
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !6493 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !6496, metadata !DIExpression()), !dbg !6497
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !6498, metadata !DIExpression()), !dbg !6499
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6500, metadata !DIExpression()), !dbg !6501
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6502, metadata !DIExpression()), !dbg !6503
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !6504
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !6505
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !6506
  %3 = load i32, i32* %x.addr, align 4, !dbg !6507
  %4 = load i32, i32* %y.addr, align 4, !dbg !6508
  %call = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3, i32 %4), !dbg !6509
  %call1 = call float* @CCG_elem_co(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !6510
  ret float* %call1, !dbg !6511
}

; Function Attrs: noinline nounwind uwtable
define internal void @grid_tangent_matrix([3 x float]* %mat, %struct.CCGKey* %key, i32 %x, i32 %y, %struct.CCGElem* %grid) #0 !dbg !6512 {
entry:
  %mat.addr = alloca [3 x float]*, align 8
  %key.addr = alloca %struct.CCGKey*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %grid.addr = alloca %struct.CCGElem*, align 8
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !6515, metadata !DIExpression()), !dbg !6516
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !6517, metadata !DIExpression()), !dbg !6518
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6519, metadata !DIExpression()), !dbg !6520
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  store %struct.CCGElem* %grid, %struct.CCGElem** %grid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %grid.addr, metadata !6523, metadata !DIExpression()), !dbg !6524
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !6525
  %1 = load i32, i32* %x.addr, align 4, !dbg !6526
  %2 = load i32, i32* %y.addr, align 4, !dbg !6527
  %3 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !6528
  %4 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !6529
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, !dbg !6529
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6529
  call void @grid_tangent(%struct.CCGKey* %0, i32 %1, i32 %2, i32 0, %struct.CCGElem* %3, float* %arraydecay), !dbg !6530
  %5 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !6531
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %5, i64 0, !dbg !6531
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !6531
  %call = call float @normalize_v3(float* %arraydecay2), !dbg !6532
  %6 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !6533
  %7 = load i32, i32* %x.addr, align 4, !dbg !6534
  %8 = load i32, i32* %y.addr, align 4, !dbg !6535
  %9 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !6536
  %10 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !6537
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %10, i64 1, !dbg !6537
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !6537
  call void @grid_tangent(%struct.CCGKey* %6, i32 %7, i32 %8, i32 1, %struct.CCGElem* %9, float* %arraydecay4), !dbg !6538
  %11 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !6539
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %11, i64 1, !dbg !6539
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !6539
  %call7 = call float @normalize_v3(float* %arraydecay6), !dbg !6540
  %12 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !6541
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 2, !dbg !6541
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !6541
  %13 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !6542
  %14 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !6543
  %15 = load i32, i32* %x.addr, align 4, !dbg !6544
  %16 = load i32, i32* %y.addr, align 4, !dbg !6545
  %call10 = call float* @CCG_grid_elem_no(%struct.CCGKey* %13, %struct.CCGElem* %14, i32 %15, i32 %16), !dbg !6546
  call void @copy_v3_v3(float* %arraydecay9, float* %call10), !dbg !6547
  ret void, !dbg !6548
}

declare dso_local void @mul_v3_m3v3(float*, [3 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6549 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6550, metadata !DIExpression()), !dbg !6551
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6552, metadata !DIExpression()), !dbg !6553
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6554, metadata !DIExpression()), !dbg !6555
  %0 = load float*, float** %a.addr, align 8, !dbg !6556
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6556
  %1 = load float, float* %arrayidx, align 4, !dbg !6556
  %2 = load float*, float** %b.addr, align 8, !dbg !6557
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6557
  %3 = load float, float* %arrayidx1, align 4, !dbg !6557
  %add = fadd float %1, %3, !dbg !6558
  %4 = load float*, float** %r.addr, align 8, !dbg !6559
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6559
  store float %add, float* %arrayidx2, align 4, !dbg !6560
  %5 = load float*, float** %a.addr, align 8, !dbg !6561
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6561
  %6 = load float, float* %arrayidx3, align 4, !dbg !6561
  %7 = load float*, float** %b.addr, align 8, !dbg !6562
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6562
  %8 = load float, float* %arrayidx4, align 4, !dbg !6562
  %add5 = fadd float %6, %8, !dbg !6563
  %9 = load float*, float** %r.addr, align 8, !dbg !6564
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6564
  store float %add5, float* %arrayidx6, align 4, !dbg !6565
  %10 = load float*, float** %a.addr, align 8, !dbg !6566
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !6566
  %11 = load float, float* %arrayidx7, align 4, !dbg !6566
  %12 = load float*, float** %b.addr, align 8, !dbg !6567
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !6567
  %13 = load float, float* %arrayidx8, align 4, !dbg !6567
  %add9 = fadd float %11, %13, !dbg !6568
  %14 = load float*, float** %r.addr, align 8, !dbg !6569
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !6569
  store float %add9, float* %arrayidx10, align 4, !dbg !6570
  ret void, !dbg !6571
}

declare dso_local zeroext i8 @invert_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !6572 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6573, metadata !DIExpression()), !dbg !6574
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6575, metadata !DIExpression()), !dbg !6576
  %0 = load float*, float** %a.addr, align 8, !dbg !6577
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6577
  %1 = load float, float* %arrayidx, align 4, !dbg !6577
  %2 = load float*, float** %r.addr, align 8, !dbg !6578
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6578
  %3 = load float, float* %arrayidx1, align 4, !dbg !6579
  %sub = fsub float %3, %1, !dbg !6579
  store float %sub, float* %arrayidx1, align 4, !dbg !6579
  %4 = load float*, float** %a.addr, align 8, !dbg !6580
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !6580
  %5 = load float, float* %arrayidx2, align 4, !dbg !6580
  %6 = load float*, float** %r.addr, align 8, !dbg !6581
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !6581
  %7 = load float, float* %arrayidx3, align 4, !dbg !6582
  %sub4 = fsub float %7, %5, !dbg !6582
  store float %sub4, float* %arrayidx3, align 4, !dbg !6582
  %8 = load float*, float** %a.addr, align 8, !dbg !6583
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6583
  %9 = load float, float* %arrayidx5, align 4, !dbg !6583
  %10 = load float*, float** %r.addr, align 8, !dbg !6584
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6584
  %11 = load float, float* %arrayidx6, align 4, !dbg !6585
  %sub7 = fsub float %11, %9, !dbg !6585
  store float %sub7, float* %arrayidx6, align 4, !dbg !6585
  ret void, !dbg !6586
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_stitch_grids(%struct.Object* %ob) #0 !dbg !6587 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %faces = alloca %struct.CCGFace**, align 8
  %totface = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6588, metadata !DIExpression()), !dbg !6589
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6590
  %tobool = icmp ne %struct.Object* %0, null, !dbg !6590
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !6592

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6593
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 120, !dbg !6594
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !6594
  %tobool1 = icmp ne %struct.DerivedMesh* %2, null, !dbg !6593
  br i1 %tobool1, label %if.then, label %if.end9, !dbg !6595

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !6596, metadata !DIExpression()), !dbg !6598
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6599
  %derivedFinal2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 120, !dbg !6600
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal2, align 8, !dbg !6600
  %5 = bitcast %struct.DerivedMesh* %4 to %struct.CCGDerivedMesh*, !dbg !6601
  store %struct.CCGDerivedMesh* %5, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6598
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %faces, metadata !6602, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !6605, metadata !DIExpression()), !dbg !6606
  %6 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6607
  %pbvh = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %6, i32 0, i32 11, !dbg !6609
  %7 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !6609
  %tobool3 = icmp ne %struct.PBVH* %7, null, !dbg !6607
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !6610

if.then4:                                         ; preds = %if.then
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6611
  %pbvh5 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %8, i32 0, i32 11, !dbg !6613
  %9 = load %struct.PBVH*, %struct.PBVH** %pbvh5, align 8, !dbg !6613
  %10 = bitcast %struct.CCGFace*** %faces to i8***, !dbg !6614
  call void @BKE_pbvh_get_grid_updates(%struct.PBVH* %9, i32 0, i8*** %10, i32* %totface), !dbg !6615
  %11 = load i32, i32* %totface, align 4, !dbg !6616
  %tobool6 = icmp ne i32 %11, 0, !dbg !6616
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !6618

if.then7:                                         ; preds = %if.then4
  %12 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6619
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %12, i32 0, i32 1, !dbg !6621
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6621
  %14 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !6622
  %15 = load i32, i32* %totface, align 4, !dbg !6623
  %call = call i32 @ccgSubSurf_stitchFaces(%struct.CCGSubSurf* %13, i32 0, %struct.CCGFace** %14, i32 %15), !dbg !6624
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6625
  %17 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !6626
  %18 = bitcast %struct.CCGFace** %17 to i8*, !dbg !6626
  call void %16(i8* %18), !dbg !6625
  br label %if.end, !dbg !6627

if.end:                                           ; preds = %if.then7, %if.then4
  br label %if.end8, !dbg !6628

if.end8:                                          ; preds = %if.end, %if.then
  br label %if.end9, !dbg !6629

if.end9:                                          ; preds = %if.end8, %land.lhs.true, %entry
  ret void, !dbg !6630
}

declare dso_local void @BKE_pbvh_get_grid_updates(%struct.PBVH*, i32, i8***, i32*) #2

declare dso_local i32 @ccgSubSurf_stitchFaces(%struct.CCGSubSurf*, i32, %struct.CCGFace**, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @multires_make_derived_from_derived(%struct.DerivedMesh* %dm, %struct.MultiresModifierData* %mmd, %struct.Object* %ob, i32 %flags) #0 !dbg !6631 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mmd.addr = alloca %struct.MultiresModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %flags.addr = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %result = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %gridData = alloca %struct.CCGElem**, align 8
  %subGridData = alloca %struct.CCGElem**, align 8
  %key = alloca %struct.CCGKey, align 4
  %render = alloca i8, align 1
  %ignore_simplify = alloca i8, align 1
  %lvl = alloca i32, align 4
  %i = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %numGrids = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6634, metadata !DIExpression()), !dbg !6635
  store %struct.MultiresModifierData* %mmd, %struct.MultiresModifierData** %mmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd.addr, metadata !6636, metadata !DIExpression()), !dbg !6637
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6638, metadata !DIExpression()), !dbg !6639
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6640, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6642, metadata !DIExpression()), !dbg !6643
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6644
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6645
  %1 = load i8*, i8** %data, align 8, !dbg !6645
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !6644
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !6643
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %result, metadata !6646, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !6648, metadata !DIExpression()), !dbg !6649
  store %struct.CCGDerivedMesh* null, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6649
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %gridData, metadata !6650, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %subGridData, metadata !6652, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !6654, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.declare(metadata i8* %render, metadata !6656, metadata !DIExpression()), !dbg !6657
  %3 = load i32, i32* %flags.addr, align 4, !dbg !6658
  %and = and i32 %3, 2, !dbg !6659
  %cmp = icmp ne i32 %and, 0, !dbg !6660
  %conv = zext i1 %cmp to i32, !dbg !6660
  %conv1 = trunc i32 %conv to i8, !dbg !6661
  store i8 %conv1, i8* %render, align 1, !dbg !6657
  call void @llvm.dbg.declare(metadata i8* %ignore_simplify, metadata !6662, metadata !DIExpression()), !dbg !6663
  %4 = load i32, i32* %flags.addr, align 4, !dbg !6664
  %and2 = and i32 %4, 8, !dbg !6665
  %cmp3 = icmp ne i32 %and2, 0, !dbg !6666
  %conv4 = zext i1 %cmp3 to i32, !dbg !6666
  %conv5 = trunc i32 %conv4 to i8, !dbg !6667
  store i8 %conv5, i8* %ignore_simplify, align 1, !dbg !6663
  call void @llvm.dbg.declare(metadata i32* %lvl, metadata !6668, metadata !DIExpression()), !dbg !6669
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6670
  %6 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !6671
  %7 = load i8, i8* %render, align 1, !dbg !6672
  %8 = load i8, i8* %ignore_simplify, align 1, !dbg !6673
  %call = call i32 @multires_get_level(%struct.Object* %5, %struct.MultiresModifierData* %6, i8 zeroext %7, i8 zeroext %8), !dbg !6674
  store i32 %call, i32* %lvl, align 4, !dbg !6669
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6675, metadata !DIExpression()), !dbg !6676
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !6677, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.declare(metadata i32* %numGrids, metadata !6679, metadata !DIExpression()), !dbg !6680
  %9 = load i32, i32* %lvl, align 4, !dbg !6681
  %cmp6 = icmp eq i32 %9, 0, !dbg !6683
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6684

if.then:                                          ; preds = %entry
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6685
  store %struct.DerivedMesh* %10, %struct.DerivedMesh** %retval, align 8, !dbg !6686
  br label %return, !dbg !6686

if.end:                                           ; preds = %entry
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6687
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6688
  %13 = load i32, i32* %lvl, align 4, !dbg !6689
  %14 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !6690
  %simple = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %14, i32 0, i32 5, !dbg !6691
  %15 = load i8, i8* %simple, align 4, !dbg !6691
  %conv8 = zext i8 %15 to i32, !dbg !6690
  %16 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !6692
  %flags9 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %16, i32 0, i32 6, !dbg !6693
  %17 = load i8, i8* %flags9, align 1, !dbg !6693
  %conv10 = zext i8 %17 to i32, !dbg !6692
  %and11 = and i32 %conv10, 1, !dbg !6694
  %18 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !6695
  %flags12 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %18, i32 0, i32 6, !dbg !6696
  %19 = load i8, i8* %flags12, align 1, !dbg !6696
  %conv13 = zext i8 %19 to i32, !dbg !6695
  %and14 = and i32 %conv13, 2, !dbg !6697
  %20 = load i32, i32* %flags.addr, align 4, !dbg !6698
  %and15 = and i32 %20, 4, !dbg !6699
  %call16 = call %struct.DerivedMesh* @subsurf_dm_create_local(%struct.Object* %11, %struct.DerivedMesh* %12, i32 %13, i32 %conv8, i32 %and11, i32 %and14, i32 %and15), !dbg !6700
  store %struct.DerivedMesh* %call16, %struct.DerivedMesh** %result, align 8, !dbg !6701
  %21 = load i32, i32* %flags.addr, align 4, !dbg !6702
  %and17 = and i32 %21, 1, !dbg !6704
  %tobool = icmp ne i32 %and17, 0, !dbg !6704
  br i1 %tobool, label %if.end29, label %if.then18, !dbg !6705

if.then18:                                        ; preds = %if.end
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6706
  %23 = bitcast %struct.DerivedMesh* %22 to %struct.CCGDerivedMesh*, !dbg !6708
  store %struct.CCGDerivedMesh* %23, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6709
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6710
  %25 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6711
  %multires = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %25, i32 0, i32 20, !dbg !6712
  %ob19 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires, i32 0, i32 5, !dbg !6713
  store %struct.Object* %24, %struct.Object** %ob19, align 8, !dbg !6714
  %26 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !6715
  %27 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6716
  %multires20 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %27, i32 0, i32 20, !dbg !6717
  %mmd21 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires20, i32 0, i32 0, !dbg !6718
  store %struct.MultiresModifierData* %26, %struct.MultiresModifierData** %mmd21, align 8, !dbg !6719
  %28 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6720
  %multires22 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %28, i32 0, i32 20, !dbg !6721
  %local_mmd = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires22, i32 0, i32 1, !dbg !6722
  store i32 0, i32* %local_mmd, align 8, !dbg !6723
  %29 = load i32, i32* %lvl, align 4, !dbg !6724
  %30 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6725
  %multires23 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %30, i32 0, i32 20, !dbg !6726
  %lvl24 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires23, i32 0, i32 2, !dbg !6727
  store i32 %29, i32* %lvl24, align 4, !dbg !6728
  %31 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !6729
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %31, i32 0, i32 4, !dbg !6730
  %32 = load i8, i8* %totlvl, align 1, !dbg !6730
  %conv25 = zext i8 %32 to i32, !dbg !6729
  %33 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6731
  %multires26 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %33, i32 0, i32 20, !dbg !6732
  %totlvl27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires26, i32 0, i32 3, !dbg !6733
  store i32 %conv25, i32* %totlvl27, align 8, !dbg !6734
  %34 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6735
  %multires28 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %34, i32 0, i32 20, !dbg !6736
  %modified_flags = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires28, i32 0, i32 6, !dbg !6737
  store i32 0, i32* %modified_flags, align 8, !dbg !6738
  br label %if.end29, !dbg !6739

if.end29:                                         ; preds = %if.then18, %if.end
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6740
  %getNumGrids = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %35, i32 0, i32 63, !dbg !6741
  %36 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumGrids, align 8, !dbg !6741
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6742
  %call30 = call i32 %36(%struct.DerivedMesh* %37), !dbg !6740
  store i32 %call30, i32* %numGrids, align 4, !dbg !6743
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6744
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %38, i32 0, i32 64, !dbg !6745
  %39 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !6745
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6746
  %call31 = call i32 %39(%struct.DerivedMesh* %40), !dbg !6744
  store i32 %call31, i32* %gridSize, align 4, !dbg !6747
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6748
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %41, i32 0, i32 65, !dbg !6749
  %42 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !6749
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6750
  %call32 = call %struct.CCGElem** %42(%struct.DerivedMesh* %43), !dbg !6748
  store %struct.CCGElem** %call32, %struct.CCGElem*** %gridData, align 8, !dbg !6751
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6752
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %44, i32 0, i32 68, !dbg !6753
  %45 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !6753
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6754
  call void %45(%struct.DerivedMesh* %46, %struct.CCGKey* %key), !dbg !6752
  %47 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6755
  %48 = load i32, i32* %numGrids, align 4, !dbg !6756
  %conv33 = sext i32 %48 to i64, !dbg !6756
  %mul = mul i64 8, %conv33, !dbg !6757
  %call34 = call i8* %47(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)), !dbg !6755
  %49 = bitcast i8* %call34 to %struct.CCGElem**, !dbg !6755
  store %struct.CCGElem** %49, %struct.CCGElem*** %subGridData, align 8, !dbg !6758
  store i32 0, i32* %i, align 4, !dbg !6759
  br label %for.cond, !dbg !6761

for.cond:                                         ; preds = %for.inc, %if.end29
  %50 = load i32, i32* %i, align 4, !dbg !6762
  %51 = load i32, i32* %numGrids, align 4, !dbg !6764
  %cmp35 = icmp slt i32 %50, %51, !dbg !6765
  br i1 %cmp35, label %for.body, label %for.end, !dbg !6766

for.body:                                         ; preds = %for.cond
  %52 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6767
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 1, !dbg !6769
  %53 = load i32, i32* %elem_size, align 4, !dbg !6769
  %54 = load i32, i32* %gridSize, align 4, !dbg !6770
  %mul37 = mul nsw i32 %53, %54, !dbg !6771
  %55 = load i32, i32* %gridSize, align 4, !dbg !6772
  %mul38 = mul nsw i32 %mul37, %55, !dbg !6773
  %conv39 = sext i32 %mul38 to i64, !dbg !6774
  %call40 = call i8* %52(i64 %conv39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)), !dbg !6767
  %56 = bitcast i8* %call40 to %struct.CCGElem*, !dbg !6767
  %57 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !6775
  %58 = load i32, i32* %i, align 4, !dbg !6776
  %idxprom = sext i32 %58 to i64, !dbg !6775
  %arrayidx = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %57, i64 %idxprom, !dbg !6775
  store %struct.CCGElem* %56, %struct.CCGElem** %arrayidx, align 8, !dbg !6777
  %59 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !6778
  %60 = load i32, i32* %i, align 4, !dbg !6779
  %idxprom41 = sext i32 %60 to i64, !dbg !6778
  %arrayidx42 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %59, i64 %idxprom41, !dbg !6778
  %61 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx42, align 8, !dbg !6778
  %62 = bitcast %struct.CCGElem* %61 to i8*, !dbg !6780
  %63 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !6781
  %64 = load i32, i32* %i, align 4, !dbg !6782
  %idxprom43 = sext i32 %64 to i64, !dbg !6781
  %arrayidx44 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %63, i64 %idxprom43, !dbg !6781
  %65 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx44, align 8, !dbg !6781
  %66 = bitcast %struct.CCGElem* %65 to i8*, !dbg !6780
  %elem_size45 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %key, i32 0, i32 1, !dbg !6783
  %67 = load i32, i32* %elem_size45, align 4, !dbg !6783
  %68 = load i32, i32* %gridSize, align 4, !dbg !6784
  %mul46 = mul nsw i32 %67, %68, !dbg !6785
  %69 = load i32, i32* %gridSize, align 4, !dbg !6786
  %mul47 = mul nsw i32 %mul46, %69, !dbg !6787
  %conv48 = sext i32 %mul47 to i64, !dbg !6788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %66, i64 %conv48, i1 false), !dbg !6780
  br label %for.inc, !dbg !6789

for.inc:                                          ; preds = %for.body
  %70 = load i32, i32* %i, align 4, !dbg !6790
  %inc = add nsw i32 %70, 1, !dbg !6790
  store i32 %inc, i32* %i, align 4, !dbg !6790
  br label %for.cond, !dbg !6791, !llvm.loop !6792

for.end:                                          ; preds = %for.cond
  %71 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6794
  %72 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !6795
  %totlvl49 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %72, i32 0, i32 4, !dbg !6796
  %73 = load i8, i8* %totlvl49, align 1, !dbg !6796
  %conv50 = zext i8 %73 to i32, !dbg !6795
  call void @multires_set_tot_mdisps(%struct.Mesh* %71, i32 %conv50), !dbg !6797
  %74 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6798
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %74, i32 0, i32 25, !dbg !6799
  %75 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6800
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %75, i32 0, i32 0, !dbg !6801
  %76 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6802
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %76, i32 0, i32 31, !dbg !6803
  %77 = load i32, i32* %totloop, align 4, !dbg !6803
  call void @CustomData_external_read(%struct.CustomData* %ldata, %struct.ID* %id, i64 524288, i32 %77), !dbg !6804
  %78 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6805
  %79 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6806
  %data51 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 19, !dbg !6807
  %80 = load i8*, i8** %data51, align 8, !dbg !6807
  %81 = bitcast i8* %80 to %struct.Mesh*, !dbg !6806
  %82 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6808
  %83 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !6809
  %84 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd.addr, align 8, !dbg !6810
  %totlvl52 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %84, i32 0, i32 4, !dbg !6811
  %85 = load i8, i8* %totlvl52, align 1, !dbg !6811
  %conv53 = zext i8 %85 to i32, !dbg !6810
  call void @multiresModifier_disp_run(%struct.DerivedMesh* %78, %struct.Mesh* %81, %struct.DerivedMesh* %82, i32 0, %struct.CCGElem** %83, i32 %conv53), !dbg !6812
  %86 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6813
  %tobool54 = icmp ne %struct.CCGDerivedMesh* %86, null, !dbg !6813
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !6815

if.then55:                                        ; preds = %for.end
  %87 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6816
  %88 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6817
  %89 = load i32, i32* %lvl, align 4, !dbg !6818
  call void @multires_output_hidden_to_ccgdm(%struct.CCGDerivedMesh* %87, %struct.Mesh* %88, i32 %89), !dbg !6819
  br label %if.end56, !dbg !6819

if.end56:                                         ; preds = %if.then55, %for.end
  store i32 0, i32* %i, align 4, !dbg !6820
  br label %for.cond57, !dbg !6822

for.cond57:                                       ; preds = %for.inc63, %if.end56
  %90 = load i32, i32* %i, align 4, !dbg !6823
  %91 = load i32, i32* %numGrids, align 4, !dbg !6825
  %cmp58 = icmp slt i32 %90, %91, !dbg !6826
  br i1 %cmp58, label %for.body60, label %for.end65, !dbg !6827

for.body60:                                       ; preds = %for.cond57
  %92 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6828
  %93 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !6829
  %94 = load i32, i32* %i, align 4, !dbg !6830
  %idxprom61 = sext i32 %94 to i64, !dbg !6829
  %arrayidx62 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %93, i64 %idxprom61, !dbg !6829
  %95 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx62, align 8, !dbg !6829
  %96 = bitcast %struct.CCGElem* %95 to i8*, !dbg !6829
  call void %92(i8* %96), !dbg !6828
  br label %for.inc63, !dbg !6828

for.inc63:                                        ; preds = %for.body60
  %97 = load i32, i32* %i, align 4, !dbg !6831
  %inc64 = add nsw i32 %97, 1, !dbg !6831
  store i32 %inc64, i32* %i, align 4, !dbg !6831
  br label %for.cond57, !dbg !6832, !llvm.loop !6833

for.end65:                                        ; preds = %for.cond57
  %98 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6835
  %99 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !6836
  %100 = bitcast %struct.CCGElem** %99 to i8*, !dbg !6836
  call void %98(i8* %100), !dbg !6835
  %101 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6837
  store %struct.DerivedMesh* %101, %struct.DerivedMesh** %retval, align 8, !dbg !6838
  br label %return, !dbg !6838

return:                                           ; preds = %for.end65, %if.then
  %102 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !6839
  ret %struct.DerivedMesh* %102, !dbg !6839
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_output_hidden_to_ccgdm(%struct.CCGDerivedMesh* %ccgdm, %struct.Mesh* %me, i32 %level) #0 !dbg !6840 {
entry:
  %ccgdm.addr = alloca %struct.CCGDerivedMesh*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %level.addr = alloca i32, align 4
  %mdisps = alloca %struct.MDisps*, align 8
  %grid_hidden = alloca i32**, align 8
  %gridOffset = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %g = alloca i32, align 4
  %md = alloca %struct.MDisps*, align 8
  %gh = alloca i32*, align 8
  store %struct.CCGDerivedMesh* %ccgdm, %struct.CCGDerivedMesh** %ccgdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !6849, metadata !DIExpression()), !dbg !6852
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6853
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 25, !dbg !6854
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata, i32 19), !dbg !6855
  %1 = bitcast i8* %call to %struct.MDisps*, !dbg !6855
  store %struct.MDisps* %1, %struct.MDisps** %mdisps, align 8, !dbg !6852
  call void @llvm.dbg.declare(metadata i32*** %grid_hidden, metadata !6856, metadata !DIExpression()), !dbg !6857
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !6858
  %gridHidden = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 19, !dbg !6859
  %3 = load i32**, i32*** %gridHidden, align 8, !dbg !6859
  store i32** %3, i32*** %grid_hidden, align 8, !dbg !6857
  call void @llvm.dbg.declare(metadata i32** %gridOffset, metadata !6860, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6862, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6864, metadata !DIExpression()), !dbg !6865
  %4 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !6866
  %dm = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %4, i32 0, i32 0, !dbg !6867
  %getGridOffset = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm, i32 0, i32 67, !dbg !6868
  %5 = load i32* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)** %getGridOffset, align 8, !dbg !6868
  %6 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !6869
  %dm1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %6, i32 0, i32 0, !dbg !6870
  %call2 = call i32* %5(%struct.DerivedMesh* %dm1), !dbg !6866
  store i32* %call2, i32** %gridOffset, align 8, !dbg !6871
  store i32 0, i32* %i, align 4, !dbg !6872
  br label %for.cond, !dbg !6874

for.cond:                                         ; preds = %for.inc14, %entry
  %7 = load i32, i32* %i, align 4, !dbg !6875
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6877
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 30, !dbg !6878
  %9 = load i32, i32* %totpoly, align 8, !dbg !6878
  %cmp = icmp slt i32 %7, %9, !dbg !6879
  br i1 %cmp, label %for.body, label %for.end16, !dbg !6880

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6881
  br label %for.cond3, !dbg !6884

for.cond3:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %j, align 4, !dbg !6885
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !6887
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 7, !dbg !6888
  %12 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6888
  %13 = load i32, i32* %i, align 4, !dbg !6889
  %idxprom = sext i32 %13 to i64, !dbg !6887
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %12, i64 %idxprom, !dbg !6887
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 1, !dbg !6890
  %14 = load i32, i32* %totloop, align 4, !dbg !6890
  %cmp4 = icmp slt i32 %10, %14, !dbg !6891
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !6892

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i32* %g, metadata !6893, metadata !DIExpression()), !dbg !6895
  %15 = load i32*, i32** %gridOffset, align 8, !dbg !6896
  %16 = load i32, i32* %i, align 4, !dbg !6897
  %idxprom6 = sext i32 %16 to i64, !dbg !6896
  %arrayidx7 = getelementptr inbounds i32, i32* %15, i64 %idxprom6, !dbg !6896
  %17 = load i32, i32* %arrayidx7, align 4, !dbg !6896
  %18 = load i32, i32* %j, align 4, !dbg !6898
  %add = add nsw i32 %17, %18, !dbg !6899
  store i32 %add, i32* %g, align 4, !dbg !6895
  call void @llvm.dbg.declare(metadata %struct.MDisps** %md, metadata !6900, metadata !DIExpression()), !dbg !6901
  %19 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !6902
  %20 = load i32, i32* %g, align 4, !dbg !6903
  %idxprom8 = sext i32 %20 to i64, !dbg !6902
  %arrayidx9 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %19, i64 %idxprom8, !dbg !6902
  store %struct.MDisps* %arrayidx9, %struct.MDisps** %md, align 8, !dbg !6901
  call void @llvm.dbg.declare(metadata i32** %gh, metadata !6904, metadata !DIExpression()), !dbg !6905
  %21 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !6906
  %hidden = getelementptr inbounds %struct.MDisps, %struct.MDisps* %21, i32 0, i32 3, !dbg !6907
  %22 = load i32*, i32** %hidden, align 8, !dbg !6907
  store i32* %22, i32** %gh, align 8, !dbg !6905
  %23 = load i32*, i32** %gh, align 8, !dbg !6908
  %tobool = icmp ne i32* %23, null, !dbg !6908
  br i1 %tobool, label %if.then, label %if.end, !dbg !6910

if.then:                                          ; preds = %for.body5
  %24 = load i32*, i32** %gh, align 8, !dbg !6911
  %25 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !6913
  %level10 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %25, i32 0, i32 1, !dbg !6914
  %26 = load i32, i32* %level10, align 4, !dbg !6914
  %27 = load i32, i32* %level.addr, align 4, !dbg !6915
  %call11 = call i32* @multires_mdisps_downsample_hidden(i32* %24, i32 %26, i32 %27), !dbg !6916
  %28 = load i32**, i32*** %grid_hidden, align 8, !dbg !6917
  %29 = load i32, i32* %g, align 4, !dbg !6918
  %idxprom12 = sext i32 %29 to i64, !dbg !6917
  %arrayidx13 = getelementptr inbounds i32*, i32** %28, i64 %idxprom12, !dbg !6917
  store i32* %call11, i32** %arrayidx13, align 8, !dbg !6919
  br label %if.end, !dbg !6920

if.end:                                           ; preds = %if.then, %for.body5
  br label %for.inc, !dbg !6921

for.inc:                                          ; preds = %if.end
  %30 = load i32, i32* %j, align 4, !dbg !6922
  %inc = add nsw i32 %30, 1, !dbg !6922
  store i32 %inc, i32* %j, align 4, !dbg !6922
  br label %for.cond3, !dbg !6923, !llvm.loop !6924

for.end:                                          ; preds = %for.cond3
  br label %for.inc14, !dbg !6926

for.inc14:                                        ; preds = %for.end
  %31 = load i32, i32* %i, align 4, !dbg !6927
  %inc15 = add nsw i32 %31, 1, !dbg !6927
  store i32 %inc15, i32* %i, align 4, !dbg !6927
  br label %for.cond, !dbg !6928, !llvm.loop !6929

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !6931
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @old_mdisps_bilinear(float* %out, [3 x float]* %disps, i32 %st, float %u, float %v) #0 !dbg !6932 {
entry:
  %out.addr = alloca float*, align 8
  %disps.addr = alloca [3 x float]*, align 8
  %st.addr = alloca i32, align 4
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %st_max = alloca i32, align 4
  %urat = alloca float, align 4
  %vrat = alloca float, align 4
  %uopp = alloca float, align 4
  %d = alloca [4 x [3 x float]], align 16
  %d2 = alloca [2 x [3 x float]], align 16
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !6935, metadata !DIExpression()), !dbg !6936
  store [3 x float]* %disps, [3 x float]** %disps.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %disps.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  store i32 %st, i32* %st.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %st.addr, metadata !6939, metadata !DIExpression()), !dbg !6940
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !6941, metadata !DIExpression()), !dbg !6942
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !6943, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6945, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6947, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !6949, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !6951, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.declare(metadata i32* %st_max, metadata !6953, metadata !DIExpression()), !dbg !6954
  %0 = load i32, i32* %st.addr, align 4, !dbg !6955
  %sub = sub nsw i32 %0, 1, !dbg !6956
  store i32 %sub, i32* %st_max, align 4, !dbg !6954
  call void @llvm.dbg.declare(metadata float* %urat, metadata !6957, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.declare(metadata float* %vrat, metadata !6959, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.declare(metadata float* %uopp, metadata !6961, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %d, metadata !6963, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.declare(metadata [2 x [3 x float]]* %d2, metadata !6967, metadata !DIExpression()), !dbg !6970
  %1 = load [3 x float]*, [3 x float]** %disps.addr, align 8, !dbg !6971
  %tobool = icmp ne [3 x float]* %1, null, !dbg !6971
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6973

lor.lhs.false:                                    ; preds = %entry
  %2 = load float, float* %u.addr, align 4, !dbg !6974
  %cmp = fcmp uno float %2, %2, !dbg !6974
  br i1 %cmp, label %if.then, label %lor.lhs.false1, !dbg !6975

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %3 = load float, float* %v.addr, align 4, !dbg !6976
  %cmp2 = fcmp uno float %3, %3, !dbg !6976
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6977

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  br label %return, !dbg !6978

if.end:                                           ; preds = %lor.lhs.false1
  %4 = load float, float* %u.addr, align 4, !dbg !6979
  %cmp3 = fcmp olt float %4, 0.000000e+00, !dbg !6981
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !6982

if.then4:                                         ; preds = %if.end
  store float 0.000000e+00, float* %u.addr, align 4, !dbg !6983
  br label %if.end10, !dbg !6984

if.else:                                          ; preds = %if.end
  %5 = load float, float* %u.addr, align 4, !dbg !6985
  %6 = load i32, i32* %st.addr, align 4, !dbg !6987
  %conv = sitofp i32 %6 to float, !dbg !6987
  %cmp5 = fcmp oge float %5, %conv, !dbg !6988
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !6989

if.then7:                                         ; preds = %if.else
  %7 = load i32, i32* %st_max, align 4, !dbg !6990
  %conv8 = sitofp i32 %7 to float, !dbg !6990
  store float %conv8, float* %u.addr, align 4, !dbg !6991
  br label %if.end9, !dbg !6992

if.end9:                                          ; preds = %if.then7, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then4
  %8 = load float, float* %v.addr, align 4, !dbg !6993
  %cmp11 = fcmp olt float %8, 0.000000e+00, !dbg !6995
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !6996

if.then13:                                        ; preds = %if.end10
  store float 0.000000e+00, float* %v.addr, align 4, !dbg !6997
  br label %if.end21, !dbg !6998

if.else14:                                        ; preds = %if.end10
  %9 = load float, float* %v.addr, align 4, !dbg !6999
  %10 = load i32, i32* %st.addr, align 4, !dbg !7001
  %conv15 = sitofp i32 %10 to float, !dbg !7001
  %cmp16 = fcmp oge float %9, %conv15, !dbg !7002
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !7003

if.then18:                                        ; preds = %if.else14
  %11 = load i32, i32* %st_max, align 4, !dbg !7004
  %conv19 = sitofp i32 %11 to float, !dbg !7004
  store float %conv19, float* %v.addr, align 4, !dbg !7005
  br label %if.end20, !dbg !7006

if.end20:                                         ; preds = %if.then18, %if.else14
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then13
  %12 = load float, float* %u.addr, align 4, !dbg !7007
  %conv22 = fpext float %12 to double, !dbg !7007
  %13 = call double @llvm.floor.f64(double %conv22), !dbg !7008
  %conv23 = fptosi double %13 to i32, !dbg !7008
  store i32 %conv23, i32* %x, align 4, !dbg !7009
  %14 = load float, float* %v.addr, align 4, !dbg !7010
  %conv24 = fpext float %14 to double, !dbg !7010
  %15 = call double @llvm.floor.f64(double %conv24), !dbg !7011
  %conv25 = fptosi double %15 to i32, !dbg !7011
  store i32 %conv25, i32* %y, align 4, !dbg !7012
  %16 = load i32, i32* %x, align 4, !dbg !7013
  %add = add nsw i32 %16, 1, !dbg !7014
  store i32 %add, i32* %x2, align 4, !dbg !7015
  %17 = load i32, i32* %y, align 4, !dbg !7016
  %add26 = add nsw i32 %17, 1, !dbg !7017
  store i32 %add26, i32* %y2, align 4, !dbg !7018
  %18 = load i32, i32* %x2, align 4, !dbg !7019
  %19 = load i32, i32* %st.addr, align 4, !dbg !7021
  %cmp27 = icmp sge i32 %18, %19, !dbg !7022
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7023

if.then29:                                        ; preds = %if.end21
  %20 = load i32, i32* %st_max, align 4, !dbg !7024
  store i32 %20, i32* %x2, align 4, !dbg !7025
  br label %if.end30, !dbg !7026

if.end30:                                         ; preds = %if.then29, %if.end21
  %21 = load i32, i32* %y2, align 4, !dbg !7027
  %22 = load i32, i32* %st.addr, align 4, !dbg !7029
  %cmp31 = icmp sge i32 %21, %22, !dbg !7030
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7031

if.then33:                                        ; preds = %if.end30
  %23 = load i32, i32* %st_max, align 4, !dbg !7032
  store i32 %23, i32* %y2, align 4, !dbg !7033
  br label %if.end34, !dbg !7034

if.end34:                                         ; preds = %if.then33, %if.end30
  %24 = load float, float* %u.addr, align 4, !dbg !7035
  %25 = load i32, i32* %x, align 4, !dbg !7036
  %conv35 = sitofp i32 %25 to float, !dbg !7036
  %sub36 = fsub float %24, %conv35, !dbg !7037
  store float %sub36, float* %urat, align 4, !dbg !7038
  %26 = load float, float* %v.addr, align 4, !dbg !7039
  %27 = load i32, i32* %y, align 4, !dbg !7040
  %conv37 = sitofp i32 %27 to float, !dbg !7040
  %sub38 = fsub float %26, %conv37, !dbg !7041
  store float %sub38, float* %vrat, align 4, !dbg !7042
  %28 = load float, float* %urat, align 4, !dbg !7043
  %sub39 = fsub float 1.000000e+00, %28, !dbg !7044
  store float %sub39, float* %uopp, align 4, !dbg !7045
  %arrayidx = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %d, i64 0, i64 0, !dbg !7046
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7046
  %29 = load [3 x float]*, [3 x float]** %disps.addr, align 8, !dbg !7047
  %30 = load i32, i32* %y, align 4, !dbg !7048
  %31 = load i32, i32* %st.addr, align 4, !dbg !7049
  %mul = mul nsw i32 %30, %31, !dbg !7050
  %32 = load i32, i32* %x, align 4, !dbg !7051
  %add40 = add nsw i32 %mul, %32, !dbg !7052
  %idxprom = sext i32 %add40 to i64, !dbg !7047
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %29, i64 %idxprom, !dbg !7047
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx41, i64 0, i64 0, !dbg !7047
  %33 = load float, float* %uopp, align 4, !dbg !7053
  call void @mul_v3_v3fl(float* %arraydecay, float* %arraydecay42, float %33), !dbg !7054
  %arrayidx43 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %d, i64 0, i64 1, !dbg !7055
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx43, i64 0, i64 0, !dbg !7055
  %34 = load [3 x float]*, [3 x float]** %disps.addr, align 8, !dbg !7056
  %35 = load i32, i32* %y, align 4, !dbg !7057
  %36 = load i32, i32* %st.addr, align 4, !dbg !7058
  %mul45 = mul nsw i32 %35, %36, !dbg !7059
  %37 = load i32, i32* %x2, align 4, !dbg !7060
  %add46 = add nsw i32 %mul45, %37, !dbg !7061
  %idxprom47 = sext i32 %add46 to i64, !dbg !7056
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %34, i64 %idxprom47, !dbg !7056
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !7056
  %38 = load float, float* %urat, align 4, !dbg !7062
  call void @mul_v3_v3fl(float* %arraydecay44, float* %arraydecay49, float %38), !dbg !7063
  %arrayidx50 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %d, i64 0, i64 2, !dbg !7064
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx50, i64 0, i64 0, !dbg !7064
  %39 = load [3 x float]*, [3 x float]** %disps.addr, align 8, !dbg !7065
  %40 = load i32, i32* %y2, align 4, !dbg !7066
  %41 = load i32, i32* %st.addr, align 4, !dbg !7067
  %mul52 = mul nsw i32 %40, %41, !dbg !7068
  %42 = load i32, i32* %x, align 4, !dbg !7069
  %add53 = add nsw i32 %mul52, %42, !dbg !7070
  %idxprom54 = sext i32 %add53 to i64, !dbg !7065
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %39, i64 %idxprom54, !dbg !7065
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 0, !dbg !7065
  %43 = load float, float* %uopp, align 4, !dbg !7071
  call void @mul_v3_v3fl(float* %arraydecay51, float* %arraydecay56, float %43), !dbg !7072
  %arrayidx57 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %d, i64 0, i64 3, !dbg !7073
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx57, i64 0, i64 0, !dbg !7073
  %44 = load [3 x float]*, [3 x float]** %disps.addr, align 8, !dbg !7074
  %45 = load i32, i32* %y2, align 4, !dbg !7075
  %46 = load i32, i32* %st.addr, align 4, !dbg !7076
  %mul59 = mul nsw i32 %45, %46, !dbg !7077
  %47 = load i32, i32* %x2, align 4, !dbg !7078
  %add60 = add nsw i32 %mul59, %47, !dbg !7079
  %idxprom61 = sext i32 %add60 to i64, !dbg !7074
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %44, i64 %idxprom61, !dbg !7074
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx62, i64 0, i64 0, !dbg !7074
  %48 = load float, float* %urat, align 4, !dbg !7080
  call void @mul_v3_v3fl(float* %arraydecay58, float* %arraydecay63, float %48), !dbg !7081
  %arrayidx64 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %d2, i64 0, i64 0, !dbg !7082
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 0, !dbg !7082
  %arrayidx66 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %d, i64 0, i64 0, !dbg !7083
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx66, i64 0, i64 0, !dbg !7083
  %arrayidx68 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %d, i64 0, i64 1, !dbg !7084
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx68, i64 0, i64 0, !dbg !7084
  call void @add_v3_v3v3(float* %arraydecay65, float* %arraydecay67, float* %arraydecay69), !dbg !7085
  %arrayidx70 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %d2, i64 0, i64 1, !dbg !7086
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx70, i64 0, i64 0, !dbg !7086
  %arrayidx72 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %d, i64 0, i64 2, !dbg !7087
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 0, !dbg !7087
  %arrayidx74 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %d, i64 0, i64 3, !dbg !7088
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx74, i64 0, i64 0, !dbg !7088
  call void @add_v3_v3v3(float* %arraydecay71, float* %arraydecay73, float* %arraydecay75), !dbg !7089
  %arrayidx76 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %d2, i64 0, i64 0, !dbg !7090
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx76, i64 0, i64 0, !dbg !7090
  %49 = load float, float* %vrat, align 4, !dbg !7091
  %sub78 = fsub float 1.000000e+00, %49, !dbg !7092
  call void @mul_v3_fl(float* %arraydecay77, float %sub78), !dbg !7093
  %arrayidx79 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %d2, i64 0, i64 1, !dbg !7094
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx79, i64 0, i64 0, !dbg !7094
  %50 = load float, float* %vrat, align 4, !dbg !7095
  call void @mul_v3_fl(float* %arraydecay80, float %50), !dbg !7096
  %51 = load float*, float** %out.addr, align 8, !dbg !7097
  %arrayidx81 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %d2, i64 0, i64 0, !dbg !7098
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx81, i64 0, i64 0, !dbg !7098
  %arrayidx83 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %d2, i64 0, i64 1, !dbg !7099
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx83, i64 0, i64 0, !dbg !7099
  call void @add_v3_v3v3(float* %51, float* %arraydecay82, float* %arraydecay84), !dbg !7100
  br label %return, !dbg !7101

return:                                           ; preds = %if.end34, %if.then
  ret void, !dbg !7101
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !7102 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  %0 = load float*, float** %a.addr, align 8, !dbg !7111
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7111
  %1 = load float, float* %arrayidx, align 4, !dbg !7111
  %2 = load float, float* %f.addr, align 4, !dbg !7112
  %mul = fmul float %1, %2, !dbg !7113
  %3 = load float*, float** %r.addr, align 8, !dbg !7114
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !7114
  store float %mul, float* %arrayidx1, align 4, !dbg !7115
  %4 = load float*, float** %a.addr, align 8, !dbg !7116
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7116
  %5 = load float, float* %arrayidx2, align 4, !dbg !7116
  %6 = load float, float* %f.addr, align 4, !dbg !7117
  %mul3 = fmul float %5, %6, !dbg !7118
  %7 = load float*, float** %r.addr, align 8, !dbg !7119
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7119
  store float %mul3, float* %arrayidx4, align 4, !dbg !7120
  %8 = load float*, float** %a.addr, align 8, !dbg !7121
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7121
  %9 = load float, float* %arrayidx5, align 4, !dbg !7121
  %10 = load float, float* %f.addr, align 4, !dbg !7122
  %mul6 = fmul float %9, %10, !dbg !7123
  %11 = load float*, float** %r.addr, align 8, !dbg !7124
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !7124
  store float %mul6, float* %arrayidx7, align 4, !dbg !7125
  ret void, !dbg !7126
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_load_old_250(%struct.Mesh* %me) #0 !dbg !7127 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %mdisps = alloca %struct.MDisps*, align 8
  %mdisps2 = alloca %struct.MDisps*, align 8
  %mf = alloca %struct.MFace*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %nvert = alloca i32, align 4
  %totdisp16 = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !7128, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !7130, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps2, metadata !7132, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !7134, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7138, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7140, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7142, metadata !DIExpression()), !dbg !7143
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7144
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 23, !dbg !7145
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %fdata, i32 19), !dbg !7146
  %1 = bitcast i8* %call to %struct.MDisps*, !dbg !7146
  store %struct.MDisps* %1, %struct.MDisps** %mdisps, align 8, !dbg !7147
  %2 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !7148
  %tobool = icmp ne %struct.MDisps* %2, null, !dbg !7148
  br i1 %tobool, label %if.then, label %if.end52, !dbg !7150

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7151
  br label %for.cond, !dbg !7154

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !7155
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7157
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 28, !dbg !7158
  %5 = load i32, i32* %totface, align 8, !dbg !7158
  %cmp = icmp slt i32 %3, %5, !dbg !7159
  br i1 %cmp, label %for.body, label %for.end, !dbg !7160

for.body:                                         ; preds = %for.cond
  %6 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !7161
  %7 = load i32, i32* %i, align 4, !dbg !7163
  %idxprom = sext i32 %7 to i64, !dbg !7161
  %arrayidx = getelementptr inbounds %struct.MDisps, %struct.MDisps* %6, i64 %idxprom, !dbg !7161
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx, i32 0, i32 0, !dbg !7164
  %8 = load i32, i32* %totdisp, align 8, !dbg !7164
  %tobool1 = icmp ne i32 %8, 0, !dbg !7161
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7165

if.then2:                                         ; preds = %for.body
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7166
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 12, !dbg !7167
  %10 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7167
  %11 = load i32, i32* %i, align 4, !dbg !7168
  %idxprom3 = sext i32 %11 to i64, !dbg !7166
  %arrayidx4 = getelementptr inbounds %struct.MFace, %struct.MFace* %10, i64 %idxprom3, !dbg !7166
  %12 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !7169
  %13 = load i32, i32* %i, align 4, !dbg !7170
  %idxprom5 = sext i32 %13 to i64, !dbg !7169
  %arrayidx6 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %12, i64 %idxprom5, !dbg !7169
  call void @old_mdisps_convert(%struct.MFace* %arrayidx4, %struct.MDisps* %arrayidx6), !dbg !7171
  br label %if.end, !dbg !7171

if.end:                                           ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !7164

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !7172
  %inc = add nsw i32 %14, 1, !dbg !7172
  store i32 %inc, i32* %i, align 4, !dbg !7172
  br label %for.cond, !dbg !7173, !llvm.loop !7174

for.end:                                          ; preds = %for.cond
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7176
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 25, !dbg !7177
  %16 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7178
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 31, !dbg !7179
  %17 = load i32, i32* %totloop, align 4, !dbg !7179
  %call7 = call i8* @CustomData_add_layer(%struct.CustomData* %ldata, i32 19, i32 1, i8* null, i32 %17), !dbg !7180
  %18 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7181
  %ldata8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 25, !dbg !7182
  %call9 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata8, i32 19), !dbg !7183
  %19 = bitcast i8* %call9 to %struct.MDisps*, !dbg !7183
  store %struct.MDisps* %19, %struct.MDisps** %mdisps2, align 8, !dbg !7184
  store i32 0, i32* %k, align 4, !dbg !7185
  %20 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7186
  %mface10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 12, !dbg !7187
  %21 = load %struct.MFace*, %struct.MFace** %mface10, align 8, !dbg !7187
  store %struct.MFace* %21, %struct.MFace** %mf, align 8, !dbg !7188
  store i32 0, i32* %i, align 4, !dbg !7189
  br label %for.cond11, !dbg !7191

for.cond11:                                       ; preds = %for.inc49, %for.end
  %22 = load i32, i32* %i, align 4, !dbg !7192
  %23 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7194
  %totface12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 28, !dbg !7195
  %24 = load i32, i32* %totface12, align 8, !dbg !7195
  %cmp13 = icmp slt i32 %22, %24, !dbg !7196
  br i1 %cmp13, label %for.body14, label %for.end51, !dbg !7197

for.body14:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata i32* %nvert, metadata !7198, metadata !DIExpression()), !dbg !7200
  %25 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7201
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %25, i32 0, i32 3, !dbg !7202
  %26 = load i32, i32* %v4, align 4, !dbg !7202
  %tobool15 = icmp ne i32 %26, 0, !dbg !7201
  %27 = zext i1 %tobool15 to i64, !dbg !7201
  %cond = select i1 %tobool15, i32 4, i32 3, !dbg !7201
  store i32 %cond, i32* %nvert, align 4, !dbg !7200
  call void @llvm.dbg.declare(metadata i32* %totdisp16, metadata !7203, metadata !DIExpression()), !dbg !7204
  %28 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !7205
  %29 = load i32, i32* %i, align 4, !dbg !7206
  %idxprom17 = sext i32 %29 to i64, !dbg !7205
  %arrayidx18 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %28, i64 %idxprom17, !dbg !7205
  %totdisp19 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx18, i32 0, i32 0, !dbg !7207
  %30 = load i32, i32* %totdisp19, align 8, !dbg !7207
  %31 = load i32, i32* %nvert, align 4, !dbg !7208
  %div = sdiv i32 %30, %31, !dbg !7209
  store i32 %div, i32* %totdisp16, align 4, !dbg !7204
  store i32 0, i32* %j, align 4, !dbg !7210
  br label %for.cond20, !dbg !7212

for.cond20:                                       ; preds = %for.inc45, %for.body14
  %32 = load i32, i32* %j, align 4, !dbg !7213
  %33 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7215
  %v421 = getelementptr inbounds %struct.MFace, %struct.MFace* %33, i32 0, i32 3, !dbg !7216
  %34 = load i32, i32* %v421, align 4, !dbg !7216
  %cmp22 = icmp ult i32 %32, %34, !dbg !7217
  %35 = zext i1 %cmp22 to i64, !dbg !7213
  %cond23 = select i1 %cmp22, i32 4, i32 3, !dbg !7213
  %tobool24 = icmp ne i32 %cond23, 0, !dbg !7218
  br i1 %tobool24, label %for.body25, label %for.end48, !dbg !7218

for.body25:                                       ; preds = %for.cond20
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7219
  %37 = load i32, i32* %totdisp16, align 4, !dbg !7221
  %conv = sext i32 %37 to i64, !dbg !7221
  %mul = mul i64 12, %conv, !dbg !7222
  %call26 = call i8* %36(i64 %mul, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0)), !dbg !7219
  %38 = bitcast i8* %call26 to [3 x float]*, !dbg !7219
  %39 = load %struct.MDisps*, %struct.MDisps** %mdisps2, align 8, !dbg !7223
  %40 = load i32, i32* %k, align 4, !dbg !7224
  %idxprom27 = sext i32 %40 to i64, !dbg !7223
  %arrayidx28 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %39, i64 %idxprom27, !dbg !7223
  %disps = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx28, i32 0, i32 2, !dbg !7225
  store [3 x float]* %38, [3 x float]** %disps, align 8, !dbg !7226
  %41 = load i32, i32* %totdisp16, align 4, !dbg !7227
  %42 = load %struct.MDisps*, %struct.MDisps** %mdisps2, align 8, !dbg !7228
  %43 = load i32, i32* %k, align 4, !dbg !7229
  %idxprom29 = sext i32 %43 to i64, !dbg !7228
  %arrayidx30 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %42, i64 %idxprom29, !dbg !7228
  %totdisp31 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx30, i32 0, i32 0, !dbg !7230
  store i32 %41, i32* %totdisp31, align 8, !dbg !7231
  %44 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !7232
  %45 = load i32, i32* %i, align 4, !dbg !7233
  %idxprom32 = sext i32 %45 to i64, !dbg !7232
  %arrayidx33 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %44, i64 %idxprom32, !dbg !7232
  %level = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx33, i32 0, i32 1, !dbg !7234
  %46 = load i32, i32* %level, align 4, !dbg !7234
  %47 = load %struct.MDisps*, %struct.MDisps** %mdisps2, align 8, !dbg !7235
  %48 = load i32, i32* %k, align 4, !dbg !7236
  %idxprom34 = sext i32 %48 to i64, !dbg !7235
  %arrayidx35 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %47, i64 %idxprom34, !dbg !7235
  %level36 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx35, i32 0, i32 1, !dbg !7237
  store i32 %46, i32* %level36, align 4, !dbg !7238
  %49 = load %struct.MDisps*, %struct.MDisps** %mdisps2, align 8, !dbg !7239
  %50 = load i32, i32* %k, align 4, !dbg !7240
  %idxprom37 = sext i32 %50 to i64, !dbg !7239
  %arrayidx38 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %49, i64 %idxprom37, !dbg !7239
  %disps39 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx38, i32 0, i32 2, !dbg !7241
  %51 = load [3 x float]*, [3 x float]** %disps39, align 8, !dbg !7241
  %52 = bitcast [3 x float]* %51 to i8*, !dbg !7242
  %53 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !7243
  %54 = load i32, i32* %i, align 4, !dbg !7244
  %idxprom40 = sext i32 %54 to i64, !dbg !7243
  %arrayidx41 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %53, i64 %idxprom40, !dbg !7243
  %disps42 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx41, i32 0, i32 2, !dbg !7245
  %55 = load [3 x float]*, [3 x float]** %disps42, align 8, !dbg !7245
  %56 = load i32, i32* %totdisp16, align 4, !dbg !7246
  %57 = load i32, i32* %j, align 4, !dbg !7247
  %mul43 = mul nsw i32 %56, %57, !dbg !7248
  %idx.ext = sext i32 %mul43 to i64, !dbg !7249
  %add.ptr = getelementptr inbounds [3 x float], [3 x float]* %55, i64 %idx.ext, !dbg !7249
  %58 = bitcast [3 x float]* %add.ptr to i8*, !dbg !7242
  %59 = load i32, i32* %totdisp16, align 4, !dbg !7250
  %conv44 = sext i32 %59 to i64, !dbg !7250
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %58, i64 %conv44, i1 false), !dbg !7242
  br label %for.inc45, !dbg !7251

for.inc45:                                        ; preds = %for.body25
  %60 = load i32, i32* %j, align 4, !dbg !7252
  %inc46 = add nsw i32 %60, 1, !dbg !7252
  store i32 %inc46, i32* %j, align 4, !dbg !7252
  %61 = load i32, i32* %k, align 4, !dbg !7253
  %inc47 = add nsw i32 %61, 1, !dbg !7253
  store i32 %inc47, i32* %k, align 4, !dbg !7253
  br label %for.cond20, !dbg !7254, !llvm.loop !7255

for.end48:                                        ; preds = %for.cond20
  br label %for.inc49, !dbg !7257

for.inc49:                                        ; preds = %for.end48
  %62 = load i32, i32* %i, align 4, !dbg !7258
  %inc50 = add nsw i32 %62, 1, !dbg !7258
  store i32 %inc50, i32* %i, align 4, !dbg !7258
  %63 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7259
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %63, i32 1, !dbg !7259
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !7259
  br label %for.cond11, !dbg !7260, !llvm.loop !7261

for.end51:                                        ; preds = %for.cond11
  br label %if.end52, !dbg !7263

if.end52:                                         ; preds = %for.end51, %entry
  ret void, !dbg !7264
}

; Function Attrs: noinline nounwind uwtable
define internal void @old_mdisps_convert(%struct.MFace* %mface, %struct.MDisps* %mdisp) #0 !dbg !7265 {
entry:
  %mface.addr = alloca %struct.MFace*, align 8
  %mdisp.addr = alloca %struct.MDisps*, align 8
  %newlvl = alloca i32, align 4
  %oldlvl = alloca i32, align 4
  %oldside = alloca i32, align 4
  %newside = alloca i32, align 4
  %nvert = alloca i32, align 4
  %newtotdisp = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %disps = alloca [3 x float]*, align 8
  %out = alloca [3 x float]*, align 8
  %u = alloca float, align 4
  %v = alloca float, align 4
  %sw_ap = alloca float, align 4
  %sw_ap42 = alloca float, align 4
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  store %struct.MDisps* %mdisp, %struct.MDisps** %mdisp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisp.addr, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.declare(metadata i32* %newlvl, metadata !7272, metadata !DIExpression()), !dbg !7273
  %0 = load %struct.MDisps*, %struct.MDisps** %mdisp.addr, align 8, !dbg !7274
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %0, i32 0, i32 0, !dbg !7275
  %1 = load i32, i32* %totdisp, align 8, !dbg !7275
  %conv = sitofp i32 %1 to double, !dbg !7274
  %call = call double @sqrt(double %conv) #5, !dbg !7276
  %sub = fsub double %call, 1.000000e+00, !dbg !7277
  %call1 = call double @log(double %sub) #5, !dbg !7278
  %div = fdiv double %call1, 0x3FE62E42FEFA39EF, !dbg !7279
  %conv2 = fptosi double %div to i32, !dbg !7278
  store i32 %conv2, i32* %newlvl, align 4, !dbg !7273
  call void @llvm.dbg.declare(metadata i32* %oldlvl, metadata !7280, metadata !DIExpression()), !dbg !7281
  %2 = load i32, i32* %newlvl, align 4, !dbg !7282
  %add = add nsw i32 %2, 1, !dbg !7283
  store i32 %add, i32* %oldlvl, align 4, !dbg !7281
  call void @llvm.dbg.declare(metadata i32* %oldside, metadata !7284, metadata !DIExpression()), !dbg !7285
  %3 = load i32, i32* %oldlvl, align 4, !dbg !7286
  %idxprom = sext i32 %3 to i64, !dbg !7287
  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom, !dbg !7287
  %4 = load i32, i32* %arrayidx, align 4, !dbg !7287
  store i32 %4, i32* %oldside, align 4, !dbg !7285
  call void @llvm.dbg.declare(metadata i32* %newside, metadata !7288, metadata !DIExpression()), !dbg !7289
  %5 = load i32, i32* %newlvl, align 4, !dbg !7290
  %idxprom3 = sext i32 %5 to i64, !dbg !7291
  %arrayidx4 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom3, !dbg !7291
  %6 = load i32, i32* %arrayidx4, align 4, !dbg !7291
  store i32 %6, i32* %newside, align 4, !dbg !7289
  call void @llvm.dbg.declare(metadata i32* %nvert, metadata !7292, metadata !DIExpression()), !dbg !7293
  %7 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !7294
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %7, i32 0, i32 3, !dbg !7295
  %8 = load i32, i32* %v4, align 4, !dbg !7295
  %tobool = icmp ne i32 %8, 0, !dbg !7296
  %9 = zext i1 %tobool to i64, !dbg !7296
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !7296
  store i32 %cond, i32* %nvert, align 4, !dbg !7293
  call void @llvm.dbg.declare(metadata i32* %newtotdisp, metadata !7297, metadata !DIExpression()), !dbg !7298
  %10 = load i32, i32* %newlvl, align 4, !dbg !7299
  %idxprom5 = sext i32 %10 to i64, !dbg !7300
  %arrayidx6 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_grid_tot, i64 0, i64 %idxprom5, !dbg !7300
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !7300
  %12 = load i32, i32* %nvert, align 4, !dbg !7301
  %mul = mul nsw i32 %11, %12, !dbg !7302
  store i32 %mul, i32* %newtotdisp, align 4, !dbg !7298
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7303, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7305, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.declare(metadata i32* %S, metadata !7307, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.declare(metadata [3 x float]** %disps, metadata !7309, metadata !DIExpression()), !dbg !7310
  call void @llvm.dbg.declare(metadata [3 x float]** %out, metadata !7311, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.declare(metadata float* %u, metadata !7313, metadata !DIExpression()), !dbg !7314
  store float 0.000000e+00, float* %u, align 4, !dbg !7314
  call void @llvm.dbg.declare(metadata float* %v, metadata !7315, metadata !DIExpression()), !dbg !7316
  store float 0.000000e+00, float* %v, align 4, !dbg !7316
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7317
  %14 = load i32, i32* %newtotdisp, align 4, !dbg !7318
  %conv7 = sext i32 %14 to i64, !dbg !7318
  %mul8 = mul i64 12, %conv7, !dbg !7319
  %call9 = call i8* %13(i64 %mul8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)), !dbg !7317
  %15 = bitcast i8* %call9 to [3 x float]*, !dbg !7317
  store [3 x float]* %15, [3 x float]** %disps, align 8, !dbg !7320
  %16 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !7321
  store [3 x float]* %16, [3 x float]** %out, align 8, !dbg !7322
  store i32 0, i32* %S, align 4, !dbg !7323
  br label %for.cond, !dbg !7325

for.cond:                                         ; preds = %for.inc59, %entry
  %17 = load i32, i32* %S, align 4, !dbg !7326
  %18 = load i32, i32* %nvert, align 4, !dbg !7328
  %cmp = icmp slt i32 %17, %18, !dbg !7329
  br i1 %cmp, label %for.body, label %for.end61, !dbg !7330

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %y, align 4, !dbg !7331
  br label %for.cond11, !dbg !7334

for.cond11:                                       ; preds = %for.inc56, %for.body
  %19 = load i32, i32* %y, align 4, !dbg !7335
  %20 = load i32, i32* %newside, align 4, !dbg !7337
  %cmp12 = icmp slt i32 %19, %20, !dbg !7338
  br i1 %cmp12, label %for.body14, label %for.end58, !dbg !7339

for.body14:                                       ; preds = %for.cond11
  store i32 0, i32* %x, align 4, !dbg !7340
  br label %for.cond15, !dbg !7343

for.cond15:                                       ; preds = %for.inc, %for.body14
  %21 = load i32, i32* %x, align 4, !dbg !7344
  %22 = load i32, i32* %newside, align 4, !dbg !7346
  %cmp16 = icmp slt i32 %21, %22, !dbg !7347
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !7348

for.body18:                                       ; preds = %for.cond15
  %23 = load i32, i32* %S, align 4, !dbg !7349
  %24 = load i32, i32* %newside, align 4, !dbg !7351
  %25 = load i32, i32* %oldside, align 4, !dbg !7352
  %26 = load i32, i32* %x, align 4, !dbg !7353
  %27 = load i32, i32* %y, align 4, !dbg !7354
  call void @old_mdisps_rotate(i32 %23, i32 %24, i32 %25, i32 %26, i32 %27, float* %u, float* %v), !dbg !7355
  %28 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7356
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %28, i64 0, i64 0, !dbg !7357
  %29 = load %struct.MDisps*, %struct.MDisps** %mdisp.addr, align 8, !dbg !7358
  %disps19 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %29, i32 0, i32 2, !dbg !7359
  %30 = load [3 x float]*, [3 x float]** %disps19, align 8, !dbg !7359
  %31 = load i32, i32* %oldside, align 4, !dbg !7360
  %32 = load float, float* %u, align 4, !dbg !7361
  %33 = load float, float* %v, align 4, !dbg !7362
  call void @old_mdisps_bilinear(float* %arraydecay, [3 x float]* %30, i32 %31, float %32, float %33), !dbg !7363
  %34 = load i32, i32* %S, align 4, !dbg !7364
  %cmp20 = icmp eq i32 %34, 1, !dbg !7366
  br i1 %cmp20, label %if.then, label %if.else, !dbg !7367

if.then:                                          ; preds = %for.body18
  %35 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7368
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %35, i64 0, i64 1, !dbg !7370
  %36 = load float, float* %arrayidx22, align 4, !dbg !7370
  %fneg = fneg float %36, !dbg !7371
  %37 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7372
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %37, i64 0, i64 1, !dbg !7373
  store float %fneg, float* %arrayidx23, align 4, !dbg !7374
  br label %if.end55, !dbg !7375

if.else:                                          ; preds = %for.body18
  %38 = load i32, i32* %S, align 4, !dbg !7376
  %cmp24 = icmp eq i32 %38, 2, !dbg !7378
  br i1 %cmp24, label %if.then26, label %if.else31, !dbg !7379

if.then26:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !7380, metadata !DIExpression()), !dbg !7383
  %39 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7383
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %39, i64 0, i64 0, !dbg !7383
  %40 = load float, float* %arrayidx27, align 4, !dbg !7383
  store float %40, float* %sw_ap, align 4, !dbg !7383
  %41 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7383
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %41, i64 0, i64 1, !dbg !7383
  %42 = load float, float* %arrayidx28, align 4, !dbg !7383
  %43 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7383
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %43, i64 0, i64 0, !dbg !7383
  store float %42, float* %arrayidx29, align 4, !dbg !7383
  %44 = load float, float* %sw_ap, align 4, !dbg !7383
  %45 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7383
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %45, i64 0, i64 1, !dbg !7383
  store float %44, float* %arrayidx30, align 4, !dbg !7383
  br label %if.end54, !dbg !7384

if.else31:                                        ; preds = %if.else
  %46 = load i32, i32* %S, align 4, !dbg !7385
  %cmp32 = icmp eq i32 %46, 3, !dbg !7387
  br i1 %cmp32, label %if.then34, label %if.else38, !dbg !7388

if.then34:                                        ; preds = %if.else31
  %47 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7389
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %47, i64 0, i64 0, !dbg !7391
  %48 = load float, float* %arrayidx35, align 4, !dbg !7391
  %fneg36 = fneg float %48, !dbg !7392
  %49 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7393
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %49, i64 0, i64 0, !dbg !7394
  store float %fneg36, float* %arrayidx37, align 4, !dbg !7395
  br label %if.end53, !dbg !7396

if.else38:                                        ; preds = %if.else31
  %50 = load i32, i32* %S, align 4, !dbg !7397
  %cmp39 = icmp eq i32 %50, 0, !dbg !7399
  br i1 %cmp39, label %if.then41, label %if.end, !dbg !7400

if.then41:                                        ; preds = %if.else38
  call void @llvm.dbg.declare(metadata float* %sw_ap42, metadata !7401, metadata !DIExpression()), !dbg !7404
  %51 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7404
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %51, i64 0, i64 0, !dbg !7404
  %52 = load float, float* %arrayidx43, align 4, !dbg !7404
  store float %52, float* %sw_ap42, align 4, !dbg !7404
  %53 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7404
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %53, i64 0, i64 1, !dbg !7404
  %54 = load float, float* %arrayidx44, align 4, !dbg !7404
  %55 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7404
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %55, i64 0, i64 0, !dbg !7404
  store float %54, float* %arrayidx45, align 4, !dbg !7404
  %56 = load float, float* %sw_ap42, align 4, !dbg !7404
  %57 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7404
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %57, i64 0, i64 1, !dbg !7404
  store float %56, float* %arrayidx46, align 4, !dbg !7404
  %58 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7405
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %58, i64 0, i64 0, !dbg !7406
  %59 = load float, float* %arrayidx47, align 4, !dbg !7406
  %fneg48 = fneg float %59, !dbg !7407
  %60 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7408
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %60, i64 0, i64 0, !dbg !7409
  store float %fneg48, float* %arrayidx49, align 4, !dbg !7410
  %61 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7411
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %61, i64 0, i64 1, !dbg !7412
  %62 = load float, float* %arrayidx50, align 4, !dbg !7412
  %fneg51 = fneg float %62, !dbg !7413
  %63 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7414
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %63, i64 0, i64 1, !dbg !7415
  store float %fneg51, float* %arrayidx52, align 4, !dbg !7416
  br label %if.end, !dbg !7417

if.end:                                           ; preds = %if.then41, %if.else38
  br label %if.end53

if.end53:                                         ; preds = %if.end, %if.then34
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then26
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then
  br label %for.inc, !dbg !7418

for.inc:                                          ; preds = %if.end55
  %64 = load i32, i32* %x, align 4, !dbg !7419
  %inc = add nsw i32 %64, 1, !dbg !7419
  store i32 %inc, i32* %x, align 4, !dbg !7419
  %65 = load [3 x float]*, [3 x float]** %out, align 8, !dbg !7420
  %incdec.ptr = getelementptr inbounds [3 x float], [3 x float]* %65, i32 1, !dbg !7420
  store [3 x float]* %incdec.ptr, [3 x float]** %out, align 8, !dbg !7420
  br label %for.cond15, !dbg !7421, !llvm.loop !7422

for.end:                                          ; preds = %for.cond15
  br label %for.inc56, !dbg !7424

for.inc56:                                        ; preds = %for.end
  %66 = load i32, i32* %y, align 4, !dbg !7425
  %inc57 = add nsw i32 %66, 1, !dbg !7425
  store i32 %inc57, i32* %y, align 4, !dbg !7425
  br label %for.cond11, !dbg !7426, !llvm.loop !7427

for.end58:                                        ; preds = %for.cond11
  br label %for.inc59, !dbg !7429

for.inc59:                                        ; preds = %for.end58
  %67 = load i32, i32* %S, align 4, !dbg !7430
  %inc60 = add nsw i32 %67, 1, !dbg !7430
  store i32 %inc60, i32* %S, align 4, !dbg !7430
  br label %for.cond, !dbg !7431, !llvm.loop !7432

for.end61:                                        ; preds = %for.cond
  %68 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7434
  %69 = load %struct.MDisps*, %struct.MDisps** %mdisp.addr, align 8, !dbg !7435
  %disps62 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %69, i32 0, i32 2, !dbg !7436
  %70 = load [3 x float]*, [3 x float]** %disps62, align 8, !dbg !7436
  %71 = bitcast [3 x float]* %70 to i8*, !dbg !7435
  call void %68(i8* %71), !dbg !7434
  %72 = load i32, i32* %newtotdisp, align 4, !dbg !7437
  %73 = load %struct.MDisps*, %struct.MDisps** %mdisp.addr, align 8, !dbg !7438
  %totdisp63 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %73, i32 0, i32 0, !dbg !7439
  store i32 %72, i32* %totdisp63, align 8, !dbg !7440
  %74 = load i32, i32* %newlvl, align 4, !dbg !7441
  %75 = load %struct.MDisps*, %struct.MDisps** %mdisp.addr, align 8, !dbg !7442
  %level = getelementptr inbounds %struct.MDisps, %struct.MDisps* %75, i32 0, i32 1, !dbg !7443
  store i32 %74, i32* %level, align 4, !dbg !7444
  %76 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !7445
  %77 = load %struct.MDisps*, %struct.MDisps** %mdisp.addr, align 8, !dbg !7446
  %disps64 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %77, i32 0, i32 2, !dbg !7447
  store [3 x float]* %76, [3 x float]** %disps64, align 8, !dbg !7448
  ret void, !dbg !7449
}

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_free(%struct.Multires* %mr) #0 !dbg !7450 {
entry:
  %mr.addr = alloca %struct.Multires*, align 8
  %lvl = alloca %struct.MultiresLevel*, align 8
  store %struct.Multires* %mr, %struct.Multires** %mr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Multires** %mr.addr, metadata !7455, metadata !DIExpression()), !dbg !7456
  %0 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7457
  %tobool = icmp ne %struct.Multires* %0, null, !dbg !7457
  br i1 %tobool, label %if.then, label %if.end13, !dbg !7459

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl, metadata !7460, metadata !DIExpression()), !dbg !7505
  %1 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7506
  %levels = getelementptr inbounds %struct.Multires, %struct.Multires* %1, i32 0, i32 0, !dbg !7507
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %levels, i32 0, i32 0, !dbg !7508
  %2 = load i8*, i8** %first, align 8, !dbg !7508
  %3 = bitcast i8* %2 to %struct.MultiresLevel*, !dbg !7506
  store %struct.MultiresLevel* %3, %struct.MultiresLevel** %lvl, align 8, !dbg !7505
  %4 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7509
  %tobool1 = icmp ne %struct.MultiresLevel* %4, null, !dbg !7509
  br i1 %tobool1, label %if.then2, label %if.end10, !dbg !7511

if.then2:                                         ; preds = %if.then
  %5 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7512
  %vdata = getelementptr inbounds %struct.Multires, %struct.Multires* %5, i32 0, i32 10, !dbg !7514
  %6 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7515
  %totvert = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %6, i32 0, i32 5, !dbg !7516
  %7 = load i32, i32* %totvert, align 8, !dbg !7516
  call void @CustomData_free(%struct.CustomData* %vdata, i32 %7), !dbg !7517
  %8 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7518
  %fdata = getelementptr inbounds %struct.Multires, %struct.Multires* %8, i32 0, i32 11, !dbg !7519
  %9 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7520
  %totface = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %9, i32 0, i32 6, !dbg !7521
  %10 = load i32, i32* %totface, align 4, !dbg !7521
  call void @CustomData_free(%struct.CustomData* %fdata, i32 %10), !dbg !7522
  %11 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7523
  %edge_flags = getelementptr inbounds %struct.Multires, %struct.Multires* %11, i32 0, i32 12, !dbg !7525
  %12 = load i16*, i16** %edge_flags, align 8, !dbg !7525
  %tobool3 = icmp ne i16* %12, null, !dbg !7523
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !7526

if.then4:                                         ; preds = %if.then2
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7527
  %14 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7528
  %edge_flags5 = getelementptr inbounds %struct.Multires, %struct.Multires* %14, i32 0, i32 12, !dbg !7529
  %15 = load i16*, i16** %edge_flags5, align 8, !dbg !7529
  %16 = bitcast i16* %15 to i8*, !dbg !7528
  call void %13(i8* %16), !dbg !7527
  br label %if.end, !dbg !7527

if.end:                                           ; preds = %if.then4, %if.then2
  %17 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7530
  %edge_creases = getelementptr inbounds %struct.Multires, %struct.Multires* %17, i32 0, i32 13, !dbg !7532
  %18 = load i8*, i8** %edge_creases, align 8, !dbg !7532
  %tobool6 = icmp ne i8* %18, null, !dbg !7530
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !7533

if.then7:                                         ; preds = %if.end
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7534
  %20 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7535
  %edge_creases8 = getelementptr inbounds %struct.Multires, %struct.Multires* %20, i32 0, i32 13, !dbg !7536
  %21 = load i8*, i8** %edge_creases8, align 8, !dbg !7536
  call void %19(i8* %21), !dbg !7534
  br label %if.end9, !dbg !7534

if.end9:                                          ; preds = %if.then7, %if.end
  br label %if.end10, !dbg !7537

if.end10:                                         ; preds = %if.end9, %if.then
  br label %while.cond, !dbg !7538

while.cond:                                       ; preds = %while.body, %if.end10
  %22 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7539
  %tobool11 = icmp ne %struct.MultiresLevel* %22, null, !dbg !7538
  br i1 %tobool11, label %while.body, label %while.end, !dbg !7538

while.body:                                       ; preds = %while.cond
  %23 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7540
  call void @multires_free_level(%struct.MultiresLevel* %23), !dbg !7542
  %24 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7543
  %next = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %24, i32 0, i32 0, !dbg !7544
  %25 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next, align 8, !dbg !7544
  store %struct.MultiresLevel* %25, %struct.MultiresLevel** %lvl, align 8, !dbg !7545
  br label %while.cond, !dbg !7538, !llvm.loop !7546

while.end:                                        ; preds = %while.cond
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7548
  %27 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7549
  %verts = getelementptr inbounds %struct.Multires, %struct.Multires* %27, i32 0, i32 1, !dbg !7550
  %28 = load %struct.MVert*, %struct.MVert** %verts, align 8, !dbg !7550
  %29 = bitcast %struct.MVert* %28 to i8*, !dbg !7549
  call void %26(i8* %29), !dbg !7548
  %30 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7551
  %levels12 = getelementptr inbounds %struct.Multires, %struct.Multires* %30, i32 0, i32 0, !dbg !7552
  call void @BLI_freelistN(%struct.ListBase* %levels12), !dbg !7553
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7554
  %32 = load %struct.Multires*, %struct.Multires** %mr.addr, align 8, !dbg !7555
  %33 = bitcast %struct.Multires* %32 to i8*, !dbg !7555
  call void %31(i8* %33), !dbg !7554
  br label %if.end13, !dbg !7556

if.end13:                                         ; preds = %while.end, %entry
  ret void, !dbg !7557
}

declare dso_local void @CustomData_free(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @multires_free_level(%struct.MultiresLevel* %lvl) #0 !dbg !7558 {
entry:
  %lvl.addr = alloca %struct.MultiresLevel*, align 8
  store %struct.MultiresLevel* %lvl, %struct.MultiresLevel** %lvl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  %0 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !7563
  %tobool = icmp ne %struct.MultiresLevel* %0, null, !dbg !7563
  br i1 %tobool, label %if.then, label %if.end12, !dbg !7565

if.then:                                          ; preds = %entry
  %1 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !7566
  %faces = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %1, i32 0, i32 2, !dbg !7569
  %2 = load %struct.MultiresFace*, %struct.MultiresFace** %faces, align 8, !dbg !7569
  %tobool1 = icmp ne %struct.MultiresFace* %2, null, !dbg !7566
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7570

if.then2:                                         ; preds = %if.then
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7571
  %4 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !7572
  %faces3 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %4, i32 0, i32 2, !dbg !7573
  %5 = load %struct.MultiresFace*, %struct.MultiresFace** %faces3, align 8, !dbg !7573
  %6 = bitcast %struct.MultiresFace* %5 to i8*, !dbg !7572
  call void %3(i8* %6), !dbg !7571
  br label %if.end, !dbg !7571

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !7574
  %edges = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %7, i32 0, i32 4, !dbg !7576
  %8 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges, align 8, !dbg !7576
  %tobool4 = icmp ne %struct.MultiresEdge* %8, null, !dbg !7574
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !7577

if.then5:                                         ; preds = %if.end
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7578
  %10 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !7579
  %edges6 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %10, i32 0, i32 4, !dbg !7580
  %11 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges6, align 8, !dbg !7580
  %12 = bitcast %struct.MultiresEdge* %11 to i8*, !dbg !7579
  call void %9(i8* %12), !dbg !7578
  br label %if.end7, !dbg !7578

if.end7:                                          ; preds = %if.then5, %if.end
  %13 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !7581
  %colfaces = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %13, i32 0, i32 3, !dbg !7583
  %14 = load %struct.MultiresColFace*, %struct.MultiresColFace** %colfaces, align 8, !dbg !7583
  %tobool8 = icmp ne %struct.MultiresColFace* %14, null, !dbg !7581
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !7584

if.then9:                                         ; preds = %if.end7
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7585
  %16 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !7586
  %colfaces10 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %16, i32 0, i32 3, !dbg !7587
  %17 = load %struct.MultiresColFace*, %struct.MultiresColFace** %colfaces10, align 8, !dbg !7587
  %18 = bitcast %struct.MultiresColFace* %17 to i8*, !dbg !7586
  call void %15(i8* %18), !dbg !7585
  br label %if.end11, !dbg !7585

if.end11:                                         ; preds = %if.then9, %if.end7
  br label %if.end12, !dbg !7588

if.end12:                                         ; preds = %if.end11, %entry
  ret void, !dbg !7589
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_load_old(%struct.Object* %ob, %struct.Mesh* %me) #0 !dbg !7590 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %lvl = alloca %struct.MultiresLevel*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %orig = alloca %struct.DerivedMesh*, align 8
  %l = alloca %struct.CustomDataLayer*, align 8
  %i = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7593, metadata !DIExpression()), !dbg !7594
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !7595, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl, metadata !7597, metadata !DIExpression()), !dbg !7598
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !7599, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !7601, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orig, metadata !7605, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %l, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7609, metadata !DIExpression()), !dbg !7610
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7611
  %mr = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 48, !dbg !7612
  %1 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !7612
  %levels = getelementptr inbounds %struct.Multires, %struct.Multires* %1, i32 0, i32 0, !dbg !7613
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %levels, i32 0, i32 0, !dbg !7614
  %2 = load i8*, i8** %first, align 8, !dbg !7614
  %3 = bitcast i8* %2 to %struct.MultiresLevel*, !dbg !7611
  store %struct.MultiresLevel* %3, %struct.MultiresLevel** %lvl, align 8, !dbg !7615
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7616
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 21, !dbg !7617
  %5 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7618
  %totvert = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %5, i32 0, i32 5, !dbg !7619
  %6 = load i32, i32* %totvert, align 8, !dbg !7619
  call void @CustomData_free_layers(%struct.CustomData* %vdata, i32 0, i32 %6), !dbg !7620
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7621
  %edata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 22, !dbg !7622
  %8 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7623
  %totedge = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %8, i32 0, i32 7, !dbg !7624
  %9 = load i32, i32* %totedge, align 8, !dbg !7624
  call void @CustomData_free_layers(%struct.CustomData* %edata, i32 3, i32 %9), !dbg !7625
  %10 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7626
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %10, i32 0, i32 23, !dbg !7627
  %11 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7628
  %totface = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %11, i32 0, i32 6, !dbg !7629
  %12 = load i32, i32* %totface, align 4, !dbg !7629
  call void @CustomData_free_layers(%struct.CustomData* %fdata, i32 4, i32 %12), !dbg !7630
  %13 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7631
  %totvert1 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %13, i32 0, i32 5, !dbg !7632
  %14 = load i32, i32* %totvert1, align 8, !dbg !7632
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7633
  %totvert2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 26, !dbg !7634
  store i32 %14, i32* %totvert2, align 8, !dbg !7635
  %16 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7636
  %totedge3 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %16, i32 0, i32 7, !dbg !7637
  %17 = load i32, i32* %totedge3, align 8, !dbg !7637
  %18 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7638
  %totedge4 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 27, !dbg !7639
  store i32 %17, i32* %totedge4, align 4, !dbg !7640
  %19 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7641
  %totface5 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %19, i32 0, i32 6, !dbg !7642
  %20 = load i32, i32* %totface5, align 4, !dbg !7642
  %21 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7643
  %totface6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 28, !dbg !7644
  store i32 %20, i32* %totface6, align 8, !dbg !7645
  %22 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7646
  %vdata7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %22, i32 0, i32 21, !dbg !7647
  %23 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7648
  %totvert8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %23, i32 0, i32 26, !dbg !7649
  %24 = load i32, i32* %totvert8, align 8, !dbg !7649
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %vdata7, i32 0, i32 1, i8* null, i32 %24), !dbg !7650
  %25 = bitcast i8* %call to %struct.MVert*, !dbg !7650
  %26 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7651
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %26, i32 0, i32 15, !dbg !7652
  store %struct.MVert* %25, %struct.MVert** %mvert, align 8, !dbg !7653
  %27 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7654
  %edata9 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 22, !dbg !7655
  %28 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7656
  %totedge10 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 27, !dbg !7657
  %29 = load i32, i32* %totedge10, align 4, !dbg !7657
  %call11 = call i8* @CustomData_add_layer(%struct.CustomData* %edata9, i32 3, i32 1, i8* null, i32 %29), !dbg !7658
  %30 = bitcast i8* %call11 to %struct.MEdge*, !dbg !7658
  %31 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7659
  %medge = getelementptr inbounds %struct.Mesh, %struct.Mesh* %31, i32 0, i32 16, !dbg !7660
  store %struct.MEdge* %30, %struct.MEdge** %medge, align 8, !dbg !7661
  %32 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7662
  %fdata12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %32, i32 0, i32 23, !dbg !7663
  %33 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7664
  %totface13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 28, !dbg !7665
  %34 = load i32, i32* %totface13, align 8, !dbg !7665
  %call14 = call i8* @CustomData_add_layer(%struct.CustomData* %fdata12, i32 4, i32 1, i8* null, i32 %34), !dbg !7666
  %35 = bitcast i8* %call14 to %struct.MFace*, !dbg !7666
  %36 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7667
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %36, i32 0, i32 12, !dbg !7668
  store %struct.MFace* %35, %struct.MFace** %mface, align 8, !dbg !7669
  %37 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7670
  %mvert15 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 15, !dbg !7671
  %38 = load %struct.MVert*, %struct.MVert** %mvert15, align 8, !dbg !7671
  %39 = bitcast %struct.MVert* %38 to i8*, !dbg !7672
  %40 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7673
  %mr16 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %40, i32 0, i32 48, !dbg !7674
  %41 = load %struct.Multires*, %struct.Multires** %mr16, align 8, !dbg !7674
  %verts = getelementptr inbounds %struct.Multires, %struct.Multires* %41, i32 0, i32 1, !dbg !7675
  %42 = load %struct.MVert*, %struct.MVert** %verts, align 8, !dbg !7675
  %43 = bitcast %struct.MVert* %42 to i8*, !dbg !7672
  %44 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7676
  %totvert17 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %44, i32 0, i32 26, !dbg !7677
  %45 = load i32, i32* %totvert17, align 8, !dbg !7677
  %conv = sext i32 %45 to i64, !dbg !7676
  %mul = mul i64 20, %conv, !dbg !7678
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %43, i64 %mul, i1 false), !dbg !7672
  store i32 0, i32* %i, align 4, !dbg !7679
  br label %for.cond, !dbg !7681

for.cond:                                         ; preds = %for.inc, %entry
  %46 = load i32, i32* %i, align 4, !dbg !7682
  %47 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7684
  %totedge18 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %47, i32 0, i32 27, !dbg !7685
  %48 = load i32, i32* %totedge18, align 4, !dbg !7685
  %cmp = icmp slt i32 %46, %48, !dbg !7686
  br i1 %cmp, label %for.body, label %for.end, !dbg !7687

for.body:                                         ; preds = %for.cond
  %49 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7688
  %edges = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %49, i32 0, i32 4, !dbg !7690
  %50 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges, align 8, !dbg !7690
  %51 = load i32, i32* %i, align 4, !dbg !7691
  %idxprom = sext i32 %51 to i64, !dbg !7688
  %arrayidx = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %50, i64 %idxprom, !dbg !7688
  %v = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %arrayidx, i32 0, i32 0, !dbg !7692
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %v, i64 0, i64 0, !dbg !7688
  %52 = load i32, i32* %arrayidx20, align 4, !dbg !7688
  %53 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7693
  %medge21 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %53, i32 0, i32 16, !dbg !7694
  %54 = load %struct.MEdge*, %struct.MEdge** %medge21, align 8, !dbg !7694
  %55 = load i32, i32* %i, align 4, !dbg !7695
  %idxprom22 = sext i32 %55 to i64, !dbg !7693
  %arrayidx23 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %54, i64 %idxprom22, !dbg !7693
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx23, i32 0, i32 0, !dbg !7696
  store i32 %52, i32* %v1, align 4, !dbg !7697
  %56 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7698
  %edges24 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %56, i32 0, i32 4, !dbg !7699
  %57 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges24, align 8, !dbg !7699
  %58 = load i32, i32* %i, align 4, !dbg !7700
  %idxprom25 = sext i32 %58 to i64, !dbg !7698
  %arrayidx26 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %57, i64 %idxprom25, !dbg !7698
  %v27 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %arrayidx26, i32 0, i32 0, !dbg !7701
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %v27, i64 0, i64 1, !dbg !7698
  %59 = load i32, i32* %arrayidx28, align 4, !dbg !7698
  %60 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7702
  %medge29 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %60, i32 0, i32 16, !dbg !7703
  %61 = load %struct.MEdge*, %struct.MEdge** %medge29, align 8, !dbg !7703
  %62 = load i32, i32* %i, align 4, !dbg !7704
  %idxprom30 = sext i32 %62 to i64, !dbg !7702
  %arrayidx31 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %61, i64 %idxprom30, !dbg !7702
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx31, i32 0, i32 1, !dbg !7705
  store i32 %59, i32* %v2, align 4, !dbg !7706
  br label %for.inc, !dbg !7707

for.inc:                                          ; preds = %for.body
  %63 = load i32, i32* %i, align 4, !dbg !7708
  %inc = add nsw i32 %63, 1, !dbg !7708
  store i32 %inc, i32* %i, align 4, !dbg !7708
  br label %for.cond, !dbg !7709, !llvm.loop !7710

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7712
  br label %for.cond32, !dbg !7714

for.cond32:                                       ; preds = %for.inc78, %for.end
  %64 = load i32, i32* %i, align 4, !dbg !7715
  %65 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7717
  %totface33 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %65, i32 0, i32 28, !dbg !7718
  %66 = load i32, i32* %totface33, align 8, !dbg !7718
  %cmp34 = icmp slt i32 %64, %66, !dbg !7719
  br i1 %cmp34, label %for.body36, label %for.end80, !dbg !7720

for.body36:                                       ; preds = %for.cond32
  %67 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7721
  %faces = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %67, i32 0, i32 2, !dbg !7723
  %68 = load %struct.MultiresFace*, %struct.MultiresFace** %faces, align 8, !dbg !7723
  %69 = load i32, i32* %i, align 4, !dbg !7724
  %idxprom37 = sext i32 %69 to i64, !dbg !7721
  %arrayidx38 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %68, i64 %idxprom37, !dbg !7721
  %v39 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx38, i32 0, i32 0, !dbg !7725
  %arrayidx40 = getelementptr inbounds [4 x i32], [4 x i32]* %v39, i64 0, i64 0, !dbg !7721
  %70 = load i32, i32* %arrayidx40, align 4, !dbg !7721
  %71 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7726
  %mface41 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %71, i32 0, i32 12, !dbg !7727
  %72 = load %struct.MFace*, %struct.MFace** %mface41, align 8, !dbg !7727
  %73 = load i32, i32* %i, align 4, !dbg !7728
  %idxprom42 = sext i32 %73 to i64, !dbg !7726
  %arrayidx43 = getelementptr inbounds %struct.MFace, %struct.MFace* %72, i64 %idxprom42, !dbg !7726
  %v144 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx43, i32 0, i32 0, !dbg !7729
  store i32 %70, i32* %v144, align 4, !dbg !7730
  %74 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7731
  %faces45 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %74, i32 0, i32 2, !dbg !7732
  %75 = load %struct.MultiresFace*, %struct.MultiresFace** %faces45, align 8, !dbg !7732
  %76 = load i32, i32* %i, align 4, !dbg !7733
  %idxprom46 = sext i32 %76 to i64, !dbg !7731
  %arrayidx47 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %75, i64 %idxprom46, !dbg !7731
  %v48 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx47, i32 0, i32 0, !dbg !7734
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %v48, i64 0, i64 1, !dbg !7731
  %77 = load i32, i32* %arrayidx49, align 4, !dbg !7731
  %78 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7735
  %mface50 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %78, i32 0, i32 12, !dbg !7736
  %79 = load %struct.MFace*, %struct.MFace** %mface50, align 8, !dbg !7736
  %80 = load i32, i32* %i, align 4, !dbg !7737
  %idxprom51 = sext i32 %80 to i64, !dbg !7735
  %arrayidx52 = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i64 %idxprom51, !dbg !7735
  %v253 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx52, i32 0, i32 1, !dbg !7738
  store i32 %77, i32* %v253, align 4, !dbg !7739
  %81 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7740
  %faces54 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %81, i32 0, i32 2, !dbg !7741
  %82 = load %struct.MultiresFace*, %struct.MultiresFace** %faces54, align 8, !dbg !7741
  %83 = load i32, i32* %i, align 4, !dbg !7742
  %idxprom55 = sext i32 %83 to i64, !dbg !7740
  %arrayidx56 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %82, i64 %idxprom55, !dbg !7740
  %v57 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx56, i32 0, i32 0, !dbg !7743
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %v57, i64 0, i64 2, !dbg !7740
  %84 = load i32, i32* %arrayidx58, align 4, !dbg !7740
  %85 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7744
  %mface59 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %85, i32 0, i32 12, !dbg !7745
  %86 = load %struct.MFace*, %struct.MFace** %mface59, align 8, !dbg !7745
  %87 = load i32, i32* %i, align 4, !dbg !7746
  %idxprom60 = sext i32 %87 to i64, !dbg !7744
  %arrayidx61 = getelementptr inbounds %struct.MFace, %struct.MFace* %86, i64 %idxprom60, !dbg !7744
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx61, i32 0, i32 2, !dbg !7747
  store i32 %84, i32* %v3, align 4, !dbg !7748
  %88 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7749
  %faces62 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %88, i32 0, i32 2, !dbg !7750
  %89 = load %struct.MultiresFace*, %struct.MultiresFace** %faces62, align 8, !dbg !7750
  %90 = load i32, i32* %i, align 4, !dbg !7751
  %idxprom63 = sext i32 %90 to i64, !dbg !7749
  %arrayidx64 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %89, i64 %idxprom63, !dbg !7749
  %v65 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx64, i32 0, i32 0, !dbg !7752
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %v65, i64 0, i64 3, !dbg !7749
  %91 = load i32, i32* %arrayidx66, align 4, !dbg !7749
  %92 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7753
  %mface67 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %92, i32 0, i32 12, !dbg !7754
  %93 = load %struct.MFace*, %struct.MFace** %mface67, align 8, !dbg !7754
  %94 = load i32, i32* %i, align 4, !dbg !7755
  %idxprom68 = sext i32 %94 to i64, !dbg !7753
  %arrayidx69 = getelementptr inbounds %struct.MFace, %struct.MFace* %93, i64 %idxprom68, !dbg !7753
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx69, i32 0, i32 3, !dbg !7756
  store i32 %91, i32* %v4, align 4, !dbg !7757
  %95 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7758
  %faces70 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %95, i32 0, i32 2, !dbg !7759
  %96 = load %struct.MultiresFace*, %struct.MultiresFace** %faces70, align 8, !dbg !7759
  %97 = load i32, i32* %i, align 4, !dbg !7760
  %idxprom71 = sext i32 %97 to i64, !dbg !7758
  %arrayidx72 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %96, i64 %idxprom71, !dbg !7758
  %mat_nr = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx72, i32 0, i32 3, !dbg !7761
  %98 = load i8, i8* %mat_nr, align 1, !dbg !7761
  %conv73 = zext i8 %98 to i16, !dbg !7758
  %99 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7762
  %mface74 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %99, i32 0, i32 12, !dbg !7763
  %100 = load %struct.MFace*, %struct.MFace** %mface74, align 8, !dbg !7763
  %101 = load i32, i32* %i, align 4, !dbg !7764
  %idxprom75 = sext i32 %101 to i64, !dbg !7762
  %arrayidx76 = getelementptr inbounds %struct.MFace, %struct.MFace* %100, i64 %idxprom75, !dbg !7762
  %mat_nr77 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx76, i32 0, i32 4, !dbg !7765
  store i16 %conv73, i16* %mat_nr77, align 4, !dbg !7766
  br label %for.inc78, !dbg !7767

for.inc78:                                        ; preds = %for.body36
  %102 = load i32, i32* %i, align 4, !dbg !7768
  %inc79 = add nsw i32 %102, 1, !dbg !7768
  store i32 %inc79, i32* %i, align 4, !dbg !7768
  br label %for.cond32, !dbg !7769, !llvm.loop !7770

for.end80:                                        ; preds = %for.cond32
  store i32 0, i32* %i, align 4, !dbg !7772
  %103 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7774
  %mr81 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %103, i32 0, i32 48, !dbg !7775
  %104 = load %struct.Multires*, %struct.Multires** %mr81, align 8, !dbg !7775
  %vdata82 = getelementptr inbounds %struct.Multires, %struct.Multires* %104, i32 0, i32 10, !dbg !7776
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vdata82, i32 0, i32 0, !dbg !7777
  %105 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !7777
  store %struct.CustomDataLayer* %105, %struct.CustomDataLayer** %l, align 8, !dbg !7778
  br label %for.cond83, !dbg !7779

for.cond83:                                       ; preds = %for.inc92, %for.end80
  %106 = load i32, i32* %i, align 4, !dbg !7780
  %107 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7782
  %mr84 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %107, i32 0, i32 48, !dbg !7783
  %108 = load %struct.Multires*, %struct.Multires** %mr84, align 8, !dbg !7783
  %vdata85 = getelementptr inbounds %struct.Multires, %struct.Multires* %108, i32 0, i32 10, !dbg !7784
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vdata85, i32 0, i32 2, !dbg !7785
  %109 = load i32, i32* %totlayer, align 4, !dbg !7785
  %cmp86 = icmp slt i32 %106, %109, !dbg !7786
  br i1 %cmp86, label %for.body88, label %for.end94, !dbg !7787

for.body88:                                       ; preds = %for.cond83
  %110 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7788
  %vdata89 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %110, i32 0, i32 21, !dbg !7789
  %111 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l, align 8, !dbg !7790
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %111, i32 0, i32 0, !dbg !7791
  %112 = load i32, i32* %type, align 8, !dbg !7791
  %113 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l, align 8, !dbg !7792
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %113, i32 0, i32 9, !dbg !7793
  %114 = load i8*, i8** %data, align 8, !dbg !7793
  %115 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7794
  %totvert90 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %115, i32 0, i32 26, !dbg !7795
  %116 = load i32, i32* %totvert90, align 8, !dbg !7795
  %call91 = call i8* @CustomData_add_layer(%struct.CustomData* %vdata89, i32 %112, i32 3, i8* %114, i32 %116), !dbg !7796
  br label %for.inc92, !dbg !7796

for.inc92:                                        ; preds = %for.body88
  %117 = load i32, i32* %i, align 4, !dbg !7797
  %inc93 = add nsw i32 %117, 1, !dbg !7797
  store i32 %inc93, i32* %i, align 4, !dbg !7797
  %118 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l, align 8, !dbg !7798
  %incdec.ptr = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %118, i32 1, !dbg !7798
  store %struct.CustomDataLayer* %incdec.ptr, %struct.CustomDataLayer** %l, align 8, !dbg !7798
  br label %for.cond83, !dbg !7799, !llvm.loop !7800

for.end94:                                        ; preds = %for.cond83
  store i32 0, i32* %i, align 4, !dbg !7802
  %119 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7804
  %mr95 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %119, i32 0, i32 48, !dbg !7805
  %120 = load %struct.Multires*, %struct.Multires** %mr95, align 8, !dbg !7805
  %fdata96 = getelementptr inbounds %struct.Multires, %struct.Multires* %120, i32 0, i32 11, !dbg !7806
  %layers97 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata96, i32 0, i32 0, !dbg !7807
  %121 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers97, align 8, !dbg !7807
  store %struct.CustomDataLayer* %121, %struct.CustomDataLayer** %l, align 8, !dbg !7808
  br label %for.cond98, !dbg !7809

for.cond98:                                       ; preds = %for.inc110, %for.end94
  %122 = load i32, i32* %i, align 4, !dbg !7810
  %123 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7812
  %mr99 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %123, i32 0, i32 48, !dbg !7813
  %124 = load %struct.Multires*, %struct.Multires** %mr99, align 8, !dbg !7813
  %fdata100 = getelementptr inbounds %struct.Multires, %struct.Multires* %124, i32 0, i32 11, !dbg !7814
  %totlayer101 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %fdata100, i32 0, i32 2, !dbg !7815
  %125 = load i32, i32* %totlayer101, align 4, !dbg !7815
  %cmp102 = icmp slt i32 %122, %125, !dbg !7816
  br i1 %cmp102, label %for.body104, label %for.end113, !dbg !7817

for.body104:                                      ; preds = %for.cond98
  %126 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7818
  %fdata105 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %126, i32 0, i32 23, !dbg !7819
  %127 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l, align 8, !dbg !7820
  %type106 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %127, i32 0, i32 0, !dbg !7821
  %128 = load i32, i32* %type106, align 8, !dbg !7821
  %129 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l, align 8, !dbg !7822
  %data107 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %129, i32 0, i32 9, !dbg !7823
  %130 = load i8*, i8** %data107, align 8, !dbg !7823
  %131 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7824
  %totface108 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %131, i32 0, i32 28, !dbg !7825
  %132 = load i32, i32* %totface108, align 8, !dbg !7825
  %call109 = call i8* @CustomData_add_layer(%struct.CustomData* %fdata105, i32 %128, i32 3, i8* %130, i32 %132), !dbg !7826
  br label %for.inc110, !dbg !7826

for.inc110:                                       ; preds = %for.body104
  %133 = load i32, i32* %i, align 4, !dbg !7827
  %inc111 = add nsw i32 %133, 1, !dbg !7827
  store i32 %inc111, i32* %i, align 4, !dbg !7827
  %134 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %l, align 8, !dbg !7828
  %incdec.ptr112 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %134, i32 1, !dbg !7828
  store %struct.CustomDataLayer* %incdec.ptr112, %struct.CustomDataLayer** %l, align 8, !dbg !7828
  br label %for.cond98, !dbg !7829, !llvm.loop !7830

for.end113:                                       ; preds = %for.cond98
  %135 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7832
  %mr114 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %135, i32 0, i32 48, !dbg !7833
  %136 = load %struct.Multires*, %struct.Multires** %mr114, align 8, !dbg !7833
  %vdata115 = getelementptr inbounds %struct.Multires, %struct.Multires* %136, i32 0, i32 10, !dbg !7834
  call void @CustomData_reset(%struct.CustomData* %vdata115), !dbg !7835
  %137 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7836
  %mr116 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %137, i32 0, i32 48, !dbg !7837
  %138 = load %struct.Multires*, %struct.Multires** %mr116, align 8, !dbg !7837
  %fdata117 = getelementptr inbounds %struct.Multires, %struct.Multires* %138, i32 0, i32 11, !dbg !7838
  call void @CustomData_reset(%struct.CustomData* %fdata117), !dbg !7839
  %139 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7840
  call void @multires_load_old_vcols(%struct.Mesh* %139), !dbg !7841
  %140 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7842
  call void @multires_load_old_face_flags(%struct.Mesh* %140), !dbg !7843
  %141 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7844
  call void @BKE_mesh_convert_mfaces_to_mpolys(%struct.Mesh* %141), !dbg !7845
  %142 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7846
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %142, i32 0, i32 26, !dbg !7847
  %first118 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !7848
  %143 = load i8*, i8** %first118, align 8, !dbg !7848
  %144 = bitcast i8* %143 to %struct.ModifierData*, !dbg !7846
  store %struct.ModifierData* %144, %struct.ModifierData** %md, align 8, !dbg !7849
  br label %while.cond, !dbg !7850

while.cond:                                       ; preds = %while.body, %for.end113
  %145 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7851
  %tobool = icmp ne %struct.ModifierData* %145, null, !dbg !7851
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7852

land.rhs:                                         ; preds = %while.cond
  %146 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7853
  %type119 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %146, i32 0, i32 2, !dbg !7854
  %147 = load i32, i32* %type119, align 8, !dbg !7854
  %call120 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %147), !dbg !7855
  %type121 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %call120, i32 0, i32 3, !dbg !7856
  %148 = load i32, i32* %type121, align 4, !dbg !7856
  %cmp122 = icmp eq i32 %148, 1, !dbg !7857
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %149 = phi i1 [ false, %while.cond ], [ %cmp122, %land.rhs ], !dbg !7858
  br i1 %149, label %while.body, label %while.end, !dbg !7850

while.body:                                       ; preds = %land.end
  %150 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7859
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %150, i32 0, i32 0, !dbg !7860
  %151 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !7860
  store %struct.ModifierData* %151, %struct.ModifierData** %md, align 8, !dbg !7861
  br label %while.cond, !dbg !7850, !llvm.loop !7862

while.end:                                        ; preds = %land.end
  %call124 = call %struct.ModifierData* @modifier_new(i32 29), !dbg !7863
  %152 = bitcast %struct.ModifierData* %call124 to %struct.MultiresModifierData*, !dbg !7864
  store %struct.MultiresModifierData* %152, %struct.MultiresModifierData** %mmd, align 8, !dbg !7865
  %153 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7866
  %modifiers125 = getelementptr inbounds %struct.Object, %struct.Object* %153, i32 0, i32 26, !dbg !7867
  %154 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !7868
  %155 = bitcast %struct.ModifierData* %154 to i8*, !dbg !7868
  %156 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !7869
  %157 = bitcast %struct.MultiresModifierData* %156 to i8*, !dbg !7869
  call void @BLI_insertlinkbefore(%struct.ListBase* %modifiers125, i8* %155, i8* %157), !dbg !7870
  store i32 0, i32* %i, align 4, !dbg !7871
  br label %for.cond126, !dbg !7873

for.cond126:                                      ; preds = %for.inc132, %while.end
  %158 = load i32, i32* %i, align 4, !dbg !7874
  %159 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7876
  %mr127 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %159, i32 0, i32 48, !dbg !7877
  %160 = load %struct.Multires*, %struct.Multires** %mr127, align 8, !dbg !7877
  %level_count = getelementptr inbounds %struct.Multires, %struct.Multires* %160, i32 0, i32 2, !dbg !7878
  %161 = load i8, i8* %level_count, align 8, !dbg !7878
  %conv128 = zext i8 %161 to i32, !dbg !7876
  %sub = sub nsw i32 %conv128, 1, !dbg !7879
  %cmp129 = icmp slt i32 %158, %sub, !dbg !7880
  br i1 %cmp129, label %for.body131, label %for.end134, !dbg !7881

for.body131:                                      ; preds = %for.cond126
  %162 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !7882
  %163 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7883
  call void @multiresModifier_subdivide(%struct.MultiresModifierData* %162, %struct.Object* %163, i32 1, i32 0), !dbg !7884
  br label %for.inc132, !dbg !7884

for.inc132:                                       ; preds = %for.body131
  %164 = load i32, i32* %i, align 4, !dbg !7885
  %inc133 = add nsw i32 %164, 1, !dbg !7885
  store i32 %inc133, i32* %i, align 4, !dbg !7885
  br label %for.cond126, !dbg !7886, !llvm.loop !7887

for.end134:                                       ; preds = %for.cond126
  %165 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !7889
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %165, i32 0, i32 4, !dbg !7890
  %166 = load i8, i8* %totlvl, align 1, !dbg !7890
  %167 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !7891
  %lvl135 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %167, i32 0, i32 1, !dbg !7892
  store i8 %166, i8* %lvl135, align 8, !dbg !7893
  %168 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7894
  %call136 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %168), !dbg !7895
  store %struct.DerivedMesh* %call136, %struct.DerivedMesh** %orig, align 8, !dbg !7896
  %169 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig, align 8, !dbg !7897
  %170 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !7898
  %171 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7899
  %call137 = call %struct.DerivedMesh* @multires_make_derived_from_derived(%struct.DerivedMesh* %169, %struct.MultiresModifierData* %170, %struct.Object* %171, i32 0), !dbg !7900
  store %struct.DerivedMesh* %call137, %struct.DerivedMesh** %dm, align 8, !dbg !7901
  %172 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7902
  %173 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7903
  %174 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !7904
  %totlvl138 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %174, i32 0, i32 4, !dbg !7905
  %175 = load i8, i8* %totlvl138, align 1, !dbg !7905
  %conv139 = zext i8 %175 to i32, !dbg !7904
  %add = add nsw i32 %conv139, 1, !dbg !7906
  call void @multires_load_old_dm(%struct.DerivedMesh* %172, %struct.Mesh* %173, i32 %add), !dbg !7907
  %176 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7908
  call void @multires_dm_mark_as_modified(%struct.DerivedMesh* %176, i32 1), !dbg !7909
  %177 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7910
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %177, i32 0, i32 95, !dbg !7911
  %178 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !7911
  %179 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7912
  call void %178(%struct.DerivedMesh* %179), !dbg !7910
  %180 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig, align 8, !dbg !7913
  %release140 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %180, i32 0, i32 95, !dbg !7914
  %181 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release140, align 8, !dbg !7914
  %182 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orig, align 8, !dbg !7915
  call void %181(%struct.DerivedMesh* %182), !dbg !7913
  %183 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7916
  %mr141 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %183, i32 0, i32 48, !dbg !7917
  %184 = load %struct.Multires*, %struct.Multires** %mr141, align 8, !dbg !7917
  call void @multires_free(%struct.Multires* %184), !dbg !7918
  %185 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7919
  %mr142 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %185, i32 0, i32 48, !dbg !7920
  store %struct.Multires* null, %struct.Multires** %mr142, align 8, !dbg !7921
  ret void, !dbg !7922
}

declare dso_local void @CustomData_free_layers(%struct.CustomData*, i32, i32) #2

declare dso_local void @CustomData_reset(%struct.CustomData*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @multires_load_old_vcols(%struct.Mesh* %me) #0 !dbg !7923 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %lvl = alloca %struct.MultiresLevel*, align 8
  %colface = alloca %struct.MultiresColFace*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !7924, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl, metadata !7926, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.declare(metadata %struct.MultiresColFace** %colface, metadata !7928, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !7930, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7934, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7936, metadata !DIExpression()), !dbg !7937
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7938
  %mr = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 48, !dbg !7940
  %1 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !7940
  %levels = getelementptr inbounds %struct.Multires, %struct.Multires* %1, i32 0, i32 0, !dbg !7941
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %levels, i32 0, i32 0, !dbg !7942
  %2 = load i8*, i8** %first, align 8, !dbg !7942
  %3 = bitcast i8* %2 to %struct.MultiresLevel*, !dbg !7938
  store %struct.MultiresLevel* %3, %struct.MultiresLevel** %lvl, align 8, !dbg !7943
  %tobool = icmp ne %struct.MultiresLevel* %3, null, !dbg !7943
  br i1 %tobool, label %if.end, label %if.then, !dbg !7944

if.then:                                          ; preds = %entry
  br label %for.end50, !dbg !7945

if.end:                                           ; preds = %entry
  %4 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !7946
  %colfaces = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %4, i32 0, i32 3, !dbg !7948
  %5 = load %struct.MultiresColFace*, %struct.MultiresColFace** %colfaces, align 8, !dbg !7948
  store %struct.MultiresColFace* %5, %struct.MultiresColFace** %colface, align 8, !dbg !7949
  %tobool1 = icmp ne %struct.MultiresColFace* %5, null, !dbg !7949
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !7950

if.then2:                                         ; preds = %if.end
  br label %for.end50, !dbg !7951

if.end3:                                          ; preds = %if.end
  %6 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7952
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 23, !dbg !7954
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %fdata, i32 6), !dbg !7955
  %7 = bitcast i8* %call to %struct.MCol*, !dbg !7955
  store %struct.MCol* %7, %struct.MCol** %mcol, align 8, !dbg !7956
  %tobool4 = icmp ne %struct.MCol* %7, null, !dbg !7956
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7957

if.then5:                                         ; preds = %if.end3
  br label %for.end50, !dbg !7958

if.end6:                                          ; preds = %if.end3
  store i32 0, i32* %i, align 4, !dbg !7959
  br label %for.cond, !dbg !7961

for.cond:                                         ; preds = %for.inc48, %if.end6
  %8 = load i32, i32* %i, align 4, !dbg !7962
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !7964
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 28, !dbg !7965
  %10 = load i32, i32* %totface, align 8, !dbg !7965
  %cmp = icmp slt i32 %8, %10, !dbg !7966
  br i1 %cmp, label %for.body, label %for.end50, !dbg !7967

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7968
  br label %for.cond7, !dbg !7971

for.cond7:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %j, align 4, !dbg !7972
  %cmp8 = icmp slt i32 %11, 4, !dbg !7974
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !7975

for.body9:                                        ; preds = %for.cond7
  %12 = load %struct.MultiresColFace*, %struct.MultiresColFace** %colface, align 8, !dbg !7976
  %13 = load i32, i32* %i, align 4, !dbg !7978
  %idxprom = sext i32 %13 to i64, !dbg !7976
  %arrayidx = getelementptr inbounds %struct.MultiresColFace, %struct.MultiresColFace* %12, i64 %idxprom, !dbg !7976
  %col = getelementptr inbounds %struct.MultiresColFace, %struct.MultiresColFace* %arrayidx, i32 0, i32 0, !dbg !7979
  %14 = load i32, i32* %j, align 4, !dbg !7980
  %idxprom10 = sext i32 %14 to i64, !dbg !7976
  %arrayidx11 = getelementptr inbounds [4 x %struct.MultiresCol], [4 x %struct.MultiresCol]* %col, i64 0, i64 %idxprom10, !dbg !7976
  %a = getelementptr inbounds %struct.MultiresCol, %struct.MultiresCol* %arrayidx11, i32 0, i32 0, !dbg !7981
  %15 = load float, float* %a, align 4, !dbg !7981
  %conv = fptoui float %15 to i8, !dbg !7976
  %16 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !7982
  %17 = load i32, i32* %i, align 4, !dbg !7983
  %mul = mul nsw i32 %17, 4, !dbg !7984
  %18 = load i32, i32* %j, align 4, !dbg !7985
  %add = add nsw i32 %mul, %18, !dbg !7986
  %idxprom12 = sext i32 %add to i64, !dbg !7982
  %arrayidx13 = getelementptr inbounds %struct.MCol, %struct.MCol* %16, i64 %idxprom12, !dbg !7982
  %a14 = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx13, i32 0, i32 0, !dbg !7987
  store i8 %conv, i8* %a14, align 1, !dbg !7988
  %19 = load %struct.MultiresColFace*, %struct.MultiresColFace** %colface, align 8, !dbg !7989
  %20 = load i32, i32* %i, align 4, !dbg !7990
  %idxprom15 = sext i32 %20 to i64, !dbg !7989
  %arrayidx16 = getelementptr inbounds %struct.MultiresColFace, %struct.MultiresColFace* %19, i64 %idxprom15, !dbg !7989
  %col17 = getelementptr inbounds %struct.MultiresColFace, %struct.MultiresColFace* %arrayidx16, i32 0, i32 0, !dbg !7991
  %21 = load i32, i32* %j, align 4, !dbg !7992
  %idxprom18 = sext i32 %21 to i64, !dbg !7989
  %arrayidx19 = getelementptr inbounds [4 x %struct.MultiresCol], [4 x %struct.MultiresCol]* %col17, i64 0, i64 %idxprom18, !dbg !7989
  %r = getelementptr inbounds %struct.MultiresCol, %struct.MultiresCol* %arrayidx19, i32 0, i32 1, !dbg !7993
  %22 = load float, float* %r, align 4, !dbg !7993
  %conv20 = fptoui float %22 to i8, !dbg !7989
  %23 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !7994
  %24 = load i32, i32* %i, align 4, !dbg !7995
  %mul21 = mul nsw i32 %24, 4, !dbg !7996
  %25 = load i32, i32* %j, align 4, !dbg !7997
  %add22 = add nsw i32 %mul21, %25, !dbg !7998
  %idxprom23 = sext i32 %add22 to i64, !dbg !7994
  %arrayidx24 = getelementptr inbounds %struct.MCol, %struct.MCol* %23, i64 %idxprom23, !dbg !7994
  %r25 = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx24, i32 0, i32 1, !dbg !7999
  store i8 %conv20, i8* %r25, align 1, !dbg !8000
  %26 = load %struct.MultiresColFace*, %struct.MultiresColFace** %colface, align 8, !dbg !8001
  %27 = load i32, i32* %i, align 4, !dbg !8002
  %idxprom26 = sext i32 %27 to i64, !dbg !8001
  %arrayidx27 = getelementptr inbounds %struct.MultiresColFace, %struct.MultiresColFace* %26, i64 %idxprom26, !dbg !8001
  %col28 = getelementptr inbounds %struct.MultiresColFace, %struct.MultiresColFace* %arrayidx27, i32 0, i32 0, !dbg !8003
  %28 = load i32, i32* %j, align 4, !dbg !8004
  %idxprom29 = sext i32 %28 to i64, !dbg !8001
  %arrayidx30 = getelementptr inbounds [4 x %struct.MultiresCol], [4 x %struct.MultiresCol]* %col28, i64 0, i64 %idxprom29, !dbg !8001
  %g = getelementptr inbounds %struct.MultiresCol, %struct.MultiresCol* %arrayidx30, i32 0, i32 2, !dbg !8005
  %29 = load float, float* %g, align 4, !dbg !8005
  %conv31 = fptoui float %29 to i8, !dbg !8001
  %30 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !8006
  %31 = load i32, i32* %i, align 4, !dbg !8007
  %mul32 = mul nsw i32 %31, 4, !dbg !8008
  %32 = load i32, i32* %j, align 4, !dbg !8009
  %add33 = add nsw i32 %mul32, %32, !dbg !8010
  %idxprom34 = sext i32 %add33 to i64, !dbg !8006
  %arrayidx35 = getelementptr inbounds %struct.MCol, %struct.MCol* %30, i64 %idxprom34, !dbg !8006
  %g36 = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx35, i32 0, i32 2, !dbg !8011
  store i8 %conv31, i8* %g36, align 1, !dbg !8012
  %33 = load %struct.MultiresColFace*, %struct.MultiresColFace** %colface, align 8, !dbg !8013
  %34 = load i32, i32* %i, align 4, !dbg !8014
  %idxprom37 = sext i32 %34 to i64, !dbg !8013
  %arrayidx38 = getelementptr inbounds %struct.MultiresColFace, %struct.MultiresColFace* %33, i64 %idxprom37, !dbg !8013
  %col39 = getelementptr inbounds %struct.MultiresColFace, %struct.MultiresColFace* %arrayidx38, i32 0, i32 0, !dbg !8015
  %35 = load i32, i32* %j, align 4, !dbg !8016
  %idxprom40 = sext i32 %35 to i64, !dbg !8013
  %arrayidx41 = getelementptr inbounds [4 x %struct.MultiresCol], [4 x %struct.MultiresCol]* %col39, i64 0, i64 %idxprom40, !dbg !8013
  %b = getelementptr inbounds %struct.MultiresCol, %struct.MultiresCol* %arrayidx41, i32 0, i32 3, !dbg !8017
  %36 = load float, float* %b, align 4, !dbg !8017
  %conv42 = fptoui float %36 to i8, !dbg !8013
  %37 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !8018
  %38 = load i32, i32* %i, align 4, !dbg !8019
  %mul43 = mul nsw i32 %38, 4, !dbg !8020
  %39 = load i32, i32* %j, align 4, !dbg !8021
  %add44 = add nsw i32 %mul43, %39, !dbg !8022
  %idxprom45 = sext i32 %add44 to i64, !dbg !8018
  %arrayidx46 = getelementptr inbounds %struct.MCol, %struct.MCol* %37, i64 %idxprom45, !dbg !8018
  %b47 = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx46, i32 0, i32 3, !dbg !8023
  store i8 %conv42, i8* %b47, align 1, !dbg !8024
  br label %for.inc, !dbg !8025

for.inc:                                          ; preds = %for.body9
  %40 = load i32, i32* %j, align 4, !dbg !8026
  %inc = add nsw i32 %40, 1, !dbg !8026
  store i32 %inc, i32* %j, align 4, !dbg !8026
  br label %for.cond7, !dbg !8027, !llvm.loop !8028

for.end:                                          ; preds = %for.cond7
  br label %for.inc48, !dbg !8030

for.inc48:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !8031
  %inc49 = add nsw i32 %41, 1, !dbg !8031
  store i32 %inc49, i32* %i, align 4, !dbg !8031
  br label %for.cond, !dbg !8032, !llvm.loop !8033

for.end50:                                        ; preds = %if.then, %if.then2, %if.then5, %for.cond
  ret void, !dbg !8035
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_load_old_face_flags(%struct.Mesh* %me) #0 !dbg !8036 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %lvl = alloca %struct.MultiresLevel*, align 8
  %faces = alloca %struct.MultiresFace*, align 8
  %i = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8037, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl, metadata !8039, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.declare(metadata %struct.MultiresFace** %faces, metadata !8041, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8043, metadata !DIExpression()), !dbg !8044
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8045
  %mr = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 48, !dbg !8047
  %1 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8047
  %levels = getelementptr inbounds %struct.Multires, %struct.Multires* %1, i32 0, i32 0, !dbg !8048
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %levels, i32 0, i32 0, !dbg !8049
  %2 = load i8*, i8** %first, align 8, !dbg !8049
  %3 = bitcast i8* %2 to %struct.MultiresLevel*, !dbg !8045
  store %struct.MultiresLevel* %3, %struct.MultiresLevel** %lvl, align 8, !dbg !8050
  %tobool = icmp ne %struct.MultiresLevel* %3, null, !dbg !8050
  br i1 %tobool, label %if.end, label %if.then, !dbg !8051

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !8052

if.end:                                           ; preds = %entry
  %4 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8053
  %faces1 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %4, i32 0, i32 2, !dbg !8055
  %5 = load %struct.MultiresFace*, %struct.MultiresFace** %faces1, align 8, !dbg !8055
  store %struct.MultiresFace* %5, %struct.MultiresFace** %faces, align 8, !dbg !8056
  %tobool2 = icmp ne %struct.MultiresFace* %5, null, !dbg !8056
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8057

if.then3:                                         ; preds = %if.end
  br label %for.end, !dbg !8058

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8059
  br label %for.cond, !dbg !8061

for.cond:                                         ; preds = %for.inc, %if.end4
  %6 = load i32, i32* %i, align 4, !dbg !8062
  %7 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8064
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 28, !dbg !8065
  %8 = load i32, i32* %totface, align 8, !dbg !8065
  %cmp = icmp slt i32 %6, %8, !dbg !8066
  br i1 %cmp, label %for.body, label %for.end, !dbg !8067

for.body:                                         ; preds = %for.cond
  %9 = load %struct.MultiresFace*, %struct.MultiresFace** %faces, align 8, !dbg !8068
  %10 = load i32, i32* %i, align 4, !dbg !8069
  %idxprom = sext i32 %10 to i64, !dbg !8068
  %arrayidx = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %9, i64 %idxprom, !dbg !8068
  %flag = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx, i32 0, i32 2, !dbg !8070
  %11 = load i8, i8* %flag, align 4, !dbg !8070
  %12 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8071
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 12, !dbg !8072
  %13 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8072
  %14 = load i32, i32* %i, align 4, !dbg !8073
  %idxprom5 = sext i32 %14 to i64, !dbg !8071
  %arrayidx6 = getelementptr inbounds %struct.MFace, %struct.MFace* %13, i64 %idxprom5, !dbg !8071
  %flag7 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx6, i32 0, i32 6, !dbg !8074
  store i8 %11, i8* %flag7, align 1, !dbg !8075
  br label %for.inc, !dbg !8071

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !8076
  %inc = add nsw i32 %15, 1, !dbg !8076
  store i32 %inc, i32* %i, align 4, !dbg !8076
  br label %for.cond, !dbg !8077, !llvm.loop !8078

for.end:                                          ; preds = %if.then, %if.then3, %for.cond
  ret void, !dbg !8080
}

declare dso_local void @BKE_mesh_convert_mfaces_to_mpolys(%struct.Mesh*) #2

declare dso_local %struct.ModifierData* @modifier_new(i32) #2

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @multires_load_old_dm(%struct.DerivedMesh* %dm, %struct.Mesh* %me, i32 %totlvl) #0 !dbg !8081 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %totlvl.addr = alloca i32, align 4
  %lvl = alloca %struct.MultiresLevel*, align 8
  %lvl1 = alloca %struct.MultiresLevel*, align 8
  %mr = alloca %struct.Multires*, align 8
  %vsrc = alloca %struct.MVert*, align 8
  %vdst = alloca %struct.MVert*, align 8
  %src = alloca i32, align 4
  %dst = alloca i32, align 4
  %st = alloca i32, align 4
  %extedgelen = alloca i32, align 4
  %vvmap = alloca i32*, align 8
  %crossedgelen = alloca i32, align 4
  %s = alloca i32, align 4
  %x = alloca i32, align 4
  %tottri = alloca i32, align 4
  %totquad = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %totvert = alloca i32, align 4
  %ldst = alloca i32, align 4
  %lsrc = alloca i32, align 4
  %base = alloca i32, align 4
  %skip = alloca i32, align 4
  %st41 = alloca i32, align 4
  %sides = alloca i32, align 4
  %fmap = alloca %struct.ListBase**, align 8
  %emap = alloca %struct.ListBase**, align 8
  %fmem = alloca %struct.IndexNode**, align 8
  %emem = alloca %struct.IndexNode**, align 8
  %sides106 = alloca i32, align 4
  %base123 = alloca i32, align 4
  %skip129 = alloca i32, align 4
  %st135 = alloca i32, align 4
  %st2 = alloca i32, align 4
  %lsrc144 = alloca i32, align 4
  %sides246 = alloca i32, align 4
  %ldst254 = alloca i32, align 4
  %st2263 = alloca i32, align 4
  %st3 = alloca i32, align 4
  %st4 = alloca i32, align 4
  %mid = alloca i32, align 4
  %cv = alloca i32, align 4
  %nv = alloca i32, align 4
  %pv = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8084, metadata !DIExpression()), !dbg !8085
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !8086, metadata !DIExpression()), !dbg !8087
  store i32 %totlvl, i32* %totlvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totlvl.addr, metadata !8088, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl, metadata !8090, metadata !DIExpression()), !dbg !8091
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl1, metadata !8092, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.declare(metadata %struct.Multires** %mr, metadata !8094, metadata !DIExpression()), !dbg !8095
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !8096
  %mr1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 48, !dbg !8097
  %1 = load %struct.Multires*, %struct.Multires** %mr1, align 8, !dbg !8097
  store %struct.Multires* %1, %struct.Multires** %mr, align 8, !dbg !8095
  call void @llvm.dbg.declare(metadata %struct.MVert** %vsrc, metadata !8098, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.declare(metadata %struct.MVert** %vdst, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.declare(metadata i32* %src, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata i32* %dst, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata i32* %st, metadata !8106, metadata !DIExpression()), !dbg !8107
  %2 = load i32, i32* %totlvl.addr, align 4, !dbg !8108
  %sub = sub nsw i32 %2, 1, !dbg !8109
  %idxprom = sext i32 %sub to i64, !dbg !8110
  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom, !dbg !8110
  %3 = load i32, i32* %arrayidx, align 4, !dbg !8110
  %sub2 = sub nsw i32 %3, 1, !dbg !8111
  store i32 %sub2, i32* %st, align 4, !dbg !8107
  call void @llvm.dbg.declare(metadata i32* %extedgelen, metadata !8112, metadata !DIExpression()), !dbg !8113
  %4 = load i32, i32* %totlvl.addr, align 4, !dbg !8114
  %idxprom3 = sext i32 %4 to i64, !dbg !8115
  %arrayidx4 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom3, !dbg !8115
  %5 = load i32, i32* %arrayidx4, align 4, !dbg !8115
  %sub5 = sub nsw i32 %5, 2, !dbg !8116
  store i32 %sub5, i32* %extedgelen, align 4, !dbg !8113
  call void @llvm.dbg.declare(metadata i32** %vvmap, metadata !8117, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.declare(metadata i32* %crossedgelen, metadata !8119, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.declare(metadata i32* %s, metadata !8121, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !8125, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.declare(metadata i32* %totquad, metadata !8127, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8129, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8131, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !8133, metadata !DIExpression()), !dbg !8134
  store i32 0, i32* %src, align 4, !dbg !8135
  %6 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8136
  %verts = getelementptr inbounds %struct.Multires, %struct.Multires* %6, i32 0, i32 1, !dbg !8137
  %7 = load %struct.MVert*, %struct.MVert** %verts, align 8, !dbg !8137
  store %struct.MVert* %7, %struct.MVert** %vsrc, align 8, !dbg !8138
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8139
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 31, !dbg !8140
  %9 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !8140
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8141
  %call = call %struct.MVert* %9(%struct.DerivedMesh* %10), !dbg !8139
  store %struct.MVert* %call, %struct.MVert** %vdst, align 8, !dbg !8142
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8143
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 23, !dbg !8144
  %12 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !8144
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8145
  %call6 = call i32 %12(%struct.DerivedMesh* %13), !dbg !8143
  store i32 %call6, i32* %totvert, align 4, !dbg !8146
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8147
  %15 = load i32, i32* %totvert, align 4, !dbg !8148
  %conv = zext i32 %15 to i64, !dbg !8148
  %mul = mul i64 4, %conv, !dbg !8149
  %call7 = call i8* %14(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)), !dbg !8147
  %16 = bitcast i8* %call7 to i32*, !dbg !8147
  store i32* %16, i32** %vvmap, align 8, !dbg !8150
  %17 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8151
  %levels = getelementptr inbounds %struct.Multires, %struct.Multires* %17, i32 0, i32 0, !dbg !8152
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %levels, i32 0, i32 0, !dbg !8153
  %18 = load i8*, i8** %first, align 8, !dbg !8153
  %19 = bitcast i8* %18 to %struct.MultiresLevel*, !dbg !8151
  store %struct.MultiresLevel* %19, %struct.MultiresLevel** %lvl1, align 8, !dbg !8154
  store i32 0, i32* %i, align 4, !dbg !8155
  br label %for.cond, !dbg !8157

for.cond:                                         ; preds = %for.inc, %entry
  %20 = load i32, i32* %i, align 4, !dbg !8158
  %21 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8160
  %totvert8 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %21, i32 0, i32 5, !dbg !8161
  %22 = load i32, i32* %totvert8, align 8, !dbg !8161
  %cmp = icmp ult i32 %20, %22, !dbg !8162
  br i1 %cmp, label %for.body, label %for.end, !dbg !8163

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %src, align 4, !dbg !8164
  %24 = load i32*, i32** %vvmap, align 8, !dbg !8166
  %25 = load i32, i32* %totvert, align 4, !dbg !8167
  %26 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8168
  %totvert10 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %26, i32 0, i32 5, !dbg !8169
  %27 = load i32, i32* %totvert10, align 8, !dbg !8169
  %sub11 = sub i32 %25, %27, !dbg !8170
  %28 = load i32, i32* %i, align 4, !dbg !8171
  %add = add i32 %sub11, %28, !dbg !8172
  %idxprom12 = zext i32 %add to i64, !dbg !8166
  %arrayidx13 = getelementptr inbounds i32, i32* %24, i64 %idxprom12, !dbg !8166
  store i32 %23, i32* %arrayidx13, align 4, !dbg !8173
  %29 = load i32, i32* %src, align 4, !dbg !8174
  %inc = add i32 %29, 1, !dbg !8174
  store i32 %inc, i32* %src, align 4, !dbg !8174
  br label %for.inc, !dbg !8175

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !8176
  %inc14 = add i32 %30, 1, !dbg !8176
  store i32 %inc14, i32* %i, align 4, !dbg !8176
  br label %for.cond, !dbg !8177, !llvm.loop !8178

for.end:                                          ; preds = %for.cond
  %31 = load i32, i32* %totvert, align 4, !dbg !8180
  %32 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8181
  %totvert15 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %32, i32 0, i32 5, !dbg !8182
  %33 = load i32, i32* %totvert15, align 8, !dbg !8182
  %sub16 = sub i32 %31, %33, !dbg !8183
  %34 = load i32, i32* %extedgelen, align 4, !dbg !8184
  %35 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8185
  %totedge = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %35, i32 0, i32 7, !dbg !8186
  %36 = load i32, i32* %totedge, align 8, !dbg !8186
  %mul17 = mul i32 %34, %36, !dbg !8187
  %sub18 = sub i32 %sub16, %mul17, !dbg !8188
  store i32 %sub18, i32* %dst, align 4, !dbg !8189
  store i32 0, i32* %i, align 4, !dbg !8190
  br label %for.cond19, !dbg !8192

for.cond19:                                       ; preds = %for.inc69, %for.end
  %37 = load i32, i32* %i, align 4, !dbg !8193
  %38 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8195
  %totedge20 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %38, i32 0, i32 7, !dbg !8196
  %39 = load i32, i32* %totedge20, align 8, !dbg !8196
  %cmp21 = icmp ult i32 %37, %39, !dbg !8197
  br i1 %cmp21, label %for.body23, label %for.end71, !dbg !8198

for.body23:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata i32* %ldst, metadata !8199, metadata !DIExpression()), !dbg !8201
  %40 = load i32, i32* %dst, align 4, !dbg !8202
  %41 = load i32, i32* %extedgelen, align 4, !dbg !8203
  %42 = load i32, i32* %i, align 4, !dbg !8204
  %mul24 = mul i32 %41, %42, !dbg !8205
  %add25 = add i32 %40, %mul24, !dbg !8206
  store i32 %add25, i32* %ldst, align 4, !dbg !8201
  call void @llvm.dbg.declare(metadata i32* %lsrc, metadata !8207, metadata !DIExpression()), !dbg !8208
  %43 = load i32, i32* %src, align 4, !dbg !8209
  store i32 %43, i32* %lsrc, align 4, !dbg !8208
  %44 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8210
  %next = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %44, i32 0, i32 0, !dbg !8211
  %45 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next, align 8, !dbg !8211
  store %struct.MultiresLevel* %45, %struct.MultiresLevel** %lvl, align 8, !dbg !8212
  store i32 2, i32* %j, align 4, !dbg !8213
  br label %for.cond26, !dbg !8215

for.cond26:                                       ; preds = %for.inc66, %for.body23
  %46 = load i32, i32* %j, align 4, !dbg !8216
  %47 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8218
  %level_count = getelementptr inbounds %struct.Multires, %struct.Multires* %47, i32 0, i32 2, !dbg !8219
  %48 = load i8, i8* %level_count, align 8, !dbg !8219
  %conv27 = zext i8 %48 to i32, !dbg !8218
  %cmp28 = icmp ule i32 %46, %conv27, !dbg !8220
  br i1 %cmp28, label %for.body30, label %for.end68, !dbg !8221

for.body30:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata i32* %base, metadata !8222, metadata !DIExpression()), !dbg !8224
  %49 = load i32, i32* %totlvl.addr, align 4, !dbg !8225
  %50 = load i32, i32* %j, align 4, !dbg !8226
  %sub31 = sub i32 %49, %50, !dbg !8227
  %add32 = add i32 %sub31, 1, !dbg !8228
  %idxprom33 = zext i32 %add32 to i64, !dbg !8229
  %arrayidx34 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom33, !dbg !8229
  %51 = load i32, i32* %arrayidx34, align 4, !dbg !8229
  %sub35 = sub nsw i32 %51, 2, !dbg !8230
  store i32 %sub35, i32* %base, align 4, !dbg !8224
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !8231, metadata !DIExpression()), !dbg !8232
  %52 = load i32, i32* %totlvl.addr, align 4, !dbg !8233
  %53 = load i32, i32* %j, align 4, !dbg !8234
  %sub36 = sub i32 %52, %53, !dbg !8235
  %add37 = add i32 %sub36, 2, !dbg !8236
  %idxprom38 = zext i32 %add37 to i64, !dbg !8237
  %arrayidx39 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom38, !dbg !8237
  %54 = load i32, i32* %arrayidx39, align 4, !dbg !8237
  %sub40 = sub nsw i32 %54, 1, !dbg !8238
  store i32 %sub40, i32* %skip, align 4, !dbg !8232
  call void @llvm.dbg.declare(metadata i32* %st41, metadata !8239, metadata !DIExpression()), !dbg !8240
  %55 = load i32, i32* %j, align 4, !dbg !8241
  %sub42 = sub i32 %55, 1, !dbg !8242
  %idxprom43 = zext i32 %sub42 to i64, !dbg !8243
  %arrayidx44 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom43, !dbg !8243
  %56 = load i32, i32* %arrayidx44, align 4, !dbg !8243
  %sub45 = sub nsw i32 %56, 1, !dbg !8244
  store i32 %sub45, i32* %st41, align 4, !dbg !8240
  store i32 0, i32* %x, align 4, !dbg !8245
  br label %for.cond46, !dbg !8247

for.cond46:                                       ; preds = %for.inc58, %for.body30
  %57 = load i32, i32* %x, align 4, !dbg !8248
  %58 = load i32, i32* %st41, align 4, !dbg !8250
  %cmp47 = icmp slt i32 %57, %58, !dbg !8251
  br i1 %cmp47, label %for.body49, label %for.end60, !dbg !8252

for.body49:                                       ; preds = %for.cond46
  %59 = load i32, i32* %lsrc, align 4, !dbg !8253
  %60 = load i32, i32* %st41, align 4, !dbg !8254
  %61 = load i32, i32* %i, align 4, !dbg !8255
  %mul50 = mul i32 %60, %61, !dbg !8256
  %add51 = add i32 %59, %mul50, !dbg !8257
  %62 = load i32, i32* %x, align 4, !dbg !8258
  %add52 = add i32 %add51, %62, !dbg !8259
  %63 = load i32*, i32** %vvmap, align 8, !dbg !8260
  %64 = load i32, i32* %ldst, align 4, !dbg !8261
  %65 = load i32, i32* %base, align 4, !dbg !8262
  %add53 = add nsw i32 %64, %65, !dbg !8263
  %66 = load i32, i32* %x, align 4, !dbg !8264
  %67 = load i32, i32* %skip, align 4, !dbg !8265
  %mul54 = mul nsw i32 %66, %67, !dbg !8266
  %add55 = add nsw i32 %add53, %mul54, !dbg !8267
  %idxprom56 = sext i32 %add55 to i64, !dbg !8260
  %arrayidx57 = getelementptr inbounds i32, i32* %63, i64 %idxprom56, !dbg !8260
  store i32 %add52, i32* %arrayidx57, align 4, !dbg !8268
  br label %for.inc58, !dbg !8260

for.inc58:                                        ; preds = %for.body49
  %68 = load i32, i32* %x, align 4, !dbg !8269
  %inc59 = add nsw i32 %68, 1, !dbg !8269
  store i32 %inc59, i32* %x, align 4, !dbg !8269
  br label %for.cond46, !dbg !8270, !llvm.loop !8271

for.end60:                                        ; preds = %for.cond46
  %69 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8273
  %totvert61 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %69, i32 0, i32 5, !dbg !8274
  %70 = load i32, i32* %totvert61, align 8, !dbg !8274
  %71 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8275
  %prev = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %71, i32 0, i32 1, !dbg !8276
  %72 = load %struct.MultiresLevel*, %struct.MultiresLevel** %prev, align 8, !dbg !8276
  %totvert62 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %72, i32 0, i32 5, !dbg !8277
  %73 = load i32, i32* %totvert62, align 8, !dbg !8277
  %sub63 = sub i32 %70, %73, !dbg !8278
  %74 = load i32, i32* %lsrc, align 4, !dbg !8279
  %add64 = add i32 %74, %sub63, !dbg !8279
  store i32 %add64, i32* %lsrc, align 4, !dbg !8279
  %75 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8280
  %next65 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %75, i32 0, i32 0, !dbg !8281
  %76 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next65, align 8, !dbg !8281
  store %struct.MultiresLevel* %76, %struct.MultiresLevel** %lvl, align 8, !dbg !8282
  br label %for.inc66, !dbg !8283

for.inc66:                                        ; preds = %for.end60
  %77 = load i32, i32* %j, align 4, !dbg !8284
  %inc67 = add i32 %77, 1, !dbg !8284
  store i32 %inc67, i32* %j, align 4, !dbg !8284
  br label %for.cond26, !dbg !8285, !llvm.loop !8286

for.end68:                                        ; preds = %for.cond26
  br label %for.inc69, !dbg !8288

for.inc69:                                        ; preds = %for.end68
  %78 = load i32, i32* %i, align 4, !dbg !8289
  %inc70 = add i32 %78, 1, !dbg !8289
  store i32 %inc70, i32* %i, align 4, !dbg !8289
  br label %for.cond19, !dbg !8290, !llvm.loop !8291

for.end71:                                        ; preds = %for.cond19
  store i32 0, i32* %dst, align 4, !dbg !8293
  store i32 0, i32* %i, align 4, !dbg !8294
  br label %for.cond72, !dbg !8296

for.cond72:                                       ; preds = %for.inc89, %for.end71
  %79 = load i32, i32* %i, align 4, !dbg !8297
  %80 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8299
  %totface = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %80, i32 0, i32 6, !dbg !8300
  %81 = load i32, i32* %totface, align 4, !dbg !8300
  %cmp73 = icmp ult i32 %79, %81, !dbg !8301
  br i1 %cmp73, label %for.body75, label %for.end91, !dbg !8302

for.body75:                                       ; preds = %for.cond72
  call void @llvm.dbg.declare(metadata i32* %sides, metadata !8303, metadata !DIExpression()), !dbg !8305
  %82 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8306
  %faces = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %82, i32 0, i32 2, !dbg !8307
  %83 = load %struct.MultiresFace*, %struct.MultiresFace** %faces, align 8, !dbg !8307
  %84 = load i32, i32* %i, align 4, !dbg !8308
  %idxprom76 = zext i32 %84 to i64, !dbg !8306
  %arrayidx77 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %83, i64 %idxprom76, !dbg !8306
  %v = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx77, i32 0, i32 0, !dbg !8309
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %v, i64 0, i64 3, !dbg !8306
  %85 = load i32, i32* %arrayidx78, align 4, !dbg !8306
  %tobool = icmp ne i32 %85, 0, !dbg !8306
  %86 = zext i1 %tobool to i64, !dbg !8306
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !8306
  store i32 %cond, i32* %sides, align 4, !dbg !8305
  %87 = load i32, i32* %src, align 4, !dbg !8310
  %88 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8311
  %totedge79 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %88, i32 0, i32 7, !dbg !8312
  %89 = load i32, i32* %totedge79, align 8, !dbg !8312
  %add80 = add i32 %87, %89, !dbg !8313
  %90 = load i32, i32* %i, align 4, !dbg !8314
  %add81 = add i32 %add80, %90, !dbg !8315
  %91 = load i32*, i32** %vvmap, align 8, !dbg !8316
  %92 = load i32, i32* %dst, align 4, !dbg !8317
  %idxprom82 = zext i32 %92 to i64, !dbg !8316
  %arrayidx83 = getelementptr inbounds i32, i32* %91, i64 %idxprom82, !dbg !8316
  store i32 %add81, i32* %arrayidx83, align 4, !dbg !8318
  %93 = load i32, i32* %sides, align 4, !dbg !8319
  %94 = load i32, i32* %st, align 4, !dbg !8320
  %sub84 = sub nsw i32 %94, 1, !dbg !8321
  %mul85 = mul nsw i32 %93, %sub84, !dbg !8322
  %95 = load i32, i32* %st, align 4, !dbg !8323
  %mul86 = mul nsw i32 %mul85, %95, !dbg !8324
  %add87 = add nsw i32 1, %mul86, !dbg !8325
  %96 = load i32, i32* %dst, align 4, !dbg !8326
  %add88 = add i32 %96, %add87, !dbg !8326
  store i32 %add88, i32* %dst, align 4, !dbg !8326
  br label %for.inc89, !dbg !8327

for.inc89:                                        ; preds = %for.body75
  %97 = load i32, i32* %i, align 4, !dbg !8328
  %inc90 = add i32 %97, 1, !dbg !8328
  store i32 %inc90, i32* %i, align 4, !dbg !8328
  br label %for.cond72, !dbg !8329, !llvm.loop !8330

for.end91:                                        ; preds = %for.cond72
  %98 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8332
  %next92 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %98, i32 0, i32 0, !dbg !8334
  %99 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next92, align 8, !dbg !8334
  %tobool93 = icmp ne %struct.MultiresLevel* %99, null, !dbg !8332
  br i1 %tobool93, label %land.lhs.true, label %if.end352, !dbg !8335

land.lhs.true:                                    ; preds = %for.end91
  %100 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8336
  %next94 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %100, i32 0, i32 0, !dbg !8337
  %101 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next94, align 8, !dbg !8337
  %next95 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %101, i32 0, i32 0, !dbg !8338
  %102 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next95, align 8, !dbg !8338
  %tobool96 = icmp ne %struct.MultiresLevel* %102, null, !dbg !8336
  br i1 %tobool96, label %if.then, label %if.end352, !dbg !8339

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %fmap, metadata !8340, metadata !DIExpression()), !dbg !8343
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %emap, metadata !8344, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.declare(metadata %struct.IndexNode*** %fmem, metadata !8346, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.declare(metadata %struct.IndexNode*** %emem, metadata !8357, metadata !DIExpression()), !dbg !8358
  store i32 0, i32* %totquad, align 4, !dbg !8359
  store i32 0, i32* %tottri, align 4, !dbg !8360
  %103 = load i32, i32* %totlvl.addr, align 4, !dbg !8361
  %sub97 = sub nsw i32 %103, 1, !dbg !8362
  %idxprom98 = sext i32 %sub97 to i64, !dbg !8363
  %arrayidx99 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom98, !dbg !8363
  %104 = load i32, i32* %arrayidx99, align 4, !dbg !8363
  %sub100 = sub nsw i32 %104, 2, !dbg !8364
  store i32 %sub100, i32* %crossedgelen, align 4, !dbg !8365
  store i32 0, i32* %dst, align 4, !dbg !8366
  store i32 0, i32* %i, align 4, !dbg !8367
  br label %for.cond101, !dbg !8369

for.cond101:                                      ; preds = %for.inc192, %if.then
  %105 = load i32, i32* %i, align 4, !dbg !8370
  %106 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8372
  %totface102 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %106, i32 0, i32 6, !dbg !8373
  %107 = load i32, i32* %totface102, align 4, !dbg !8373
  %cmp103 = icmp ult i32 %105, %107, !dbg !8374
  br i1 %cmp103, label %for.body105, label %for.end194, !dbg !8375

for.body105:                                      ; preds = %for.cond101
  call void @llvm.dbg.declare(metadata i32* %sides106, metadata !8376, metadata !DIExpression()), !dbg !8378
  %108 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8379
  %faces107 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %108, i32 0, i32 2, !dbg !8380
  %109 = load %struct.MultiresFace*, %struct.MultiresFace** %faces107, align 8, !dbg !8380
  %110 = load i32, i32* %i, align 4, !dbg !8381
  %idxprom108 = zext i32 %110 to i64, !dbg !8379
  %arrayidx109 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %109, i64 %idxprom108, !dbg !8379
  %v110 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx109, i32 0, i32 0, !dbg !8382
  %arrayidx111 = getelementptr inbounds [4 x i32], [4 x i32]* %v110, i64 0, i64 3, !dbg !8379
  %111 = load i32, i32* %arrayidx111, align 4, !dbg !8379
  %tobool112 = icmp ne i32 %111, 0, !dbg !8379
  %112 = zext i1 %tobool112 to i64, !dbg !8379
  %cond113 = select i1 %tobool112, i32 4, i32 3, !dbg !8379
  store i32 %cond113, i32* %sides106, align 4, !dbg !8378
  %113 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8383
  %next114 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %113, i32 0, i32 0, !dbg !8384
  %114 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next114, align 8, !dbg !8384
  %next115 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %114, i32 0, i32 0, !dbg !8385
  %115 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next115, align 8, !dbg !8385
  store %struct.MultiresLevel* %115, %struct.MultiresLevel** %lvl, align 8, !dbg !8386
  %116 = load i32, i32* %dst, align 4, !dbg !8387
  %inc116 = add i32 %116, 1, !dbg !8387
  store i32 %inc116, i32* %dst, align 4, !dbg !8387
  store i32 3, i32* %j, align 4, !dbg !8388
  br label %for.cond117, !dbg !8390

for.cond117:                                      ; preds = %for.inc180, %for.body105
  %117 = load i32, i32* %j, align 4, !dbg !8391
  %118 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8393
  %level_count118 = getelementptr inbounds %struct.Multires, %struct.Multires* %118, i32 0, i32 2, !dbg !8394
  %119 = load i8, i8* %level_count118, align 8, !dbg !8394
  %conv119 = zext i8 %119 to i32, !dbg !8393
  %cmp120 = icmp ule i32 %117, %conv119, !dbg !8395
  br i1 %cmp120, label %for.body122, label %for.end182, !dbg !8396

for.body122:                                      ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata i32* %base123, metadata !8397, metadata !DIExpression()), !dbg !8399
  %120 = load i32, i32* %totlvl.addr, align 4, !dbg !8400
  %121 = load i32, i32* %j, align 4, !dbg !8401
  %sub124 = sub i32 %120, %121, !dbg !8402
  %add125 = add i32 %sub124, 1, !dbg !8403
  %idxprom126 = zext i32 %add125 to i64, !dbg !8404
  %arrayidx127 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom126, !dbg !8404
  %122 = load i32, i32* %arrayidx127, align 4, !dbg !8404
  %sub128 = sub nsw i32 %122, 2, !dbg !8405
  store i32 %sub128, i32* %base123, align 4, !dbg !8399
  call void @llvm.dbg.declare(metadata i32* %skip129, metadata !8406, metadata !DIExpression()), !dbg !8407
  %123 = load i32, i32* %totlvl.addr, align 4, !dbg !8408
  %124 = load i32, i32* %j, align 4, !dbg !8409
  %sub130 = sub i32 %123, %124, !dbg !8410
  %add131 = add i32 %sub130, 2, !dbg !8411
  %idxprom132 = zext i32 %add131 to i64, !dbg !8412
  %arrayidx133 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom132, !dbg !8412
  %125 = load i32, i32* %arrayidx133, align 4, !dbg !8412
  %sub134 = sub nsw i32 %125, 1, !dbg !8413
  store i32 %sub134, i32* %skip129, align 4, !dbg !8407
  call void @llvm.dbg.declare(metadata i32* %st135, metadata !8414, metadata !DIExpression()), !dbg !8415
  %126 = load i32, i32* %j, align 4, !dbg !8416
  %sub136 = sub i32 %126, 2, !dbg !8417
  %conv137 = uitofp i32 %sub136 to double, !dbg !8416
  %call138 = call double @pow(double 2.000000e+00, double %conv137) #5, !dbg !8418
  %conv139 = fptosi double %call138 to i32, !dbg !8418
  store i32 %conv139, i32* %st135, align 4, !dbg !8415
  call void @llvm.dbg.declare(metadata i32* %st2, metadata !8419, metadata !DIExpression()), !dbg !8420
  %127 = load i32, i32* %j, align 4, !dbg !8421
  %sub140 = sub i32 %127, 3, !dbg !8422
  %conv141 = uitofp i32 %sub140 to double, !dbg !8421
  %call142 = call double @pow(double 2.000000e+00, double %conv141) #5, !dbg !8423
  %conv143 = fptosi double %call142 to i32, !dbg !8423
  store i32 %conv143, i32* %st2, align 4, !dbg !8420
  call void @llvm.dbg.declare(metadata i32* %lsrc144, metadata !8424, metadata !DIExpression()), !dbg !8425
  %128 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8426
  %prev145 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %128, i32 0, i32 1, !dbg !8427
  %129 = load %struct.MultiresLevel*, %struct.MultiresLevel** %prev145, align 8, !dbg !8427
  %totvert146 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %129, i32 0, i32 5, !dbg !8428
  %130 = load i32, i32* %totvert146, align 8, !dbg !8428
  store i32 %130, i32* %lsrc144, align 4, !dbg !8425
  %131 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8429
  %totedge147 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %131, i32 0, i32 7, !dbg !8430
  %132 = load i32, i32* %totedge147, align 8, !dbg !8430
  %133 = load i32, i32* %st135, align 4, !dbg !8431
  %mul148 = mul i32 %132, %133, !dbg !8432
  %134 = load i32, i32* %lsrc144, align 4, !dbg !8433
  %add149 = add i32 %134, %mul148, !dbg !8433
  store i32 %add149, i32* %lsrc144, align 4, !dbg !8433
  %135 = load i32, i32* %st2, align 4, !dbg !8434
  %136 = load i32, i32* %tottri, align 4, !dbg !8435
  %mul150 = mul nsw i32 %136, 3, !dbg !8436
  %137 = load i32, i32* %totquad, align 4, !dbg !8437
  %mul151 = mul nsw i32 %137, 4, !dbg !8438
  %add152 = add nsw i32 %mul150, %mul151, !dbg !8439
  %mul153 = mul nsw i32 %135, %add152, !dbg !8440
  %138 = load i32, i32* %lsrc144, align 4, !dbg !8441
  %add154 = add nsw i32 %138, %mul153, !dbg !8441
  store i32 %add154, i32* %lsrc144, align 4, !dbg !8441
  store i32 0, i32* %s, align 4, !dbg !8442
  br label %for.cond155, !dbg !8444

for.cond155:                                      ; preds = %for.inc176, %for.body122
  %139 = load i32, i32* %s, align 4, !dbg !8445
  %140 = load i32, i32* %sides106, align 4, !dbg !8447
  %cmp156 = icmp slt i32 %139, %140, !dbg !8448
  br i1 %cmp156, label %for.body158, label %for.end178, !dbg !8449

for.body158:                                      ; preds = %for.cond155
  store i32 0, i32* %x, align 4, !dbg !8450
  br label %for.cond159, !dbg !8453

for.cond159:                                      ; preds = %for.inc173, %for.body158
  %141 = load i32, i32* %x, align 4, !dbg !8454
  %142 = load i32, i32* %st2, align 4, !dbg !8456
  %cmp160 = icmp slt i32 %141, %142, !dbg !8457
  br i1 %cmp160, label %for.body162, label %for.end175, !dbg !8458

for.body162:                                      ; preds = %for.cond159
  %143 = load i32, i32* %lsrc144, align 4, !dbg !8459
  %144 = load i32*, i32** %vvmap, align 8, !dbg !8461
  %145 = load i32, i32* %dst, align 4, !dbg !8462
  %146 = load i32, i32* %crossedgelen, align 4, !dbg !8463
  %147 = load i32, i32* %s, align 4, !dbg !8464
  %add163 = add nsw i32 %147, 1, !dbg !8465
  %mul164 = mul nsw i32 %146, %add163, !dbg !8466
  %add165 = add i32 %145, %mul164, !dbg !8467
  %148 = load i32, i32* %base123, align 4, !dbg !8468
  %sub166 = sub i32 %add165, %148, !dbg !8469
  %149 = load i32, i32* %x, align 4, !dbg !8470
  %150 = load i32, i32* %skip129, align 4, !dbg !8471
  %mul167 = mul nsw i32 %149, %150, !dbg !8472
  %sub168 = sub i32 %sub166, %mul167, !dbg !8473
  %sub169 = sub i32 %sub168, 1, !dbg !8474
  %idxprom170 = zext i32 %sub169 to i64, !dbg !8461
  %arrayidx171 = getelementptr inbounds i32, i32* %144, i64 %idxprom170, !dbg !8461
  store i32 %143, i32* %arrayidx171, align 4, !dbg !8475
  %151 = load i32, i32* %lsrc144, align 4, !dbg !8476
  %inc172 = add nsw i32 %151, 1, !dbg !8476
  store i32 %inc172, i32* %lsrc144, align 4, !dbg !8476
  br label %for.inc173, !dbg !8477

for.inc173:                                       ; preds = %for.body162
  %152 = load i32, i32* %x, align 4, !dbg !8478
  %inc174 = add nsw i32 %152, 1, !dbg !8478
  store i32 %inc174, i32* %x, align 4, !dbg !8478
  br label %for.cond159, !dbg !8479, !llvm.loop !8480

for.end175:                                       ; preds = %for.cond159
  br label %for.inc176, !dbg !8482

for.inc176:                                       ; preds = %for.end175
  %153 = load i32, i32* %s, align 4, !dbg !8483
  %inc177 = add nsw i32 %153, 1, !dbg !8483
  store i32 %inc177, i32* %s, align 4, !dbg !8483
  br label %for.cond155, !dbg !8484, !llvm.loop !8485

for.end178:                                       ; preds = %for.cond155
  %154 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8487
  %next179 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %154, i32 0, i32 0, !dbg !8488
  %155 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next179, align 8, !dbg !8488
  store %struct.MultiresLevel* %155, %struct.MultiresLevel** %lvl, align 8, !dbg !8489
  br label %for.inc180, !dbg !8490

for.inc180:                                       ; preds = %for.end178
  %156 = load i32, i32* %j, align 4, !dbg !8491
  %inc181 = add i32 %156, 1, !dbg !8491
  store i32 %inc181, i32* %j, align 4, !dbg !8491
  br label %for.cond117, !dbg !8492, !llvm.loop !8493

for.end182:                                       ; preds = %for.cond117
  %157 = load i32, i32* %sides106, align 4, !dbg !8495
  %158 = load i32, i32* %st, align 4, !dbg !8496
  %sub183 = sub nsw i32 %158, 1, !dbg !8497
  %mul184 = mul nsw i32 %157, %sub183, !dbg !8498
  %159 = load i32, i32* %st, align 4, !dbg !8499
  %mul185 = mul nsw i32 %mul184, %159, !dbg !8500
  %160 = load i32, i32* %dst, align 4, !dbg !8501
  %add186 = add i32 %160, %mul185, !dbg !8501
  store i32 %add186, i32* %dst, align 4, !dbg !8501
  %161 = load i32, i32* %sides106, align 4, !dbg !8502
  %cmp187 = icmp eq i32 %161, 4, !dbg !8504
  br i1 %cmp187, label %if.then189, label %if.else, !dbg !8505

if.then189:                                       ; preds = %for.end182
  %162 = load i32, i32* %totquad, align 4, !dbg !8506
  %inc190 = add nsw i32 %162, 1, !dbg !8506
  store i32 %inc190, i32* %totquad, align 4, !dbg !8506
  br label %if.end, !dbg !8506

if.else:                                          ; preds = %for.end182
  %163 = load i32, i32* %tottri, align 4, !dbg !8507
  %inc191 = add nsw i32 %163, 1, !dbg !8507
  store i32 %inc191, i32* %tottri, align 4, !dbg !8507
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then189
  br label %for.inc192, !dbg !8508

for.inc192:                                       ; preds = %if.end
  %164 = load i32, i32* %i, align 4, !dbg !8509
  %inc193 = add i32 %164, 1, !dbg !8509
  store i32 %inc193, i32* %i, align 4, !dbg !8509
  br label %for.cond101, !dbg !8510, !llvm.loop !8511

for.end194:                                       ; preds = %for.cond101
  %165 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8513
  %166 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8514
  %level_count195 = getelementptr inbounds %struct.Multires, %struct.Multires* %166, i32 0, i32 2, !dbg !8515
  %167 = load i8, i8* %level_count195, align 8, !dbg !8515
  %conv196 = zext i8 %167 to i32, !dbg !8514
  %sub197 = sub nsw i32 %conv196, 1, !dbg !8516
  %conv198 = sext i32 %sub197 to i64, !dbg !8517
  %mul199 = mul i64 8, %conv198, !dbg !8518
  %call200 = call i8* %165(i64 %mul199, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0)), !dbg !8513
  %168 = bitcast i8* %call200 to %struct.ListBase**, !dbg !8513
  store %struct.ListBase** %168, %struct.ListBase*** %fmap, align 8, !dbg !8519
  %169 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8520
  %170 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8521
  %level_count201 = getelementptr inbounds %struct.Multires, %struct.Multires* %170, i32 0, i32 2, !dbg !8522
  %171 = load i8, i8* %level_count201, align 8, !dbg !8522
  %conv202 = zext i8 %171 to i32, !dbg !8521
  %sub203 = sub nsw i32 %conv202, 1, !dbg !8523
  %conv204 = sext i32 %sub203 to i64, !dbg !8524
  %mul205 = mul i64 8, %conv204, !dbg !8525
  %call206 = call i8* %169(i64 %mul205, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0)), !dbg !8520
  %172 = bitcast i8* %call206 to %struct.ListBase**, !dbg !8520
  store %struct.ListBase** %172, %struct.ListBase*** %emap, align 8, !dbg !8526
  %173 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8527
  %174 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8528
  %level_count207 = getelementptr inbounds %struct.Multires, %struct.Multires* %174, i32 0, i32 2, !dbg !8529
  %175 = load i8, i8* %level_count207, align 8, !dbg !8529
  %conv208 = zext i8 %175 to i32, !dbg !8528
  %sub209 = sub nsw i32 %conv208, 1, !dbg !8530
  %conv210 = sext i32 %sub209 to i64, !dbg !8531
  %mul211 = mul i64 8, %conv210, !dbg !8532
  %call212 = call i8* %173(i64 %mul211, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0)), !dbg !8527
  %176 = bitcast i8* %call212 to %struct.IndexNode**, !dbg !8527
  store %struct.IndexNode** %176, %struct.IndexNode*** %fmem, align 8, !dbg !8533
  %177 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8534
  %178 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8535
  %level_count213 = getelementptr inbounds %struct.Multires, %struct.Multires* %178, i32 0, i32 2, !dbg !8536
  %179 = load i8, i8* %level_count213, align 8, !dbg !8536
  %conv214 = zext i8 %179 to i32, !dbg !8535
  %sub215 = sub nsw i32 %conv214, 1, !dbg !8537
  %conv216 = sext i32 %sub215 to i64, !dbg !8538
  %mul217 = mul i64 8, %conv216, !dbg !8539
  %call218 = call i8* %177(i64 %mul217, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)), !dbg !8534
  %180 = bitcast i8* %call218 to %struct.IndexNode**, !dbg !8534
  store %struct.IndexNode** %180, %struct.IndexNode*** %emem, align 8, !dbg !8540
  %181 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8541
  store %struct.MultiresLevel* %181, %struct.MultiresLevel** %lvl, align 8, !dbg !8542
  store i32 0, i32* %i, align 4, !dbg !8543
  br label %for.cond219, !dbg !8545

for.cond219:                                      ; preds = %for.inc238, %for.end194
  %182 = load i32, i32* %i, align 4, !dbg !8546
  %183 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8548
  %level_count220 = getelementptr inbounds %struct.Multires, %struct.Multires* %183, i32 0, i32 2, !dbg !8549
  %184 = load i8, i8* %level_count220, align 8, !dbg !8549
  %conv221 = zext i8 %184 to i32, !dbg !8550
  %sub222 = sub i32 %conv221, 1, !dbg !8551
  %cmp223 = icmp ult i32 %182, %sub222, !dbg !8552
  br i1 %cmp223, label %for.body225, label %for.end240, !dbg !8553

for.body225:                                      ; preds = %for.cond219
  %185 = load %struct.ListBase**, %struct.ListBase*** %fmap, align 8, !dbg !8554
  %186 = load i32, i32* %i, align 4, !dbg !8556
  %idx.ext = zext i32 %186 to i64, !dbg !8557
  %add.ptr = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %185, i64 %idx.ext, !dbg !8557
  %187 = load %struct.IndexNode**, %struct.IndexNode*** %fmem, align 8, !dbg !8558
  %188 = load i32, i32* %i, align 4, !dbg !8559
  %idx.ext226 = zext i32 %188 to i64, !dbg !8560
  %add.ptr227 = getelementptr inbounds %struct.IndexNode*, %struct.IndexNode** %187, i64 %idx.ext226, !dbg !8560
  %189 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8561
  %faces228 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %189, i32 0, i32 2, !dbg !8562
  %190 = load %struct.MultiresFace*, %struct.MultiresFace** %faces228, align 8, !dbg !8562
  %191 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8563
  %totvert229 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %191, i32 0, i32 5, !dbg !8564
  %192 = load i32, i32* %totvert229, align 8, !dbg !8564
  %193 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8565
  %totface230 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %193, i32 0, i32 6, !dbg !8566
  %194 = load i32, i32* %totface230, align 4, !dbg !8566
  call void @create_old_vert_face_map(%struct.ListBase** %add.ptr, %struct.IndexNode** %add.ptr227, %struct.MultiresFace* %190, i32 %192, i32 %194), !dbg !8567
  %195 = load %struct.ListBase**, %struct.ListBase*** %emap, align 8, !dbg !8568
  %196 = load i32, i32* %i, align 4, !dbg !8569
  %idx.ext231 = zext i32 %196 to i64, !dbg !8570
  %add.ptr232 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %195, i64 %idx.ext231, !dbg !8570
  %197 = load %struct.IndexNode**, %struct.IndexNode*** %emem, align 8, !dbg !8571
  %198 = load i32, i32* %i, align 4, !dbg !8572
  %idx.ext233 = zext i32 %198 to i64, !dbg !8573
  %add.ptr234 = getelementptr inbounds %struct.IndexNode*, %struct.IndexNode** %197, i64 %idx.ext233, !dbg !8573
  %199 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8574
  %edges = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %199, i32 0, i32 4, !dbg !8575
  %200 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges, align 8, !dbg !8575
  %201 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8576
  %totvert235 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %201, i32 0, i32 5, !dbg !8577
  %202 = load i32, i32* %totvert235, align 8, !dbg !8577
  %203 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8578
  %totedge236 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %203, i32 0, i32 7, !dbg !8579
  %204 = load i32, i32* %totedge236, align 8, !dbg !8579
  call void @create_old_vert_edge_map(%struct.ListBase** %add.ptr232, %struct.IndexNode** %add.ptr234, %struct.MultiresEdge* %200, i32 %202, i32 %204), !dbg !8580
  %205 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl, align 8, !dbg !8581
  %next237 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %205, i32 0, i32 0, !dbg !8582
  %206 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next237, align 8, !dbg !8582
  store %struct.MultiresLevel* %206, %struct.MultiresLevel** %lvl, align 8, !dbg !8583
  br label %for.inc238, !dbg !8584

for.inc238:                                       ; preds = %for.body225
  %207 = load i32, i32* %i, align 4, !dbg !8585
  %inc239 = add i32 %207, 1, !dbg !8585
  store i32 %inc239, i32* %i, align 4, !dbg !8585
  br label %for.cond219, !dbg !8586, !llvm.loop !8587

for.end240:                                       ; preds = %for.cond219
  store i32 0, i32* %dst, align 4, !dbg !8589
  store i32 0, i32* %j, align 4, !dbg !8590
  br label %for.cond241, !dbg !8592

for.cond241:                                      ; preds = %for.inc331, %for.end240
  %208 = load i32, i32* %j, align 4, !dbg !8593
  %209 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8595
  %totface242 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %209, i32 0, i32 6, !dbg !8596
  %210 = load i32, i32* %totface242, align 4, !dbg !8596
  %cmp243 = icmp ult i32 %208, %210, !dbg !8597
  br i1 %cmp243, label %for.body245, label %for.end333, !dbg !8598

for.body245:                                      ; preds = %for.cond241
  call void @llvm.dbg.declare(metadata i32* %sides246, metadata !8599, metadata !DIExpression()), !dbg !8601
  %211 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8602
  %faces247 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %211, i32 0, i32 2, !dbg !8603
  %212 = load %struct.MultiresFace*, %struct.MultiresFace** %faces247, align 8, !dbg !8603
  %213 = load i32, i32* %j, align 4, !dbg !8604
  %idxprom248 = zext i32 %213 to i64, !dbg !8602
  %arrayidx249 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %212, i64 %idxprom248, !dbg !8602
  %v250 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx249, i32 0, i32 0, !dbg !8605
  %arrayidx251 = getelementptr inbounds [4 x i32], [4 x i32]* %v250, i64 0, i64 3, !dbg !8602
  %214 = load i32, i32* %arrayidx251, align 4, !dbg !8602
  %tobool252 = icmp ne i32 %214, 0, !dbg !8602
  %215 = zext i1 %tobool252 to i64, !dbg !8602
  %cond253 = select i1 %tobool252, i32 4, i32 3, !dbg !8602
  store i32 %cond253, i32* %sides246, align 4, !dbg !8601
  call void @llvm.dbg.declare(metadata i32* %ldst254, metadata !8606, metadata !DIExpression()), !dbg !8607
  %216 = load i32, i32* %dst, align 4, !dbg !8608
  %add255 = add i32 %216, 1, !dbg !8609
  %217 = load i32, i32* %sides246, align 4, !dbg !8610
  %218 = load i32, i32* %st, align 4, !dbg !8611
  %sub256 = sub nsw i32 %218, 1, !dbg !8612
  %mul257 = mul nsw i32 %217, %sub256, !dbg !8613
  %add258 = add i32 %add255, %mul257, !dbg !8614
  store i32 %add258, i32* %ldst254, align 4, !dbg !8607
  store i32 0, i32* %s, align 4, !dbg !8615
  br label %for.cond259, !dbg !8617

for.cond259:                                      ; preds = %for.inc328, %for.body245
  %219 = load i32, i32* %s, align 4, !dbg !8618
  %220 = load i32, i32* %sides246, align 4, !dbg !8620
  %cmp260 = icmp slt i32 %219, %220, !dbg !8621
  br i1 %cmp260, label %for.body262, label %for.end330, !dbg !8622

for.body262:                                      ; preds = %for.cond259
  call void @llvm.dbg.declare(metadata i32* %st2263, metadata !8623, metadata !DIExpression()), !dbg !8625
  %221 = load i32, i32* %totlvl.addr, align 4, !dbg !8626
  %sub264 = sub nsw i32 %221, 1, !dbg !8627
  %idxprom265 = sext i32 %sub264 to i64, !dbg !8628
  %arrayidx266 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom265, !dbg !8628
  %222 = load i32, i32* %arrayidx266, align 4, !dbg !8628
  %sub267 = sub nsw i32 %222, 2, !dbg !8629
  store i32 %sub267, i32* %st2263, align 4, !dbg !8625
  call void @llvm.dbg.declare(metadata i32* %st3, metadata !8630, metadata !DIExpression()), !dbg !8631
  %223 = load i32, i32* %totlvl.addr, align 4, !dbg !8632
  %sub268 = sub nsw i32 %223, 2, !dbg !8633
  %idxprom269 = sext i32 %sub268 to i64, !dbg !8634
  %arrayidx270 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom269, !dbg !8634
  %224 = load i32, i32* %arrayidx270, align 4, !dbg !8634
  %sub271 = sub nsw i32 %224, 2, !dbg !8635
  store i32 %sub271, i32* %st3, align 4, !dbg !8631
  call void @llvm.dbg.declare(metadata i32* %st4, metadata !8636, metadata !DIExpression()), !dbg !8637
  %225 = load i32, i32* %st3, align 4, !dbg !8638
  %cmp272 = icmp eq i32 %225, 0, !dbg !8639
  br i1 %cmp272, label %cond.true, label %cond.false, !dbg !8638

cond.true:                                        ; preds = %for.body262
  br label %cond.end, !dbg !8638

cond.false:                                       ; preds = %for.body262
  %226 = load i32, i32* %st3, align 4, !dbg !8640
  %add274 = add nsw i32 %226, 1, !dbg !8641
  %div = sdiv i32 %add274, 2, !dbg !8642
  br label %cond.end, !dbg !8638

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond275 = phi i32 [ 1, %cond.true ], [ %div, %cond.false ], !dbg !8638
  store i32 %cond275, i32* %st4, align 4, !dbg !8637
  call void @llvm.dbg.declare(metadata i32* %mid, metadata !8643, metadata !DIExpression()), !dbg !8644
  %227 = load i32, i32* %ldst254, align 4, !dbg !8645
  %228 = load i32, i32* %st2263, align 4, !dbg !8646
  %229 = load i32, i32* %st3, align 4, !dbg !8647
  %mul276 = mul nsw i32 %228, %229, !dbg !8648
  %add277 = add nsw i32 %227, %mul276, !dbg !8649
  %230 = load i32, i32* %st3, align 4, !dbg !8650
  %add278 = add nsw i32 %add277, %230, !dbg !8651
  store i32 %add278, i32* %mid, align 4, !dbg !8644
  call void @llvm.dbg.declare(metadata i32* %cv, metadata !8652, metadata !DIExpression()), !dbg !8653
  %231 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8654
  %faces279 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %231, i32 0, i32 2, !dbg !8655
  %232 = load %struct.MultiresFace*, %struct.MultiresFace** %faces279, align 8, !dbg !8655
  %233 = load i32, i32* %j, align 4, !dbg !8656
  %idxprom280 = zext i32 %233 to i64, !dbg !8654
  %arrayidx281 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %232, i64 %idxprom280, !dbg !8654
  %v282 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx281, i32 0, i32 0, !dbg !8657
  %234 = load i32, i32* %s, align 4, !dbg !8658
  %idxprom283 = sext i32 %234 to i64, !dbg !8654
  %arrayidx284 = getelementptr inbounds [4 x i32], [4 x i32]* %v282, i64 0, i64 %idxprom283, !dbg !8654
  %235 = load i32, i32* %arrayidx284, align 4, !dbg !8654
  store i32 %235, i32* %cv, align 4, !dbg !8653
  call void @llvm.dbg.declare(metadata i32* %nv, metadata !8659, metadata !DIExpression()), !dbg !8660
  %236 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8661
  %faces285 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %236, i32 0, i32 2, !dbg !8662
  %237 = load %struct.MultiresFace*, %struct.MultiresFace** %faces285, align 8, !dbg !8662
  %238 = load i32, i32* %j, align 4, !dbg !8663
  %idxprom286 = zext i32 %238 to i64, !dbg !8661
  %arrayidx287 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %237, i64 %idxprom286, !dbg !8661
  %v288 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx287, i32 0, i32 0, !dbg !8664
  %239 = load i32, i32* %s, align 4, !dbg !8665
  %240 = load i32, i32* %sides246, align 4, !dbg !8666
  %sub289 = sub nsw i32 %240, 1, !dbg !8667
  %cmp290 = icmp eq i32 %239, %sub289, !dbg !8668
  br i1 %cmp290, label %cond.true292, label %cond.false293, !dbg !8665

cond.true292:                                     ; preds = %cond.end
  br label %cond.end295, !dbg !8665

cond.false293:                                    ; preds = %cond.end
  %241 = load i32, i32* %s, align 4, !dbg !8669
  %add294 = add nsw i32 %241, 1, !dbg !8670
  br label %cond.end295, !dbg !8665

cond.end295:                                      ; preds = %cond.false293, %cond.true292
  %cond296 = phi i32 [ 0, %cond.true292 ], [ %add294, %cond.false293 ], !dbg !8665
  %idxprom297 = sext i32 %cond296 to i64, !dbg !8661
  %arrayidx298 = getelementptr inbounds [4 x i32], [4 x i32]* %v288, i64 0, i64 %idxprom297, !dbg !8661
  %242 = load i32, i32* %arrayidx298, align 4, !dbg !8661
  store i32 %242, i32* %nv, align 4, !dbg !8660
  call void @llvm.dbg.declare(metadata i32* %pv, metadata !8671, metadata !DIExpression()), !dbg !8672
  %243 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8673
  %faces299 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %243, i32 0, i32 2, !dbg !8674
  %244 = load %struct.MultiresFace*, %struct.MultiresFace** %faces299, align 8, !dbg !8674
  %245 = load i32, i32* %j, align 4, !dbg !8675
  %idxprom300 = zext i32 %245 to i64, !dbg !8673
  %arrayidx301 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %244, i64 %idxprom300, !dbg !8673
  %v302 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx301, i32 0, i32 0, !dbg !8676
  %246 = load i32, i32* %s, align 4, !dbg !8677
  %cmp303 = icmp eq i32 %246, 0, !dbg !8678
  br i1 %cmp303, label %cond.true305, label %cond.false307, !dbg !8677

cond.true305:                                     ; preds = %cond.end295
  %247 = load i32, i32* %sides246, align 4, !dbg !8679
  %sub306 = sub nsw i32 %247, 1, !dbg !8680
  br label %cond.end309, !dbg !8677

cond.false307:                                    ; preds = %cond.end295
  %248 = load i32, i32* %s, align 4, !dbg !8681
  %sub308 = sub nsw i32 %248, 1, !dbg !8682
  br label %cond.end309, !dbg !8677

cond.end309:                                      ; preds = %cond.false307, %cond.true305
  %cond310 = phi i32 [ %sub306, %cond.true305 ], [ %sub308, %cond.false307 ], !dbg !8677
  %idxprom311 = sext i32 %cond310 to i64, !dbg !8673
  %arrayidx312 = getelementptr inbounds [4 x i32], [4 x i32]* %v302, i64 0, i64 %idxprom311, !dbg !8673
  %249 = load i32, i32* %arrayidx312, align 4, !dbg !8673
  store i32 %249, i32* %pv, align 4, !dbg !8672
  %250 = load %struct.ListBase**, %struct.ListBase*** %fmap, align 8, !dbg !8683
  %251 = load %struct.ListBase**, %struct.ListBase*** %emap, align 8, !dbg !8684
  %252 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8685
  %next313 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %252, i32 0, i32 0, !dbg !8686
  %253 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next313, align 8, !dbg !8686
  %254 = load i32*, i32** %vvmap, align 8, !dbg !8687
  %255 = load i32, i32* %mid, align 4, !dbg !8688
  %256 = load i32*, i32** %vvmap, align 8, !dbg !8689
  %257 = load i32, i32* %dst, align 4, !dbg !8690
  %idxprom314 = zext i32 %257 to i64, !dbg !8689
  %arrayidx315 = getelementptr inbounds i32, i32* %256, i64 %idxprom314, !dbg !8689
  %258 = load i32, i32* %arrayidx315, align 4, !dbg !8689
  %259 = load i32, i32* %cv, align 4, !dbg !8691
  %260 = load %struct.ListBase**, %struct.ListBase*** %emap, align 8, !dbg !8692
  %arrayidx316 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %260, i64 0, !dbg !8692
  %261 = load %struct.ListBase*, %struct.ListBase** %arrayidx316, align 8, !dbg !8692
  %262 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8693
  %edges317 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %262, i32 0, i32 4, !dbg !8694
  %263 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges317, align 8, !dbg !8694
  %264 = load i32, i32* %pv, align 4, !dbg !8695
  %265 = load i32, i32* %cv, align 4, !dbg !8696
  %call318 = call %struct.MultiresEdge* @find_old_edge(%struct.ListBase* %261, %struct.MultiresEdge* %263, i32 %264, i32 %265), !dbg !8697
  %mid319 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %call318, i32 0, i32 1, !dbg !8698
  %266 = load i32, i32* %mid319, align 4, !dbg !8698
  %267 = load %struct.ListBase**, %struct.ListBase*** %emap, align 8, !dbg !8699
  %arrayidx320 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %267, i64 0, !dbg !8699
  %268 = load %struct.ListBase*, %struct.ListBase** %arrayidx320, align 8, !dbg !8699
  %269 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl1, align 8, !dbg !8700
  %edges321 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %269, i32 0, i32 4, !dbg !8701
  %270 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges321, align 8, !dbg !8701
  %271 = load i32, i32* %cv, align 4, !dbg !8702
  %272 = load i32, i32* %nv, align 4, !dbg !8703
  %call322 = call %struct.MultiresEdge* @find_old_edge(%struct.ListBase* %268, %struct.MultiresEdge* %270, i32 %271, i32 %272), !dbg !8704
  %mid323 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %call322, i32 0, i32 1, !dbg !8705
  %273 = load i32, i32* %mid323, align 4, !dbg !8705
  %274 = load i32, i32* %st2263, align 4, !dbg !8706
  %275 = load i32, i32* %st4, align 4, !dbg !8707
  call void @multires_load_old_faces(%struct.ListBase** %250, %struct.ListBase** %251, %struct.MultiresLevel* %253, i32* %254, i32 %255, i32 %258, i32 %259, i32 %266, i32 %273, i32 %274, i32 %275), !dbg !8708
  %276 = load i32, i32* %st, align 4, !dbg !8709
  %sub324 = sub nsw i32 %276, 1, !dbg !8710
  %277 = load i32, i32* %st, align 4, !dbg !8711
  %sub325 = sub nsw i32 %277, 1, !dbg !8712
  %mul326 = mul nsw i32 %sub324, %sub325, !dbg !8713
  %278 = load i32, i32* %ldst254, align 4, !dbg !8714
  %add327 = add nsw i32 %278, %mul326, !dbg !8714
  store i32 %add327, i32* %ldst254, align 4, !dbg !8714
  br label %for.inc328, !dbg !8715

for.inc328:                                       ; preds = %cond.end309
  %279 = load i32, i32* %s, align 4, !dbg !8716
  %inc329 = add nsw i32 %279, 1, !dbg !8716
  store i32 %inc329, i32* %s, align 4, !dbg !8716
  br label %for.cond259, !dbg !8717, !llvm.loop !8718

for.end330:                                       ; preds = %for.cond259
  %280 = load i32, i32* %ldst254, align 4, !dbg !8720
  store i32 %280, i32* %dst, align 4, !dbg !8721
  br label %for.inc331, !dbg !8722

for.inc331:                                       ; preds = %for.end330
  %281 = load i32, i32* %j, align 4, !dbg !8723
  %inc332 = add i32 %281, 1, !dbg !8723
  store i32 %inc332, i32* %j, align 4, !dbg !8723
  br label %for.cond241, !dbg !8724, !llvm.loop !8725

for.end333:                                       ; preds = %for.cond241
  store i32 0, i32* %i, align 4, !dbg !8727
  br label %for.cond334, !dbg !8729

for.cond334:                                      ; preds = %for.inc349, %for.end333
  %282 = load i32, i32* %i, align 4, !dbg !8730
  %283 = load %struct.Multires*, %struct.Multires** %mr, align 8, !dbg !8732
  %level_count335 = getelementptr inbounds %struct.Multires, %struct.Multires* %283, i32 0, i32 2, !dbg !8733
  %284 = load i8, i8* %level_count335, align 8, !dbg !8733
  %conv336 = zext i8 %284 to i32, !dbg !8732
  %sub337 = sub nsw i32 %conv336, 1, !dbg !8734
  %cmp338 = icmp ult i32 %282, %sub337, !dbg !8735
  br i1 %cmp338, label %for.body340, label %for.end351, !dbg !8736

for.body340:                                      ; preds = %for.cond334
  %285 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8737
  %286 = load %struct.ListBase**, %struct.ListBase*** %fmap, align 8, !dbg !8739
  %287 = load i32, i32* %i, align 4, !dbg !8740
  %idxprom341 = zext i32 %287 to i64, !dbg !8739
  %arrayidx342 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %286, i64 %idxprom341, !dbg !8739
  %288 = load %struct.ListBase*, %struct.ListBase** %arrayidx342, align 8, !dbg !8739
  %289 = bitcast %struct.ListBase* %288 to i8*, !dbg !8739
  call void %285(i8* %289), !dbg !8737
  %290 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8741
  %291 = load %struct.IndexNode**, %struct.IndexNode*** %fmem, align 8, !dbg !8742
  %292 = load i32, i32* %i, align 4, !dbg !8743
  %idxprom343 = zext i32 %292 to i64, !dbg !8742
  %arrayidx344 = getelementptr inbounds %struct.IndexNode*, %struct.IndexNode** %291, i64 %idxprom343, !dbg !8742
  %293 = load %struct.IndexNode*, %struct.IndexNode** %arrayidx344, align 8, !dbg !8742
  %294 = bitcast %struct.IndexNode* %293 to i8*, !dbg !8742
  call void %290(i8* %294), !dbg !8741
  %295 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8744
  %296 = load %struct.ListBase**, %struct.ListBase*** %emap, align 8, !dbg !8745
  %297 = load i32, i32* %i, align 4, !dbg !8746
  %idxprom345 = zext i32 %297 to i64, !dbg !8745
  %arrayidx346 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %296, i64 %idxprom345, !dbg !8745
  %298 = load %struct.ListBase*, %struct.ListBase** %arrayidx346, align 8, !dbg !8745
  %299 = bitcast %struct.ListBase* %298 to i8*, !dbg !8745
  call void %295(i8* %299), !dbg !8744
  %300 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8747
  %301 = load %struct.IndexNode**, %struct.IndexNode*** %emem, align 8, !dbg !8748
  %302 = load i32, i32* %i, align 4, !dbg !8749
  %idxprom347 = zext i32 %302 to i64, !dbg !8748
  %arrayidx348 = getelementptr inbounds %struct.IndexNode*, %struct.IndexNode** %301, i64 %idxprom347, !dbg !8748
  %303 = load %struct.IndexNode*, %struct.IndexNode** %arrayidx348, align 8, !dbg !8748
  %304 = bitcast %struct.IndexNode* %303 to i8*, !dbg !8748
  call void %300(i8* %304), !dbg !8747
  br label %for.inc349, !dbg !8750

for.inc349:                                       ; preds = %for.body340
  %305 = load i32, i32* %i, align 4, !dbg !8751
  %inc350 = add i32 %305, 1, !dbg !8751
  store i32 %inc350, i32* %i, align 4, !dbg !8751
  br label %for.cond334, !dbg !8752, !llvm.loop !8753

for.end351:                                       ; preds = %for.cond334
  %306 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8755
  %307 = load %struct.ListBase**, %struct.ListBase*** %fmap, align 8, !dbg !8756
  %308 = bitcast %struct.ListBase** %307 to i8*, !dbg !8756
  call void %306(i8* %308), !dbg !8755
  %309 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8757
  %310 = load %struct.ListBase**, %struct.ListBase*** %emap, align 8, !dbg !8758
  %311 = bitcast %struct.ListBase** %310 to i8*, !dbg !8758
  call void %309(i8* %311), !dbg !8757
  %312 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8759
  %313 = load %struct.IndexNode**, %struct.IndexNode*** %fmem, align 8, !dbg !8760
  %314 = bitcast %struct.IndexNode** %313 to i8*, !dbg !8760
  call void %312(i8* %314), !dbg !8759
  %315 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8761
  %316 = load %struct.IndexNode**, %struct.IndexNode*** %emem, align 8, !dbg !8762
  %317 = bitcast %struct.IndexNode** %316 to i8*, !dbg !8762
  call void %315(i8* %317), !dbg !8761
  br label %if.end352, !dbg !8763

if.end352:                                        ; preds = %for.end351, %land.lhs.true, %for.end91
  store i32 0, i32* %i, align 4, !dbg !8764
  br label %for.cond353, !dbg !8766

for.cond353:                                      ; preds = %for.inc365, %if.end352
  %318 = load i32, i32* %i, align 4, !dbg !8767
  %319 = load i32, i32* %totvert, align 4, !dbg !8769
  %cmp354 = icmp ult i32 %318, %319, !dbg !8770
  br i1 %cmp354, label %for.body356, label %for.end367, !dbg !8771

for.body356:                                      ; preds = %for.cond353
  %320 = load %struct.MVert*, %struct.MVert** %vdst, align 8, !dbg !8772
  %321 = load i32, i32* %i, align 4, !dbg !8773
  %idxprom357 = zext i32 %321 to i64, !dbg !8772
  %arrayidx358 = getelementptr inbounds %struct.MVert, %struct.MVert* %320, i64 %idxprom357, !dbg !8772
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx358, i32 0, i32 0, !dbg !8774
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !8772
  %322 = load %struct.MVert*, %struct.MVert** %vsrc, align 8, !dbg !8775
  %323 = load i32*, i32** %vvmap, align 8, !dbg !8776
  %324 = load i32, i32* %i, align 4, !dbg !8777
  %idxprom359 = zext i32 %324 to i64, !dbg !8776
  %arrayidx360 = getelementptr inbounds i32, i32* %323, i64 %idxprom359, !dbg !8776
  %325 = load i32, i32* %arrayidx360, align 4, !dbg !8776
  %idxprom361 = sext i32 %325 to i64, !dbg !8775
  %arrayidx362 = getelementptr inbounds %struct.MVert, %struct.MVert* %322, i64 %idxprom361, !dbg !8775
  %co363 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx362, i32 0, i32 0, !dbg !8778
  %arraydecay364 = getelementptr inbounds [3 x float], [3 x float]* %co363, i64 0, i64 0, !dbg !8775
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay364), !dbg !8779
  br label %for.inc365, !dbg !8779

for.inc365:                                       ; preds = %for.body356
  %326 = load i32, i32* %i, align 4, !dbg !8780
  %inc366 = add i32 %326, 1, !dbg !8780
  store i32 %inc366, i32* %i, align 4, !dbg !8780
  br label %for.cond353, !dbg !8781, !llvm.loop !8782

for.end367:                                       ; preds = %for.cond353
  %327 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8784
  %328 = load i32*, i32** %vvmap, align 8, !dbg !8785
  %329 = bitcast i32* %328 to i8*, !dbg !8785
  call void %327(i8* %329), !dbg !8784
  %330 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8786
  %331 = load %struct.MVert*, %struct.MVert** %vdst, align 8, !dbg !8787
  call void @multires_mvert_to_ss(%struct.DerivedMesh* %330, %struct.MVert* %331), !dbg !8788
  ret void, !dbg !8789
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @multires_mdisp_corners(%struct.MDisps* %s) #0 !dbg !8790 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.MDisps*, align 8
  %lvl = alloca i32, align 4
  %side = alloca i32, align 4
  store %struct.MDisps* %s, %struct.MDisps** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDisps** %s.addr, metadata !8793, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.declare(metadata i32* %lvl, metadata !8795, metadata !DIExpression()), !dbg !8796
  store i32 13, i32* %lvl, align 4, !dbg !8796
  br label %while.cond, !dbg !8797

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %lvl, align 4, !dbg !8798
  %cmp = icmp sgt i32 %0, 0, !dbg !8799
  br i1 %cmp, label %while.body, label %while.end, !dbg !8797

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %side, metadata !8800, metadata !DIExpression()), !dbg !8802
  %1 = load i32, i32* %lvl, align 4, !dbg !8803
  %sub = sub nsw i32 %1, 1, !dbg !8804
  %shl = shl i32 1, %sub, !dbg !8805
  %add = add nsw i32 %shl, 1, !dbg !8806
  store i32 %add, i32* %side, align 4, !dbg !8802
  %2 = load %struct.MDisps*, %struct.MDisps** %s.addr, align 8, !dbg !8807
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %2, i32 0, i32 0, !dbg !8809
  %3 = load i32, i32* %totdisp, align 8, !dbg !8809
  %4 = load i32, i32* %side, align 4, !dbg !8810
  %5 = load i32, i32* %side, align 4, !dbg !8811
  %mul = mul nsw i32 %4, %5, !dbg !8812
  %rem = srem i32 %3, %mul, !dbg !8813
  %cmp1 = icmp eq i32 %rem, 0, !dbg !8814
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8815

if.then:                                          ; preds = %while.body
  %6 = load %struct.MDisps*, %struct.MDisps** %s.addr, align 8, !dbg !8816
  %totdisp2 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %6, i32 0, i32 0, !dbg !8817
  %7 = load i32, i32* %totdisp2, align 8, !dbg !8817
  %8 = load i32, i32* %side, align 4, !dbg !8818
  %9 = load i32, i32* %side, align 4, !dbg !8819
  %mul3 = mul nsw i32 %8, %9, !dbg !8820
  %div = sdiv i32 %7, %mul3, !dbg !8821
  store i32 %div, i32* %retval, align 4, !dbg !8822
  br label %return, !dbg !8822

if.end:                                           ; preds = %while.body
  %10 = load i32, i32* %lvl, align 4, !dbg !8823
  %dec = add nsw i32 %10, -1, !dbg !8823
  store i32 %dec, i32* %lvl, align 4, !dbg !8823
  br label %while.cond, !dbg !8797, !llvm.loop !8824

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !8826
  br label %return, !dbg !8826

return:                                           ; preds = %while.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8827
  ret i32 %11, !dbg !8827
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multiresModifier_scale_disp(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !8828 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %smat = alloca [3 x [3 x float]], align 16
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8831, metadata !DIExpression()), !dbg !8832
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !8835, metadata !DIExpression()), !dbg !8836
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8837
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !8838
  call void @BKE_object_scale_to_mat3(%struct.Object* %0, [3 x float]* %arraydecay), !dbg !8839
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8840
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8841
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !8842
  call void @multires_apply_smat(%struct.Scene* %1, %struct.Object* %2, [3 x float]* %arraydecay1), !dbg !8843
  ret void, !dbg !8844
}

declare dso_local void @BKE_object_scale_to_mat3(%struct.Object*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @multires_apply_smat(%struct.Scene* %scene, %struct.Object* %ob, [3 x float]* %smat) #0 !dbg !8845 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %smat.addr = alloca [3 x float]*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %cddm = alloca %struct.DerivedMesh*, align 8
  %subdm = alloca %struct.DerivedMesh*, align 8
  %gridData = alloca %struct.CCGElem**, align 8
  %subGridData = alloca %struct.CCGElem**, align 8
  %dm_key = alloca %struct.CCGKey, align 4
  %subdm_key = alloca %struct.CCGKey, align 4
  %me = alloca %struct.Mesh*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mdisps = alloca %struct.MDisps*, align 8
  %gridOffset = alloca i32*, align 8
  %i = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %dGridSize = alloca i32, align 4
  %dSkip = alloca i32, align 4
  %totvert = alloca i32, align 4
  %vertCos = alloca [3 x float]*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %high_mmd = alloca %struct.MultiresModifierData, align 8
  %numVerts = alloca i32, align 4
  %mdisp = alloca %struct.MDisps*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %gIndex = alloca i32, align 4
  %grid = alloca %struct.CCGElem*, align 8
  %subgrid = alloca %struct.CCGElem*, align 8
  %dispgrid = alloca [3 x float]*, align 8
  %co = alloca float*, align 8
  %sco = alloca float*, align 8
  %data59 = alloca float*, align 8
  %mat = alloca [3 x [3 x float]], align 16
  %disp = alloca [3 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8848, metadata !DIExpression()), !dbg !8849
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8850, metadata !DIExpression()), !dbg !8851
  store [3 x float]* %smat, [3 x float]** %smat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %smat.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !8854, metadata !DIExpression()), !dbg !8855
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !8855
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %cddm, metadata !8856, metadata !DIExpression()), !dbg !8857
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %cddm, align 8, !dbg !8857
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %subdm, metadata !8858, metadata !DIExpression()), !dbg !8859
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %subdm, align 8, !dbg !8859
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %gridData, metadata !8860, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %subGridData, metadata !8862, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %dm_key, metadata !8864, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %subdm_key, metadata !8866, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8868, metadata !DIExpression()), !dbg !8869
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8870
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !8871
  %1 = load i8*, i8** %data, align 8, !dbg !8871
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !8872
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !8869
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !8873, metadata !DIExpression()), !dbg !8874
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8875
  %mpoly1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 7, !dbg !8876
  %4 = load %struct.MPoly*, %struct.MPoly** %mpoly1, align 8, !dbg !8876
  store %struct.MPoly* %4, %struct.MPoly** %mpoly, align 8, !dbg !8874
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !8877, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.declare(metadata i32** %gridOffset, metadata !8879, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !8883, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.declare(metadata i32* %dGridSize, metadata !8885, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.declare(metadata i32* %dSkip, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !8889, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos, metadata !8891, metadata !DIExpression()), !dbg !8892
  store [3 x float]* null, [3 x float]** %vertCos, align 8, !dbg !8892
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !8893, metadata !DIExpression()), !dbg !8894
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8895
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8896
  %call = call %struct.MultiresModifierData* @get_multires_modifier(%struct.Scene* %5, %struct.Object* %6, i8 zeroext 1), !dbg !8897
  store %struct.MultiresModifierData* %call, %struct.MultiresModifierData** %mmd, align 8, !dbg !8894
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData* %high_mmd, metadata !8898, metadata !DIExpression()), !dbg !8899
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8900
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 25, !dbg !8901
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8902
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 0, !dbg !8903
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8904
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 31, !dbg !8905
  %10 = load i32, i32* %totloop, align 4, !dbg !8905
  call void @CustomData_external_read(%struct.CustomData* %ldata, %struct.ID* %id, i64 524288, i32 %10), !dbg !8906
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8907
  %ldata2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 25, !dbg !8908
  %call3 = call i8* @CustomData_get_layer(%struct.CustomData* %ldata2, i32 19), !dbg !8909
  %12 = bitcast i8* %call3 to %struct.MDisps*, !dbg !8909
  store %struct.MDisps* %12, %struct.MDisps** %mdisps, align 8, !dbg !8910
  %13 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !8911
  %tobool = icmp ne %struct.MDisps* %13, null, !dbg !8911
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8913

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !8914
  %tobool4 = icmp ne %struct.MultiresModifierData* %14, null, !dbg !8914
  br i1 %tobool4, label %lor.lhs.false5, label %if.then, !dbg !8915

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %15 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !8916
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %15, i32 0, i32 4, !dbg !8917
  %16 = load i8, i8* %totlvl, align 1, !dbg !8917
  %tobool6 = icmp ne i8 %16, 0, !dbg !8916
  br i1 %tobool6, label %if.end, label %if.then, !dbg !8918

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  br label %return, !dbg !8919

if.end:                                           ; preds = %lor.lhs.false5
  %17 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !8920
  %18 = bitcast %struct.MultiresModifierData* %high_mmd to i8*, !dbg !8921
  %19 = bitcast %struct.MultiresModifierData* %17 to i8*, !dbg !8921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 120, i1 false), !dbg !8921
  %totlvl7 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %high_mmd, i32 0, i32 4, !dbg !8922
  %20 = load i8, i8* %totlvl7, align 1, !dbg !8922
  %lvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %high_mmd, i32 0, i32 1, !dbg !8923
  store i8 %20, i8* %lvl, align 8, !dbg !8924
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8925
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8926
  %call8 = call %struct.DerivedMesh* @get_multires_dm(%struct.Scene* %21, %struct.MultiresModifierData* %high_mmd, %struct.Object* %22), !dbg !8927
  store %struct.DerivedMesh* %call8, %struct.DerivedMesh** %subdm, align 8, !dbg !8928
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8929
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8930
  %25 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !8931
  %call9 = call %struct.DerivedMesh* @mesh_get_derived_deform(%struct.Scene* %23, %struct.Object* %24, i64 %25), !dbg !8932
  store %struct.DerivedMesh* %call9, %struct.DerivedMesh** %cddm, align 8, !dbg !8933
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !8934
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 23, !dbg !8935
  %27 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !8935
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !8936
  %call10 = call i32 %27(%struct.DerivedMesh* %28), !dbg !8934
  store i32 %call10, i32* %totvert, align 4, !dbg !8937
  %29 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8938
  %30 = load i32, i32* %totvert, align 4, !dbg !8939
  %conv = sext i32 %30 to i64, !dbg !8939
  %mul = mul i64 12, %conv, !dbg !8940
  %call11 = call i8* %29(i64 %mul, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0)), !dbg !8938
  %31 = bitcast i8* %call11 to [3 x float]*, !dbg !8938
  store [3 x float]* %31, [3 x float]** %vertCos, align 8, !dbg !8941
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !8942
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %32, i32 0, i32 77, !dbg !8943
  %33 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !8943
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !8944
  %35 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !8945
  call void %33(%struct.DerivedMesh* %34, [3 x float]* %35), !dbg !8942
  store i32 0, i32* %i, align 4, !dbg !8946
  br label %for.cond, !dbg !8948

for.cond:                                         ; preds = %for.inc, %if.end
  %36 = load i32, i32* %i, align 4, !dbg !8949
  %37 = load i32, i32* %totvert, align 4, !dbg !8951
  %cmp = icmp slt i32 %36, %37, !dbg !8952
  br i1 %cmp, label %for.body, label %for.end, !dbg !8953

for.body:                                         ; preds = %for.cond
  %38 = load [3 x float]*, [3 x float]** %smat.addr, align 8, !dbg !8954
  %39 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !8955
  %40 = load i32, i32* %i, align 4, !dbg !8956
  %idxprom = sext i32 %40 to i64, !dbg !8955
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %39, i64 %idxprom, !dbg !8955
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !8955
  call void @mul_m3_v3([3 x float]* %38, float* %arraydecay), !dbg !8957
  br label %for.inc, !dbg !8957

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !8958
  %inc = add nsw i32 %41, 1, !dbg !8958
  store i32 %inc, i32* %i, align 4, !dbg !8958
  br label %for.cond, !dbg !8959, !llvm.loop !8960

for.end:                                          ; preds = %for.cond
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !8962
  %43 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !8963
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %42, [3 x float]* %43), !dbg !8964
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8965
  %45 = load [3 x float]*, [3 x float]** %vertCos, align 8, !dbg !8966
  %46 = bitcast [3 x float]* %45 to i8*, !dbg !8966
  call void %44(i8* %46), !dbg !8965
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8967
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !8968
  %totlvl13 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %high_mmd, i32 0, i32 4, !dbg !8969
  %49 = load i8, i8* %totlvl13, align 1, !dbg !8969
  %conv14 = zext i8 %49 to i32, !dbg !8970
  %simple = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %high_mmd, i32 0, i32 5, !dbg !8971
  %50 = load i8, i8* %simple, align 4, !dbg !8971
  %conv15 = zext i8 %50 to i32, !dbg !8972
  %51 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !8973
  %flags = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %51, i32 0, i32 6, !dbg !8974
  %52 = load i8, i8* %flags, align 1, !dbg !8974
  %conv16 = zext i8 %52 to i32, !dbg !8973
  %and = and i32 %conv16, 2, !dbg !8975
  %call17 = call %struct.DerivedMesh* @subsurf_dm_create_local(%struct.Object* %47, %struct.DerivedMesh* %48, i32 %conv14, i32 %conv15, i32 0, i32 %and, i32 0), !dbg !8976
  store %struct.DerivedMesh* %call17, %struct.DerivedMesh** %dm, align 8, !dbg !8977
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !8978
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %53, i32 0, i32 95, !dbg !8979
  %54 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !8979
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cddm, align 8, !dbg !8980
  call void %54(%struct.DerivedMesh* %55), !dbg !8978
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8981
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %56, i32 0, i32 64, !dbg !8982
  %57 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !8982
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8983
  %call18 = call i32 %57(%struct.DerivedMesh* %58), !dbg !8981
  store i32 %call18, i32* %gridSize, align 4, !dbg !8984
  %59 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8985
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %59, i32 0, i32 65, !dbg !8986
  %60 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !8986
  %61 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8987
  %call19 = call %struct.CCGElem** %60(%struct.DerivedMesh* %61), !dbg !8985
  store %struct.CCGElem** %call19, %struct.CCGElem*** %gridData, align 8, !dbg !8988
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8989
  %getGridOffset = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %62, i32 0, i32 67, !dbg !8990
  %63 = load i32* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)** %getGridOffset, align 8, !dbg !8990
  %64 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8991
  %call20 = call i32* %63(%struct.DerivedMesh* %64), !dbg !8989
  store i32* %call20, i32** %gridOffset, align 8, !dbg !8992
  %65 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8993
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %65, i32 0, i32 68, !dbg !8994
  %66 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !8994
  %67 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8995
  call void %66(%struct.DerivedMesh* %67, %struct.CCGKey* %dm_key), !dbg !8993
  %68 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !8996
  %getGridData21 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %68, i32 0, i32 65, !dbg !8997
  %69 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData21, align 8, !dbg !8997
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !8998
  %call22 = call %struct.CCGElem** %69(%struct.DerivedMesh* %70), !dbg !8996
  store %struct.CCGElem** %call22, %struct.CCGElem*** %subGridData, align 8, !dbg !8999
  %71 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !9000
  %getGridKey23 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %71, i32 0, i32 68, !dbg !9001
  %72 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey23, align 8, !dbg !9001
  %73 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !9002
  call void %72(%struct.DerivedMesh* %73, %struct.CCGKey* %subdm_key), !dbg !9000
  %totlvl24 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %high_mmd, i32 0, i32 4, !dbg !9003
  %74 = load i8, i8* %totlvl24, align 1, !dbg !9003
  %idxprom25 = zext i8 %74 to i64, !dbg !9004
  %arrayidx26 = getelementptr inbounds [14 x i32], [14 x i32]* @multires_side_tot, i64 0, i64 %idxprom25, !dbg !9004
  %75 = load i32, i32* %arrayidx26, align 4, !dbg !9004
  store i32 %75, i32* %dGridSize, align 4, !dbg !9005
  %76 = load i32, i32* %dGridSize, align 4, !dbg !9006
  %sub = sub nsw i32 %76, 1, !dbg !9007
  %77 = load i32, i32* %gridSize, align 4, !dbg !9008
  %sub27 = sub nsw i32 %77, 1, !dbg !9009
  %div = sdiv i32 %sub, %sub27, !dbg !9010
  store i32 %div, i32* %dSkip, align 4, !dbg !9011
  store i32 0, i32* %i, align 4, !dbg !9012
  br label %for.cond28, !dbg !9014

for.cond28:                                       ; preds = %for.inc82, %for.end
  %78 = load i32, i32* %i, align 4, !dbg !9015
  %79 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !9017
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %79, i32 0, i32 30, !dbg !9018
  %80 = load i32, i32* %totpoly, align 8, !dbg !9018
  %cmp29 = icmp slt i32 %78, %80, !dbg !9019
  br i1 %cmp29, label %for.body31, label %for.end84, !dbg !9020

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !9021, metadata !DIExpression()), !dbg !9023
  %81 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !9024
  %82 = load i32, i32* %i, align 4, !dbg !9025
  %idxprom32 = sext i32 %82 to i64, !dbg !9024
  %arrayidx33 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %81, i64 %idxprom32, !dbg !9024
  %totloop34 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx33, i32 0, i32 1, !dbg !9026
  %83 = load i32, i32* %totloop34, align 4, !dbg !9026
  store i32 %83, i32* %numVerts, align 4, !dbg !9023
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisp, metadata !9027, metadata !DIExpression()), !dbg !9028
  %84 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !9029
  %85 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !9030
  %86 = load i32, i32* %i, align 4, !dbg !9031
  %idxprom35 = sext i32 %86 to i64, !dbg !9030
  %arrayidx36 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %85, i64 %idxprom35, !dbg !9030
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx36, i32 0, i32 0, !dbg !9032
  %87 = load i32, i32* %loopstart, align 4, !dbg !9032
  %idxprom37 = sext i32 %87 to i64, !dbg !9029
  %arrayidx38 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %84, i64 %idxprom37, !dbg !9029
  store %struct.MDisps* %arrayidx38, %struct.MDisps** %mdisp, align 8, !dbg !9028
  call void @llvm.dbg.declare(metadata i32* %S, metadata !9033, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9035, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9037, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.declare(metadata i32* %gIndex, metadata !9039, metadata !DIExpression()), !dbg !9040
  %88 = load i32*, i32** %gridOffset, align 8, !dbg !9041
  %89 = load i32, i32* %i, align 4, !dbg !9042
  %idxprom39 = sext i32 %89 to i64, !dbg !9041
  %arrayidx40 = getelementptr inbounds i32, i32* %88, i64 %idxprom39, !dbg !9041
  %90 = load i32, i32* %arrayidx40, align 4, !dbg !9041
  store i32 %90, i32* %gIndex, align 4, !dbg !9040
  store i32 0, i32* %S, align 4, !dbg !9043
  br label %for.cond41, !dbg !9045

for.cond41:                                       ; preds = %for.inc78, %for.body31
  %91 = load i32, i32* %S, align 4, !dbg !9046
  %92 = load i32, i32* %numVerts, align 4, !dbg !9048
  %cmp42 = icmp slt i32 %91, %92, !dbg !9049
  br i1 %cmp42, label %for.body44, label %for.end81, !dbg !9050

for.body44:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %grid, metadata !9051, metadata !DIExpression()), !dbg !9053
  %93 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !9054
  %94 = load i32, i32* %gIndex, align 4, !dbg !9055
  %idxprom45 = sext i32 %94 to i64, !dbg !9054
  %arrayidx46 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %93, i64 %idxprom45, !dbg !9054
  %95 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx46, align 8, !dbg !9054
  store %struct.CCGElem* %95, %struct.CCGElem** %grid, align 8, !dbg !9053
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %subgrid, metadata !9056, metadata !DIExpression()), !dbg !9057
  %96 = load %struct.CCGElem**, %struct.CCGElem*** %subGridData, align 8, !dbg !9058
  %97 = load i32, i32* %gIndex, align 4, !dbg !9059
  %idxprom47 = sext i32 %97 to i64, !dbg !9058
  %arrayidx48 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %96, i64 %idxprom47, !dbg !9058
  %98 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx48, align 8, !dbg !9058
  store %struct.CCGElem* %98, %struct.CCGElem** %subgrid, align 8, !dbg !9057
  call void @llvm.dbg.declare(metadata [3 x float]** %dispgrid, metadata !9060, metadata !DIExpression()), !dbg !9061
  %99 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9062
  %disps = getelementptr inbounds %struct.MDisps, %struct.MDisps* %99, i32 0, i32 2, !dbg !9063
  %100 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !9063
  store [3 x float]* %100, [3 x float]** %dispgrid, align 8, !dbg !9061
  store i32 0, i32* %y, align 4, !dbg !9064
  br label %for.cond49, !dbg !9066

for.cond49:                                       ; preds = %for.inc75, %for.body44
  %101 = load i32, i32* %y, align 4, !dbg !9067
  %102 = load i32, i32* %gridSize, align 4, !dbg !9069
  %cmp50 = icmp slt i32 %101, %102, !dbg !9070
  br i1 %cmp50, label %for.body52, label %for.end77, !dbg !9071

for.body52:                                       ; preds = %for.cond49
  store i32 0, i32* %x, align 4, !dbg !9072
  br label %for.cond53, !dbg !9075

for.cond53:                                       ; preds = %for.inc72, %for.body52
  %103 = load i32, i32* %x, align 4, !dbg !9076
  %104 = load i32, i32* %gridSize, align 4, !dbg !9078
  %cmp54 = icmp slt i32 %103, %104, !dbg !9079
  br i1 %cmp54, label %for.body56, label %for.end74, !dbg !9080

for.body56:                                       ; preds = %for.cond53
  call void @llvm.dbg.declare(metadata float** %co, metadata !9081, metadata !DIExpression()), !dbg !9083
  %105 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !9084
  %106 = load i32, i32* %x, align 4, !dbg !9085
  %107 = load i32, i32* %y, align 4, !dbg !9086
  %call57 = call float* @CCG_grid_elem_co(%struct.CCGKey* %dm_key, %struct.CCGElem* %105, i32 %106, i32 %107), !dbg !9087
  store float* %call57, float** %co, align 8, !dbg !9083
  call void @llvm.dbg.declare(metadata float** %sco, metadata !9088, metadata !DIExpression()), !dbg !9089
  %108 = load %struct.CCGElem*, %struct.CCGElem** %subgrid, align 8, !dbg !9090
  %109 = load i32, i32* %x, align 4, !dbg !9091
  %110 = load i32, i32* %y, align 4, !dbg !9092
  %call58 = call float* @CCG_grid_elem_co(%struct.CCGKey* %subdm_key, %struct.CCGElem* %108, i32 %109, i32 %110), !dbg !9093
  store float* %call58, float** %sco, align 8, !dbg !9089
  call void @llvm.dbg.declare(metadata float** %data59, metadata !9094, metadata !DIExpression()), !dbg !9095
  %111 = load [3 x float]*, [3 x float]** %dispgrid, align 8, !dbg !9096
  %112 = load i32, i32* %dGridSize, align 4, !dbg !9097
  %113 = load i32, i32* %y, align 4, !dbg !9098
  %mul60 = mul nsw i32 %112, %113, !dbg !9099
  %114 = load i32, i32* %dSkip, align 4, !dbg !9100
  %mul61 = mul nsw i32 %mul60, %114, !dbg !9101
  %115 = load i32, i32* %x, align 4, !dbg !9102
  %116 = load i32, i32* %dSkip, align 4, !dbg !9103
  %mul62 = mul nsw i32 %115, %116, !dbg !9104
  %add = add nsw i32 %mul61, %mul62, !dbg !9105
  %idxprom63 = sext i32 %add to i64, !dbg !9096
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %111, i64 %idxprom63, !dbg !9096
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 0, !dbg !9096
  store float* %arraydecay65, float** %data59, align 8, !dbg !9095
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !9106, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.declare(metadata [3 x float]* %disp, metadata !9108, metadata !DIExpression()), !dbg !9109
  %arraydecay66 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !9110
  %117 = load i32, i32* %x, align 4, !dbg !9111
  %118 = load i32, i32* %y, align 4, !dbg !9112
  %119 = load %struct.CCGElem*, %struct.CCGElem** %grid, align 8, !dbg !9113
  call void @grid_tangent_matrix([3 x float]* %arraydecay66, %struct.CCGKey* %dm_key, i32 %117, i32 %118, %struct.CCGElem* %119), !dbg !9114
  %120 = load [3 x float]*, [3 x float]** %smat.addr, align 8, !dbg !9115
  %121 = load float*, float** %sco, align 8, !dbg !9116
  call void @mul_m3_v3([3 x float]* %120, float* %121), !dbg !9117
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !9118
  %122 = load float*, float** %sco, align 8, !dbg !9119
  %123 = load float*, float** %co, align 8, !dbg !9120
  call void @sub_v3_v3v3(float* %arraydecay67, float* %122, float* %123), !dbg !9121
  %arraydecay68 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !9122
  %call69 = call zeroext i8 @invert_m3([3 x float]* %arraydecay68), !dbg !9123
  %124 = load float*, float** %data59, align 8, !dbg !9124
  %arraydecay70 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !9125
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %disp, i64 0, i64 0, !dbg !9126
  call void @mul_v3_m3v3(float* %124, [3 x float]* %arraydecay70, float* %arraydecay71), !dbg !9127
  br label %for.inc72, !dbg !9128

for.inc72:                                        ; preds = %for.body56
  %125 = load i32, i32* %x, align 4, !dbg !9129
  %inc73 = add nsw i32 %125, 1, !dbg !9129
  store i32 %inc73, i32* %x, align 4, !dbg !9129
  br label %for.cond53, !dbg !9130, !llvm.loop !9131

for.end74:                                        ; preds = %for.cond53
  br label %for.inc75, !dbg !9133

for.inc75:                                        ; preds = %for.end74
  %126 = load i32, i32* %y, align 4, !dbg !9134
  %inc76 = add nsw i32 %126, 1, !dbg !9134
  store i32 %inc76, i32* %y, align 4, !dbg !9134
  br label %for.cond49, !dbg !9135, !llvm.loop !9136

for.end77:                                        ; preds = %for.cond49
  br label %for.inc78, !dbg !9138

for.inc78:                                        ; preds = %for.end77
  %127 = load i32, i32* %S, align 4, !dbg !9139
  %inc79 = add nsw i32 %127, 1, !dbg !9139
  store i32 %inc79, i32* %S, align 4, !dbg !9139
  %128 = load i32, i32* %gIndex, align 4, !dbg !9140
  %inc80 = add nsw i32 %128, 1, !dbg !9140
  store i32 %inc80, i32* %gIndex, align 4, !dbg !9140
  %129 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9141
  %incdec.ptr = getelementptr inbounds %struct.MDisps, %struct.MDisps* %129, i32 1, !dbg !9141
  store %struct.MDisps* %incdec.ptr, %struct.MDisps** %mdisp, align 8, !dbg !9141
  br label %for.cond41, !dbg !9142, !llvm.loop !9143

for.end81:                                        ; preds = %for.cond41
  br label %for.inc82, !dbg !9145

for.inc82:                                        ; preds = %for.end81
  %130 = load i32, i32* %i, align 4, !dbg !9146
  %inc83 = add nsw i32 %130, 1, !dbg !9146
  store i32 %inc83, i32* %i, align 4, !dbg !9146
  br label %for.cond28, !dbg !9147, !llvm.loop !9148

for.end84:                                        ; preds = %for.cond28
  %131 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9150
  %release85 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %131, i32 0, i32 95, !dbg !9151
  %132 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release85, align 8, !dbg !9151
  %133 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9152
  call void %132(%struct.DerivedMesh* %133), !dbg !9150
  %134 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !9153
  %release86 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %134, i32 0, i32 95, !dbg !9154
  %135 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release86, align 8, !dbg !9154
  %136 = load %struct.DerivedMesh*, %struct.DerivedMesh** %subdm, align 8, !dbg !9155
  call void %135(%struct.DerivedMesh* %136), !dbg !9153
  br label %return, !dbg !9156

return:                                           ; preds = %for.end84, %if.then
  ret void, !dbg !9156
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @multiresModifier_prepare_join(%struct.Scene* %scene, %struct.Object* %ob, %struct.Object* %to_ob) #0 !dbg !9157 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %to_ob.addr = alloca %struct.Object*, align 8
  %smat = alloca [3 x [3 x float]], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %mat = alloca [3 x [3 x float]], align 16
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9160, metadata !DIExpression()), !dbg !9161
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9162, metadata !DIExpression()), !dbg !9163
  store %struct.Object* %to_ob, %struct.Object** %to_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %to_ob.addr, metadata !9164, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !9166, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !9168, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !9170, metadata !DIExpression()), !dbg !9171
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9172
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9173
  %2 = load %struct.Object*, %struct.Object** %to_ob.addr, align 8, !dbg !9174
  call void @multires_sync_levels(%struct.Scene* %0, %struct.Object* %1, %struct.Object* %2), !dbg !9175
  %3 = load %struct.Object*, %struct.Object** %to_ob.addr, align 8, !dbg !9176
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9177
  call void @BKE_object_scale_to_mat3(%struct.Object* %3, [3 x float]* %arraydecay), !dbg !9178
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9179
  %call = call zeroext i8 @invert_m3([3 x float]* %arraydecay1), !dbg !9180
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9181
  %arraydecay2 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !9182
  call void @BKE_object_scale_to_mat3(%struct.Object* %4, [3 x float]* %arraydecay2), !dbg !9183
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !9184
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !9185
  %arraydecay5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !9186
  call void @mul_m3_m3m3([3 x float]* %arraydecay3, [3 x float]* %arraydecay4, [3 x float]* %arraydecay5), !dbg !9187
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9188
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9189
  %arraydecay6 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !9190
  call void @multires_apply_smat(%struct.Scene* %5, %struct.Object* %6, [3 x float]* %arraydecay6), !dbg !9191
  ret void, !dbg !9192
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_sync_levels(%struct.Scene* %scene, %struct.Object* %ob, %struct.Object* %to_ob) #0 !dbg !9193 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %to_ob.addr = alloca %struct.Object*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  %to_mmd = alloca %struct.MultiresModifierData*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9194, metadata !DIExpression()), !dbg !9195
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9196, metadata !DIExpression()), !dbg !9197
  store %struct.Object* %to_ob, %struct.Object** %to_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %to_ob.addr, metadata !9198, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !9200, metadata !DIExpression()), !dbg !9201
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9202
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9203
  %call = call %struct.MultiresModifierData* @get_multires_modifier(%struct.Scene* %0, %struct.Object* %1, i8 zeroext 1), !dbg !9204
  store %struct.MultiresModifierData* %call, %struct.MultiresModifierData** %mmd, align 8, !dbg !9201
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %to_mmd, metadata !9205, metadata !DIExpression()), !dbg !9206
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9207
  %3 = load %struct.Object*, %struct.Object** %to_ob.addr, align 8, !dbg !9208
  %call1 = call %struct.MultiresModifierData* @get_multires_modifier(%struct.Scene* %2, %struct.Object* %3, i8 zeroext 1), !dbg !9209
  store %struct.MultiresModifierData* %call1, %struct.MultiresModifierData** %to_mmd, align 8, !dbg !9206
  %4 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !9210
  %tobool = icmp ne %struct.MultiresModifierData* %4, null, !dbg !9210
  br i1 %tobool, label %if.end, label %if.then, !dbg !9212

if.then:                                          ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9213
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !9215
  %6 = load i8*, i8** %data, align 8, !dbg !9215
  %7 = bitcast i8* %6 to %struct.Mesh*, !dbg !9213
  call void @multires_customdata_delete(%struct.Mesh* %7), !dbg !9216
  br label %if.end, !dbg !9217

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !9218
  %tobool2 = icmp ne %struct.MultiresModifierData* %8, null, !dbg !9218
  br i1 %tobool2, label %land.lhs.true, label %if.end15, !dbg !9220

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %to_mmd, align 8, !dbg !9221
  %tobool3 = icmp ne %struct.MultiresModifierData* %9, null, !dbg !9221
  br i1 %tobool3, label %if.then4, label %if.end15, !dbg !9222

if.then4:                                         ; preds = %land.lhs.true
  %10 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !9223
  %totlvl = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %10, i32 0, i32 4, !dbg !9226
  %11 = load i8, i8* %totlvl, align 1, !dbg !9226
  %conv = zext i8 %11 to i32, !dbg !9223
  %12 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %to_mmd, align 8, !dbg !9227
  %totlvl5 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %12, i32 0, i32 4, !dbg !9228
  %13 = load i8, i8* %totlvl5, align 1, !dbg !9228
  %conv6 = zext i8 %13 to i32, !dbg !9227
  %cmp = icmp sgt i32 %conv, %conv6, !dbg !9229
  br i1 %cmp, label %if.then8, label %if.else, !dbg !9230

if.then8:                                         ; preds = %if.then4
  %14 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !9231
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9232
  %16 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %to_mmd, align 8, !dbg !9233
  %totlvl9 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %16, i32 0, i32 4, !dbg !9234
  %17 = load i8, i8* %totlvl9, align 1, !dbg !9234
  %conv10 = zext i8 %17 to i32, !dbg !9233
  call void @multires_del_higher(%struct.MultiresModifierData* %14, %struct.Object* %15, i32 %conv10), !dbg !9235
  br label %if.end14, !dbg !9235

if.else:                                          ; preds = %if.then4
  %18 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !9236
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9237
  %20 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %to_mmd, align 8, !dbg !9238
  %totlvl11 = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %20, i32 0, i32 4, !dbg !9239
  %21 = load i8, i8* %totlvl11, align 1, !dbg !9239
  %conv12 = zext i8 %21 to i32, !dbg !9238
  %22 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !9240
  %simple = getelementptr inbounds %struct.MultiresModifierData, %struct.MultiresModifierData* %22, i32 0, i32 5, !dbg !9241
  %23 = load i8, i8* %simple, align 4, !dbg !9241
  %conv13 = zext i8 %23 to i32, !dbg !9240
  call void @multires_subdivide(%struct.MultiresModifierData* %18, %struct.Object* %19, i32 %conv12, i32 0, i32 %conv13), !dbg !9242
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then8
  br label %if.end15, !dbg !9243

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %if.end
  ret void, !dbg !9244
}

declare dso_local void @mul_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @multires_topology_changed(%struct.Mesh* %me) #0 !dbg !9245 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %mdisp = alloca %struct.MDisps*, align 8
  %cur = alloca %struct.MDisps*, align 8
  %i = alloca i32, align 4
  %grid = alloca i32, align 4
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !9246, metadata !DIExpression()), !dbg !9247
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisp, metadata !9248, metadata !DIExpression()), !dbg !9249
  store %struct.MDisps* null, %struct.MDisps** %mdisp, align 8, !dbg !9249
  call void @llvm.dbg.declare(metadata %struct.MDisps** %cur, metadata !9250, metadata !DIExpression()), !dbg !9251
  store %struct.MDisps* null, %struct.MDisps** %cur, align 8, !dbg !9251
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9252, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.declare(metadata i32* %grid, metadata !9254, metadata !DIExpression()), !dbg !9255
  store i32 0, i32* %grid, align 4, !dbg !9255
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9256
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 25, !dbg !9257
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9258
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 0, !dbg !9259
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9260
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %2, i32 0, i32 31, !dbg !9261
  %3 = load i32, i32* %totloop, align 4, !dbg !9261
  call void @CustomData_external_read(%struct.CustomData* %ldata, %struct.ID* %id, i64 524288, i32 %3), !dbg !9262
  %4 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9263
  %ldata1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 25, !dbg !9264
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %ldata1, i32 19), !dbg !9265
  %5 = bitcast i8* %call to %struct.MDisps*, !dbg !9265
  store %struct.MDisps* %5, %struct.MDisps** %mdisp, align 8, !dbg !9266
  %6 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9267
  %tobool = icmp ne %struct.MDisps* %6, null, !dbg !9267
  br i1 %tobool, label %if.end, label %if.then, !dbg !9269

if.then:                                          ; preds = %entry
  br label %for.end27, !dbg !9270

if.end:                                           ; preds = %entry
  %7 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9271
  store %struct.MDisps* %7, %struct.MDisps** %cur, align 8, !dbg !9272
  store i32 0, i32* %i, align 4, !dbg !9273
  br label %for.cond, !dbg !9275

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !9276
  %9 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9278
  %totloop2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 31, !dbg !9279
  %10 = load i32, i32* %totloop2, align 4, !dbg !9279
  %cmp = icmp slt i32 %8, %10, !dbg !9280
  br i1 %cmp, label %for.body, label %for.end, !dbg !9281

for.body:                                         ; preds = %for.cond
  %11 = load %struct.MDisps*, %struct.MDisps** %cur, align 8, !dbg !9282
  %totdisp = getelementptr inbounds %struct.MDisps, %struct.MDisps* %11, i32 0, i32 0, !dbg !9285
  %12 = load i32, i32* %totdisp, align 8, !dbg !9285
  %tobool3 = icmp ne i32 %12, 0, !dbg !9282
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !9286

if.then4:                                         ; preds = %for.body
  %13 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9287
  %totdisp5 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %13, i32 0, i32 0, !dbg !9289
  %14 = load i32, i32* %totdisp5, align 8, !dbg !9289
  store i32 %14, i32* %grid, align 4, !dbg !9290
  br label %for.end, !dbg !9291

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !9292

for.inc:                                          ; preds = %if.end6
  %15 = load i32, i32* %i, align 4, !dbg !9293
  %inc = add nsw i32 %15, 1, !dbg !9293
  store i32 %inc, i32* %i, align 4, !dbg !9293
  %16 = load %struct.MDisps*, %struct.MDisps** %cur, align 8, !dbg !9294
  %incdec.ptr = getelementptr inbounds %struct.MDisps, %struct.MDisps* %16, i32 1, !dbg !9294
  store %struct.MDisps* %incdec.ptr, %struct.MDisps** %cur, align 8, !dbg !9294
  br label %for.cond, !dbg !9295, !llvm.loop !9296

for.end:                                          ; preds = %if.then4, %for.cond
  store i32 0, i32* %i, align 4, !dbg !9298
  br label %for.cond7, !dbg !9300

for.cond7:                                        ; preds = %for.inc24, %for.end
  %17 = load i32, i32* %i, align 4, !dbg !9301
  %18 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9303
  %totloop8 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %18, i32 0, i32 31, !dbg !9304
  %19 = load i32, i32* %totloop8, align 4, !dbg !9304
  %cmp9 = icmp slt i32 %17, %19, !dbg !9305
  br i1 %cmp9, label %for.body10, label %for.end27, !dbg !9306

for.body10:                                       ; preds = %for.cond7
  %20 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9307
  %totdisp11 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %20, i32 0, i32 0, !dbg !9310
  %21 = load i32, i32* %totdisp11, align 8, !dbg !9310
  %tobool12 = icmp ne i32 %21, 0, !dbg !9307
  br i1 %tobool12, label %lor.lhs.false, label %if.then14, !dbg !9311

lor.lhs.false:                                    ; preds = %for.body10
  %22 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9312
  %disps = getelementptr inbounds %struct.MDisps, %struct.MDisps* %22, i32 0, i32 2, !dbg !9313
  %23 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !9313
  %tobool13 = icmp ne [3 x float]* %23, null, !dbg !9312
  br i1 %tobool13, label %if.end23, label %if.then14, !dbg !9314

if.then14:                                        ; preds = %lor.lhs.false, %for.body10
  %24 = load i32, i32* %grid, align 4, !dbg !9315
  %tobool15 = icmp ne i32 %24, 0, !dbg !9315
  br i1 %tobool15, label %if.then16, label %if.end22, !dbg !9318

if.then16:                                        ; preds = %if.then14
  %25 = load i32, i32* %grid, align 4, !dbg !9319
  %26 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9321
  %totdisp17 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %26, i32 0, i32 0, !dbg !9322
  store i32 %25, i32* %totdisp17, align 8, !dbg !9323
  %27 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9324
  %28 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9325
  %totdisp18 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %28, i32 0, i32 0, !dbg !9326
  %29 = load i32, i32* %totdisp18, align 8, !dbg !9326
  %mul = mul nsw i32 3, %29, !dbg !9327
  %conv = sext i32 %mul to i64, !dbg !9328
  %mul19 = mul i64 %conv, 4, !dbg !9329
  %call20 = call i8* %27(i64 %mul19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)), !dbg !9324
  %30 = bitcast i8* %call20 to [3 x float]*, !dbg !9324
  %31 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9330
  %disps21 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %31, i32 0, i32 2, !dbg !9331
  store [3 x float]* %30, [3 x float]** %disps21, align 8, !dbg !9332
  br label %if.end22, !dbg !9333

if.end22:                                         ; preds = %if.then16, %if.then14
  br label %for.inc24, !dbg !9334

if.end23:                                         ; preds = %lor.lhs.false
  br label %for.inc24, !dbg !9335

for.inc24:                                        ; preds = %if.end23, %if.end22
  %32 = load i32, i32* %i, align 4, !dbg !9336
  %inc25 = add nsw i32 %32, 1, !dbg !9336
  store i32 %inc25, i32* %i, align 4, !dbg !9336
  %33 = load %struct.MDisps*, %struct.MDisps** %mdisp, align 8, !dbg !9337
  %incdec.ptr26 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %33, i32 1, !dbg !9337
  store %struct.MDisps* %incdec.ptr26, %struct.MDisps** %mdisp, align 8, !dbg !9337
  br label %for.cond7, !dbg !9338, !llvm.loop !9339

for.end27:                                        ; preds = %if.then, %for.cond7
  ret void, !dbg !9341
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mdisp_rot_face_to_crn(i32 %corners, i32 %face_side, float %u, float %v, float* %x, float* %y) #0 !dbg !9342 {
entry:
  %corners.addr = alloca i32, align 4
  %face_side.addr = alloca i32, align 4
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %x.addr = alloca float*, align 8
  %y.addr = alloca float*, align 8
  %offset = alloca float, align 4
  %S = alloca i32, align 4
  %grid_size = alloca i32, align 4
  %w = alloca float, align 4
  %W1 = alloca float, align 4
  %W2 = alloca float, align 4
  store i32 %corners, i32* %corners.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %corners.addr, metadata !9345, metadata !DIExpression()), !dbg !9346
  store i32 %face_side, i32* %face_side.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_side.addr, metadata !9347, metadata !DIExpression()), !dbg !9348
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !9349, metadata !DIExpression()), !dbg !9350
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !9351, metadata !DIExpression()), !dbg !9352
  store float* %x, float** %x.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x.addr, metadata !9353, metadata !DIExpression()), !dbg !9354
  store float* %y, float** %y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %y.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.declare(metadata float* %offset, metadata !9357, metadata !DIExpression()), !dbg !9358
  %0 = load i32, i32* %face_side.addr, align 4, !dbg !9359
  %conv = sitofp i32 %0 to float, !dbg !9359
  %mul = fmul float %conv, 5.000000e-01, !dbg !9360
  %sub = fsub float %mul, 5.000000e-01, !dbg !9361
  store float %sub, float* %offset, align 4, !dbg !9358
  call void @llvm.dbg.declare(metadata i32* %S, metadata !9362, metadata !DIExpression()), !dbg !9363
  store i32 0, i32* %S, align 4, !dbg !9363
  %1 = load i32, i32* %corners.addr, align 4, !dbg !9364
  %cmp = icmp eq i32 %1, 4, !dbg !9366
  br i1 %cmp, label %if.then, label %if.else57, !dbg !9367

if.then:                                          ; preds = %entry
  %2 = load float, float* %u.addr, align 4, !dbg !9368
  %3 = load float, float* %offset, align 4, !dbg !9371
  %cmp2 = fcmp ole float %2, %3, !dbg !9372
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !9373

land.lhs.true:                                    ; preds = %if.then
  %4 = load float, float* %v.addr, align 4, !dbg !9374
  %5 = load float, float* %offset, align 4, !dbg !9375
  %cmp4 = fcmp ole float %4, %5, !dbg !9376
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !9377

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %S, align 4, !dbg !9378
  br label %if.end29, !dbg !9379

if.else:                                          ; preds = %land.lhs.true, %if.then
  %6 = load float, float* %u.addr, align 4, !dbg !9380
  %7 = load float, float* %offset, align 4, !dbg !9382
  %cmp7 = fcmp ogt float %6, %7, !dbg !9383
  br i1 %cmp7, label %land.lhs.true9, label %if.else13, !dbg !9384

land.lhs.true9:                                   ; preds = %if.else
  %8 = load float, float* %v.addr, align 4, !dbg !9385
  %9 = load float, float* %offset, align 4, !dbg !9386
  %cmp10 = fcmp ole float %8, %9, !dbg !9387
  br i1 %cmp10, label %if.then12, label %if.else13, !dbg !9388

if.then12:                                        ; preds = %land.lhs.true9
  store i32 1, i32* %S, align 4, !dbg !9389
  br label %if.end28, !dbg !9390

if.else13:                                        ; preds = %land.lhs.true9, %if.else
  %10 = load float, float* %u.addr, align 4, !dbg !9391
  %11 = load float, float* %offset, align 4, !dbg !9393
  %cmp14 = fcmp ogt float %10, %11, !dbg !9394
  br i1 %cmp14, label %land.lhs.true16, label %if.else20, !dbg !9395

land.lhs.true16:                                  ; preds = %if.else13
  %12 = load float, float* %v.addr, align 4, !dbg !9396
  %13 = load float, float* %offset, align 4, !dbg !9397
  %cmp17 = fcmp ogt float %12, %13, !dbg !9398
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !9399

if.then19:                                        ; preds = %land.lhs.true16
  store i32 2, i32* %S, align 4, !dbg !9400
  br label %if.end27, !dbg !9401

if.else20:                                        ; preds = %land.lhs.true16, %if.else13
  %14 = load float, float* %u.addr, align 4, !dbg !9402
  %15 = load float, float* %offset, align 4, !dbg !9404
  %cmp21 = fcmp ole float %14, %15, !dbg !9405
  br i1 %cmp21, label %land.lhs.true23, label %if.end, !dbg !9406

land.lhs.true23:                                  ; preds = %if.else20
  %16 = load float, float* %v.addr, align 4, !dbg !9407
  %17 = load float, float* %offset, align 4, !dbg !9408
  %cmp24 = fcmp oge float %16, %17, !dbg !9409
  br i1 %cmp24, label %if.then26, label %if.end, !dbg !9410

if.then26:                                        ; preds = %land.lhs.true23
  store i32 3, i32* %S, align 4, !dbg !9411
  br label %if.end, !dbg !9412

if.end:                                           ; preds = %if.then26, %land.lhs.true23, %if.else20
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then19
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then12
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then6
  %18 = load i32, i32* %S, align 4, !dbg !9413
  %cmp30 = icmp eq i32 %18, 0, !dbg !9415
  br i1 %cmp30, label %if.then32, label %if.else35, !dbg !9416

if.then32:                                        ; preds = %if.end29
  %19 = load float, float* %offset, align 4, !dbg !9417
  %20 = load float, float* %u.addr, align 4, !dbg !9419
  %sub33 = fsub float %19, %20, !dbg !9420
  %21 = load float*, float** %y.addr, align 8, !dbg !9421
  store float %sub33, float* %21, align 4, !dbg !9422
  %22 = load float, float* %offset, align 4, !dbg !9423
  %23 = load float, float* %v.addr, align 4, !dbg !9424
  %sub34 = fsub float %22, %23, !dbg !9425
  %24 = load float*, float** %x.addr, align 8, !dbg !9426
  store float %sub34, float* %24, align 4, !dbg !9427
  br label %if.end56, !dbg !9428

if.else35:                                        ; preds = %if.end29
  %25 = load i32, i32* %S, align 4, !dbg !9429
  %cmp36 = icmp eq i32 %25, 1, !dbg !9431
  br i1 %cmp36, label %if.then38, label %if.else41, !dbg !9432

if.then38:                                        ; preds = %if.else35
  %26 = load float, float* %u.addr, align 4, !dbg !9433
  %27 = load float, float* %offset, align 4, !dbg !9435
  %sub39 = fsub float %26, %27, !dbg !9436
  %28 = load float*, float** %x.addr, align 8, !dbg !9437
  store float %sub39, float* %28, align 4, !dbg !9438
  %29 = load float, float* %offset, align 4, !dbg !9439
  %30 = load float, float* %v.addr, align 4, !dbg !9440
  %sub40 = fsub float %29, %30, !dbg !9441
  %31 = load float*, float** %y.addr, align 8, !dbg !9442
  store float %sub40, float* %31, align 4, !dbg !9443
  br label %if.end55, !dbg !9444

if.else41:                                        ; preds = %if.else35
  %32 = load i32, i32* %S, align 4, !dbg !9445
  %cmp42 = icmp eq i32 %32, 2, !dbg !9447
  br i1 %cmp42, label %if.then44, label %if.else47, !dbg !9448

if.then44:                                        ; preds = %if.else41
  %33 = load float, float* %u.addr, align 4, !dbg !9449
  %34 = load float, float* %offset, align 4, !dbg !9451
  %sub45 = fsub float %33, %34, !dbg !9452
  %35 = load float*, float** %y.addr, align 8, !dbg !9453
  store float %sub45, float* %35, align 4, !dbg !9454
  %36 = load float, float* %v.addr, align 4, !dbg !9455
  %37 = load float, float* %offset, align 4, !dbg !9456
  %sub46 = fsub float %36, %37, !dbg !9457
  %38 = load float*, float** %x.addr, align 8, !dbg !9458
  store float %sub46, float* %38, align 4, !dbg !9459
  br label %if.end54, !dbg !9460

if.else47:                                        ; preds = %if.else41
  %39 = load i32, i32* %S, align 4, !dbg !9461
  %cmp48 = icmp eq i32 %39, 3, !dbg !9463
  br i1 %cmp48, label %if.then50, label %if.end53, !dbg !9464

if.then50:                                        ; preds = %if.else47
  %40 = load float, float* %offset, align 4, !dbg !9465
  %41 = load float, float* %u.addr, align 4, !dbg !9467
  %sub51 = fsub float %40, %41, !dbg !9468
  %42 = load float*, float** %x.addr, align 8, !dbg !9469
  store float %sub51, float* %42, align 4, !dbg !9470
  %43 = load float, float* %v.addr, align 4, !dbg !9471
  %44 = load float, float* %offset, align 4, !dbg !9472
  %sub52 = fsub float %43, %44, !dbg !9473
  %45 = load float*, float** %y.addr, align 8, !dbg !9474
  store float %sub52, float* %45, align 4, !dbg !9475
  br label %if.end53, !dbg !9476

if.end53:                                         ; preds = %if.then50, %if.else47
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then44
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then38
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then32
  br label %if.end96, !dbg !9477

if.else57:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %grid_size, metadata !9478, metadata !DIExpression()), !dbg !9480
  %46 = load float, float* %offset, align 4, !dbg !9481
  %conv58 = fptosi float %46 to i32, !dbg !9481
  store i32 %conv58, i32* %grid_size, align 4, !dbg !9480
  call void @llvm.dbg.declare(metadata float* %w, metadata !9482, metadata !DIExpression()), !dbg !9483
  %47 = load i32, i32* %face_side.addr, align 4, !dbg !9484
  %sub59 = sub nsw i32 %47, 1, !dbg !9485
  %conv60 = sitofp i32 %sub59 to float, !dbg !9486
  %48 = load float, float* %u.addr, align 4, !dbg !9487
  %sub61 = fsub float %conv60, %48, !dbg !9488
  %49 = load float, float* %v.addr, align 4, !dbg !9489
  %sub62 = fsub float %sub61, %49, !dbg !9490
  store float %sub62, float* %w, align 4, !dbg !9483
  call void @llvm.dbg.declare(metadata float* %W1, metadata !9491, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.declare(metadata float* %W2, metadata !9493, metadata !DIExpression()), !dbg !9494
  %50 = load float, float* %u.addr, align 4, !dbg !9495
  %51 = load float, float* %v.addr, align 4, !dbg !9497
  %cmp63 = fcmp oge float %50, %51, !dbg !9498
  br i1 %cmp63, label %land.lhs.true65, label %if.else69, !dbg !9499

land.lhs.true65:                                  ; preds = %if.else57
  %52 = load float, float* %u.addr, align 4, !dbg !9500
  %53 = load float, float* %w, align 4, !dbg !9501
  %cmp66 = fcmp oge float %52, %53, !dbg !9502
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !9503

if.then68:                                        ; preds = %land.lhs.true65
  store i32 0, i32* %S, align 4, !dbg !9504
  %54 = load float, float* %w, align 4, !dbg !9506
  store float %54, float* %W1, align 4, !dbg !9507
  %55 = load float, float* %v.addr, align 4, !dbg !9508
  store float %55, float* %W2, align 4, !dbg !9509
  br label %if.end78, !dbg !9510

if.else69:                                        ; preds = %land.lhs.true65, %if.else57
  %56 = load float, float* %v.addr, align 4, !dbg !9511
  %57 = load float, float* %u.addr, align 4, !dbg !9513
  %cmp70 = fcmp oge float %56, %57, !dbg !9514
  br i1 %cmp70, label %land.lhs.true72, label %if.else76, !dbg !9515

land.lhs.true72:                                  ; preds = %if.else69
  %58 = load float, float* %v.addr, align 4, !dbg !9516
  %59 = load float, float* %w, align 4, !dbg !9517
  %cmp73 = fcmp oge float %58, %59, !dbg !9518
  br i1 %cmp73, label %if.then75, label %if.else76, !dbg !9519

if.then75:                                        ; preds = %land.lhs.true72
  store i32 1, i32* %S, align 4, !dbg !9520
  %60 = load float, float* %u.addr, align 4, !dbg !9522
  store float %60, float* %W1, align 4, !dbg !9523
  %61 = load float, float* %w, align 4, !dbg !9524
  store float %61, float* %W2, align 4, !dbg !9525
  br label %if.end77, !dbg !9526

if.else76:                                        ; preds = %land.lhs.true72, %if.else69
  store i32 2, i32* %S, align 4, !dbg !9527
  %62 = load float, float* %v.addr, align 4, !dbg !9529
  store float %62, float* %W1, align 4, !dbg !9530
  %63 = load float, float* %u.addr, align 4, !dbg !9531
  store float %63, float* %W2, align 4, !dbg !9532
  br label %if.end77

if.end77:                                         ; preds = %if.else76, %if.then75
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then68
  %64 = load i32, i32* %face_side.addr, align 4, !dbg !9533
  %sub79 = sub nsw i32 %64, 1, !dbg !9534
  %conv80 = sitofp i32 %sub79 to float, !dbg !9535
  %65 = load float, float* %W1, align 4, !dbg !9536
  %div = fdiv float %65, %conv80, !dbg !9536
  store float %div, float* %W1, align 4, !dbg !9536
  %66 = load i32, i32* %face_side.addr, align 4, !dbg !9537
  %sub81 = sub nsw i32 %66, 1, !dbg !9538
  %conv82 = sitofp i32 %sub81 to float, !dbg !9539
  %67 = load float, float* %W2, align 4, !dbg !9540
  %div83 = fdiv float %67, %conv82, !dbg !9540
  store float %div83, float* %W2, align 4, !dbg !9540
  %68 = load float, float* %W1, align 4, !dbg !9541
  %mul84 = fmul float 2.000000e+00, %68, !dbg !9542
  %69 = load float, float* %W2, align 4, !dbg !9543
  %sub85 = fsub float 1.000000e+00, %69, !dbg !9544
  %div86 = fdiv float %mul84, %sub85, !dbg !9545
  %sub87 = fsub float 1.000000e+00, %div86, !dbg !9546
  %70 = load i32, i32* %grid_size, align 4, !dbg !9547
  %conv88 = sitofp i32 %70 to float, !dbg !9547
  %mul89 = fmul float %sub87, %conv88, !dbg !9548
  %71 = load float*, float** %x.addr, align 8, !dbg !9549
  store float %mul89, float* %71, align 4, !dbg !9550
  %72 = load float, float* %W2, align 4, !dbg !9551
  %mul90 = fmul float 2.000000e+00, %72, !dbg !9552
  %73 = load float, float* %W1, align 4, !dbg !9553
  %sub91 = fsub float 1.000000e+00, %73, !dbg !9554
  %div92 = fdiv float %mul90, %sub91, !dbg !9555
  %sub93 = fsub float 1.000000e+00, %div92, !dbg !9556
  %74 = load i32, i32* %grid_size, align 4, !dbg !9557
  %conv94 = sitofp i32 %74 to float, !dbg !9557
  %mul95 = fmul float %sub93, %conv94, !dbg !9558
  %75 = load float*, float** %y.addr, align 8, !dbg !9559
  store float %mul95, float* %75, align 4, !dbg !9560
  br label %if.end96

if.end96:                                         ; preds = %if.end78, %if.end56
  %76 = load i32, i32* %S, align 4, !dbg !9561
  ret i32 %76, !dbg !9562
}

declare dso_local i32 @get_render_subsurf_level(%struct.RenderData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @multires_copy_grid([3 x float]* %gridA, [3 x float]* %gridB, i32 %sizeA, i32 %sizeB) #0 !dbg !9563 {
entry:
  %gridA.addr = alloca [3 x float]*, align 8
  %gridB.addr = alloca [3 x float]*, align 8
  %sizeA.addr = alloca i32, align 4
  %sizeB.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %j = alloca i32, align 4
  %skip = alloca i32, align 4
  store [3 x float]* %gridA, [3 x float]** %gridA.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %gridA.addr, metadata !9566, metadata !DIExpression()), !dbg !9567
  store [3 x float]* %gridB, [3 x float]** %gridB.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %gridB.addr, metadata !9568, metadata !DIExpression()), !dbg !9569
  store i32 %sizeA, i32* %sizeA.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sizeA.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  store i32 %sizeB, i32* %sizeB.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sizeB.addr, metadata !9572, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9576, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !9580, metadata !DIExpression()), !dbg !9581
  %0 = load i32, i32* %sizeA.addr, align 4, !dbg !9582
  %1 = load i32, i32* %sizeB.addr, align 4, !dbg !9584
  %cmp = icmp sgt i32 %0, %1, !dbg !9585
  br i1 %cmp, label %if.then, label %if.else, !dbg !9586

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %sizeA.addr, align 4, !dbg !9587
  %sub = sub nsw i32 %2, 1, !dbg !9589
  %3 = load i32, i32* %sizeB.addr, align 4, !dbg !9590
  %sub1 = sub nsw i32 %3, 1, !dbg !9591
  %div = sdiv i32 %sub, %sub1, !dbg !9592
  store i32 %div, i32* %skip, align 4, !dbg !9593
  store i32 0, i32* %j, align 4, !dbg !9594
  store i32 0, i32* %y, align 4, !dbg !9596
  br label %for.cond, !dbg !9597

for.cond:                                         ; preds = %for.inc12, %if.then
  %4 = load i32, i32* %y, align 4, !dbg !9598
  %5 = load i32, i32* %sizeB.addr, align 4, !dbg !9600
  %cmp2 = icmp slt i32 %4, %5, !dbg !9601
  br i1 %cmp2, label %for.body, label %for.end14, !dbg !9602

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !9603
  br label %for.cond3, !dbg !9605

for.cond3:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %x, align 4, !dbg !9606
  %7 = load i32, i32* %sizeB.addr, align 4, !dbg !9608
  %cmp4 = icmp slt i32 %6, %7, !dbg !9609
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !9610

for.body5:                                        ; preds = %for.cond3
  %8 = load [3 x float]*, [3 x float]** %gridA.addr, align 8, !dbg !9611
  %9 = load i32, i32* %y, align 4, !dbg !9612
  %10 = load i32, i32* %skip, align 4, !dbg !9613
  %mul = mul nsw i32 %9, %10, !dbg !9614
  %11 = load i32, i32* %sizeA.addr, align 4, !dbg !9615
  %mul6 = mul nsw i32 %mul, %11, !dbg !9616
  %12 = load i32, i32* %x, align 4, !dbg !9617
  %13 = load i32, i32* %skip, align 4, !dbg !9618
  %mul7 = mul nsw i32 %12, %13, !dbg !9619
  %add = add nsw i32 %mul6, %mul7, !dbg !9620
  %idxprom = sext i32 %add to i64, !dbg !9611
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %8, i64 %idxprom, !dbg !9611
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9611
  %14 = load [3 x float]*, [3 x float]** %gridB.addr, align 8, !dbg !9621
  %15 = load i32, i32* %j, align 4, !dbg !9622
  %idxprom8 = sext i32 %15 to i64, !dbg !9621
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %14, i64 %idxprom8, !dbg !9621
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !9621
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay10), !dbg !9623
  br label %for.inc, !dbg !9623

for.inc:                                          ; preds = %for.body5
  %16 = load i32, i32* %x, align 4, !dbg !9624
  %inc = add nsw i32 %16, 1, !dbg !9624
  store i32 %inc, i32* %x, align 4, !dbg !9624
  %17 = load i32, i32* %j, align 4, !dbg !9625
  %inc11 = add nsw i32 %17, 1, !dbg !9625
  store i32 %inc11, i32* %j, align 4, !dbg !9625
  br label %for.cond3, !dbg !9626, !llvm.loop !9627

for.end:                                          ; preds = %for.cond3
  br label %for.inc12, !dbg !9628

for.inc12:                                        ; preds = %for.end
  %18 = load i32, i32* %y, align 4, !dbg !9629
  %inc13 = add nsw i32 %18, 1, !dbg !9629
  store i32 %inc13, i32* %y, align 4, !dbg !9629
  br label %for.cond, !dbg !9630, !llvm.loop !9631

for.end14:                                        ; preds = %for.cond
  br label %if.end, !dbg !9633

if.else:                                          ; preds = %entry
  %19 = load i32, i32* %sizeB.addr, align 4, !dbg !9634
  %sub15 = sub nsw i32 %19, 1, !dbg !9636
  %20 = load i32, i32* %sizeA.addr, align 4, !dbg !9637
  %sub16 = sub nsw i32 %20, 1, !dbg !9638
  %div17 = sdiv i32 %sub15, %sub16, !dbg !9639
  store i32 %div17, i32* %skip, align 4, !dbg !9640
  store i32 0, i32* %j, align 4, !dbg !9641
  store i32 0, i32* %y, align 4, !dbg !9643
  br label %for.cond18, !dbg !9644

for.cond18:                                       ; preds = %for.inc38, %if.else
  %21 = load i32, i32* %y, align 4, !dbg !9645
  %22 = load i32, i32* %sizeA.addr, align 4, !dbg !9647
  %cmp19 = icmp slt i32 %21, %22, !dbg !9648
  br i1 %cmp19, label %for.body20, label %for.end40, !dbg !9649

for.body20:                                       ; preds = %for.cond18
  store i32 0, i32* %x, align 4, !dbg !9650
  br label %for.cond21, !dbg !9652

for.cond21:                                       ; preds = %for.inc34, %for.body20
  %23 = load i32, i32* %x, align 4, !dbg !9653
  %24 = load i32, i32* %sizeA.addr, align 4, !dbg !9655
  %cmp22 = icmp slt i32 %23, %24, !dbg !9656
  br i1 %cmp22, label %for.body23, label %for.end37, !dbg !9657

for.body23:                                       ; preds = %for.cond21
  %25 = load [3 x float]*, [3 x float]** %gridA.addr, align 8, !dbg !9658
  %26 = load i32, i32* %j, align 4, !dbg !9659
  %idxprom24 = sext i32 %26 to i64, !dbg !9658
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %25, i64 %idxprom24, !dbg !9658
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 0, !dbg !9658
  %27 = load [3 x float]*, [3 x float]** %gridB.addr, align 8, !dbg !9660
  %28 = load i32, i32* %y, align 4, !dbg !9661
  %29 = load i32, i32* %skip, align 4, !dbg !9662
  %mul27 = mul nsw i32 %28, %29, !dbg !9663
  %30 = load i32, i32* %sizeB.addr, align 4, !dbg !9664
  %mul28 = mul nsw i32 %mul27, %30, !dbg !9665
  %31 = load i32, i32* %x, align 4, !dbg !9666
  %32 = load i32, i32* %skip, align 4, !dbg !9667
  %mul29 = mul nsw i32 %31, %32, !dbg !9668
  %add30 = add nsw i32 %mul28, %mul29, !dbg !9669
  %idxprom31 = sext i32 %add30 to i64, !dbg !9660
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 %idxprom31, !dbg !9660
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 0, !dbg !9660
  call void @copy_v3_v3(float* %arraydecay26, float* %arraydecay33), !dbg !9670
  br label %for.inc34, !dbg !9670

for.inc34:                                        ; preds = %for.body23
  %33 = load i32, i32* %x, align 4, !dbg !9671
  %inc35 = add nsw i32 %33, 1, !dbg !9671
  store i32 %inc35, i32* %x, align 4, !dbg !9671
  %34 = load i32, i32* %j, align 4, !dbg !9672
  %inc36 = add nsw i32 %34, 1, !dbg !9672
  store i32 %inc36, i32* %j, align 4, !dbg !9672
  br label %for.cond21, !dbg !9673, !llvm.loop !9674

for.end37:                                        ; preds = %for.cond21
  br label %for.inc38, !dbg !9675

for.inc38:                                        ; preds = %for.end37
  %35 = load i32, i32* %y, align 4, !dbg !9676
  %inc39 = add nsw i32 %35, 1, !dbg !9676
  store i32 %inc39, i32* %y, align 4, !dbg !9676
  br label %for.cond18, !dbg !9677, !llvm.loop !9678

for.end40:                                        ; preds = %for.cond18
  br label %if.end

if.end:                                           ; preds = %for.end40, %for.end14
  ret void, !dbg !9680
}

; Function Attrs: noinline nounwind uwtable
define internal i32* @multires_mdisps_downsample_hidden(i32* %old_hidden, i32 %old_level, i32 %new_level) #0 !dbg !9681 {
entry:
  %old_hidden.addr = alloca i32*, align 8
  %old_level.addr = alloca i32, align 4
  %new_level.addr = alloca i32, align 4
  %new_hidden = alloca i32*, align 8
  %new_gridsize = alloca i32, align 4
  %old_gridsize = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %factor = alloca i32, align 4
  %old_value = alloca i32, align 4
  store i32* %old_hidden, i32** %old_hidden.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %old_hidden.addr, metadata !9684, metadata !DIExpression()), !dbg !9685
  store i32 %old_level, i32* %old_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_level.addr, metadata !9686, metadata !DIExpression()), !dbg !9687
  store i32 %new_level, i32* %new_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_level.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  call void @llvm.dbg.declare(metadata i32** %new_hidden, metadata !9690, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.declare(metadata i32* %new_gridsize, metadata !9692, metadata !DIExpression()), !dbg !9693
  %0 = load i32, i32* %new_level.addr, align 4, !dbg !9694
  %call = call i32 @BKE_ccg_gridsize(i32 %0), !dbg !9695
  store i32 %call, i32* %new_gridsize, align 4, !dbg !9693
  call void @llvm.dbg.declare(metadata i32* %old_gridsize, metadata !9696, metadata !DIExpression()), !dbg !9697
  %1 = load i32, i32* %old_level.addr, align 4, !dbg !9698
  %call1 = call i32 @BKE_ccg_gridsize(i32 %1), !dbg !9699
  store i32 %call1, i32* %old_gridsize, align 4, !dbg !9697
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9700, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9702, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.declare(metadata i32* %factor, metadata !9704, metadata !DIExpression()), !dbg !9705
  call void @llvm.dbg.declare(metadata i32* %old_value, metadata !9706, metadata !DIExpression()), !dbg !9707
  %2 = load i32, i32* %new_level.addr, align 4, !dbg !9708
  %3 = load i32, i32* %old_level.addr, align 4, !dbg !9709
  %call2 = call i32 @BKE_ccg_factor(i32 %2, i32 %3), !dbg !9710
  store i32 %call2, i32* %factor, align 4, !dbg !9711
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9712
  %5 = load i32, i32* %new_gridsize, align 4, !dbg !9712
  %6 = load i32, i32* %new_gridsize, align 4, !dbg !9712
  %mul = mul nsw i32 %5, %6, !dbg !9712
  %shr = ashr i32 %mul, 5, !dbg !9712
  %add = add nsw i32 %shr, 1, !dbg !9712
  %conv = sext i32 %add to i64, !dbg !9712
  %mul3 = mul i64 %conv, 4, !dbg !9712
  %call4 = call i8* %4(i64 %mul3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0)), !dbg !9712
  %7 = bitcast i8* %call4 to i32*, !dbg !9712
  store i32* %7, i32** %new_hidden, align 8, !dbg !9713
  store i32 0, i32* %y, align 4, !dbg !9714
  br label %for.cond, !dbg !9716

for.cond:                                         ; preds = %for.inc39, %entry
  %8 = load i32, i32* %y, align 4, !dbg !9717
  %9 = load i32, i32* %new_gridsize, align 4, !dbg !9719
  %cmp = icmp slt i32 %8, %9, !dbg !9720
  br i1 %cmp, label %for.body, label %for.end41, !dbg !9721

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !9722
  br label %for.cond6, !dbg !9725

for.cond6:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %x, align 4, !dbg !9726
  %11 = load i32, i32* %new_gridsize, align 4, !dbg !9728
  %cmp7 = icmp slt i32 %10, %11, !dbg !9729
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9730

for.body9:                                        ; preds = %for.cond6
  %12 = load i32*, i32** %old_hidden.addr, align 8, !dbg !9731
  %13 = load i32, i32* %factor, align 4, !dbg !9731
  %14 = load i32, i32* %y, align 4, !dbg !9731
  %mul10 = mul nsw i32 %13, %14, !dbg !9731
  %15 = load i32, i32* %old_gridsize, align 4, !dbg !9731
  %mul11 = mul nsw i32 %mul10, %15, !dbg !9731
  %16 = load i32, i32* %x, align 4, !dbg !9731
  %17 = load i32, i32* %factor, align 4, !dbg !9731
  %mul12 = mul nsw i32 %16, %17, !dbg !9731
  %add13 = add nsw i32 %mul11, %mul12, !dbg !9731
  %shr14 = ashr i32 %add13, 5, !dbg !9731
  %idxprom = sext i32 %shr14 to i64, !dbg !9731
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !9731
  %18 = load i32, i32* %arrayidx, align 4, !dbg !9731
  %19 = load i32, i32* %factor, align 4, !dbg !9731
  %20 = load i32, i32* %y, align 4, !dbg !9731
  %mul15 = mul nsw i32 %19, %20, !dbg !9731
  %21 = load i32, i32* %old_gridsize, align 4, !dbg !9731
  %mul16 = mul nsw i32 %mul15, %21, !dbg !9731
  %22 = load i32, i32* %x, align 4, !dbg !9731
  %23 = load i32, i32* %factor, align 4, !dbg !9731
  %mul17 = mul nsw i32 %22, %23, !dbg !9731
  %add18 = add nsw i32 %mul16, %mul17, !dbg !9731
  %and = and i32 %add18, 31, !dbg !9731
  %shl = shl i32 1, %and, !dbg !9731
  %and19 = and i32 %18, %shl, !dbg !9731
  store i32 %and19, i32* %old_value, align 4, !dbg !9733
  %24 = load i32, i32* %old_value, align 4, !dbg !9734
  %tobool = icmp ne i32 %24, 0, !dbg !9734
  br i1 %tobool, label %if.then, label %if.else, !dbg !9737

if.then:                                          ; preds = %for.body9
  %25 = load i32, i32* %y, align 4, !dbg !9734
  %26 = load i32, i32* %new_gridsize, align 4, !dbg !9734
  %mul20 = mul nsw i32 %25, %26, !dbg !9734
  %27 = load i32, i32* %x, align 4, !dbg !9734
  %add21 = add nsw i32 %mul20, %27, !dbg !9734
  %and22 = and i32 %add21, 31, !dbg !9734
  %shl23 = shl i32 1, %and22, !dbg !9734
  %28 = load i32*, i32** %new_hidden, align 8, !dbg !9734
  %29 = load i32, i32* %y, align 4, !dbg !9734
  %30 = load i32, i32* %new_gridsize, align 4, !dbg !9734
  %mul24 = mul nsw i32 %29, %30, !dbg !9734
  %31 = load i32, i32* %x, align 4, !dbg !9734
  %add25 = add nsw i32 %mul24, %31, !dbg !9734
  %shr26 = ashr i32 %add25, 5, !dbg !9734
  %idxprom27 = sext i32 %shr26 to i64, !dbg !9734
  %arrayidx28 = getelementptr inbounds i32, i32* %28, i64 %idxprom27, !dbg !9734
  %32 = load i32, i32* %arrayidx28, align 4, !dbg !9734
  %or = or i32 %32, %shl23, !dbg !9734
  store i32 %or, i32* %arrayidx28, align 4, !dbg !9734
  br label %if.end, !dbg !9734

if.else:                                          ; preds = %for.body9
  %33 = load i32, i32* %y, align 4, !dbg !9734
  %34 = load i32, i32* %new_gridsize, align 4, !dbg !9734
  %mul29 = mul nsw i32 %33, %34, !dbg !9734
  %35 = load i32, i32* %x, align 4, !dbg !9734
  %add30 = add nsw i32 %mul29, %35, !dbg !9734
  %and31 = and i32 %add30, 31, !dbg !9734
  %shl32 = shl i32 1, %and31, !dbg !9734
  %neg = xor i32 %shl32, -1, !dbg !9734
  %36 = load i32*, i32** %new_hidden, align 8, !dbg !9734
  %37 = load i32, i32* %y, align 4, !dbg !9734
  %38 = load i32, i32* %new_gridsize, align 4, !dbg !9734
  %mul33 = mul nsw i32 %37, %38, !dbg !9734
  %39 = load i32, i32* %x, align 4, !dbg !9734
  %add34 = add nsw i32 %mul33, %39, !dbg !9734
  %shr35 = ashr i32 %add34, 5, !dbg !9734
  %idxprom36 = sext i32 %shr35 to i64, !dbg !9734
  %arrayidx37 = getelementptr inbounds i32, i32* %36, i64 %idxprom36, !dbg !9734
  %40 = load i32, i32* %arrayidx37, align 4, !dbg !9734
  %and38 = and i32 %40, %neg, !dbg !9734
  store i32 %and38, i32* %arrayidx37, align 4, !dbg !9734
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9738

for.inc:                                          ; preds = %if.end
  %41 = load i32, i32* %x, align 4, !dbg !9739
  %inc = add nsw i32 %41, 1, !dbg !9739
  store i32 %inc, i32* %x, align 4, !dbg !9739
  br label %for.cond6, !dbg !9740, !llvm.loop !9741

for.end:                                          ; preds = %for.cond6
  br label %for.inc39, !dbg !9743

for.inc39:                                        ; preds = %for.end
  %42 = load i32, i32* %y, align 4, !dbg !9744
  %inc40 = add nsw i32 %42, 1, !dbg !9744
  store i32 %inc40, i32* %y, align 4, !dbg !9744
  br label %for.cond, !dbg !9745, !llvm.loop !9746

for.end41:                                        ; preds = %for.cond
  %43 = load i32*, i32** %new_hidden, align 8, !dbg !9748
  ret i32* %43, !dbg !9749
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_grid_paint_mask_downsample(%struct.GridPaintMask* %gpm, i32 %level) #0 !dbg !9750 {
entry:
  %gpm.addr = alloca %struct.GridPaintMask*, align 8
  %level.addr = alloca i32, align 4
  %gridsize = alloca i32, align 4
  %data = alloca float*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.GridPaintMask* %gpm, %struct.GridPaintMask** %gpm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GridPaintMask** %gpm.addr, metadata !9753, metadata !DIExpression()), !dbg !9754
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !9755, metadata !DIExpression()), !dbg !9756
  %0 = load i32, i32* %level.addr, align 4, !dbg !9757
  %1 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm.addr, align 8, !dbg !9759
  %level1 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %1, i32 0, i32 1, !dbg !9760
  %2 = load i32, i32* %level1, align 8, !dbg !9760
  %cmp = icmp ult i32 %0, %2, !dbg !9761
  br i1 %cmp, label %if.then, label %if.end, !dbg !9762

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %gridsize, metadata !9763, metadata !DIExpression()), !dbg !9765
  %3 = load i32, i32* %level.addr, align 4, !dbg !9766
  %call = call i32 @BKE_ccg_gridsize(i32 %3), !dbg !9767
  store i32 %call, i32* %gridsize, align 4, !dbg !9765
  call void @llvm.dbg.declare(metadata float** %data, metadata !9768, metadata !DIExpression()), !dbg !9769
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9770
  %5 = load i32, i32* %gridsize, align 4, !dbg !9771
  %6 = load i32, i32* %gridsize, align 4, !dbg !9771
  %mul = mul nsw i32 %5, %6, !dbg !9771
  %conv = sext i32 %mul to i64, !dbg !9771
  %mul2 = mul i64 4, %conv, !dbg !9772
  %call3 = call i8* %4(i64 %mul2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0)), !dbg !9770
  %7 = bitcast i8* %call3 to float*, !dbg !9770
  store float* %7, float** %data, align 8, !dbg !9769
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9773, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9775, metadata !DIExpression()), !dbg !9776
  store i32 0, i32* %y, align 4, !dbg !9777
  br label %for.cond, !dbg !9779

for.cond:                                         ; preds = %for.inc12, %if.then
  %8 = load i32, i32* %y, align 4, !dbg !9780
  %9 = load i32, i32* %gridsize, align 4, !dbg !9782
  %cmp4 = icmp slt i32 %8, %9, !dbg !9783
  br i1 %cmp4, label %for.body, label %for.end14, !dbg !9784

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !9785
  br label %for.cond6, !dbg !9788

for.cond6:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %x, align 4, !dbg !9789
  %11 = load i32, i32* %gridsize, align 4, !dbg !9791
  %cmp7 = icmp slt i32 %10, %11, !dbg !9792
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !9793

for.body9:                                        ; preds = %for.cond6
  %12 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm.addr, align 8, !dbg !9794
  %13 = load i32, i32* %level.addr, align 4, !dbg !9796
  %14 = load i32, i32* %x, align 4, !dbg !9797
  %15 = load i32, i32* %y, align 4, !dbg !9798
  %call10 = call float @paint_grid_paint_mask(%struct.GridPaintMask* %12, i32 %13, i32 %14, i32 %15), !dbg !9799
  %16 = load float*, float** %data, align 8, !dbg !9800
  %17 = load i32, i32* %y, align 4, !dbg !9801
  %18 = load i32, i32* %gridsize, align 4, !dbg !9802
  %mul11 = mul nsw i32 %17, %18, !dbg !9803
  %19 = load i32, i32* %x, align 4, !dbg !9804
  %add = add nsw i32 %mul11, %19, !dbg !9805
  %idxprom = sext i32 %add to i64, !dbg !9800
  %arrayidx = getelementptr inbounds float, float* %16, i64 %idxprom, !dbg !9800
  store float %call10, float* %arrayidx, align 4, !dbg !9806
  br label %for.inc, !dbg !9807

for.inc:                                          ; preds = %for.body9
  %20 = load i32, i32* %x, align 4, !dbg !9808
  %inc = add nsw i32 %20, 1, !dbg !9808
  store i32 %inc, i32* %x, align 4, !dbg !9808
  br label %for.cond6, !dbg !9809, !llvm.loop !9810

for.end:                                          ; preds = %for.cond6
  br label %for.inc12, !dbg !9812

for.inc12:                                        ; preds = %for.end
  %21 = load i32, i32* %y, align 4, !dbg !9813
  %inc13 = add nsw i32 %21, 1, !dbg !9813
  store i32 %inc13, i32* %y, align 4, !dbg !9813
  br label %for.cond, !dbg !9814, !llvm.loop !9815

for.end14:                                        ; preds = %for.cond
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9817
  %23 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm.addr, align 8, !dbg !9818
  %data15 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %23, i32 0, i32 0, !dbg !9819
  %24 = load float*, float** %data15, align 8, !dbg !9819
  %25 = bitcast float* %24 to i8*, !dbg !9818
  call void %22(i8* %25), !dbg !9817
  %26 = load float*, float** %data, align 8, !dbg !9820
  %27 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm.addr, align 8, !dbg !9821
  %data16 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %27, i32 0, i32 0, !dbg !9822
  store float* %26, float** %data16, align 8, !dbg !9823
  %28 = load i32, i32* %level.addr, align 4, !dbg !9824
  %29 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm.addr, align 8, !dbg !9825
  %level17 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %29, i32 0, i32 1, !dbg !9826
  store i32 %28, i32* %level17, align 8, !dbg !9827
  br label %if.end, !dbg !9828

if.end:                                           ; preds = %for.end14, %entry
  ret void, !dbg !9829
}

declare dso_local i32 @BKE_ccg_gridsize(i32) #2

declare dso_local i32 @BKE_ccg_factor(i32, i32) #2

declare dso_local float @paint_grid_paint_mask(%struct.GridPaintMask*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !9830 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9833, metadata !DIExpression()), !dbg !9834
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9835, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.declare(metadata float* %d, metadata !9837, metadata !DIExpression()), !dbg !9838
  %0 = load float*, float** %a.addr, align 8, !dbg !9839
  %1 = load float*, float** %a.addr, align 8, !dbg !9840
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !9841
  store float %call, float* %d, align 4, !dbg !9838
  %2 = load float, float* %d, align 4, !dbg !9842
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !9844
  br i1 %cmp, label %if.then, label %if.else, !dbg !9845

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !9846
  %call1 = call float @sqrtf(float %3) #5, !dbg !9848
  store float %call1, float* %d, align 4, !dbg !9849
  %4 = load float*, float** %r.addr, align 8, !dbg !9850
  %5 = load float*, float** %a.addr, align 8, !dbg !9851
  %6 = load float, float* %d, align 4, !dbg !9852
  %div = fdiv float 1.000000e+00, %6, !dbg !9853
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !9854
  br label %if.end, !dbg !9855

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !9856
  call void @zero_v3(float* %7), !dbg !9858
  store float 0.000000e+00, float* %d, align 4, !dbg !9859
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !9860
  ret float %8, !dbg !9861
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !9862 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9865, metadata !DIExpression()), !dbg !9866
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9867, metadata !DIExpression()), !dbg !9868
  %0 = load float*, float** %a.addr, align 8, !dbg !9869
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9869
  %1 = load float, float* %arrayidx, align 4, !dbg !9869
  %2 = load float*, float** %b.addr, align 8, !dbg !9870
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9870
  %3 = load float, float* %arrayidx1, align 4, !dbg !9870
  %mul = fmul float %1, %3, !dbg !9871
  %4 = load float*, float** %a.addr, align 8, !dbg !9872
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9872
  %5 = load float, float* %arrayidx2, align 4, !dbg !9872
  %6 = load float*, float** %b.addr, align 8, !dbg !9873
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9873
  %7 = load float, float* %arrayidx3, align 4, !dbg !9873
  %mul4 = fmul float %5, %7, !dbg !9874
  %add = fadd float %mul, %mul4, !dbg !9875
  %8 = load float*, float** %a.addr, align 8, !dbg !9876
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9876
  %9 = load float, float* %arrayidx5, align 4, !dbg !9876
  %10 = load float*, float** %b.addr, align 8, !dbg !9877
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !9877
  %11 = load float, float* %arrayidx6, align 4, !dbg !9877
  %mul7 = fmul float %9, %11, !dbg !9878
  %add8 = fadd float %add, %mul7, !dbg !9879
  ret float %add8, !dbg !9880
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !9881 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9884, metadata !DIExpression()), !dbg !9885
  %0 = load float*, float** %r.addr, align 8, !dbg !9886
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9886
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9887
  %1 = load float*, float** %r.addr, align 8, !dbg !9888
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !9888
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !9889
  %2 = load float*, float** %r.addr, align 8, !dbg !9890
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !9890
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !9891
  ret void, !dbg !9892
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !9893 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9894, metadata !DIExpression()), !dbg !9895
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9896, metadata !DIExpression()), !dbg !9897
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  %0 = load float*, float** %a.addr, align 8, !dbg !9900
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9900
  %1 = load float, float* %arrayidx, align 4, !dbg !9900
  %2 = load float*, float** %b.addr, align 8, !dbg !9901
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9901
  %3 = load float, float* %arrayidx1, align 4, !dbg !9901
  %sub = fsub float %1, %3, !dbg !9902
  %4 = load float*, float** %r.addr, align 8, !dbg !9903
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9903
  store float %sub, float* %arrayidx2, align 4, !dbg !9904
  %5 = load float*, float** %a.addr, align 8, !dbg !9905
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9905
  %6 = load float, float* %arrayidx3, align 4, !dbg !9905
  %7 = load float*, float** %b.addr, align 8, !dbg !9906
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9906
  %8 = load float, float* %arrayidx4, align 4, !dbg !9906
  %sub5 = fsub float %6, %8, !dbg !9907
  %9 = load float*, float** %r.addr, align 8, !dbg !9908
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9908
  store float %sub5, float* %arrayidx6, align 4, !dbg !9909
  %10 = load float*, float** %a.addr, align 8, !dbg !9910
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !9910
  %11 = load float, float* %arrayidx7, align 4, !dbg !9910
  %12 = load float*, float** %b.addr, align 8, !dbg !9911
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !9911
  %13 = load float, float* %arrayidx8, align 4, !dbg !9911
  %sub9 = fsub float %11, %13, !dbg !9912
  %14 = load float*, float** %r.addr, align 8, !dbg !9913
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !9913
  store float %sub9, float* %arrayidx10, align 4, !dbg !9914
  ret void, !dbg !9915
}

declare dso_local %struct.DerivedMesh* @subsurf_make_derived_from_derived(%struct.DerivedMesh*, %struct.SubsurfModifierData*, [3 x float]*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.MDisps* @multires_mdisps_initialize_hidden(%struct.Mesh* %me, i32 %level) #0 !dbg !9916 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %level.addr = alloca i32, align 4
  %mdisps = alloca %struct.MDisps*, align 8
  %gridsize = alloca i32, align 4
  %gridarea = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %hide = alloca i8, align 1
  %md = alloca %struct.MDisps*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !9919, metadata !DIExpression()), !dbg !9920
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !9921, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps, metadata !9923, metadata !DIExpression()), !dbg !9924
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9925
  %ldata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %0, i32 0, i32 25, !dbg !9926
  %1 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9927
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %1, i32 0, i32 31, !dbg !9928
  %2 = load i32, i32* %totloop, align 4, !dbg !9928
  %call = call i8* @CustomData_add_layer(%struct.CustomData* %ldata, i32 19, i32 1, i8* null, i32 %2), !dbg !9929
  %3 = bitcast i8* %call to %struct.MDisps*, !dbg !9929
  store %struct.MDisps* %3, %struct.MDisps** %mdisps, align 8, !dbg !9924
  call void @llvm.dbg.declare(metadata i32* %gridsize, metadata !9930, metadata !DIExpression()), !dbg !9931
  %4 = load i32, i32* %level.addr, align 4, !dbg !9932
  %call1 = call i32 @BKE_ccg_gridsize(i32 %4), !dbg !9933
  store i32 %call1, i32* %gridsize, align 4, !dbg !9931
  call void @llvm.dbg.declare(metadata i32* %gridarea, metadata !9934, metadata !DIExpression()), !dbg !9935
  %5 = load i32, i32* %gridsize, align 4, !dbg !9936
  %6 = load i32, i32* %gridsize, align 4, !dbg !9936
  %mul = mul nsw i32 %5, %6, !dbg !9936
  store i32 %mul, i32* %gridarea, align 4, !dbg !9935
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9937, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9939, metadata !DIExpression()), !dbg !9940
  store i32 0, i32* %i, align 4, !dbg !9941
  br label %for.cond, !dbg !9943

for.cond:                                         ; preds = %for.inc43, %entry
  %7 = load i32, i32* %i, align 4, !dbg !9944
  %8 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9946
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 30, !dbg !9947
  %9 = load i32, i32* %totpoly, align 8, !dbg !9947
  %cmp = icmp slt i32 %7, %9, !dbg !9948
  br i1 %cmp, label %for.body, label %for.end45, !dbg !9949

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %hide, metadata !9950, metadata !DIExpression()), !dbg !9952
  store i8 0, i8* %hide, align 1, !dbg !9952
  store i32 0, i32* %j, align 4, !dbg !9953
  br label %for.cond2, !dbg !9955

for.cond2:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %j, align 4, !dbg !9956
  %11 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9958
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 7, !dbg !9959
  %12 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !9959
  %13 = load i32, i32* %i, align 4, !dbg !9960
  %idxprom = sext i32 %13 to i64, !dbg !9958
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %12, i64 %idxprom, !dbg !9958
  %totloop3 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 1, !dbg !9961
  %14 = load i32, i32* %totloop3, align 4, !dbg !9961
  %cmp4 = icmp slt i32 %10, %14, !dbg !9962
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !9963

for.body5:                                        ; preds = %for.cond2
  %15 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9964
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 15, !dbg !9967
  %16 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9967
  %17 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9968
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 9, !dbg !9969
  %18 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !9969
  %19 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9970
  %mpoly6 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 7, !dbg !9971
  %20 = load %struct.MPoly*, %struct.MPoly** %mpoly6, align 8, !dbg !9971
  %21 = load i32, i32* %i, align 4, !dbg !9972
  %idxprom7 = sext i32 %21 to i64, !dbg !9970
  %arrayidx8 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %20, i64 %idxprom7, !dbg !9970
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx8, i32 0, i32 0, !dbg !9973
  %22 = load i32, i32* %loopstart, align 4, !dbg !9973
  %23 = load i32, i32* %j, align 4, !dbg !9974
  %add = add nsw i32 %22, %23, !dbg !9975
  %idxprom9 = sext i32 %add to i64, !dbg !9968
  %arrayidx10 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %18, i64 %idxprom9, !dbg !9968
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx10, i32 0, i32 0, !dbg !9976
  %24 = load i32, i32* %v, align 4, !dbg !9976
  %idxprom11 = zext i32 %24 to i64, !dbg !9964
  %arrayidx12 = getelementptr inbounds %struct.MVert, %struct.MVert* %16, i64 %idxprom11, !dbg !9964
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx12, i32 0, i32 2, !dbg !9977
  %25 = load i8, i8* %flag, align 2, !dbg !9977
  %conv = zext i8 %25 to i32, !dbg !9964
  %and = and i32 %conv, 16, !dbg !9978
  %tobool = icmp ne i32 %and, 0, !dbg !9978
  br i1 %tobool, label %if.then, label %if.end, !dbg !9979

if.then:                                          ; preds = %for.body5
  store i8 1, i8* %hide, align 1, !dbg !9980
  br label %for.end, !dbg !9982

if.end:                                           ; preds = %for.body5
  br label %for.inc, !dbg !9983

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %j, align 4, !dbg !9984
  %inc = add nsw i32 %26, 1, !dbg !9984
  store i32 %inc, i32* %j, align 4, !dbg !9984
  br label %for.cond2, !dbg !9985, !llvm.loop !9986

for.end:                                          ; preds = %if.then, %for.cond2
  %27 = load i8, i8* %hide, align 1, !dbg !9988
  %tobool13 = icmp ne i8 %27, 0, !dbg !9988
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !9990

if.then14:                                        ; preds = %for.end
  br label %for.inc43, !dbg !9991

if.end15:                                         ; preds = %for.end
  store i32 0, i32* %j, align 4, !dbg !9992
  br label %for.cond16, !dbg !9994

for.cond16:                                       ; preds = %for.inc40, %if.end15
  %28 = load i32, i32* %j, align 4, !dbg !9995
  %29 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !9997
  %mpoly17 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %29, i32 0, i32 7, !dbg !9998
  %30 = load %struct.MPoly*, %struct.MPoly** %mpoly17, align 8, !dbg !9998
  %31 = load i32, i32* %i, align 4, !dbg !9999
  %idxprom18 = sext i32 %31 to i64, !dbg !9997
  %arrayidx19 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %30, i64 %idxprom18, !dbg !9997
  %totloop20 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx19, i32 0, i32 1, !dbg !10000
  %32 = load i32, i32* %totloop20, align 4, !dbg !10000
  %cmp21 = icmp slt i32 %28, %32, !dbg !10001
  br i1 %cmp21, label %for.body23, label %for.end42, !dbg !10002

for.body23:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.MDisps** %md, metadata !10003, metadata !DIExpression()), !dbg !10005
  %33 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !10006
  %34 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !10007
  %mpoly24 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %34, i32 0, i32 7, !dbg !10008
  %35 = load %struct.MPoly*, %struct.MPoly** %mpoly24, align 8, !dbg !10008
  %36 = load i32, i32* %i, align 4, !dbg !10009
  %idxprom25 = sext i32 %36 to i64, !dbg !10007
  %arrayidx26 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %35, i64 %idxprom25, !dbg !10007
  %loopstart27 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx26, i32 0, i32 0, !dbg !10010
  %37 = load i32, i32* %loopstart27, align 4, !dbg !10010
  %38 = load i32, i32* %j, align 4, !dbg !10011
  %add28 = add nsw i32 %37, %38, !dbg !10012
  %idxprom29 = sext i32 %add28 to i64, !dbg !10006
  %arrayidx30 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %33, i64 %idxprom29, !dbg !10006
  store %struct.MDisps* %arrayidx30, %struct.MDisps** %md, align 8, !dbg !10005
  %39 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10013
  %40 = load i32, i32* %gridarea, align 4, !dbg !10013
  %shr = ashr i32 %40, 5, !dbg !10013
  %add31 = add nsw i32 %shr, 1, !dbg !10013
  %conv32 = sext i32 %add31 to i64, !dbg !10013
  %mul33 = mul i64 %conv32, 4, !dbg !10013
  %call34 = call i8* %39(i64 %mul33, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0)), !dbg !10013
  %41 = bitcast i8* %call34 to i32*, !dbg !10013
  %42 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !10014
  %hidden = getelementptr inbounds %struct.MDisps, %struct.MDisps* %42, i32 0, i32 3, !dbg !10015
  store i32* %41, i32** %hidden, align 8, !dbg !10016
  %43 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !10017
  %hidden35 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %43, i32 0, i32 3, !dbg !10017
  %44 = load i32*, i32** %hidden35, align 8, !dbg !10017
  %45 = bitcast i32* %44 to i8*, !dbg !10017
  %46 = load i32, i32* %gridarea, align 4, !dbg !10017
  %shr36 = ashr i32 %46, 5, !dbg !10017
  %add37 = add nsw i32 %shr36, 1, !dbg !10017
  %conv38 = sext i32 %add37 to i64, !dbg !10017
  %mul39 = mul i64 %conv38, 4, !dbg !10017
  call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 -1, i64 %mul39, i1 false), !dbg !10017
  br label %for.inc40, !dbg !10020

for.inc40:                                        ; preds = %for.body23
  %47 = load i32, i32* %j, align 4, !dbg !10021
  %inc41 = add nsw i32 %47, 1, !dbg !10021
  store i32 %inc41, i32* %j, align 4, !dbg !10021
  br label %for.cond16, !dbg !10022, !llvm.loop !10023

for.end42:                                        ; preds = %for.cond16
  br label %for.inc43, !dbg !10025

for.inc43:                                        ; preds = %for.end42, %if.then14
  %48 = load i32, i32* %i, align 4, !dbg !10026
  %inc44 = add nsw i32 %48, 1, !dbg !10026
  store i32 %inc44, i32* %i, align 4, !dbg !10026
  br label %for.cond, !dbg !10027, !llvm.loop !10028

for.end45:                                        ; preds = %for.cond
  %49 = load %struct.MDisps*, %struct.MDisps** %mdisps, align 8, !dbg !10030
  ret %struct.MDisps* %49, !dbg !10031
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_reallocate_mdisps(i32 %totloop, %struct.MDisps* %mdisps, i32 %lvl) #0 !dbg !10032 {
entry:
  %totloop.addr = alloca i32, align 4
  %mdisps.addr = alloca %struct.MDisps*, align 8
  %lvl.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %totdisp = alloca i32, align 4
  %disps = alloca [3 x float]*, align 8
  store i32 %totloop, i32* %totloop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totloop.addr, metadata !10035, metadata !DIExpression()), !dbg !10036
  store %struct.MDisps* %mdisps, %struct.MDisps** %mdisps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps.addr, metadata !10037, metadata !DIExpression()), !dbg !10038
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !10039, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10041, metadata !DIExpression()), !dbg !10042
  store i32 0, i32* %i, align 4, !dbg !10043
  br label %for.cond, !dbg !10045

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10046
  %1 = load i32, i32* %totloop.addr, align 4, !dbg !10048
  %cmp = icmp slt i32 %0, %1, !dbg !10049
  br i1 %cmp, label %for.body, label %for.end, !dbg !10050

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %totdisp, metadata !10051, metadata !DIExpression()), !dbg !10053
  %2 = load i32, i32* %lvl.addr, align 4, !dbg !10054
  %idxprom = sext i32 %2 to i64, !dbg !10055
  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @multires_grid_tot, i64 0, i64 %idxprom, !dbg !10055
  %3 = load i32, i32* %arrayidx, align 4, !dbg !10055
  store i32 %3, i32* %totdisp, align 4, !dbg !10053
  call void @llvm.dbg.declare(metadata [3 x float]** %disps, metadata !10056, metadata !DIExpression()), !dbg !10057
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10058
  %5 = load i32, i32* %totdisp, align 4, !dbg !10059
  %conv = sext i32 %5 to i64, !dbg !10059
  %mul = mul i64 12, %conv, !dbg !10060
  %call = call i8* %4(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)), !dbg !10058
  %6 = bitcast i8* %call to [3 x float]*, !dbg !10058
  store [3 x float]* %6, [3 x float]** %disps, align 8, !dbg !10057
  %7 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !10061
  %8 = load i32, i32* %i, align 4, !dbg !10063
  %idxprom1 = sext i32 %8 to i64, !dbg !10061
  %arrayidx2 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %7, i64 %idxprom1, !dbg !10061
  %disps3 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx2, i32 0, i32 2, !dbg !10064
  %9 = load [3 x float]*, [3 x float]** %disps3, align 8, !dbg !10064
  %tobool = icmp ne [3 x float]* %9, null, !dbg !10061
  br i1 %tobool, label %if.then, label %if.end, !dbg !10065

if.then:                                          ; preds = %for.body
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10066
  %11 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !10067
  %12 = load i32, i32* %i, align 4, !dbg !10068
  %idxprom4 = sext i32 %12 to i64, !dbg !10067
  %arrayidx5 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %11, i64 %idxprom4, !dbg !10067
  %disps6 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx5, i32 0, i32 2, !dbg !10069
  %13 = load [3 x float]*, [3 x float]** %disps6, align 8, !dbg !10069
  %14 = bitcast [3 x float]* %13 to i8*, !dbg !10067
  call void %10(i8* %14), !dbg !10066
  br label %if.end, !dbg !10066

if.end:                                           ; preds = %if.then, %for.body
  %15 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !10070
  %16 = load i32, i32* %i, align 4, !dbg !10072
  %idxprom7 = sext i32 %16 to i64, !dbg !10070
  %arrayidx8 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %15, i64 %idxprom7, !dbg !10070
  %level = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx8, i32 0, i32 1, !dbg !10073
  %17 = load i32, i32* %level, align 4, !dbg !10073
  %tobool9 = icmp ne i32 %17, 0, !dbg !10070
  br i1 %tobool9, label %land.lhs.true, label %if.end16, !dbg !10074

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !10075
  %19 = load i32, i32* %i, align 4, !dbg !10076
  %idxprom10 = sext i32 %19 to i64, !dbg !10075
  %arrayidx11 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %18, i64 %idxprom10, !dbg !10075
  %hidden = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx11, i32 0, i32 3, !dbg !10077
  %20 = load i32*, i32** %hidden, align 8, !dbg !10077
  %tobool12 = icmp ne i32* %20, null, !dbg !10075
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !10078

if.then13:                                        ; preds = %land.lhs.true
  %21 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !10079
  %22 = load i32, i32* %i, align 4, !dbg !10080
  %idxprom14 = sext i32 %22 to i64, !dbg !10079
  %arrayidx15 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %21, i64 %idxprom14, !dbg !10079
  %23 = load i32, i32* %lvl.addr, align 4, !dbg !10081
  call void @multires_mdisps_subdivide_hidden(%struct.MDisps* %arrayidx15, i32 %23), !dbg !10082
  br label %if.end16, !dbg !10082

if.end16:                                         ; preds = %if.then13, %land.lhs.true, %if.end
  %24 = load [3 x float]*, [3 x float]** %disps, align 8, !dbg !10083
  %25 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !10084
  %26 = load i32, i32* %i, align 4, !dbg !10085
  %idxprom17 = sext i32 %26 to i64, !dbg !10084
  %arrayidx18 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %25, i64 %idxprom17, !dbg !10084
  %disps19 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx18, i32 0, i32 2, !dbg !10086
  store [3 x float]* %24, [3 x float]** %disps19, align 8, !dbg !10087
  %27 = load i32, i32* %totdisp, align 4, !dbg !10088
  %28 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !10089
  %29 = load i32, i32* %i, align 4, !dbg !10090
  %idxprom20 = sext i32 %29 to i64, !dbg !10089
  %arrayidx21 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %28, i64 %idxprom20, !dbg !10089
  %totdisp22 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx21, i32 0, i32 0, !dbg !10091
  store i32 %27, i32* %totdisp22, align 8, !dbg !10092
  %30 = load i32, i32* %lvl.addr, align 4, !dbg !10093
  %31 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !10094
  %32 = load i32, i32* %i, align 4, !dbg !10095
  %idxprom23 = sext i32 %32 to i64, !dbg !10094
  %arrayidx24 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %31, i64 %idxprom23, !dbg !10094
  %level25 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %arrayidx24, i32 0, i32 1, !dbg !10096
  store i32 %30, i32* %level25, align 4, !dbg !10097
  br label %for.inc, !dbg !10098

for.inc:                                          ; preds = %if.end16
  %33 = load i32, i32* %i, align 4, !dbg !10099
  %inc = add nsw i32 %33, 1, !dbg !10099
  store i32 %inc, i32* %i, align 4, !dbg !10099
  br label %for.cond, !dbg !10100, !llvm.loop !10101

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10103
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_mdisps_subdivide_hidden(%struct.MDisps* %md, i32 %new_level) #0 !dbg !10104 {
entry:
  %md.addr = alloca %struct.MDisps*, align 8
  %new_level.addr = alloca i32, align 4
  %subd = alloca i32*, align 8
  store %struct.MDisps* %md, %struct.MDisps** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDisps** %md.addr, metadata !10107, metadata !DIExpression()), !dbg !10108
  store i32 %new_level, i32* %new_level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_level.addr, metadata !10109, metadata !DIExpression()), !dbg !10110
  call void @llvm.dbg.declare(metadata i32** %subd, metadata !10111, metadata !DIExpression()), !dbg !10112
  %0 = load %struct.MDisps*, %struct.MDisps** %md.addr, align 8, !dbg !10113
  %level = getelementptr inbounds %struct.MDisps, %struct.MDisps* %0, i32 0, i32 1, !dbg !10115
  %1 = load i32, i32* %level, align 4, !dbg !10115
  %2 = load i32, i32* %new_level.addr, align 4, !dbg !10116
  %cmp = icmp sge i32 %1, %2, !dbg !10117
  br i1 %cmp, label %if.then, label %if.end, !dbg !10118

if.then:                                          ; preds = %entry
  br label %return, !dbg !10119

if.end:                                           ; preds = %entry
  %3 = load %struct.MDisps*, %struct.MDisps** %md.addr, align 8, !dbg !10120
  %hidden = getelementptr inbounds %struct.MDisps, %struct.MDisps* %3, i32 0, i32 3, !dbg !10121
  %4 = load i32*, i32** %hidden, align 8, !dbg !10121
  %5 = load %struct.MDisps*, %struct.MDisps** %md.addr, align 8, !dbg !10122
  %level1 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %5, i32 0, i32 1, !dbg !10123
  %6 = load i32, i32* %level1, align 4, !dbg !10123
  %7 = load i32, i32* %new_level.addr, align 4, !dbg !10124
  %call = call i32* @multires_mdisps_upsample_hidden(i32* %4, i32 %6, i32 %7, i32* null), !dbg !10125
  store i32* %call, i32** %subd, align 8, !dbg !10126
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10127
  %9 = load %struct.MDisps*, %struct.MDisps** %md.addr, align 8, !dbg !10128
  %hidden2 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %9, i32 0, i32 3, !dbg !10129
  %10 = load i32*, i32** %hidden2, align 8, !dbg !10129
  %11 = bitcast i32* %10 to i8*, !dbg !10128
  call void %8(i8* %11), !dbg !10127
  %12 = load i32*, i32** %subd, align 8, !dbg !10130
  %13 = load %struct.MDisps*, %struct.MDisps** %md.addr, align 8, !dbg !10131
  %hidden3 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %13, i32 0, i32 3, !dbg !10132
  store i32* %12, i32** %hidden3, align 8, !dbg !10133
  br label %return, !dbg !10134

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10134
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_grid_elem_mask(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !10135 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10136, metadata !DIExpression()), !dbg !10137
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10138, metadata !DIExpression()), !dbg !10139
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10140, metadata !DIExpression()), !dbg !10141
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10142, metadata !DIExpression()), !dbg !10143
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10144
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10145
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10146
  %3 = load i32, i32* %x.addr, align 4, !dbg !10147
  %4 = load i32, i32* %y.addr, align 4, !dbg !10148
  %call = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3, i32 %4), !dbg !10149
  %call1 = call float* @CCG_elem_mask(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !10150
  ret float* %call1, !dbg !10151
}

declare dso_local i32 @ccgSubSurf_updateNormals(%struct.CCGSubSurf*, %struct.CCGFace**, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_mask(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !10152 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10155, metadata !DIExpression()), !dbg !10156
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10159
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !10160
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10161
  %mask_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 6, !dbg !10162
  %3 = load i32, i32* %mask_offset, align 4, !dbg !10162
  %idx.ext = sext i32 %3 to i64, !dbg !10163
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !10163
  %4 = bitcast i8* %add.ptr to float*, !dbg !10164
  ret float* %4, !dbg !10165
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !10166 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10169, metadata !DIExpression()), !dbg !10170
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10171, metadata !DIExpression()), !dbg !10172
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10177
  %1 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10178
  %2 = load i32, i32* %y.addr, align 4, !dbg !10179
  %3 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10180
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %3, i32 0, i32 2, !dbg !10181
  %4 = load i32, i32* %grid_size, align 4, !dbg !10181
  %mul = mul nsw i32 %2, %4, !dbg !10182
  %5 = load i32, i32* %x.addr, align 4, !dbg !10183
  %add = add nsw i32 %mul, %5, !dbg !10184
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %0, %struct.CCGElem* %1, i32 %add), !dbg !10185
  ret %struct.CCGElem* %call, !dbg !10186
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !10187 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10190, metadata !DIExpression()), !dbg !10191
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10192, metadata !DIExpression()), !dbg !10193
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10196
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !10197
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10198
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 1, !dbg !10199
  %3 = load i32, i32* %elem_size, align 4, !dbg !10199
  %4 = load i32, i32* %offset.addr, align 4, !dbg !10200
  %mul = mul nsw i32 %3, %4, !dbg !10201
  %idx.ext = sext i32 %mul to i64, !dbg !10202
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !10202
  %5 = bitcast i8* %add.ptr to %struct.CCGElem*, !dbg !10203
  ret %struct.CCGElem* %5, !dbg !10204
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_co(%struct.CCGKey* %UNUSED_key, %struct.CCGElem* %elem) #0 !dbg !10205 {
entry:
  %UNUSED_key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %UNUSED_key, %struct.CCGKey** %UNUSED_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %UNUSED_key.addr, metadata !10206, metadata !DIExpression()), !dbg !10207
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10208, metadata !DIExpression()), !dbg !10209
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10210
  %1 = bitcast %struct.CCGElem* %0 to float*, !dbg !10211
  ret float* %1, !dbg !10212
}

; Function Attrs: noinline nounwind uwtable
define internal void @grid_tangent(%struct.CCGKey* %key, i32 %x, i32 %y, i32 %axis, %struct.CCGElem* %grid, float* %t) #0 !dbg !10213 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %axis.addr = alloca i32, align 4
  %grid.addr = alloca %struct.CCGElem*, align 8
  %t.addr = alloca float*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10216, metadata !DIExpression()), !dbg !10217
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10218, metadata !DIExpression()), !dbg !10219
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10220, metadata !DIExpression()), !dbg !10221
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !10222, metadata !DIExpression()), !dbg !10223
  store %struct.CCGElem* %grid, %struct.CCGElem** %grid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %grid.addr, metadata !10224, metadata !DIExpression()), !dbg !10225
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  %0 = load i32, i32* %axis.addr, align 4, !dbg !10228
  %cmp = icmp eq i32 %0, 0, !dbg !10230
  br i1 %cmp, label %if.then, label %if.else18, !dbg !10231

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %x.addr, align 4, !dbg !10232
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10235
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 2, !dbg !10236
  %3 = load i32, i32* %grid_size, align 4, !dbg !10236
  %sub = sub nsw i32 %3, 1, !dbg !10237
  %cmp1 = icmp eq i32 %1, %sub, !dbg !10238
  br i1 %cmp1, label %if.then2, label %if.else14, !dbg !10239

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %y.addr, align 4, !dbg !10240
  %5 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10243
  %grid_size3 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %5, i32 0, i32 2, !dbg !10244
  %6 = load i32, i32* %grid_size3, align 4, !dbg !10244
  %sub4 = sub nsw i32 %6, 1, !dbg !10245
  %cmp5 = icmp eq i32 %4, %sub4, !dbg !10246
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !10247

if.then6:                                         ; preds = %if.then2
  %7 = load float*, float** %t.addr, align 8, !dbg !10248
  %8 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10249
  %9 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10250
  %10 = load i32, i32* %x.addr, align 4, !dbg !10251
  %11 = load i32, i32* %y.addr, align 4, !dbg !10252
  %sub7 = sub nsw i32 %11, 1, !dbg !10253
  %call = call float* @CCG_grid_elem_co(%struct.CCGKey* %8, %struct.CCGElem* %9, i32 %10, i32 %sub7), !dbg !10254
  %12 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10255
  %13 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10256
  %14 = load i32, i32* %x.addr, align 4, !dbg !10257
  %sub8 = sub nsw i32 %14, 1, !dbg !10258
  %15 = load i32, i32* %y.addr, align 4, !dbg !10259
  %sub9 = sub nsw i32 %15, 1, !dbg !10260
  %call10 = call float* @CCG_grid_elem_co(%struct.CCGKey* %12, %struct.CCGElem* %13, i32 %sub8, i32 %sub9), !dbg !10261
  call void @sub_v3_v3v3(float* %7, float* %call, float* %call10), !dbg !10262
  br label %if.end, !dbg !10262

if.else:                                          ; preds = %if.then2
  %16 = load float*, float** %t.addr, align 8, !dbg !10263
  %17 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10264
  %18 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10265
  %19 = load i32, i32* %x.addr, align 4, !dbg !10266
  %20 = load i32, i32* %y.addr, align 4, !dbg !10267
  %call11 = call float* @CCG_grid_elem_co(%struct.CCGKey* %17, %struct.CCGElem* %18, i32 %19, i32 %20), !dbg !10268
  %21 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10269
  %22 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10270
  %23 = load i32, i32* %x.addr, align 4, !dbg !10271
  %sub12 = sub nsw i32 %23, 1, !dbg !10272
  %24 = load i32, i32* %y.addr, align 4, !dbg !10273
  %call13 = call float* @CCG_grid_elem_co(%struct.CCGKey* %21, %struct.CCGElem* %22, i32 %sub12, i32 %24), !dbg !10274
  call void @sub_v3_v3v3(float* %16, float* %call11, float* %call13), !dbg !10275
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end17, !dbg !10276

if.else14:                                        ; preds = %if.then
  %25 = load float*, float** %t.addr, align 8, !dbg !10277
  %26 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10278
  %27 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10279
  %28 = load i32, i32* %x.addr, align 4, !dbg !10280
  %add = add nsw i32 %28, 1, !dbg !10281
  %29 = load i32, i32* %y.addr, align 4, !dbg !10282
  %call15 = call float* @CCG_grid_elem_co(%struct.CCGKey* %26, %struct.CCGElem* %27, i32 %add, i32 %29), !dbg !10283
  %30 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10284
  %31 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10285
  %32 = load i32, i32* %x.addr, align 4, !dbg !10286
  %33 = load i32, i32* %y.addr, align 4, !dbg !10287
  %call16 = call float* @CCG_grid_elem_co(%struct.CCGKey* %30, %struct.CCGElem* %31, i32 %32, i32 %33), !dbg !10288
  call void @sub_v3_v3v3(float* %25, float* %call15, float* %call16), !dbg !10289
  br label %if.end17

if.end17:                                         ; preds = %if.else14, %if.end
  br label %if.end45, !dbg !10290

if.else18:                                        ; preds = %entry
  %34 = load i32, i32* %axis.addr, align 4, !dbg !10291
  %cmp19 = icmp eq i32 %34, 1, !dbg !10293
  br i1 %cmp19, label %if.then20, label %if.end44, !dbg !10294

if.then20:                                        ; preds = %if.else18
  %35 = load i32, i32* %y.addr, align 4, !dbg !10295
  %36 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10298
  %grid_size21 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %36, i32 0, i32 2, !dbg !10299
  %37 = load i32, i32* %grid_size21, align 4, !dbg !10299
  %sub22 = sub nsw i32 %37, 1, !dbg !10300
  %cmp23 = icmp eq i32 %35, %sub22, !dbg !10301
  br i1 %cmp23, label %if.then24, label %if.else39, !dbg !10302

if.then24:                                        ; preds = %if.then20
  %38 = load i32, i32* %x.addr, align 4, !dbg !10303
  %39 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10306
  %grid_size25 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %39, i32 0, i32 2, !dbg !10307
  %40 = load i32, i32* %grid_size25, align 4, !dbg !10307
  %sub26 = sub nsw i32 %40, 1, !dbg !10308
  %cmp27 = icmp eq i32 %38, %sub26, !dbg !10309
  br i1 %cmp27, label %if.then28, label %if.else34, !dbg !10310

if.then28:                                        ; preds = %if.then24
  %41 = load float*, float** %t.addr, align 8, !dbg !10311
  %42 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10312
  %43 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10313
  %44 = load i32, i32* %x.addr, align 4, !dbg !10314
  %sub29 = sub nsw i32 %44, 1, !dbg !10315
  %45 = load i32, i32* %y.addr, align 4, !dbg !10316
  %call30 = call float* @CCG_grid_elem_co(%struct.CCGKey* %42, %struct.CCGElem* %43, i32 %sub29, i32 %45), !dbg !10317
  %46 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10318
  %47 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10319
  %48 = load i32, i32* %x.addr, align 4, !dbg !10320
  %sub31 = sub nsw i32 %48, 1, !dbg !10321
  %49 = load i32, i32* %y.addr, align 4, !dbg !10322
  %sub32 = sub nsw i32 %49, 1, !dbg !10323
  %call33 = call float* @CCG_grid_elem_co(%struct.CCGKey* %46, %struct.CCGElem* %47, i32 %sub31, i32 %sub32), !dbg !10324
  call void @sub_v3_v3v3(float* %41, float* %call30, float* %call33), !dbg !10325
  br label %if.end38, !dbg !10325

if.else34:                                        ; preds = %if.then24
  %50 = load float*, float** %t.addr, align 8, !dbg !10326
  %51 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10327
  %52 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10328
  %53 = load i32, i32* %x.addr, align 4, !dbg !10329
  %54 = load i32, i32* %y.addr, align 4, !dbg !10330
  %call35 = call float* @CCG_grid_elem_co(%struct.CCGKey* %51, %struct.CCGElem* %52, i32 %53, i32 %54), !dbg !10331
  %55 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10332
  %56 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10333
  %57 = load i32, i32* %x.addr, align 4, !dbg !10334
  %58 = load i32, i32* %y.addr, align 4, !dbg !10335
  %sub36 = sub nsw i32 %58, 1, !dbg !10336
  %call37 = call float* @CCG_grid_elem_co(%struct.CCGKey* %55, %struct.CCGElem* %56, i32 %57, i32 %sub36), !dbg !10337
  call void @sub_v3_v3v3(float* %50, float* %call35, float* %call37), !dbg !10338
  br label %if.end38

if.end38:                                         ; preds = %if.else34, %if.then28
  br label %if.end43, !dbg !10339

if.else39:                                        ; preds = %if.then20
  %59 = load float*, float** %t.addr, align 8, !dbg !10340
  %60 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10341
  %61 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10342
  %62 = load i32, i32* %x.addr, align 4, !dbg !10343
  %63 = load i32, i32* %y.addr, align 4, !dbg !10344
  %add40 = add nsw i32 %63, 1, !dbg !10345
  %call41 = call float* @CCG_grid_elem_co(%struct.CCGKey* %60, %struct.CCGElem* %61, i32 %62, i32 %add40), !dbg !10346
  %64 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10347
  %65 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !10348
  %66 = load i32, i32* %x.addr, align 4, !dbg !10349
  %67 = load i32, i32* %y.addr, align 4, !dbg !10350
  %call42 = call float* @CCG_grid_elem_co(%struct.CCGKey* %64, %struct.CCGElem* %65, i32 %66, i32 %67), !dbg !10351
  call void @sub_v3_v3v3(float* %59, float* %call41, float* %call42), !dbg !10352
  br label %if.end43

if.end43:                                         ; preds = %if.else39, %if.end38
  br label %if.end44, !dbg !10353

if.end44:                                         ; preds = %if.end43, %if.else18
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end17
  ret void, !dbg !10354
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_grid_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !10355 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10356, metadata !DIExpression()), !dbg !10357
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10358, metadata !DIExpression()), !dbg !10359
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10362, metadata !DIExpression()), !dbg !10363
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10364
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10365
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10366
  %3 = load i32, i32* %x.addr, align 4, !dbg !10367
  %4 = load i32, i32* %y.addr, align 4, !dbg !10368
  %call = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3, i32 %4), !dbg !10369
  %call1 = call float* @CCG_elem_no(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !10370
  ret float* %call1, !dbg !10371
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !10372 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !10373, metadata !DIExpression()), !dbg !10374
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !10375, metadata !DIExpression()), !dbg !10376
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !10377
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !10378
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !10379
  %normal_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 5, !dbg !10380
  %3 = load i32, i32* %normal_offset, align 4, !dbg !10380
  %idx.ext = sext i32 %3 to i64, !dbg !10381
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !10381
  %4 = bitcast i8* %add.ptr to float*, !dbg !10382
  ret float* %4, !dbg !10383
}

; Function Attrs: nounwind
declare dso_local double @log(double) #4

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #4

; Function Attrs: noinline nounwind uwtable
define internal void @old_mdisps_rotate(i32 %S, i32 %UNUSED_newside, i32 %oldside, i32 %x, i32 %y, float* %u, float* %v) #0 !dbg !10384 {
entry:
  %S.addr = alloca i32, align 4
  %UNUSED_newside.addr = alloca i32, align 4
  %oldside.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %u.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %offset = alloca float, align 4
  store i32 %S, i32* %S.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %S.addr, metadata !10387, metadata !DIExpression()), !dbg !10388
  store i32 %UNUSED_newside, i32* %UNUSED_newside.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_newside.addr, metadata !10389, metadata !DIExpression()), !dbg !10390
  store i32 %oldside, i32* %oldside.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldside.addr, metadata !10391, metadata !DIExpression()), !dbg !10392
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10393, metadata !DIExpression()), !dbg !10394
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10395, metadata !DIExpression()), !dbg !10396
  store float* %u, float** %u.addr, align 8
  call void @llvm.dbg.declare(metadata float** %u.addr, metadata !10397, metadata !DIExpression()), !dbg !10398
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !10399, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.declare(metadata float* %offset, metadata !10401, metadata !DIExpression()), !dbg !10402
  %0 = load i32, i32* %oldside.addr, align 4, !dbg !10403
  %conv = sitofp i32 %0 to float, !dbg !10403
  %mul = fmul float %conv, 5.000000e-01, !dbg !10404
  %sub = fsub float %mul, 5.000000e-01, !dbg !10405
  store float %sub, float* %offset, align 4, !dbg !10402
  %1 = load i32, i32* %S.addr, align 4, !dbg !10406
  %cmp = icmp eq i32 %1, 1, !dbg !10408
  br i1 %cmp, label %if.then, label %if.end, !dbg !10409

if.then:                                          ; preds = %entry
  %2 = load float, float* %offset, align 4, !dbg !10410
  %3 = load i32, i32* %x.addr, align 4, !dbg !10412
  %conv2 = sitofp i32 %3 to float, !dbg !10412
  %add = fadd float %2, %conv2, !dbg !10413
  %4 = load float*, float** %u.addr, align 8, !dbg !10414
  store float %add, float* %4, align 4, !dbg !10415
  %5 = load float, float* %offset, align 4, !dbg !10416
  %6 = load i32, i32* %y.addr, align 4, !dbg !10417
  %conv3 = sitofp i32 %6 to float, !dbg !10417
  %sub4 = fsub float %5, %conv3, !dbg !10418
  %7 = load float*, float** %v.addr, align 8, !dbg !10419
  store float %sub4, float* %7, align 4, !dbg !10420
  br label %if.end, !dbg !10421

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %S.addr, align 4, !dbg !10422
  %cmp5 = icmp eq i32 %8, 2, !dbg !10424
  br i1 %cmp5, label %if.then7, label %if.end12, !dbg !10425

if.then7:                                         ; preds = %if.end
  %9 = load float, float* %offset, align 4, !dbg !10426
  %10 = load i32, i32* %y.addr, align 4, !dbg !10428
  %conv8 = sitofp i32 %10 to float, !dbg !10428
  %add9 = fadd float %9, %conv8, !dbg !10429
  %11 = load float*, float** %u.addr, align 8, !dbg !10430
  store float %add9, float* %11, align 4, !dbg !10431
  %12 = load float, float* %offset, align 4, !dbg !10432
  %13 = load i32, i32* %x.addr, align 4, !dbg !10433
  %conv10 = sitofp i32 %13 to float, !dbg !10433
  %add11 = fadd float %12, %conv10, !dbg !10434
  %14 = load float*, float** %v.addr, align 8, !dbg !10435
  store float %add11, float* %14, align 4, !dbg !10436
  br label %if.end12, !dbg !10437

if.end12:                                         ; preds = %if.then7, %if.end
  %15 = load i32, i32* %S.addr, align 4, !dbg !10438
  %cmp13 = icmp eq i32 %15, 3, !dbg !10440
  br i1 %cmp13, label %if.then15, label %if.end20, !dbg !10441

if.then15:                                        ; preds = %if.end12
  %16 = load float, float* %offset, align 4, !dbg !10442
  %17 = load i32, i32* %x.addr, align 4, !dbg !10444
  %conv16 = sitofp i32 %17 to float, !dbg !10444
  %sub17 = fsub float %16, %conv16, !dbg !10445
  %18 = load float*, float** %u.addr, align 8, !dbg !10446
  store float %sub17, float* %18, align 4, !dbg !10447
  %19 = load float, float* %offset, align 4, !dbg !10448
  %20 = load i32, i32* %y.addr, align 4, !dbg !10449
  %conv18 = sitofp i32 %20 to float, !dbg !10449
  %add19 = fadd float %19, %conv18, !dbg !10450
  %21 = load float*, float** %v.addr, align 8, !dbg !10451
  store float %add19, float* %21, align 4, !dbg !10452
  br label %if.end20, !dbg !10453

if.end20:                                         ; preds = %if.then15, %if.end12
  %22 = load i32, i32* %S.addr, align 4, !dbg !10454
  %cmp21 = icmp eq i32 %22, 0, !dbg !10456
  br i1 %cmp21, label %if.then23, label %if.end28, !dbg !10457

if.then23:                                        ; preds = %if.end20
  %23 = load float, float* %offset, align 4, !dbg !10458
  %24 = load i32, i32* %y.addr, align 4, !dbg !10460
  %conv24 = sitofp i32 %24 to float, !dbg !10460
  %sub25 = fsub float %23, %conv24, !dbg !10461
  %25 = load float*, float** %u.addr, align 8, !dbg !10462
  store float %sub25, float* %25, align 4, !dbg !10463
  %26 = load float, float* %offset, align 4, !dbg !10464
  %27 = load i32, i32* %x.addr, align 4, !dbg !10465
  %conv26 = sitofp i32 %27 to float, !dbg !10465
  %sub27 = fsub float %26, %conv26, !dbg !10466
  %28 = load float*, float** %v.addr, align 8, !dbg !10467
  store float %sub27, float* %28, align 4, !dbg !10468
  br label %if.end28, !dbg !10469

if.end28:                                         ; preds = %if.then23, %if.end20
  ret void, !dbg !10470
}

declare dso_local i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace*) #2

declare dso_local i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace*) #2

declare dso_local i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf*, %struct.CCGFace*, i32, i32) #2

declare dso_local i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf*, %struct.CCGFace*, i32, i32, i32) #2

declare dso_local i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf*) #2

declare dso_local i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf*, %struct.CCGEdge*, i32) #2

declare dso_local i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf*) #2

declare dso_local i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf*, %struct.CCGVert*) #2

declare dso_local i32 @ccgSubSurf_updateToFaces(%struct.CCGSubSurf*, i32, %struct.CCGFace**, i32) #2

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

; Function Attrs: noinline nounwind uwtable
define internal void @create_old_vert_face_map(%struct.ListBase** %map, %struct.IndexNode** %mem, %struct.MultiresFace* %mface, i32 %totvert, i32 %totface) #0 !dbg !10471 {
entry:
  %map.addr = alloca %struct.ListBase**, align 8
  %mem.addr = alloca %struct.IndexNode**, align 8
  %mface.addr = alloca %struct.MultiresFace*, align 8
  %totvert.addr = alloca i32, align 4
  %totface.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %node = alloca %struct.IndexNode*, align 8
  store %struct.ListBase** %map, %struct.ListBase*** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %map.addr, metadata !10476, metadata !DIExpression()), !dbg !10477
  store %struct.IndexNode** %mem, %struct.IndexNode*** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndexNode*** %mem.addr, metadata !10478, metadata !DIExpression()), !dbg !10479
  store %struct.MultiresFace* %mface, %struct.MultiresFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresFace** %mface.addr, metadata !10480, metadata !DIExpression()), !dbg !10481
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !10482, metadata !DIExpression()), !dbg !10483
  store i32 %totface, i32* %totface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totface.addr, metadata !10484, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10486, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10488, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.declare(metadata %struct.IndexNode** %node, metadata !10490, metadata !DIExpression()), !dbg !10491
  store %struct.IndexNode* null, %struct.IndexNode** %node, align 8, !dbg !10491
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10492
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !10493
  %conv = sext i32 %1 to i64, !dbg !10493
  %mul = mul i64 16, %conv, !dbg !10494
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0)), !dbg !10492
  %2 = bitcast i8* %call to %struct.ListBase*, !dbg !10492
  %3 = load %struct.ListBase**, %struct.ListBase*** %map.addr, align 8, !dbg !10495
  store %struct.ListBase* %2, %struct.ListBase** %3, align 8, !dbg !10496
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10497
  %5 = load i32, i32* %totface.addr, align 4, !dbg !10498
  %conv1 = sext i32 %5 to i64, !dbg !10498
  %mul2 = mul i64 24, %conv1, !dbg !10499
  %mul3 = mul i64 %mul2, 4, !dbg !10500
  %call4 = call i8* %4(i64 %mul3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0)), !dbg !10497
  %6 = bitcast i8* %call4 to %struct.IndexNode*, !dbg !10497
  %7 = load %struct.IndexNode**, %struct.IndexNode*** %mem.addr, align 8, !dbg !10501
  store %struct.IndexNode* %6, %struct.IndexNode** %7, align 8, !dbg !10502
  %8 = load %struct.IndexNode**, %struct.IndexNode*** %mem.addr, align 8, !dbg !10503
  %9 = load %struct.IndexNode*, %struct.IndexNode** %8, align 8, !dbg !10504
  store %struct.IndexNode* %9, %struct.IndexNode** %node, align 8, !dbg !10505
  store i32 0, i32* %i, align 4, !dbg !10506
  br label %for.cond, !dbg !10508

for.cond:                                         ; preds = %for.inc18, %entry
  %10 = load i32, i32* %i, align 4, !dbg !10509
  %11 = load i32, i32* %totface.addr, align 4, !dbg !10511
  %cmp = icmp slt i32 %10, %11, !dbg !10512
  br i1 %cmp, label %for.body, label %for.end20, !dbg !10513

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10514
  br label %for.cond6, !dbg !10517

for.cond6:                                        ; preds = %for.inc, %for.body
  %12 = load i32, i32* %j, align 4, !dbg !10518
  %13 = load %struct.MultiresFace*, %struct.MultiresFace** %mface.addr, align 8, !dbg !10520
  %14 = load i32, i32* %i, align 4, !dbg !10521
  %idxprom = sext i32 %14 to i64, !dbg !10520
  %arrayidx = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %13, i64 %idxprom, !dbg !10520
  %v = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx, i32 0, i32 0, !dbg !10522
  %arrayidx7 = getelementptr inbounds [4 x i32], [4 x i32]* %v, i64 0, i64 3, !dbg !10520
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !10520
  %tobool = icmp ne i32 %15, 0, !dbg !10520
  %16 = zext i1 %tobool to i64, !dbg !10520
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !10520
  %cmp8 = icmp slt i32 %12, %cond, !dbg !10523
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !10524

for.body10:                                       ; preds = %for.cond6
  %17 = load i32, i32* %i, align 4, !dbg !10525
  %18 = load %struct.IndexNode*, %struct.IndexNode** %node, align 8, !dbg !10527
  %index = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %18, i32 0, i32 2, !dbg !10528
  store i32 %17, i32* %index, align 8, !dbg !10529
  %19 = load %struct.ListBase**, %struct.ListBase*** %map.addr, align 8, !dbg !10530
  %20 = load %struct.ListBase*, %struct.ListBase** %19, align 8, !dbg !10531
  %21 = load %struct.MultiresFace*, %struct.MultiresFace** %mface.addr, align 8, !dbg !10532
  %22 = load i32, i32* %i, align 4, !dbg !10533
  %idxprom11 = sext i32 %22 to i64, !dbg !10532
  %arrayidx12 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %21, i64 %idxprom11, !dbg !10532
  %v13 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx12, i32 0, i32 0, !dbg !10534
  %23 = load i32, i32* %j, align 4, !dbg !10535
  %idxprom14 = sext i32 %23 to i64, !dbg !10532
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %v13, i64 0, i64 %idxprom14, !dbg !10532
  %24 = load i32, i32* %arrayidx15, align 4, !dbg !10532
  %idxprom16 = zext i32 %24 to i64, !dbg !10536
  %arrayidx17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %20, i64 %idxprom16, !dbg !10536
  %25 = load %struct.IndexNode*, %struct.IndexNode** %node, align 8, !dbg !10537
  %26 = bitcast %struct.IndexNode* %25 to i8*, !dbg !10537
  call void @BLI_addtail(%struct.ListBase* %arrayidx17, i8* %26), !dbg !10538
  br label %for.inc, !dbg !10539

for.inc:                                          ; preds = %for.body10
  %27 = load i32, i32* %j, align 4, !dbg !10540
  %inc = add nsw i32 %27, 1, !dbg !10540
  store i32 %inc, i32* %j, align 4, !dbg !10540
  %28 = load %struct.IndexNode*, %struct.IndexNode** %node, align 8, !dbg !10541
  %incdec.ptr = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %28, i32 1, !dbg !10541
  store %struct.IndexNode* %incdec.ptr, %struct.IndexNode** %node, align 8, !dbg !10541
  br label %for.cond6, !dbg !10542, !llvm.loop !10543

for.end:                                          ; preds = %for.cond6
  br label %for.inc18, !dbg !10545

for.inc18:                                        ; preds = %for.end
  %29 = load i32, i32* %i, align 4, !dbg !10546
  %inc19 = add nsw i32 %29, 1, !dbg !10546
  store i32 %inc19, i32* %i, align 4, !dbg !10546
  br label %for.cond, !dbg !10547, !llvm.loop !10548

for.end20:                                        ; preds = %for.cond
  ret void, !dbg !10550
}

; Function Attrs: noinline nounwind uwtable
define internal void @create_old_vert_edge_map(%struct.ListBase** %map, %struct.IndexNode** %mem, %struct.MultiresEdge* %medge, i32 %totvert, i32 %totedge) #0 !dbg !10551 {
entry:
  %map.addr = alloca %struct.ListBase**, align 8
  %mem.addr = alloca %struct.IndexNode**, align 8
  %medge.addr = alloca %struct.MultiresEdge*, align 8
  %totvert.addr = alloca i32, align 4
  %totedge.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %node = alloca %struct.IndexNode*, align 8
  store %struct.ListBase** %map, %struct.ListBase*** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %map.addr, metadata !10556, metadata !DIExpression()), !dbg !10557
  store %struct.IndexNode** %mem, %struct.IndexNode*** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IndexNode*** %mem.addr, metadata !10558, metadata !DIExpression()), !dbg !10559
  store %struct.MultiresEdge* %medge, %struct.MultiresEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresEdge** %medge.addr, metadata !10560, metadata !DIExpression()), !dbg !10561
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !10562, metadata !DIExpression()), !dbg !10563
  store i32 %totedge, i32* %totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge.addr, metadata !10564, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10566, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10568, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.declare(metadata %struct.IndexNode** %node, metadata !10570, metadata !DIExpression()), !dbg !10571
  store %struct.IndexNode* null, %struct.IndexNode** %node, align 8, !dbg !10571
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10572
  %1 = load i32, i32* %totvert.addr, align 4, !dbg !10573
  %conv = sext i32 %1 to i64, !dbg !10573
  %mul = mul i64 16, %conv, !dbg !10574
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0)), !dbg !10572
  %2 = bitcast i8* %call to %struct.ListBase*, !dbg !10572
  %3 = load %struct.ListBase**, %struct.ListBase*** %map.addr, align 8, !dbg !10575
  store %struct.ListBase* %2, %struct.ListBase** %3, align 8, !dbg !10576
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10577
  %5 = load i32, i32* %totedge.addr, align 4, !dbg !10578
  %conv1 = sext i32 %5 to i64, !dbg !10578
  %mul2 = mul i64 24, %conv1, !dbg !10579
  %mul3 = mul i64 %mul2, 2, !dbg !10580
  %call4 = call i8* %4(i64 %mul3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0)), !dbg !10577
  %6 = bitcast i8* %call4 to %struct.IndexNode*, !dbg !10577
  %7 = load %struct.IndexNode**, %struct.IndexNode*** %mem.addr, align 8, !dbg !10581
  store %struct.IndexNode* %6, %struct.IndexNode** %7, align 8, !dbg !10582
  %8 = load %struct.IndexNode**, %struct.IndexNode*** %mem.addr, align 8, !dbg !10583
  %9 = load %struct.IndexNode*, %struct.IndexNode** %8, align 8, !dbg !10584
  store %struct.IndexNode* %9, %struct.IndexNode** %node, align 8, !dbg !10585
  store i32 0, i32* %i, align 4, !dbg !10586
  br label %for.cond, !dbg !10588

for.cond:                                         ; preds = %for.inc14, %entry
  %10 = load i32, i32* %i, align 4, !dbg !10589
  %11 = load i32, i32* %totedge.addr, align 4, !dbg !10591
  %cmp = icmp slt i32 %10, %11, !dbg !10592
  br i1 %cmp, label %for.body, label %for.end16, !dbg !10593

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10594
  br label %for.cond6, !dbg !10597

for.cond6:                                        ; preds = %for.inc, %for.body
  %12 = load i32, i32* %j, align 4, !dbg !10598
  %cmp7 = icmp slt i32 %12, 2, !dbg !10600
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !10601

for.body9:                                        ; preds = %for.cond6
  %13 = load i32, i32* %i, align 4, !dbg !10602
  %14 = load %struct.IndexNode*, %struct.IndexNode** %node, align 8, !dbg !10604
  %index = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %14, i32 0, i32 2, !dbg !10605
  store i32 %13, i32* %index, align 8, !dbg !10606
  %15 = load %struct.ListBase**, %struct.ListBase*** %map.addr, align 8, !dbg !10607
  %16 = load %struct.ListBase*, %struct.ListBase** %15, align 8, !dbg !10608
  %17 = load %struct.MultiresEdge*, %struct.MultiresEdge** %medge.addr, align 8, !dbg !10609
  %18 = load i32, i32* %i, align 4, !dbg !10610
  %idxprom = sext i32 %18 to i64, !dbg !10609
  %arrayidx = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %17, i64 %idxprom, !dbg !10609
  %v = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %arrayidx, i32 0, i32 0, !dbg !10611
  %19 = load i32, i32* %j, align 4, !dbg !10612
  %idxprom10 = sext i32 %19 to i64, !dbg !10609
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %v, i64 0, i64 %idxprom10, !dbg !10609
  %20 = load i32, i32* %arrayidx11, align 4, !dbg !10609
  %idxprom12 = zext i32 %20 to i64, !dbg !10613
  %arrayidx13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %16, i64 %idxprom12, !dbg !10613
  %21 = load %struct.IndexNode*, %struct.IndexNode** %node, align 8, !dbg !10614
  %22 = bitcast %struct.IndexNode* %21 to i8*, !dbg !10614
  call void @BLI_addtail(%struct.ListBase* %arrayidx13, i8* %22), !dbg !10615
  br label %for.inc, !dbg !10616

for.inc:                                          ; preds = %for.body9
  %23 = load i32, i32* %j, align 4, !dbg !10617
  %inc = add nsw i32 %23, 1, !dbg !10617
  store i32 %inc, i32* %j, align 4, !dbg !10617
  %24 = load %struct.IndexNode*, %struct.IndexNode** %node, align 8, !dbg !10618
  %incdec.ptr = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %24, i32 1, !dbg !10618
  store %struct.IndexNode* %incdec.ptr, %struct.IndexNode** %node, align 8, !dbg !10618
  br label %for.cond6, !dbg !10619, !llvm.loop !10620

for.end:                                          ; preds = %for.cond6
  br label %for.inc14, !dbg !10622

for.inc14:                                        ; preds = %for.end
  %25 = load i32, i32* %i, align 4, !dbg !10623
  %inc15 = add nsw i32 %25, 1, !dbg !10623
  store i32 %inc15, i32* %i, align 4, !dbg !10623
  br label %for.cond, !dbg !10624, !llvm.loop !10625

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !10627
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_load_old_faces(%struct.ListBase** %fmap, %struct.ListBase** %emap, %struct.MultiresLevel* %lvl, i32* %vvmap, i32 %dst, i32 %v1, i32 %v2, i32 %v3, i32 %v4, i32 %st2, i32 %st3) #0 !dbg !10628 {
entry:
  %fmap.addr = alloca %struct.ListBase**, align 8
  %emap.addr = alloca %struct.ListBase**, align 8
  %lvl.addr = alloca %struct.MultiresLevel*, align 8
  %vvmap.addr = alloca i32*, align 8
  %dst.addr = alloca i32, align 4
  %v1.addr = alloca i32, align 4
  %v2.addr = alloca i32, align 4
  %v3.addr = alloca i32, align 4
  %v4.addr = alloca i32, align 4
  %st2.addr = alloca i32, align 4
  %st3.addr = alloca i32, align 4
  %fmid = alloca i32, align 4
  %emid13 = alloca i32, align 4
  %emid14 = alloca i32, align 4
  %emid23 = alloca i32, align 4
  %emid24 = alloca i32, align 4
  store %struct.ListBase** %fmap, %struct.ListBase*** %fmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %fmap.addr, metadata !10631, metadata !DIExpression()), !dbg !10632
  store %struct.ListBase** %emap, %struct.ListBase*** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %emap.addr, metadata !10633, metadata !DIExpression()), !dbg !10634
  store %struct.MultiresLevel* %lvl, %struct.MultiresLevel** %lvl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl.addr, metadata !10635, metadata !DIExpression()), !dbg !10636
  store i32* %vvmap, i32** %vvmap.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %vvmap.addr, metadata !10637, metadata !DIExpression()), !dbg !10638
  store i32 %dst, i32* %dst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst.addr, metadata !10639, metadata !DIExpression()), !dbg !10640
  store i32 %v1, i32* %v1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v1.addr, metadata !10641, metadata !DIExpression()), !dbg !10642
  store i32 %v2, i32* %v2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v2.addr, metadata !10643, metadata !DIExpression()), !dbg !10644
  store i32 %v3, i32* %v3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v3.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  store i32 %v4, i32* %v4.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v4.addr, metadata !10647, metadata !DIExpression()), !dbg !10648
  store i32 %st2, i32* %st2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %st2.addr, metadata !10649, metadata !DIExpression()), !dbg !10650
  store i32 %st3, i32* %st3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %st3.addr, metadata !10651, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata i32* %fmid, metadata !10653, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.declare(metadata i32* %emid13, metadata !10655, metadata !DIExpression()), !dbg !10656
  call void @llvm.dbg.declare(metadata i32* %emid14, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.declare(metadata i32* %emid23, metadata !10659, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.declare(metadata i32* %emid24, metadata !10661, metadata !DIExpression()), !dbg !10662
  %0 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10663
  %tobool = icmp ne %struct.MultiresLevel* %0, null, !dbg !10663
  br i1 %tobool, label %land.lhs.true, label %if.end53, !dbg !10665

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10666
  %next = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %1, i32 0, i32 0, !dbg !10667
  %2 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next, align 8, !dbg !10667
  %tobool1 = icmp ne %struct.MultiresLevel* %2, null, !dbg !10666
  br i1 %tobool1, label %if.then, label %if.end53, !dbg !10668

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.ListBase**, %struct.ListBase*** %fmap.addr, align 8, !dbg !10669
  %arrayidx = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %3, i64 1, !dbg !10669
  %4 = load %struct.ListBase*, %struct.ListBase** %arrayidx, align 8, !dbg !10669
  %5 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10671
  %faces = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %5, i32 0, i32 2, !dbg !10672
  %6 = load %struct.MultiresFace*, %struct.MultiresFace** %faces, align 8, !dbg !10672
  %7 = load i32, i32* %v1.addr, align 4, !dbg !10673
  %8 = load i32, i32* %v2.addr, align 4, !dbg !10674
  %9 = load i32, i32* %v3.addr, align 4, !dbg !10675
  %10 = load i32, i32* %v4.addr, align 4, !dbg !10676
  %call = call %struct.MultiresFace* @find_old_face(%struct.ListBase* %4, %struct.MultiresFace* %6, i32 %7, i32 %8, i32 %9, i32 %10), !dbg !10677
  %mid = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %call, i32 0, i32 1, !dbg !10678
  %11 = load i32, i32* %mid, align 4, !dbg !10678
  store i32 %11, i32* %fmid, align 4, !dbg !10679
  %12 = load i32, i32* %fmid, align 4, !dbg !10680
  %13 = load i32*, i32** %vvmap.addr, align 8, !dbg !10681
  %14 = load i32, i32* %dst.addr, align 4, !dbg !10682
  %idxprom = sext i32 %14 to i64, !dbg !10681
  %arrayidx2 = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !10681
  store i32 %12, i32* %arrayidx2, align 4, !dbg !10683
  %15 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10684
  %arrayidx3 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %15, i64 1, !dbg !10684
  %16 = load %struct.ListBase*, %struct.ListBase** %arrayidx3, align 8, !dbg !10684
  %17 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10685
  %edges = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %17, i32 0, i32 4, !dbg !10686
  %18 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges, align 8, !dbg !10686
  %19 = load i32, i32* %v1.addr, align 4, !dbg !10687
  %20 = load i32, i32* %v3.addr, align 4, !dbg !10688
  %call4 = call %struct.MultiresEdge* @find_old_edge(%struct.ListBase* %16, %struct.MultiresEdge* %18, i32 %19, i32 %20), !dbg !10689
  %mid5 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %call4, i32 0, i32 1, !dbg !10690
  %21 = load i32, i32* %mid5, align 4, !dbg !10690
  store i32 %21, i32* %emid13, align 4, !dbg !10691
  %22 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10692
  %arrayidx6 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %22, i64 1, !dbg !10692
  %23 = load %struct.ListBase*, %struct.ListBase** %arrayidx6, align 8, !dbg !10692
  %24 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10693
  %edges7 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %24, i32 0, i32 4, !dbg !10694
  %25 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges7, align 8, !dbg !10694
  %26 = load i32, i32* %v1.addr, align 4, !dbg !10695
  %27 = load i32, i32* %v4.addr, align 4, !dbg !10696
  %call8 = call %struct.MultiresEdge* @find_old_edge(%struct.ListBase* %23, %struct.MultiresEdge* %25, i32 %26, i32 %27), !dbg !10697
  %mid9 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %call8, i32 0, i32 1, !dbg !10698
  %28 = load i32, i32* %mid9, align 4, !dbg !10698
  store i32 %28, i32* %emid14, align 4, !dbg !10699
  %29 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10700
  %arrayidx10 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %29, i64 1, !dbg !10700
  %30 = load %struct.ListBase*, %struct.ListBase** %arrayidx10, align 8, !dbg !10700
  %31 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10701
  %edges11 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %31, i32 0, i32 4, !dbg !10702
  %32 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges11, align 8, !dbg !10702
  %33 = load i32, i32* %v2.addr, align 4, !dbg !10703
  %34 = load i32, i32* %v3.addr, align 4, !dbg !10704
  %call12 = call %struct.MultiresEdge* @find_old_edge(%struct.ListBase* %30, %struct.MultiresEdge* %32, i32 %33, i32 %34), !dbg !10705
  %mid13 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %call12, i32 0, i32 1, !dbg !10706
  %35 = load i32, i32* %mid13, align 4, !dbg !10706
  store i32 %35, i32* %emid23, align 4, !dbg !10707
  %36 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10708
  %arrayidx14 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %36, i64 1, !dbg !10708
  %37 = load %struct.ListBase*, %struct.ListBase** %arrayidx14, align 8, !dbg !10708
  %38 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10709
  %edges15 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %38, i32 0, i32 4, !dbg !10710
  %39 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges15, align 8, !dbg !10710
  %40 = load i32, i32* %v2.addr, align 4, !dbg !10711
  %41 = load i32, i32* %v4.addr, align 4, !dbg !10712
  %call16 = call %struct.MultiresEdge* @find_old_edge(%struct.ListBase* %37, %struct.MultiresEdge* %39, i32 %40, i32 %41), !dbg !10713
  %mid17 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %call16, i32 0, i32 1, !dbg !10714
  %42 = load i32, i32* %mid17, align 4, !dbg !10714
  store i32 %42, i32* %emid24, align 4, !dbg !10715
  %43 = load %struct.ListBase**, %struct.ListBase*** %fmap.addr, align 8, !dbg !10716
  %add.ptr = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %43, i64 1, !dbg !10717
  %44 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10718
  %add.ptr18 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %44, i64 1, !dbg !10719
  %45 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10720
  %next19 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %45, i32 0, i32 0, !dbg !10721
  %46 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next19, align 8, !dbg !10721
  %47 = load i32*, i32** %vvmap.addr, align 8, !dbg !10722
  %48 = load i32, i32* %dst.addr, align 4, !dbg !10723
  %49 = load i32, i32* %st2.addr, align 4, !dbg !10724
  %50 = load i32, i32* %st3.addr, align 4, !dbg !10725
  %mul = mul nsw i32 %49, %50, !dbg !10726
  %add = add nsw i32 %48, %mul, !dbg !10727
  %51 = load i32, i32* %st3.addr, align 4, !dbg !10728
  %add20 = add nsw i32 %add, %51, !dbg !10729
  %52 = load i32, i32* %fmid, align 4, !dbg !10730
  %53 = load i32, i32* %v2.addr, align 4, !dbg !10731
  %54 = load i32, i32* %emid23, align 4, !dbg !10732
  %55 = load i32, i32* %emid24, align 4, !dbg !10733
  %56 = load i32, i32* %st2.addr, align 4, !dbg !10734
  %57 = load i32, i32* %st3.addr, align 4, !dbg !10735
  %div = sdiv i32 %57, 2, !dbg !10736
  call void @multires_load_old_faces(%struct.ListBase** %add.ptr, %struct.ListBase** %add.ptr18, %struct.MultiresLevel* %46, i32* %47, i32 %add20, i32 %52, i32 %53, i32 %54, i32 %55, i32 %56, i32 %div), !dbg !10737
  %58 = load %struct.ListBase**, %struct.ListBase*** %fmap.addr, align 8, !dbg !10738
  %add.ptr21 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %58, i64 1, !dbg !10739
  %59 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10740
  %add.ptr22 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %59, i64 1, !dbg !10741
  %60 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10742
  %next23 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %60, i32 0, i32 0, !dbg !10743
  %61 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next23, align 8, !dbg !10743
  %62 = load i32*, i32** %vvmap.addr, align 8, !dbg !10744
  %63 = load i32, i32* %dst.addr, align 4, !dbg !10745
  %64 = load i32, i32* %st2.addr, align 4, !dbg !10746
  %65 = load i32, i32* %st3.addr, align 4, !dbg !10747
  %mul24 = mul nsw i32 %64, %65, !dbg !10748
  %sub = sub nsw i32 %63, %mul24, !dbg !10749
  %66 = load i32, i32* %st3.addr, align 4, !dbg !10750
  %add25 = add nsw i32 %sub, %66, !dbg !10751
  %67 = load i32, i32* %emid14, align 4, !dbg !10752
  %68 = load i32, i32* %emid24, align 4, !dbg !10753
  %69 = load i32, i32* %fmid, align 4, !dbg !10754
  %70 = load i32, i32* %v4.addr, align 4, !dbg !10755
  %71 = load i32, i32* %st2.addr, align 4, !dbg !10756
  %72 = load i32, i32* %st3.addr, align 4, !dbg !10757
  %div26 = sdiv i32 %72, 2, !dbg !10758
  call void @multires_load_old_faces(%struct.ListBase** %add.ptr21, %struct.ListBase** %add.ptr22, %struct.MultiresLevel* %61, i32* %62, i32 %add25, i32 %67, i32 %68, i32 %69, i32 %70, i32 %71, i32 %div26), !dbg !10759
  %73 = load %struct.ListBase**, %struct.ListBase*** %fmap.addr, align 8, !dbg !10760
  %add.ptr27 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %73, i64 1, !dbg !10761
  %74 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10762
  %add.ptr28 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %74, i64 1, !dbg !10763
  %75 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10764
  %next29 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %75, i32 0, i32 0, !dbg !10765
  %76 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next29, align 8, !dbg !10765
  %77 = load i32*, i32** %vvmap.addr, align 8, !dbg !10766
  %78 = load i32, i32* %dst.addr, align 4, !dbg !10767
  %79 = load i32, i32* %st2.addr, align 4, !dbg !10768
  %80 = load i32, i32* %st3.addr, align 4, !dbg !10769
  %mul30 = mul nsw i32 %79, %80, !dbg !10770
  %add31 = add nsw i32 %78, %mul30, !dbg !10771
  %81 = load i32, i32* %st3.addr, align 4, !dbg !10772
  %sub32 = sub nsw i32 %add31, %81, !dbg !10773
  %82 = load i32, i32* %emid13, align 4, !dbg !10774
  %83 = load i32, i32* %emid23, align 4, !dbg !10775
  %84 = load i32, i32* %v3.addr, align 4, !dbg !10776
  %85 = load i32, i32* %fmid, align 4, !dbg !10777
  %86 = load i32, i32* %st2.addr, align 4, !dbg !10778
  %87 = load i32, i32* %st3.addr, align 4, !dbg !10779
  %div33 = sdiv i32 %87, 2, !dbg !10780
  call void @multires_load_old_faces(%struct.ListBase** %add.ptr27, %struct.ListBase** %add.ptr28, %struct.MultiresLevel* %76, i32* %77, i32 %sub32, i32 %82, i32 %83, i32 %84, i32 %85, i32 %86, i32 %div33), !dbg !10781
  %88 = load %struct.ListBase**, %struct.ListBase*** %fmap.addr, align 8, !dbg !10782
  %add.ptr34 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %88, i64 1, !dbg !10783
  %89 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10784
  %add.ptr35 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %89, i64 1, !dbg !10785
  %90 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10786
  %next36 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %90, i32 0, i32 0, !dbg !10787
  %91 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next36, align 8, !dbg !10787
  %92 = load i32*, i32** %vvmap.addr, align 8, !dbg !10788
  %93 = load i32, i32* %dst.addr, align 4, !dbg !10789
  %94 = load i32, i32* %st2.addr, align 4, !dbg !10790
  %95 = load i32, i32* %st3.addr, align 4, !dbg !10791
  %mul37 = mul nsw i32 %94, %95, !dbg !10792
  %sub38 = sub nsw i32 %93, %mul37, !dbg !10793
  %96 = load i32, i32* %st3.addr, align 4, !dbg !10794
  %sub39 = sub nsw i32 %sub38, %96, !dbg !10795
  %97 = load i32, i32* %v1.addr, align 4, !dbg !10796
  %98 = load i32, i32* %fmid, align 4, !dbg !10797
  %99 = load i32, i32* %emid13, align 4, !dbg !10798
  %100 = load i32, i32* %emid14, align 4, !dbg !10799
  %101 = load i32, i32* %st2.addr, align 4, !dbg !10800
  %102 = load i32, i32* %st3.addr, align 4, !dbg !10801
  %div40 = sdiv i32 %102, 2, !dbg !10802
  call void @multires_load_old_faces(%struct.ListBase** %add.ptr34, %struct.ListBase** %add.ptr35, %struct.MultiresLevel* %91, i32* %92, i32 %sub39, i32 %97, i32 %98, i32 %99, i32 %100, i32 %101, i32 %div40), !dbg !10803
  %103 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10804
  %next41 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %103, i32 0, i32 0, !dbg !10806
  %104 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next41, align 8, !dbg !10806
  %next42 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %104, i32 0, i32 0, !dbg !10807
  %105 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next42, align 8, !dbg !10807
  %tobool43 = icmp ne %struct.MultiresLevel* %105, null, !dbg !10804
  br i1 %tobool43, label %if.then44, label %if.end, !dbg !10808

if.then44:                                        ; preds = %if.then
  %106 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10809
  %107 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10811
  %next45 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %107, i32 0, i32 0, !dbg !10812
  %108 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next45, align 8, !dbg !10812
  %109 = load i32*, i32** %vvmap.addr, align 8, !dbg !10813
  %110 = load i32, i32* %dst.addr, align 4, !dbg !10814
  %111 = load i32, i32* %emid24, align 4, !dbg !10815
  %112 = load i32, i32* %fmid, align 4, !dbg !10816
  %113 = load i32, i32* %st3.addr, align 4, !dbg !10817
  call void @multires_load_old_edges(%struct.ListBase** %106, %struct.MultiresLevel* %108, i32* %109, i32 %110, i32 %111, i32 %112, i32 %113), !dbg !10818
  %114 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10819
  %115 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10820
  %next46 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %115, i32 0, i32 0, !dbg !10821
  %116 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next46, align 8, !dbg !10821
  %117 = load i32*, i32** %vvmap.addr, align 8, !dbg !10822
  %118 = load i32, i32* %dst.addr, align 4, !dbg !10823
  %119 = load i32, i32* %emid13, align 4, !dbg !10824
  %120 = load i32, i32* %fmid, align 4, !dbg !10825
  %121 = load i32, i32* %st3.addr, align 4, !dbg !10826
  %sub47 = sub nsw i32 0, %121, !dbg !10827
  call void @multires_load_old_edges(%struct.ListBase** %114, %struct.MultiresLevel* %116, i32* %117, i32 %118, i32 %119, i32 %120, i32 %sub47), !dbg !10828
  %122 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10829
  %123 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10830
  %next48 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %123, i32 0, i32 0, !dbg !10831
  %124 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next48, align 8, !dbg !10831
  %125 = load i32*, i32** %vvmap.addr, align 8, !dbg !10832
  %126 = load i32, i32* %dst.addr, align 4, !dbg !10833
  %127 = load i32, i32* %emid14, align 4, !dbg !10834
  %128 = load i32, i32* %fmid, align 4, !dbg !10835
  %129 = load i32, i32* %st2.addr, align 4, !dbg !10836
  %sub49 = sub nsw i32 0, %129, !dbg !10837
  %130 = load i32, i32* %st3.addr, align 4, !dbg !10838
  %mul50 = mul nsw i32 %sub49, %130, !dbg !10839
  call void @multires_load_old_edges(%struct.ListBase** %122, %struct.MultiresLevel* %124, i32* %125, i32 %126, i32 %127, i32 %128, i32 %mul50), !dbg !10840
  %131 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !10841
  %132 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !10842
  %next51 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %132, i32 0, i32 0, !dbg !10843
  %133 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next51, align 8, !dbg !10843
  %134 = load i32*, i32** %vvmap.addr, align 8, !dbg !10844
  %135 = load i32, i32* %dst.addr, align 4, !dbg !10845
  %136 = load i32, i32* %emid23, align 4, !dbg !10846
  %137 = load i32, i32* %fmid, align 4, !dbg !10847
  %138 = load i32, i32* %st2.addr, align 4, !dbg !10848
  %139 = load i32, i32* %st3.addr, align 4, !dbg !10849
  %mul52 = mul nsw i32 %138, %139, !dbg !10850
  call void @multires_load_old_edges(%struct.ListBase** %131, %struct.MultiresLevel* %133, i32* %134, i32 %135, i32 %136, i32 %137, i32 %mul52), !dbg !10851
  br label %if.end, !dbg !10852

if.end:                                           ; preds = %if.then44, %if.then
  br label %if.end53, !dbg !10853

if.end53:                                         ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !10854
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MultiresEdge* @find_old_edge(%struct.ListBase* %map, %struct.MultiresEdge* %edges, i32 %v1, i32 %v2) #0 !dbg !10855 {
entry:
  %retval = alloca %struct.MultiresEdge*, align 8
  %map.addr = alloca %struct.ListBase*, align 8
  %edges.addr = alloca %struct.MultiresEdge*, align 8
  %v1.addr = alloca i32, align 4
  %v2.addr = alloca i32, align 4
  %n1 = alloca %struct.IndexNode*, align 8
  %n2 = alloca %struct.IndexNode*, align 8
  store %struct.ListBase* %map, %struct.ListBase** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %map.addr, metadata !10858, metadata !DIExpression()), !dbg !10859
  store %struct.MultiresEdge* %edges, %struct.MultiresEdge** %edges.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresEdge** %edges.addr, metadata !10860, metadata !DIExpression()), !dbg !10861
  store i32 %v1, i32* %v1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v1.addr, metadata !10862, metadata !DIExpression()), !dbg !10863
  store i32 %v2, i32* %v2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v2.addr, metadata !10864, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.declare(metadata %struct.IndexNode** %n1, metadata !10866, metadata !DIExpression()), !dbg !10867
  call void @llvm.dbg.declare(metadata %struct.IndexNode** %n2, metadata !10868, metadata !DIExpression()), !dbg !10869
  %0 = load %struct.ListBase*, %struct.ListBase** %map.addr, align 8, !dbg !10870
  %1 = load i32, i32* %v1.addr, align 4, !dbg !10872
  %idxprom = sext i32 %1 to i64, !dbg !10870
  %arrayidx = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i64 %idxprom, !dbg !10870
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arrayidx, i32 0, i32 0, !dbg !10873
  %2 = load i8*, i8** %first, align 8, !dbg !10873
  %3 = bitcast i8* %2 to %struct.IndexNode*, !dbg !10870
  store %struct.IndexNode* %3, %struct.IndexNode** %n1, align 8, !dbg !10874
  br label %for.cond, !dbg !10875

for.cond:                                         ; preds = %for.inc11, %entry
  %4 = load %struct.IndexNode*, %struct.IndexNode** %n1, align 8, !dbg !10876
  %tobool = icmp ne %struct.IndexNode* %4, null, !dbg !10878
  br i1 %tobool, label %for.body, label %for.end13, !dbg !10878

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ListBase*, %struct.ListBase** %map.addr, align 8, !dbg !10879
  %6 = load i32, i32* %v2.addr, align 4, !dbg !10882
  %idxprom1 = sext i32 %6 to i64, !dbg !10879
  %arrayidx2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i64 %idxprom1, !dbg !10879
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arrayidx2, i32 0, i32 0, !dbg !10883
  %7 = load i8*, i8** %first3, align 8, !dbg !10883
  %8 = bitcast i8* %7 to %struct.IndexNode*, !dbg !10879
  store %struct.IndexNode* %8, %struct.IndexNode** %n2, align 8, !dbg !10884
  br label %for.cond4, !dbg !10885

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load %struct.IndexNode*, %struct.IndexNode** %n2, align 8, !dbg !10886
  %tobool5 = icmp ne %struct.IndexNode* %9, null, !dbg !10888
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !10888

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.IndexNode*, %struct.IndexNode** %n1, align 8, !dbg !10889
  %index = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %10, i32 0, i32 2, !dbg !10892
  %11 = load i32, i32* %index, align 8, !dbg !10892
  %12 = load %struct.IndexNode*, %struct.IndexNode** %n2, align 8, !dbg !10893
  %index7 = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %12, i32 0, i32 2, !dbg !10894
  %13 = load i32, i32* %index7, align 8, !dbg !10894
  %cmp = icmp eq i32 %11, %13, !dbg !10895
  br i1 %cmp, label %if.then, label %if.end, !dbg !10896

if.then:                                          ; preds = %for.body6
  %14 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges.addr, align 8, !dbg !10897
  %15 = load %struct.IndexNode*, %struct.IndexNode** %n1, align 8, !dbg !10898
  %index8 = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %15, i32 0, i32 2, !dbg !10899
  %16 = load i32, i32* %index8, align 8, !dbg !10899
  %idxprom9 = sext i32 %16 to i64, !dbg !10897
  %arrayidx10 = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %14, i64 %idxprom9, !dbg !10897
  store %struct.MultiresEdge* %arrayidx10, %struct.MultiresEdge** %retval, align 8, !dbg !10900
  br label %return, !dbg !10900

if.end:                                           ; preds = %for.body6
  br label %for.inc, !dbg !10901

for.inc:                                          ; preds = %if.end
  %17 = load %struct.IndexNode*, %struct.IndexNode** %n2, align 8, !dbg !10902
  %next = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %17, i32 0, i32 0, !dbg !10903
  %18 = load %struct.IndexNode*, %struct.IndexNode** %next, align 8, !dbg !10903
  store %struct.IndexNode* %18, %struct.IndexNode** %n2, align 8, !dbg !10904
  br label %for.cond4, !dbg !10905, !llvm.loop !10906

for.end:                                          ; preds = %for.cond4
  br label %for.inc11, !dbg !10908

for.inc11:                                        ; preds = %for.end
  %19 = load %struct.IndexNode*, %struct.IndexNode** %n1, align 8, !dbg !10909
  %next12 = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %19, i32 0, i32 0, !dbg !10910
  %20 = load %struct.IndexNode*, %struct.IndexNode** %next12, align 8, !dbg !10910
  store %struct.IndexNode* %20, %struct.IndexNode** %n1, align 8, !dbg !10911
  br label %for.cond, !dbg !10912, !llvm.loop !10913

for.end13:                                        ; preds = %for.cond
  store %struct.MultiresEdge* null, %struct.MultiresEdge** %retval, align 8, !dbg !10915
  br label %return, !dbg !10915

return:                                           ; preds = %for.end13, %if.then
  %21 = load %struct.MultiresEdge*, %struct.MultiresEdge** %retval, align 8, !dbg !10916
  ret %struct.MultiresEdge* %21, !dbg !10916
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.MultiresFace* @find_old_face(%struct.ListBase* %map, %struct.MultiresFace* %faces, i32 %v1, i32 %v2, i32 %v3, i32 %v4) #0 !dbg !10917 {
entry:
  %retval = alloca %struct.MultiresFace*, align 8
  %map.addr = alloca %struct.ListBase*, align 8
  %faces.addr = alloca %struct.MultiresFace*, align 8
  %v1.addr = alloca i32, align 4
  %v2.addr = alloca i32, align 4
  %v3.addr = alloca i32, align 4
  %v4.addr = alloca i32, align 4
  %n1 = alloca %struct.IndexNode*, align 8
  %v = alloca [4 x i32], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fnd = alloca [4 x i32], align 16
  store %struct.ListBase* %map, %struct.ListBase** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %map.addr, metadata !10920, metadata !DIExpression()), !dbg !10921
  store %struct.MultiresFace* %faces, %struct.MultiresFace** %faces.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresFace** %faces.addr, metadata !10922, metadata !DIExpression()), !dbg !10923
  store i32 %v1, i32* %v1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v1.addr, metadata !10924, metadata !DIExpression()), !dbg !10925
  store i32 %v2, i32* %v2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v2.addr, metadata !10926, metadata !DIExpression()), !dbg !10927
  store i32 %v3, i32* %v3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v3.addr, metadata !10928, metadata !DIExpression()), !dbg !10929
  store i32 %v4, i32* %v4.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v4.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  call void @llvm.dbg.declare(metadata %struct.IndexNode** %n1, metadata !10932, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.declare(metadata [4 x i32]* %v, metadata !10934, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10936, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10938, metadata !DIExpression()), !dbg !10939
  %0 = load i32, i32* %v1.addr, align 4, !dbg !10940
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %v, i64 0, i64 0, !dbg !10941
  store i32 %0, i32* %arrayidx, align 16, !dbg !10942
  %1 = load i32, i32* %v2.addr, align 4, !dbg !10943
  %arrayidx1 = getelementptr inbounds [4 x i32], [4 x i32]* %v, i64 0, i64 1, !dbg !10944
  store i32 %1, i32* %arrayidx1, align 4, !dbg !10945
  %2 = load i32, i32* %v3.addr, align 4, !dbg !10946
  %arrayidx2 = getelementptr inbounds [4 x i32], [4 x i32]* %v, i64 0, i64 2, !dbg !10947
  store i32 %2, i32* %arrayidx2, align 8, !dbg !10948
  %3 = load i32, i32* %v4.addr, align 4, !dbg !10949
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %v, i64 0, i64 3, !dbg !10950
  store i32 %3, i32* %arrayidx3, align 4, !dbg !10951
  %4 = load %struct.ListBase*, %struct.ListBase** %map.addr, align 8, !dbg !10952
  %5 = load i32, i32* %v1.addr, align 4, !dbg !10954
  %idxprom = sext i32 %5 to i64, !dbg !10952
  %arrayidx4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %4, i64 %idxprom, !dbg !10952
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %arrayidx4, i32 0, i32 0, !dbg !10955
  %6 = load i8*, i8** %first, align 8, !dbg !10955
  %7 = bitcast i8* %6 to %struct.IndexNode*, !dbg !10952
  store %struct.IndexNode* %7, %struct.IndexNode** %n1, align 8, !dbg !10956
  br label %for.cond, !dbg !10957

for.cond:                                         ; preds = %for.inc38, %entry
  %8 = load %struct.IndexNode*, %struct.IndexNode** %n1, align 8, !dbg !10958
  %tobool = icmp ne %struct.IndexNode* %8, null, !dbg !10960
  br i1 %tobool, label %for.body, label %for.end39, !dbg !10960

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [4 x i32]* %fnd, metadata !10961, metadata !DIExpression()), !dbg !10963
  %9 = bitcast [4 x i32]* %fnd to i8*, !dbg !10963
  call void @llvm.memset.p0i8.i64(i8* align 16 %9, i8 0, i64 16, i1 false), !dbg !10963
  store i32 0, i32* %i, align 4, !dbg !10964
  br label %for.cond5, !dbg !10966

for.cond5:                                        ; preds = %for.inc20, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !10967
  %cmp = icmp slt i32 %10, 4, !dbg !10969
  br i1 %cmp, label %for.body6, label %for.end22, !dbg !10970

for.body6:                                        ; preds = %for.cond5
  store i32 0, i32* %j, align 4, !dbg !10971
  br label %for.cond7, !dbg !10974

for.cond7:                                        ; preds = %for.inc, %for.body6
  %11 = load i32, i32* %j, align 4, !dbg !10975
  %cmp8 = icmp slt i32 %11, 4, !dbg !10977
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !10978

for.body9:                                        ; preds = %for.cond7
  %12 = load i32, i32* %i, align 4, !dbg !10979
  %idxprom10 = sext i32 %12 to i64, !dbg !10982
  %arrayidx11 = getelementptr inbounds [4 x i32], [4 x i32]* %v, i64 0, i64 %idxprom10, !dbg !10982
  %13 = load i32, i32* %arrayidx11, align 4, !dbg !10982
  %14 = load %struct.MultiresFace*, %struct.MultiresFace** %faces.addr, align 8, !dbg !10983
  %15 = load %struct.IndexNode*, %struct.IndexNode** %n1, align 8, !dbg !10984
  %index = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %15, i32 0, i32 2, !dbg !10985
  %16 = load i32, i32* %index, align 8, !dbg !10985
  %idxprom12 = sext i32 %16 to i64, !dbg !10983
  %arrayidx13 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %14, i64 %idxprom12, !dbg !10983
  %v14 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %arrayidx13, i32 0, i32 0, !dbg !10986
  %17 = load i32, i32* %j, align 4, !dbg !10987
  %idxprom15 = sext i32 %17 to i64, !dbg !10983
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %v14, i64 0, i64 %idxprom15, !dbg !10983
  %18 = load i32, i32* %arrayidx16, align 4, !dbg !10983
  %cmp17 = icmp eq i32 %13, %18, !dbg !10988
  br i1 %cmp17, label %if.then, label %if.end, !dbg !10989

if.then:                                          ; preds = %for.body9
  %19 = load i32, i32* %i, align 4, !dbg !10990
  %idxprom18 = sext i32 %19 to i64, !dbg !10991
  %arrayidx19 = getelementptr inbounds [4 x i32], [4 x i32]* %fnd, i64 0, i64 %idxprom18, !dbg !10991
  store i32 1, i32* %arrayidx19, align 4, !dbg !10992
  br label %if.end, !dbg !10991

if.end:                                           ; preds = %if.then, %for.body9
  br label %for.inc, !dbg !10993

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %j, align 4, !dbg !10994
  %inc = add nsw i32 %20, 1, !dbg !10994
  store i32 %inc, i32* %j, align 4, !dbg !10994
  br label %for.cond7, !dbg !10995, !llvm.loop !10996

for.end:                                          ; preds = %for.cond7
  br label %for.inc20, !dbg !10998

for.inc20:                                        ; preds = %for.end
  %21 = load i32, i32* %i, align 4, !dbg !10999
  %inc21 = add nsw i32 %21, 1, !dbg !10999
  store i32 %inc21, i32* %i, align 4, !dbg !10999
  br label %for.cond5, !dbg !11000, !llvm.loop !11001

for.end22:                                        ; preds = %for.cond5
  %arrayidx23 = getelementptr inbounds [4 x i32], [4 x i32]* %fnd, i64 0, i64 0, !dbg !11003
  %22 = load i32, i32* %arrayidx23, align 16, !dbg !11003
  %tobool24 = icmp ne i32 %22, 0, !dbg !11003
  br i1 %tobool24, label %land.lhs.true, label %if.end37, !dbg !11005

land.lhs.true:                                    ; preds = %for.end22
  %arrayidx25 = getelementptr inbounds [4 x i32], [4 x i32]* %fnd, i64 0, i64 1, !dbg !11006
  %23 = load i32, i32* %arrayidx25, align 4, !dbg !11006
  %tobool26 = icmp ne i32 %23, 0, !dbg !11006
  br i1 %tobool26, label %land.lhs.true27, label %if.end37, !dbg !11007

land.lhs.true27:                                  ; preds = %land.lhs.true
  %arrayidx28 = getelementptr inbounds [4 x i32], [4 x i32]* %fnd, i64 0, i64 2, !dbg !11008
  %24 = load i32, i32* %arrayidx28, align 8, !dbg !11008
  %tobool29 = icmp ne i32 %24, 0, !dbg !11008
  br i1 %tobool29, label %land.lhs.true30, label %if.end37, !dbg !11009

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %arrayidx31 = getelementptr inbounds [4 x i32], [4 x i32]* %fnd, i64 0, i64 3, !dbg !11010
  %25 = load i32, i32* %arrayidx31, align 4, !dbg !11010
  %tobool32 = icmp ne i32 %25, 0, !dbg !11010
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !11011

if.then33:                                        ; preds = %land.lhs.true30
  %26 = load %struct.MultiresFace*, %struct.MultiresFace** %faces.addr, align 8, !dbg !11012
  %27 = load %struct.IndexNode*, %struct.IndexNode** %n1, align 8, !dbg !11013
  %index34 = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %27, i32 0, i32 2, !dbg !11014
  %28 = load i32, i32* %index34, align 8, !dbg !11014
  %idxprom35 = sext i32 %28 to i64, !dbg !11012
  %arrayidx36 = getelementptr inbounds %struct.MultiresFace, %struct.MultiresFace* %26, i64 %idxprom35, !dbg !11012
  store %struct.MultiresFace* %arrayidx36, %struct.MultiresFace** %retval, align 8, !dbg !11015
  br label %return, !dbg !11015

if.end37:                                         ; preds = %land.lhs.true30, %land.lhs.true27, %land.lhs.true, %for.end22
  br label %for.inc38, !dbg !11016

for.inc38:                                        ; preds = %if.end37
  %29 = load %struct.IndexNode*, %struct.IndexNode** %n1, align 8, !dbg !11017
  %next = getelementptr inbounds %struct.IndexNode, %struct.IndexNode* %29, i32 0, i32 0, !dbg !11018
  %30 = load %struct.IndexNode*, %struct.IndexNode** %next, align 8, !dbg !11018
  store %struct.IndexNode* %30, %struct.IndexNode** %n1, align 8, !dbg !11019
  br label %for.cond, !dbg !11020, !llvm.loop !11021

for.end39:                                        ; preds = %for.cond
  store %struct.MultiresFace* null, %struct.MultiresFace** %retval, align 8, !dbg !11023
  br label %return, !dbg !11023

return:                                           ; preds = %for.end39, %if.then33
  %31 = load %struct.MultiresFace*, %struct.MultiresFace** %retval, align 8, !dbg !11024
  ret %struct.MultiresFace* %31, !dbg !11024
}

; Function Attrs: noinline nounwind uwtable
define internal void @multires_load_old_edges(%struct.ListBase** %emap, %struct.MultiresLevel* %lvl, i32* %vvmap, i32 %dst, i32 %v1, i32 %v2, i32 %mov) #0 !dbg !11025 {
entry:
  %emap.addr = alloca %struct.ListBase**, align 8
  %lvl.addr = alloca %struct.MultiresLevel*, align 8
  %vvmap.addr = alloca i32*, align 8
  %dst.addr = alloca i32, align 4
  %v1.addr = alloca i32, align 4
  %v2.addr = alloca i32, align 4
  %mov.addr = alloca i32, align 4
  %emid = alloca i32, align 4
  store %struct.ListBase** %emap, %struct.ListBase*** %emap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %emap.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  store %struct.MultiresLevel* %lvl, %struct.MultiresLevel** %lvl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresLevel** %lvl.addr, metadata !11030, metadata !DIExpression()), !dbg !11031
  store i32* %vvmap, i32** %vvmap.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %vvmap.addr, metadata !11032, metadata !DIExpression()), !dbg !11033
  store i32 %dst, i32* %dst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst.addr, metadata !11034, metadata !DIExpression()), !dbg !11035
  store i32 %v1, i32* %v1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v1.addr, metadata !11036, metadata !DIExpression()), !dbg !11037
  store i32 %v2, i32* %v2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v2.addr, metadata !11038, metadata !DIExpression()), !dbg !11039
  store i32 %mov, i32* %mov.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mov.addr, metadata !11040, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.declare(metadata i32* %emid, metadata !11042, metadata !DIExpression()), !dbg !11043
  %0 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !11044
  %arrayidx = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %0, i64 2, !dbg !11044
  %1 = load %struct.ListBase*, %struct.ListBase** %arrayidx, align 8, !dbg !11044
  %2 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !11045
  %edges = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %2, i32 0, i32 4, !dbg !11046
  %3 = load %struct.MultiresEdge*, %struct.MultiresEdge** %edges, align 8, !dbg !11046
  %4 = load i32, i32* %v1.addr, align 4, !dbg !11047
  %5 = load i32, i32* %v2.addr, align 4, !dbg !11048
  %call = call %struct.MultiresEdge* @find_old_edge(%struct.ListBase* %1, %struct.MultiresEdge* %3, i32 %4, i32 %5), !dbg !11049
  %mid = getelementptr inbounds %struct.MultiresEdge, %struct.MultiresEdge* %call, i32 0, i32 1, !dbg !11050
  %6 = load i32, i32* %mid, align 4, !dbg !11050
  store i32 %6, i32* %emid, align 4, !dbg !11043
  %7 = load i32, i32* %emid, align 4, !dbg !11051
  %8 = load i32*, i32** %vvmap.addr, align 8, !dbg !11052
  %9 = load i32, i32* %dst.addr, align 4, !dbg !11053
  %10 = load i32, i32* %mov.addr, align 4, !dbg !11054
  %add = add nsw i32 %9, %10, !dbg !11055
  %idxprom = sext i32 %add to i64, !dbg !11052
  %arrayidx1 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !11052
  store i32 %7, i32* %arrayidx1, align 4, !dbg !11056
  %11 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !11057
  %next = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %11, i32 0, i32 0, !dbg !11059
  %12 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next, align 8, !dbg !11059
  %next2 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %12, i32 0, i32 0, !dbg !11060
  %13 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next2, align 8, !dbg !11060
  %tobool = icmp ne %struct.MultiresLevel* %13, null, !dbg !11057
  br i1 %tobool, label %if.then, label %if.end, !dbg !11061

if.then:                                          ; preds = %entry
  %14 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !11062
  %add.ptr = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %14, i64 1, !dbg !11064
  %15 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !11065
  %next3 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %15, i32 0, i32 0, !dbg !11066
  %16 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next3, align 8, !dbg !11066
  %17 = load i32*, i32** %vvmap.addr, align 8, !dbg !11067
  %18 = load i32, i32* %dst.addr, align 4, !dbg !11068
  %19 = load i32, i32* %mov.addr, align 4, !dbg !11069
  %add4 = add nsw i32 %18, %19, !dbg !11070
  %20 = load i32, i32* %v1.addr, align 4, !dbg !11071
  %21 = load i32, i32* %emid, align 4, !dbg !11072
  %22 = load i32, i32* %mov.addr, align 4, !dbg !11073
  %div = sdiv i32 %22, 2, !dbg !11074
  call void @multires_load_old_edges(%struct.ListBase** %add.ptr, %struct.MultiresLevel* %16, i32* %17, i32 %add4, i32 %20, i32 %21, i32 %div), !dbg !11075
  %23 = load %struct.ListBase**, %struct.ListBase*** %emap.addr, align 8, !dbg !11076
  %add.ptr5 = getelementptr inbounds %struct.ListBase*, %struct.ListBase** %23, i64 1, !dbg !11077
  %24 = load %struct.MultiresLevel*, %struct.MultiresLevel** %lvl.addr, align 8, !dbg !11078
  %next6 = getelementptr inbounds %struct.MultiresLevel, %struct.MultiresLevel* %24, i32 0, i32 0, !dbg !11079
  %25 = load %struct.MultiresLevel*, %struct.MultiresLevel** %next6, align 8, !dbg !11079
  %26 = load i32*, i32** %vvmap.addr, align 8, !dbg !11080
  %27 = load i32, i32* %dst.addr, align 4, !dbg !11081
  %28 = load i32, i32* %mov.addr, align 4, !dbg !11082
  %add7 = add nsw i32 %27, %28, !dbg !11083
  %29 = load i32, i32* %v2.addr, align 4, !dbg !11084
  %30 = load i32, i32* %emid, align 4, !dbg !11085
  %31 = load i32, i32* %mov.addr, align 4, !dbg !11086
  %sub = sub nsw i32 0, %31, !dbg !11087
  %div8 = sdiv i32 %sub, 2, !dbg !11088
  call void @multires_load_old_edges(%struct.ListBase** %add.ptr5, %struct.MultiresLevel* %25, i32* %26, i32 %add7, i32 %29, i32 %30, i32 %div8), !dbg !11089
  br label %if.end, !dbg !11090

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11091
}

declare dso_local void @mul_m3_v3([3 x float]*, float*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2625, !2626, !2627}
!llvm.ident = !{!2628}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "multires_side_tot", scope: !2, file: !3, line: 70, type: !2619, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !263, globals: !2616, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/multires.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !17, !23, !29, !37, !44, !50, !55, !59, !65, !71, !115, !124, !136, !142, !195, !206, !217, !222, !226, !231, !237, !243, !250, !256}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !6, line: 94, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!15 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!16 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !6, line: 116, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20, !21, !22}
!19 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !6, line: 131, baseType: !7, size: 32, elements: !24)
!24 = !{!25, !26, !27, !28}
!25 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!26 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!27 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!28 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !6, line: 123, baseType: !7, size: 32, elements: !30)
!30 = !{!31, !32, !33, !34, !35, !36}
!31 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!32 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!33 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!34 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!35 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!36 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 182, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !45, line: 128, baseType: !7, size: 32, elements: !46)
!45 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!48 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !45, line: 164, baseType: !7, size: 32, elements: !51)
!51 = !{!52, !53, !54}
!52 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !45, line: 159, baseType: !7, size: 32, elements: !56)
!56 = !{!57, !58}
!57 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !45, line: 134, baseType: !7, size: 32, elements: !60)
!60 = !{!61, !62, !63, !64}
!61 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!64 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !45, line: 152, baseType: !7, size: 32, elements: !66)
!66 = !{!67, !68, !69, !70}
!67 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !72, line: 76, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114}
!74 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!78 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!79 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!80 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!81 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!82 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!83 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!84 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!85 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!86 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!87 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!88 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!89 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!90 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!91 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!92 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!93 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!94 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!95 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!96 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!97 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!98 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!113 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!114 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 47, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!117 = !{!118, !119, !120, !121, !122, !123}
!118 = !DIEnumerator(name: "eModifierTypeType_None", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "eModifierTypeType_OnlyDeform", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "eModifierTypeType_Constructive", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "eModifierTypeType_Nonconstructive", value: 3, isUnsigned: true)
!122 = !DIEnumerator(name: "eModifierTypeType_DeformOrConstruct", value: 4, isUnsigned: true)
!123 = !DIEnumerator(name: "eModifierTypeType_NonGeometrical", value: 5, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 73, baseType: !7, size: 32, elements: !125)
!125 = !{!126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!126 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsMesh", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsCVs", value: 2, isUnsigned: true)
!128 = !DIEnumerator(name: "eModifierTypeFlag_SupportsMapping", value: 4, isUnsigned: true)
!129 = !DIEnumerator(name: "eModifierTypeFlag_SupportsEditmode", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "eModifierTypeFlag_EnableInEditmode", value: 16, isUnsigned: true)
!131 = !DIEnumerator(name: "eModifierTypeFlag_RequiresOriginalData", value: 32, isUnsigned: true)
!132 = !DIEnumerator(name: "eModifierTypeFlag_UsesPointCache", value: 64, isUnsigned: true)
!133 = !DIEnumerator(name: "eModifierTypeFlag_Single", value: 128, isUnsigned: true)
!134 = !DIEnumerator(name: "eModifierTypeFlag_NoUserAdd", value: 256, isUnsigned: true)
!135 = !DIEnumerator(name: "eModifierTypeFlag_UsesPreview", value: 512, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierApplyFlag", file: !116, line: 110, baseType: !7, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141}
!138 = !DIEnumerator(name: "MOD_APPLY_RENDER", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "MOD_APPLY_USECACHE", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "MOD_APPLY_ORCO", value: 4, isUnsigned: true)
!141 = !DIEnumerator(name: "MOD_APPLY_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !143, line: 35, baseType: !7, size: 32, elements: !144)
!143 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!144 = !{!145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194}
!145 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!149 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!150 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!151 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!152 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!153 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!154 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!155 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!156 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!157 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!158 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!159 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!160 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!161 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!162 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!163 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!164 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!165 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!166 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!167 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!168 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!169 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!170 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!171 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!172 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!173 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!174 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!175 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!176 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!177 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!178 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!179 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!180 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!181 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!182 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!183 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!184 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!185 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!186 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!187 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!188 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!189 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!190 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!191 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!192 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!193 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!194 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !143, line: 88, baseType: !196, size: 32, elements: !197)
!196 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205}
!198 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!199 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!200 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!201 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!202 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!203 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!204 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!205 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !207, line: 666, baseType: !7, size: 32, elements: !208)
!207 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216}
!209 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!212 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!213 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!216 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!217 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MultiresModifiedFlags", file: !218, line: 90, baseType: !7, size: 32, elements: !219)
!218 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_subsurf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!219 = !{!220, !221}
!220 = !DIEnumerator(name: "MULTIRES_COORDS_MODIFIED", value: 1, isUnsigned: true)
!221 = !DIEnumerator(name: "MULTIRES_HIDDEN_MODIFIED", value: 2, isUnsigned: true)
!222 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !143, line: 724, baseType: !7, size: 32, elements: !223)
!223 = !{!224, !225}
!224 = !DIEnumerator(name: "eMultiresModifierFlag_ControlEdges", value: 1, isUnsigned: true)
!225 = !DIEnumerator(name: "eMultiresModifierFlag_PlainUv", value: 2, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 73, baseType: !7, size: 32, elements: !227)
!227 = !{!228, !229, !230}
!228 = !DIEnumerator(name: "APPLY_DISPLACEMENTS", value: 0, isUnsigned: true)
!229 = !DIEnumerator(name: "CALC_DISPLACEMENTS", value: 1, isUnsigned: true)
!230 = !DIEnumerator(name: "ADD_DISPLACEMENTS", value: 2, isUnsigned: true)
!231 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !232, line: 101, baseType: !7, size: 32, elements: !233)
!232 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_multires.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!233 = !{!234, !235, !236}
!234 = !DIEnumerator(name: "MULTIRES_SPACE_TANGENT", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "MULTIRES_SPACE_OBJECT", value: 1, isUnsigned: true)
!236 = !DIEnumerator(name: "MULTIRES_SPACE_ABSOLUTE", value: 2, isUnsigned: true)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !232, line: 70, baseType: !7, size: 32, elements: !238)
!238 = !{!239, !240, !241, !242}
!239 = !DIEnumerator(name: "MULTIRES_USE_LOCAL_MMD", value: 1, isUnsigned: true)
!240 = !DIEnumerator(name: "MULTIRES_USE_RENDER_PARAMS", value: 2, isUnsigned: true)
!241 = !DIEnumerator(name: "MULTIRES_ALLOC_PAINT_MASK", value: 4, isUnsigned: true)
!242 = !DIEnumerator(name: "MULTIRES_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !218, line: 58, baseType: !7, size: 32, elements: !244)
!244 = !{!245, !246, !247, !248, !249}
!245 = !DIEnumerator(name: "SUBSURF_USE_RENDER_PARAMS", value: 1, isUnsigned: true)
!246 = !DIEnumerator(name: "SUBSURF_IS_FINAL_CALC", value: 2, isUnsigned: true)
!247 = !DIEnumerator(name: "SUBSURF_FOR_EDIT_MODE", value: 4, isUnsigned: true)
!248 = !DIEnumerator(name: "SUBSURF_IN_EDIT_MODE", value: 8, isUnsigned: true)
!249 = !DIEnumerator(name: "SUBSURF_ALLOC_PAINT_MASK", value: 16, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !143, line: 112, baseType: !7, size: 32, elements: !251)
!251 = !{!252, !253, !254, !255}
!252 = !DIEnumerator(name: "eSubsurfModifierFlag_Incremental", value: 1, isUnsigned: true)
!253 = !DIEnumerator(name: "eSubsurfModifierFlag_DebugIncr", value: 2, isUnsigned: true)
!254 = !DIEnumerator(name: "eSubsurfModifierFlag_ControlEdges", value: 4, isUnsigned: true)
!255 = !DIEnumerator(name: "eSubsurfModifierFlag_SubsurfUv", value: 8, isUnsigned: true)
!256 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !257, line: 304, baseType: !7, size: 32, elements: !258)
!257 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "ME_VERT_TMP_TAG", value: 4, isUnsigned: true)
!260 = !DIEnumerator(name: "ME_HIDE", value: 16, isUnsigned: true)
!261 = !DIEnumerator(name: "ME_VERT_MERGED", value: 64, isUnsigned: true)
!262 = !DIEnumerator(name: "ME_VERT_PBVH_UPDATE", value: 128, isUnsigned: true)
!263 = !{!264, !2391, !2393, !2395, !915, !2465, !291, !2466, !2611, !418, !771, !2614, !7}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !143, line: 110, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !143, line: 99, size: 896, elements: !267)
!267 = !{!268, !270, !271, !272, !273, !274, !275, !280, !2390}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !266, file: !143, line: 100, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !266, file: !143, line: 100, baseType: !269, size: 64, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !266, file: !143, line: 102, baseType: !196, size: 32, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !266, file: !143, line: 102, baseType: !196, size: 32, offset: 160)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !266, file: !143, line: 103, baseType: !196, size: 32, offset: 192)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !266, file: !143, line: 103, baseType: !196, size: 32, offset: 224)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !266, file: !143, line: 104, baseType: !276, size: 512, offset: 256)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 512, elements: !278)
!277 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!278 = !{!279}
!279 = !DISubrange(count: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !266, file: !143, line: 107, baseType: !281, size: 64, offset: 768)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !283, line: 1216, size: 39680, elements: !284)
!283 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!284 = !{!285, !352, !356, !1363, !1366, !1367, !1368, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1394, !1398, !1401, !2011, !2014, !2264, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2286, !2287, !2288, !2289, !2290, !2298, !2364, !2371, !2372, !2379, !2382, !2383, !2384, !2385, !2386, !2387}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !282, file: !283, line: 1217, baseType: !286, size: 960)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !287, line: 130, baseType: !288)
!287 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !287, line: 117, size: 960, elements: !289)
!289 = !{!290, !292, !293, !295, !314, !318, !320, !321, !322, !323}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !288, file: !287, line: 118, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !288, file: !287, line: 118, baseType: !291, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !288, file: !287, line: 119, baseType: !294, size: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !288, file: !287, line: 120, baseType: !296, size: 64, offset: 192)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !287, line: 136, size: 17600, elements: !298)
!298 = !{!299, !300, !302, !305, !309, !310, !311}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !297, file: !287, line: 137, baseType: !286, size: 960)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !297, file: !287, line: 138, baseType: !301, size: 64, offset: 960)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !297, file: !287, line: 139, baseType: !303, size: 64, offset: 1024)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !287, line: 43, flags: DIFlagFwdDecl)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !297, file: !287, line: 140, baseType: !306, size: 8192, offset: 1088)
!306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 8192, elements: !307)
!307 = !{!308}
!308 = !DISubrange(count: 1024)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !297, file: !287, line: 141, baseType: !306, size: 8192, offset: 9280)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !297, file: !287, line: 148, baseType: !296, size: 64, offset: 17472)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !297, file: !287, line: 150, baseType: !312, size: 64, offset: 17536)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !287, line: 45, flags: DIFlagFwdDecl)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !287, line: 121, baseType: !315, size: 528, offset: 256)
!315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 528, elements: !316)
!316 = !{!317}
!317 = !DISubrange(count: 66)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !288, file: !287, line: 126, baseType: !319, size: 16, offset: 784)
!319 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !288, file: !287, line: 127, baseType: !196, size: 32, offset: 800)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !288, file: !287, line: 128, baseType: !196, size: 32, offset: 832)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !288, file: !287, line: 128, baseType: !196, size: 32, offset: 864)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !288, file: !287, line: 129, baseType: !324, size: 64, offset: 896)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !287, line: 75, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !287, line: 62, size: 1024, elements: !327)
!327 = !{!328, !330, !331, !332, !333, !334, !335, !336, !350, !351}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !326, file: !287, line: 63, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !326, file: !287, line: 63, baseType: !329, size: 64, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !326, file: !287, line: 64, baseType: !277, size: 8, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !326, file: !287, line: 64, baseType: !277, size: 8, offset: 136)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !326, file: !287, line: 65, baseType: !319, size: 16, offset: 144)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !326, file: !287, line: 66, baseType: !276, size: 512, offset: 160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !326, file: !287, line: 67, baseType: !196, size: 32, offset: 672)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !326, file: !287, line: 69, baseType: !337, size: 256, offset: 704)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !287, line: 60, baseType: !338)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !287, line: 48, size: 256, elements: !339)
!339 = !{!340, !341, !348, !349}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !338, file: !287, line: 49, baseType: !291, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !338, file: !287, line: 58, baseType: !342, size: 128, offset: 64)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !343, line: 71, baseType: !344)
!343 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !343, line: 69, size: 128, elements: !345)
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !344, file: !343, line: 70, baseType: !291, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !344, file: !343, line: 70, baseType: !291, size: 64, offset: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !338, file: !287, line: 59, baseType: !196, size: 32, offset: 192)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !338, file: !287, line: 59, baseType: !196, size: 32, offset: 224)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !326, file: !287, line: 70, baseType: !196, size: 32, offset: 960)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !326, file: !287, line: 74, baseType: !196, size: 32, offset: 992)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !282, file: !283, line: 1218, baseType: !353, size: 64, offset: 960)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !355, line: 39, flags: DIFlagFwdDecl)
!355 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!356 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !282, file: !283, line: 1220, baseType: !357, size: 64, offset: 1024)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !207, line: 115, size: 11392, elements: !359)
!359 = !{!360, !361, !362, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !675, !685, !698, !699, !739, !740, !743, !744, !760, !761, !762, !763, !764, !765, !766, !770, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !786, !787, !788, !789, !790, !791, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !851, !852, !853, !854, !855, !856, !857, !858, !859, !862, !865, !868, !869, !870, !871, !872, !875, !878, !1310, !1311, !1317, !1318, !1319, !1320, !1321, !1322, !1324, !1327, !1330, !1332, !1351, !1352}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !358, file: !207, line: 116, baseType: !286, size: 960)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !358, file: !207, line: 117, baseType: !353, size: 64, offset: 960)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !358, file: !207, line: 119, baseType: !363, size: 64, offset: 1024)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !365, line: 155, size: 1856, elements: !366)
!365 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!366 = !{!367, !382, !395, !404, !410, !411, !412, !414, !417, !419, !428, !623, !624, !625, !627, !631, !634, !635, !636, !637, !638, !642, !643, !644, !646, !647, !650, !651, !654, !657, !658, !659, !660}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !364, file: !365, line: 157, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !143, line: 717, size: 960, elements: !370)
!370 = !{!371, !372, !373, !374, !375, !376, !377, !378}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !369, file: !143, line: 718, baseType: !265, size: 896)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !369, file: !143, line: 720, baseType: !277, size: 8, offset: 896)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "sculptlvl", scope: !369, file: !143, line: 720, baseType: !277, size: 8, offset: 904)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !369, file: !143, line: 720, baseType: !277, size: 8, offset: 912)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !369, file: !143, line: 720, baseType: !277, size: 8, offset: 920)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !369, file: !143, line: 721, baseType: !277, size: 8, offset: 928)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !369, file: !143, line: 721, baseType: !277, size: 8, offset: 936)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !369, file: !143, line: 721, baseType: !379, size: 16, offset: 944)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 16, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 2)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !364, file: !365, line: 158, baseType: !383, size: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !257, line: 65, size: 160, elements: !385)
!385 = !{!386, !391, !393, !394}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !384, file: !257, line: 66, baseType: !387, size: 96)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 96, elements: !389)
!388 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!389 = !{!390}
!390 = !DISubrange(count: 3)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !384, file: !257, line: 67, baseType: !392, size: 48, offset: 96)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 48, elements: !389)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !384, file: !257, line: 68, baseType: !277, size: 8, offset: 144)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !384, file: !257, line: 68, baseType: !277, size: 8, offset: 152)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !364, file: !365, line: 159, baseType: !396, size: 64, offset: 128)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !257, line: 79, size: 96, elements: !398)
!398 = !{!399, !400, !401, !402, !403}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !397, file: !257, line: 81, baseType: !196, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !397, file: !257, line: 82, baseType: !196, size: 32, offset: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !397, file: !257, line: 83, baseType: !319, size: 16, offset: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !397, file: !257, line: 84, baseType: !277, size: 8, offset: 80)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !397, file: !257, line: 84, baseType: !277, size: 8, offset: 88)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !364, file: !365, line: 160, baseType: !405, size: 64, offset: 192)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !257, line: 88, size: 64, elements: !407)
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !406, file: !257, line: 89, baseType: !7, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !406, file: !257, line: 90, baseType: !7, size: 32, offset: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !364, file: !365, line: 161, baseType: !196, size: 32, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !364, file: !365, line: 161, baseType: !196, size: 32, offset: 288)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !364, file: !365, line: 162, baseType: !413, size: 64, offset: 320)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !364, file: !365, line: 163, baseType: !415, size: 64, offset: 384)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !45, line: 92, flags: DIFlagFwdDecl)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !364, file: !365, line: 164, baseType: !418, size: 64, offset: 448)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !364, file: !365, line: 167, baseType: !420, size: 64, offset: 512)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !423, line: 96, size: 128, elements: !424)
!423 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!424 = !{!425, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !422, file: !423, line: 97, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !422, file: !423, line: 98, baseType: !196, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !364, file: !365, line: 170, baseType: !429, size: 64, offset: 576)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !431, line: 186, size: 8064, elements: !432)
!431 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!432 = !{!433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !445, !446, !447, !448, !509, !513, !517, !518, !519, !520, !521, !522, !523, !524, !579, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !430, file: !431, line: 187, baseType: !196, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !430, file: !431, line: 187, baseType: !196, size: 32, offset: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !430, file: !431, line: 187, baseType: !196, size: 32, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !430, file: !431, line: 187, baseType: !196, size: 32, offset: 96)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !430, file: !431, line: 188, baseType: !196, size: 32, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !430, file: !431, line: 188, baseType: !196, size: 32, offset: 160)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !430, file: !431, line: 188, baseType: !196, size: 32, offset: 192)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !430, file: !431, line: 193, baseType: !277, size: 8, offset: 224)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !430, file: !431, line: 197, baseType: !277, size: 8, offset: 232)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !430, file: !431, line: 201, baseType: !443, size: 64, offset: 256)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !72, line: 71, flags: DIFlagFwdDecl)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !430, file: !431, line: 201, baseType: !443, size: 64, offset: 320)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !430, file: !431, line: 201, baseType: !443, size: 64, offset: 384)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !430, file: !431, line: 201, baseType: !443, size: 64, offset: 448)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !430, file: !431, line: 208, baseType: !449, size: 64, offset: 512)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !431, line: 103, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !431, line: 90, size: 448, elements: !453)
!453 = !{!454, !463, !468, !469, !470}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !452, file: !431, line: 91, baseType: !455, size: 128)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !431, line: 82, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !431, line: 64, size: 128, elements: !457)
!457 = !{!458, !459, !460, !461, !462}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !456, file: !431, line: 65, baseType: !291, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !456, file: !431, line: 66, baseType: !196, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !456, file: !431, line: 73, baseType: !277, size: 8, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !456, file: !431, line: 74, baseType: !277, size: 8, offset: 104)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !456, file: !431, line: 80, baseType: !277, size: 8, offset: 112)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !452, file: !431, line: 92, baseType: !464, size: 64, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !431, line: 180, size: 16, elements: !466)
!466 = !{!467}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !465, file: !431, line: 181, baseType: !319, size: 16)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !452, file: !431, line: 94, baseType: !387, size: 96, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !452, file: !431, line: 95, baseType: !387, size: 96, offset: 288)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !452, file: !431, line: 102, baseType: !471, size: 64, offset: 384)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !431, line: 110, size: 640, elements: !473)
!473 = !{!474, !475, !476, !478, !479, !502, !508}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !472, file: !431, line: 111, baseType: !455, size: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !472, file: !431, line: 112, baseType: !464, size: 64, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !472, file: !431, line: 114, baseType: !477, size: 64, offset: 192)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !472, file: !431, line: 114, baseType: !477, size: 64, offset: 256)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !472, file: !431, line: 118, baseType: !480, size: 64, offset: 320)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !431, line: 125, size: 576, elements: !482)
!482 = !{!483, !484, !485, !486, !498, !499, !500, !501}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !481, file: !431, line: 126, baseType: !455, size: 128)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !481, file: !431, line: 129, baseType: !477, size: 64, offset: 128)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !481, file: !431, line: 130, baseType: !471, size: 64, offset: 192)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !481, file: !431, line: 131, baseType: !487, size: 64, offset: 256)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !431, line: 164, size: 448, elements: !489)
!489 = !{!490, !491, !492, !495, !496, !497}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !488, file: !431, line: 165, baseType: !455, size: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !488, file: !431, line: 166, baseType: !464, size: 64, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !488, file: !431, line: 172, baseType: !493, size: 64, offset: 192)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !431, line: 140, baseType: !481)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !488, file: !431, line: 174, baseType: !196, size: 32, offset: 256)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !488, file: !431, line: 175, baseType: !387, size: 96, offset: 288)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !488, file: !431, line: 176, baseType: !319, size: 16, offset: 384)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !481, file: !431, line: 135, baseType: !480, size: 64, offset: 320)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !481, file: !431, line: 135, baseType: !480, size: 64, offset: 384)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !481, file: !431, line: 139, baseType: !480, size: 64, offset: 448)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !481, file: !431, line: 139, baseType: !480, size: 64, offset: 512)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !472, file: !431, line: 122, baseType: !503, size: 128, offset: 384)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !431, line: 108, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !431, line: 106, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !504, file: !431, line: 107, baseType: !471, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !504, file: !431, line: 107, baseType: !471, size: 64, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !472, file: !431, line: 122, baseType: !503, size: 128, offset: 512)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !430, file: !431, line: 209, baseType: !510, size: 64, offset: 576)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !431, line: 123, baseType: !472)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !430, file: !431, line: 210, baseType: !514, size: 64, offset: 640)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !431, line: 178, baseType: !488)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !430, file: !431, line: 213, baseType: !196, size: 32, offset: 704)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !430, file: !431, line: 214, baseType: !196, size: 32, offset: 736)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !430, file: !431, line: 215, baseType: !196, size: 32, offset: 768)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !430, file: !431, line: 218, baseType: !443, size: 64, offset: 832)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !430, file: !431, line: 218, baseType: !443, size: 64, offset: 896)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !430, file: !431, line: 218, baseType: !443, size: 64, offset: 960)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !430, file: !431, line: 220, baseType: !196, size: 32, offset: 1024)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !430, file: !431, line: 221, baseType: !525, size: 64, offset: 1088)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !6, line: 190, size: 10496, elements: !527)
!527 = !{!528, !565, !566, !572, !575, !576, !578}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !526, file: !6, line: 191, baseType: !529, size: 5120)
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 5120, elements: !563)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !6, line: 147, size: 320, elements: !531)
!531 = !{!532, !535, !537, !547, !548}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !530, file: !6, line: 148, baseType: !533, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !277)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !530, file: !6, line: 149, baseType: !536, size: 32, offset: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !6, line: 112, baseType: !5)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !530, file: !6, line: 150, baseType: !538, size: 32, offset: 96)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !6, line: 142, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !6, line: 138, size: 32, elements: !540)
!540 = !{!541, !543, !545}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !539, file: !6, line: 139, baseType: !542, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !6, line: 122, baseType: !17)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !539, file: !6, line: 140, baseType: !544, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !6, line: 136, baseType: !23)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !539, file: !6, line: 141, baseType: !546, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !6, line: 130, baseType: !29)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !530, file: !6, line: 152, baseType: !196, size: 32, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !530, file: !6, line: 162, baseType: !549, size: 128, offset: 192)
!549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !6, line: 155, size: 128, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !557}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !549, file: !6, line: 156, baseType: !196, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !549, file: !6, line: 157, baseType: !388, size: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !549, file: !6, line: 158, baseType: !291, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !549, file: !6, line: 159, baseType: !387, size: 96)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !549, file: !6, line: 160, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !549, file: !6, line: 161, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !560, line: 48, baseType: !561)
!560 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!561 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !562, line: 47, flags: DIFlagFwdDecl)
!562 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!563 = !{!564}
!564 = !DISubrange(count: 16)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !526, file: !6, line: 192, baseType: !529, size: 5120, offset: 5120)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !526, file: !6, line: 193, baseType: !567, size: 64, offset: 10240)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{null, !570, !525}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !431, line: 246, baseType: !430)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !526, file: !6, line: 194, baseType: !573, size: 64, offset: 10304)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !6, line: 194, flags: DIFlagFwdDecl)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !526, file: !6, line: 195, baseType: !196, size: 32, offset: 10368)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !526, file: !6, line: 196, baseType: !577, size: 32, offset: 10400)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !6, line: 188, baseType: !37)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !526, file: !6, line: 197, baseType: !196, size: 32, offset: 10432)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !430, file: !431, line: 223, baseType: !580, size: 1600, offset: 1152)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !72, line: 73, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !72, line: 64, size: 1600, elements: !582)
!582 = !{!583, !598, !602, !603, !604, !605, !606}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !581, file: !72, line: 65, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !72, line: 53, baseType: !586)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !72, line: 42, size: 832, elements: !587)
!587 = !{!588, !589, !590, !591, !592, !593, !594, !595, !596, !597}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !586, file: !72, line: 43, baseType: !196, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !586, file: !72, line: 44, baseType: !196, size: 32, offset: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !586, file: !72, line: 45, baseType: !196, size: 32, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !586, file: !72, line: 46, baseType: !196, size: 32, offset: 96)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !586, file: !72, line: 47, baseType: !196, size: 32, offset: 128)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !586, file: !72, line: 48, baseType: !196, size: 32, offset: 160)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !586, file: !72, line: 49, baseType: !196, size: 32, offset: 192)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !586, file: !72, line: 50, baseType: !196, size: 32, offset: 224)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !72, line: 51, baseType: !276, size: 512, offset: 256)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !586, file: !72, line: 52, baseType: !291, size: 64, offset: 768)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !581, file: !72, line: 66, baseType: !599, size: 1312, offset: 64)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 1312, elements: !600)
!600 = !{!601}
!601 = !DISubrange(count: 41)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !581, file: !72, line: 69, baseType: !196, size: 32, offset: 1376)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !581, file: !72, line: 69, baseType: !196, size: 32, offset: 1408)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !581, file: !72, line: 70, baseType: !196, size: 32, offset: 1440)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !581, file: !72, line: 71, baseType: !443, size: 64, offset: 1472)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !581, file: !72, line: 72, baseType: !607, size: 64, offset: 1536)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !72, line: 59, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !72, line: 57, size: 8192, elements: !610)
!610 = !{!611}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !609, file: !72, line: 58, baseType: !306, size: 8192)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !430, file: !431, line: 223, baseType: !580, size: 1600, offset: 2752)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !430, file: !431, line: 223, baseType: !580, size: 1600, offset: 4352)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !430, file: !431, line: 223, baseType: !580, size: 1600, offset: 5952)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !430, file: !431, line: 233, baseType: !319, size: 16, offset: 7552)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !430, file: !431, line: 236, baseType: !196, size: 32, offset: 7584)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !430, file: !431, line: 238, baseType: !196, size: 32, offset: 7616)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !430, file: !431, line: 238, baseType: !196, size: 32, offset: 7648)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !430, file: !431, line: 239, baseType: !342, size: 128, offset: 7680)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !430, file: !431, line: 241, baseType: !515, size: 64, offset: 7808)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !430, file: !431, line: 243, baseType: !342, size: 128, offset: 7872)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !430, file: !431, line: 245, baseType: !291, size: 64, offset: 8000)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !364, file: !365, line: 171, baseType: !196, size: 32, offset: 640)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !364, file: !365, line: 172, baseType: !196, size: 32, offset: 672)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !364, file: !365, line: 173, baseType: !626, size: 8, offset: 704)
!626 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !364, file: !365, line: 175, baseType: !628, size: 64, offset: 768)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !630, line: 44, flags: DIFlagFwdDecl)
!630 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!631 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !364, file: !365, line: 178, baseType: !632, size: 64, offset: 832)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !630, line: 41, flags: DIFlagFwdDecl)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !364, file: !365, line: 179, baseType: !626, size: 8, offset: 896)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !364, file: !365, line: 182, baseType: !626, size: 8, offset: 904)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !364, file: !365, line: 183, baseType: !413, size: 64, offset: 960)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !364, file: !365, line: 184, baseType: !413, size: 64, offset: 1024)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !364, file: !365, line: 185, baseType: !639, size: 64, offset: 1088)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 288, elements: !641)
!641 = !{!390, !390}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !364, file: !365, line: 188, baseType: !626, size: 8, offset: 1152)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !364, file: !365, line: 191, baseType: !7, size: 32, offset: 1184)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !364, file: !365, line: 191, baseType: !645, size: 64, offset: 1216)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !364, file: !365, line: 191, baseType: !7, size: 32, offset: 1280)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !364, file: !365, line: 192, baseType: !648, size: 64, offset: 1344)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !365, line: 61, flags: DIFlagFwdDecl)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !364, file: !365, line: 195, baseType: !413, size: 64, offset: 1408)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !364, file: !365, line: 197, baseType: !652, size: 64, offset: 1472)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !365, line: 197, flags: DIFlagFwdDecl)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !364, file: !365, line: 198, baseType: !655, size: 64, offset: 1536)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !365, line: 59, flags: DIFlagFwdDecl)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !364, file: !365, line: 201, baseType: !626, size: 8, offset: 1600)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !364, file: !365, line: 202, baseType: !387, size: 96, offset: 1632)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !364, file: !365, line: 204, baseType: !387, size: 96, offset: 1728)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !364, file: !365, line: 205, baseType: !196, size: 32, offset: 1824)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !358, file: !207, line: 121, baseType: !319, size: 16, offset: 1088)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !358, file: !207, line: 121, baseType: !319, size: 16, offset: 1104)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !358, file: !207, line: 122, baseType: !196, size: 32, offset: 1120)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !358, file: !207, line: 122, baseType: !196, size: 32, offset: 1152)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !358, file: !207, line: 122, baseType: !196, size: 32, offset: 1184)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !358, file: !207, line: 123, baseType: !276, size: 512, offset: 1216)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !358, file: !207, line: 124, baseType: !357, size: 64, offset: 1728)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !358, file: !207, line: 124, baseType: !357, size: 64, offset: 1792)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !358, file: !207, line: 127, baseType: !357, size: 64, offset: 1856)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !358, file: !207, line: 127, baseType: !357, size: 64, offset: 1920)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !358, file: !207, line: 127, baseType: !357, size: 64, offset: 1984)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !358, file: !207, line: 128, baseType: !673, size: 64, offset: 2048)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !355, line: 41, flags: DIFlagFwdDecl)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !358, file: !207, line: 130, baseType: !676, size: 64, offset: 2112)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !207, line: 97, size: 832, elements: !678)
!678 = !{!679, !683, !684}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !677, file: !207, line: 98, baseType: !680, size: 768)
!680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 768, elements: !681)
!681 = !{!682, !390}
!682 = !DISubrange(count: 8)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !677, file: !207, line: 99, baseType: !196, size: 32, offset: 768)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !677, file: !207, line: 99, baseType: !196, size: 32, offset: 800)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !358, file: !207, line: 131, baseType: !686, size: 64, offset: 2176)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !562, line: 486, size: 1600, elements: !688)
!688 = !{!689, !690, !691, !692, !693, !694, !695, !696, !697}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !687, file: !562, line: 487, baseType: !286, size: 960)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !687, file: !562, line: 489, baseType: !342, size: 128, offset: 960)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !687, file: !562, line: 490, baseType: !342, size: 128, offset: 1088)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !687, file: !562, line: 491, baseType: !342, size: 128, offset: 1216)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !687, file: !562, line: 492, baseType: !342, size: 128, offset: 1344)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !687, file: !562, line: 494, baseType: !196, size: 32, offset: 1472)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !687, file: !562, line: 495, baseType: !196, size: 32, offset: 1504)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !687, file: !562, line: 497, baseType: !196, size: 32, offset: 1536)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !687, file: !562, line: 498, baseType: !196, size: 32, offset: 1568)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !358, file: !207, line: 132, baseType: !686, size: 64, offset: 2240)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !358, file: !207, line: 133, baseType: !700, size: 64, offset: 2304)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !562, line: 334, size: 1728, elements: !702)
!702 = !{!703, !704, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !738}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !701, file: !562, line: 335, baseType: !342, size: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !701, file: !562, line: 336, baseType: !705, size: 64, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !701, file: !562, line: 338, baseType: !319, size: 16, offset: 192)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !701, file: !562, line: 338, baseType: !319, size: 16, offset: 208)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !701, file: !562, line: 339, baseType: !7, size: 32, offset: 224)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !701, file: !562, line: 340, baseType: !196, size: 32, offset: 256)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !701, file: !562, line: 342, baseType: !388, size: 32, offset: 288)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !701, file: !562, line: 343, baseType: !387, size: 96, offset: 320)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !701, file: !562, line: 344, baseType: !387, size: 96, offset: 416)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !701, file: !562, line: 347, baseType: !342, size: 128, offset: 512)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !701, file: !562, line: 349, baseType: !196, size: 32, offset: 640)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !701, file: !562, line: 350, baseType: !196, size: 32, offset: 672)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !701, file: !562, line: 351, baseType: !291, size: 64, offset: 704)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !701, file: !562, line: 352, baseType: !291, size: 64, offset: 768)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !701, file: !562, line: 354, baseType: !719, size: 384, offset: 832)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !562, line: 116, baseType: !720)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !562, line: 94, size: 384, elements: !721)
!721 = !{!722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !720, file: !562, line: 96, baseType: !196, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !720, file: !562, line: 96, baseType: !196, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !720, file: !562, line: 97, baseType: !196, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !720, file: !562, line: 97, baseType: !196, size: 32, offset: 96)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !720, file: !562, line: 99, baseType: !319, size: 16, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !720, file: !562, line: 100, baseType: !319, size: 16, offset: 144)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !720, file: !562, line: 102, baseType: !319, size: 16, offset: 160)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !720, file: !562, line: 105, baseType: !319, size: 16, offset: 176)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !720, file: !562, line: 108, baseType: !319, size: 16, offset: 192)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !720, file: !562, line: 109, baseType: !319, size: 16, offset: 208)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !720, file: !562, line: 111, baseType: !319, size: 16, offset: 224)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !720, file: !562, line: 112, baseType: !319, size: 16, offset: 240)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !720, file: !562, line: 114, baseType: !196, size: 32, offset: 256)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !720, file: !562, line: 114, baseType: !196, size: 32, offset: 288)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !720, file: !562, line: 115, baseType: !196, size: 32, offset: 320)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !720, file: !562, line: 115, baseType: !196, size: 32, offset: 352)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !701, file: !562, line: 355, baseType: !276, size: 512, offset: 1216)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !358, file: !207, line: 134, baseType: !291, size: 64, offset: 2368)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !358, file: !207, line: 136, baseType: !741, size: 64, offset: 2432)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !207, line: 58, flags: DIFlagFwdDecl)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !358, file: !207, line: 138, baseType: !719, size: 384, offset: 2496)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !358, file: !207, line: 139, baseType: !745, size: 64, offset: 2880)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !562, line: 80, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !562, line: 72, size: 192, elements: !748)
!748 = !{!749, !756, !757, !758, !759}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !747, file: !562, line: 73, baseType: !750, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !562, line: 59, baseType: !752)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !562, line: 56, size: 128, elements: !753)
!753 = !{!754, !755}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !752, file: !562, line: 57, baseType: !387, size: 96)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !752, file: !562, line: 58, baseType: !196, size: 32, offset: 96)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !747, file: !562, line: 74, baseType: !196, size: 32, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !747, file: !562, line: 76, baseType: !196, size: 32, offset: 96)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !747, file: !562, line: 77, baseType: !196, size: 32, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !747, file: !562, line: 79, baseType: !196, size: 32, offset: 160)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !358, file: !207, line: 141, baseType: !342, size: 128, offset: 2944)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !358, file: !207, line: 142, baseType: !342, size: 128, offset: 3072)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !358, file: !207, line: 143, baseType: !342, size: 128, offset: 3200)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !358, file: !207, line: 144, baseType: !342, size: 128, offset: 3328)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !358, file: !207, line: 146, baseType: !196, size: 32, offset: 3456)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !358, file: !207, line: 147, baseType: !196, size: 32, offset: 3488)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !358, file: !207, line: 150, baseType: !767, size: 64, offset: 3520)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !355, line: 53, flags: DIFlagFwdDecl)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !358, file: !207, line: 151, baseType: !771, size: 64, offset: 3584)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !358, file: !207, line: 152, baseType: !196, size: 32, offset: 3648)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !358, file: !207, line: 153, baseType: !196, size: 32, offset: 3680)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !358, file: !207, line: 156, baseType: !387, size: 96, offset: 3712)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !358, file: !207, line: 156, baseType: !387, size: 96, offset: 3808)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !358, file: !207, line: 156, baseType: !387, size: 96, offset: 3904)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !358, file: !207, line: 157, baseType: !387, size: 96, offset: 4000)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !358, file: !207, line: 158, baseType: !387, size: 96, offset: 4096)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !358, file: !207, line: 159, baseType: !387, size: 96, offset: 4192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !358, file: !207, line: 160, baseType: !387, size: 96, offset: 4288)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !358, file: !207, line: 160, baseType: !387, size: 96, offset: 4384)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !358, file: !207, line: 161, baseType: !783, size: 128, offset: 4480)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 128, elements: !784)
!784 = !{!785}
!785 = !DISubrange(count: 4)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !358, file: !207, line: 161, baseType: !783, size: 128, offset: 4608)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !358, file: !207, line: 162, baseType: !387, size: 96, offset: 4736)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !358, file: !207, line: 162, baseType: !387, size: 96, offset: 4832)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !358, file: !207, line: 163, baseType: !388, size: 32, offset: 4928)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !358, file: !207, line: 163, baseType: !388, size: 32, offset: 4960)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !358, file: !207, line: 164, baseType: !792, size: 512, offset: 4992)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 512, elements: !793)
!793 = !{!785, !785}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !358, file: !207, line: 165, baseType: !792, size: 512, offset: 5504)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !358, file: !207, line: 166, baseType: !792, size: 512, offset: 6016)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !358, file: !207, line: 167, baseType: !792, size: 512, offset: 6528)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !358, file: !207, line: 176, baseType: !792, size: 512, offset: 7040)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !358, file: !207, line: 178, baseType: !7, size: 32, offset: 7552)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !358, file: !207, line: 180, baseType: !319, size: 16, offset: 7584)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !358, file: !207, line: 181, baseType: !319, size: 16, offset: 7600)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !358, file: !207, line: 183, baseType: !319, size: 16, offset: 7616)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !358, file: !207, line: 183, baseType: !319, size: 16, offset: 7632)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !358, file: !207, line: 184, baseType: !319, size: 16, offset: 7648)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !358, file: !207, line: 184, baseType: !319, size: 16, offset: 7664)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !358, file: !207, line: 185, baseType: !319, size: 16, offset: 7680)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !358, file: !207, line: 186, baseType: !319, size: 16, offset: 7696)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !358, file: !207, line: 187, baseType: !319, size: 16, offset: 7712)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !358, file: !207, line: 188, baseType: !277, size: 8, offset: 7728)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !358, file: !207, line: 189, baseType: !277, size: 8, offset: 7736)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !358, file: !207, line: 192, baseType: !196, size: 32, offset: 7744)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !358, file: !207, line: 192, baseType: !196, size: 32, offset: 7776)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !358, file: !207, line: 192, baseType: !196, size: 32, offset: 7808)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !358, file: !207, line: 192, baseType: !196, size: 32, offset: 7840)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !358, file: !207, line: 194, baseType: !196, size: 32, offset: 7872)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !358, file: !207, line: 202, baseType: !388, size: 32, offset: 7904)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !358, file: !207, line: 202, baseType: !388, size: 32, offset: 7936)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !358, file: !207, line: 202, baseType: !388, size: 32, offset: 7968)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !358, file: !207, line: 211, baseType: !388, size: 32, offset: 8000)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !358, file: !207, line: 212, baseType: !388, size: 32, offset: 8032)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !358, file: !207, line: 213, baseType: !388, size: 32, offset: 8064)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !358, file: !207, line: 214, baseType: !388, size: 32, offset: 8096)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !358, file: !207, line: 215, baseType: !388, size: 32, offset: 8128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !358, file: !207, line: 216, baseType: !388, size: 32, offset: 8160)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !358, file: !207, line: 219, baseType: !388, size: 32, offset: 8192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !358, file: !207, line: 220, baseType: !388, size: 32, offset: 8224)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !358, file: !207, line: 221, baseType: !388, size: 32, offset: 8256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !358, file: !207, line: 224, baseType: !828, size: 16, offset: 8288)
!828 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !358, file: !207, line: 224, baseType: !828, size: 16, offset: 8304)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !358, file: !207, line: 226, baseType: !319, size: 16, offset: 8320)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !358, file: !207, line: 228, baseType: !277, size: 8, offset: 8336)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !358, file: !207, line: 229, baseType: !277, size: 8, offset: 8344)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !358, file: !207, line: 231, baseType: !319, size: 16, offset: 8352)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !358, file: !207, line: 232, baseType: !277, size: 8, offset: 8368)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !358, file: !207, line: 233, baseType: !277, size: 8, offset: 8376)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !358, file: !207, line: 234, baseType: !388, size: 32, offset: 8384)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !358, file: !207, line: 235, baseType: !388, size: 32, offset: 8416)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !358, file: !207, line: 237, baseType: !342, size: 128, offset: 8448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !358, file: !207, line: 238, baseType: !342, size: 128, offset: 8576)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !358, file: !207, line: 239, baseType: !342, size: 128, offset: 8704)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !358, file: !207, line: 240, baseType: !342, size: 128, offset: 8832)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !358, file: !207, line: 242, baseType: !388, size: 32, offset: 8960)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !358, file: !207, line: 244, baseType: !319, size: 16, offset: 8992)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !358, file: !207, line: 245, baseType: !828, size: 16, offset: 9008)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !358, file: !207, line: 246, baseType: !783, size: 128, offset: 9024)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !358, file: !207, line: 248, baseType: !196, size: 32, offset: 9152)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !358, file: !207, line: 249, baseType: !196, size: 32, offset: 9184)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !358, file: !207, line: 251, baseType: !849, size: 64, offset: 9216)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !207, line: 251, flags: DIFlagFwdDecl)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !358, file: !207, line: 253, baseType: !277, size: 8, offset: 9280)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !358, file: !207, line: 254, baseType: !277, size: 8, offset: 9288)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !358, file: !207, line: 255, baseType: !319, size: 16, offset: 9296)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !358, file: !207, line: 256, baseType: !387, size: 96, offset: 9312)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !358, file: !207, line: 258, baseType: !342, size: 128, offset: 9408)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !358, file: !207, line: 259, baseType: !342, size: 128, offset: 9536)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !358, file: !207, line: 260, baseType: !342, size: 128, offset: 9664)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !358, file: !207, line: 261, baseType: !342, size: 128, offset: 9792)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !358, file: !207, line: 263, baseType: !860, size: 64, offset: 9920)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !207, line: 52, flags: DIFlagFwdDecl)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !358, file: !207, line: 264, baseType: !863, size: 64, offset: 9984)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !207, line: 53, flags: DIFlagFwdDecl)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !358, file: !207, line: 265, baseType: !866, size: 64, offset: 10048)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !562, line: 46, flags: DIFlagFwdDecl)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !358, file: !207, line: 267, baseType: !277, size: 8, offset: 10112)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !358, file: !207, line: 268, baseType: !277, size: 8, offset: 10120)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !358, file: !207, line: 269, baseType: !319, size: 16, offset: 10128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !358, file: !207, line: 270, baseType: !388, size: 32, offset: 10144)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !358, file: !207, line: 272, baseType: !873, size: 64, offset: 10176)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !207, line: 54, flags: DIFlagFwdDecl)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !358, file: !207, line: 275, baseType: !876, size: 64, offset: 10240)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !207, line: 275, flags: DIFlagFwdDecl)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !358, file: !207, line: 277, baseType: !879, size: 64, offset: 10304)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !45, line: 178, size: 13504, elements: !881)
!881 = !{!882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !900, !903, !905, !906, !908, !909, !910, !911, !917, !922, !923, !927, !928, !929, !930, !931, !935, !947, !961, !965, !969, !973, !977, !981, !985, !989, !993, !997, !1001, !1002, !1003, !1004, !1005, !1006, !1010, !1011, !1012, !1013, !1017, !1018, !1019, !1020, !1021, !1026, !1027, !1028, !1029, !1030, !1034, !1035, !1036, !1037, !1038, !1045, !1056, !1060, !1078, !1088, !1093, !1104, !1111, !1118, !1122, !1126, !1130, !1134, !1135, !1136, !1140, !1144, !1145, !1146, !1150, !1151, !1160, !1267, !1271, !1279, !1283, !1287, !1291, !1299, !1309}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !880, file: !45, line: 180, baseType: !580, size: 1600)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !880, file: !45, line: 180, baseType: !580, size: 1600, offset: 1600)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !880, file: !45, line: 180, baseType: !580, size: 1600, offset: 3200)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !880, file: !45, line: 180, baseType: !580, size: 1600, offset: 4800)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !880, file: !45, line: 180, baseType: !580, size: 1600, offset: 6400)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !880, file: !45, line: 181, baseType: !196, size: 32, offset: 8000)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !880, file: !45, line: 181, baseType: !196, size: 32, offset: 8032)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !880, file: !45, line: 181, baseType: !196, size: 32, offset: 8064)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !880, file: !45, line: 181, baseType: !196, size: 32, offset: 8096)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !880, file: !45, line: 181, baseType: !196, size: 32, offset: 8128)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !880, file: !45, line: 182, baseType: !196, size: 32, offset: 8160)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !880, file: !45, line: 183, baseType: !196, size: 32, offset: 8192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !880, file: !45, line: 184, baseType: !895, size: 64, offset: 8256)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !896, line: 124, baseType: !897)
!896 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !899, line: 118, flags: DIFlagFwdDecl)
!899 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!900 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !880, file: !45, line: 185, baseType: !901, size: 64, offset: 8320)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !45, line: 97, flags: DIFlagFwdDecl)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !880, file: !45, line: 186, baseType: !904, size: 32, offset: 8384)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !45, line: 132, baseType: !44)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !880, file: !45, line: 187, baseType: !388, size: 32, offset: 8416)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !880, file: !45, line: 188, baseType: !907, size: 32, offset: 8448)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !45, line: 175, baseType: !50)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !880, file: !45, line: 189, baseType: !196, size: 32, offset: 8480)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !880, file: !45, line: 190, baseType: !767, size: 64, offset: 8512)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !880, file: !45, line: 193, baseType: !277, size: 8, offset: 8576)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !880, file: !45, line: 196, baseType: !912, size: 64, offset: 8640)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{null, !915}
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !45, line: 177, baseType: !880)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !880, file: !45, line: 199, baseType: !918, size: 64, offset: 8704)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !915, !921}
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !388)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !880, file: !45, line: 202, baseType: !912, size: 64, offset: 8768)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !880, file: !45, line: 207, baseType: !924, size: 64, offset: 8832)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!196, !915}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !880, file: !45, line: 208, baseType: !924, size: 64, offset: 8896)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !880, file: !45, line: 209, baseType: !924, size: 64, offset: 8960)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !880, file: !45, line: 210, baseType: !924, size: 64, offset: 9024)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !880, file: !45, line: 211, baseType: !924, size: 64, offset: 9088)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !880, file: !45, line: 218, baseType: !932, size: 64, offset: 9152)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{null, !915, !196, !383}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !880, file: !45, line: 219, baseType: !936, size: 64, offset: 9216)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !915, !196, !939}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !257, line: 48, size: 96, elements: !941)
!941 = !{!942, !943, !944, !945, !946}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !940, file: !257, line: 49, baseType: !7, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !940, file: !257, line: 49, baseType: !7, size: 32, offset: 32)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !940, file: !257, line: 50, baseType: !277, size: 8, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !940, file: !257, line: 50, baseType: !277, size: 8, offset: 72)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !940, file: !257, line: 51, baseType: !319, size: 16, offset: 80)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !880, file: !45, line: 220, baseType: !948, size: 64, offset: 9280)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DISubroutineType(types: !950)
!950 = !{null, !915, !196, !951}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !257, line: 42, size: 160, elements: !953)
!953 = !{!954, !955, !956, !957, !958, !959, !960}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !952, file: !257, line: 43, baseType: !7, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !952, file: !257, line: 43, baseType: !7, size: 32, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !952, file: !257, line: 43, baseType: !7, size: 32, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !952, file: !257, line: 43, baseType: !7, size: 32, offset: 96)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !952, file: !257, line: 44, baseType: !319, size: 16, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !952, file: !257, line: 45, baseType: !277, size: 8, offset: 144)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !952, file: !257, line: 45, baseType: !277, size: 8, offset: 152)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !880, file: !45, line: 227, baseType: !962, size: 64, offset: 9344)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!383, !915}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !880, file: !45, line: 228, baseType: !966, size: 64, offset: 9408)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!939, !915}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !880, file: !45, line: 229, baseType: !970, size: 64, offset: 9472)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{!951, !915}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !880, file: !45, line: 230, baseType: !974, size: 64, offset: 9536)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DISubroutineType(types: !976)
!976 = !{!405, !915}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !880, file: !45, line: 231, baseType: !978, size: 64, offset: 9600)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{!396, !915}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !880, file: !45, line: 236, baseType: !982, size: 64, offset: 9664)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DISubroutineType(types: !984)
!984 = !{null, !915, !383}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !880, file: !45, line: 237, baseType: !986, size: 64, offset: 9728)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{null, !915, !939}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !880, file: !45, line: 238, baseType: !990, size: 64, offset: 9792)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{null, !915, !951}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !880, file: !45, line: 239, baseType: !994, size: 64, offset: 9856)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{null, !915, !405}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !880, file: !45, line: 240, baseType: !998, size: 64, offset: 9920)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{null, !915, !396}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !880, file: !45, line: 245, baseType: !962, size: 64, offset: 9984)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !880, file: !45, line: 246, baseType: !966, size: 64, offset: 10048)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !880, file: !45, line: 247, baseType: !970, size: 64, offset: 10112)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !880, file: !45, line: 248, baseType: !974, size: 64, offset: 10176)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !880, file: !45, line: 249, baseType: !978, size: 64, offset: 10240)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !880, file: !45, line: 255, baseType: !1007, size: 64, offset: 10304)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!291, !915, !196, !196}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !880, file: !45, line: 256, baseType: !1007, size: 64, offset: 10368)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !880, file: !45, line: 257, baseType: !1007, size: 64, offset: 10432)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !880, file: !45, line: 258, baseType: !1007, size: 64, offset: 10496)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !880, file: !45, line: 264, baseType: !1014, size: 64, offset: 10560)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!291, !915, !196}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !880, file: !45, line: 265, baseType: !1014, size: 64, offset: 10624)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !880, file: !45, line: 266, baseType: !1014, size: 64, offset: 10688)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !880, file: !45, line: 267, baseType: !1014, size: 64, offset: 10752)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !880, file: !45, line: 268, baseType: !1014, size: 64, offset: 10816)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !880, file: !45, line: 272, baseType: !1022, size: 64, offset: 10880)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!1025, !915}
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !880, file: !45, line: 273, baseType: !1022, size: 64, offset: 10944)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !880, file: !45, line: 274, baseType: !1022, size: 64, offset: 11008)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !880, file: !45, line: 275, baseType: !1022, size: 64, offset: 11072)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !880, file: !45, line: 276, baseType: !1022, size: 64, offset: 11136)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !880, file: !45, line: 279, baseType: !1031, size: 64, offset: 11200)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{null, !915, !196, !1025, !196}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !880, file: !45, line: 280, baseType: !1031, size: 64, offset: 11264)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !880, file: !45, line: 281, baseType: !1031, size: 64, offset: 11328)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !880, file: !45, line: 284, baseType: !924, size: 64, offset: 11392)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !880, file: !45, line: 285, baseType: !924, size: 64, offset: 11456)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !880, file: !45, line: 286, baseType: !1039, size: 64, offset: 11520)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!1042, !915}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !630, line: 33, flags: DIFlagFwdDecl)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !880, file: !45, line: 287, baseType: !1046, size: 64, offset: 11584)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!1049, !915}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !45, line: 120, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !45, line: 117, size: 256, elements: !1052)
!1052 = !{!1053, !1055}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1051, file: !45, line: 118, baseType: !1054, size: 128)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 128, elements: !784)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1051, file: !45, line: 119, baseType: !1054, size: 128, offset: 128)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !880, file: !45, line: 288, baseType: !1057, size: 64, offset: 11648)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!426, !915}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !880, file: !45, line: 289, baseType: !1061, size: 64, offset: 11712)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{null, !915, !1064}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !1066, line: 53, size: 320, elements: !1067)
!1066 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_ccg.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1067 = !{!1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1065, file: !1066, line: 54, baseType: !196, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !1065, file: !1066, line: 58, baseType: !196, size: 32, offset: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "grid_size", scope: !1065, file: !1066, line: 61, baseType: !196, size: 32, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "grid_area", scope: !1065, file: !1066, line: 63, baseType: !196, size: 32, offset: 96)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "grid_bytes", scope: !1065, file: !1066, line: 65, baseType: !196, size: 32, offset: 128)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "normal_offset", scope: !1065, file: !1066, line: 69, baseType: !196, size: 32, offset: 160)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "mask_offset", scope: !1065, file: !1066, line: 73, baseType: !196, size: 32, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "num_layers", scope: !1065, file: !1066, line: 75, baseType: !196, size: 32, offset: 224)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "has_normals", scope: !1065, file: !1066, line: 76, baseType: !196, size: 32, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "has_mask", scope: !1065, file: !1066, line: 77, baseType: !196, size: 32, offset: 288)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !880, file: !45, line: 290, baseType: !1079, size: 64, offset: 11776)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!1082, !915}
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !45, line: 126, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !45, line: 123, size: 32, elements: !1085)
!1085 = !{!1086, !1087}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1084, file: !45, line: 124, baseType: !319, size: 16)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1084, file: !45, line: 125, baseType: !277, size: 8, offset: 16)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !880, file: !45, line: 291, baseType: !1089, size: 64, offset: 11840)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!1092, !915}
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !880, file: !45, line: 299, baseType: !1094, size: 64, offset: 11904)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{null, !915, !1097, !291, !1103}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{null, !291, !196, !1100, !1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !319)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !45, line: 162, baseType: !55)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !880, file: !45, line: 309, baseType: !1105, size: 64, offset: 11968)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{null, !915, !1108, !291}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{null, !291, !196, !1100, !1100}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !880, file: !45, line: 317, baseType: !1112, size: 64, offset: 12032)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{null, !915, !1115, !291, !1103}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{null, !291, !196, !196, !1100, !1100}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !880, file: !45, line: 327, baseType: !1119, size: 64, offset: 12096)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{null, !915, !1108, !291, !1103}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !880, file: !45, line: 337, baseType: !1123, size: 64, offset: 12160)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !915, !418, !418}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !880, file: !45, line: 344, baseType: !1127, size: 64, offset: 12224)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !915, !196, !418}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !880, file: !45, line: 347, baseType: !1131, size: 64, offset: 12288)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{null, !915, !413}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !880, file: !45, line: 350, baseType: !1127, size: 64, offset: 12352)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !880, file: !45, line: 351, baseType: !1127, size: 64, offset: 12416)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !880, file: !45, line: 355, baseType: !1137, size: 64, offset: 12480)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!420, !357, !915}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !880, file: !45, line: 359, baseType: !1141, size: 64, offset: 12544)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!632, !357, !915}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !880, file: !45, line: 364, baseType: !912, size: 64, offset: 12608)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !880, file: !45, line: 367, baseType: !912, size: 64, offset: 12672)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !880, file: !45, line: 373, baseType: !1147, size: 64, offset: 12736)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{null, !915, !626, !626}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !880, file: !45, line: 376, baseType: !912, size: 64, offset: 12800)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !880, file: !45, line: 385, baseType: !1152, size: 64, offset: 12864)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{null, !915, !1155, !626, !1156}
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !45, line: 146, baseType: !1157)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!196, !196, !291}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !880, file: !45, line: 391, baseType: !1161, size: 64, offset: 12928)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{null, !915, !1164, !1262, !291, !1266}
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !45, line: 150, baseType: !1165)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!1168, !1169, !1261, !196}
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !45, line: 143, baseType: !59)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !257, line: 160, size: 384, elements: !1171)
!1171 = !{!1172, !1175, !1256, !1257, !1258, !1259, !1260}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1170, file: !257, line: 161, baseType: !1173, size: 256)
!1173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 256, elements: !1174)
!1174 = !{!785, !381}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1170, file: !257, line: 162, baseType: !1176, size: 64, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1178, line: 77, size: 15424, elements: !1179)
!1178 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1179 = !{!1180, !1181, !1182, !1185, !1188, !1191, !1194, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1245, !1246, !1250}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1177, file: !1178, line: 78, baseType: !286, size: 960)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1177, file: !1178, line: 80, baseType: !306, size: 8192, offset: 960)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1177, file: !1178, line: 82, baseType: !1183, size: 64, offset: 9152)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1178, line: 43, flags: DIFlagFwdDecl)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1177, file: !1178, line: 83, baseType: !1186, size: 64, offset: 9216)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !287, line: 46, flags: DIFlagFwdDecl)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1177, file: !1178, line: 86, baseType: !1189, size: 64, offset: 9280)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1178, line: 41, flags: DIFlagFwdDecl)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1177, file: !1178, line: 87, baseType: !1192, size: 64, offset: 9344)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1178, line: 44, flags: DIFlagFwdDecl)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1177, file: !1178, line: 89, baseType: !1195, size: 512, offset: 9408)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1192, size: 512, elements: !1196)
!1196 = !{!682}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1177, file: !1178, line: 90, baseType: !319, size: 16, offset: 9920)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1177, file: !1178, line: 90, baseType: !319, size: 16, offset: 9936)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1177, file: !1178, line: 92, baseType: !319, size: 16, offset: 9952)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1177, file: !1178, line: 92, baseType: !319, size: 16, offset: 9968)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1177, file: !1178, line: 93, baseType: !319, size: 16, offset: 9984)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1177, file: !1178, line: 93, baseType: !319, size: 16, offset: 10000)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1177, file: !1178, line: 94, baseType: !196, size: 32, offset: 10016)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1177, file: !1178, line: 97, baseType: !319, size: 16, offset: 10048)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1177, file: !1178, line: 97, baseType: !319, size: 16, offset: 10064)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1177, file: !1178, line: 98, baseType: !319, size: 16, offset: 10080)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1177, file: !1178, line: 98, baseType: !319, size: 16, offset: 10096)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1177, file: !1178, line: 99, baseType: !319, size: 16, offset: 10112)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1177, file: !1178, line: 99, baseType: !319, size: 16, offset: 10128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1177, file: !1178, line: 100, baseType: !7, size: 32, offset: 10144)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1177, file: !1178, line: 101, baseType: !645, size: 64, offset: 10176)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1177, file: !1178, line: 103, baseType: !312, size: 64, offset: 10240)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1177, file: !1178, line: 104, baseType: !1214, size: 64, offset: 10304)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !287, line: 159, size: 448, elements: !1216)
!1216 = !{!1217, !1219, !1220, !1222, !1223, !1225}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1215, file: !287, line: 161, baseType: !1218, size: 64)
!1218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !380)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1215, file: !287, line: 162, baseType: !1218, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1215, file: !287, line: 163, baseType: !1221, size: 32, offset: 128)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !319, size: 32, elements: !380)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1215, file: !287, line: 164, baseType: !1221, size: 32, offset: 160)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1215, file: !287, line: 165, baseType: !1224, size: 128, offset: 192)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 128, elements: !380)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1215, file: !287, line: 166, baseType: !1226, size: 128, offset: 320)
!1226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1186, size: 128, elements: !380)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1177, file: !1178, line: 107, baseType: !388, size: 32, offset: 10368)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1177, file: !1178, line: 108, baseType: !196, size: 32, offset: 10400)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1177, file: !1178, line: 109, baseType: !319, size: 16, offset: 10432)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1177, file: !1178, line: 110, baseType: !319, size: 16, offset: 10448)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1177, file: !1178, line: 113, baseType: !196, size: 32, offset: 10464)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1177, file: !1178, line: 113, baseType: !196, size: 32, offset: 10496)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1177, file: !1178, line: 114, baseType: !277, size: 8, offset: 10528)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1177, file: !1178, line: 114, baseType: !277, size: 8, offset: 10536)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1177, file: !1178, line: 115, baseType: !319, size: 16, offset: 10544)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1177, file: !1178, line: 116, baseType: !783, size: 128, offset: 10560)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1177, file: !1178, line: 119, baseType: !388, size: 32, offset: 10688)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1177, file: !1178, line: 119, baseType: !388, size: 32, offset: 10720)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1177, file: !1178, line: 122, baseType: !1240, size: 512, offset: 10752)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1241, line: 182, baseType: !1242)
!1241 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1241, line: 180, size: 512, elements: !1243)
!1243 = !{!1244}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1242, file: !1241, line: 181, baseType: !276, size: 512)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1177, file: !1178, line: 123, baseType: !277, size: 8, offset: 11264)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1177, file: !1178, line: 125, baseType: !1247, size: 56, offset: 11272)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 56, elements: !1248)
!1248 = !{!1249}
!1249 = !DISubrange(count: 7)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1177, file: !1178, line: 126, baseType: !1251, size: 4096, offset: 11328)
!1251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1252, size: 4096, elements: !1196)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1178, line: 69, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1178, line: 67, size: 512, elements: !1254)
!1254 = !{!1255}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1253, file: !1178, line: 68, baseType: !276, size: 512)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1170, file: !257, line: 163, baseType: !277, size: 8, offset: 320)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1170, file: !257, line: 163, baseType: !277, size: 8, offset: 328)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1170, file: !257, line: 164, baseType: !319, size: 16, offset: 336)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1170, file: !257, line: 164, baseType: !319, size: 16, offset: 352)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1170, file: !257, line: 164, baseType: !319, size: 16, offset: 368)
!1261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !626)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !45, line: 147, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!196, !291, !196, !196}
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !45, line: 157, baseType: !65)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !880, file: !45, line: 400, baseType: !1268, size: 64, offset: 12992)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{null, !915, !1156}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !880, file: !45, line: 415, baseType: !1272, size: 64, offset: 13056)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{null, !915, !1275, !1156, !1262, !291, !1266}
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !45, line: 149, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!1168, !291, !196}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !880, file: !45, line: 425, baseType: !1280, size: 64, offset: 13120)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{null, !915, !1275, !1262, !291, !1266}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !880, file: !45, line: 435, baseType: !1284, size: 64, offset: 13184)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !915, !1156, !1275, !291}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !880, file: !45, line: 444, baseType: !1288, size: 64, offset: 13248)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{null, !915, !1275, !291}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !880, file: !45, line: 455, baseType: !1292, size: 64, offset: 13312)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{null, !915, !1275, !1295, !291}
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !45, line: 148, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{null, !291, !196, !388}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !880, file: !45, line: 464, baseType: !1300, size: 64, offset: 13376)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{null, !915, !1303, !1306, !291}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{null, !291, !196, !291}
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!626, !291, !196}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !880, file: !45, line: 470, baseType: !912, size: 64, offset: 13440)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !358, file: !207, line: 277, baseType: !879, size: 64, offset: 10368)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !358, file: !207, line: 278, baseType: !1312, size: 64, offset: 10432)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1313, line: 27, baseType: !1314)
!1313 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1315, line: 45, baseType: !1316)
!1315 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1316 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !358, file: !207, line: 279, baseType: !1312, size: 64, offset: 10496)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !358, file: !207, line: 280, baseType: !7, size: 32, offset: 10560)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !358, file: !207, line: 281, baseType: !7, size: 32, offset: 10592)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !358, file: !207, line: 283, baseType: !342, size: 128, offset: 10624)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !358, file: !207, line: 284, baseType: !342, size: 128, offset: 10752)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !358, file: !207, line: 285, baseType: !1323, size: 64, offset: 10880)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !358, file: !207, line: 287, baseType: !1325, size: 64, offset: 10944)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !207, line: 59, flags: DIFlagFwdDecl)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !358, file: !207, line: 288, baseType: !1328, size: 64, offset: 11008)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !207, line: 288, flags: DIFlagFwdDecl)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !358, file: !207, line: 290, baseType: !1331, size: 64, offset: 11072)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 64, elements: !380)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !358, file: !207, line: 291, baseType: !1333, size: 64, offset: 11136)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1178, line: 65, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1178, line: 50, size: 320, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1335, file: !1178, line: 51, baseType: !281, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1335, file: !1178, line: 53, baseType: !196, size: 32, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1335, file: !1178, line: 54, baseType: !196, size: 32, offset: 96)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1335, file: !1178, line: 55, baseType: !196, size: 32, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1335, file: !1178, line: 55, baseType: !196, size: 32, offset: 160)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1335, file: !1178, line: 56, baseType: !277, size: 8, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1335, file: !1178, line: 56, baseType: !277, size: 8, offset: 200)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1335, file: !1178, line: 57, baseType: !277, size: 8, offset: 208)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1335, file: !1178, line: 57, baseType: !277, size: 8, offset: 216)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1335, file: !1178, line: 59, baseType: !319, size: 16, offset: 224)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1335, file: !1178, line: 59, baseType: !319, size: 16, offset: 240)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1335, file: !1178, line: 59, baseType: !319, size: 16, offset: 256)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1335, file: !1178, line: 61, baseType: !319, size: 16, offset: 272)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1335, file: !1178, line: 63, baseType: !196, size: 32, offset: 288)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !358, file: !207, line: 293, baseType: !342, size: 128, offset: 11200)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !358, file: !207, line: 294, baseType: !1353, size: 64, offset: 11328)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !207, line: 113, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !207, line: 108, size: 256, elements: !1356)
!1356 = !{!1357, !1359, !1360, !1361, !1362}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1355, file: !207, line: 109, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1355, file: !207, line: 109, baseType: !1358, size: 64, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1355, file: !207, line: 110, baseType: !357, size: 64, offset: 128)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1355, file: !207, line: 111, baseType: !196, size: 32, offset: 192)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1355, file: !207, line: 112, baseType: !388, size: 32, offset: 224)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !282, file: !283, line: 1221, baseType: !1364, size: 64, offset: 1088)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !283, line: 52, flags: DIFlagFwdDecl)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !282, file: !283, line: 1223, baseType: !281, size: 64, offset: 1152)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !282, file: !283, line: 1225, baseType: !342, size: 128, offset: 1216)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !282, file: !283, line: 1226, baseType: !1369, size: 64, offset: 1344)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !283, line: 69, size: 320, elements: !1371)
!1371 = !{!1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1370, file: !283, line: 70, baseType: !1369, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1370, file: !283, line: 70, baseType: !1369, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1370, file: !283, line: 71, baseType: !7, size: 32, offset: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1370, file: !283, line: 71, baseType: !7, size: 32, offset: 160)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1370, file: !283, line: 72, baseType: !196, size: 32, offset: 192)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1370, file: !283, line: 73, baseType: !319, size: 16, offset: 224)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1370, file: !283, line: 73, baseType: !319, size: 16, offset: 240)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1370, file: !283, line: 74, baseType: !357, size: 64, offset: 256)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !282, file: !283, line: 1227, baseType: !357, size: 64, offset: 1408)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !282, file: !283, line: 1229, baseType: !387, size: 96, offset: 1472)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !282, file: !283, line: 1230, baseType: !387, size: 96, offset: 1568)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !282, file: !283, line: 1231, baseType: !387, size: 96, offset: 1664)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !282, file: !283, line: 1231, baseType: !387, size: 96, offset: 1760)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !282, file: !283, line: 1233, baseType: !7, size: 32, offset: 1856)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !282, file: !283, line: 1234, baseType: !196, size: 32, offset: 1888)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !282, file: !283, line: 1235, baseType: !7, size: 32, offset: 1920)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !282, file: !283, line: 1237, baseType: !319, size: 16, offset: 1952)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !282, file: !283, line: 1239, baseType: !277, size: 8, offset: 1968)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !282, file: !283, line: 1240, baseType: !1391, size: 8, offset: 1976)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 8, elements: !1392)
!1392 = !{!1393}
!1393 = !DISubrange(count: 1)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !282, file: !283, line: 1242, baseType: !1395, size: 64, offset: 1984)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1397, line: 248, flags: DIFlagFwdDecl)
!1397 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !282, file: !283, line: 1244, baseType: !1399, size: 64, offset: 2048)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !283, line: 59, flags: DIFlagFwdDecl)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !282, file: !283, line: 1246, baseType: !1402, size: 64, offset: 2112)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !283, line: 1067, size: 5184, elements: !1404)
!1404 = !{!1405, !1831, !1832, !1846, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1868, !1884, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1995}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1403, file: !283, line: 1068, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !283, line: 934, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !283, line: 925, size: 576, elements: !1409)
!1409 = !{!1410, !1814, !1815, !1816, !1817, !1818, !1830}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1408, file: !283, line: 926, baseType: !1411, size: 320)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !283, line: 830, baseType: !1412)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !283, line: 813, size: 320, elements: !1413)
!1413 = !{!1414, !1799, !1808, !1809, !1811, !1812, !1813}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1412, file: !283, line: 814, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1417, line: 54, size: 16448, elements: !1418)
!1417 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1418 = !{!1419, !1420, !1427, !1474, !1710, !1711, !1712, !1713, !1716, !1717, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1416, file: !1417, line: 55, baseType: !286, size: 960)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1416, file: !1417, line: 57, baseType: !1421, size: 192, offset: 960)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !1417, line: 48, size: 192, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1421, file: !1417, line: 49, baseType: !1176, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1421, file: !1417, line: 50, baseType: !1331, size: 64, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1421, file: !1417, line: 51, baseType: !388, size: 32, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1421, file: !1417, line: 51, baseType: !388, size: 32, offset: 160)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1416, file: !1417, line: 58, baseType: !1428, size: 64, offset: 1152)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1241, line: 72, size: 3072, elements: !1430)
!1430 = !{!1431, !1432, !1433, !1434, !1435, !1444, !1445, !1470, !1471, !1472, !1473}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1429, file: !1241, line: 73, baseType: !196, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1429, file: !1241, line: 73, baseType: !196, size: 32, offset: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1429, file: !1241, line: 74, baseType: !196, size: 32, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1429, file: !1241, line: 75, baseType: !196, size: 32, offset: 96)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1429, file: !1241, line: 77, baseType: !1436, size: 128, offset: 128)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1437, line: 95, baseType: !1438)
!1437 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1437, line: 92, size: 128, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1438, file: !1437, line: 93, baseType: !388, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1438, file: !1437, line: 93, baseType: !388, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1438, file: !1437, line: 94, baseType: !388, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1438, file: !1437, line: 94, baseType: !388, size: 32, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1429, file: !1241, line: 77, baseType: !1436, size: 128, offset: 256)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1429, file: !1241, line: 79, baseType: !1446, size: 2304, offset: 384)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 2304, elements: !784)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1241, line: 67, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1241, line: 55, size: 576, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1466, !1467, !1468, !1469}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1448, file: !1241, line: 56, baseType: !319, size: 16)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1448, file: !1241, line: 56, baseType: !319, size: 16, offset: 16)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1448, file: !1241, line: 58, baseType: !388, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1448, file: !1241, line: 59, baseType: !388, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1448, file: !1241, line: 59, baseType: !388, size: 32, offset: 96)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1448, file: !1241, line: 60, baseType: !1331, size: 64, offset: 128)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1448, file: !1241, line: 60, baseType: !1331, size: 64, offset: 192)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1448, file: !1241, line: 61, baseType: !1458, size: 64, offset: 256)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1241, line: 47, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1241, line: 44, size: 96, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1460, file: !1241, line: 45, baseType: !388, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1460, file: !1241, line: 45, baseType: !388, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1460, file: !1241, line: 46, baseType: !319, size: 16, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1460, file: !1241, line: 46, baseType: !319, size: 16, offset: 80)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1448, file: !1241, line: 62, baseType: !1458, size: 64, offset: 320)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1448, file: !1241, line: 64, baseType: !1458, size: 64, offset: 384)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1448, file: !1241, line: 65, baseType: !1331, size: 64, offset: 448)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1448, file: !1241, line: 66, baseType: !1331, size: 64, offset: 512)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1429, file: !1241, line: 80, baseType: !387, size: 96, offset: 2688)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1429, file: !1241, line: 80, baseType: !387, size: 96, offset: 2784)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1429, file: !1241, line: 81, baseType: !387, size: 96, offset: 2880)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1429, file: !1241, line: 83, baseType: !387, size: 96, offset: 2976)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1416, file: !1417, line: 59, baseType: !1475, size: 2496, offset: 1216)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !1397, line: 57, size: 2496, elements: !1476)
!1476 = !{!1477, !1478, !1479, !1480, !1481, !1482, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1475, file: !1397, line: 59, baseType: !319, size: 16)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1475, file: !1397, line: 59, baseType: !319, size: 16, offset: 16)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !1475, file: !1397, line: 59, baseType: !319, size: 16, offset: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !1475, file: !1397, line: 59, baseType: !319, size: 16, offset: 48)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1475, file: !1397, line: 60, baseType: !357, size: 64, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1475, file: !1397, line: 61, baseType: !1483, size: 64, offset: 128)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !1397, line: 202, size: 3328, elements: !1485)
!1485 = !{!1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1564, !1590, !1591, !1620, !1641, !1649, !1650}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1484, file: !1397, line: 203, baseType: !286, size: 960)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1484, file: !1397, line: 204, baseType: !353, size: 64, offset: 960)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1484, file: !1397, line: 206, baseType: !388, size: 32, offset: 1024)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1484, file: !1397, line: 206, baseType: !388, size: 32, offset: 1056)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1484, file: !1397, line: 207, baseType: !388, size: 32, offset: 1088)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1484, file: !1397, line: 207, baseType: !388, size: 32, offset: 1120)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1484, file: !1397, line: 207, baseType: !388, size: 32, offset: 1152)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1484, file: !1397, line: 207, baseType: !388, size: 32, offset: 1184)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1484, file: !1397, line: 207, baseType: !388, size: 32, offset: 1216)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1484, file: !1397, line: 207, baseType: !388, size: 32, offset: 1248)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1484, file: !1397, line: 208, baseType: !388, size: 32, offset: 1280)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1484, file: !1397, line: 208, baseType: !388, size: 32, offset: 1312)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1484, file: !1397, line: 211, baseType: !388, size: 32, offset: 1344)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1484, file: !1397, line: 211, baseType: !388, size: 32, offset: 1376)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1484, file: !1397, line: 211, baseType: !388, size: 32, offset: 1408)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1484, file: !1397, line: 211, baseType: !388, size: 32, offset: 1440)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1484, file: !1397, line: 211, baseType: !388, size: 32, offset: 1472)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1484, file: !1397, line: 214, baseType: !388, size: 32, offset: 1504)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1484, file: !1397, line: 214, baseType: !388, size: 32, offset: 1536)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1484, file: !1397, line: 217, baseType: !388, size: 32, offset: 1568)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1484, file: !1397, line: 218, baseType: !388, size: 32, offset: 1600)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1484, file: !1397, line: 219, baseType: !388, size: 32, offset: 1632)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1484, file: !1397, line: 220, baseType: !388, size: 32, offset: 1664)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1484, file: !1397, line: 221, baseType: !388, size: 32, offset: 1696)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1484, file: !1397, line: 222, baseType: !319, size: 16, offset: 1728)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1484, file: !1397, line: 222, baseType: !319, size: 16, offset: 1744)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1484, file: !1397, line: 224, baseType: !319, size: 16, offset: 1760)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1484, file: !1397, line: 224, baseType: !319, size: 16, offset: 1776)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1484, file: !1397, line: 227, baseType: !319, size: 16, offset: 1792)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1484, file: !1397, line: 227, baseType: !319, size: 16, offset: 1808)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1484, file: !1397, line: 229, baseType: !319, size: 16, offset: 1824)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1484, file: !1397, line: 229, baseType: !319, size: 16, offset: 1840)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1484, file: !1397, line: 230, baseType: !319, size: 16, offset: 1856)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1484, file: !1397, line: 230, baseType: !319, size: 16, offset: 1872)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1484, file: !1397, line: 232, baseType: !388, size: 32, offset: 1888)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1484, file: !1397, line: 232, baseType: !388, size: 32, offset: 1920)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1484, file: !1397, line: 232, baseType: !388, size: 32, offset: 1952)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1484, file: !1397, line: 232, baseType: !388, size: 32, offset: 1984)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1484, file: !1397, line: 233, baseType: !196, size: 32, offset: 2016)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1484, file: !1397, line: 234, baseType: !196, size: 32, offset: 2048)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1484, file: !1397, line: 235, baseType: !319, size: 16, offset: 2080)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1484, file: !1397, line: 235, baseType: !319, size: 16, offset: 2096)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1484, file: !1397, line: 236, baseType: !319, size: 16, offset: 2112)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1484, file: !1397, line: 239, baseType: !319, size: 16, offset: 2128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1484, file: !1397, line: 240, baseType: !196, size: 32, offset: 2144)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1484, file: !1397, line: 241, baseType: !196, size: 32, offset: 2176)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1484, file: !1397, line: 241, baseType: !196, size: 32, offset: 2208)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1484, file: !1397, line: 241, baseType: !196, size: 32, offset: 2240)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1484, file: !1397, line: 243, baseType: !388, size: 32, offset: 2272)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1484, file: !1397, line: 243, baseType: !388, size: 32, offset: 2304)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1484, file: !1397, line: 244, baseType: !388, size: 32, offset: 2336)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1484, file: !1397, line: 246, baseType: !1335, size: 320, offset: 2368)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1484, file: !1397, line: 248, baseType: !1395, size: 64, offset: 2688)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1484, file: !1397, line: 249, baseType: !673, size: 64, offset: 2752)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1484, file: !1397, line: 250, baseType: !1176, size: 64, offset: 2816)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1484, file: !1397, line: 251, baseType: !1542, size: 64, offset: 2880)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !1397, line: 113, size: 6208, elements: !1544)
!1544 = !{!1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1543, file: !1397, line: 114, baseType: !319, size: 16)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1543, file: !1397, line: 114, baseType: !319, size: 16, offset: 16)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1543, file: !1397, line: 115, baseType: !277, size: 8, offset: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1543, file: !1397, line: 115, baseType: !277, size: 8, offset: 40)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1543, file: !1397, line: 116, baseType: !277, size: 8, offset: 48)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1543, file: !1397, line: 117, baseType: !1391, size: 8, offset: 56)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1543, file: !1397, line: 119, baseType: !1552, size: 6144, offset: 64)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1553, size: 6144, elements: !1562)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !1397, line: 109, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !1397, line: 106, size: 192, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559, !1560, !1561}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1554, file: !1397, line: 107, baseType: !388, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1554, file: !1397, line: 107, baseType: !388, size: 32, offset: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1554, file: !1397, line: 107, baseType: !388, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1554, file: !1397, line: 107, baseType: !388, size: 32, offset: 96)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1554, file: !1397, line: 107, baseType: !388, size: 32, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1554, file: !1397, line: 108, baseType: !196, size: 32, offset: 160)
!1562 = !{!1563}
!1563 = !DISubrange(count: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1484, file: !1397, line: 252, baseType: !1565, size: 64, offset: 2944)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !1397, line: 122, size: 1600, elements: !1567)
!1567 = !{!1568, !1569, !1570, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1566, file: !1397, line: 123, baseType: !357, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1566, file: !1397, line: 124, baseType: !1176, size: 64, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1566, file: !1397, line: 125, baseType: !1571, size: 384, offset: 128)
!1571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1572, size: 384, elements: !1574)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1241, line: 136, flags: DIFlagFwdDecl)
!1574 = !{!1575}
!1575 = !DISubrange(count: 6)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1566, file: !1397, line: 126, baseType: !792, size: 512, offset: 512)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1566, file: !1397, line: 127, baseType: !640, size: 288, offset: 1024)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1566, file: !1397, line: 128, baseType: !319, size: 16, offset: 1312)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1566, file: !1397, line: 128, baseType: !319, size: 16, offset: 1328)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1566, file: !1397, line: 129, baseType: !388, size: 32, offset: 1344)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1566, file: !1397, line: 129, baseType: !388, size: 32, offset: 1376)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1566, file: !1397, line: 130, baseType: !388, size: 32, offset: 1408)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1566, file: !1397, line: 131, baseType: !7, size: 32, offset: 1440)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1566, file: !1397, line: 132, baseType: !319, size: 16, offset: 1472)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1566, file: !1397, line: 132, baseType: !319, size: 16, offset: 1488)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1566, file: !1397, line: 133, baseType: !196, size: 32, offset: 1504)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1566, file: !1397, line: 133, baseType: !196, size: 32, offset: 1536)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1566, file: !1397, line: 134, baseType: !319, size: 16, offset: 1568)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1566, file: !1397, line: 134, baseType: !319, size: 16, offset: 1584)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1484, file: !1397, line: 253, baseType: !1214, size: 64, offset: 3008)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1484, file: !1397, line: 254, baseType: !1592, size: 64, offset: 3072)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !1397, line: 137, size: 832, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1593, file: !1397, line: 138, baseType: !319, size: 16)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1593, file: !1397, line: 140, baseType: !319, size: 16, offset: 16)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1593, file: !1397, line: 141, baseType: !388, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1593, file: !1397, line: 142, baseType: !388, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1593, file: !1397, line: 143, baseType: !319, size: 16, offset: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1593, file: !1397, line: 144, baseType: !319, size: 16, offset: 112)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1593, file: !1397, line: 145, baseType: !196, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1593, file: !1397, line: 147, baseType: !196, size: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1593, file: !1397, line: 149, baseType: !357, size: 64, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1593, file: !1397, line: 150, baseType: !196, size: 32, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1593, file: !1397, line: 151, baseType: !319, size: 16, offset: 288)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1593, file: !1397, line: 152, baseType: !319, size: 16, offset: 304)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1593, file: !1397, line: 154, baseType: !291, size: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1593, file: !1397, line: 155, baseType: !418, size: 64, offset: 384)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1593, file: !1397, line: 157, baseType: !388, size: 32, offset: 448)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1593, file: !1397, line: 158, baseType: !319, size: 16, offset: 480)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1593, file: !1397, line: 159, baseType: !319, size: 16, offset: 496)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1593, file: !1397, line: 160, baseType: !319, size: 16, offset: 512)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1593, file: !1397, line: 161, baseType: !392, size: 48, offset: 528)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1593, file: !1397, line: 162, baseType: !388, size: 32, offset: 576)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1593, file: !1397, line: 164, baseType: !388, size: 32, offset: 608)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1593, file: !1397, line: 164, baseType: !388, size: 32, offset: 640)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1593, file: !1397, line: 164, baseType: !388, size: 32, offset: 672)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1593, file: !1397, line: 165, baseType: !1542, size: 64, offset: 704)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1593, file: !1397, line: 167, baseType: !1428, size: 64, offset: 768)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1484, file: !1397, line: 255, baseType: !1621, size: 64, offset: 3136)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !1397, line: 170, size: 8704, elements: !1623)
!1623 = !{!1624, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1622, file: !1397, line: 171, baseType: !1625, size: 96)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 96, elements: !389)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1622, file: !1397, line: 172, baseType: !196, size: 32, offset: 96)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1622, file: !1397, line: 173, baseType: !319, size: 16, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1622, file: !1397, line: 174, baseType: !319, size: 16, offset: 144)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1622, file: !1397, line: 175, baseType: !319, size: 16, offset: 160)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1622, file: !1397, line: 176, baseType: !319, size: 16, offset: 176)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1622, file: !1397, line: 177, baseType: !319, size: 16, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1622, file: !1397, line: 178, baseType: !319, size: 16, offset: 208)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1622, file: !1397, line: 179, baseType: !196, size: 32, offset: 224)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1622, file: !1397, line: 181, baseType: !357, size: 64, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1622, file: !1397, line: 182, baseType: !388, size: 32, offset: 320)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1622, file: !1397, line: 183, baseType: !196, size: 32, offset: 352)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1622, file: !1397, line: 184, baseType: !306, size: 8192, offset: 384)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1622, file: !1397, line: 187, baseType: !418, size: 64, offset: 8576)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1622, file: !1397, line: 188, baseType: !196, size: 32, offset: 8640)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1622, file: !1397, line: 189, baseType: !196, size: 32, offset: 8672)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1484, file: !1397, line: 256, baseType: !1642, size: 64, offset: 3200)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !1397, line: 193, size: 640, elements: !1644)
!1644 = !{!1645, !1646, !1647, !1648}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1643, file: !1397, line: 194, baseType: !357, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1643, file: !1397, line: 195, baseType: !276, size: 512, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1643, file: !1397, line: 197, baseType: !196, size: 32, offset: 576)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1643, file: !1397, line: 198, baseType: !196, size: 32, offset: 608)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1484, file: !1397, line: 258, baseType: !277, size: 8, offset: 3264)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1484, file: !1397, line: 259, baseType: !1247, size: 56, offset: 3272)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1475, file: !1397, line: 62, baseType: !276, size: 512, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !1475, file: !1397, line: 64, baseType: !277, size: 8, offset: 704)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !1475, file: !1397, line: 64, baseType: !277, size: 8, offset: 712)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !1475, file: !1397, line: 64, baseType: !277, size: 8, offset: 720)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1475, file: !1397, line: 64, baseType: !277, size: 8, offset: 728)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1475, file: !1397, line: 65, baseType: !387, size: 96, offset: 736)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1475, file: !1397, line: 65, baseType: !387, size: 96, offset: 832)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1475, file: !1397, line: 65, baseType: !388, size: 32, offset: 928)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1475, file: !1397, line: 67, baseType: !319, size: 16, offset: 960)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1475, file: !1397, line: 67, baseType: !319, size: 16, offset: 976)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !1475, file: !1397, line: 67, baseType: !319, size: 16, offset: 992)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !1475, file: !1397, line: 67, baseType: !319, size: 16, offset: 1008)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !1475, file: !1397, line: 68, baseType: !319, size: 16, offset: 1024)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !1475, file: !1397, line: 68, baseType: !319, size: 16, offset: 1040)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !1475, file: !1397, line: 69, baseType: !277, size: 8, offset: 1056)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1475, file: !1397, line: 69, baseType: !1247, size: 56, offset: 1064)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1475, file: !1397, line: 70, baseType: !388, size: 32, offset: 1120)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1475, file: !1397, line: 70, baseType: !388, size: 32, offset: 1152)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1475, file: !1397, line: 70, baseType: !388, size: 32, offset: 1184)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1475, file: !1397, line: 70, baseType: !388, size: 32, offset: 1216)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !1475, file: !1397, line: 71, baseType: !388, size: 32, offset: 1248)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1475, file: !1397, line: 71, baseType: !388, size: 32, offset: 1280)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !1475, file: !1397, line: 74, baseType: !388, size: 32, offset: 1312)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !1475, file: !1397, line: 74, baseType: !388, size: 32, offset: 1344)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !1475, file: !1397, line: 77, baseType: !388, size: 32, offset: 1376)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !1475, file: !1397, line: 77, baseType: !388, size: 32, offset: 1408)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !1475, file: !1397, line: 77, baseType: !388, size: 32, offset: 1440)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !1475, file: !1397, line: 78, baseType: !388, size: 32, offset: 1472)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !1475, file: !1397, line: 78, baseType: !388, size: 32, offset: 1504)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1475, file: !1397, line: 78, baseType: !388, size: 32, offset: 1536)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !1475, file: !1397, line: 79, baseType: !388, size: 32, offset: 1568)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !1475, file: !1397, line: 79, baseType: !388, size: 32, offset: 1600)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !1475, file: !1397, line: 79, baseType: !388, size: 32, offset: 1632)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !1475, file: !1397, line: 79, baseType: !388, size: 32, offset: 1664)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !1475, file: !1397, line: 80, baseType: !388, size: 32, offset: 1696)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !1475, file: !1397, line: 80, baseType: !388, size: 32, offset: 1728)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !1475, file: !1397, line: 80, baseType: !388, size: 32, offset: 1760)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !1475, file: !1397, line: 81, baseType: !388, size: 32, offset: 1792)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !1475, file: !1397, line: 81, baseType: !388, size: 32, offset: 1824)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !1475, file: !1397, line: 81, baseType: !388, size: 32, offset: 1856)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !1475, file: !1397, line: 82, baseType: !388, size: 32, offset: 1888)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !1475, file: !1397, line: 82, baseType: !388, size: 32, offset: 1920)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !1475, file: !1397, line: 82, baseType: !388, size: 32, offset: 1952)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !1475, file: !1397, line: 85, baseType: !388, size: 32, offset: 1984)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !1475, file: !1397, line: 85, baseType: !388, size: 32, offset: 2016)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1475, file: !1397, line: 85, baseType: !388, size: 32, offset: 2048)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1475, file: !1397, line: 85, baseType: !388, size: 32, offset: 2080)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !1475, file: !1397, line: 86, baseType: !388, size: 32, offset: 2112)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !1475, file: !1397, line: 86, baseType: !388, size: 32, offset: 2144)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !1475, file: !1397, line: 86, baseType: !388, size: 32, offset: 2176)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !1475, file: !1397, line: 86, baseType: !388, size: 32, offset: 2208)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !1475, file: !1397, line: 87, baseType: !388, size: 32, offset: 2240)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !1475, file: !1397, line: 87, baseType: !388, size: 32, offset: 2272)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !1475, file: !1397, line: 87, baseType: !388, size: 32, offset: 2304)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !1475, file: !1397, line: 87, baseType: !388, size: 32, offset: 2336)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !1475, file: !1397, line: 90, baseType: !388, size: 32, offset: 2368)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !1475, file: !1397, line: 93, baseType: !388, size: 32, offset: 2400)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !1475, file: !1397, line: 93, baseType: !388, size: 32, offset: 2432)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !1475, file: !1397, line: 93, baseType: !388, size: 32, offset: 2464)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !1416, file: !1417, line: 60, baseType: !1475, size: 2496, offset: 3712)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !1416, file: !1417, line: 62, baseType: !1415, size: 64, offset: 6208)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !1416, file: !1417, line: 64, baseType: !1572, size: 64, offset: 6272)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1416, file: !1417, line: 65, baseType: !1714, size: 64, offset: 6336)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !287, line: 167, baseType: !1215)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1416, file: !1417, line: 66, baseType: !1542, size: 64, offset: 6400)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !1416, file: !1417, line: 67, baseType: !1718, size: 64, offset: 6464)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !1417, line: 166, size: 1088, elements: !1720)
!1720 = !{!1721, !1722, !1750, !1751}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1719, file: !1417, line: 168, baseType: !286, size: 960)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1719, file: !1417, line: 169, baseType: !1723, size: 64, offset: 960)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !1417, line: 164, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !1417, line: 160, size: 608, elements: !1726)
!1726 = !{!1727, !1749}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !1725, file: !1417, line: 162, baseType: !1728, size: 576)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !1729, line: 133, baseType: !1730)
!1729 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !1729, line: 117, size: 576, elements: !1731)
!1731 = !{!1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1730, file: !1729, line: 118, baseType: !640, size: 288)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1730, file: !1729, line: 119, baseType: !388, size: 32, offset: 288)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1730, file: !1729, line: 119, baseType: !388, size: 32, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1730, file: !1729, line: 119, baseType: !388, size: 32, offset: 352)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1730, file: !1729, line: 121, baseType: !277, size: 8, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1730, file: !1729, line: 123, baseType: !277, size: 8, offset: 392)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1730, file: !1729, line: 123, baseType: !277, size: 8, offset: 400)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1730, file: !1729, line: 124, baseType: !277, size: 8, offset: 408)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1730, file: !1729, line: 124, baseType: !277, size: 8, offset: 416)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1730, file: !1729, line: 124, baseType: !277, size: 8, offset: 424)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1730, file: !1729, line: 126, baseType: !277, size: 8, offset: 432)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1730, file: !1729, line: 128, baseType: !277, size: 8, offset: 440)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1730, file: !1729, line: 129, baseType: !388, size: 32, offset: 448)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1730, file: !1729, line: 130, baseType: !388, size: 32, offset: 480)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1730, file: !1729, line: 130, baseType: !388, size: 32, offset: 512)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1730, file: !1729, line: 132, baseType: !1748, size: 32, offset: 544)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 32, elements: !784)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !1725, file: !1417, line: 163, baseType: !388, size: 32, offset: 576)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !1719, file: !1417, line: 170, baseType: !196, size: 32, offset: 1024)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !1719, file: !1417, line: 171, baseType: !196, size: 32, offset: 1056)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !1416, file: !1417, line: 69, baseType: !306, size: 8192, offset: 6528)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !1416, file: !1417, line: 71, baseType: !388, size: 32, offset: 14720)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1416, file: !1417, line: 73, baseType: !319, size: 16, offset: 14752)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !1416, file: !1417, line: 74, baseType: !319, size: 16, offset: 14768)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1416, file: !1417, line: 75, baseType: !388, size: 32, offset: 14784)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1416, file: !1417, line: 76, baseType: !196, size: 32, offset: 14816)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1416, file: !1417, line: 77, baseType: !196, size: 32, offset: 14848)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !1416, file: !1417, line: 78, baseType: !196, size: 32, offset: 14880)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !1416, file: !1417, line: 79, baseType: !388, size: 32, offset: 14912)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !1416, file: !1417, line: 80, baseType: !196, size: 32, offset: 14944)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !1416, file: !1417, line: 81, baseType: !196, size: 32, offset: 14976)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1416, file: !1417, line: 82, baseType: !196, size: 32, offset: 15008)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !1416, file: !1417, line: 83, baseType: !196, size: 32, offset: 15040)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !1416, file: !1417, line: 84, baseType: !388, size: 32, offset: 15072)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1416, file: !1417, line: 85, baseType: !388, size: 32, offset: 15104)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1416, file: !1417, line: 87, baseType: !387, size: 96, offset: 15136)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1416, file: !1417, line: 88, baseType: !388, size: 32, offset: 15232)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1416, file: !1417, line: 90, baseType: !387, size: 96, offset: 15264)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !1416, file: !1417, line: 92, baseType: !196, size: 32, offset: 15360)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !1416, file: !1417, line: 94, baseType: !388, size: 32, offset: 15392)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1416, file: !1417, line: 96, baseType: !388, size: 32, offset: 15424)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !1416, file: !1417, line: 97, baseType: !196, size: 32, offset: 15456)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !1416, file: !1417, line: 98, baseType: !196, size: 32, offset: 15488)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !1416, file: !1417, line: 99, baseType: !196, size: 32, offset: 15520)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !1416, file: !1417, line: 101, baseType: !277, size: 8, offset: 15552)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !1416, file: !1417, line: 102, baseType: !277, size: 8, offset: 15560)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !1416, file: !1417, line: 103, baseType: !277, size: 8, offset: 15568)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !1416, file: !1417, line: 104, baseType: !277, size: 8, offset: 15576)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !1416, file: !1417, line: 106, baseType: !388, size: 32, offset: 15584)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !1416, file: !1417, line: 108, baseType: !388, size: 32, offset: 15616)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !1416, file: !1417, line: 110, baseType: !388, size: 32, offset: 15648)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1416, file: !1417, line: 111, baseType: !388, size: 32, offset: 15680)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !1416, file: !1417, line: 113, baseType: !388, size: 32, offset: 15712)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !1416, file: !1417, line: 116, baseType: !196, size: 32, offset: 15744)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !1416, file: !1417, line: 117, baseType: !196, size: 32, offset: 15776)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !1416, file: !1417, line: 118, baseType: !196, size: 32, offset: 15808)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1416, file: !1417, line: 120, baseType: !388, size: 32, offset: 15840)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !1416, file: !1417, line: 123, baseType: !388, size: 32, offset: 15872)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !1416, file: !1417, line: 124, baseType: !196, size: 32, offset: 15904)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !1416, file: !1417, line: 125, baseType: !196, size: 32, offset: 15936)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !1416, file: !1417, line: 128, baseType: !388, size: 32, offset: 15968)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !1416, file: !1417, line: 130, baseType: !387, size: 96, offset: 16000)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !1416, file: !1417, line: 131, baseType: !387, size: 96, offset: 16096)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !1416, file: !1417, line: 133, baseType: !1331, size: 64, offset: 16192)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !1416, file: !1417, line: 134, baseType: !1331, size: 64, offset: 16256)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !1416, file: !1417, line: 136, baseType: !1331, size: 64, offset: 16320)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !1416, file: !1417, line: 137, baseType: !1331, size: 64, offset: 16384)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1412, file: !283, line: 815, baseType: !1800, size: 64, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1417, line: 148, size: 1280, elements: !1802)
!1802 = !{!1803, !1804, !1805, !1806, !1807}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1801, file: !1417, line: 150, baseType: !286, size: 960)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1801, file: !1417, line: 153, baseType: !342, size: 128, offset: 960)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !1801, file: !1417, line: 154, baseType: !342, size: 128, offset: 1088)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !1801, file: !1417, line: 156, baseType: !196, size: 32, offset: 1216)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1801, file: !1417, line: 157, baseType: !196, size: 32, offset: 1248)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1412, file: !283, line: 818, baseType: !291, size: 64, offset: 128)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1412, file: !283, line: 819, baseType: !1810, size: 32, offset: 192)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 32, elements: !784)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1412, file: !283, line: 822, baseType: !196, size: 32, offset: 224)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1412, file: !283, line: 826, baseType: !196, size: 32, offset: 256)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1412, file: !283, line: 829, baseType: !196, size: 32, offset: 288)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1408, file: !283, line: 928, baseType: !319, size: 16, offset: 320)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1408, file: !283, line: 928, baseType: !319, size: 16, offset: 336)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1408, file: !283, line: 929, baseType: !196, size: 32, offset: 352)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1408, file: !283, line: 930, baseType: !645, size: 64, offset: 384)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1408, file: !283, line: 931, baseType: !1819, size: 64, offset: 448)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !257, line: 59, size: 128, elements: !1821)
!1821 = !{!1822, !1828, !1829}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1820, file: !257, line: 60, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !257, line: 54, size: 64, elements: !1825)
!1825 = !{!1826, !1827}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1824, file: !257, line: 55, baseType: !196, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1824, file: !257, line: 56, baseType: !388, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1820, file: !257, line: 61, baseType: !196, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1820, file: !257, line: 62, baseType: !196, size: 32, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1408, file: !283, line: 933, baseType: !291, size: 64, offset: 512)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1403, file: !283, line: 1069, baseType: !1406, size: 64, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1403, file: !283, line: 1070, baseType: !1833, size: 64, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !283, line: 916, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !283, line: 891, size: 704, elements: !1836)
!1836 = !{!1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1835, file: !283, line: 892, baseType: !1411, size: 320)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1835, file: !283, line: 896, baseType: !196, size: 32, offset: 320)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1835, file: !283, line: 900, baseType: !1625, size: 96, offset: 352)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1835, file: !283, line: 903, baseType: !388, size: 32, offset: 448)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1835, file: !283, line: 906, baseType: !196, size: 32, offset: 480)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1835, file: !283, line: 909, baseType: !388, size: 32, offset: 512)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1835, file: !283, line: 912, baseType: !388, size: 32, offset: 544)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1835, file: !283, line: 914, baseType: !357, size: 64, offset: 576)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1835, file: !283, line: 915, baseType: !291, size: 64, offset: 640)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1403, file: !283, line: 1071, baseType: !1847, size: 64, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !283, line: 920, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !283, line: 918, size: 320, elements: !1850)
!1850 = !{!1851}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1849, file: !283, line: 919, baseType: !1411, size: 320)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1403, file: !283, line: 1075, baseType: !388, size: 32, offset: 256)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1403, file: !283, line: 1077, baseType: !388, size: 32, offset: 288)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1403, file: !283, line: 1078, baseType: !388, size: 32, offset: 320)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1403, file: !283, line: 1079, baseType: !319, size: 16, offset: 352)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1403, file: !283, line: 1082, baseType: !319, size: 16, offset: 368)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1403, file: !283, line: 1085, baseType: !277, size: 8, offset: 384)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1403, file: !283, line: 1086, baseType: !277, size: 8, offset: 392)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1403, file: !283, line: 1087, baseType: !277, size: 8, offset: 400)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1403, file: !283, line: 1088, baseType: !277, size: 8, offset: 408)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1403, file: !283, line: 1090, baseType: !388, size: 32, offset: 416)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1403, file: !283, line: 1093, baseType: !319, size: 16, offset: 448)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1403, file: !283, line: 1096, baseType: !277, size: 8, offset: 464)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1403, file: !283, line: 1098, baseType: !1865, size: 40, offset: 472)
!1865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 40, elements: !1866)
!1866 = !{!1867}
!1867 = !DISubrange(count: 5)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1403, file: !283, line: 1101, baseType: !1869, size: 832, offset: 512)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !283, line: 836, size: 832, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1869, file: !283, line: 837, baseType: !1411, size: 320)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1869, file: !283, line: 839, baseType: !319, size: 16, offset: 320)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1869, file: !283, line: 839, baseType: !319, size: 16, offset: 336)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1869, file: !283, line: 842, baseType: !319, size: 16, offset: 352)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1869, file: !283, line: 842, baseType: !319, size: 16, offset: 368)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1869, file: !283, line: 843, baseType: !1221, size: 32, offset: 384)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1869, file: !283, line: 845, baseType: !196, size: 32, offset: 416)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1869, file: !283, line: 847, baseType: !291, size: 64, offset: 448)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1869, file: !283, line: 848, baseType: !1176, size: 64, offset: 512)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1869, file: !283, line: 849, baseType: !1176, size: 64, offset: 576)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1869, file: !283, line: 850, baseType: !1176, size: 64, offset: 640)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1869, file: !283, line: 851, baseType: !387, size: 96, offset: 704)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1869, file: !283, line: 852, baseType: !388, size: 32, offset: 800)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1403, file: !283, line: 1104, baseType: !1885, size: 1344, offset: 1344)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !283, line: 867, size: 1344, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1890, !1891, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1885, file: !283, line: 868, baseType: !319, size: 16)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1885, file: !283, line: 869, baseType: !319, size: 16, offset: 16)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1885, file: !283, line: 870, baseType: !319, size: 16, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1885, file: !283, line: 871, baseType: !319, size: 16, offset: 48)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1885, file: !283, line: 873, baseType: !1892, size: 896, offset: 64)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1893, size: 896, elements: !1248)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !283, line: 864, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !283, line: 859, size: 128, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1894, file: !283, line: 860, baseType: !319, size: 16)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1894, file: !283, line: 861, baseType: !319, size: 16, offset: 16)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1894, file: !283, line: 861, baseType: !319, size: 16, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1894, file: !283, line: 861, baseType: !319, size: 16, offset: 48)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1894, file: !283, line: 862, baseType: !196, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1894, file: !283, line: 863, baseType: !388, size: 32, offset: 96)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1885, file: !283, line: 874, baseType: !291, size: 64, offset: 960)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1885, file: !283, line: 876, baseType: !388, size: 32, offset: 1024)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1885, file: !283, line: 876, baseType: !388, size: 32, offset: 1056)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1885, file: !283, line: 878, baseType: !196, size: 32, offset: 1088)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1885, file: !283, line: 879, baseType: !196, size: 32, offset: 1120)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1885, file: !283, line: 881, baseType: !196, size: 32, offset: 1152)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1885, file: !283, line: 881, baseType: !196, size: 32, offset: 1184)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1885, file: !283, line: 883, baseType: !281, size: 64, offset: 1216)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1885, file: !283, line: 884, baseType: !357, size: 64, offset: 1280)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1403, file: !283, line: 1107, baseType: !388, size: 32, offset: 2688)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1403, file: !283, line: 1110, baseType: !388, size: 32, offset: 2720)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1403, file: !283, line: 1113, baseType: !319, size: 16, offset: 2752)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1403, file: !283, line: 1113, baseType: !319, size: 16, offset: 2768)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1403, file: !283, line: 1116, baseType: !277, size: 8, offset: 2784)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1403, file: !283, line: 1117, baseType: !1391, size: 8, offset: 2792)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1403, file: !283, line: 1120, baseType: !319, size: 16, offset: 2800)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1403, file: !283, line: 1121, baseType: !388, size: 32, offset: 2816)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1403, file: !283, line: 1122, baseType: !388, size: 32, offset: 2848)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1403, file: !283, line: 1123, baseType: !388, size: 32, offset: 2880)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1403, file: !283, line: 1124, baseType: !388, size: 32, offset: 2912)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1403, file: !283, line: 1125, baseType: !388, size: 32, offset: 2944)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1403, file: !283, line: 1126, baseType: !388, size: 32, offset: 2976)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1403, file: !283, line: 1127, baseType: !388, size: 32, offset: 3008)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1403, file: !283, line: 1128, baseType: !388, size: 32, offset: 3040)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1403, file: !283, line: 1129, baseType: !388, size: 32, offset: 3072)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1403, file: !283, line: 1130, baseType: !388, size: 32, offset: 3104)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1403, file: !283, line: 1131, baseType: !319, size: 16, offset: 3136)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1403, file: !283, line: 1132, baseType: !277, size: 8, offset: 3152)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1403, file: !283, line: 1133, baseType: !277, size: 8, offset: 3160)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1403, file: !283, line: 1134, baseType: !1932, size: 24, offset: 3168)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 24, elements: !389)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1403, file: !283, line: 1135, baseType: !277, size: 8, offset: 3192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1403, file: !283, line: 1138, baseType: !357, size: 64, offset: 3200)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1403, file: !283, line: 1139, baseType: !277, size: 8, offset: 3264)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1403, file: !283, line: 1140, baseType: !277, size: 8, offset: 3272)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1403, file: !283, line: 1141, baseType: !277, size: 8, offset: 3280)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1403, file: !283, line: 1142, baseType: !277, size: 8, offset: 3288)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1403, file: !283, line: 1143, baseType: !277, size: 8, offset: 3296)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1403, file: !283, line: 1144, baseType: !1941, size: 64, offset: 3304)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 64, elements: !1196)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1403, file: !283, line: 1145, baseType: !1941, size: 64, offset: 3368)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1403, file: !283, line: 1148, baseType: !277, size: 8, offset: 3432)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1403, file: !283, line: 1149, baseType: !277, size: 8, offset: 3440)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1403, file: !283, line: 1152, baseType: !277, size: 8, offset: 3448)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1403, file: !283, line: 1152, baseType: !277, size: 8, offset: 3456)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1403, file: !283, line: 1153, baseType: !277, size: 8, offset: 3464)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1403, file: !283, line: 1154, baseType: !319, size: 16, offset: 3472)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1403, file: !283, line: 1154, baseType: !319, size: 16, offset: 3488)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1403, file: !283, line: 1155, baseType: !319, size: 16, offset: 3504)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1403, file: !283, line: 1155, baseType: !319, size: 16, offset: 3520)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1403, file: !283, line: 1156, baseType: !277, size: 8, offset: 3536)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1403, file: !283, line: 1157, baseType: !277, size: 8, offset: 3544)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1403, file: !283, line: 1159, baseType: !277, size: 8, offset: 3552)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1403, file: !283, line: 1160, baseType: !277, size: 8, offset: 3560)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1403, file: !283, line: 1161, baseType: !277, size: 8, offset: 3568)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1403, file: !283, line: 1162, baseType: !277, size: 8, offset: 3576)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1403, file: !283, line: 1165, baseType: !196, size: 32, offset: 3584)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1403, file: !283, line: 1166, baseType: !196, size: 32, offset: 3616)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1403, file: !283, line: 1167, baseType: !196, size: 32, offset: 3648)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1403, file: !283, line: 1168, baseType: !196, size: 32, offset: 3680)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1403, file: !283, line: 1171, baseType: !319, size: 16, offset: 3712)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1403, file: !283, line: 1171, baseType: !319, size: 16, offset: 3728)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1403, file: !283, line: 1172, baseType: !196, size: 32, offset: 3744)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1403, file: !283, line: 1173, baseType: !388, size: 32, offset: 3776)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1403, file: !283, line: 1174, baseType: !388, size: 32, offset: 3808)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1403, file: !283, line: 1177, baseType: !1968, size: 1024, offset: 3840)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !283, line: 963, size: 1024, elements: !1969)
!1969 = !{!1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1993, !1994}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1968, file: !283, line: 965, baseType: !196, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1968, file: !283, line: 968, baseType: !388, size: 32, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1968, file: !283, line: 971, baseType: !388, size: 32, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1968, file: !283, line: 974, baseType: !388, size: 32, offset: 96)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1968, file: !283, line: 977, baseType: !387, size: 96, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1968, file: !283, line: 979, baseType: !387, size: 96, offset: 224)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1968, file: !283, line: 982, baseType: !196, size: 32, offset: 320)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1968, file: !283, line: 987, baseType: !1331, size: 64, offset: 352)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1968, file: !283, line: 989, baseType: !388, size: 32, offset: 416)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1968, file: !283, line: 994, baseType: !196, size: 32, offset: 448)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1968, file: !283, line: 995, baseType: !196, size: 32, offset: 480)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1968, file: !283, line: 997, baseType: !277, size: 8, offset: 512)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1968, file: !283, line: 998, baseType: !1247, size: 56, offset: 520)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1968, file: !283, line: 1000, baseType: !388, size: 32, offset: 576)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1968, file: !283, line: 1003, baseType: !1331, size: 64, offset: 608)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1968, file: !283, line: 1006, baseType: !196, size: 32, offset: 672)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1968, file: !283, line: 1009, baseType: !388, size: 32, offset: 704)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1968, file: !283, line: 1012, baseType: !1331, size: 64, offset: 736)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1968, file: !283, line: 1015, baseType: !1331, size: 64, offset: 800)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1968, file: !283, line: 1018, baseType: !196, size: 32, offset: 864)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1968, file: !283, line: 1019, baseType: !1991, size: 64, offset: 896)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !283, line: 63, flags: DIFlagFwdDecl)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1968, file: !283, line: 1023, baseType: !388, size: 32, offset: 960)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1968, file: !283, line: 1024, baseType: !196, size: 32, offset: 992)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1403, file: !283, line: 1179, baseType: !1996, size: 320, offset: 4864)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !283, line: 1043, size: 320, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1996, file: !283, line: 1044, baseType: !277, size: 8)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1996, file: !283, line: 1045, baseType: !379, size: 16, offset: 8)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1996, file: !283, line: 1048, baseType: !277, size: 8, offset: 24)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1996, file: !283, line: 1049, baseType: !388, size: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1996, file: !283, line: 1049, baseType: !388, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1996, file: !283, line: 1052, baseType: !388, size: 32, offset: 96)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1996, file: !283, line: 1052, baseType: !388, size: 32, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1996, file: !283, line: 1053, baseType: !277, size: 8, offset: 160)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1996, file: !283, line: 1054, baseType: !1932, size: 24, offset: 168)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1996, file: !283, line: 1057, baseType: !388, size: 32, offset: 192)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1996, file: !283, line: 1057, baseType: !388, size: 32, offset: 224)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1996, file: !283, line: 1060, baseType: !388, size: 32, offset: 256)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1996, file: !283, line: 1060, baseType: !388, size: 32, offset: 288)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !282, file: !283, line: 1247, baseType: !2012, size: 64, offset: 2176)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !283, line: 60, flags: DIFlagFwdDecl)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !282, file: !283, line: 1251, baseType: !2015, size: 31872, offset: 2240)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !283, line: 403, size: 31872, elements: !2016)
!2016 = !{!2017, !2052, !2072, !2081, !2101, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2242, !2243, !2244, !2246, !2262, !2263}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2015, file: !283, line: 404, baseType: !2018, size: 1984)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !283, line: 259, size: 1984, elements: !2019)
!2019 = !{!2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2035, !2047}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2018, file: !283, line: 260, baseType: !277, size: 8)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2018, file: !283, line: 263, baseType: !277, size: 8, offset: 8)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2018, file: !283, line: 266, baseType: !277, size: 8, offset: 16)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2018, file: !283, line: 267, baseType: !277, size: 8, offset: 24)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2018, file: !283, line: 269, baseType: !277, size: 8, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2018, file: !283, line: 270, baseType: !277, size: 8, offset: 40)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2018, file: !283, line: 276, baseType: !277, size: 8, offset: 48)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2018, file: !283, line: 279, baseType: !277, size: 8, offset: 56)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2018, file: !283, line: 280, baseType: !319, size: 16, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2018, file: !283, line: 280, baseType: !319, size: 16, offset: 80)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2018, file: !283, line: 281, baseType: !388, size: 32, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2018, file: !283, line: 284, baseType: !277, size: 8, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2018, file: !283, line: 285, baseType: !277, size: 8, offset: 136)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2018, file: !283, line: 287, baseType: !2034, size: 48, offset: 144)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 48, elements: !1574)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2018, file: !283, line: 290, baseType: !2036, size: 1280, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1241, line: 174, baseType: !2037)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1241, line: 166, size: 1280, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2037, file: !1241, line: 167, baseType: !196, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2037, file: !1241, line: 167, baseType: !196, size: 32, offset: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2037, file: !1241, line: 168, baseType: !276, size: 512, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2037, file: !1241, line: 169, baseType: !276, size: 512, offset: 576)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2037, file: !1241, line: 170, baseType: !388, size: 32, offset: 1088)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2037, file: !1241, line: 171, baseType: !388, size: 32, offset: 1120)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2037, file: !1241, line: 172, baseType: !1428, size: 64, offset: 1152)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2037, file: !1241, line: 173, baseType: !291, size: 64, offset: 1216)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2018, file: !283, line: 291, baseType: !2048, size: 512, offset: 1472)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1241, line: 178, baseType: !2049)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1241, line: 176, size: 512, elements: !2050)
!2050 = !{!2051}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2049, file: !1241, line: 177, baseType: !276, size: 512)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2015, file: !283, line: 406, baseType: !2053, size: 64, offset: 1984)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !283, line: 80, size: 1472, elements: !2055)
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2054, file: !283, line: 81, baseType: !291, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2054, file: !283, line: 82, baseType: !291, size: 64, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2054, file: !283, line: 83, baseType: !7, size: 32, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2054, file: !283, line: 84, baseType: !7, size: 32, offset: 160)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2054, file: !283, line: 86, baseType: !7, size: 32, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2054, file: !283, line: 87, baseType: !7, size: 32, offset: 224)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2054, file: !283, line: 88, baseType: !7, size: 32, offset: 256)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2054, file: !283, line: 89, baseType: !7, size: 32, offset: 288)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2054, file: !283, line: 90, baseType: !7, size: 32, offset: 320)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2054, file: !283, line: 91, baseType: !7, size: 32, offset: 352)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2054, file: !283, line: 92, baseType: !7, size: 32, offset: 384)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2054, file: !283, line: 93, baseType: !7, size: 32, offset: 416)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2054, file: !283, line: 95, baseType: !2069, size: 1024, offset: 448)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 1024, elements: !2070)
!2070 = !{!2071}
!2071 = !DISubrange(count: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2015, file: !283, line: 407, baseType: !2073, size: 64, offset: 2048)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !283, line: 98, size: 1216, elements: !2075)
!2075 = !{!2076, !2077, !2078, !2079, !2080}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2074, file: !283, line: 100, baseType: !291, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2074, file: !283, line: 101, baseType: !291, size: 64, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2074, file: !283, line: 103, baseType: !7, size: 32, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2074, file: !283, line: 104, baseType: !7, size: 32, offset: 160)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2074, file: !283, line: 106, baseType: !2069, size: 1024, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2015, file: !283, line: 408, baseType: !2082, size: 512, offset: 2112)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !283, line: 109, size: 512, elements: !2083)
!2083 = !{!2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2082, file: !283, line: 111, baseType: !196, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2082, file: !283, line: 112, baseType: !196, size: 32, offset: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2082, file: !283, line: 115, baseType: !196, size: 32, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2082, file: !283, line: 116, baseType: !196, size: 32, offset: 96)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2082, file: !283, line: 117, baseType: !196, size: 32, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2082, file: !283, line: 118, baseType: !196, size: 32, offset: 160)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2082, file: !283, line: 119, baseType: !196, size: 32, offset: 192)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2082, file: !283, line: 120, baseType: !196, size: 32, offset: 224)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2082, file: !283, line: 121, baseType: !196, size: 32, offset: 256)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2082, file: !283, line: 122, baseType: !196, size: 32, offset: 288)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2082, file: !283, line: 125, baseType: !196, size: 32, offset: 320)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2082, file: !283, line: 126, baseType: !196, size: 32, offset: 352)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2082, file: !283, line: 127, baseType: !319, size: 16, offset: 384)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2082, file: !283, line: 128, baseType: !319, size: 16, offset: 400)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2082, file: !283, line: 129, baseType: !196, size: 32, offset: 416)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2082, file: !283, line: 130, baseType: !196, size: 32, offset: 448)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2082, file: !283, line: 131, baseType: !196, size: 32, offset: 480)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2015, file: !283, line: 409, baseType: !2102, size: 576, offset: 2624)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !283, line: 134, size: 576, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2102, file: !283, line: 135, baseType: !196, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2102, file: !283, line: 136, baseType: !196, size: 32, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2102, file: !283, line: 137, baseType: !196, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2102, file: !283, line: 138, baseType: !196, size: 32, offset: 96)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2102, file: !283, line: 139, baseType: !196, size: 32, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2102, file: !283, line: 140, baseType: !196, size: 32, offset: 160)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2102, file: !283, line: 141, baseType: !196, size: 32, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2102, file: !283, line: 142, baseType: !196, size: 32, offset: 224)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2102, file: !283, line: 143, baseType: !388, size: 32, offset: 256)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2102, file: !283, line: 144, baseType: !196, size: 32, offset: 288)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2102, file: !283, line: 145, baseType: !196, size: 32, offset: 320)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2102, file: !283, line: 147, baseType: !196, size: 32, offset: 352)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2102, file: !283, line: 148, baseType: !196, size: 32, offset: 384)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2102, file: !283, line: 149, baseType: !196, size: 32, offset: 416)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2102, file: !283, line: 150, baseType: !196, size: 32, offset: 448)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2102, file: !283, line: 151, baseType: !196, size: 32, offset: 480)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2102, file: !283, line: 152, baseType: !324, size: 64, offset: 512)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2015, file: !283, line: 411, baseType: !196, size: 32, offset: 3200)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2015, file: !283, line: 411, baseType: !196, size: 32, offset: 3232)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2015, file: !283, line: 411, baseType: !196, size: 32, offset: 3264)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2015, file: !283, line: 412, baseType: !388, size: 32, offset: 3296)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2015, file: !283, line: 413, baseType: !196, size: 32, offset: 3328)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2015, file: !283, line: 413, baseType: !196, size: 32, offset: 3360)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2015, file: !283, line: 415, baseType: !196, size: 32, offset: 3392)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2015, file: !283, line: 415, baseType: !196, size: 32, offset: 3424)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2015, file: !283, line: 416, baseType: !319, size: 16, offset: 3456)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2015, file: !283, line: 416, baseType: !319, size: 16, offset: 3472)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2015, file: !283, line: 418, baseType: !388, size: 32, offset: 3488)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2015, file: !283, line: 418, baseType: !388, size: 32, offset: 3520)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2015, file: !283, line: 421, baseType: !388, size: 32, offset: 3552)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2015, file: !283, line: 421, baseType: !388, size: 32, offset: 3584)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2015, file: !283, line: 421, baseType: !388, size: 32, offset: 3616)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2015, file: !283, line: 425, baseType: !319, size: 16, offset: 3648)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2015, file: !283, line: 425, baseType: !319, size: 16, offset: 3664)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2015, file: !283, line: 425, baseType: !319, size: 16, offset: 3680)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2015, file: !283, line: 426, baseType: !319, size: 16, offset: 3696)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2015, file: !283, line: 428, baseType: !319, size: 16, offset: 3712)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2015, file: !283, line: 428, baseType: !319, size: 16, offset: 3728)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2015, file: !283, line: 431, baseType: !196, size: 32, offset: 3744)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2015, file: !283, line: 433, baseType: !319, size: 16, offset: 3776)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2015, file: !283, line: 435, baseType: !319, size: 16, offset: 3792)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2015, file: !283, line: 437, baseType: !319, size: 16, offset: 3808)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2015, file: !283, line: 439, baseType: !319, size: 16, offset: 3824)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2015, file: !283, line: 441, baseType: !319, size: 16, offset: 3840)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2015, file: !283, line: 443, baseType: !319, size: 16, offset: 3856)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2015, file: !283, line: 449, baseType: !196, size: 32, offset: 3872)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2015, file: !283, line: 453, baseType: !196, size: 32, offset: 3904)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2015, file: !283, line: 458, baseType: !319, size: 16, offset: 3936)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2015, file: !283, line: 462, baseType: !319, size: 16, offset: 3952)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2015, file: !283, line: 467, baseType: !196, size: 32, offset: 3968)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2015, file: !283, line: 467, baseType: !196, size: 32, offset: 4000)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2015, file: !283, line: 469, baseType: !319, size: 16, offset: 4032)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2015, file: !283, line: 469, baseType: !319, size: 16, offset: 4048)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2015, file: !283, line: 469, baseType: !319, size: 16, offset: 4064)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2015, file: !283, line: 469, baseType: !319, size: 16, offset: 4080)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2015, file: !283, line: 474, baseType: !319, size: 16, offset: 4096)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2015, file: !283, line: 475, baseType: !277, size: 8, offset: 4112)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2015, file: !283, line: 476, baseType: !277, size: 8, offset: 4120)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2015, file: !283, line: 481, baseType: !196, size: 32, offset: 4128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2015, file: !283, line: 486, baseType: !196, size: 32, offset: 4160)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2015, file: !283, line: 491, baseType: !196, size: 32, offset: 4192)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2015, file: !283, line: 496, baseType: !319, size: 16, offset: 4224)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2015, file: !283, line: 498, baseType: !319, size: 16, offset: 4240)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2015, file: !283, line: 501, baseType: !319, size: 16, offset: 4256)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2015, file: !283, line: 502, baseType: !319, size: 16, offset: 4272)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2015, file: !283, line: 508, baseType: !319, size: 16, offset: 4288)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2015, file: !283, line: 513, baseType: !319, size: 16, offset: 4304)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2015, file: !283, line: 515, baseType: !319, size: 16, offset: 4320)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2015, file: !283, line: 515, baseType: !319, size: 16, offset: 4336)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2015, file: !283, line: 519, baseType: !1436, size: 128, offset: 4352)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2015, file: !283, line: 519, baseType: !1436, size: 128, offset: 4480)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2015, file: !283, line: 520, baseType: !2176, size: 128, offset: 4608)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1437, line: 89, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1437, line: 86, size: 128, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2177, file: !1437, line: 87, baseType: !196, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2177, file: !1437, line: 87, baseType: !196, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2177, file: !1437, line: 88, baseType: !196, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2177, file: !1437, line: 88, baseType: !196, size: 32, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2015, file: !283, line: 523, baseType: !342, size: 128, offset: 4736)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2015, file: !283, line: 524, baseType: !319, size: 16, offset: 4864)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2015, file: !283, line: 527, baseType: !319, size: 16, offset: 4880)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2015, file: !283, line: 532, baseType: !388, size: 32, offset: 4896)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2015, file: !283, line: 532, baseType: !388, size: 32, offset: 4928)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2015, file: !283, line: 534, baseType: !388, size: 32, offset: 4960)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2015, file: !283, line: 538, baseType: !388, size: 32, offset: 4992)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2015, file: !283, line: 542, baseType: !196, size: 32, offset: 5024)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2015, file: !283, line: 545, baseType: !388, size: 32, offset: 5056)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2015, file: !283, line: 545, baseType: !388, size: 32, offset: 5088)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2015, file: !283, line: 545, baseType: !388, size: 32, offset: 5120)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2015, file: !283, line: 548, baseType: !388, size: 32, offset: 5152)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2015, file: !283, line: 551, baseType: !319, size: 16, offset: 5184)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2015, file: !283, line: 551, baseType: !319, size: 16, offset: 5200)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2015, file: !283, line: 551, baseType: !319, size: 16, offset: 5216)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2015, file: !283, line: 551, baseType: !319, size: 16, offset: 5232)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2015, file: !283, line: 552, baseType: !319, size: 16, offset: 5248)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2015, file: !283, line: 552, baseType: !319, size: 16, offset: 5264)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2015, file: !283, line: 553, baseType: !388, size: 32, offset: 5280)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2015, file: !283, line: 553, baseType: !388, size: 32, offset: 5312)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2015, file: !283, line: 554, baseType: !319, size: 16, offset: 5344)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2015, file: !283, line: 554, baseType: !319, size: 16, offset: 5360)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2015, file: !283, line: 555, baseType: !388, size: 32, offset: 5376)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2015, file: !283, line: 555, baseType: !388, size: 32, offset: 5408)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2015, file: !283, line: 558, baseType: !306, size: 8192, offset: 5440)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2015, file: !283, line: 561, baseType: !196, size: 32, offset: 13632)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2015, file: !283, line: 562, baseType: !319, size: 16, offset: 13664)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2015, file: !283, line: 562, baseType: !319, size: 16, offset: 13680)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2015, file: !283, line: 565, baseType: !2212, size: 6144, offset: 13696)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 6144, elements: !2213)
!2213 = !{!2214}
!2214 = !DISubrange(count: 768)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2015, file: !283, line: 568, baseType: !783, size: 128, offset: 19840)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2015, file: !283, line: 569, baseType: !783, size: 128, offset: 19968)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2015, file: !283, line: 572, baseType: !277, size: 8, offset: 20096)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2015, file: !283, line: 573, baseType: !277, size: 8, offset: 20104)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2015, file: !283, line: 574, baseType: !277, size: 8, offset: 20112)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2015, file: !283, line: 575, baseType: !1865, size: 40, offset: 20120)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2015, file: !283, line: 578, baseType: !196, size: 32, offset: 20160)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2015, file: !283, line: 579, baseType: !319, size: 16, offset: 20192)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2015, file: !283, line: 580, baseType: !319, size: 16, offset: 20208)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2015, file: !283, line: 581, baseType: !388, size: 32, offset: 20224)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2015, file: !283, line: 582, baseType: !388, size: 32, offset: 20256)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2015, file: !283, line: 585, baseType: !319, size: 16, offset: 20288)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2015, file: !283, line: 585, baseType: !319, size: 16, offset: 20304)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2015, file: !283, line: 586, baseType: !388, size: 32, offset: 20320)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2015, file: !283, line: 589, baseType: !319, size: 16, offset: 20352)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2015, file: !283, line: 589, baseType: !319, size: 16, offset: 20368)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2015, file: !283, line: 590, baseType: !196, size: 32, offset: 20384)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2015, file: !283, line: 593, baseType: !319, size: 16, offset: 20416)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2015, file: !283, line: 593, baseType: !319, size: 16, offset: 20432)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2015, file: !283, line: 594, baseType: !319, size: 16, offset: 20448)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2015, file: !283, line: 594, baseType: !319, size: 16, offset: 20464)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2015, file: !283, line: 595, baseType: !388, size: 32, offset: 20480)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2015, file: !283, line: 596, baseType: !388, size: 32, offset: 20512)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2015, file: !283, line: 597, baseType: !2239, size: 64, offset: 20544)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2241, line: 44, flags: DIFlagFwdDecl)
!2241 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2015, file: !283, line: 600, baseType: !196, size: 32, offset: 20608)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2015, file: !283, line: 601, baseType: !388, size: 32, offset: 20640)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2015, file: !283, line: 604, baseType: !2245, size: 256, offset: 20672)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 256, elements: !1562)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2015, file: !283, line: 607, baseType: !2247, size: 10880, offset: 20928)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !283, line: 364, size: 10880, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2247, file: !283, line: 365, baseType: !2018, size: 1984)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2247, file: !283, line: 367, baseType: !306, size: 8192, offset: 1984)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2247, file: !283, line: 369, baseType: !319, size: 16, offset: 10176)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2247, file: !283, line: 369, baseType: !319, size: 16, offset: 10192)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2247, file: !283, line: 370, baseType: !319, size: 16, offset: 10208)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2247, file: !283, line: 370, baseType: !319, size: 16, offset: 10224)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2247, file: !283, line: 372, baseType: !388, size: 32, offset: 10240)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2247, file: !283, line: 373, baseType: !388, size: 32, offset: 10272)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2247, file: !283, line: 375, baseType: !1932, size: 24, offset: 10304)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2247, file: !283, line: 376, baseType: !277, size: 8, offset: 10328)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2247, file: !283, line: 378, baseType: !277, size: 8, offset: 10336)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2247, file: !283, line: 379, baseType: !1932, size: 24, offset: 10344)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2247, file: !283, line: 381, baseType: !276, size: 512, offset: 10368)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2015, file: !283, line: 609, baseType: !196, size: 32, offset: 31808)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2015, file: !283, line: 610, baseType: !196, size: 32, offset: 31840)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !282, file: !283, line: 1252, baseType: !2265, size: 256, offset: 34112)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !283, line: 158, size: 256, elements: !2266)
!2266 = !{!2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2265, file: !283, line: 159, baseType: !196, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2265, file: !283, line: 160, baseType: !388, size: 32, offset: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2265, file: !283, line: 161, baseType: !388, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2265, file: !283, line: 162, baseType: !388, size: 32, offset: 96)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2265, file: !283, line: 163, baseType: !196, size: 32, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2265, file: !283, line: 164, baseType: !319, size: 16, offset: 160)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2265, file: !283, line: 165, baseType: !319, size: 16, offset: 176)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2265, file: !283, line: 166, baseType: !388, size: 32, offset: 192)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2265, file: !283, line: 167, baseType: !388, size: 32, offset: 224)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !282, file: !283, line: 1254, baseType: !342, size: 128, offset: 34368)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !282, file: !283, line: 1255, baseType: !342, size: 128, offset: 34496)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !282, file: !283, line: 1257, baseType: !291, size: 64, offset: 34624)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !282, file: !283, line: 1258, baseType: !291, size: 64, offset: 34688)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !282, file: !283, line: 1259, baseType: !291, size: 64, offset: 34752)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !282, file: !283, line: 1260, baseType: !291, size: 64, offset: 34816)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !282, file: !283, line: 1262, baseType: !291, size: 64, offset: 34880)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !282, file: !283, line: 1265, baseType: !2284, size: 64, offset: 34944)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !283, line: 1265, flags: DIFlagFwdDecl)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !282, file: !283, line: 1266, baseType: !319, size: 16, offset: 35008)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !282, file: !283, line: 1267, baseType: !319, size: 16, offset: 35024)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !282, file: !283, line: 1270, baseType: !196, size: 32, offset: 35040)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !282, file: !283, line: 1271, baseType: !342, size: 128, offset: 35072)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !282, file: !283, line: 1274, baseType: !2291, size: 128, offset: 35200)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !283, line: 650, size: 128, elements: !2292)
!2292 = !{!2293, !2294, !2295, !2296, !2297}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2291, file: !283, line: 651, baseType: !387, size: 96)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2291, file: !283, line: 652, baseType: !277, size: 8, offset: 96)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2291, file: !283, line: 652, baseType: !277, size: 8, offset: 104)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2291, file: !283, line: 652, baseType: !277, size: 8, offset: 112)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2291, file: !283, line: 652, baseType: !277, size: 8, offset: 120)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !282, file: !283, line: 1275, baseType: !2299, size: 1472, offset: 35328)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !283, line: 676, size: 1472, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2322, !2323, !2324, !2325, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2299, file: !283, line: 679, baseType: !2291, size: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2299, file: !283, line: 680, baseType: !319, size: 16, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2299, file: !283, line: 680, baseType: !319, size: 16, offset: 144)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2299, file: !283, line: 680, baseType: !319, size: 16, offset: 160)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2299, file: !283, line: 680, baseType: !319, size: 16, offset: 176)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2299, file: !283, line: 681, baseType: !319, size: 16, offset: 192)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2299, file: !283, line: 681, baseType: !319, size: 16, offset: 208)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2299, file: !283, line: 681, baseType: !319, size: 16, offset: 224)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2299, file: !283, line: 681, baseType: !319, size: 16, offset: 240)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2299, file: !283, line: 682, baseType: !319, size: 16, offset: 256)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2299, file: !283, line: 682, baseType: !392, size: 48, offset: 272)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2299, file: !283, line: 685, baseType: !2313, size: 192, offset: 320)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !283, line: 633, size: 192, elements: !2314)
!2314 = !{!2315, !2316, !2317, !2318, !2319, !2320, !2321}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2313, file: !283, line: 634, baseType: !319, size: 16)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2313, file: !283, line: 634, baseType: !319, size: 16, offset: 16)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2313, file: !283, line: 635, baseType: !319, size: 16, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2313, file: !283, line: 635, baseType: !319, size: 16, offset: 48)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2313, file: !283, line: 636, baseType: !388, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2313, file: !283, line: 636, baseType: !388, size: 32, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2313, file: !283, line: 637, baseType: !2239, size: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2299, file: !283, line: 686, baseType: !319, size: 16, offset: 512)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2299, file: !283, line: 686, baseType: !319, size: 16, offset: 528)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2299, file: !283, line: 687, baseType: !388, size: 32, offset: 544)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2299, file: !283, line: 688, baseType: !2326, size: 448, offset: 576)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !283, line: 674, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !283, line: 659, size: 448, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2327, file: !283, line: 660, baseType: !388, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2327, file: !283, line: 661, baseType: !388, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2327, file: !283, line: 662, baseType: !388, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2327, file: !283, line: 663, baseType: !388, size: 32, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2327, file: !283, line: 664, baseType: !388, size: 32, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2327, file: !283, line: 665, baseType: !388, size: 32, offset: 160)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2327, file: !283, line: 666, baseType: !388, size: 32, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2327, file: !283, line: 667, baseType: !388, size: 32, offset: 224)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2327, file: !283, line: 668, baseType: !388, size: 32, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2327, file: !283, line: 669, baseType: !388, size: 32, offset: 288)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2327, file: !283, line: 670, baseType: !196, size: 32, offset: 320)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2327, file: !283, line: 671, baseType: !388, size: 32, offset: 352)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2327, file: !283, line: 672, baseType: !388, size: 32, offset: 384)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2327, file: !283, line: 673, baseType: !319, size: 16, offset: 416)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2327, file: !283, line: 673, baseType: !319, size: 16, offset: 432)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2299, file: !283, line: 692, baseType: !388, size: 32, offset: 1024)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2299, file: !283, line: 697, baseType: !388, size: 32, offset: 1056)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2299, file: !283, line: 703, baseType: !196, size: 32, offset: 1088)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2299, file: !283, line: 704, baseType: !319, size: 16, offset: 1120)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2299, file: !283, line: 704, baseType: !319, size: 16, offset: 1136)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2299, file: !283, line: 705, baseType: !319, size: 16, offset: 1152)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2299, file: !283, line: 706, baseType: !319, size: 16, offset: 1168)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2299, file: !283, line: 707, baseType: !319, size: 16, offset: 1184)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2299, file: !283, line: 708, baseType: !319, size: 16, offset: 1200)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2299, file: !283, line: 709, baseType: !319, size: 16, offset: 1216)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2299, file: !283, line: 709, baseType: !319, size: 16, offset: 1232)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2299, file: !283, line: 709, baseType: !319, size: 16, offset: 1248)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2299, file: !283, line: 709, baseType: !319, size: 16, offset: 1264)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2299, file: !283, line: 710, baseType: !319, size: 16, offset: 1280)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2299, file: !283, line: 711, baseType: !319, size: 16, offset: 1296)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2299, file: !283, line: 712, baseType: !388, size: 32, offset: 1312)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2299, file: !283, line: 713, baseType: !388, size: 32, offset: 1344)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2299, file: !283, line: 713, baseType: !388, size: 32, offset: 1376)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2299, file: !283, line: 713, baseType: !388, size: 32, offset: 1408)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2299, file: !283, line: 713, baseType: !388, size: 32, offset: 1440)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !282, file: !283, line: 1278, baseType: !2365, size: 64, offset: 36800)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !283, line: 1197, size: 64, elements: !2366)
!2366 = !{!2367, !2368, !2369, !2370}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2365, file: !283, line: 1199, baseType: !388, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2365, file: !283, line: 1200, baseType: !277, size: 8, offset: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2365, file: !283, line: 1201, baseType: !277, size: 8, offset: 40)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2365, file: !283, line: 1202, baseType: !319, size: 16, offset: 48)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !282, file: !283, line: 1281, baseType: !741, size: 64, offset: 36864)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !282, file: !283, line: 1284, baseType: !2373, size: 192, offset: 36928)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !283, line: 1208, size: 192, elements: !2374)
!2374 = !{!2375, !2376, !2377, !2378}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2373, file: !283, line: 1209, baseType: !387, size: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2373, file: !283, line: 1210, baseType: !196, size: 32, offset: 96)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2373, file: !283, line: 1210, baseType: !196, size: 32, offset: 128)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2373, file: !283, line: 1210, baseType: !196, size: 32, offset: 160)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !282, file: !283, line: 1287, baseType: !2380, size: 64, offset: 37120)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !283, line: 62, flags: DIFlagFwdDecl)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !282, file: !283, line: 1289, baseType: !1312, size: 64, offset: 37184)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !282, file: !283, line: 1290, baseType: !1312, size: 64, offset: 37248)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !282, file: !283, line: 1293, baseType: !2036, size: 1280, offset: 37312)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !282, file: !283, line: 1294, baseType: !2048, size: 512, offset: 38592)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !282, file: !283, line: 1295, baseType: !1240, size: 512, offset: 39104)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !282, file: !283, line: 1298, baseType: !2388, size: 64, offset: 39616)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !283, line: 1298, flags: DIFlagFwdDecl)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !266, file: !143, line: 109, baseType: !771, size: 64, offset: 832)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresModifierData", file: !143, line: 722, baseType: !369)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 96, elements: !389)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGDerivedMesh", file: !218, line: 141, baseType: !2397)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGDerivedMesh", file: !218, line: 100, size: 15104, elements: !2398)
!2398 = !{!2399, !2400, !2403, !2404, !2405, !2406, !2414, !2423, !2433, !2435, !2437, !2438, !2439, !2441, !2442, !2443, !2445, !2446, !2448, !2449, !2450, !2461}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !2397, file: !218, line: 101, baseType: !916, size: 13504)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2397, file: !218, line: 103, baseType: !2401, size: 64, offset: 13504)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGSubSurf", file: !1066, line: 42, flags: DIFlagFwdDecl)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "freeSS", scope: !2397, file: !218, line: 104, baseType: !196, size: 32, offset: 13568)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "drawInteriorEdges", scope: !2397, file: !218, line: 105, baseType: !196, size: 32, offset: 13600)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "useSubsurfUv", scope: !2397, file: !218, line: 105, baseType: !196, size: 32, offset: 13632)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "vertMap", scope: !2397, file: !218, line: 107, baseType: !2407, size: 64, offset: 13696)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2397, file: !218, line: 107, size: 128, elements: !2409)
!2409 = !{!2410, !2411}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "startVert", scope: !2408, file: !218, line: 107, baseType: !196, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2408, file: !218, line: 107, baseType: !2412, size: 64, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGVert", file: !218, line: 51, flags: DIFlagFwdDecl)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "edgeMap", scope: !2397, file: !218, line: 108, baseType: !2415, size: 64, offset: 13760)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2397, file: !218, line: 108, size: 128, elements: !2417)
!2417 = !{!2418, !2419, !2420}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "startVert", scope: !2416, file: !218, line: 108, baseType: !196, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "startEdge", scope: !2416, file: !218, line: 108, baseType: !196, size: 32, offset: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !2416, file: !218, line: 108, baseType: !2421, size: 64, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGEdge", file: !218, line: 48, flags: DIFlagFwdDecl)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "faceMap", scope: !2397, file: !218, line: 110, baseType: !2424, size: 64, offset: 13824)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2397, file: !218, line: 109, size: 192, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "startVert", scope: !2425, file: !218, line: 109, baseType: !196, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "startEdge", scope: !2425, file: !218, line: 109, baseType: !196, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "startFace", scope: !2425, file: !218, line: 110, baseType: !196, size: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2425, file: !218, line: 110, baseType: !2431, size: 64, offset: 128)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGFace", file: !218, line: 49, flags: DIFlagFwdDecl)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "edgeFlags", scope: !2397, file: !218, line: 112, baseType: !2434, size: 64, offset: 13888)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "faceFlags", scope: !2397, file: !218, line: 113, baseType: !2436, size: 64, offset: 13952)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "reverseFaceMap", scope: !2397, file: !218, line: 115, baseType: !426, size: 64, offset: 14016)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !2397, file: !218, line: 117, baseType: !632, size: 64, offset: 14080)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !2397, file: !218, line: 119, baseType: !2440, size: 64, offset: 14144)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "pmap_mem", scope: !2397, file: !218, line: 120, baseType: !426, size: 64, offset: 14208)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "gridData", scope: !2397, file: !218, line: 122, baseType: !1042, size: 64, offset: 14272)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "gridAdjacency", scope: !2397, file: !218, line: 123, baseType: !2444, size: 64, offset: 14336)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "gridOffset", scope: !2397, file: !218, line: 124, baseType: !426, size: 64, offset: 14400)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "gridFaces", scope: !2397, file: !218, line: 125, baseType: !2447, size: 64, offset: 14464)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "gridFlagMats", scope: !2397, file: !218, line: 126, baseType: !2436, size: 64, offset: 14528)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "gridHidden", scope: !2397, file: !218, line: 127, baseType: !1092, size: 64, offset: 14592)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !2397, file: !218, line: 138, baseType: !2451, size: 384, offset: 14656)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2397, file: !218, line: 129, size: 384, elements: !2452)
!2452 = !{!2453, !2454, !2455, !2456, !2457, !2458, !2459}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "mmd", scope: !2451, file: !218, line: 130, baseType: !368, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "local_mmd", scope: !2451, file: !218, line: 131, baseType: !196, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !2451, file: !218, line: 133, baseType: !196, size: 32, offset: 96)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !2451, file: !218, line: 133, baseType: !196, size: 32, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2451, file: !218, line: 134, baseType: !413, size: 64, offset: 192)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2451, file: !218, line: 136, baseType: !357, size: 64, offset: 256)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "modified_flags", scope: !2451, file: !218, line: 137, baseType: !2460, size: 32, offset: 320)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresModifiedFlags", file: !218, line: 96, baseType: !217)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "ehash", scope: !2397, file: !218, line: 140, baseType: !2462, size: 64, offset: 15040)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHash", file: !2464, line: 37, flags: DIFlagFwdDecl)
!2464 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !355, line: 133, baseType: !2468)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !355, line: 58, size: 11008, elements: !2469)
!2469 = !{!2470, !2471, !2472, !2473, !2474, !2477, !2478, !2484, !2485, !2495, !2496, !2502, !2510, !2511, !2512, !2525, !2526, !2527, !2528, !2536, !2538, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2468, file: !355, line: 59, baseType: !286, size: 960)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2468, file: !355, line: 60, baseType: !353, size: 64, offset: 960)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2468, file: !355, line: 62, baseType: !676, size: 64, offset: 1024)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2468, file: !355, line: 64, baseType: !673, size: 64, offset: 1088)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2468, file: !355, line: 65, baseType: !2475, size: 64, offset: 1152)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !355, line: 42, flags: DIFlagFwdDecl)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2468, file: !355, line: 66, baseType: !767, size: 64, offset: 1216)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !2468, file: !355, line: 67, baseType: !2479, size: 64, offset: 1280)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !257, line: 154, size: 64, elements: !2481)
!2481 = !{!2482, !2483}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2480, file: !257, line: 155, baseType: !196, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2480, file: !257, line: 156, baseType: !196, size: 32, offset: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !2468, file: !355, line: 71, baseType: !396, size: 64, offset: 1344)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !2468, file: !355, line: 72, baseType: !2486, size: 64, offset: 1408)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !257, line: 93, size: 128, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2494}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2487, file: !257, line: 94, baseType: !1176, size: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2487, file: !257, line: 95, baseType: !277, size: 8, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2487, file: !257, line: 95, baseType: !277, size: 8, offset: 72)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2487, file: !257, line: 96, baseType: !319, size: 16, offset: 80)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2487, file: !257, line: 96, baseType: !319, size: 16, offset: 96)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2487, file: !257, line: 96, baseType: !319, size: 16, offset: 112)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !2468, file: !355, line: 73, baseType: !405, size: 64, offset: 1472)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !2468, file: !355, line: 74, baseType: !2497, size: 64, offset: 1536)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !257, line: 109, size: 96, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2498, file: !257, line: 110, baseType: !1331, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2498, file: !257, line: 111, baseType: !196, size: 32, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !2468, file: !355, line: 75, baseType: !2503, size: 64, offset: 1600)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !257, line: 129, size: 32, elements: !2505)
!2505 = !{!2506, !2507, !2508, !2509}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2504, file: !257, line: 130, baseType: !277, size: 8)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2504, file: !257, line: 130, baseType: !277, size: 8, offset: 8)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2504, file: !257, line: 130, baseType: !277, size: 8, offset: 16)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2504, file: !257, line: 130, baseType: !277, size: 8, offset: 24)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !2468, file: !355, line: 80, baseType: !951, size: 64, offset: 1664)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2468, file: !355, line: 81, baseType: !1169, size: 64, offset: 1728)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !2468, file: !355, line: 82, baseType: !2513, size: 64, offset: 1792)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !355, line: 136, size: 512, elements: !2515)
!2515 = !{!2516, !2517, !2518, !2520, !2521, !2522, !2523, !2524}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2514, file: !355, line: 137, baseType: !291, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2514, file: !355, line: 138, baseType: !1173, size: 256, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2514, file: !355, line: 139, baseType: !2519, size: 128, offset: 320)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !784)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2514, file: !355, line: 140, baseType: !277, size: 8, offset: 448)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2514, file: !355, line: 140, baseType: !277, size: 8, offset: 456)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2514, file: !355, line: 141, baseType: !319, size: 16, offset: 464)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2514, file: !355, line: 141, baseType: !319, size: 16, offset: 480)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2514, file: !355, line: 141, baseType: !319, size: 16, offset: 496)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !2468, file: !355, line: 83, baseType: !383, size: 64, offset: 1856)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !2468, file: !355, line: 84, baseType: !939, size: 64, offset: 1920)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !2468, file: !355, line: 85, baseType: !1819, size: 64, offset: 1984)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2468, file: !355, line: 89, baseType: !2529, size: 64, offset: 2048)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !257, line: 74, size: 32, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2535}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2530, file: !257, line: 75, baseType: !277, size: 8)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2530, file: !257, line: 75, baseType: !277, size: 8, offset: 8)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2530, file: !257, line: 75, baseType: !277, size: 8, offset: 16)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2530, file: !257, line: 75, baseType: !277, size: 8, offset: 24)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !2468, file: !355, line: 90, baseType: !2537, size: 64, offset: 2112)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !2468, file: !355, line: 93, baseType: !2539, size: 64, offset: 2176)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !2541, line: 54, size: 896, elements: !2542)
!2541 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2542 = !{!2543, !2544, !2545, !2546, !2549, !2550, !2551, !2552, !2555, !2557, !2558, !2559, !2560, !2561, !2562, !2563}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !2540, file: !2541, line: 55, baseType: !429, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !2540, file: !2541, line: 58, baseType: !2539, size: 64, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !2540, file: !2541, line: 59, baseType: !196, size: 32, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !2540, file: !2541, line: 63, baseType: !2547, size: 64, offset: 192)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 192, elements: !389)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !2540, file: !2541, line: 64, baseType: !196, size: 32, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !2540, file: !2541, line: 67, baseType: !879, size: 64, offset: 320)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !2540, file: !2541, line: 67, baseType: !879, size: 64, offset: 384)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !2540, file: !2541, line: 68, baseType: !2553, size: 64, offset: 448)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !2554, line: 48, baseType: !1312)
!2554 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !2540, file: !2541, line: 69, baseType: !2556, size: 64, offset: 512)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !2540, file: !2541, line: 70, baseType: !196, size: 32, offset: 576)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !2540, file: !2541, line: 71, baseType: !2556, size: 64, offset: 640)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !2540, file: !2541, line: 72, baseType: !196, size: 32, offset: 704)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2540, file: !2541, line: 75, baseType: !319, size: 16, offset: 736)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2540, file: !2541, line: 76, baseType: !319, size: 16, offset: 752)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2540, file: !2541, line: 79, baseType: !357, size: 64, offset: 768)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !2540, file: !2541, line: 82, baseType: !196, size: 32, offset: 832)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2468, file: !355, line: 95, baseType: !581, size: 1600, offset: 2240)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2468, file: !355, line: 95, baseType: !581, size: 1600, offset: 3840)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2468, file: !355, line: 95, baseType: !581, size: 1600, offset: 5440)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2468, file: !355, line: 98, baseType: !581, size: 1600, offset: 7040)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !2468, file: !355, line: 98, baseType: !581, size: 1600, offset: 8640)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2468, file: !355, line: 101, baseType: !196, size: 32, offset: 10240)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !2468, file: !355, line: 101, baseType: !196, size: 32, offset: 10272)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2468, file: !355, line: 101, baseType: !196, size: 32, offset: 10304)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !2468, file: !355, line: 101, baseType: !196, size: 32, offset: 10336)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !2468, file: !355, line: 104, baseType: !196, size: 32, offset: 10368)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2468, file: !355, line: 104, baseType: !196, size: 32, offset: 10400)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !2468, file: !355, line: 111, baseType: !196, size: 32, offset: 10432)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2468, file: !355, line: 114, baseType: !387, size: 96, offset: 10464)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2468, file: !355, line: 115, baseType: !387, size: 96, offset: 10560)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2468, file: !355, line: 116, baseType: !387, size: 96, offset: 10656)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !2468, file: !355, line: 118, baseType: !196, size: 32, offset: 10752)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2468, file: !355, line: 119, baseType: !319, size: 16, offset: 10784)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2468, file: !355, line: 119, baseType: !319, size: 16, offset: 10800)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !2468, file: !355, line: 120, baseType: !388, size: 32, offset: 10816)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2468, file: !355, line: 121, baseType: !196, size: 32, offset: 10848)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !2468, file: !355, line: 124, baseType: !277, size: 8, offset: 10880)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2468, file: !355, line: 124, baseType: !277, size: 8, offset: 10888)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !2468, file: !355, line: 126, baseType: !277, size: 8, offset: 10896)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !2468, file: !355, line: 126, baseType: !277, size: 8, offset: 10904)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !2468, file: !355, line: 127, baseType: !277, size: 8, offset: 10912)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !2468, file: !355, line: 128, baseType: !277, size: 8, offset: 10920)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2468, file: !355, line: 130, baseType: !319, size: 16, offset: 10928)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !2468, file: !355, line: 132, baseType: !2592, size: 64, offset: 10944)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !257, line: 233, size: 3584, elements: !2594)
!2594 = !{!2595, !2596, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2593, file: !257, line: 234, baseType: !342, size: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2593, file: !257, line: 235, baseType: !2597, size: 64, offset: 128)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !257, line: 69, baseType: !384)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !2593, file: !257, line: 237, baseType: !626, size: 8, offset: 192)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2593, file: !257, line: 237, baseType: !626, size: 8, offset: 200)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !2593, file: !257, line: 237, baseType: !626, size: 8, offset: 208)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !2593, file: !257, line: 237, baseType: !626, size: 8, offset: 216)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !2593, file: !257, line: 237, baseType: !626, size: 8, offset: 224)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !2593, file: !257, line: 237, baseType: !626, size: 8, offset: 232)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !2593, file: !257, line: 238, baseType: !626, size: 8, offset: 240)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2593, file: !257, line: 238, baseType: !626, size: 8, offset: 248)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2593, file: !257, line: 241, baseType: !580, size: 1600, offset: 256)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2593, file: !257, line: 242, baseType: !580, size: 1600, offset: 1856)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !2593, file: !257, line: 243, baseType: !2434, size: 64, offset: 3456)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !2593, file: !257, line: 244, baseType: !771, size: 64, offset: 3520)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !2613, line: 33, baseType: !7)
!2613 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGElem", file: !1066, line: 51, baseType: !1044)
!2616 = !{!2617, !2623, !0}
!2617 = !DIGlobalVariableExpression(var: !2618, expr: !DIExpression())
!2618 = distinct !DIGlobalVariable(name: "multires_grid_tot", scope: !2, file: !3, line: 69, type: !2619, isLocal: true, isDefinition: true)
!2619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2620, size: 448, elements: !2621)
!2620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2621 = !{!2622}
!2622 = !DISubrange(count: 14)
!2623 = !DIGlobalVariableExpression(var: !2624, expr: !DIExpression(DW_OP_constu, 13, DW_OP_stack_value))
!2624 = distinct !DIGlobalVariable(name: "multires_max_levels", scope: !2, file: !3, line: 68, type: !2620, isLocal: true, isDefinition: true)
!2625 = !{i32 7, !"Dwarf Version", i32 4}
!2626 = !{i32 2, !"Debug Info Version", i32 3}
!2627 = !{i32 1, !"wchar_size", i32 4}
!2628 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2629 = distinct !DISubprogram(name: "multires_customdata_delete", scope: !3, file: !3, line: 84, type: !2630, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{null, !2466}
!2632 = !{}
!2633 = !DILocalVariable(name: "me", arg: 1, scope: !2629, file: !3, line: 84, type: !2466)
!2634 = !DILocation(line: 84, column: 39, scope: !2629)
!2635 = !DILocation(line: 86, column: 6, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 86, column: 6)
!2637 = !DILocation(line: 86, column: 10, scope: !2636)
!2638 = !DILocation(line: 86, column: 6, scope: !2629)
!2639 = !DILocalVariable(name: "em", scope: !2640, file: !3, line: 87, type: !2641)
!2640 = distinct !DILexicalBlock(scope: !2636, file: !3, line: 86, column: 23)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !2541, line: 83, baseType: !2540)
!2643 = !DILocation(line: 87, column: 15, scope: !2640)
!2644 = !DILocation(line: 87, column: 20, scope: !2640)
!2645 = !DILocation(line: 87, column: 24, scope: !2640)
!2646 = !DILocation(line: 91, column: 31, scope: !2640)
!2647 = !DILocation(line: 91, column: 35, scope: !2640)
!2648 = !DILocation(line: 91, column: 39, scope: !2640)
!2649 = !DILocation(line: 91, column: 47, scope: !2640)
!2650 = !DILocation(line: 91, column: 51, scope: !2640)
!2651 = !DILocation(line: 91, column: 3, scope: !2640)
!2652 = !DILocation(line: 93, column: 22, scope: !2640)
!2653 = !DILocation(line: 93, column: 26, scope: !2640)
!2654 = !DILocation(line: 93, column: 31, scope: !2640)
!2655 = !DILocation(line: 93, column: 35, scope: !2640)
!2656 = !DILocation(line: 93, column: 39, scope: !2640)
!2657 = !DILocation(line: 93, column: 3, scope: !2640)
!2658 = !DILocation(line: 95, column: 22, scope: !2640)
!2659 = !DILocation(line: 95, column: 26, scope: !2640)
!2660 = !DILocation(line: 95, column: 31, scope: !2640)
!2661 = !DILocation(line: 95, column: 35, scope: !2640)
!2662 = !DILocation(line: 95, column: 39, scope: !2640)
!2663 = !DILocation(line: 95, column: 3, scope: !2640)
!2664 = !DILocation(line: 96, column: 2, scope: !2640)
!2665 = !DILocation(line: 98, column: 31, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2636, file: !3, line: 97, column: 7)
!2667 = !DILocation(line: 98, column: 35, scope: !2666)
!2668 = !DILocation(line: 98, column: 43, scope: !2666)
!2669 = !DILocation(line: 98, column: 47, scope: !2666)
!2670 = !DILocation(line: 99, column: 41, scope: !2666)
!2671 = !DILocation(line: 99, column: 45, scope: !2666)
!2672 = !DILocation(line: 98, column: 3, scope: !2666)
!2673 = !DILocation(line: 100, column: 33, scope: !2666)
!2674 = !DILocation(line: 100, column: 37, scope: !2666)
!2675 = !DILocation(line: 101, column: 32, scope: !2666)
!2676 = !DILocation(line: 101, column: 36, scope: !2666)
!2677 = !DILocation(line: 100, column: 3, scope: !2666)
!2678 = !DILocation(line: 103, column: 33, scope: !2666)
!2679 = !DILocation(line: 103, column: 37, scope: !2666)
!2680 = !DILocation(line: 104, column: 32, scope: !2666)
!2681 = !DILocation(line: 104, column: 36, scope: !2666)
!2682 = !DILocation(line: 103, column: 3, scope: !2666)
!2683 = !DILocation(line: 106, column: 1, scope: !2629)
!2684 = distinct !DISubprogram(name: "get_multires_dm", scope: !3, file: !3, line: 280, type: !2685, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{!879, !2687, !2391, !2689}
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !283, line: 1299, baseType: !282)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !207, line: 295, baseType: !358)
!2691 = !DILocalVariable(name: "scene", arg: 1, scope: !2684, file: !3, line: 280, type: !2687)
!2692 = !DILocation(line: 280, column: 37, scope: !2684)
!2693 = !DILocalVariable(name: "mmd", arg: 2, scope: !2684, file: !3, line: 280, type: !2391)
!2694 = !DILocation(line: 280, column: 66, scope: !2684)
!2695 = !DILocalVariable(name: "ob", arg: 3, scope: !2684, file: !3, line: 280, type: !2689)
!2696 = !DILocation(line: 280, column: 79, scope: !2684)
!2697 = !DILocalVariable(name: "md", scope: !2684, file: !3, line: 282, type: !264)
!2698 = !DILocation(line: 282, column: 16, scope: !2684)
!2699 = !DILocation(line: 282, column: 37, scope: !2684)
!2700 = !DILocation(line: 282, column: 21, scope: !2684)
!2701 = !DILocalVariable(name: "mti", scope: !2684, file: !3, line: 283, type: !2702)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeInfo", file: !116, line: 309, baseType: !2704)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierTypeInfo", file: !116, line: 121, size: 1728, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2711, !2713, !2717, !2722, !2726, !2730, !2734, !2738, !2742, !2746, !2750, !2751, !2755, !2761, !2765, !2766, !2775, !2784}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2704, file: !116, line: 123, baseType: !2245, size: 256)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !2704, file: !116, line: 128, baseType: !2245, size: 256, offset: 256)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "structSize", scope: !2704, file: !116, line: 131, baseType: !196, size: 32, offset: 512)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2704, file: !116, line: 133, baseType: !2710, size: 32, offset: 544)
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeType", file: !116, line: 71, baseType: !115)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2704, file: !116, line: 134, baseType: !2712, size: 32, offset: 576)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeFlag", file: !116, line: 104, baseType: !124)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "copyData", scope: !2704, file: !116, line: 142, baseType: !2714, size: 64, offset: 640)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{null, !269, !269}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "deformVerts", scope: !2704, file: !116, line: 151, baseType: !2718, size: 64, offset: 704)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{null, !269, !357, !879, !413, !196, !2721}
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierApplyFlag", file: !116, line: 118, baseType: !136)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatrices", scope: !2704, file: !116, line: 157, baseType: !2723, size: 64, offset: 768)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !269, !357, !879, !413, !639, !196}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "deformVertsEM", scope: !2704, file: !116, line: 163, baseType: !2727, size: 64, offset: 832)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{null, !269, !357, !2539, !879, !413, !196}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatricesEM", scope: !2704, file: !116, line: 168, baseType: !2731, size: 64, offset: 896)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{null, !269, !357, !2539, !879, !413, !639, !196}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifier", scope: !2704, file: !116, line: 193, baseType: !2735, size: 64, offset: 960)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!879, !269, !357, !879, !2721}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifierEM", scope: !2704, file: !116, line: 204, baseType: !2739, size: 64, offset: 1024)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!879, !269, !357, !2539, !879, !2721}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "initData", scope: !2704, file: !116, line: 217, baseType: !2743, size: 64, offset: 1088)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{null, !269}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "requiredDataMask", scope: !2704, file: !116, line: 235, baseType: !2747, size: 64, offset: 1152)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!2553, !357, !269}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "freeData", scope: !2704, file: !116, line: 242, baseType: !2743, size: 64, offset: 1216)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "isDisabled", scope: !2704, file: !116, line: 252, baseType: !2752, size: 64, offset: 1280)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!626, !269, !196}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "updateDepgraph", scope: !2704, file: !116, line: 259, baseType: !2756, size: 64, offset: 1344)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{null, !269, !2284, !281, !357, !2759}
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagNode", file: !116, line: 38, flags: DIFlagFwdDecl)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnTime", scope: !2704, file: !116, line: 267, baseType: !2762, size: 64, offset: 1408)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{!626, !269}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnNormals", scope: !2704, file: !116, line: 277, baseType: !2762, size: 64, offset: 1472)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "foreachObjectLink", scope: !2704, file: !116, line: 286, baseType: !2767, size: 64, offset: 1536)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{null, !269, !357, !2770, !291}
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectWalkFunc", file: !116, line: 106, baseType: !2771)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DISubroutineType(types: !2773)
!2773 = !{null, !291, !357, !2774}
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "foreachIDLink", scope: !2704, file: !116, line: 297, baseType: !2776, size: 64, offset: 1600)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{null, !269, !357, !2779, !291}
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDWalkFunc", file: !116, line: 107, baseType: !2780)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{null, !291, !357, !2783}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "foreachTexLink", scope: !2704, file: !116, line: 307, baseType: !2785, size: 64, offset: 1664)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DISubroutineType(types: !2787)
!2787 = !{null, !269, !357, !2788, !291}
!2788 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexWalkFunc", file: !116, line: 108, baseType: !2789)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{null, !291, !357, !269, !533}
!2792 = !DILocation(line: 283, column: 20, scope: !2684)
!2793 = !DILocation(line: 283, column: 47, scope: !2684)
!2794 = !DILocation(line: 283, column: 51, scope: !2684)
!2795 = !DILocation(line: 283, column: 26, scope: !2684)
!2796 = !DILocalVariable(name: "tdm", scope: !2684, file: !3, line: 284, type: !915)
!2797 = !DILocation(line: 284, column: 15, scope: !2684)
!2798 = !DILocation(line: 284, column: 45, scope: !2684)
!2799 = !DILocation(line: 284, column: 52, scope: !2684)
!2800 = !DILocation(line: 284, column: 56, scope: !2684)
!2801 = !DILocation(line: 284, column: 21, scope: !2684)
!2802 = !DILocalVariable(name: "dm", scope: !2684, file: !3, line: 285, type: !915)
!2803 = !DILocation(line: 285, column: 15, scope: !2684)
!2804 = !DILocation(line: 287, column: 7, scope: !2684)
!2805 = !DILocation(line: 287, column: 12, scope: !2684)
!2806 = !DILocation(line: 287, column: 26, scope: !2684)
!2807 = !DILocation(line: 287, column: 30, scope: !2684)
!2808 = !DILocation(line: 287, column: 34, scope: !2684)
!2809 = !DILocation(line: 287, column: 5, scope: !2684)
!2810 = !DILocation(line: 288, column: 6, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 288, column: 6)
!2812 = !DILocation(line: 288, column: 12, scope: !2811)
!2813 = !DILocation(line: 288, column: 9, scope: !2811)
!2814 = !DILocation(line: 288, column: 6, scope: !2684)
!2815 = !DILocation(line: 289, column: 18, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 288, column: 17)
!2817 = !DILocation(line: 289, column: 8, scope: !2816)
!2818 = !DILocation(line: 289, column: 6, scope: !2816)
!2819 = !DILocation(line: 290, column: 2, scope: !2816)
!2820 = !DILocation(line: 292, column: 9, scope: !2684)
!2821 = !DILocation(line: 292, column: 2, scope: !2684)
!2822 = distinct !DISubprogram(name: "find_multires_modifier_before", scope: !3, file: !3, line: 295, type: !2823, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!368, !2687, !264}
!2825 = !DILocalVariable(name: "scene", arg: 1, scope: !2822, file: !3, line: 295, type: !2687)
!2826 = !DILocation(line: 295, column: 60, scope: !2822)
!2827 = !DILocalVariable(name: "lastmd", arg: 2, scope: !2822, file: !3, line: 295, type: !264)
!2828 = !DILocation(line: 295, column: 81, scope: !2822)
!2829 = !DILocalVariable(name: "md", scope: !2822, file: !3, line: 297, type: !264)
!2830 = !DILocation(line: 297, column: 16, scope: !2822)
!2831 = !DILocation(line: 299, column: 12, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 299, column: 2)
!2833 = !DILocation(line: 299, column: 10, scope: !2832)
!2834 = !DILocation(line: 299, column: 7, scope: !2832)
!2835 = !DILocation(line: 299, column: 20, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 299, column: 2)
!2837 = !DILocation(line: 299, column: 2, scope: !2832)
!2838 = !DILocation(line: 300, column: 7, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 300, column: 7)
!2840 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 299, column: 39)
!2841 = !DILocation(line: 300, column: 11, scope: !2839)
!2842 = !DILocation(line: 300, column: 16, scope: !2839)
!2843 = !DILocation(line: 300, column: 7, scope: !2840)
!2844 = !DILocation(line: 301, column: 27, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 301, column: 8)
!2846 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 300, column: 43)
!2847 = !DILocation(line: 301, column: 34, scope: !2845)
!2848 = !DILocation(line: 301, column: 8, scope: !2845)
!2849 = !DILocation(line: 301, column: 8, scope: !2846)
!2850 = !DILocation(line: 302, column: 36, scope: !2845)
!2851 = !DILocation(line: 302, column: 12, scope: !2845)
!2852 = !DILocation(line: 302, column: 5, scope: !2845)
!2853 = !DILocation(line: 303, column: 3, scope: !2846)
!2854 = !DILocation(line: 304, column: 2, scope: !2840)
!2855 = !DILocation(line: 299, column: 29, scope: !2836)
!2856 = !DILocation(line: 299, column: 33, scope: !2836)
!2857 = !DILocation(line: 299, column: 27, scope: !2836)
!2858 = !DILocation(line: 299, column: 2, scope: !2836)
!2859 = distinct !{!2859, !2837, !2860}
!2860 = !DILocation(line: 304, column: 2, scope: !2832)
!2861 = !DILocation(line: 306, column: 2, scope: !2822)
!2862 = !DILocation(line: 307, column: 1, scope: !2822)
!2863 = distinct !DISubprogram(name: "get_multires_modifier", scope: !3, file: !3, line: 312, type: !2864, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{!368, !2687, !2689, !626}
!2866 = !DILocalVariable(name: "scene", arg: 1, scope: !2863, file: !3, line: 312, type: !2687)
!2867 = !DILocation(line: 312, column: 52, scope: !2863)
!2868 = !DILocalVariable(name: "ob", arg: 2, scope: !2863, file: !3, line: 312, type: !2689)
!2869 = !DILocation(line: 312, column: 67, scope: !2863)
!2870 = !DILocalVariable(name: "use_first", arg: 3, scope: !2863, file: !3, line: 312, type: !626)
!2871 = !DILocation(line: 312, column: 76, scope: !2863)
!2872 = !DILocalVariable(name: "md", scope: !2863, file: !3, line: 314, type: !264)
!2873 = !DILocation(line: 314, column: 16, scope: !2863)
!2874 = !DILocalVariable(name: "mmd", scope: !2863, file: !3, line: 315, type: !2391)
!2875 = !DILocation(line: 315, column: 24, scope: !2863)
!2876 = !DILocalVariable(name: "firstmmd", scope: !2863, file: !3, line: 315, type: !2391)
!2877 = !DILocation(line: 315, column: 37, scope: !2863)
!2878 = !DILocation(line: 318, column: 12, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 318, column: 2)
!2880 = !DILocation(line: 318, column: 16, scope: !2879)
!2881 = !DILocation(line: 318, column: 26, scope: !2879)
!2882 = !DILocation(line: 318, column: 10, scope: !2879)
!2883 = !DILocation(line: 318, column: 7, scope: !2879)
!2884 = !DILocation(line: 318, column: 33, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 318, column: 2)
!2886 = !DILocation(line: 318, column: 2, scope: !2879)
!2887 = !DILocation(line: 319, column: 7, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 319, column: 7)
!2889 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 318, column: 52)
!2890 = !DILocation(line: 319, column: 11, scope: !2888)
!2891 = !DILocation(line: 319, column: 16, scope: !2888)
!2892 = !DILocation(line: 319, column: 7, scope: !2889)
!2893 = !DILocation(line: 320, column: 9, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 320, column: 8)
!2895 = distinct !DILexicalBlock(scope: !2888, file: !3, line: 319, column: 43)
!2896 = !DILocation(line: 320, column: 8, scope: !2895)
!2897 = !DILocation(line: 321, column: 40, scope: !2894)
!2898 = !DILocation(line: 321, column: 16, scope: !2894)
!2899 = !DILocation(line: 321, column: 14, scope: !2894)
!2900 = !DILocation(line: 321, column: 5, scope: !2894)
!2901 = !DILocation(line: 323, column: 27, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 323, column: 8)
!2903 = !DILocation(line: 323, column: 34, scope: !2902)
!2904 = !DILocation(line: 323, column: 8, scope: !2902)
!2905 = !DILocation(line: 323, column: 8, scope: !2895)
!2906 = !DILocation(line: 324, column: 35, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 323, column: 63)
!2908 = !DILocation(line: 324, column: 11, scope: !2907)
!2909 = !DILocation(line: 324, column: 9, scope: !2907)
!2910 = !DILocation(line: 325, column: 5, scope: !2907)
!2911 = !DILocation(line: 327, column: 3, scope: !2895)
!2912 = !DILocation(line: 328, column: 2, scope: !2889)
!2913 = !DILocation(line: 318, column: 42, scope: !2885)
!2914 = !DILocation(line: 318, column: 46, scope: !2885)
!2915 = !DILocation(line: 318, column: 40, scope: !2885)
!2916 = !DILocation(line: 318, column: 2, scope: !2885)
!2917 = distinct !{!2917, !2886, !2918}
!2918 = !DILocation(line: 328, column: 2, scope: !2879)
!2919 = !DILocation(line: 330, column: 7, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2863, file: !3, line: 330, column: 6)
!2921 = !DILocation(line: 330, column: 11, scope: !2920)
!2922 = !DILocation(line: 330, column: 14, scope: !2920)
!2923 = !DILocation(line: 330, column: 6, scope: !2863)
!2924 = !DILocation(line: 333, column: 10, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2920, file: !3, line: 330, column: 25)
!2926 = !DILocation(line: 333, column: 3, scope: !2925)
!2927 = !DILocation(line: 336, column: 9, scope: !2863)
!2928 = !DILocation(line: 336, column: 2, scope: !2863)
!2929 = !DILocation(line: 337, column: 1, scope: !2863)
!2930 = distinct !DISubprogram(name: "multires_set_tot_level", scope: !3, file: !3, line: 352, type: !2931, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{null, !2689, !2391, !196}
!2933 = !DILocalVariable(name: "ob", arg: 1, scope: !2930, file: !3, line: 352, type: !2689)
!2934 = !DILocation(line: 352, column: 37, scope: !2930)
!2935 = !DILocalVariable(name: "mmd", arg: 2, scope: !2930, file: !3, line: 352, type: !2391)
!2936 = !DILocation(line: 352, column: 63, scope: !2930)
!2937 = !DILocalVariable(name: "lvl", arg: 3, scope: !2930, file: !3, line: 352, type: !196)
!2938 = !DILocation(line: 352, column: 72, scope: !2930)
!2939 = !DILocation(line: 354, column: 16, scope: !2930)
!2940 = !DILocation(line: 354, column: 2, scope: !2930)
!2941 = !DILocation(line: 354, column: 7, scope: !2930)
!2942 = !DILocation(line: 354, column: 14, scope: !2930)
!2943 = !DILocation(line: 356, column: 6, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2930, file: !3, line: 356, column: 6)
!2945 = !DILocation(line: 356, column: 10, scope: !2944)
!2946 = !DILocation(line: 356, column: 15, scope: !2944)
!2947 = !DILocation(line: 356, column: 6, scope: !2930)
!2948 = !DILocation(line: 357, column: 14, scope: !2944)
!2949 = !DILocation(line: 357, column: 3, scope: !2944)
!2950 = !DILocation(line: 357, column: 8, scope: !2944)
!2951 = !DILocation(line: 357, column: 12, scope: !2944)
!2952 = !DILocation(line: 359, column: 19, scope: !2930)
!2953 = !DILocation(line: 359, column: 2, scope: !2930)
!2954 = !DILocation(line: 359, column: 7, scope: !2930)
!2955 = !DILocation(line: 359, column: 17, scope: !2930)
!2956 = !DILocation(line: 360, column: 19, scope: !2930)
!2957 = !DILocation(line: 360, column: 2, scope: !2930)
!2958 = !DILocation(line: 360, column: 7, scope: !2930)
!2959 = !DILocation(line: 360, column: 17, scope: !2930)
!2960 = !DILocation(line: 361, column: 1, scope: !2930)
!2961 = distinct !DISubprogram(name: "multires_mark_as_modified", scope: !3, file: !3, line: 369, type: !2962, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{null, !2689, !2460}
!2964 = !DILocalVariable(name: "ob", arg: 1, scope: !2961, file: !3, line: 369, type: !2689)
!2965 = !DILocation(line: 369, column: 40, scope: !2961)
!2966 = !DILocalVariable(name: "flags", arg: 2, scope: !2961, file: !3, line: 369, type: !2460)
!2967 = !DILocation(line: 369, column: 66, scope: !2961)
!2968 = !DILocation(line: 371, column: 6, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2961, file: !3, line: 371, column: 6)
!2970 = !DILocation(line: 371, column: 9, scope: !2969)
!2971 = !DILocation(line: 371, column: 12, scope: !2969)
!2972 = !DILocation(line: 371, column: 16, scope: !2969)
!2973 = !DILocation(line: 371, column: 6, scope: !2961)
!2974 = !DILocation(line: 372, column: 32, scope: !2969)
!2975 = !DILocation(line: 372, column: 36, scope: !2969)
!2976 = !DILocation(line: 372, column: 50, scope: !2969)
!2977 = !DILocation(line: 372, column: 3, scope: !2969)
!2978 = !DILocation(line: 373, column: 1, scope: !2961)
!2979 = distinct !DISubprogram(name: "multires_dm_mark_as_modified", scope: !3, file: !3, line: 363, type: !2980, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{null, !915, !2460}
!2982 = !DILocalVariable(name: "dm", arg: 1, scope: !2979, file: !3, line: 363, type: !915)
!2983 = !DILocation(line: 363, column: 55, scope: !2979)
!2984 = !DILocalVariable(name: "flags", arg: 2, scope: !2979, file: !3, line: 363, type: !2460)
!2985 = !DILocation(line: 363, column: 81, scope: !2979)
!2986 = !DILocalVariable(name: "ccgdm", scope: !2979, file: !3, line: 365, type: !2395)
!2987 = !DILocation(line: 365, column: 18, scope: !2979)
!2988 = !DILocation(line: 365, column: 44, scope: !2979)
!2989 = !DILocation(line: 365, column: 26, scope: !2979)
!2990 = !DILocation(line: 366, column: 36, scope: !2979)
!2991 = !DILocation(line: 366, column: 2, scope: !2979)
!2992 = !DILocation(line: 366, column: 9, scope: !2979)
!2993 = !DILocation(line: 366, column: 18, scope: !2979)
!2994 = !DILocation(line: 366, column: 33, scope: !2979)
!2995 = !DILocation(line: 367, column: 1, scope: !2979)
!2996 = distinct !DISubprogram(name: "multires_force_update", scope: !3, file: !3, line: 375, type: !2997, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{null, !2689}
!2999 = !DILocalVariable(name: "ob", arg: 1, scope: !2996, file: !3, line: 375, type: !2689)
!3000 = !DILocation(line: 375, column: 36, scope: !2996)
!3001 = !DILocation(line: 377, column: 6, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 377, column: 6)
!3003 = !DILocation(line: 377, column: 6, scope: !2996)
!3004 = !DILocation(line: 378, column: 34, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 377, column: 10)
!3006 = !DILocation(line: 378, column: 3, scope: !3005)
!3007 = !DILocation(line: 380, column: 7, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 380, column: 7)
!3009 = !DILocation(line: 380, column: 11, scope: !3008)
!3010 = !DILocation(line: 380, column: 18, scope: !3008)
!3011 = !DILocation(line: 380, column: 21, scope: !3008)
!3012 = !DILocation(line: 380, column: 25, scope: !3008)
!3013 = !DILocation(line: 380, column: 33, scope: !3008)
!3014 = !DILocation(line: 380, column: 7, scope: !3005)
!3015 = !DILocation(line: 381, column: 18, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 380, column: 39)
!3017 = !DILocation(line: 381, column: 22, scope: !3016)
!3018 = !DILocation(line: 381, column: 30, scope: !3016)
!3019 = !DILocation(line: 381, column: 4, scope: !3016)
!3020 = !DILocation(line: 382, column: 4, scope: !3016)
!3021 = !DILocation(line: 382, column: 8, scope: !3016)
!3022 = !DILocation(line: 382, column: 16, scope: !3016)
!3023 = !DILocation(line: 382, column: 21, scope: !3016)
!3024 = !DILocation(line: 383, column: 3, scope: !3016)
!3025 = !DILocation(line: 384, column: 2, scope: !3005)
!3026 = !DILocation(line: 385, column: 1, scope: !2996)
!3027 = distinct !DISubprogram(name: "multires_force_external_reload", scope: !3, file: !3, line: 387, type: !2997, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3028 = !DILocalVariable(name: "ob", arg: 1, scope: !3027, file: !3, line: 387, type: !2689)
!3029 = !DILocation(line: 387, column: 45, scope: !3027)
!3030 = !DILocalVariable(name: "me", scope: !3027, file: !3, line: 389, type: !2466)
!3031 = !DILocation(line: 389, column: 8, scope: !3027)
!3032 = !DILocation(line: 389, column: 34, scope: !3027)
!3033 = !DILocation(line: 389, column: 13, scope: !3027)
!3034 = !DILocation(line: 391, column: 30, scope: !3027)
!3035 = !DILocation(line: 391, column: 34, scope: !3027)
!3036 = !DILocation(line: 391, column: 42, scope: !3027)
!3037 = !DILocation(line: 391, column: 46, scope: !3027)
!3038 = !DILocation(line: 391, column: 66, scope: !3027)
!3039 = !DILocation(line: 391, column: 70, scope: !3027)
!3040 = !DILocation(line: 391, column: 2, scope: !3027)
!3041 = !DILocation(line: 392, column: 24, scope: !3027)
!3042 = !DILocation(line: 392, column: 2, scope: !3027)
!3043 = !DILocation(line: 393, column: 1, scope: !3027)
!3044 = distinct !DISubprogram(name: "multires_force_render_update", scope: !3, file: !3, line: 395, type: !2997, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3045 = !DILocalVariable(name: "ob", arg: 1, scope: !3044, file: !3, line: 395, type: !2689)
!3046 = !DILocation(line: 395, column: 43, scope: !3044)
!3047 = !DILocation(line: 397, column: 6, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 397, column: 6)
!3049 = !DILocation(line: 397, column: 9, scope: !3048)
!3050 = !DILocation(line: 397, column: 13, scope: !3048)
!3051 = !DILocation(line: 397, column: 17, scope: !3048)
!3052 = !DILocation(line: 397, column: 22, scope: !3048)
!3053 = !DILocation(line: 397, column: 40, scope: !3048)
!3054 = !DILocation(line: 397, column: 64, scope: !3048)
!3055 = !DILocation(line: 397, column: 43, scope: !3048)
!3056 = !DILocation(line: 397, column: 6, scope: !3044)
!3057 = !DILocation(line: 398, column: 25, scope: !3048)
!3058 = !DILocation(line: 398, column: 3, scope: !3048)
!3059 = !DILocation(line: 399, column: 1, scope: !3044)
!3060 = distinct !DISubprogram(name: "multiresModifier_reshapeFromDM", scope: !3, file: !3, line: 401, type: !3061, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!196, !2687, !2391, !2689, !915}
!3063 = !DILocalVariable(name: "scene", arg: 1, scope: !3060, file: !3, line: 401, type: !2687)
!3064 = !DILocation(line: 401, column: 43, scope: !3060)
!3065 = !DILocalVariable(name: "mmd", arg: 2, scope: !3060, file: !3, line: 401, type: !2391)
!3066 = !DILocation(line: 401, column: 72, scope: !3060)
!3067 = !DILocalVariable(name: "ob", arg: 3, scope: !3060, file: !3, line: 402, type: !2689)
!3068 = !DILocation(line: 402, column: 44, scope: !3060)
!3069 = !DILocalVariable(name: "srcdm", arg: 4, scope: !3060, file: !3, line: 402, type: !915)
!3070 = !DILocation(line: 402, column: 61, scope: !3060)
!3071 = !DILocalVariable(name: "mrdm", scope: !3060, file: !3, line: 404, type: !915)
!3072 = !DILocation(line: 404, column: 15, scope: !3060)
!3073 = !DILocation(line: 404, column: 38, scope: !3060)
!3074 = !DILocation(line: 404, column: 45, scope: !3060)
!3075 = !DILocation(line: 404, column: 50, scope: !3060)
!3076 = !DILocation(line: 404, column: 22, scope: !3060)
!3077 = !DILocation(line: 406, column: 6, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 406, column: 6)
!3079 = !DILocation(line: 406, column: 11, scope: !3078)
!3080 = !DILocation(line: 406, column: 14, scope: !3078)
!3081 = !DILocation(line: 406, column: 20, scope: !3078)
!3082 = !DILocation(line: 406, column: 23, scope: !3078)
!3083 = !DILocation(line: 406, column: 29, scope: !3078)
!3084 = !DILocation(line: 406, column: 41, scope: !3078)
!3085 = !DILocation(line: 406, column: 50, scope: !3078)
!3086 = !DILocation(line: 406, column: 57, scope: !3078)
!3087 = !DILocation(line: 406, column: 69, scope: !3078)
!3088 = !DILocation(line: 406, column: 47, scope: !3078)
!3089 = !DILocation(line: 406, column: 6, scope: !3060)
!3090 = !DILocation(line: 407, column: 24, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 406, column: 77)
!3092 = !DILocation(line: 407, column: 30, scope: !3091)
!3093 = !DILocation(line: 407, column: 37, scope: !3091)
!3094 = !DILocation(line: 407, column: 50, scope: !3091)
!3095 = !DILocation(line: 407, column: 3, scope: !3091)
!3096 = !DILocation(line: 409, column: 32, scope: !3091)
!3097 = !DILocation(line: 409, column: 3, scope: !3091)
!3098 = !DILocation(line: 410, column: 25, scope: !3091)
!3099 = !DILocation(line: 410, column: 3, scope: !3091)
!3100 = !DILocation(line: 412, column: 3, scope: !3091)
!3101 = !DILocation(line: 412, column: 9, scope: !3091)
!3102 = !DILocation(line: 412, column: 17, scope: !3091)
!3103 = !DILocation(line: 414, column: 3, scope: !3091)
!3104 = !DILocation(line: 417, column: 6, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 417, column: 6)
!3106 = !DILocation(line: 417, column: 6, scope: !3060)
!3107 = !DILocation(line: 417, column: 12, scope: !3105)
!3108 = !DILocation(line: 417, column: 18, scope: !3105)
!3109 = !DILocation(line: 417, column: 26, scope: !3105)
!3110 = !DILocation(line: 419, column: 2, scope: !3060)
!3111 = !DILocation(line: 420, column: 1, scope: !3060)
!3112 = distinct !DISubprogram(name: "multires_mvert_to_ss", scope: !3, file: !3, line: 1792, type: !3113, scopeLine: 1793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{null, !915, !2597}
!3115 = !DILocalVariable(name: "dm", arg: 1, scope: !3112, file: !3, line: 1792, type: !915)
!3116 = !DILocation(line: 1792, column: 47, scope: !3112)
!3117 = !DILocalVariable(name: "mvert", arg: 2, scope: !3112, file: !3, line: 1792, type: !2597)
!3118 = !DILocation(line: 1792, column: 58, scope: !3112)
!3119 = !DILocalVariable(name: "ccgdm", scope: !3112, file: !3, line: 1794, type: !2395)
!3120 = !DILocation(line: 1794, column: 18, scope: !3112)
!3121 = !DILocation(line: 1794, column: 45, scope: !3112)
!3122 = !DILocation(line: 1794, column: 26, scope: !3112)
!3123 = !DILocalVariable(name: "ss", scope: !3112, file: !3, line: 1795, type: !3124)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGSubSurf", file: !3126, line: 33, baseType: !2402)
!3126 = !DIFile(filename: "blender/source/blender/blenkernel/intern/CCGSubSurf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3127 = !DILocation(line: 1795, column: 14, scope: !3112)
!3128 = !DILocation(line: 1795, column: 19, scope: !3112)
!3129 = !DILocation(line: 1795, column: 26, scope: !3112)
!3130 = !DILocalVariable(name: "vd", scope: !3112, file: !3, line: 1796, type: !2614)
!3131 = !DILocation(line: 1796, column: 11, scope: !3112)
!3132 = !DILocalVariable(name: "key", scope: !3112, file: !3, line: 1797, type: !3133)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGKey", file: !1066, line: 78, baseType: !1065)
!3134 = !DILocation(line: 1797, column: 9, scope: !3112)
!3135 = !DILocalVariable(name: "index", scope: !3112, file: !3, line: 1798, type: !196)
!3136 = !DILocation(line: 1798, column: 6, scope: !3112)
!3137 = !DILocalVariable(name: "totvert", scope: !3112, file: !3, line: 1799, type: !196)
!3138 = !DILocation(line: 1799, column: 6, scope: !3112)
!3139 = !DILocalVariable(name: "totedge", scope: !3112, file: !3, line: 1799, type: !196)
!3140 = !DILocation(line: 1799, column: 15, scope: !3112)
!3141 = !DILocalVariable(name: "totface", scope: !3112, file: !3, line: 1799, type: !196)
!3142 = !DILocation(line: 1799, column: 24, scope: !3112)
!3143 = !DILocalVariable(name: "gridSize", scope: !3112, file: !3, line: 1800, type: !196)
!3144 = !DILocation(line: 1800, column: 6, scope: !3112)
!3145 = !DILocation(line: 1800, column: 40, scope: !3112)
!3146 = !DILocation(line: 1800, column: 17, scope: !3112)
!3147 = !DILocalVariable(name: "edgeSize", scope: !3112, file: !3, line: 1801, type: !196)
!3148 = !DILocation(line: 1801, column: 6, scope: !3112)
!3149 = !DILocation(line: 1801, column: 40, scope: !3112)
!3150 = !DILocation(line: 1801, column: 17, scope: !3112)
!3151 = !DILocalVariable(name: "i", scope: !3112, file: !3, line: 1802, type: !196)
!3152 = !DILocation(line: 1802, column: 6, scope: !3112)
!3153 = !DILocation(line: 1804, column: 2, scope: !3112)
!3154 = !DILocation(line: 1804, column: 6, scope: !3112)
!3155 = !DILocation(line: 1804, column: 17, scope: !3112)
!3156 = !DILocation(line: 1806, column: 35, scope: !3112)
!3157 = !DILocation(line: 1806, column: 12, scope: !3112)
!3158 = !DILocation(line: 1806, column: 10, scope: !3112)
!3159 = !DILocation(line: 1807, column: 13, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1807, column: 2)
!3161 = !DILocation(line: 1807, column: 7, scope: !3160)
!3162 = !DILocation(line: 1807, column: 18, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 1807, column: 2)
!3164 = !DILocation(line: 1807, column: 26, scope: !3163)
!3165 = !DILocation(line: 1807, column: 24, scope: !3163)
!3166 = !DILocation(line: 1807, column: 2, scope: !3160)
!3167 = !DILocalVariable(name: "f", scope: !3168, file: !3, line: 1808, type: !3169)
!3168 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1807, column: 44)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGFace", file: !3126, line: 36, baseType: !2432)
!3171 = !DILocation(line: 1808, column: 12, scope: !3168)
!3172 = !DILocation(line: 1808, column: 16, scope: !3168)
!3173 = !DILocation(line: 1808, column: 23, scope: !3168)
!3174 = !DILocation(line: 1808, column: 31, scope: !3168)
!3175 = !DILocation(line: 1808, column: 38, scope: !3168)
!3176 = !DILocalVariable(name: "x", scope: !3168, file: !3, line: 1809, type: !196)
!3177 = !DILocation(line: 1809, column: 7, scope: !3168)
!3178 = !DILocalVariable(name: "y", scope: !3168, file: !3, line: 1809, type: !196)
!3179 = !DILocation(line: 1809, column: 10, scope: !3168)
!3180 = !DILocalVariable(name: "S", scope: !3168, file: !3, line: 1809, type: !196)
!3181 = !DILocation(line: 1809, column: 13, scope: !3168)
!3182 = !DILocalVariable(name: "numVerts", scope: !3168, file: !3, line: 1809, type: !196)
!3183 = !DILocation(line: 1809, column: 16, scope: !3168)
!3184 = !DILocation(line: 1809, column: 54, scope: !3168)
!3185 = !DILocation(line: 1809, column: 27, scope: !3168)
!3186 = !DILocation(line: 1811, column: 37, scope: !3168)
!3187 = !DILocation(line: 1811, column: 8, scope: !3168)
!3188 = !DILocation(line: 1811, column: 6, scope: !3168)
!3189 = !DILocation(line: 1812, column: 32, scope: !3168)
!3190 = !DILocation(line: 1812, column: 14, scope: !3168)
!3191 = !DILocation(line: 1812, column: 37, scope: !3168)
!3192 = !DILocation(line: 1812, column: 43, scope: !3168)
!3193 = !DILocation(line: 1812, column: 46, scope: !3168)
!3194 = !DILocation(line: 1812, column: 3, scope: !3168)
!3195 = !DILocation(line: 1813, column: 4, scope: !3168)
!3196 = !DILocation(line: 1815, column: 10, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1815, column: 3)
!3198 = !DILocation(line: 1815, column: 8, scope: !3197)
!3199 = !DILocation(line: 1815, column: 15, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 1815, column: 3)
!3201 = !DILocation(line: 1815, column: 19, scope: !3200)
!3202 = !DILocation(line: 1815, column: 17, scope: !3200)
!3203 = !DILocation(line: 1815, column: 3, scope: !3197)
!3204 = !DILocation(line: 1816, column: 11, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3206, file: !3, line: 1816, column: 4)
!3206 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 1815, column: 34)
!3207 = !DILocation(line: 1816, column: 9, scope: !3205)
!3208 = !DILocation(line: 1816, column: 16, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3205, file: !3, line: 1816, column: 4)
!3210 = !DILocation(line: 1816, column: 20, scope: !3209)
!3211 = !DILocation(line: 1816, column: 29, scope: !3209)
!3212 = !DILocation(line: 1816, column: 18, scope: !3209)
!3213 = !DILocation(line: 1816, column: 4, scope: !3205)
!3214 = !DILocation(line: 1817, column: 41, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1816, column: 44)
!3216 = !DILocation(line: 1817, column: 45, scope: !3215)
!3217 = !DILocation(line: 1817, column: 48, scope: !3215)
!3218 = !DILocation(line: 1817, column: 51, scope: !3215)
!3219 = !DILocation(line: 1817, column: 10, scope: !3215)
!3220 = !DILocation(line: 1817, column: 8, scope: !3215)
!3221 = !DILocation(line: 1818, column: 34, scope: !3215)
!3222 = !DILocation(line: 1818, column: 16, scope: !3215)
!3223 = !DILocation(line: 1818, column: 39, scope: !3215)
!3224 = !DILocation(line: 1818, column: 45, scope: !3215)
!3225 = !DILocation(line: 1818, column: 48, scope: !3215)
!3226 = !DILocation(line: 1818, column: 5, scope: !3215)
!3227 = !DILocation(line: 1819, column: 4, scope: !3215)
!3228 = !DILocation(line: 1816, column: 35, scope: !3209)
!3229 = !DILocation(line: 1816, column: 40, scope: !3209)
!3230 = !DILocation(line: 1816, column: 4, scope: !3209)
!3231 = distinct !{!3231, !3213, !3232}
!3232 = !DILocation(line: 1819, column: 4, scope: !3205)
!3233 = !DILocation(line: 1820, column: 3, scope: !3206)
!3234 = !DILocation(line: 1815, column: 30, scope: !3200)
!3235 = !DILocation(line: 1815, column: 3, scope: !3200)
!3236 = distinct !{!3236, !3203, !3237}
!3237 = !DILocation(line: 1820, column: 3, scope: !3197)
!3238 = !DILocation(line: 1822, column: 10, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1822, column: 3)
!3240 = !DILocation(line: 1822, column: 8, scope: !3239)
!3241 = !DILocation(line: 1822, column: 15, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 1822, column: 3)
!3243 = !DILocation(line: 1822, column: 19, scope: !3242)
!3244 = !DILocation(line: 1822, column: 17, scope: !3242)
!3245 = !DILocation(line: 1822, column: 3, scope: !3239)
!3246 = !DILocation(line: 1823, column: 11, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 1823, column: 4)
!3248 = distinct !DILexicalBlock(scope: !3242, file: !3, line: 1822, column: 34)
!3249 = !DILocation(line: 1823, column: 9, scope: !3247)
!3250 = !DILocation(line: 1823, column: 16, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 1823, column: 4)
!3252 = !DILocation(line: 1823, column: 20, scope: !3251)
!3253 = !DILocation(line: 1823, column: 29, scope: !3251)
!3254 = !DILocation(line: 1823, column: 18, scope: !3251)
!3255 = !DILocation(line: 1823, column: 4, scope: !3247)
!3256 = !DILocation(line: 1824, column: 12, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 1824, column: 5)
!3258 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 1823, column: 39)
!3259 = !DILocation(line: 1824, column: 10, scope: !3257)
!3260 = !DILocation(line: 1824, column: 17, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1824, column: 5)
!3262 = !DILocation(line: 1824, column: 21, scope: !3261)
!3263 = !DILocation(line: 1824, column: 30, scope: !3261)
!3264 = !DILocation(line: 1824, column: 19, scope: !3261)
!3265 = !DILocation(line: 1824, column: 5, scope: !3257)
!3266 = !DILocation(line: 1825, column: 38, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 1824, column: 45)
!3268 = !DILocation(line: 1825, column: 42, scope: !3267)
!3269 = !DILocation(line: 1825, column: 45, scope: !3267)
!3270 = !DILocation(line: 1825, column: 48, scope: !3267)
!3271 = !DILocation(line: 1825, column: 51, scope: !3267)
!3272 = !DILocation(line: 1825, column: 11, scope: !3267)
!3273 = !DILocation(line: 1825, column: 9, scope: !3267)
!3274 = !DILocation(line: 1826, column: 35, scope: !3267)
!3275 = !DILocation(line: 1826, column: 17, scope: !3267)
!3276 = !DILocation(line: 1826, column: 40, scope: !3267)
!3277 = !DILocation(line: 1826, column: 46, scope: !3267)
!3278 = !DILocation(line: 1826, column: 49, scope: !3267)
!3279 = !DILocation(line: 1826, column: 6, scope: !3267)
!3280 = !DILocation(line: 1827, column: 5, scope: !3267)
!3281 = !DILocation(line: 1824, column: 36, scope: !3261)
!3282 = !DILocation(line: 1824, column: 41, scope: !3261)
!3283 = !DILocation(line: 1824, column: 5, scope: !3261)
!3284 = distinct !{!3284, !3265, !3285}
!3285 = !DILocation(line: 1827, column: 5, scope: !3257)
!3286 = !DILocation(line: 1828, column: 4, scope: !3258)
!3287 = !DILocation(line: 1823, column: 35, scope: !3251)
!3288 = !DILocation(line: 1823, column: 4, scope: !3251)
!3289 = distinct !{!3289, !3255, !3290}
!3290 = !DILocation(line: 1828, column: 4, scope: !3247)
!3291 = !DILocation(line: 1829, column: 3, scope: !3248)
!3292 = !DILocation(line: 1822, column: 30, scope: !3242)
!3293 = !DILocation(line: 1822, column: 3, scope: !3242)
!3294 = distinct !{!3294, !3245, !3295}
!3295 = !DILocation(line: 1829, column: 3, scope: !3239)
!3296 = !DILocation(line: 1830, column: 2, scope: !3168)
!3297 = !DILocation(line: 1807, column: 40, scope: !3163)
!3298 = !DILocation(line: 1807, column: 2, scope: !3163)
!3299 = distinct !{!3299, !3166, !3300}
!3300 = !DILocation(line: 1830, column: 2, scope: !3160)
!3301 = !DILocation(line: 1832, column: 35, scope: !3112)
!3302 = !DILocation(line: 1832, column: 12, scope: !3112)
!3303 = !DILocation(line: 1832, column: 10, scope: !3112)
!3304 = !DILocation(line: 1833, column: 13, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1833, column: 2)
!3306 = !DILocation(line: 1833, column: 7, scope: !3305)
!3307 = !DILocation(line: 1833, column: 18, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1833, column: 2)
!3309 = !DILocation(line: 1833, column: 26, scope: !3308)
!3310 = !DILocation(line: 1833, column: 24, scope: !3308)
!3311 = !DILocation(line: 1833, column: 2, scope: !3305)
!3312 = !DILocalVariable(name: "e", scope: !3313, file: !3, line: 1834, type: !3314)
!3313 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 1833, column: 44)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGEdge", file: !3126, line: 35, baseType: !2422)
!3316 = !DILocation(line: 1834, column: 12, scope: !3313)
!3317 = !DILocation(line: 1834, column: 16, scope: !3313)
!3318 = !DILocation(line: 1834, column: 23, scope: !3313)
!3319 = !DILocation(line: 1834, column: 31, scope: !3313)
!3320 = !DILocation(line: 1834, column: 38, scope: !3313)
!3321 = !DILocalVariable(name: "x", scope: !3313, file: !3, line: 1835, type: !196)
!3322 = !DILocation(line: 1835, column: 7, scope: !3313)
!3323 = !DILocation(line: 1837, column: 10, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 1837, column: 3)
!3325 = !DILocation(line: 1837, column: 8, scope: !3324)
!3326 = !DILocation(line: 1837, column: 15, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3324, file: !3, line: 1837, column: 3)
!3328 = !DILocation(line: 1837, column: 19, scope: !3327)
!3329 = !DILocation(line: 1837, column: 28, scope: !3327)
!3330 = !DILocation(line: 1837, column: 17, scope: !3327)
!3331 = !DILocation(line: 1837, column: 3, scope: !3324)
!3332 = !DILocation(line: 1838, column: 32, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 1837, column: 43)
!3334 = !DILocation(line: 1838, column: 36, scope: !3333)
!3335 = !DILocation(line: 1838, column: 39, scope: !3333)
!3336 = !DILocation(line: 1838, column: 9, scope: !3333)
!3337 = !DILocation(line: 1838, column: 7, scope: !3333)
!3338 = !DILocation(line: 1839, column: 33, scope: !3333)
!3339 = !DILocation(line: 1839, column: 15, scope: !3333)
!3340 = !DILocation(line: 1839, column: 38, scope: !3333)
!3341 = !DILocation(line: 1839, column: 44, scope: !3333)
!3342 = !DILocation(line: 1839, column: 47, scope: !3333)
!3343 = !DILocation(line: 1839, column: 4, scope: !3333)
!3344 = !DILocation(line: 1840, column: 3, scope: !3333)
!3345 = !DILocation(line: 1837, column: 34, scope: !3327)
!3346 = !DILocation(line: 1837, column: 39, scope: !3327)
!3347 = !DILocation(line: 1837, column: 3, scope: !3327)
!3348 = distinct !{!3348, !3331, !3349}
!3349 = !DILocation(line: 1840, column: 3, scope: !3324)
!3350 = !DILocation(line: 1841, column: 2, scope: !3313)
!3351 = !DILocation(line: 1833, column: 40, scope: !3308)
!3352 = !DILocation(line: 1833, column: 2, scope: !3308)
!3353 = distinct !{!3353, !3311, !3354}
!3354 = !DILocation(line: 1841, column: 2, scope: !3305)
!3355 = !DILocation(line: 1843, column: 35, scope: !3112)
!3356 = !DILocation(line: 1843, column: 12, scope: !3112)
!3357 = !DILocation(line: 1843, column: 10, scope: !3112)
!3358 = !DILocation(line: 1844, column: 13, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1844, column: 2)
!3360 = !DILocation(line: 1844, column: 7, scope: !3359)
!3361 = !DILocation(line: 1844, column: 18, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 1844, column: 2)
!3363 = !DILocation(line: 1844, column: 26, scope: !3362)
!3364 = !DILocation(line: 1844, column: 24, scope: !3362)
!3365 = !DILocation(line: 1844, column: 2, scope: !3359)
!3366 = !DILocalVariable(name: "v", scope: !3367, file: !3, line: 1845, type: !3368)
!3367 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 1844, column: 44)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGVert", file: !3126, line: 34, baseType: !2413)
!3370 = !DILocation(line: 1845, column: 12, scope: !3367)
!3371 = !DILocation(line: 1845, column: 16, scope: !3367)
!3372 = !DILocation(line: 1845, column: 23, scope: !3367)
!3373 = !DILocation(line: 1845, column: 31, scope: !3367)
!3374 = !DILocation(line: 1845, column: 38, scope: !3367)
!3375 = !DILocation(line: 1847, column: 31, scope: !3367)
!3376 = !DILocation(line: 1847, column: 35, scope: !3367)
!3377 = !DILocation(line: 1847, column: 8, scope: !3367)
!3378 = !DILocation(line: 1847, column: 6, scope: !3367)
!3379 = !DILocation(line: 1848, column: 32, scope: !3367)
!3380 = !DILocation(line: 1848, column: 14, scope: !3367)
!3381 = !DILocation(line: 1848, column: 37, scope: !3367)
!3382 = !DILocation(line: 1848, column: 43, scope: !3367)
!3383 = !DILocation(line: 1848, column: 46, scope: !3367)
!3384 = !DILocation(line: 1848, column: 3, scope: !3367)
!3385 = !DILocation(line: 1849, column: 4, scope: !3367)
!3386 = !DILocation(line: 1850, column: 2, scope: !3367)
!3387 = !DILocation(line: 1844, column: 40, scope: !3362)
!3388 = !DILocation(line: 1844, column: 2, scope: !3362)
!3389 = distinct !{!3389, !3365, !3390}
!3390 = !DILocation(line: 1850, column: 2, scope: !3359)
!3391 = !DILocation(line: 1852, column: 27, scope: !3112)
!3392 = !DILocation(line: 1852, column: 2, scope: !3112)
!3393 = !DILocation(line: 1853, column: 1, scope: !3112)
!3394 = distinct !DISubprogram(name: "multiresModifier_reshape", scope: !3, file: !3, line: 423, type: !3395, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!196, !2687, !2391, !2689, !2689}
!3397 = !DILocalVariable(name: "scene", arg: 1, scope: !3394, file: !3, line: 423, type: !2687)
!3398 = !DILocation(line: 423, column: 37, scope: !3394)
!3399 = !DILocalVariable(name: "mmd", arg: 2, scope: !3394, file: !3, line: 423, type: !2391)
!3400 = !DILocation(line: 423, column: 66, scope: !3394)
!3401 = !DILocalVariable(name: "dst", arg: 3, scope: !3394, file: !3, line: 423, type: !2689)
!3402 = !DILocation(line: 423, column: 79, scope: !3394)
!3403 = !DILocalVariable(name: "src", arg: 4, scope: !3394, file: !3, line: 423, type: !2689)
!3404 = !DILocation(line: 423, column: 92, scope: !3394)
!3405 = !DILocalVariable(name: "srcdm", scope: !3394, file: !3, line: 425, type: !915)
!3406 = !DILocation(line: 425, column: 15, scope: !3394)
!3407 = !DILocation(line: 425, column: 46, scope: !3394)
!3408 = !DILocation(line: 425, column: 53, scope: !3394)
!3409 = !DILocation(line: 425, column: 58, scope: !3394)
!3410 = !DILocation(line: 425, column: 23, scope: !3394)
!3411 = !DILocation(line: 426, column: 40, scope: !3394)
!3412 = !DILocation(line: 426, column: 47, scope: !3394)
!3413 = !DILocation(line: 426, column: 52, scope: !3394)
!3414 = !DILocation(line: 426, column: 57, scope: !3394)
!3415 = !DILocation(line: 426, column: 9, scope: !3394)
!3416 = !DILocation(line: 426, column: 2, scope: !3394)
!3417 = distinct !DISubprogram(name: "multiresModifier_reshapeFromDeformMod", scope: !3, file: !3, line: 429, type: !3418, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!196, !2687, !2391, !2689, !264}
!3420 = !DILocalVariable(name: "scene", arg: 1, scope: !3417, file: !3, line: 429, type: !2687)
!3421 = !DILocation(line: 429, column: 50, scope: !3417)
!3422 = !DILocalVariable(name: "mmd", arg: 2, scope: !3417, file: !3, line: 429, type: !2391)
!3423 = !DILocation(line: 429, column: 79, scope: !3417)
!3424 = !DILocalVariable(name: "ob", arg: 3, scope: !3417, file: !3, line: 430, type: !2689)
!3425 = !DILocation(line: 430, column: 51, scope: !3417)
!3426 = !DILocalVariable(name: "md", arg: 4, scope: !3417, file: !3, line: 430, type: !264)
!3427 = !DILocation(line: 430, column: 69, scope: !3417)
!3428 = !DILocalVariable(name: "mti", scope: !3417, file: !3, line: 432, type: !2702)
!3429 = !DILocation(line: 432, column: 20, scope: !3417)
!3430 = !DILocation(line: 432, column: 47, scope: !3417)
!3431 = !DILocation(line: 432, column: 51, scope: !3417)
!3432 = !DILocation(line: 432, column: 26, scope: !3417)
!3433 = !DILocalVariable(name: "dm", scope: !3417, file: !3, line: 433, type: !915)
!3434 = !DILocation(line: 433, column: 15, scope: !3417)
!3435 = !DILocalVariable(name: "ndm", scope: !3417, file: !3, line: 433, type: !915)
!3436 = !DILocation(line: 433, column: 20, scope: !3417)
!3437 = !DILocalVariable(name: "numVerts", scope: !3417, file: !3, line: 434, type: !196)
!3438 = !DILocation(line: 434, column: 6, scope: !3417)
!3439 = !DILocalVariable(name: "result", scope: !3417, file: !3, line: 434, type: !196)
!3440 = !DILocation(line: 434, column: 16, scope: !3417)
!3441 = !DILocalVariable(name: "deformedVerts", scope: !3417, file: !3, line: 435, type: !413)
!3442 = !DILocation(line: 435, column: 10, scope: !3417)
!3443 = !DILocation(line: 437, column: 25, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 437, column: 6)
!3445 = !DILocation(line: 437, column: 29, scope: !3444)
!3446 = !DILocation(line: 437, column: 6, scope: !3444)
!3447 = !DILocation(line: 437, column: 47, scope: !3444)
!3448 = !DILocation(line: 437, column: 6, scope: !3417)
!3449 = !DILocation(line: 438, column: 3, scope: !3444)
!3450 = !DILocation(line: 441, column: 23, scope: !3417)
!3451 = !DILocation(line: 441, column: 30, scope: !3417)
!3452 = !DILocation(line: 441, column: 35, scope: !3417)
!3453 = !DILocation(line: 441, column: 7, scope: !3417)
!3454 = !DILocation(line: 441, column: 5, scope: !3417)
!3455 = !DILocation(line: 442, column: 13, scope: !3417)
!3456 = !DILocation(line: 442, column: 17, scope: !3417)
!3457 = !DILocation(line: 442, column: 29, scope: !3417)
!3458 = !DILocation(line: 442, column: 11, scope: !3417)
!3459 = !DILocation(line: 443, column: 18, scope: !3417)
!3460 = !DILocation(line: 443, column: 49, scope: !3417)
!3461 = !DILocation(line: 443, column: 47, scope: !3417)
!3462 = !DILocation(line: 443, column: 16, scope: !3417)
!3463 = !DILocation(line: 445, column: 2, scope: !3417)
!3464 = !DILocation(line: 445, column: 6, scope: !3417)
!3465 = !DILocation(line: 445, column: 17, scope: !3417)
!3466 = !DILocation(line: 445, column: 21, scope: !3417)
!3467 = !DILocation(line: 446, column: 2, scope: !3417)
!3468 = !DILocation(line: 446, column: 7, scope: !3417)
!3469 = !DILocation(line: 446, column: 19, scope: !3417)
!3470 = !DILocation(line: 446, column: 23, scope: !3417)
!3471 = !DILocation(line: 446, column: 27, scope: !3417)
!3472 = !DILocation(line: 446, column: 31, scope: !3417)
!3473 = !DILocation(line: 446, column: 46, scope: !3417)
!3474 = !DILocation(line: 448, column: 18, scope: !3417)
!3475 = !DILocation(line: 448, column: 8, scope: !3417)
!3476 = !DILocation(line: 448, column: 6, scope: !3417)
!3477 = !DILocation(line: 449, column: 25, scope: !3417)
!3478 = !DILocation(line: 449, column: 30, scope: !3417)
!3479 = !DILocation(line: 449, column: 2, scope: !3417)
!3480 = !DILocation(line: 451, column: 2, scope: !3417)
!3481 = !DILocation(line: 451, column: 12, scope: !3417)
!3482 = !DILocation(line: 452, column: 2, scope: !3417)
!3483 = !DILocation(line: 452, column: 6, scope: !3417)
!3484 = !DILocation(line: 452, column: 14, scope: !3417)
!3485 = !DILocation(line: 455, column: 42, scope: !3417)
!3486 = !DILocation(line: 455, column: 49, scope: !3417)
!3487 = !DILocation(line: 455, column: 54, scope: !3417)
!3488 = !DILocation(line: 455, column: 58, scope: !3417)
!3489 = !DILocation(line: 455, column: 11, scope: !3417)
!3490 = !DILocation(line: 455, column: 9, scope: !3417)
!3491 = !DILocation(line: 458, column: 2, scope: !3417)
!3492 = !DILocation(line: 458, column: 7, scope: !3417)
!3493 = !DILocation(line: 458, column: 15, scope: !3417)
!3494 = !DILocation(line: 460, column: 9, scope: !3417)
!3495 = !DILocation(line: 460, column: 2, scope: !3417)
!3496 = !DILocation(line: 461, column: 1, scope: !3417)
!3497 = distinct !DISubprogram(name: "multires_get_level", scope: !3, file: !3, line: 339, type: !3498, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!196, !2689, !2391, !626, !626}
!3500 = !DILocalVariable(name: "ob", arg: 1, scope: !3497, file: !3, line: 339, type: !2689)
!3501 = !DILocation(line: 339, column: 39, scope: !3497)
!3502 = !DILocalVariable(name: "mmd", arg: 2, scope: !3497, file: !3, line: 339, type: !2391)
!3503 = !DILocation(line: 339, column: 65, scope: !3497)
!3504 = !DILocalVariable(name: "render", arg: 3, scope: !3497, file: !3, line: 340, type: !626)
!3505 = !DILocation(line: 340, column: 36, scope: !3497)
!3506 = !DILocalVariable(name: "ignore_simplify", arg: 4, scope: !3497, file: !3, line: 340, type: !626)
!3507 = !DILocation(line: 340, column: 49, scope: !3497)
!3508 = !DILocation(line: 342, column: 6, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 342, column: 6)
!3510 = !DILocation(line: 342, column: 6, scope: !3497)
!3511 = !DILocation(line: 343, column: 11, scope: !3509)
!3512 = !DILocation(line: 343, column: 16, scope: !3509)
!3513 = !DILocation(line: 343, column: 25, scope: !3509)
!3514 = !DILocation(line: 343, column: 10, scope: !3509)
!3515 = !DILocation(line: 343, column: 60, scope: !3509)
!3516 = !DILocation(line: 343, column: 65, scope: !3509)
!3517 = !DILocation(line: 343, column: 74, scope: !3509)
!3518 = !DILocation(line: 343, column: 81, scope: !3509)
!3519 = !DILocation(line: 343, column: 84, scope: !3509)
!3520 = !DILocation(line: 343, column: 89, scope: !3509)
!3521 = !DILocation(line: 343, column: 34, scope: !3509)
!3522 = !DILocation(line: 343, column: 102, scope: !3509)
!3523 = !DILocation(line: 343, column: 107, scope: !3509)
!3524 = !DILocation(line: 343, column: 3, scope: !3509)
!3525 = !DILocation(line: 344, column: 11, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 344, column: 11)
!3527 = !DILocation(line: 344, column: 15, scope: !3526)
!3528 = !DILocation(line: 344, column: 20, scope: !3526)
!3529 = !DILocation(line: 344, column: 11, scope: !3509)
!3530 = !DILocation(line: 345, column: 10, scope: !3526)
!3531 = !DILocation(line: 345, column: 15, scope: !3526)
!3532 = !DILocation(line: 345, column: 3, scope: !3526)
!3533 = !DILocation(line: 346, column: 11, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 346, column: 11)
!3535 = !DILocation(line: 346, column: 11, scope: !3526)
!3536 = !DILocation(line: 347, column: 10, scope: !3534)
!3537 = !DILocation(line: 347, column: 15, scope: !3534)
!3538 = !DILocation(line: 347, column: 3, scope: !3534)
!3539 = !DILocation(line: 349, column: 11, scope: !3534)
!3540 = !DILocation(line: 349, column: 16, scope: !3534)
!3541 = !DILocation(line: 349, column: 25, scope: !3534)
!3542 = !DILocation(line: 349, column: 10, scope: !3534)
!3543 = !DILocation(line: 349, column: 60, scope: !3534)
!3544 = !DILocation(line: 349, column: 65, scope: !3534)
!3545 = !DILocation(line: 349, column: 74, scope: !3534)
!3546 = !DILocation(line: 349, column: 81, scope: !3534)
!3547 = !DILocation(line: 349, column: 84, scope: !3534)
!3548 = !DILocation(line: 349, column: 89, scope: !3534)
!3549 = !DILocation(line: 349, column: 34, scope: !3534)
!3550 = !DILocation(line: 349, column: 96, scope: !3534)
!3551 = !DILocation(line: 349, column: 101, scope: !3534)
!3552 = !DILocation(line: 349, column: 3, scope: !3534)
!3553 = !DILocation(line: 350, column: 1, scope: !3497)
!3554 = distinct !DISubprogram(name: "multiresModifier_set_levels_from_disps", scope: !3, file: !3, line: 498, type: !3555, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{null, !2391, !2689}
!3557 = !DILocalVariable(name: "mmd", arg: 1, scope: !3554, file: !3, line: 498, type: !2391)
!3558 = !DILocation(line: 498, column: 67, scope: !3554)
!3559 = !DILocalVariable(name: "ob", arg: 2, scope: !3554, file: !3, line: 498, type: !2689)
!3560 = !DILocation(line: 498, column: 80, scope: !3554)
!3561 = !DILocalVariable(name: "me", scope: !3554, file: !3, line: 500, type: !2466)
!3562 = !DILocation(line: 500, column: 8, scope: !3554)
!3563 = !DILocation(line: 500, column: 13, scope: !3554)
!3564 = !DILocation(line: 500, column: 17, scope: !3554)
!3565 = !DILocalVariable(name: "mdisp", scope: !3554, file: !3, line: 501, type: !3566)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDisps", file: !257, line: 196, baseType: !3568)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDisps", file: !257, line: 186, size: 192, elements: !3569)
!3569 = !{!3570, !3571, !3572, !3573}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "totdisp", scope: !3568, file: !257, line: 188, baseType: !196, size: 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3568, file: !257, line: 189, baseType: !196, size: 32, offset: 32)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "disps", scope: !3568, file: !257, line: 190, baseType: !413, size: 64, offset: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "hidden", scope: !3568, file: !257, line: 195, baseType: !645, size: 64, offset: 128)
!3574 = !DILocation(line: 501, column: 10, scope: !3554)
!3575 = !DILocation(line: 503, column: 6, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 503, column: 6)
!3577 = !DILocation(line: 503, column: 10, scope: !3576)
!3578 = !DILocation(line: 503, column: 6, scope: !3554)
!3579 = !DILocation(line: 504, column: 33, scope: !3576)
!3580 = !DILocation(line: 504, column: 37, scope: !3576)
!3581 = !DILocation(line: 504, column: 50, scope: !3576)
!3582 = !DILocation(line: 504, column: 54, scope: !3576)
!3583 = !DILocation(line: 504, column: 11, scope: !3576)
!3584 = !DILocation(line: 504, column: 9, scope: !3576)
!3585 = !DILocation(line: 504, column: 3, scope: !3576)
!3586 = !DILocation(line: 506, column: 33, scope: !3576)
!3587 = !DILocation(line: 506, column: 37, scope: !3576)
!3588 = !DILocation(line: 506, column: 11, scope: !3576)
!3589 = !DILocation(line: 506, column: 9, scope: !3576)
!3590 = !DILocation(line: 508, column: 6, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 508, column: 6)
!3592 = !DILocation(line: 508, column: 6, scope: !3554)
!3593 = !DILocation(line: 509, column: 39, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 508, column: 13)
!3595 = !DILocation(line: 509, column: 17, scope: !3594)
!3596 = !DILocation(line: 509, column: 3, scope: !3594)
!3597 = !DILocation(line: 509, column: 8, scope: !3594)
!3598 = !DILocation(line: 509, column: 15, scope: !3594)
!3599 = !DILocation(line: 510, column: 14, scope: !3594)
!3600 = !DILocation(line: 510, column: 3, scope: !3594)
!3601 = !DILocation(line: 510, column: 8, scope: !3594)
!3602 = !DILocation(line: 510, column: 12, scope: !3594)
!3603 = !DILocation(line: 511, column: 20, scope: !3594)
!3604 = !DILocation(line: 511, column: 3, scope: !3594)
!3605 = !DILocation(line: 511, column: 8, scope: !3594)
!3606 = !DILocation(line: 511, column: 18, scope: !3594)
!3607 = !DILocation(line: 512, column: 20, scope: !3594)
!3608 = !DILocation(line: 512, column: 3, scope: !3594)
!3609 = !DILocation(line: 512, column: 8, scope: !3594)
!3610 = !DILocation(line: 512, column: 18, scope: !3594)
!3611 = !DILocation(line: 513, column: 2, scope: !3594)
!3612 = !DILocation(line: 514, column: 1, scope: !3554)
!3613 = distinct !DISubprogram(name: "get_levels_from_disps", scope: !3, file: !3, line: 464, type: !3614, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!196, !2689}
!3616 = !DILocalVariable(name: "ob", arg: 1, scope: !3613, file: !3, line: 464, type: !2689)
!3617 = !DILocation(line: 464, column: 42, scope: !3613)
!3618 = !DILocalVariable(name: "me", scope: !3613, file: !3, line: 466, type: !2466)
!3619 = !DILocation(line: 466, column: 8, scope: !3613)
!3620 = !DILocation(line: 466, column: 13, scope: !3613)
!3621 = !DILocation(line: 466, column: 17, scope: !3613)
!3622 = !DILocalVariable(name: "mdisp", scope: !3613, file: !3, line: 467, type: !3566)
!3623 = !DILocation(line: 467, column: 10, scope: !3613)
!3624 = !DILocalVariable(name: "md", scope: !3613, file: !3, line: 467, type: !3566)
!3625 = !DILocation(line: 467, column: 18, scope: !3613)
!3626 = !DILocalVariable(name: "i", scope: !3613, file: !3, line: 468, type: !196)
!3627 = !DILocation(line: 468, column: 6, scope: !3613)
!3628 = !DILocalVariable(name: "j", scope: !3613, file: !3, line: 468, type: !196)
!3629 = !DILocation(line: 468, column: 9, scope: !3613)
!3630 = !DILocalVariable(name: "totlvl", scope: !3613, file: !3, line: 468, type: !196)
!3631 = !DILocation(line: 468, column: 12, scope: !3613)
!3632 = !DILocation(line: 470, column: 32, scope: !3613)
!3633 = !DILocation(line: 470, column: 36, scope: !3613)
!3634 = !DILocation(line: 470, column: 10, scope: !3613)
!3635 = !DILocation(line: 470, column: 8, scope: !3613)
!3636 = !DILocation(line: 472, column: 9, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 472, column: 2)
!3638 = !DILocation(line: 472, column: 7, scope: !3637)
!3639 = !DILocation(line: 472, column: 14, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 472, column: 2)
!3641 = !DILocation(line: 472, column: 18, scope: !3640)
!3642 = !DILocation(line: 472, column: 22, scope: !3640)
!3643 = !DILocation(line: 472, column: 16, scope: !3640)
!3644 = !DILocation(line: 472, column: 2, scope: !3637)
!3645 = !DILocation(line: 473, column: 8, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 472, column: 36)
!3647 = !DILocation(line: 473, column: 16, scope: !3646)
!3648 = !DILocation(line: 473, column: 20, scope: !3646)
!3649 = !DILocation(line: 473, column: 26, scope: !3646)
!3650 = !DILocation(line: 473, column: 29, scope: !3646)
!3651 = !DILocation(line: 473, column: 14, scope: !3646)
!3652 = !DILocation(line: 473, column: 6, scope: !3646)
!3653 = !DILocation(line: 475, column: 10, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 475, column: 3)
!3655 = !DILocation(line: 475, column: 8, scope: !3654)
!3656 = !DILocation(line: 475, column: 15, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 475, column: 3)
!3658 = !DILocation(line: 475, column: 19, scope: !3657)
!3659 = !DILocation(line: 475, column: 23, scope: !3657)
!3660 = !DILocation(line: 475, column: 29, scope: !3657)
!3661 = !DILocation(line: 475, column: 32, scope: !3657)
!3662 = !DILocation(line: 475, column: 17, scope: !3657)
!3663 = !DILocation(line: 475, column: 3, scope: !3654)
!3664 = !DILocation(line: 476, column: 8, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 476, column: 8)
!3666 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 475, column: 52)
!3667 = !DILocation(line: 476, column: 12, scope: !3665)
!3668 = !DILocation(line: 476, column: 20, scope: !3665)
!3669 = !DILocation(line: 476, column: 8, scope: !3666)
!3670 = !DILocation(line: 476, column: 26, scope: !3665)
!3671 = !DILocation(line: 478, column: 4, scope: !3666)
!3672 = !DILocalVariable(name: "side", scope: !3673, file: !3, line: 479, type: !196)
!3673 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 478, column: 14)
!3674 = !DILocation(line: 479, column: 9, scope: !3673)
!3675 = !DILocation(line: 479, column: 23, scope: !3673)
!3676 = !DILocation(line: 479, column: 30, scope: !3673)
!3677 = !DILocation(line: 479, column: 19, scope: !3673)
!3678 = !DILocation(line: 479, column: 36, scope: !3673)
!3679 = !DILocalVariable(name: "lvl_totdisp", scope: !3673, file: !3, line: 480, type: !196)
!3680 = !DILocation(line: 480, column: 9, scope: !3673)
!3681 = !DILocation(line: 480, column: 23, scope: !3673)
!3682 = !DILocation(line: 480, column: 30, scope: !3673)
!3683 = !DILocation(line: 480, column: 28, scope: !3673)
!3684 = !DILocation(line: 481, column: 9, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 481, column: 9)
!3686 = !DILocation(line: 481, column: 13, scope: !3685)
!3687 = !DILocation(line: 481, column: 24, scope: !3685)
!3688 = !DILocation(line: 481, column: 21, scope: !3685)
!3689 = !DILocation(line: 481, column: 9, scope: !3673)
!3690 = !DILocation(line: 482, column: 6, scope: !3685)
!3691 = !DILocation(line: 483, column: 14, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 483, column: 14)
!3693 = !DILocation(line: 483, column: 18, scope: !3692)
!3694 = !DILocation(line: 483, column: 28, scope: !3692)
!3695 = !DILocation(line: 483, column: 26, scope: !3692)
!3696 = !DILocation(line: 483, column: 14, scope: !3685)
!3697 = !DILocation(line: 484, column: 12, scope: !3692)
!3698 = !DILocation(line: 484, column: 6, scope: !3692)
!3699 = !DILocation(line: 486, column: 12, scope: !3692)
!3700 = distinct !{!3700, !3671, !3701}
!3701 = !DILocation(line: 488, column: 4, scope: !3666)
!3702 = !DILocation(line: 490, column: 4, scope: !3666)
!3703 = !DILocation(line: 475, column: 42, scope: !3657)
!3704 = !DILocation(line: 475, column: 48, scope: !3657)
!3705 = !DILocation(line: 475, column: 3, scope: !3657)
!3706 = distinct !{!3706, !3663, !3707}
!3707 = !DILocation(line: 491, column: 3, scope: !3654)
!3708 = !DILocation(line: 492, column: 2, scope: !3646)
!3709 = !DILocation(line: 472, column: 31, scope: !3640)
!3710 = !DILocation(line: 472, column: 2, scope: !3640)
!3711 = distinct !{!3711, !3644, !3712}
!3712 = !DILocation(line: 492, column: 2, scope: !3637)
!3713 = !DILocation(line: 494, column: 9, scope: !3613)
!3714 = !DILocation(line: 494, column: 2, scope: !3613)
!3715 = distinct !DISubprogram(name: "multiresModifier_del_levels", scope: !3, file: !3, line: 683, type: !3716, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{null, !2391, !2689, !196}
!3718 = !DILocalVariable(name: "mmd", arg: 1, scope: !3715, file: !3, line: 683, type: !2391)
!3719 = !DILocation(line: 683, column: 56, scope: !3715)
!3720 = !DILocalVariable(name: "ob", arg: 2, scope: !3715, file: !3, line: 683, type: !2689)
!3721 = !DILocation(line: 683, column: 69, scope: !3715)
!3722 = !DILocalVariable(name: "direction", arg: 3, scope: !3715, file: !3, line: 683, type: !196)
!3723 = !DILocation(line: 683, column: 77, scope: !3715)
!3724 = !DILocalVariable(name: "me", scope: !3715, file: !3, line: 685, type: !2466)
!3725 = !DILocation(line: 685, column: 8, scope: !3715)
!3726 = !DILocation(line: 685, column: 34, scope: !3715)
!3727 = !DILocation(line: 685, column: 13, scope: !3715)
!3728 = !DILocalVariable(name: "lvl", scope: !3715, file: !3, line: 686, type: !196)
!3729 = !DILocation(line: 686, column: 6, scope: !3715)
!3730 = !DILocation(line: 686, column: 31, scope: !3715)
!3731 = !DILocation(line: 686, column: 35, scope: !3715)
!3732 = !DILocation(line: 686, column: 12, scope: !3715)
!3733 = !DILocalVariable(name: "levels", scope: !3715, file: !3, line: 687, type: !196)
!3734 = !DILocation(line: 687, column: 6, scope: !3715)
!3735 = !DILocation(line: 687, column: 15, scope: !3715)
!3736 = !DILocation(line: 687, column: 20, scope: !3715)
!3737 = !DILocation(line: 687, column: 29, scope: !3715)
!3738 = !DILocation(line: 687, column: 27, scope: !3715)
!3739 = !DILocalVariable(name: "mdisps", scope: !3715, file: !3, line: 688, type: !3566)
!3740 = !DILocation(line: 688, column: 10, scope: !3715)
!3741 = !DILocation(line: 690, column: 26, scope: !3715)
!3742 = !DILocation(line: 690, column: 30, scope: !3715)
!3743 = !DILocation(line: 690, column: 35, scope: !3715)
!3744 = !DILocation(line: 690, column: 2, scope: !3715)
!3745 = !DILocation(line: 691, column: 28, scope: !3715)
!3746 = !DILocation(line: 691, column: 32, scope: !3715)
!3747 = !DILocation(line: 691, column: 40, scope: !3715)
!3748 = !DILocation(line: 691, column: 44, scope: !3715)
!3749 = !DILocation(line: 691, column: 64, scope: !3715)
!3750 = !DILocation(line: 691, column: 68, scope: !3715)
!3751 = !DILocation(line: 691, column: 2, scope: !3715)
!3752 = !DILocation(line: 692, column: 33, scope: !3715)
!3753 = !DILocation(line: 692, column: 37, scope: !3715)
!3754 = !DILocation(line: 692, column: 11, scope: !3715)
!3755 = !DILocation(line: 692, column: 9, scope: !3715)
!3756 = !DILocation(line: 694, column: 24, scope: !3715)
!3757 = !DILocation(line: 694, column: 2, scope: !3715)
!3758 = !DILocation(line: 696, column: 6, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 696, column: 6)
!3760 = !DILocation(line: 696, column: 13, scope: !3759)
!3761 = !DILocation(line: 696, column: 16, scope: !3759)
!3762 = !DILocation(line: 696, column: 23, scope: !3759)
!3763 = !DILocation(line: 696, column: 27, scope: !3759)
!3764 = !DILocation(line: 696, column: 30, scope: !3759)
!3765 = !DILocation(line: 696, column: 40, scope: !3759)
!3766 = !DILocation(line: 696, column: 6, scope: !3715)
!3767 = !DILocation(line: 697, column: 23, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 696, column: 46)
!3769 = !DILocation(line: 697, column: 28, scope: !3768)
!3770 = !DILocation(line: 697, column: 32, scope: !3768)
!3771 = !DILocation(line: 697, column: 3, scope: !3768)
!3772 = !DILocation(line: 698, column: 2, scope: !3768)
!3773 = !DILocation(line: 700, column: 25, scope: !3715)
!3774 = !DILocation(line: 700, column: 29, scope: !3715)
!3775 = !DILocation(line: 700, column: 34, scope: !3715)
!3776 = !DILocation(line: 700, column: 2, scope: !3715)
!3777 = !DILocation(line: 701, column: 1, scope: !3715)
!3778 = distinct !DISubprogram(name: "multires_set_tot_mdisps", scope: !3, file: !3, line: 516, type: !3779, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{null, !2466, !196}
!3781 = !DILocalVariable(name: "me", arg: 1, scope: !3778, file: !3, line: 516, type: !2466)
!3782 = !DILocation(line: 516, column: 43, scope: !3778)
!3783 = !DILocalVariable(name: "lvl", arg: 2, scope: !3778, file: !3, line: 516, type: !196)
!3784 = !DILocation(line: 516, column: 51, scope: !3778)
!3785 = !DILocalVariable(name: "mdisps", scope: !3778, file: !3, line: 518, type: !3566)
!3786 = !DILocation(line: 518, column: 10, scope: !3778)
!3787 = !DILocation(line: 518, column: 41, scope: !3778)
!3788 = !DILocation(line: 518, column: 45, scope: !3778)
!3789 = !DILocation(line: 518, column: 19, scope: !3778)
!3790 = !DILocalVariable(name: "i", scope: !3778, file: !3, line: 519, type: !196)
!3791 = !DILocation(line: 519, column: 6, scope: !3778)
!3792 = !DILocation(line: 521, column: 6, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 521, column: 6)
!3794 = !DILocation(line: 521, column: 6, scope: !3778)
!3795 = !DILocation(line: 522, column: 10, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 522, column: 3)
!3797 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 521, column: 14)
!3798 = !DILocation(line: 522, column: 8, scope: !3796)
!3799 = !DILocation(line: 522, column: 15, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 522, column: 3)
!3801 = !DILocation(line: 522, column: 19, scope: !3800)
!3802 = !DILocation(line: 522, column: 23, scope: !3800)
!3803 = !DILocation(line: 522, column: 17, scope: !3800)
!3804 = !DILocation(line: 522, column: 3, scope: !3796)
!3805 = !DILocation(line: 523, column: 40, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 522, column: 47)
!3807 = !DILocation(line: 523, column: 22, scope: !3806)
!3808 = !DILocation(line: 523, column: 4, scope: !3806)
!3809 = !DILocation(line: 523, column: 12, scope: !3806)
!3810 = !DILocation(line: 523, column: 20, scope: !3806)
!3811 = !DILocation(line: 524, column: 20, scope: !3806)
!3812 = !DILocation(line: 524, column: 4, scope: !3806)
!3813 = !DILocation(line: 524, column: 12, scope: !3806)
!3814 = !DILocation(line: 524, column: 18, scope: !3806)
!3815 = !DILocation(line: 525, column: 3, scope: !3806)
!3816 = !DILocation(line: 522, column: 33, scope: !3800)
!3817 = !DILocation(line: 522, column: 43, scope: !3800)
!3818 = !DILocation(line: 522, column: 3, scope: !3800)
!3819 = distinct !{!3819, !3804, !3820}
!3820 = !DILocation(line: 525, column: 3, scope: !3796)
!3821 = !DILocation(line: 526, column: 2, scope: !3797)
!3822 = !DILocation(line: 527, column: 1, scope: !3778)
!3823 = distinct !DISubprogram(name: "multires_del_higher", scope: !3, file: !3, line: 617, type: !3716, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!3824 = !DILocalVariable(name: "mmd", arg: 1, scope: !3823, file: !3, line: 617, type: !2391)
!3825 = !DILocation(line: 617, column: 55, scope: !3823)
!3826 = !DILocalVariable(name: "ob", arg: 2, scope: !3823, file: !3, line: 617, type: !2689)
!3827 = !DILocation(line: 617, column: 68, scope: !3823)
!3828 = !DILocalVariable(name: "lvl", arg: 3, scope: !3823, file: !3, line: 617, type: !196)
!3829 = !DILocation(line: 617, column: 76, scope: !3823)
!3830 = !DILocalVariable(name: "me", scope: !3823, file: !3, line: 619, type: !2466)
!3831 = !DILocation(line: 619, column: 8, scope: !3823)
!3832 = !DILocation(line: 619, column: 21, scope: !3823)
!3833 = !DILocation(line: 619, column: 25, scope: !3823)
!3834 = !DILocation(line: 619, column: 13, scope: !3823)
!3835 = !DILocalVariable(name: "levels", scope: !3823, file: !3, line: 620, type: !196)
!3836 = !DILocation(line: 620, column: 6, scope: !3823)
!3837 = !DILocation(line: 620, column: 15, scope: !3823)
!3838 = !DILocation(line: 620, column: 20, scope: !3823)
!3839 = !DILocation(line: 620, column: 29, scope: !3823)
!3840 = !DILocation(line: 620, column: 27, scope: !3823)
!3841 = !DILocalVariable(name: "mdisps", scope: !3823, file: !3, line: 621, type: !3566)
!3842 = !DILocation(line: 621, column: 10, scope: !3823)
!3843 = !DILocalVariable(name: "gpm", scope: !3823, file: !3, line: 622, type: !3844)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DIDerivedType(tag: DW_TAG_typedef, name: "GridPaintMask", file: !257, line: 261, baseType: !3846)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GridPaintMask", file: !257, line: 253, size: 128, elements: !3847)
!3847 = !{!3848, !3849, !3850}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3846, file: !257, line: 255, baseType: !418, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3846, file: !257, line: 258, baseType: !7, size: 32, offset: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3846, file: !257, line: 260, baseType: !196, size: 32, offset: 96)
!3851 = !DILocation(line: 622, column: 17, scope: !3823)
!3852 = !DILocation(line: 624, column: 26, scope: !3823)
!3853 = !DILocation(line: 624, column: 30, scope: !3823)
!3854 = !DILocation(line: 624, column: 35, scope: !3823)
!3855 = !DILocation(line: 624, column: 2, scope: !3823)
!3856 = !DILocation(line: 625, column: 28, scope: !3823)
!3857 = !DILocation(line: 625, column: 32, scope: !3823)
!3858 = !DILocation(line: 625, column: 40, scope: !3823)
!3859 = !DILocation(line: 625, column: 44, scope: !3823)
!3860 = !DILocation(line: 625, column: 64, scope: !3823)
!3861 = !DILocation(line: 625, column: 68, scope: !3823)
!3862 = !DILocation(line: 625, column: 2, scope: !3823)
!3863 = !DILocation(line: 626, column: 33, scope: !3823)
!3864 = !DILocation(line: 626, column: 37, scope: !3823)
!3865 = !DILocation(line: 626, column: 11, scope: !3823)
!3866 = !DILocation(line: 626, column: 9, scope: !3823)
!3867 = !DILocation(line: 627, column: 30, scope: !3823)
!3868 = !DILocation(line: 627, column: 34, scope: !3823)
!3869 = !DILocation(line: 627, column: 8, scope: !3823)
!3870 = !DILocation(line: 627, column: 6, scope: !3823)
!3871 = !DILocation(line: 629, column: 24, scope: !3823)
!3872 = !DILocation(line: 629, column: 2, scope: !3823)
!3873 = !DILocation(line: 631, column: 6, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 631, column: 6)
!3875 = !DILocation(line: 631, column: 13, scope: !3874)
!3876 = !DILocation(line: 631, column: 16, scope: !3874)
!3877 = !DILocation(line: 631, column: 23, scope: !3874)
!3878 = !DILocation(line: 631, column: 6, scope: !3823)
!3879 = !DILocation(line: 632, column: 7, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 632, column: 7)
!3881 = distinct !DILexicalBlock(scope: !3874, file: !3, line: 631, column: 28)
!3882 = !DILocation(line: 632, column: 11, scope: !3880)
!3883 = !DILocation(line: 632, column: 7, scope: !3881)
!3884 = !DILocalVariable(name: "nsize", scope: !3885, file: !3, line: 634, type: !196)
!3885 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 632, column: 16)
!3886 = !DILocation(line: 634, column: 8, scope: !3885)
!3887 = !DILocation(line: 634, column: 34, scope: !3885)
!3888 = !DILocation(line: 634, column: 16, scope: !3885)
!3889 = !DILocalVariable(name: "hsize", scope: !3885, file: !3, line: 635, type: !196)
!3890 = !DILocation(line: 635, column: 8, scope: !3885)
!3891 = !DILocation(line: 635, column: 34, scope: !3885)
!3892 = !DILocation(line: 635, column: 39, scope: !3885)
!3893 = !DILocation(line: 635, column: 16, scope: !3885)
!3894 = !DILocalVariable(name: "i", scope: !3885, file: !3, line: 636, type: !196)
!3895 = !DILocation(line: 636, column: 8, scope: !3885)
!3896 = !DILocalVariable(name: "j", scope: !3885, file: !3, line: 636, type: !196)
!3897 = !DILocation(line: 636, column: 11, scope: !3885)
!3898 = !DILocation(line: 638, column: 11, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 638, column: 4)
!3900 = !DILocation(line: 638, column: 9, scope: !3899)
!3901 = !DILocation(line: 638, column: 16, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 638, column: 4)
!3903 = !DILocation(line: 638, column: 20, scope: !3902)
!3904 = !DILocation(line: 638, column: 24, scope: !3902)
!3905 = !DILocation(line: 638, column: 18, scope: !3902)
!3906 = !DILocation(line: 638, column: 4, scope: !3899)
!3907 = !DILocation(line: 639, column: 12, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 639, column: 5)
!3909 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 638, column: 38)
!3910 = !DILocation(line: 639, column: 10, scope: !3908)
!3911 = !DILocation(line: 639, column: 17, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 639, column: 5)
!3913 = !DILocation(line: 639, column: 21, scope: !3912)
!3914 = !DILocation(line: 639, column: 25, scope: !3912)
!3915 = !DILocation(line: 639, column: 31, scope: !3912)
!3916 = !DILocation(line: 639, column: 34, scope: !3912)
!3917 = !DILocation(line: 639, column: 19, scope: !3912)
!3918 = !DILocation(line: 639, column: 5, scope: !3908)
!3919 = !DILocalVariable(name: "g", scope: !3920, file: !3, line: 640, type: !196)
!3920 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 639, column: 48)
!3921 = !DILocation(line: 640, column: 10, scope: !3920)
!3922 = !DILocation(line: 640, column: 14, scope: !3920)
!3923 = !DILocation(line: 640, column: 18, scope: !3920)
!3924 = !DILocation(line: 640, column: 24, scope: !3920)
!3925 = !DILocation(line: 640, column: 27, scope: !3920)
!3926 = !DILocation(line: 640, column: 39, scope: !3920)
!3927 = !DILocation(line: 640, column: 37, scope: !3920)
!3928 = !DILocalVariable(name: "mdisp", scope: !3920, file: !3, line: 641, type: !3566)
!3929 = !DILocation(line: 641, column: 14, scope: !3920)
!3930 = !DILocation(line: 641, column: 23, scope: !3920)
!3931 = !DILocation(line: 641, column: 30, scope: !3920)
!3932 = !DILocalVariable(name: "disps", scope: !3920, file: !3, line: 642, type: !413)
!3933 = !DILocation(line: 642, column: 14, scope: !3920)
!3934 = !DILocalVariable(name: "ndisps", scope: !3920, file: !3, line: 642, type: !413)
!3935 = !DILocation(line: 642, column: 27, scope: !3920)
!3936 = !DILocalVariable(name: "hdisps", scope: !3920, file: !3, line: 642, type: !413)
!3937 = !DILocation(line: 642, column: 41, scope: !3920)
!3938 = !DILocalVariable(name: "totdisp", scope: !3920, file: !3, line: 643, type: !196)
!3939 = !DILocation(line: 643, column: 10, scope: !3920)
!3940 = !DILocation(line: 643, column: 38, scope: !3920)
!3941 = !DILocation(line: 643, column: 20, scope: !3920)
!3942 = !DILocation(line: 645, column: 14, scope: !3920)
!3943 = !DILocation(line: 645, column: 46, scope: !3920)
!3944 = !DILocation(line: 645, column: 44, scope: !3920)
!3945 = !DILocation(line: 645, column: 12, scope: !3920)
!3946 = !DILocation(line: 647, column: 15, scope: !3920)
!3947 = !DILocation(line: 647, column: 13, scope: !3920)
!3948 = !DILocation(line: 648, column: 15, scope: !3920)
!3949 = !DILocation(line: 648, column: 22, scope: !3920)
!3950 = !DILocation(line: 648, column: 13, scope: !3920)
!3951 = !DILocation(line: 650, column: 25, scope: !3920)
!3952 = !DILocation(line: 650, column: 33, scope: !3920)
!3953 = !DILocation(line: 650, column: 41, scope: !3920)
!3954 = !DILocation(line: 650, column: 48, scope: !3920)
!3955 = !DILocation(line: 650, column: 6, scope: !3920)
!3956 = !DILocation(line: 651, column: 10, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 651, column: 10)
!3958 = !DILocation(line: 651, column: 17, scope: !3957)
!3959 = !DILocation(line: 651, column: 10, scope: !3920)
!3960 = !DILocalVariable(name: "gh", scope: !3961, file: !3, line: 652, type: !2611)
!3961 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 651, column: 25)
!3962 = !DILocation(line: 652, column: 19, scope: !3961)
!3963 = !DILocation(line: 653, column: 45, scope: !3961)
!3964 = !DILocation(line: 653, column: 52, scope: !3961)
!3965 = !DILocation(line: 654, column: 45, scope: !3961)
!3966 = !DILocation(line: 654, column: 52, scope: !3961)
!3967 = !DILocation(line: 655, column: 45, scope: !3961)
!3968 = !DILocation(line: 653, column: 11, scope: !3961)
!3969 = !DILocation(line: 656, column: 7, scope: !3961)
!3970 = !DILocation(line: 656, column: 17, scope: !3961)
!3971 = !DILocation(line: 656, column: 24, scope: !3961)
!3972 = !DILocation(line: 657, column: 23, scope: !3961)
!3973 = !DILocation(line: 657, column: 7, scope: !3961)
!3974 = !DILocation(line: 657, column: 14, scope: !3961)
!3975 = !DILocation(line: 657, column: 21, scope: !3961)
!3976 = !DILocation(line: 658, column: 6, scope: !3961)
!3977 = !DILocation(line: 660, column: 16, scope: !3920)
!3978 = !DILocation(line: 660, column: 24, scope: !3920)
!3979 = !DILocation(line: 660, column: 22, scope: !3920)
!3980 = !DILocation(line: 660, column: 13, scope: !3920)
!3981 = !DILocation(line: 661, column: 16, scope: !3920)
!3982 = !DILocation(line: 661, column: 24, scope: !3920)
!3983 = !DILocation(line: 661, column: 22, scope: !3920)
!3984 = !DILocation(line: 661, column: 13, scope: !3920)
!3985 = !DILocation(line: 663, column: 6, scope: !3920)
!3986 = !DILocation(line: 663, column: 16, scope: !3920)
!3987 = !DILocation(line: 663, column: 23, scope: !3920)
!3988 = !DILocation(line: 664, column: 21, scope: !3920)
!3989 = !DILocation(line: 664, column: 6, scope: !3920)
!3990 = !DILocation(line: 664, column: 13, scope: !3920)
!3991 = !DILocation(line: 664, column: 19, scope: !3920)
!3992 = !DILocation(line: 665, column: 23, scope: !3920)
!3993 = !DILocation(line: 665, column: 6, scope: !3920)
!3994 = !DILocation(line: 665, column: 13, scope: !3920)
!3995 = !DILocation(line: 665, column: 21, scope: !3920)
!3996 = !DILocation(line: 666, column: 21, scope: !3920)
!3997 = !DILocation(line: 666, column: 6, scope: !3920)
!3998 = !DILocation(line: 666, column: 13, scope: !3920)
!3999 = !DILocation(line: 666, column: 19, scope: !3920)
!4000 = !DILocation(line: 668, column: 10, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 668, column: 10)
!4002 = !DILocation(line: 668, column: 10, scope: !3920)
!4003 = !DILocation(line: 669, column: 44, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 668, column: 15)
!4005 = !DILocation(line: 669, column: 48, scope: !4004)
!4006 = !DILocation(line: 669, column: 52, scope: !4004)
!4007 = !DILocation(line: 669, column: 7, scope: !4004)
!4008 = !DILocation(line: 670, column: 6, scope: !4004)
!4009 = !DILocation(line: 671, column: 5, scope: !3920)
!4010 = !DILocation(line: 639, column: 44, scope: !3912)
!4011 = !DILocation(line: 639, column: 5, scope: !3912)
!4012 = distinct !{!4012, !3918, !4013}
!4013 = !DILocation(line: 671, column: 5, scope: !3908)
!4014 = !DILocation(line: 672, column: 4, scope: !3909)
!4015 = !DILocation(line: 638, column: 33, scope: !3902)
!4016 = !DILocation(line: 638, column: 4, scope: !3902)
!4017 = distinct !{!4017, !3906, !4018}
!4018 = !DILocation(line: 672, column: 4, scope: !3899)
!4019 = !DILocation(line: 673, column: 3, scope: !3885)
!4020 = !DILocation(line: 675, column: 31, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 674, column: 8)
!4022 = !DILocation(line: 675, column: 4, scope: !4021)
!4023 = !DILocation(line: 677, column: 2, scope: !3881)
!4024 = !DILocation(line: 679, column: 25, scope: !3823)
!4025 = !DILocation(line: 679, column: 29, scope: !3823)
!4026 = !DILocation(line: 679, column: 34, scope: !3823)
!4027 = !DILocation(line: 679, column: 2, scope: !3823)
!4028 = !DILocation(line: 680, column: 1, scope: !3823)
!4029 = distinct !DISubprogram(name: "multiresModifier_base_apply", scope: !3, file: !3, line: 753, type: !3555, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4030 = !DILocalVariable(name: "mmd", arg: 1, scope: !4029, file: !3, line: 753, type: !2391)
!4031 = !DILocation(line: 753, column: 56, scope: !4029)
!4032 = !DILocalVariable(name: "ob", arg: 2, scope: !4029, file: !3, line: 753, type: !2689)
!4033 = !DILocation(line: 753, column: 69, scope: !4029)
!4034 = !DILocalVariable(name: "cddm", scope: !4029, file: !3, line: 755, type: !915)
!4035 = !DILocation(line: 755, column: 15, scope: !4029)
!4036 = !DILocalVariable(name: "dispdm", scope: !4029, file: !3, line: 755, type: !915)
!4037 = !DILocation(line: 755, column: 22, scope: !4029)
!4038 = !DILocalVariable(name: "origdm", scope: !4029, file: !3, line: 755, type: !915)
!4039 = !DILocation(line: 755, column: 31, scope: !4029)
!4040 = !DILocalVariable(name: "me", scope: !4029, file: !3, line: 756, type: !2466)
!4041 = !DILocation(line: 756, column: 8, scope: !4029)
!4042 = !DILocalVariable(name: "pmap", scope: !4029, file: !3, line: 757, type: !4043)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4045)
!4045 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshElemMap", file: !423, line: 99, baseType: !422)
!4046 = !DILocation(line: 757, column: 21, scope: !4029)
!4047 = !DILocalVariable(name: "origco", scope: !4029, file: !3, line: 758, type: !413)
!4048 = !DILocation(line: 758, column: 10, scope: !4029)
!4049 = !DILocalVariable(name: "i", scope: !4029, file: !3, line: 759, type: !196)
!4050 = !DILocation(line: 759, column: 6, scope: !4029)
!4051 = !DILocalVariable(name: "j", scope: !4029, file: !3, line: 759, type: !196)
!4052 = !DILocation(line: 759, column: 9, scope: !4029)
!4053 = !DILocalVariable(name: "k", scope: !4029, file: !3, line: 759, type: !196)
!4054 = !DILocation(line: 759, column: 12, scope: !4029)
!4055 = !DILocalVariable(name: "offset", scope: !4029, file: !3, line: 759, type: !196)
!4056 = !DILocation(line: 759, column: 15, scope: !4029)
!4057 = !DILocalVariable(name: "totlvl", scope: !4029, file: !3, line: 759, type: !196)
!4058 = !DILocation(line: 759, column: 23, scope: !4029)
!4059 = !DILocation(line: 761, column: 24, scope: !4029)
!4060 = !DILocation(line: 761, column: 2, scope: !4029)
!4061 = !DILocation(line: 763, column: 28, scope: !4029)
!4062 = !DILocation(line: 763, column: 7, scope: !4029)
!4063 = !DILocation(line: 763, column: 5, scope: !4029)
!4064 = !DILocation(line: 764, column: 11, scope: !4029)
!4065 = !DILocation(line: 764, column: 16, scope: !4029)
!4066 = !DILocation(line: 764, column: 9, scope: !4029)
!4067 = !DILocation(line: 767, column: 7, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 767, column: 6)
!4069 = !DILocation(line: 767, column: 6, scope: !4029)
!4070 = !DILocation(line: 768, column: 3, scope: !4068)
!4071 = !DILocation(line: 773, column: 24, scope: !4029)
!4072 = !DILocation(line: 773, column: 9, scope: !4029)
!4073 = !DILocation(line: 773, column: 7, scope: !4029)
!4074 = !DILocation(line: 774, column: 19, scope: !4029)
!4075 = !DILocation(line: 774, column: 25, scope: !4029)
!4076 = !DILocation(line: 774, column: 2, scope: !4029)
!4077 = !DILocation(line: 775, column: 36, scope: !4029)
!4078 = !DILocation(line: 775, column: 40, scope: !4029)
!4079 = !DILocation(line: 775, column: 46, scope: !4029)
!4080 = !DILocation(line: 775, column: 54, scope: !4029)
!4081 = !DILocation(line: 775, column: 11, scope: !4029)
!4082 = !DILocation(line: 775, column: 9, scope: !4029)
!4083 = !DILocation(line: 776, column: 2, scope: !4029)
!4084 = !DILocation(line: 776, column: 8, scope: !4029)
!4085 = !DILocation(line: 776, column: 16, scope: !4029)
!4086 = !DILocation(line: 779, column: 11, scope: !4029)
!4087 = !DILocation(line: 779, column: 19, scope: !4029)
!4088 = !DILocation(line: 779, column: 31, scope: !4029)
!4089 = !DILocation(line: 779, column: 41, scope: !4029)
!4090 = !DILocation(line: 779, column: 45, scope: !4029)
!4091 = !DILocation(line: 779, column: 39, scope: !4029)
!4092 = !DILocation(line: 779, column: 9, scope: !4029)
!4093 = !DILocation(line: 780, column: 9, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 780, column: 2)
!4095 = !DILocation(line: 780, column: 7, scope: !4094)
!4096 = !DILocation(line: 780, column: 14, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 780, column: 2)
!4098 = !DILocation(line: 780, column: 18, scope: !4097)
!4099 = !DILocation(line: 780, column: 22, scope: !4097)
!4100 = !DILocation(line: 780, column: 16, scope: !4097)
!4101 = !DILocation(line: 780, column: 2, scope: !4094)
!4102 = !DILocation(line: 781, column: 3, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 780, column: 36)
!4104 = !DILocation(line: 781, column: 11, scope: !4103)
!4105 = !DILocation(line: 781, column: 21, scope: !4103)
!4106 = !DILocation(line: 781, column: 29, scope: !4103)
!4107 = !DILocation(line: 781, column: 38, scope: !4103)
!4108 = !DILocation(line: 781, column: 36, scope: !4103)
!4109 = !DILocation(line: 781, column: 41, scope: !4103)
!4110 = !DILocation(line: 781, column: 45, scope: !4103)
!4111 = !DILocation(line: 781, column: 51, scope: !4103)
!4112 = !DILocation(line: 781, column: 54, scope: !4103)
!4113 = !DILocation(line: 782, column: 2, scope: !4103)
!4114 = !DILocation(line: 780, column: 31, scope: !4097)
!4115 = !DILocation(line: 780, column: 2, scope: !4097)
!4116 = distinct !{!4116, !4101, !4117}
!4117 = !DILocation(line: 782, column: 2, scope: !4094)
!4118 = !DILocation(line: 786, column: 24, scope: !4029)
!4119 = !DILocation(line: 786, column: 9, scope: !4029)
!4120 = !DILocation(line: 786, column: 7, scope: !4029)
!4121 = !DILocation(line: 787, column: 9, scope: !4029)
!4122 = !DILocation(line: 787, column: 15, scope: !4029)
!4123 = !DILocation(line: 787, column: 26, scope: !4029)
!4124 = !DILocation(line: 787, column: 30, scope: !4029)
!4125 = !DILocation(line: 787, column: 7, scope: !4029)
!4126 = !DILocation(line: 788, column: 11, scope: !4029)
!4127 = !DILocation(line: 788, column: 43, scope: !4029)
!4128 = !DILocation(line: 788, column: 47, scope: !4029)
!4129 = !DILocation(line: 788, column: 41, scope: !4029)
!4130 = !DILocation(line: 788, column: 9, scope: !4029)
!4131 = !DILocation(line: 789, column: 9, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 789, column: 2)
!4133 = !DILocation(line: 789, column: 7, scope: !4132)
!4134 = !DILocation(line: 789, column: 14, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 789, column: 2)
!4136 = !DILocation(line: 789, column: 18, scope: !4135)
!4137 = !DILocation(line: 789, column: 22, scope: !4135)
!4138 = !DILocation(line: 789, column: 16, scope: !4135)
!4139 = !DILocation(line: 789, column: 2, scope: !4132)
!4140 = !DILocation(line: 790, column: 14, scope: !4135)
!4141 = !DILocation(line: 790, column: 21, scope: !4135)
!4142 = !DILocation(line: 790, column: 25, scope: !4135)
!4143 = !DILocation(line: 790, column: 29, scope: !4135)
!4144 = !DILocation(line: 790, column: 35, scope: !4135)
!4145 = !DILocation(line: 790, column: 38, scope: !4135)
!4146 = !DILocation(line: 790, column: 3, scope: !4135)
!4147 = !DILocation(line: 789, column: 31, scope: !4135)
!4148 = !DILocation(line: 789, column: 2, scope: !4135)
!4149 = distinct !{!4149, !4139, !4150}
!4150 = !DILocation(line: 790, column: 40, scope: !4132)
!4151 = !DILocation(line: 792, column: 9, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 792, column: 2)
!4153 = !DILocation(line: 792, column: 7, scope: !4152)
!4154 = !DILocation(line: 792, column: 14, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 792, column: 2)
!4156 = !DILocation(line: 792, column: 18, scope: !4155)
!4157 = !DILocation(line: 792, column: 22, scope: !4155)
!4158 = !DILocation(line: 792, column: 16, scope: !4155)
!4159 = !DILocation(line: 792, column: 2, scope: !4152)
!4160 = !DILocalVariable(name: "avg_no", scope: !4161, file: !3, line: 793, type: !387)
!4161 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 792, column: 36)
!4162 = !DILocation(line: 793, column: 9, scope: !4161)
!4163 = !DILocalVariable(name: "center", scope: !4161, file: !3, line: 793, type: !387)
!4164 = !DILocation(line: 793, column: 32, scope: !4161)
!4165 = !DILocalVariable(name: "push", scope: !4161, file: !3, line: 793, type: !387)
!4166 = !DILocation(line: 793, column: 55, scope: !4161)
!4167 = !DILocalVariable(name: "dist", scope: !4161, file: !3, line: 794, type: !388)
!4168 = !DILocation(line: 794, column: 9, scope: !4161)
!4169 = !DILocalVariable(name: "tot", scope: !4161, file: !3, line: 795, type: !196)
!4170 = !DILocation(line: 795, column: 7, scope: !4161)
!4171 = !DILocation(line: 798, column: 8, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 798, column: 7)
!4173 = !DILocation(line: 798, column: 13, scope: !4172)
!4174 = !DILocation(line: 798, column: 16, scope: !4172)
!4175 = !DILocation(line: 798, column: 7, scope: !4161)
!4176 = !DILocation(line: 799, column: 4, scope: !4172)
!4177 = !DILocation(line: 802, column: 10, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 802, column: 3)
!4179 = !DILocation(line: 802, column: 8, scope: !4178)
!4180 = !DILocation(line: 802, column: 15, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 802, column: 3)
!4182 = !DILocation(line: 802, column: 19, scope: !4181)
!4183 = !DILocation(line: 802, column: 24, scope: !4181)
!4184 = !DILocation(line: 802, column: 27, scope: !4181)
!4185 = !DILocation(line: 802, column: 17, scope: !4181)
!4186 = !DILocation(line: 802, column: 3, scope: !4178)
!4187 = !DILocalVariable(name: "p", scope: !4188, file: !3, line: 803, type: !4189)
!4188 = distinct !DILexicalBlock(scope: !4181, file: !3, line: 802, column: 39)
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4191)
!4191 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !257, line: 85, baseType: !397)
!4192 = !DILocation(line: 803, column: 17, scope: !4188)
!4193 = !DILocation(line: 803, column: 22, scope: !4188)
!4194 = !DILocation(line: 803, column: 26, scope: !4188)
!4195 = !DILocation(line: 803, column: 32, scope: !4188)
!4196 = !DILocation(line: 803, column: 37, scope: !4188)
!4197 = !DILocation(line: 803, column: 40, scope: !4188)
!4198 = !DILocation(line: 803, column: 48, scope: !4188)
!4199 = !DILocation(line: 806, column: 11, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 806, column: 4)
!4201 = !DILocation(line: 806, column: 9, scope: !4200)
!4202 = !DILocation(line: 806, column: 16, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 806, column: 4)
!4204 = !DILocation(line: 806, column: 20, scope: !4203)
!4205 = !DILocation(line: 806, column: 23, scope: !4203)
!4206 = !DILocation(line: 806, column: 18, scope: !4203)
!4207 = !DILocation(line: 806, column: 4, scope: !4200)
!4208 = !DILocalVariable(name: "vndx", scope: !4209, file: !3, line: 807, type: !196)
!4209 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 806, column: 37)
!4210 = !DILocation(line: 807, column: 9, scope: !4209)
!4211 = !DILocation(line: 807, column: 16, scope: !4209)
!4212 = !DILocation(line: 807, column: 20, scope: !4209)
!4213 = !DILocation(line: 807, column: 26, scope: !4209)
!4214 = !DILocation(line: 807, column: 29, scope: !4209)
!4215 = !DILocation(line: 807, column: 41, scope: !4209)
!4216 = !DILocation(line: 807, column: 39, scope: !4209)
!4217 = !DILocation(line: 807, column: 44, scope: !4209)
!4218 = !DILocation(line: 808, column: 9, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 808, column: 9)
!4220 = !DILocation(line: 808, column: 17, scope: !4219)
!4221 = !DILocation(line: 808, column: 14, scope: !4219)
!4222 = !DILocation(line: 808, column: 9, scope: !4209)
!4223 = !DILocation(line: 809, column: 16, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 808, column: 20)
!4225 = !DILocation(line: 809, column: 24, scope: !4224)
!4226 = !DILocation(line: 809, column: 31, scope: !4224)
!4227 = !DILocation(line: 809, column: 6, scope: !4224)
!4228 = !DILocation(line: 810, column: 9, scope: !4224)
!4229 = !DILocation(line: 811, column: 5, scope: !4224)
!4230 = !DILocation(line: 812, column: 4, scope: !4209)
!4231 = !DILocation(line: 806, column: 32, scope: !4203)
!4232 = !DILocation(line: 806, column: 4, scope: !4203)
!4233 = distinct !{!4233, !4207, !4234}
!4234 = !DILocation(line: 812, column: 4, scope: !4200)
!4235 = !DILocation(line: 813, column: 3, scope: !4188)
!4236 = !DILocation(line: 802, column: 35, scope: !4181)
!4237 = !DILocation(line: 802, column: 3, scope: !4181)
!4238 = distinct !{!4238, !4186, !4239}
!4239 = !DILocation(line: 813, column: 3, scope: !4178)
!4240 = !DILocation(line: 814, column: 13, scope: !4161)
!4241 = !DILocation(line: 814, column: 28, scope: !4161)
!4242 = !DILocation(line: 814, column: 26, scope: !4161)
!4243 = !DILocation(line: 814, column: 3, scope: !4161)
!4244 = !DILocation(line: 817, column: 10, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 817, column: 3)
!4246 = !DILocation(line: 817, column: 8, scope: !4245)
!4247 = !DILocation(line: 817, column: 15, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 817, column: 3)
!4249 = !DILocation(line: 817, column: 19, scope: !4248)
!4250 = !DILocation(line: 817, column: 24, scope: !4248)
!4251 = !DILocation(line: 817, column: 27, scope: !4248)
!4252 = !DILocation(line: 817, column: 17, scope: !4248)
!4253 = !DILocation(line: 817, column: 3, scope: !4245)
!4254 = !DILocalVariable(name: "p", scope: !4255, file: !3, line: 818, type: !4189)
!4255 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 817, column: 39)
!4256 = !DILocation(line: 818, column: 17, scope: !4255)
!4257 = !DILocation(line: 818, column: 22, scope: !4255)
!4258 = !DILocation(line: 818, column: 26, scope: !4255)
!4259 = !DILocation(line: 818, column: 32, scope: !4255)
!4260 = !DILocation(line: 818, column: 37, scope: !4255)
!4261 = !DILocation(line: 818, column: 40, scope: !4255)
!4262 = !DILocation(line: 818, column: 48, scope: !4255)
!4263 = !DILocalVariable(name: "fake_poly", scope: !4255, file: !3, line: 819, type: !4191)
!4264 = !DILocation(line: 819, column: 10, scope: !4255)
!4265 = !DILocalVariable(name: "fake_loops", scope: !4255, file: !3, line: 820, type: !4266)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !257, line: 91, baseType: !406)
!4268 = !DILocation(line: 820, column: 11, scope: !4255)
!4269 = !DILocalVariable(name: "fake_co", scope: !4255, file: !3, line: 821, type: !413)
!4270 = !DILocation(line: 821, column: 12, scope: !4255)
!4271 = !DILocalVariable(name: "no", scope: !4255, file: !3, line: 822, type: !387)
!4272 = !DILocation(line: 822, column: 10, scope: !4255)
!4273 = !DILocation(line: 826, column: 24, scope: !4255)
!4274 = !DILocation(line: 826, column: 27, scope: !4255)
!4275 = !DILocation(line: 826, column: 14, scope: !4255)
!4276 = !DILocation(line: 826, column: 22, scope: !4255)
!4277 = !DILocation(line: 827, column: 14, scope: !4255)
!4278 = !DILocation(line: 827, column: 24, scope: !4255)
!4279 = !DILocation(line: 828, column: 17, scope: !4255)
!4280 = !DILocation(line: 828, column: 45, scope: !4255)
!4281 = !DILocation(line: 828, column: 48, scope: !4255)
!4282 = !DILocation(line: 828, column: 43, scope: !4255)
!4283 = !DILocation(line: 828, column: 15, scope: !4255)
!4284 = !DILocation(line: 829, column: 14, scope: !4255)
!4285 = !DILocation(line: 829, column: 46, scope: !4255)
!4286 = !DILocation(line: 829, column: 49, scope: !4255)
!4287 = !DILocation(line: 829, column: 44, scope: !4255)
!4288 = !DILocation(line: 829, column: 12, scope: !4255)
!4289 = !DILocation(line: 831, column: 11, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 831, column: 4)
!4291 = !DILocation(line: 831, column: 9, scope: !4290)
!4292 = !DILocation(line: 831, column: 16, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 831, column: 4)
!4294 = !DILocation(line: 831, column: 20, scope: !4293)
!4295 = !DILocation(line: 831, column: 23, scope: !4293)
!4296 = !DILocation(line: 831, column: 18, scope: !4293)
!4297 = !DILocation(line: 831, column: 4, scope: !4290)
!4298 = !DILocalVariable(name: "vndx", scope: !4299, file: !3, line: 832, type: !196)
!4299 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 831, column: 37)
!4300 = !DILocation(line: 832, column: 9, scope: !4299)
!4301 = !DILocation(line: 832, column: 16, scope: !4299)
!4302 = !DILocation(line: 832, column: 20, scope: !4299)
!4303 = !DILocation(line: 832, column: 26, scope: !4299)
!4304 = !DILocation(line: 832, column: 29, scope: !4299)
!4305 = !DILocation(line: 832, column: 41, scope: !4299)
!4306 = !DILocation(line: 832, column: 39, scope: !4299)
!4307 = !DILocation(line: 832, column: 44, scope: !4299)
!4308 = !DILocation(line: 834, column: 23, scope: !4299)
!4309 = !DILocation(line: 834, column: 5, scope: !4299)
!4310 = !DILocation(line: 834, column: 16, scope: !4299)
!4311 = !DILocation(line: 834, column: 19, scope: !4299)
!4312 = !DILocation(line: 834, column: 21, scope: !4299)
!4313 = !DILocation(line: 836, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 836, column: 9)
!4315 = !DILocation(line: 836, column: 17, scope: !4314)
!4316 = !DILocation(line: 836, column: 14, scope: !4314)
!4317 = !DILocation(line: 836, column: 9, scope: !4299)
!4318 = !DILocation(line: 837, column: 17, scope: !4314)
!4319 = !DILocation(line: 837, column: 25, scope: !4314)
!4320 = !DILocation(line: 837, column: 29, scope: !4314)
!4321 = !DILocation(line: 837, column: 6, scope: !4314)
!4322 = !DILocation(line: 839, column: 17, scope: !4314)
!4323 = !DILocation(line: 839, column: 25, scope: !4314)
!4324 = !DILocation(line: 839, column: 29, scope: !4314)
!4325 = !DILocation(line: 839, column: 36, scope: !4314)
!4326 = !DILocation(line: 839, column: 6, scope: !4314)
!4327 = !DILocation(line: 840, column: 4, scope: !4299)
!4328 = !DILocation(line: 831, column: 32, scope: !4293)
!4329 = !DILocation(line: 831, column: 4, scope: !4293)
!4330 = distinct !{!4330, !4297, !4331}
!4331 = !DILocation(line: 840, column: 4, scope: !4290)
!4332 = !DILocation(line: 842, column: 49, scope: !4255)
!4333 = !DILocation(line: 843, column: 56, scope: !4255)
!4334 = !DILocation(line: 843, column: 65, scope: !4255)
!4335 = !DILocation(line: 842, column: 4, scope: !4255)
!4336 = !DILocation(line: 844, column: 4, scope: !4255)
!4337 = !DILocation(line: 844, column: 14, scope: !4255)
!4338 = !DILocation(line: 845, column: 4, scope: !4255)
!4339 = !DILocation(line: 845, column: 14, scope: !4255)
!4340 = !DILocation(line: 847, column: 14, scope: !4255)
!4341 = !DILocation(line: 847, column: 22, scope: !4255)
!4342 = !DILocation(line: 847, column: 4, scope: !4255)
!4343 = !DILocation(line: 848, column: 3, scope: !4255)
!4344 = !DILocation(line: 817, column: 35, scope: !4248)
!4345 = !DILocation(line: 817, column: 3, scope: !4248)
!4346 = distinct !{!4346, !4253, !4347}
!4347 = !DILocation(line: 848, column: 3, scope: !4245)
!4348 = !DILocation(line: 849, column: 16, scope: !4161)
!4349 = !DILocation(line: 849, column: 3, scope: !4161)
!4350 = !DILocation(line: 852, column: 29, scope: !4161)
!4351 = !DILocation(line: 852, column: 33, scope: !4161)
!4352 = !DILocation(line: 852, column: 39, scope: !4161)
!4353 = !DILocation(line: 852, column: 42, scope: !4161)
!4354 = !DILocation(line: 852, column: 46, scope: !4161)
!4355 = !DILocation(line: 852, column: 54, scope: !4161)
!4356 = !DILocation(line: 852, column: 10, scope: !4161)
!4357 = !DILocation(line: 852, column: 8, scope: !4161)
!4358 = !DILocation(line: 853, column: 14, scope: !4161)
!4359 = !DILocation(line: 853, column: 20, scope: !4161)
!4360 = !DILocation(line: 853, column: 3, scope: !4161)
!4361 = !DILocation(line: 854, column: 13, scope: !4161)
!4362 = !DILocation(line: 854, column: 19, scope: !4161)
!4363 = !DILocation(line: 854, column: 3, scope: !4161)
!4364 = !DILocation(line: 855, column: 13, scope: !4161)
!4365 = !DILocation(line: 855, column: 17, scope: !4161)
!4366 = !DILocation(line: 855, column: 23, scope: !4161)
!4367 = !DILocation(line: 855, column: 26, scope: !4161)
!4368 = !DILocation(line: 855, column: 30, scope: !4161)
!4369 = !DILocation(line: 855, column: 3, scope: !4161)
!4370 = !DILocation(line: 857, column: 2, scope: !4161)
!4371 = !DILocation(line: 792, column: 31, scope: !4155)
!4372 = !DILocation(line: 792, column: 2, scope: !4155)
!4373 = distinct !{!4373, !4159, !4374}
!4374 = !DILocation(line: 857, column: 2, scope: !4152)
!4375 = !DILocation(line: 859, column: 2, scope: !4029)
!4376 = !DILocation(line: 859, column: 12, scope: !4029)
!4377 = !DILocation(line: 860, column: 2, scope: !4029)
!4378 = !DILocation(line: 860, column: 8, scope: !4029)
!4379 = !DILocation(line: 860, column: 16, scope: !4029)
!4380 = !DILocation(line: 866, column: 24, scope: !4029)
!4381 = !DILocation(line: 866, column: 2, scope: !4029)
!4382 = !DILocation(line: 869, column: 24, scope: !4029)
!4383 = !DILocation(line: 869, column: 9, scope: !4029)
!4384 = !DILocation(line: 869, column: 7, scope: !4029)
!4385 = !DILocation(line: 870, column: 19, scope: !4029)
!4386 = !DILocation(line: 870, column: 25, scope: !4029)
!4387 = !DILocation(line: 870, column: 2, scope: !4029)
!4388 = !DILocation(line: 871, column: 35, scope: !4029)
!4389 = !DILocation(line: 871, column: 39, scope: !4029)
!4390 = !DILocation(line: 871, column: 45, scope: !4029)
!4391 = !DILocation(line: 871, column: 59, scope: !4029)
!4392 = !DILocation(line: 871, column: 64, scope: !4029)
!4393 = !DILocation(line: 871, column: 70, scope: !4029)
!4394 = !DILocation(line: 871, column: 11, scope: !4029)
!4395 = !DILocation(line: 871, column: 9, scope: !4029)
!4396 = !DILocation(line: 872, column: 2, scope: !4029)
!4397 = !DILocation(line: 872, column: 8, scope: !4029)
!4398 = !DILocation(line: 872, column: 16, scope: !4029)
!4399 = !DILocation(line: 875, column: 28, scope: !4029)
!4400 = !DILocation(line: 875, column: 36, scope: !4029)
!4401 = !DILocation(line: 875, column: 66, scope: !4029)
!4402 = !DILocation(line: 875, column: 74, scope: !4029)
!4403 = !DILocation(line: 875, column: 86, scope: !4029)
!4404 = !DILocation(line: 875, column: 95, scope: !4029)
!4405 = !DILocation(line: 875, column: 2, scope: !4029)
!4406 = !DILocation(line: 877, column: 2, scope: !4029)
!4407 = !DILocation(line: 877, column: 10, scope: !4029)
!4408 = !DILocation(line: 877, column: 18, scope: !4029)
!4409 = !DILocation(line: 878, column: 2, scope: !4029)
!4410 = !DILocation(line: 878, column: 10, scope: !4029)
!4411 = !DILocation(line: 878, column: 18, scope: !4029)
!4412 = !DILocation(line: 879, column: 1, scope: !4029)
!4413 = distinct !DISubprogram(name: "multires_dm_create_local", scope: !3, file: !3, line: 703, type: !4414, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!915, !2689, !915, !196, !196, !196, !626}
!4416 = !DILocalVariable(name: "ob", arg: 1, scope: !4413, file: !3, line: 703, type: !2689)
!4417 = !DILocation(line: 703, column: 54, scope: !4413)
!4418 = !DILocalVariable(name: "dm", arg: 2, scope: !4413, file: !3, line: 703, type: !915)
!4419 = !DILocation(line: 703, column: 71, scope: !4413)
!4420 = !DILocalVariable(name: "lvl", arg: 3, scope: !4413, file: !3, line: 703, type: !196)
!4421 = !DILocation(line: 703, column: 79, scope: !4413)
!4422 = !DILocalVariable(name: "totlvl", arg: 4, scope: !4413, file: !3, line: 703, type: !196)
!4423 = !DILocation(line: 703, column: 88, scope: !4413)
!4424 = !DILocalVariable(name: "simple", arg: 5, scope: !4413, file: !3, line: 703, type: !196)
!4425 = !DILocation(line: 703, column: 100, scope: !4413)
!4426 = !DILocalVariable(name: "alloc_paint_mask", arg: 6, scope: !4413, file: !3, line: 703, type: !626)
!4427 = !DILocation(line: 703, column: 113, scope: !4413)
!4428 = !DILocalVariable(name: "mmd", scope: !4413, file: !3, line: 705, type: !2392)
!4429 = !DILocation(line: 705, column: 23, scope: !4413)
!4430 = !DILocalVariable(name: "flags", scope: !4413, file: !3, line: 706, type: !4431)
!4431 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresFlags", file: !232, line: 75, baseType: !237)
!4432 = !DILocation(line: 706, column: 16, scope: !4413)
!4433 = !DILocation(line: 708, column: 12, scope: !4413)
!4434 = !DILocation(line: 708, column: 6, scope: !4413)
!4435 = !DILocation(line: 708, column: 10, scope: !4413)
!4436 = !DILocation(line: 709, column: 18, scope: !4413)
!4437 = !DILocation(line: 709, column: 6, scope: !4413)
!4438 = !DILocation(line: 709, column: 16, scope: !4413)
!4439 = !DILocation(line: 710, column: 18, scope: !4413)
!4440 = !DILocation(line: 710, column: 6, scope: !4413)
!4441 = !DILocation(line: 710, column: 16, scope: !4413)
!4442 = !DILocation(line: 711, column: 15, scope: !4413)
!4443 = !DILocation(line: 711, column: 6, scope: !4413)
!4444 = !DILocation(line: 711, column: 13, scope: !4413)
!4445 = !DILocation(line: 712, column: 15, scope: !4413)
!4446 = !DILocation(line: 712, column: 6, scope: !4413)
!4447 = !DILocation(line: 712, column: 13, scope: !4413)
!4448 = !DILocation(line: 714, column: 6, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 714, column: 6)
!4450 = !DILocation(line: 714, column: 6, scope: !4413)
!4451 = !DILocation(line: 715, column: 9, scope: !4449)
!4452 = !DILocation(line: 715, column: 3, scope: !4449)
!4453 = !DILocation(line: 717, column: 44, scope: !4413)
!4454 = !DILocation(line: 717, column: 54, scope: !4413)
!4455 = !DILocation(line: 717, column: 58, scope: !4413)
!4456 = !DILocation(line: 717, column: 9, scope: !4413)
!4457 = !DILocation(line: 717, column: 2, scope: !4413)
!4458 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4459, file: !4459, line: 64, type: !4460, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4459 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4460 = !DISubroutineType(types: !4461)
!4461 = !{null, !418, !1100}
!4462 = !DILocalVariable(name: "r", arg: 1, scope: !4458, file: !4459, line: 64, type: !418)
!4463 = !DILocation(line: 64, column: 31, scope: !4458)
!4464 = !DILocalVariable(name: "a", arg: 2, scope: !4458, file: !4459, line: 64, type: !1100)
!4465 = !DILocation(line: 64, column: 49, scope: !4458)
!4466 = !DILocation(line: 66, column: 9, scope: !4458)
!4467 = !DILocation(line: 66, column: 2, scope: !4458)
!4468 = !DILocation(line: 66, column: 7, scope: !4458)
!4469 = !DILocation(line: 67, column: 9, scope: !4458)
!4470 = !DILocation(line: 67, column: 2, scope: !4458)
!4471 = !DILocation(line: 67, column: 7, scope: !4458)
!4472 = !DILocation(line: 68, column: 9, scope: !4458)
!4473 = !DILocation(line: 68, column: 2, scope: !4458)
!4474 = !DILocation(line: 68, column: 7, scope: !4458)
!4475 = !DILocation(line: 69, column: 1, scope: !4458)
!4476 = distinct !DISubprogram(name: "add_v3_v3", scope: !4459, file: !4459, line: 302, type: !4460, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4477 = !DILocalVariable(name: "r", arg: 1, scope: !4476, file: !4459, line: 302, type: !418)
!4478 = !DILocation(line: 302, column: 30, scope: !4476)
!4479 = !DILocalVariable(name: "a", arg: 2, scope: !4476, file: !4459, line: 302, type: !1100)
!4480 = !DILocation(line: 302, column: 48, scope: !4476)
!4481 = !DILocation(line: 304, column: 10, scope: !4476)
!4482 = !DILocation(line: 304, column: 2, scope: !4476)
!4483 = !DILocation(line: 304, column: 7, scope: !4476)
!4484 = !DILocation(line: 305, column: 10, scope: !4476)
!4485 = !DILocation(line: 305, column: 2, scope: !4476)
!4486 = !DILocation(line: 305, column: 7, scope: !4476)
!4487 = !DILocation(line: 306, column: 10, scope: !4476)
!4488 = !DILocation(line: 306, column: 2, scope: !4476)
!4489 = !DILocation(line: 306, column: 7, scope: !4476)
!4490 = !DILocation(line: 307, column: 1, scope: !4476)
!4491 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4459, file: !4459, line: 392, type: !4492, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{null, !418, !388}
!4494 = !DILocalVariable(name: "r", arg: 1, scope: !4491, file: !4459, line: 392, type: !418)
!4495 = !DILocation(line: 392, column: 30, scope: !4491)
!4496 = !DILocalVariable(name: "f", arg: 2, scope: !4491, file: !4459, line: 392, type: !388)
!4497 = !DILocation(line: 392, column: 42, scope: !4491)
!4498 = !DILocation(line: 394, column: 10, scope: !4491)
!4499 = !DILocation(line: 394, column: 2, scope: !4491)
!4500 = !DILocation(line: 394, column: 7, scope: !4491)
!4501 = !DILocation(line: 395, column: 10, scope: !4491)
!4502 = !DILocation(line: 395, column: 2, scope: !4491)
!4503 = !DILocation(line: 395, column: 7, scope: !4491)
!4504 = !DILocation(line: 396, column: 10, scope: !4491)
!4505 = !DILocation(line: 396, column: 2, scope: !4491)
!4506 = !DILocation(line: 396, column: 7, scope: !4491)
!4507 = !DILocation(line: 397, column: 1, scope: !4491)
!4508 = distinct !DISubprogram(name: "normalize_v3", scope: !4459, file: !4459, line: 830, type: !4509, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!388, !418}
!4511 = !DILocalVariable(name: "n", arg: 1, scope: !4508, file: !4459, line: 830, type: !418)
!4512 = !DILocation(line: 830, column: 34, scope: !4508)
!4513 = !DILocation(line: 832, column: 25, scope: !4508)
!4514 = !DILocation(line: 832, column: 28, scope: !4508)
!4515 = !DILocation(line: 832, column: 9, scope: !4508)
!4516 = !DILocation(line: 832, column: 2, scope: !4508)
!4517 = distinct !DISubprogram(name: "v3_dist_from_plane", scope: !3, file: !3, line: 746, type: !4518, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!388, !418, !418, !418}
!4520 = !DILocalVariable(name: "v", arg: 1, scope: !4517, file: !3, line: 746, type: !418)
!4521 = !DILocation(line: 746, column: 39, scope: !4517)
!4522 = !DILocalVariable(name: "center", arg: 2, scope: !4517, file: !3, line: 746, type: !418)
!4523 = !DILocation(line: 746, column: 51, scope: !4517)
!4524 = !DILocalVariable(name: "no", arg: 3, scope: !4517, file: !3, line: 746, type: !418)
!4525 = !DILocation(line: 746, column: 68, scope: !4517)
!4526 = !DILocalVariable(name: "s", scope: !4517, file: !3, line: 748, type: !387)
!4527 = !DILocation(line: 748, column: 8, scope: !4517)
!4528 = !DILocation(line: 749, column: 14, scope: !4517)
!4529 = !DILocation(line: 749, column: 17, scope: !4517)
!4530 = !DILocation(line: 749, column: 20, scope: !4517)
!4531 = !DILocation(line: 749, column: 2, scope: !4517)
!4532 = !DILocation(line: 750, column: 18, scope: !4517)
!4533 = !DILocation(line: 750, column: 21, scope: !4517)
!4534 = !DILocation(line: 750, column: 9, scope: !4517)
!4535 = !DILocation(line: 750, column: 2, scope: !4517)
!4536 = distinct !DISubprogram(name: "subsurf_dm_create_local", scope: !3, file: !3, line: 720, type: !4537, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!915, !2689, !915, !196, !196, !196, !196, !196}
!4539 = !DILocalVariable(name: "ob", arg: 1, scope: !4536, file: !3, line: 720, type: !2689)
!4540 = !DILocation(line: 720, column: 53, scope: !4536)
!4541 = !DILocalVariable(name: "dm", arg: 2, scope: !4536, file: !3, line: 720, type: !915)
!4542 = !DILocation(line: 720, column: 70, scope: !4536)
!4543 = !DILocalVariable(name: "lvl", arg: 3, scope: !4536, file: !3, line: 720, type: !196)
!4544 = !DILocation(line: 720, column: 78, scope: !4536)
!4545 = !DILocalVariable(name: "simple", arg: 4, scope: !4536, file: !3, line: 720, type: !196)
!4546 = !DILocation(line: 720, column: 87, scope: !4536)
!4547 = !DILocalVariable(name: "optimal", arg: 5, scope: !4536, file: !3, line: 720, type: !196)
!4548 = !DILocation(line: 720, column: 99, scope: !4536)
!4549 = !DILocalVariable(name: "plain_uv", arg: 6, scope: !4536, file: !3, line: 720, type: !196)
!4550 = !DILocation(line: 720, column: 112, scope: !4536)
!4551 = !DILocalVariable(name: "alloc_paint_mask", arg: 7, scope: !4536, file: !3, line: 720, type: !196)
!4552 = !DILocation(line: 720, column: 126, scope: !4536)
!4553 = !DILocalVariable(name: "smd", scope: !4536, file: !3, line: 722, type: !4554)
!4554 = !DIDerivedType(tag: DW_TAG_typedef, name: "SubsurfModifierData", file: !143, line: 136, baseType: !4555)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SubsurfModifierData", file: !143, line: 130, size: 1088, elements: !4556)
!4556 = !{!4557, !4558, !4559, !4560, !4561, !4562, !4563}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !4555, file: !143, line: 131, baseType: !265, size: 896)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "subdivType", scope: !4555, file: !143, line: 133, baseType: !319, size: 16, offset: 896)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !4555, file: !143, line: 133, baseType: !319, size: 16, offset: 912)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "renderLevels", scope: !4555, file: !143, line: 133, baseType: !319, size: 16, offset: 928)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4555, file: !143, line: 133, baseType: !319, size: 16, offset: 944)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "emCache", scope: !4555, file: !143, line: 135, baseType: !291, size: 64, offset: 960)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "mCache", scope: !4555, file: !143, line: 135, baseType: !291, size: 64, offset: 1024)
!4564 = !DILocation(line: 722, column: 22, scope: !4536)
!4565 = !DILocalVariable(name: "flags", scope: !4536, file: !3, line: 723, type: !4566)
!4566 = !DIDerivedType(tag: DW_TAG_typedef, name: "SubsurfFlags", file: !218, line: 64, baseType: !243)
!4567 = !DILocation(line: 723, column: 15, scope: !4536)
!4568 = !DILocation(line: 725, column: 34, scope: !4536)
!4569 = !DILocation(line: 725, column: 19, scope: !4536)
!4570 = !DILocation(line: 725, column: 32, scope: !4536)
!4571 = !DILocation(line: 725, column: 6, scope: !4536)
!4572 = !DILocation(line: 725, column: 13, scope: !4536)
!4573 = !DILocation(line: 726, column: 7, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 726, column: 6)
!4575 = !DILocation(line: 726, column: 6, scope: !4536)
!4576 = !DILocation(line: 727, column: 7, scope: !4574)
!4577 = !DILocation(line: 727, column: 13, scope: !4574)
!4578 = !DILocation(line: 727, column: 3, scope: !4574)
!4579 = !DILocation(line: 728, column: 6, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 728, column: 6)
!4581 = !DILocation(line: 728, column: 6, scope: !4536)
!4582 = !DILocation(line: 729, column: 7, scope: !4580)
!4583 = !DILocation(line: 729, column: 18, scope: !4580)
!4584 = !DILocation(line: 729, column: 3, scope: !4580)
!4585 = !DILocation(line: 730, column: 6, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 730, column: 6)
!4587 = !DILocation(line: 730, column: 6, scope: !4536)
!4588 = !DILocation(line: 731, column: 7, scope: !4586)
!4589 = !DILocation(line: 731, column: 13, scope: !4586)
!4590 = !DILocation(line: 731, column: 3, scope: !4586)
!4591 = !DILocation(line: 733, column: 6, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 733, column: 6)
!4593 = !DILocation(line: 733, column: 10, scope: !4592)
!4594 = !DILocation(line: 733, column: 15, scope: !4592)
!4595 = !DILocation(line: 733, column: 6, scope: !4536)
!4596 = !DILocation(line: 734, column: 9, scope: !4592)
!4597 = !DILocation(line: 734, column: 3, scope: !4592)
!4598 = !DILocation(line: 736, column: 6, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 736, column: 6)
!4600 = !DILocation(line: 736, column: 6, scope: !4536)
!4601 = !DILocation(line: 737, column: 9, scope: !4599)
!4602 = !DILocation(line: 737, column: 3, scope: !4599)
!4603 = !DILocation(line: 739, column: 43, scope: !4536)
!4604 = !DILocation(line: 739, column: 59, scope: !4536)
!4605 = !DILocation(line: 739, column: 9, scope: !4536)
!4606 = !DILocation(line: 739, column: 2, scope: !4536)
!4607 = distinct !DISubprogram(name: "multiresModifier_disp_run", scope: !3, file: !3, line: 1006, type: !4608, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{null, !915, !2466, !915, !4610, !4611, !196}
!4610 = !DIDerivedType(tag: DW_TAG_typedef, name: "DispOp", file: !3, line: 77, baseType: !226)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!4612 = !DILocalVariable(name: "dm", arg: 1, scope: !4607, file: !3, line: 1006, type: !915)
!4613 = !DILocation(line: 1006, column: 52, scope: !4607)
!4614 = !DILocalVariable(name: "me", arg: 2, scope: !4607, file: !3, line: 1006, type: !2466)
!4615 = !DILocation(line: 1006, column: 62, scope: !4607)
!4616 = !DILocalVariable(name: "dm2", arg: 3, scope: !4607, file: !3, line: 1006, type: !915)
!4617 = !DILocation(line: 1006, column: 79, scope: !4607)
!4618 = !DILocalVariable(name: "op", arg: 4, scope: !4607, file: !3, line: 1006, type: !4610)
!4619 = !DILocation(line: 1006, column: 91, scope: !4607)
!4620 = !DILocalVariable(name: "oldGridData", arg: 5, scope: !4607, file: !3, line: 1006, type: !4611)
!4621 = !DILocation(line: 1006, column: 105, scope: !4607)
!4622 = !DILocalVariable(name: "totlvl", arg: 6, scope: !4607, file: !3, line: 1006, type: !196)
!4623 = !DILocation(line: 1006, column: 122, scope: !4607)
!4624 = !DILocalVariable(name: "ccgdm", scope: !4607, file: !3, line: 1008, type: !2395)
!4625 = !DILocation(line: 1008, column: 18, scope: !4607)
!4626 = !DILocation(line: 1008, column: 44, scope: !4607)
!4627 = !DILocation(line: 1008, column: 26, scope: !4607)
!4628 = !DILocalVariable(name: "gridData", scope: !4607, file: !3, line: 1009, type: !4611)
!4629 = !DILocation(line: 1009, column: 12, scope: !4607)
!4630 = !DILocalVariable(name: "subGridData", scope: !4607, file: !3, line: 1009, type: !4611)
!4631 = !DILocation(line: 1009, column: 24, scope: !4607)
!4632 = !DILocalVariable(name: "key", scope: !4607, file: !3, line: 1010, type: !3133)
!4633 = !DILocation(line: 1010, column: 9, scope: !4607)
!4634 = !DILocalVariable(name: "mpoly", scope: !4607, file: !3, line: 1011, type: !4635)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 64)
!4636 = !DILocation(line: 1011, column: 9, scope: !4607)
!4637 = !DILocation(line: 1011, column: 17, scope: !4607)
!4638 = !DILocation(line: 1011, column: 21, scope: !4607)
!4639 = !DILocalVariable(name: "mdisps", scope: !4607, file: !3, line: 1012, type: !3566)
!4640 = !DILocation(line: 1012, column: 10, scope: !4607)
!4641 = !DILocation(line: 1012, column: 41, scope: !4607)
!4642 = !DILocation(line: 1012, column: 45, scope: !4607)
!4643 = !DILocation(line: 1012, column: 19, scope: !4607)
!4644 = !DILocalVariable(name: "grid_paint_mask", scope: !4607, file: !3, line: 1013, type: !3844)
!4645 = !DILocation(line: 1013, column: 17, scope: !4607)
!4646 = !DILocalVariable(name: "gridOffset", scope: !4607, file: !3, line: 1014, type: !426)
!4647 = !DILocation(line: 1014, column: 7, scope: !4607)
!4648 = !DILocalVariable(name: "i", scope: !4607, file: !3, line: 1015, type: !196)
!4649 = !DILocation(line: 1015, column: 6, scope: !4607)
!4650 = !DILocalVariable(name: "k", scope: !4607, file: !3, line: 1015, type: !196)
!4651 = !DILocation(line: 1015, column: 9, scope: !4607)
!4652 = !DILocalVariable(name: "gridSize", scope: !4607, file: !3, line: 1015, type: !196)
!4653 = !DILocation(line: 1015, column: 27, scope: !4607)
!4654 = !DILocalVariable(name: "dGridSize", scope: !4607, file: !3, line: 1015, type: !196)
!4655 = !DILocation(line: 1015, column: 37, scope: !4607)
!4656 = !DILocalVariable(name: "dSkip", scope: !4607, file: !3, line: 1015, type: !196)
!4657 = !DILocation(line: 1015, column: 48, scope: !4607)
!4658 = !DILocalVariable(name: "totloop", scope: !4607, file: !3, line: 1016, type: !196)
!4659 = !DILocation(line: 1016, column: 6, scope: !4607)
!4660 = !DILocalVariable(name: "totpoly", scope: !4607, file: !3, line: 1016, type: !196)
!4661 = !DILocation(line: 1016, column: 15, scope: !4607)
!4662 = !DILocation(line: 1019, column: 6, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 1019, column: 6)
!4664 = !DILocation(line: 1019, column: 10, scope: !4663)
!4665 = !DILocation(line: 1019, column: 35, scope: !4663)
!4666 = !DILocation(line: 1019, column: 40, scope: !4663)
!4667 = !DILocation(line: 1019, column: 13, scope: !4663)
!4668 = !DILocation(line: 1019, column: 6, scope: !4607)
!4669 = !DILocation(line: 1020, column: 33, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 1019, column: 62)
!4671 = !DILocation(line: 1020, column: 38, scope: !4670)
!4672 = !DILocation(line: 1020, column: 11, scope: !4670)
!4673 = !DILocation(line: 1020, column: 9, scope: !4670)
!4674 = !DILocation(line: 1021, column: 34, scope: !4670)
!4675 = !DILocation(line: 1021, column: 39, scope: !4670)
!4676 = !DILocation(line: 1021, column: 12, scope: !4670)
!4677 = !DILocation(line: 1021, column: 10, scope: !4670)
!4678 = !DILocation(line: 1022, column: 13, scope: !4670)
!4679 = !DILocation(line: 1022, column: 18, scope: !4670)
!4680 = !DILocation(line: 1022, column: 11, scope: !4670)
!4681 = !DILocation(line: 1023, column: 13, scope: !4670)
!4682 = !DILocation(line: 1023, column: 18, scope: !4670)
!4683 = !DILocation(line: 1023, column: 11, scope: !4670)
!4684 = !DILocation(line: 1024, column: 2, scope: !4670)
!4685 = !DILocation(line: 1026, column: 13, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 1025, column: 7)
!4687 = !DILocation(line: 1026, column: 17, scope: !4686)
!4688 = !DILocation(line: 1026, column: 11, scope: !4686)
!4689 = !DILocation(line: 1027, column: 13, scope: !4686)
!4690 = !DILocation(line: 1027, column: 17, scope: !4686)
!4691 = !DILocation(line: 1027, column: 11, scope: !4686)
!4692 = !DILocation(line: 1030, column: 7, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 1030, column: 6)
!4694 = !DILocation(line: 1030, column: 6, scope: !4607)
!4695 = !DILocation(line: 1031, column: 7, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 1031, column: 7)
!4697 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 1030, column: 15)
!4698 = !DILocation(line: 1031, column: 10, scope: !4696)
!4699 = !DILocation(line: 1031, column: 7, scope: !4697)
!4700 = !DILocation(line: 1032, column: 35, scope: !4696)
!4701 = !DILocation(line: 1032, column: 39, scope: !4696)
!4702 = !DILocation(line: 1032, column: 75, scope: !4696)
!4703 = !DILocation(line: 1032, column: 79, scope: !4696)
!4704 = !DILocation(line: 1032, column: 13, scope: !4696)
!4705 = !DILocation(line: 1032, column: 11, scope: !4696)
!4706 = !DILocation(line: 1032, column: 4, scope: !4696)
!4707 = !DILocation(line: 1034, column: 4, scope: !4696)
!4708 = !DILocation(line: 1035, column: 2, scope: !4697)
!4709 = !DILocation(line: 1038, column: 13, scope: !4607)
!4710 = !DILocation(line: 1038, column: 17, scope: !4607)
!4711 = !DILocation(line: 1038, column: 29, scope: !4607)
!4712 = !DILocation(line: 1038, column: 11, scope: !4607)
!4713 = !DILocation(line: 1039, column: 13, scope: !4607)
!4714 = !DILocation(line: 1039, column: 17, scope: !4607)
!4715 = !DILocation(line: 1039, column: 29, scope: !4607)
!4716 = !DILocation(line: 1039, column: 11, scope: !4607)
!4717 = !DILocation(line: 1040, column: 15, scope: !4607)
!4718 = !DILocation(line: 1040, column: 19, scope: !4607)
!4719 = !DILocation(line: 1040, column: 33, scope: !4607)
!4720 = !DILocation(line: 1040, column: 13, scope: !4607)
!4721 = !DILocation(line: 1041, column: 2, scope: !4607)
!4722 = !DILocation(line: 1041, column: 6, scope: !4607)
!4723 = !DILocation(line: 1041, column: 17, scope: !4607)
!4724 = !DILocation(line: 1042, column: 17, scope: !4607)
!4725 = !DILocation(line: 1042, column: 16, scope: !4607)
!4726 = !DILocation(line: 1042, column: 32, scope: !4607)
!4727 = !DILocation(line: 1042, column: 46, scope: !4607)
!4728 = !DILocation(line: 1042, column: 14, scope: !4607)
!4729 = !DILocation(line: 1044, column: 32, scope: !4607)
!4730 = !DILocation(line: 1044, column: 14, scope: !4607)
!4731 = !DILocation(line: 1044, column: 12, scope: !4607)
!4732 = !DILocation(line: 1045, column: 11, scope: !4607)
!4733 = !DILocation(line: 1045, column: 21, scope: !4607)
!4734 = !DILocation(line: 1045, column: 29, scope: !4607)
!4735 = !DILocation(line: 1045, column: 38, scope: !4607)
!4736 = !DILocation(line: 1045, column: 26, scope: !4607)
!4737 = !DILocation(line: 1045, column: 8, scope: !4607)
!4738 = !DILocation(line: 1048, column: 10, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 1048, column: 6)
!4740 = !DILocation(line: 1048, column: 6, scope: !4739)
!4741 = !DILocation(line: 1048, column: 6, scope: !4607)
!4742 = !DILocation(line: 1049, column: 43, scope: !4739)
!4743 = !DILocation(line: 1049, column: 47, scope: !4739)
!4744 = !DILocation(line: 1049, column: 21, scope: !4739)
!4745 = !DILocation(line: 1049, column: 19, scope: !4739)
!4746 = !DILocation(line: 1049, column: 3, scope: !4739)
!4747 = !DILocation(line: 1051, column: 4, scope: !4607)
!4748 = !DILocation(line: 1057, column: 9, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 1057, column: 2)
!4750 = !DILocation(line: 1057, column: 7, scope: !4749)
!4751 = !DILocation(line: 1057, column: 14, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 1057, column: 2)
!4753 = !DILocation(line: 1057, column: 18, scope: !4752)
!4754 = !DILocation(line: 1057, column: 16, scope: !4752)
!4755 = !DILocation(line: 1057, column: 2, scope: !4749)
!4756 = !DILocalVariable(name: "numVerts", scope: !4757, file: !3, line: 1058, type: !2620)
!4757 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 1057, column: 32)
!4758 = !DILocation(line: 1058, column: 13, scope: !4757)
!4759 = !DILocation(line: 1058, column: 24, scope: !4757)
!4760 = !DILocation(line: 1058, column: 30, scope: !4757)
!4761 = !DILocation(line: 1058, column: 33, scope: !4757)
!4762 = !DILocalVariable(name: "S", scope: !4757, file: !3, line: 1059, type: !196)
!4763 = !DILocation(line: 1059, column: 7, scope: !4757)
!4764 = !DILocalVariable(name: "x", scope: !4757, file: !3, line: 1059, type: !196)
!4765 = !DILocation(line: 1059, column: 10, scope: !4757)
!4766 = !DILocalVariable(name: "y", scope: !4757, file: !3, line: 1059, type: !196)
!4767 = !DILocation(line: 1059, column: 13, scope: !4757)
!4768 = !DILocalVariable(name: "gIndex", scope: !4757, file: !3, line: 1059, type: !196)
!4769 = !DILocation(line: 1059, column: 16, scope: !4757)
!4770 = !DILocation(line: 1059, column: 25, scope: !4757)
!4771 = !DILocation(line: 1059, column: 36, scope: !4757)
!4772 = !DILocation(line: 1061, column: 10, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 1061, column: 3)
!4774 = !DILocation(line: 1061, column: 8, scope: !4773)
!4775 = !DILocation(line: 1061, column: 15, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 1061, column: 3)
!4777 = !DILocation(line: 1061, column: 19, scope: !4776)
!4778 = !DILocation(line: 1061, column: 17, scope: !4776)
!4779 = !DILocation(line: 1061, column: 3, scope: !4773)
!4780 = !DILocalVariable(name: "gpm", scope: !4781, file: !3, line: 1062, type: !3844)
!4781 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 1061, column: 49)
!4782 = !DILocation(line: 1062, column: 19, scope: !4781)
!4783 = !DILocation(line: 1062, column: 25, scope: !4781)
!4784 = !DILocation(line: 1062, column: 44, scope: !4781)
!4785 = !DILocation(line: 1062, column: 60, scope: !4781)
!4786 = !DILocalVariable(name: "mdisp", scope: !4781, file: !3, line: 1063, type: !3566)
!4787 = !DILocation(line: 1063, column: 12, scope: !4781)
!4788 = !DILocation(line: 1063, column: 21, scope: !4781)
!4789 = !DILocation(line: 1063, column: 28, scope: !4781)
!4790 = !DILocation(line: 1063, column: 34, scope: !4781)
!4791 = !DILocation(line: 1063, column: 37, scope: !4781)
!4792 = !DILocation(line: 1063, column: 49, scope: !4781)
!4793 = !DILocation(line: 1063, column: 47, scope: !4781)
!4794 = !DILocalVariable(name: "grid", scope: !4781, file: !3, line: 1064, type: !2614)
!4795 = !DILocation(line: 1064, column: 13, scope: !4781)
!4796 = !DILocation(line: 1064, column: 20, scope: !4781)
!4797 = !DILocation(line: 1064, column: 29, scope: !4781)
!4798 = !DILocalVariable(name: "subgrid", scope: !4781, file: !3, line: 1065, type: !2614)
!4799 = !DILocation(line: 1065, column: 13, scope: !4781)
!4800 = !DILocation(line: 1065, column: 23, scope: !4781)
!4801 = !DILocation(line: 1065, column: 35, scope: !4781)
!4802 = !DILocalVariable(name: "dispgrid", scope: !4781, file: !3, line: 1066, type: !413)
!4803 = !DILocation(line: 1066, column: 12, scope: !4781)
!4804 = !DILocation(line: 1069, column: 9, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1069, column: 8)
!4806 = !DILocation(line: 1069, column: 16, scope: !4805)
!4807 = !DILocation(line: 1069, column: 8, scope: !4781)
!4808 = !DILocation(line: 1074, column: 32, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 1073, column: 4)
!4810 = !DILocation(line: 1074, column: 41, scope: !4809)
!4811 = !DILocation(line: 1074, column: 49, scope: !4809)
!4812 = !DILocation(line: 1074, column: 5, scope: !4809)
!4813 = !DILocation(line: 1075, column: 4, scope: !4809)
!4814 = !DILocation(line: 1077, column: 15, scope: !4781)
!4815 = !DILocation(line: 1077, column: 22, scope: !4781)
!4816 = !DILocation(line: 1077, column: 13, scope: !4781)
!4817 = !DILocation(line: 1080, column: 8, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1080, column: 8)
!4819 = !DILocation(line: 1080, column: 12, scope: !4818)
!4820 = !DILocation(line: 1080, column: 15, scope: !4818)
!4821 = !DILocation(line: 1080, column: 20, scope: !4818)
!4822 = !DILocation(line: 1080, column: 32, scope: !4818)
!4823 = !DILocation(line: 1080, column: 26, scope: !4818)
!4824 = !DILocation(line: 1080, column: 8, scope: !4781)
!4825 = !DILocation(line: 1081, column: 22, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1080, column: 39)
!4827 = !DILocation(line: 1081, column: 5, scope: !4826)
!4828 = !DILocation(line: 1081, column: 10, scope: !4826)
!4829 = !DILocation(line: 1081, column: 16, scope: !4826)
!4830 = !DILocation(line: 1086, column: 10, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 1086, column: 10)
!4832 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 1085, column: 5)
!4833 = !DILocation(line: 1086, column: 15, scope: !4831)
!4834 = !DILocation(line: 1086, column: 10, scope: !4832)
!4835 = !DILocation(line: 1087, column: 7, scope: !4831)
!4836 = !DILocation(line: 1087, column: 17, scope: !4831)
!4837 = !DILocation(line: 1087, column: 22, scope: !4831)
!4838 = !DILocation(line: 1088, column: 18, scope: !4832)
!4839 = !DILocation(line: 1088, column: 50, scope: !4832)
!4840 = !DILocation(line: 1088, column: 46, scope: !4832)
!4841 = !DILocation(line: 1088, column: 44, scope: !4832)
!4842 = !DILocation(line: 1088, column: 6, scope: !4832)
!4843 = !DILocation(line: 1088, column: 11, scope: !4832)
!4844 = !DILocation(line: 1088, column: 16, scope: !4832)
!4845 = !DILocation(line: 1090, column: 4, scope: !4826)
!4846 = !DILocation(line: 1092, column: 11, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1092, column: 4)
!4848 = !DILocation(line: 1092, column: 9, scope: !4847)
!4849 = !DILocation(line: 1092, column: 16, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1092, column: 4)
!4851 = !DILocation(line: 1092, column: 20, scope: !4850)
!4852 = !DILocation(line: 1092, column: 18, scope: !4850)
!4853 = !DILocation(line: 1092, column: 4, scope: !4847)
!4854 = !DILocation(line: 1093, column: 12, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 1093, column: 5)
!4856 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1092, column: 35)
!4857 = !DILocation(line: 1093, column: 10, scope: !4855)
!4858 = !DILocation(line: 1093, column: 17, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 1093, column: 5)
!4860 = !DILocation(line: 1093, column: 21, scope: !4859)
!4861 = !DILocation(line: 1093, column: 19, scope: !4859)
!4862 = !DILocation(line: 1093, column: 5, scope: !4855)
!4863 = !DILocalVariable(name: "co", scope: !4864, file: !3, line: 1094, type: !418)
!4864 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 1093, column: 36)
!4865 = !DILocation(line: 1094, column: 13, scope: !4864)
!4866 = !DILocation(line: 1094, column: 41, scope: !4864)
!4867 = !DILocation(line: 1094, column: 47, scope: !4864)
!4868 = !DILocation(line: 1094, column: 50, scope: !4864)
!4869 = !DILocation(line: 1094, column: 18, scope: !4864)
!4870 = !DILocalVariable(name: "sco", scope: !4864, file: !3, line: 1095, type: !418)
!4871 = !DILocation(line: 1095, column: 13, scope: !4864)
!4872 = !DILocation(line: 1095, column: 42, scope: !4864)
!4873 = !DILocation(line: 1095, column: 51, scope: !4864)
!4874 = !DILocation(line: 1095, column: 54, scope: !4864)
!4875 = !DILocation(line: 1095, column: 19, scope: !4864)
!4876 = !DILocalVariable(name: "data", scope: !4864, file: !3, line: 1096, type: !418)
!4877 = !DILocation(line: 1096, column: 13, scope: !4864)
!4878 = !DILocation(line: 1096, column: 20, scope: !4864)
!4879 = !DILocation(line: 1096, column: 29, scope: !4864)
!4880 = !DILocation(line: 1096, column: 41, scope: !4864)
!4881 = !DILocation(line: 1096, column: 39, scope: !4864)
!4882 = !DILocation(line: 1096, column: 45, scope: !4864)
!4883 = !DILocation(line: 1096, column: 43, scope: !4864)
!4884 = !DILocation(line: 1096, column: 53, scope: !4864)
!4885 = !DILocation(line: 1096, column: 57, scope: !4864)
!4886 = !DILocation(line: 1096, column: 55, scope: !4864)
!4887 = !DILocation(line: 1096, column: 51, scope: !4864)
!4888 = !DILocalVariable(name: "mat", scope: !4864, file: !3, line: 1097, type: !640)
!4889 = !DILocation(line: 1097, column: 12, scope: !4864)
!4890 = !DILocalVariable(name: "disp", scope: !4864, file: !3, line: 1097, type: !387)
!4891 = !DILocation(line: 1097, column: 23, scope: !4864)
!4892 = !DILocalVariable(name: "d", scope: !4864, file: !3, line: 1097, type: !387)
!4893 = !DILocation(line: 1097, column: 32, scope: !4864)
!4894 = !DILocalVariable(name: "mask", scope: !4864, file: !3, line: 1097, type: !388)
!4895 = !DILocation(line: 1097, column: 38, scope: !4864)
!4896 = !DILocation(line: 1100, column: 26, scope: !4864)
!4897 = !DILocation(line: 1100, column: 37, scope: !4864)
!4898 = !DILocation(line: 1100, column: 40, scope: !4864)
!4899 = !DILocation(line: 1100, column: 43, scope: !4864)
!4900 = !DILocation(line: 1100, column: 6, scope: !4864)
!4901 = !DILocation(line: 1102, column: 14, scope: !4864)
!4902 = !DILocation(line: 1102, column: 6, scope: !4864)
!4903 = !DILocation(line: 1106, column: 20, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1102, column: 18)
!4905 = !DILocation(line: 1106, column: 26, scope: !4904)
!4906 = !DILocation(line: 1106, column: 31, scope: !4904)
!4907 = !DILocation(line: 1106, column: 8, scope: !4904)
!4908 = !DILocation(line: 1107, column: 20, scope: !4904)
!4909 = !DILocation(line: 1107, column: 24, scope: !4904)
!4910 = !DILocation(line: 1107, column: 29, scope: !4904)
!4911 = !DILocation(line: 1107, column: 8, scope: !4904)
!4912 = !DILocation(line: 1108, column: 8, scope: !4904)
!4913 = !DILocation(line: 1112, column: 20, scope: !4904)
!4914 = !DILocation(line: 1112, column: 26, scope: !4904)
!4915 = !DILocation(line: 1112, column: 30, scope: !4904)
!4916 = !DILocation(line: 1112, column: 8, scope: !4904)
!4917 = !DILocation(line: 1113, column: 18, scope: !4904)
!4918 = !DILocation(line: 1113, column: 8, scope: !4904)
!4919 = !DILocation(line: 1114, column: 20, scope: !4904)
!4920 = !DILocation(line: 1114, column: 26, scope: !4904)
!4921 = !DILocation(line: 1114, column: 31, scope: !4904)
!4922 = !DILocation(line: 1114, column: 8, scope: !4904)
!4923 = !DILocation(line: 1115, column: 8, scope: !4904)
!4924 = !DILocation(line: 1119, column: 18, scope: !4904)
!4925 = !DILocation(line: 1119, column: 8, scope: !4904)
!4926 = !DILocation(line: 1120, column: 20, scope: !4904)
!4927 = !DILocation(line: 1120, column: 23, scope: !4904)
!4928 = !DILocation(line: 1120, column: 28, scope: !4904)
!4929 = !DILocation(line: 1120, column: 8, scope: !4904)
!4930 = !DILocation(line: 1121, column: 18, scope: !4904)
!4931 = !DILocation(line: 1121, column: 24, scope: !4904)
!4932 = !DILocation(line: 1121, column: 8, scope: !4904)
!4933 = !DILocation(line: 1122, column: 8, scope: !4904)
!4934 = !DILocation(line: 1125, column: 10, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1125, column: 10)
!4936 = !DILocation(line: 1125, column: 10, scope: !4864)
!4937 = !DILocation(line: 1126, column: 15, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 1125, column: 15)
!4939 = !DILocation(line: 1126, column: 7, scope: !4938)
!4940 = !DILocation(line: 1130, column: 35, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 1126, column: 19)
!4942 = !DILocation(line: 1130, column: 44, scope: !4941)
!4943 = !DILocation(line: 1130, column: 51, scope: !4941)
!4944 = !DILocation(line: 1130, column: 54, scope: !4941)
!4945 = !DILocation(line: 1130, column: 13, scope: !4941)
!4946 = !DILocation(line: 1129, column: 35, scope: !4941)
!4947 = !DILocation(line: 1129, column: 41, scope: !4941)
!4948 = !DILocation(line: 1129, column: 44, scope: !4941)
!4949 = !DILocation(line: 1129, column: 10, scope: !4941)
!4950 = !DILocation(line: 1129, column: 47, scope: !4941)
!4951 = !DILocation(line: 1131, column: 9, scope: !4941)
!4952 = !DILocation(line: 1134, column: 42, scope: !4941)
!4953 = !DILocation(line: 1134, column: 48, scope: !4941)
!4954 = !DILocation(line: 1134, column: 51, scope: !4941)
!4955 = !DILocation(line: 1134, column: 17, scope: !4941)
!4956 = !DILocation(line: 1134, column: 16, scope: !4941)
!4957 = !DILocation(line: 1134, column: 14, scope: !4941)
!4958 = !DILocation(line: 1135, column: 39, scope: !4941)
!4959 = !DILocation(line: 1135, column: 9, scope: !4941)
!4960 = !DILocation(line: 1135, column: 14, scope: !4941)
!4961 = !DILocation(line: 1135, column: 19, scope: !4941)
!4962 = !DILocation(line: 1135, column: 23, scope: !4941)
!4963 = !DILocation(line: 1135, column: 21, scope: !4941)
!4964 = !DILocation(line: 1135, column: 34, scope: !4941)
!4965 = !DILocation(line: 1135, column: 32, scope: !4941)
!4966 = !DILocation(line: 1135, column: 37, scope: !4941)
!4967 = !DILocation(line: 1136, column: 9, scope: !4941)
!4968 = !DILocation(line: 1140, column: 39, scope: !4941)
!4969 = !DILocation(line: 1140, column: 45, scope: !4941)
!4970 = !DILocation(line: 1140, column: 48, scope: !4941)
!4971 = !DILocation(line: 1140, column: 14, scope: !4941)
!4972 = !DILocation(line: 1140, column: 13, scope: !4941)
!4973 = !DILocation(line: 1139, column: 9, scope: !4941)
!4974 = !DILocation(line: 1139, column: 14, scope: !4941)
!4975 = !DILocation(line: 1139, column: 19, scope: !4941)
!4976 = !DILocation(line: 1139, column: 23, scope: !4941)
!4977 = !DILocation(line: 1139, column: 21, scope: !4941)
!4978 = !DILocation(line: 1139, column: 34, scope: !4941)
!4979 = !DILocation(line: 1139, column: 32, scope: !4941)
!4980 = !DILocation(line: 1139, column: 37, scope: !4941)
!4981 = !DILocation(line: 1141, column: 9, scope: !4941)
!4982 = !DILocation(line: 1143, column: 6, scope: !4938)
!4983 = !DILocation(line: 1144, column: 5, scope: !4864)
!4984 = !DILocation(line: 1093, column: 32, scope: !4859)
!4985 = !DILocation(line: 1093, column: 5, scope: !4859)
!4986 = distinct !{!4986, !4862, !4987}
!4987 = !DILocation(line: 1144, column: 5, scope: !4855)
!4988 = !DILocation(line: 1145, column: 4, scope: !4856)
!4989 = !DILocation(line: 1092, column: 31, scope: !4850)
!4990 = !DILocation(line: 1092, column: 4, scope: !4850)
!4991 = distinct !{!4991, !4853, !4992}
!4992 = !DILocation(line: 1145, column: 4, scope: !4847)
!4993 = !DILocation(line: 1146, column: 3, scope: !4781)
!4994 = !DILocation(line: 1061, column: 29, scope: !4776)
!4995 = !DILocation(line: 1061, column: 34, scope: !4776)
!4996 = !DILocation(line: 1061, column: 44, scope: !4776)
!4997 = !DILocation(line: 1061, column: 3, scope: !4776)
!4998 = distinct !{!4998, !4779, !4999}
!4999 = !DILocation(line: 1146, column: 3, scope: !4773)
!5000 = !DILocation(line: 1147, column: 2, scope: !4757)
!5001 = !DILocation(line: 1057, column: 27, scope: !4752)
!5002 = !DILocation(line: 1057, column: 2, scope: !4752)
!5003 = distinct !{!5003, !4755, !5004}
!5004 = !DILocation(line: 1147, column: 2, scope: !4749)
!5005 = !DILocation(line: 1149, column: 6, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 1149, column: 6)
!5007 = !DILocation(line: 1149, column: 9, scope: !5006)
!5008 = !DILocation(line: 1149, column: 6, scope: !4607)
!5009 = !DILocation(line: 1150, column: 26, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 1149, column: 33)
!5011 = !DILocation(line: 1150, column: 33, scope: !5010)
!5012 = !DILocation(line: 1150, column: 3, scope: !5010)
!5013 = !DILocation(line: 1151, column: 28, scope: !5010)
!5014 = !DILocation(line: 1151, column: 35, scope: !5010)
!5015 = !DILocation(line: 1151, column: 3, scope: !5010)
!5016 = !DILocation(line: 1152, column: 2, scope: !5010)
!5017 = !DILocation(line: 1153, column: 1, scope: !4607)
!5018 = distinct !DISubprogram(name: "multiresModifier_subdivide", scope: !3, file: !3, line: 961, type: !5019, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!5019 = !DISubroutineType(types: !5020)
!5020 = !{null, !2391, !2689, !196, !196}
!5021 = !DILocalVariable(name: "mmd", arg: 1, scope: !5018, file: !3, line: 961, type: !2391)
!5022 = !DILocation(line: 961, column: 55, scope: !5018)
!5023 = !DILocalVariable(name: "ob", arg: 2, scope: !5018, file: !3, line: 961, type: !2689)
!5024 = !DILocation(line: 961, column: 68, scope: !5018)
!5025 = !DILocalVariable(name: "updateblock", arg: 3, scope: !5018, file: !3, line: 961, type: !196)
!5026 = !DILocation(line: 961, column: 76, scope: !5018)
!5027 = !DILocalVariable(name: "simple", arg: 4, scope: !5018, file: !3, line: 961, type: !196)
!5028 = !DILocation(line: 961, column: 93, scope: !5018)
!5029 = !DILocation(line: 963, column: 21, scope: !5018)
!5030 = !DILocation(line: 963, column: 26, scope: !5018)
!5031 = !DILocation(line: 963, column: 30, scope: !5018)
!5032 = !DILocation(line: 963, column: 35, scope: !5018)
!5033 = !DILocation(line: 963, column: 42, scope: !5018)
!5034 = !DILocation(line: 963, column: 47, scope: !5018)
!5035 = !DILocation(line: 963, column: 60, scope: !5018)
!5036 = !DILocation(line: 963, column: 2, scope: !5018)
!5037 = !DILocation(line: 964, column: 1, scope: !5018)
!5038 = distinct !DISubprogram(name: "multires_subdivide", scope: !3, file: !3, line: 881, type: !5039, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{null, !2391, !2689, !196, !196, !196}
!5041 = !DILocalVariable(name: "mmd", arg: 1, scope: !5038, file: !3, line: 881, type: !2391)
!5042 = !DILocation(line: 881, column: 54, scope: !5038)
!5043 = !DILocalVariable(name: "ob", arg: 2, scope: !5038, file: !3, line: 881, type: !2689)
!5044 = !DILocation(line: 881, column: 67, scope: !5038)
!5045 = !DILocalVariable(name: "totlvl", arg: 3, scope: !5038, file: !3, line: 881, type: !196)
!5046 = !DILocation(line: 881, column: 75, scope: !5038)
!5047 = !DILocalVariable(name: "updateblock", arg: 4, scope: !5038, file: !3, line: 881, type: !196)
!5048 = !DILocation(line: 881, column: 87, scope: !5038)
!5049 = !DILocalVariable(name: "simple", arg: 5, scope: !5038, file: !3, line: 881, type: !196)
!5050 = !DILocation(line: 881, column: 104, scope: !5038)
!5051 = !DILocalVariable(name: "me", scope: !5038, file: !3, line: 883, type: !2466)
!5052 = !DILocation(line: 883, column: 8, scope: !5038)
!5053 = !DILocation(line: 883, column: 13, scope: !5038)
!5054 = !DILocation(line: 883, column: 17, scope: !5038)
!5055 = !DILocalVariable(name: "mdisps", scope: !5038, file: !3, line: 884, type: !3566)
!5056 = !DILocation(line: 884, column: 10, scope: !5038)
!5057 = !DILocalVariable(name: "lvl", scope: !5038, file: !3, line: 885, type: !196)
!5058 = !DILocation(line: 885, column: 6, scope: !5038)
!5059 = !DILocation(line: 885, column: 12, scope: !5038)
!5060 = !DILocation(line: 885, column: 17, scope: !5038)
!5061 = !DILocation(line: 887, column: 7, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 887, column: 6)
!5063 = !DILocation(line: 887, column: 14, scope: !5062)
!5064 = !DILocation(line: 887, column: 37, scope: !5062)
!5065 = !DILocation(line: 887, column: 41, scope: !5062)
!5066 = !DILocation(line: 887, column: 45, scope: !5062)
!5067 = !DILocation(line: 887, column: 53, scope: !5062)
!5068 = !DILocation(line: 887, column: 6, scope: !5038)
!5069 = !DILocation(line: 888, column: 3, scope: !5062)
!5070 = !DILocation(line: 890, column: 24, scope: !5038)
!5071 = !DILocation(line: 890, column: 2, scope: !5038)
!5072 = !DILocation(line: 892, column: 33, scope: !5038)
!5073 = !DILocation(line: 892, column: 37, scope: !5038)
!5074 = !DILocation(line: 892, column: 11, scope: !5038)
!5075 = !DILocation(line: 892, column: 9, scope: !5038)
!5076 = !DILocation(line: 893, column: 7, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 893, column: 6)
!5078 = !DILocation(line: 893, column: 6, scope: !5038)
!5079 = !DILocation(line: 894, column: 46, scope: !5077)
!5080 = !DILocation(line: 894, column: 50, scope: !5077)
!5081 = !DILocation(line: 894, column: 12, scope: !5077)
!5082 = !DILocation(line: 894, column: 10, scope: !5077)
!5083 = !DILocation(line: 894, column: 3, scope: !5077)
!5084 = !DILocation(line: 896, column: 6, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 896, column: 6)
!5086 = !DILocation(line: 896, column: 14, scope: !5085)
!5087 = !DILocation(line: 896, column: 20, scope: !5085)
!5088 = !DILocation(line: 896, column: 24, scope: !5085)
!5089 = !DILocation(line: 896, column: 36, scope: !5085)
!5090 = !DILocation(line: 896, column: 39, scope: !5085)
!5091 = !DILocation(line: 896, column: 46, scope: !5085)
!5092 = !DILocation(line: 896, column: 6, scope: !5038)
!5093 = !DILocalVariable(name: "lowdm", scope: !5094, file: !3, line: 898, type: !915)
!5094 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 896, column: 51)
!5095 = !DILocation(line: 898, column: 16, scope: !5094)
!5096 = !DILocalVariable(name: "cddm", scope: !5094, file: !3, line: 898, type: !915)
!5097 = !DILocation(line: 898, column: 24, scope: !5094)
!5098 = !DILocalVariable(name: "highdm", scope: !5094, file: !3, line: 898, type: !915)
!5099 = !DILocation(line: 898, column: 31, scope: !5094)
!5100 = !DILocalVariable(name: "highGridData", scope: !5094, file: !3, line: 899, type: !4611)
!5101 = !DILocation(line: 899, column: 13, scope: !5094)
!5102 = !DILocalVariable(name: "lowGridData", scope: !5094, file: !3, line: 899, type: !4611)
!5103 = !DILocation(line: 899, column: 29, scope: !5094)
!5104 = !DILocalVariable(name: "subGridData", scope: !5094, file: !3, line: 899, type: !4611)
!5105 = !DILocation(line: 899, column: 44, scope: !5094)
!5106 = !DILocalVariable(name: "highGridKey", scope: !5094, file: !3, line: 900, type: !3133)
!5107 = !DILocation(line: 900, column: 10, scope: !5094)
!5108 = !DILocalVariable(name: "lowGridKey", scope: !5094, file: !3, line: 900, type: !3133)
!5109 = !DILocation(line: 900, column: 23, scope: !5094)
!5110 = !DILocalVariable(name: "ss", scope: !5094, file: !3, line: 901, type: !3124)
!5111 = !DILocation(line: 901, column: 15, scope: !5094)
!5112 = !DILocalVariable(name: "i", scope: !5094, file: !3, line: 902, type: !196)
!5113 = !DILocation(line: 902, column: 7, scope: !5094)
!5114 = !DILocalVariable(name: "numGrids", scope: !5094, file: !3, line: 902, type: !196)
!5115 = !DILocation(line: 902, column: 10, scope: !5094)
!5116 = !DILocalVariable(name: "highGridSize", scope: !5094, file: !3, line: 902, type: !196)
!5117 = !DILocation(line: 902, column: 20, scope: !5094)
!5118 = !DILocalVariable(name: "has_mask", scope: !5094, file: !3, line: 903, type: !1261)
!5119 = !DILocation(line: 903, column: 14, scope: !5094)
!5120 = !DILocation(line: 903, column: 47, scope: !5094)
!5121 = !DILocation(line: 903, column: 51, scope: !5094)
!5122 = !DILocation(line: 903, column: 25, scope: !5094)
!5123 = !DILocation(line: 906, column: 25, scope: !5094)
!5124 = !DILocation(line: 906, column: 10, scope: !5094)
!5125 = !DILocation(line: 906, column: 8, scope: !5094)
!5126 = !DILocation(line: 907, column: 20, scope: !5094)
!5127 = !DILocation(line: 907, column: 26, scope: !5094)
!5128 = !DILocation(line: 907, column: 3, scope: !5094)
!5129 = !DILocation(line: 908, column: 36, scope: !5094)
!5130 = !DILocation(line: 908, column: 40, scope: !5094)
!5131 = !DILocation(line: 908, column: 46, scope: !5094)
!5132 = !DILocation(line: 908, column: 54, scope: !5094)
!5133 = !DILocation(line: 908, column: 65, scope: !5094)
!5134 = !DILocation(line: 908, column: 70, scope: !5094)
!5135 = !DILocation(line: 908, column: 76, scope: !5094)
!5136 = !DILocation(line: 908, column: 109, scope: !5094)
!5137 = !DILocation(line: 908, column: 12, scope: !5094)
!5138 = !DILocation(line: 908, column: 10, scope: !5094)
!5139 = !DILocation(line: 909, column: 27, scope: !5094)
!5140 = !DILocation(line: 909, column: 36, scope: !5094)
!5141 = !DILocation(line: 909, column: 6, scope: !5094)
!5142 = !DILocation(line: 912, column: 36, scope: !5094)
!5143 = !DILocation(line: 912, column: 40, scope: !5094)
!5144 = !DILocation(line: 912, column: 46, scope: !5094)
!5145 = !DILocation(line: 912, column: 51, scope: !5094)
!5146 = !DILocation(line: 912, column: 56, scope: !5094)
!5147 = !DILocation(line: 912, column: 64, scope: !5094)
!5148 = !DILocation(line: 912, column: 11, scope: !5094)
!5149 = !DILocation(line: 912, column: 9, scope: !5094)
!5150 = !DILocation(line: 913, column: 3, scope: !5094)
!5151 = !DILocation(line: 913, column: 9, scope: !5094)
!5152 = !DILocation(line: 913, column: 17, scope: !5094)
!5153 = !DILocation(line: 916, column: 14, scope: !5094)
!5154 = !DILocation(line: 916, column: 22, scope: !5094)
!5155 = !DILocation(line: 916, column: 34, scope: !5094)
!5156 = !DILocation(line: 916, column: 12, scope: !5094)
!5157 = !DILocation(line: 917, column: 18, scope: !5094)
!5158 = !DILocation(line: 917, column: 26, scope: !5094)
!5159 = !DILocation(line: 917, column: 38, scope: !5094)
!5160 = !DILocation(line: 917, column: 16, scope: !5094)
!5161 = !DILocation(line: 918, column: 18, scope: !5094)
!5162 = !DILocation(line: 918, column: 26, scope: !5094)
!5163 = !DILocation(line: 918, column: 38, scope: !5094)
!5164 = !DILocation(line: 918, column: 16, scope: !5094)
!5165 = !DILocation(line: 919, column: 3, scope: !5094)
!5166 = !DILocation(line: 919, column: 11, scope: !5094)
!5167 = !DILocation(line: 919, column: 22, scope: !5094)
!5168 = !DILocation(line: 920, column: 17, scope: !5094)
!5169 = !DILocation(line: 920, column: 24, scope: !5094)
!5170 = !DILocation(line: 920, column: 36, scope: !5094)
!5171 = !DILocation(line: 920, column: 15, scope: !5094)
!5172 = !DILocation(line: 921, column: 3, scope: !5094)
!5173 = !DILocation(line: 921, column: 10, scope: !5094)
!5174 = !DILocation(line: 921, column: 21, scope: !5094)
!5175 = !DILocation(line: 923, column: 17, scope: !5094)
!5176 = !DILocation(line: 923, column: 47, scope: !5094)
!5177 = !DILocation(line: 923, column: 45, scope: !5094)
!5178 = !DILocation(line: 923, column: 15, scope: !5094)
!5179 = !DILocation(line: 925, column: 10, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 925, column: 3)
!5181 = !DILocation(line: 925, column: 8, scope: !5180)
!5182 = !DILocation(line: 925, column: 15, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 925, column: 3)
!5184 = !DILocation(line: 925, column: 19, scope: !5183)
!5185 = !DILocation(line: 925, column: 17, scope: !5183)
!5186 = !DILocation(line: 925, column: 3, scope: !5180)
!5187 = !DILocation(line: 927, column: 21, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 925, column: 34)
!5189 = !DILocation(line: 927, column: 45, scope: !5188)
!5190 = !DILocation(line: 927, column: 57, scope: !5188)
!5191 = !DILocation(line: 927, column: 55, scope: !5188)
!5192 = !DILocation(line: 927, column: 72, scope: !5188)
!5193 = !DILocation(line: 927, column: 70, scope: !5188)
!5194 = !DILocation(line: 927, column: 33, scope: !5188)
!5195 = !DILocation(line: 927, column: 4, scope: !5188)
!5196 = !DILocation(line: 927, column: 16, scope: !5188)
!5197 = !DILocation(line: 927, column: 19, scope: !5188)
!5198 = !DILocation(line: 928, column: 11, scope: !5188)
!5199 = !DILocation(line: 928, column: 23, scope: !5188)
!5200 = !DILocation(line: 928, column: 4, scope: !5188)
!5201 = !DILocation(line: 928, column: 27, scope: !5188)
!5202 = !DILocation(line: 928, column: 40, scope: !5188)
!5203 = !DILocation(line: 928, column: 56, scope: !5188)
!5204 = !DILocation(line: 928, column: 68, scope: !5188)
!5205 = !DILocation(line: 928, column: 66, scope: !5188)
!5206 = !DILocation(line: 928, column: 83, scope: !5188)
!5207 = !DILocation(line: 928, column: 81, scope: !5188)
!5208 = !DILocation(line: 928, column: 44, scope: !5188)
!5209 = !DILocation(line: 931, column: 26, scope: !5188)
!5210 = !DILocation(line: 931, column: 39, scope: !5188)
!5211 = !DILocation(line: 931, column: 43, scope: !5188)
!5212 = !DILocation(line: 931, column: 55, scope: !5188)
!5213 = !DILocation(line: 931, column: 4, scope: !5188)
!5214 = !DILocation(line: 932, column: 3, scope: !5188)
!5215 = !DILocation(line: 925, column: 29, scope: !5183)
!5216 = !DILocation(line: 925, column: 3, scope: !5183)
!5217 = distinct !{!5217, !5186, !5218}
!5218 = !DILocation(line: 932, column: 3, scope: !5180)
!5219 = !DILocation(line: 935, column: 3, scope: !5094)
!5220 = !DILocation(line: 935, column: 10, scope: !5094)
!5221 = !DILocation(line: 935, column: 18, scope: !5094)
!5222 = !DILocation(line: 938, column: 30, scope: !5094)
!5223 = !DILocation(line: 938, column: 34, scope: !5094)
!5224 = !DILocation(line: 938, column: 3, scope: !5094)
!5225 = !DILocation(line: 939, column: 27, scope: !5094)
!5226 = !DILocation(line: 939, column: 31, scope: !5094)
!5227 = !DILocation(line: 939, column: 3, scope: !5094)
!5228 = !DILocation(line: 942, column: 30, scope: !5094)
!5229 = !DILocation(line: 942, column: 34, scope: !5094)
!5230 = !DILocation(line: 942, column: 43, scope: !5094)
!5231 = !DILocation(line: 942, column: 51, scope: !5094)
!5232 = !DILocation(line: 942, column: 3, scope: !5094)
!5233 = !DILocation(line: 945, column: 29, scope: !5094)
!5234 = !DILocation(line: 945, column: 37, scope: !5094)
!5235 = !DILocation(line: 945, column: 67, scope: !5094)
!5236 = !DILocation(line: 945, column: 80, scope: !5094)
!5237 = !DILocation(line: 945, column: 3, scope: !5094)
!5238 = !DILocation(line: 948, column: 3, scope: !5094)
!5239 = !DILocation(line: 948, column: 11, scope: !5094)
!5240 = !DILocation(line: 948, column: 19, scope: !5094)
!5241 = !DILocation(line: 949, column: 10, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 949, column: 3)
!5243 = !DILocation(line: 949, column: 8, scope: !5242)
!5244 = !DILocation(line: 949, column: 15, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 949, column: 3)
!5246 = !DILocation(line: 949, column: 19, scope: !5245)
!5247 = !DILocation(line: 949, column: 17, scope: !5245)
!5248 = !DILocation(line: 949, column: 3, scope: !5242)
!5249 = !DILocation(line: 950, column: 4, scope: !5245)
!5250 = !DILocation(line: 950, column: 14, scope: !5245)
!5251 = !DILocation(line: 950, column: 26, scope: !5245)
!5252 = !DILocation(line: 949, column: 29, scope: !5245)
!5253 = !DILocation(line: 949, column: 3, scope: !5245)
!5254 = distinct !{!5254, !5248, !5255}
!5255 = !DILocation(line: 950, column: 28, scope: !5242)
!5256 = !DILocation(line: 951, column: 3, scope: !5094)
!5257 = !DILocation(line: 951, column: 13, scope: !5094)
!5258 = !DILocation(line: 952, column: 2, scope: !5094)
!5259 = !DILocation(line: 955, column: 30, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 953, column: 7)
!5261 = !DILocation(line: 955, column: 34, scope: !5260)
!5262 = !DILocation(line: 955, column: 43, scope: !5260)
!5263 = !DILocation(line: 955, column: 51, scope: !5260)
!5264 = !DILocation(line: 955, column: 3, scope: !5260)
!5265 = !DILocation(line: 958, column: 25, scope: !5038)
!5266 = !DILocation(line: 958, column: 29, scope: !5038)
!5267 = !DILocation(line: 958, column: 34, scope: !5038)
!5268 = !DILocation(line: 958, column: 2, scope: !5038)
!5269 = !DILocation(line: 959, column: 1, scope: !5038)
!5270 = distinct !DISubprogram(name: "multires_modifier_update_mdisps", scope: !3, file: !3, line: 1155, type: !5271, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{null, !879}
!5273 = !DILocalVariable(name: "dm", arg: 1, scope: !5270, file: !3, line: 1155, type: !879)
!5274 = !DILocation(line: 1155, column: 58, scope: !5270)
!5275 = !DILocalVariable(name: "ccgdm", scope: !5270, file: !3, line: 1157, type: !2395)
!5276 = !DILocation(line: 1157, column: 18, scope: !5270)
!5277 = !DILocation(line: 1157, column: 44, scope: !5270)
!5278 = !DILocation(line: 1157, column: 26, scope: !5270)
!5279 = !DILocalVariable(name: "ob", scope: !5270, file: !3, line: 1158, type: !2689)
!5280 = !DILocation(line: 1158, column: 10, scope: !5270)
!5281 = !DILocalVariable(name: "me", scope: !5270, file: !3, line: 1159, type: !2466)
!5282 = !DILocation(line: 1159, column: 8, scope: !5270)
!5283 = !DILocalVariable(name: "mdisps", scope: !5270, file: !3, line: 1160, type: !3566)
!5284 = !DILocation(line: 1160, column: 10, scope: !5270)
!5285 = !DILocalVariable(name: "mmd", scope: !5270, file: !3, line: 1161, type: !2391)
!5286 = !DILocation(line: 1161, column: 24, scope: !5270)
!5287 = !DILocation(line: 1163, column: 7, scope: !5270)
!5288 = !DILocation(line: 1163, column: 14, scope: !5270)
!5289 = !DILocation(line: 1163, column: 23, scope: !5270)
!5290 = !DILocation(line: 1163, column: 5, scope: !5270)
!5291 = !DILocation(line: 1164, column: 7, scope: !5270)
!5292 = !DILocation(line: 1164, column: 14, scope: !5270)
!5293 = !DILocation(line: 1164, column: 23, scope: !5270)
!5294 = !DILocation(line: 1164, column: 27, scope: !5270)
!5295 = !DILocation(line: 1164, column: 5, scope: !5270)
!5296 = !DILocation(line: 1165, column: 8, scope: !5270)
!5297 = !DILocation(line: 1165, column: 15, scope: !5270)
!5298 = !DILocation(line: 1165, column: 24, scope: !5270)
!5299 = !DILocation(line: 1165, column: 6, scope: !5270)
!5300 = !DILocation(line: 1166, column: 26, scope: !5270)
!5301 = !DILocation(line: 1166, column: 30, scope: !5270)
!5302 = !DILocation(line: 1166, column: 35, scope: !5270)
!5303 = !DILocation(line: 1166, column: 2, scope: !5270)
!5304 = !DILocation(line: 1167, column: 28, scope: !5270)
!5305 = !DILocation(line: 1167, column: 32, scope: !5270)
!5306 = !DILocation(line: 1167, column: 40, scope: !5270)
!5307 = !DILocation(line: 1167, column: 44, scope: !5270)
!5308 = !DILocation(line: 1167, column: 64, scope: !5270)
!5309 = !DILocation(line: 1167, column: 68, scope: !5270)
!5310 = !DILocation(line: 1167, column: 2, scope: !5270)
!5311 = !DILocation(line: 1168, column: 33, scope: !5270)
!5312 = !DILocation(line: 1168, column: 37, scope: !5270)
!5313 = !DILocation(line: 1168, column: 11, scope: !5270)
!5314 = !DILocation(line: 1168, column: 9, scope: !5270)
!5315 = !DILocation(line: 1170, column: 6, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 1170, column: 6)
!5317 = !DILocation(line: 1170, column: 6, scope: !5270)
!5318 = !DILocalVariable(name: "lvl", scope: !5319, file: !3, line: 1171, type: !196)
!5319 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 1170, column: 14)
!5320 = !DILocation(line: 1171, column: 7, scope: !5319)
!5321 = !DILocation(line: 1171, column: 13, scope: !5319)
!5322 = !DILocation(line: 1171, column: 20, scope: !5319)
!5323 = !DILocation(line: 1171, column: 29, scope: !5319)
!5324 = !DILocalVariable(name: "totlvl", scope: !5319, file: !3, line: 1172, type: !196)
!5325 = !DILocation(line: 1172, column: 7, scope: !5319)
!5326 = !DILocation(line: 1172, column: 16, scope: !5319)
!5327 = !DILocation(line: 1172, column: 23, scope: !5319)
!5328 = !DILocation(line: 1172, column: 32, scope: !5319)
!5329 = !DILocation(line: 1174, column: 7, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 1174, column: 7)
!5331 = !DILocation(line: 1174, column: 13, scope: !5330)
!5332 = !DILocation(line: 1174, column: 11, scope: !5330)
!5333 = !DILocation(line: 1174, column: 7, scope: !5319)
!5334 = !DILocalVariable(name: "lowdm", scope: !5335, file: !3, line: 1175, type: !915)
!5335 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 1174, column: 21)
!5336 = !DILocation(line: 1175, column: 17, scope: !5335)
!5337 = !DILocalVariable(name: "cddm", scope: !5335, file: !3, line: 1175, type: !915)
!5338 = !DILocation(line: 1175, column: 25, scope: !5335)
!5339 = !DILocalVariable(name: "highdm", scope: !5335, file: !3, line: 1175, type: !915)
!5340 = !DILocation(line: 1175, column: 32, scope: !5335)
!5341 = !DILocalVariable(name: "highGridData", scope: !5335, file: !3, line: 1176, type: !4611)
!5342 = !DILocation(line: 1176, column: 14, scope: !5335)
!5343 = !DILocalVariable(name: "lowGridData", scope: !5335, file: !3, line: 1176, type: !4611)
!5344 = !DILocation(line: 1176, column: 30, scope: !5335)
!5345 = !DILocalVariable(name: "subGridData", scope: !5335, file: !3, line: 1176, type: !4611)
!5346 = !DILocation(line: 1176, column: 45, scope: !5335)
!5347 = !DILocalVariable(name: "gridData", scope: !5335, file: !3, line: 1176, type: !4611)
!5348 = !DILocation(line: 1176, column: 60, scope: !5335)
!5349 = !DILocalVariable(name: "diffGrid", scope: !5335, file: !3, line: 1176, type: !2614)
!5350 = !DILocation(line: 1176, column: 71, scope: !5335)
!5351 = !DILocalVariable(name: "highGridKey", scope: !5335, file: !3, line: 1177, type: !3133)
!5352 = !DILocation(line: 1177, column: 11, scope: !5335)
!5353 = !DILocalVariable(name: "lowGridKey", scope: !5335, file: !3, line: 1177, type: !3133)
!5354 = !DILocation(line: 1177, column: 24, scope: !5335)
!5355 = !DILocalVariable(name: "ss", scope: !5335, file: !3, line: 1178, type: !3124)
!5356 = !DILocation(line: 1178, column: 16, scope: !5335)
!5357 = !DILocalVariable(name: "i", scope: !5335, file: !3, line: 1179, type: !196)
!5358 = !DILocation(line: 1179, column: 8, scope: !5335)
!5359 = !DILocalVariable(name: "j", scope: !5335, file: !3, line: 1179, type: !196)
!5360 = !DILocation(line: 1179, column: 11, scope: !5335)
!5361 = !DILocalVariable(name: "numGrids", scope: !5335, file: !3, line: 1179, type: !196)
!5362 = !DILocation(line: 1179, column: 14, scope: !5335)
!5363 = !DILocalVariable(name: "highGridSize", scope: !5335, file: !3, line: 1179, type: !196)
!5364 = !DILocation(line: 1179, column: 24, scope: !5335)
!5365 = !DILocalVariable(name: "lowGridSize", scope: !5335, file: !3, line: 1179, type: !196)
!5366 = !DILocation(line: 1179, column: 38, scope: !5335)
!5367 = !DILocalVariable(name: "has_mask", scope: !5335, file: !3, line: 1180, type: !1261)
!5368 = !DILocation(line: 1180, column: 15, scope: !5335)
!5369 = !DILocation(line: 1180, column: 48, scope: !5335)
!5370 = !DILocation(line: 1180, column: 52, scope: !5335)
!5371 = !DILocation(line: 1180, column: 26, scope: !5335)
!5372 = !DILocation(line: 1183, column: 8, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1183, column: 8)
!5374 = !DILocation(line: 1183, column: 12, scope: !5373)
!5375 = !DILocation(line: 1183, column: 8, scope: !5335)
!5376 = !DILocation(line: 1183, column: 44, scope: !5373)
!5377 = !DILocation(line: 1183, column: 48, scope: !5373)
!5378 = !DILocation(line: 1183, column: 34, scope: !5373)
!5379 = !DILocation(line: 1183, column: 32, scope: !5373)
!5380 = !DILocation(line: 1183, column: 27, scope: !5373)
!5381 = !DILocation(line: 1184, column: 31, scope: !5373)
!5382 = !DILocation(line: 1184, column: 16, scope: !5373)
!5383 = !DILocation(line: 1184, column: 14, scope: !5373)
!5384 = !DILocation(line: 1185, column: 21, scope: !5335)
!5385 = !DILocation(line: 1185, column: 27, scope: !5335)
!5386 = !DILocation(line: 1185, column: 4, scope: !5335)
!5387 = !DILocation(line: 1187, column: 37, scope: !5335)
!5388 = !DILocation(line: 1187, column: 41, scope: !5335)
!5389 = !DILocation(line: 1187, column: 47, scope: !5335)
!5390 = !DILocation(line: 1187, column: 55, scope: !5335)
!5391 = !DILocation(line: 1187, column: 60, scope: !5335)
!5392 = !DILocation(line: 1187, column: 71, scope: !5335)
!5393 = !DILocation(line: 1187, column: 76, scope: !5335)
!5394 = !DILocation(line: 1187, column: 82, scope: !5335)
!5395 = !DILocation(line: 1187, column: 115, scope: !5335)
!5396 = !DILocation(line: 1187, column: 13, scope: !5335)
!5397 = !DILocation(line: 1187, column: 11, scope: !5335)
!5398 = !DILocation(line: 1188, column: 28, scope: !5335)
!5399 = !DILocation(line: 1188, column: 37, scope: !5335)
!5400 = !DILocation(line: 1188, column: 7, scope: !5335)
!5401 = !DILocation(line: 1191, column: 37, scope: !5335)
!5402 = !DILocation(line: 1191, column: 41, scope: !5335)
!5403 = !DILocation(line: 1191, column: 47, scope: !5335)
!5404 = !DILocation(line: 1191, column: 52, scope: !5335)
!5405 = !DILocation(line: 1191, column: 60, scope: !5335)
!5406 = !DILocation(line: 1191, column: 65, scope: !5335)
!5407 = !DILocation(line: 1191, column: 73, scope: !5335)
!5408 = !DILocation(line: 1191, column: 12, scope: !5335)
!5409 = !DILocation(line: 1191, column: 10, scope: !5335)
!5410 = !DILocation(line: 1192, column: 4, scope: !5335)
!5411 = !DILocation(line: 1192, column: 10, scope: !5335)
!5412 = !DILocation(line: 1192, column: 18, scope: !5335)
!5413 = !DILocation(line: 1195, column: 15, scope: !5335)
!5414 = !DILocation(line: 1195, column: 23, scope: !5335)
!5415 = !DILocation(line: 1195, column: 35, scope: !5335)
!5416 = !DILocation(line: 1195, column: 13, scope: !5335)
!5417 = !DILocation(line: 1196, column: 19, scope: !5335)
!5418 = !DILocation(line: 1196, column: 27, scope: !5335)
!5419 = !DILocation(line: 1196, column: 39, scope: !5335)
!5420 = !DILocation(line: 1196, column: 17, scope: !5335)
!5421 = !DILocation(line: 1197, column: 19, scope: !5335)
!5422 = !DILocation(line: 1197, column: 27, scope: !5335)
!5423 = !DILocation(line: 1197, column: 39, scope: !5335)
!5424 = !DILocation(line: 1197, column: 17, scope: !5335)
!5425 = !DILocation(line: 1198, column: 4, scope: !5335)
!5426 = !DILocation(line: 1198, column: 12, scope: !5335)
!5427 = !DILocation(line: 1198, column: 23, scope: !5335)
!5428 = !DILocation(line: 1199, column: 18, scope: !5335)
!5429 = !DILocation(line: 1199, column: 25, scope: !5335)
!5430 = !DILocation(line: 1199, column: 37, scope: !5335)
!5431 = !DILocation(line: 1199, column: 16, scope: !5335)
!5432 = !DILocation(line: 1200, column: 18, scope: !5335)
!5433 = !DILocation(line: 1200, column: 25, scope: !5335)
!5434 = !DILocation(line: 1200, column: 37, scope: !5335)
!5435 = !DILocation(line: 1200, column: 16, scope: !5335)
!5436 = !DILocation(line: 1201, column: 4, scope: !5335)
!5437 = !DILocation(line: 1201, column: 11, scope: !5335)
!5438 = !DILocation(line: 1201, column: 22, scope: !5335)
!5439 = !DILocation(line: 1202, column: 15, scope: !5335)
!5440 = !DILocation(line: 1202, column: 19, scope: !5335)
!5441 = !DILocation(line: 1202, column: 31, scope: !5335)
!5442 = !DILocation(line: 1202, column: 13, scope: !5335)
!5443 = !DILocation(line: 1206, column: 18, scope: !5335)
!5444 = !DILocation(line: 1206, column: 50, scope: !5335)
!5445 = !DILocation(line: 1206, column: 48, scope: !5335)
!5446 = !DILocation(line: 1206, column: 16, scope: !5335)
!5447 = !DILocation(line: 1207, column: 15, scope: !5335)
!5448 = !DILocation(line: 1207, column: 38, scope: !5335)
!5449 = !DILocation(line: 1207, column: 50, scope: !5335)
!5450 = !DILocation(line: 1207, column: 48, scope: !5335)
!5451 = !DILocation(line: 1207, column: 64, scope: !5335)
!5452 = !DILocation(line: 1207, column: 62, scope: !5335)
!5453 = !DILocation(line: 1207, column: 27, scope: !5335)
!5454 = !DILocation(line: 1207, column: 13, scope: !5335)
!5455 = !DILocation(line: 1209, column: 11, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1209, column: 4)
!5457 = !DILocation(line: 1209, column: 9, scope: !5456)
!5458 = !DILocation(line: 1209, column: 16, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1209, column: 4)
!5460 = !DILocation(line: 1209, column: 20, scope: !5459)
!5461 = !DILocation(line: 1209, column: 18, scope: !5459)
!5462 = !DILocation(line: 1209, column: 4, scope: !5456)
!5463 = !DILocation(line: 1211, column: 22, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 1209, column: 35)
!5465 = !DILocation(line: 1211, column: 46, scope: !5464)
!5466 = !DILocation(line: 1211, column: 58, scope: !5464)
!5467 = !DILocation(line: 1211, column: 56, scope: !5464)
!5468 = !DILocation(line: 1211, column: 73, scope: !5464)
!5469 = !DILocation(line: 1211, column: 71, scope: !5464)
!5470 = !DILocation(line: 1211, column: 34, scope: !5464)
!5471 = !DILocation(line: 1211, column: 5, scope: !5464)
!5472 = !DILocation(line: 1211, column: 17, scope: !5464)
!5473 = !DILocation(line: 1211, column: 20, scope: !5464)
!5474 = !DILocation(line: 1212, column: 12, scope: !5464)
!5475 = !DILocation(line: 1212, column: 24, scope: !5464)
!5476 = !DILocation(line: 1212, column: 5, scope: !5464)
!5477 = !DILocation(line: 1212, column: 28, scope: !5464)
!5478 = !DILocation(line: 1212, column: 41, scope: !5464)
!5479 = !DILocation(line: 1212, column: 57, scope: !5464)
!5480 = !DILocation(line: 1212, column: 69, scope: !5464)
!5481 = !DILocation(line: 1212, column: 67, scope: !5464)
!5482 = !DILocation(line: 1212, column: 84, scope: !5464)
!5483 = !DILocation(line: 1212, column: 82, scope: !5464)
!5484 = !DILocation(line: 1212, column: 45, scope: !5464)
!5485 = !DILocation(line: 1215, column: 12, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 1215, column: 5)
!5487 = !DILocation(line: 1215, column: 10, scope: !5486)
!5488 = !DILocation(line: 1215, column: 17, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1215, column: 5)
!5490 = !DILocation(line: 1215, column: 21, scope: !5489)
!5491 = !DILocation(line: 1215, column: 35, scope: !5489)
!5492 = !DILocation(line: 1215, column: 33, scope: !5489)
!5493 = !DILocation(line: 1215, column: 19, scope: !5489)
!5494 = !DILocation(line: 1215, column: 5, scope: !5486)
!5495 = !DILocation(line: 1216, column: 50, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 1215, column: 53)
!5497 = !DILocation(line: 1216, column: 60, scope: !5496)
!5498 = !DILocation(line: 1216, column: 18, scope: !5496)
!5499 = !DILocation(line: 1217, column: 50, scope: !5496)
!5500 = !DILocation(line: 1217, column: 59, scope: !5496)
!5501 = !DILocation(line: 1217, column: 63, scope: !5496)
!5502 = !DILocation(line: 1217, column: 18, scope: !5496)
!5503 = !DILocation(line: 1218, column: 50, scope: !5496)
!5504 = !DILocation(line: 1218, column: 62, scope: !5496)
!5505 = !DILocation(line: 1218, column: 66, scope: !5496)
!5506 = !DILocation(line: 1218, column: 18, scope: !5496)
!5507 = !DILocation(line: 1216, column: 6, scope: !5496)
!5508 = !DILocation(line: 1219, column: 5, scope: !5496)
!5509 = !DILocation(line: 1215, column: 48, scope: !5489)
!5510 = !DILocation(line: 1215, column: 5, scope: !5489)
!5511 = distinct !{!5511, !5494, !5512}
!5512 = !DILocation(line: 1219, column: 5, scope: !5486)
!5513 = !DILocation(line: 1221, column: 27, scope: !5464)
!5514 = !DILocation(line: 1221, column: 40, scope: !5464)
!5515 = !DILocation(line: 1221, column: 44, scope: !5464)
!5516 = !DILocation(line: 1221, column: 5, scope: !5464)
!5517 = !DILocation(line: 1222, column: 4, scope: !5464)
!5518 = !DILocation(line: 1209, column: 30, scope: !5459)
!5519 = !DILocation(line: 1209, column: 4, scope: !5459)
!5520 = distinct !{!5520, !5462, !5521}
!5521 = !DILocation(line: 1222, column: 4, scope: !5456)
!5522 = !DILocation(line: 1225, column: 4, scope: !5335)
!5523 = !DILocation(line: 1225, column: 14, scope: !5335)
!5524 = !DILocation(line: 1226, column: 4, scope: !5335)
!5525 = !DILocation(line: 1226, column: 11, scope: !5335)
!5526 = !DILocation(line: 1226, column: 19, scope: !5335)
!5527 = !DILocation(line: 1229, column: 31, scope: !5335)
!5528 = !DILocation(line: 1229, column: 35, scope: !5335)
!5529 = !DILocation(line: 1229, column: 4, scope: !5335)
!5530 = !DILocation(line: 1230, column: 28, scope: !5335)
!5531 = !DILocation(line: 1230, column: 32, scope: !5335)
!5532 = !DILocation(line: 1230, column: 4, scope: !5335)
!5533 = !DILocation(line: 1233, column: 30, scope: !5335)
!5534 = !DILocation(line: 1233, column: 38, scope: !5335)
!5535 = !DILocation(line: 1233, column: 67, scope: !5335)
!5536 = !DILocation(line: 1233, column: 80, scope: !5335)
!5537 = !DILocation(line: 1233, column: 85, scope: !5335)
!5538 = !DILocation(line: 1233, column: 4, scope: !5335)
!5539 = !DILocation(line: 1236, column: 4, scope: !5335)
!5540 = !DILocation(line: 1236, column: 12, scope: !5335)
!5541 = !DILocation(line: 1236, column: 20, scope: !5335)
!5542 = !DILocation(line: 1237, column: 11, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1237, column: 4)
!5544 = !DILocation(line: 1237, column: 9, scope: !5543)
!5545 = !DILocation(line: 1237, column: 16, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1237, column: 4)
!5547 = !DILocation(line: 1237, column: 20, scope: !5546)
!5548 = !DILocation(line: 1237, column: 18, scope: !5546)
!5549 = !DILocation(line: 1237, column: 4, scope: !5543)
!5550 = !DILocation(line: 1238, column: 5, scope: !5546)
!5551 = !DILocation(line: 1238, column: 15, scope: !5546)
!5552 = !DILocation(line: 1238, column: 27, scope: !5546)
!5553 = !DILocation(line: 1237, column: 30, scope: !5546)
!5554 = !DILocation(line: 1237, column: 4, scope: !5546)
!5555 = distinct !{!5555, !5549, !5556}
!5556 = !DILocation(line: 1238, column: 29, scope: !5543)
!5557 = !DILocation(line: 1239, column: 4, scope: !5335)
!5558 = !DILocation(line: 1239, column: 14, scope: !5335)
!5559 = !DILocation(line: 1240, column: 3, scope: !5335)
!5560 = !DILocalVariable(name: "cddm", scope: !5561, file: !3, line: 1242, type: !915)
!5561 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 1241, column: 8)
!5562 = !DILocation(line: 1242, column: 17, scope: !5561)
!5563 = !DILocalVariable(name: "subdm", scope: !5561, file: !3, line: 1242, type: !915)
!5564 = !DILocation(line: 1242, column: 24, scope: !5561)
!5565 = !DILocalVariable(name: "has_mask", scope: !5561, file: !3, line: 1243, type: !1261)
!5566 = !DILocation(line: 1243, column: 15, scope: !5561)
!5567 = !DILocation(line: 1243, column: 48, scope: !5561)
!5568 = !DILocation(line: 1243, column: 52, scope: !5561)
!5569 = !DILocation(line: 1243, column: 26, scope: !5561)
!5570 = !DILocation(line: 1245, column: 8, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 1245, column: 8)
!5572 = !DILocation(line: 1245, column: 12, scope: !5571)
!5573 = !DILocation(line: 1245, column: 8, scope: !5561)
!5574 = !DILocation(line: 1245, column: 44, scope: !5571)
!5575 = !DILocation(line: 1245, column: 48, scope: !5571)
!5576 = !DILocation(line: 1245, column: 34, scope: !5571)
!5577 = !DILocation(line: 1245, column: 32, scope: !5571)
!5578 = !DILocation(line: 1245, column: 27, scope: !5571)
!5579 = !DILocation(line: 1246, column: 31, scope: !5571)
!5580 = !DILocation(line: 1246, column: 16, scope: !5571)
!5581 = !DILocation(line: 1246, column: 14, scope: !5571)
!5582 = !DILocation(line: 1247, column: 21, scope: !5561)
!5583 = !DILocation(line: 1247, column: 27, scope: !5561)
!5584 = !DILocation(line: 1247, column: 4, scope: !5561)
!5585 = !DILocation(line: 1249, column: 36, scope: !5561)
!5586 = !DILocation(line: 1249, column: 40, scope: !5561)
!5587 = !DILocation(line: 1249, column: 46, scope: !5561)
!5588 = !DILocation(line: 1249, column: 51, scope: !5561)
!5589 = !DILocation(line: 1249, column: 59, scope: !5561)
!5590 = !DILocation(line: 1249, column: 64, scope: !5561)
!5591 = !DILocation(line: 1249, column: 75, scope: !5561)
!5592 = !DILocation(line: 1249, column: 80, scope: !5561)
!5593 = !DILocation(line: 1249, column: 86, scope: !5561)
!5594 = !DILocation(line: 1249, column: 119, scope: !5561)
!5595 = !DILocation(line: 1249, column: 12, scope: !5561)
!5596 = !DILocation(line: 1249, column: 10, scope: !5561)
!5597 = !DILocation(line: 1250, column: 4, scope: !5561)
!5598 = !DILocation(line: 1250, column: 10, scope: !5561)
!5599 = !DILocation(line: 1250, column: 18, scope: !5561)
!5600 = !DILocation(line: 1252, column: 30, scope: !5561)
!5601 = !DILocation(line: 1252, column: 34, scope: !5561)
!5602 = !DILocation(line: 1252, column: 64, scope: !5561)
!5603 = !DILocation(line: 1252, column: 71, scope: !5561)
!5604 = !DILocation(line: 1252, column: 83, scope: !5561)
!5605 = !DILocation(line: 1252, column: 91, scope: !5561)
!5606 = !DILocation(line: 1252, column: 96, scope: !5561)
!5607 = !DILocation(line: 1252, column: 4, scope: !5561)
!5608 = !DILocation(line: 1254, column: 4, scope: !5561)
!5609 = !DILocation(line: 1254, column: 11, scope: !5561)
!5610 = !DILocation(line: 1254, column: 19, scope: !5561)
!5611 = !DILocation(line: 1256, column: 2, scope: !5319)
!5612 = !DILocation(line: 1257, column: 1, scope: !5270)
!5613 = distinct !DISubprogram(name: "sub_v4_v4v4", scope: !4459, file: !4459, line: 372, type: !5614, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{null, !418, !1100, !1100}
!5616 = !DILocalVariable(name: "r", arg: 1, scope: !5613, file: !4459, line: 372, type: !418)
!5617 = !DILocation(line: 372, column: 32, scope: !5613)
!5618 = !DILocalVariable(name: "a", arg: 2, scope: !5613, file: !4459, line: 372, type: !1100)
!5619 = !DILocation(line: 372, column: 50, scope: !5613)
!5620 = !DILocalVariable(name: "b", arg: 3, scope: !5613, file: !4459, line: 372, type: !1100)
!5621 = !DILocation(line: 372, column: 68, scope: !5613)
!5622 = !DILocation(line: 374, column: 9, scope: !5613)
!5623 = !DILocation(line: 374, column: 16, scope: !5613)
!5624 = !DILocation(line: 374, column: 14, scope: !5613)
!5625 = !DILocation(line: 374, column: 2, scope: !5613)
!5626 = !DILocation(line: 374, column: 7, scope: !5613)
!5627 = !DILocation(line: 375, column: 9, scope: !5613)
!5628 = !DILocation(line: 375, column: 16, scope: !5613)
!5629 = !DILocation(line: 375, column: 14, scope: !5613)
!5630 = !DILocation(line: 375, column: 2, scope: !5613)
!5631 = !DILocation(line: 375, column: 7, scope: !5613)
!5632 = !DILocation(line: 376, column: 9, scope: !5613)
!5633 = !DILocation(line: 376, column: 16, scope: !5613)
!5634 = !DILocation(line: 376, column: 14, scope: !5613)
!5635 = !DILocation(line: 376, column: 2, scope: !5613)
!5636 = !DILocation(line: 376, column: 7, scope: !5613)
!5637 = !DILocation(line: 377, column: 9, scope: !5613)
!5638 = !DILocation(line: 377, column: 16, scope: !5613)
!5639 = !DILocation(line: 377, column: 14, scope: !5613)
!5640 = !DILocation(line: 377, column: 2, scope: !5613)
!5641 = !DILocation(line: 377, column: 7, scope: !5613)
!5642 = !DILocation(line: 378, column: 1, scope: !5613)
!5643 = distinct !DISubprogram(name: "CCG_elem_offset_co", scope: !1066, file: !1066, line: 152, type: !5644, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!5644 = !DISubroutineType(types: !5645)
!5645 = !{!418, !5646, !2614, !196}
!5646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5647, size: 64)
!5647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3133)
!5648 = !DILocalVariable(name: "key", arg: 1, scope: !5643, file: !1066, line: 152, type: !5646)
!5649 = !DILocation(line: 152, column: 52, scope: !5643)
!5650 = !DILocalVariable(name: "elem", arg: 2, scope: !5643, file: !1066, line: 152, type: !2614)
!5651 = !DILocation(line: 152, column: 66, scope: !5643)
!5652 = !DILocalVariable(name: "offset", arg: 3, scope: !5643, file: !1066, line: 152, type: !196)
!5653 = !DILocation(line: 152, column: 76, scope: !5643)
!5654 = !DILocation(line: 154, column: 21, scope: !5643)
!5655 = !DILocation(line: 154, column: 42, scope: !5643)
!5656 = !DILocation(line: 154, column: 47, scope: !5643)
!5657 = !DILocation(line: 154, column: 53, scope: !5643)
!5658 = !DILocation(line: 154, column: 26, scope: !5643)
!5659 = !DILocation(line: 154, column: 9, scope: !5643)
!5660 = !DILocation(line: 154, column: 2, scope: !5643)
!5661 = distinct !DISubprogram(name: "multires_copy_dm_grid", scope: !3, file: !3, line: 570, type: !5662, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!5662 = !DISubroutineType(types: !5663)
!5663 = !{null, !2614, !2614, !5664, !5664}
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!5665 = !DILocalVariable(name: "gridA", arg: 1, scope: !5661, file: !3, line: 570, type: !2614)
!5666 = !DILocation(line: 570, column: 44, scope: !5661)
!5667 = !DILocalVariable(name: "gridB", arg: 2, scope: !5661, file: !3, line: 570, type: !2614)
!5668 = !DILocation(line: 570, column: 60, scope: !5661)
!5669 = !DILocalVariable(name: "keyA", arg: 3, scope: !5661, file: !3, line: 570, type: !5664)
!5670 = !DILocation(line: 570, column: 75, scope: !5661)
!5671 = !DILocalVariable(name: "keyB", arg: 4, scope: !5661, file: !3, line: 570, type: !5664)
!5672 = !DILocation(line: 570, column: 89, scope: !5661)
!5673 = !DILocalVariable(name: "x", scope: !5661, file: !3, line: 572, type: !196)
!5674 = !DILocation(line: 572, column: 6, scope: !5661)
!5675 = !DILocalVariable(name: "y", scope: !5661, file: !3, line: 572, type: !196)
!5676 = !DILocation(line: 572, column: 9, scope: !5661)
!5677 = !DILocalVariable(name: "j", scope: !5661, file: !3, line: 572, type: !196)
!5678 = !DILocation(line: 572, column: 12, scope: !5661)
!5679 = !DILocalVariable(name: "skip", scope: !5661, file: !3, line: 572, type: !196)
!5680 = !DILocation(line: 572, column: 15, scope: !5661)
!5681 = !DILocation(line: 574, column: 6, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 574, column: 6)
!5683 = !DILocation(line: 574, column: 12, scope: !5682)
!5684 = !DILocation(line: 574, column: 24, scope: !5682)
!5685 = !DILocation(line: 574, column: 30, scope: !5682)
!5686 = !DILocation(line: 574, column: 22, scope: !5682)
!5687 = !DILocation(line: 574, column: 6, scope: !5661)
!5688 = !DILocation(line: 575, column: 11, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 574, column: 41)
!5690 = !DILocation(line: 575, column: 17, scope: !5689)
!5691 = !DILocation(line: 575, column: 27, scope: !5689)
!5692 = !DILocation(line: 575, column: 35, scope: !5689)
!5693 = !DILocation(line: 575, column: 41, scope: !5689)
!5694 = !DILocation(line: 575, column: 51, scope: !5689)
!5695 = !DILocation(line: 575, column: 32, scope: !5689)
!5696 = !DILocation(line: 575, column: 8, scope: !5689)
!5697 = !DILocation(line: 577, column: 10, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 577, column: 3)
!5699 = !DILocation(line: 577, column: 17, scope: !5698)
!5700 = !DILocation(line: 577, column: 8, scope: !5698)
!5701 = !DILocation(line: 577, column: 22, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 577, column: 3)
!5703 = !DILocation(line: 577, column: 26, scope: !5702)
!5704 = !DILocation(line: 577, column: 32, scope: !5702)
!5705 = !DILocation(line: 577, column: 24, scope: !5702)
!5706 = !DILocation(line: 577, column: 3, scope: !5698)
!5707 = !DILocation(line: 578, column: 11, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 578, column: 4)
!5709 = !DILocation(line: 578, column: 9, scope: !5708)
!5710 = !DILocation(line: 578, column: 16, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 578, column: 4)
!5712 = !DILocation(line: 578, column: 20, scope: !5711)
!5713 = !DILocation(line: 578, column: 26, scope: !5711)
!5714 = !DILocation(line: 578, column: 18, scope: !5711)
!5715 = !DILocation(line: 578, column: 4, scope: !5708)
!5716 = !DILocation(line: 579, column: 31, scope: !5711)
!5717 = !DILocation(line: 579, column: 37, scope: !5711)
!5718 = !DILocation(line: 579, column: 44, scope: !5711)
!5719 = !DILocation(line: 579, column: 48, scope: !5711)
!5720 = !DILocation(line: 579, column: 46, scope: !5711)
!5721 = !DILocation(line: 579, column: 55, scope: !5711)
!5722 = !DILocation(line: 579, column: 61, scope: !5711)
!5723 = !DILocation(line: 579, column: 53, scope: !5711)
!5724 = !DILocation(line: 579, column: 73, scope: !5711)
!5725 = !DILocation(line: 579, column: 77, scope: !5711)
!5726 = !DILocation(line: 579, column: 75, scope: !5711)
!5727 = !DILocation(line: 579, column: 71, scope: !5711)
!5728 = !DILocation(line: 579, column: 12, scope: !5711)
!5729 = !DILocation(line: 579, column: 5, scope: !5711)
!5730 = !DILocation(line: 580, column: 31, scope: !5711)
!5731 = !DILocation(line: 580, column: 37, scope: !5711)
!5732 = !DILocation(line: 580, column: 44, scope: !5711)
!5733 = !DILocation(line: 580, column: 12, scope: !5711)
!5734 = !DILocation(line: 581, column: 28, scope: !5711)
!5735 = !DILocation(line: 581, column: 34, scope: !5711)
!5736 = !DILocation(line: 581, column: 26, scope: !5711)
!5737 = !DILocation(line: 578, column: 38, scope: !5711)
!5738 = !DILocation(line: 578, column: 43, scope: !5711)
!5739 = !DILocation(line: 578, column: 4, scope: !5711)
!5740 = distinct !{!5740, !5715, !5741}
!5741 = !DILocation(line: 581, column: 44, scope: !5708)
!5742 = !DILocation(line: 577, column: 44, scope: !5702)
!5743 = !DILocation(line: 577, column: 3, scope: !5702)
!5744 = distinct !{!5744, !5706, !5745}
!5745 = !DILocation(line: 581, column: 44, scope: !5698)
!5746 = !DILocation(line: 582, column: 2, scope: !5689)
!5747 = !DILocation(line: 584, column: 11, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 583, column: 7)
!5749 = !DILocation(line: 584, column: 17, scope: !5748)
!5750 = !DILocation(line: 584, column: 27, scope: !5748)
!5751 = !DILocation(line: 584, column: 35, scope: !5748)
!5752 = !DILocation(line: 584, column: 41, scope: !5748)
!5753 = !DILocation(line: 584, column: 51, scope: !5748)
!5754 = !DILocation(line: 584, column: 32, scope: !5748)
!5755 = !DILocation(line: 584, column: 8, scope: !5748)
!5756 = !DILocation(line: 586, column: 10, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 586, column: 3)
!5758 = !DILocation(line: 586, column: 17, scope: !5757)
!5759 = !DILocation(line: 586, column: 8, scope: !5757)
!5760 = !DILocation(line: 586, column: 22, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 586, column: 3)
!5762 = !DILocation(line: 586, column: 26, scope: !5761)
!5763 = !DILocation(line: 586, column: 32, scope: !5761)
!5764 = !DILocation(line: 586, column: 24, scope: !5761)
!5765 = !DILocation(line: 586, column: 3, scope: !5757)
!5766 = !DILocation(line: 587, column: 11, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 587, column: 4)
!5768 = !DILocation(line: 587, column: 9, scope: !5767)
!5769 = !DILocation(line: 587, column: 16, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 587, column: 4)
!5771 = !DILocation(line: 587, column: 20, scope: !5770)
!5772 = !DILocation(line: 587, column: 26, scope: !5770)
!5773 = !DILocation(line: 587, column: 18, scope: !5770)
!5774 = !DILocation(line: 587, column: 4, scope: !5767)
!5775 = !DILocation(line: 588, column: 31, scope: !5770)
!5776 = !DILocation(line: 588, column: 37, scope: !5770)
!5777 = !DILocation(line: 588, column: 44, scope: !5770)
!5778 = !DILocation(line: 588, column: 12, scope: !5770)
!5779 = !DILocation(line: 588, column: 5, scope: !5770)
!5780 = !DILocation(line: 589, column: 31, scope: !5770)
!5781 = !DILocation(line: 589, column: 37, scope: !5770)
!5782 = !DILocation(line: 589, column: 44, scope: !5770)
!5783 = !DILocation(line: 589, column: 48, scope: !5770)
!5784 = !DILocation(line: 589, column: 46, scope: !5770)
!5785 = !DILocation(line: 589, column: 55, scope: !5770)
!5786 = !DILocation(line: 589, column: 61, scope: !5770)
!5787 = !DILocation(line: 589, column: 53, scope: !5770)
!5788 = !DILocation(line: 589, column: 73, scope: !5770)
!5789 = !DILocation(line: 589, column: 77, scope: !5770)
!5790 = !DILocation(line: 589, column: 75, scope: !5770)
!5791 = !DILocation(line: 589, column: 71, scope: !5770)
!5792 = !DILocation(line: 589, column: 12, scope: !5770)
!5793 = !DILocation(line: 590, column: 28, scope: !5770)
!5794 = !DILocation(line: 590, column: 34, scope: !5770)
!5795 = !DILocation(line: 590, column: 26, scope: !5770)
!5796 = !DILocation(line: 587, column: 38, scope: !5770)
!5797 = !DILocation(line: 587, column: 43, scope: !5770)
!5798 = !DILocation(line: 587, column: 4, scope: !5770)
!5799 = distinct !{!5799, !5774, !5800}
!5800 = !DILocation(line: 590, column: 44, scope: !5767)
!5801 = !DILocation(line: 586, column: 44, scope: !5761)
!5802 = !DILocation(line: 586, column: 3, scope: !5761)
!5803 = distinct !{!5803, !5765, !5804}
!5804 = !DILocation(line: 590, column: 44, scope: !5757)
!5805 = !DILocation(line: 592, column: 1, scope: !5661)
!5806 = distinct !DISubprogram(name: "multires_modifier_update_hidden", scope: !3, file: !3, line: 1259, type: !913, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!5807 = !DILocalVariable(name: "dm", arg: 1, scope: !5806, file: !3, line: 1259, type: !915)
!5808 = !DILocation(line: 1259, column: 51, scope: !5806)
!5809 = !DILocalVariable(name: "ccgdm", scope: !5806, file: !3, line: 1261, type: !2395)
!5810 = !DILocation(line: 1261, column: 18, scope: !5806)
!5811 = !DILocation(line: 1261, column: 44, scope: !5806)
!5812 = !DILocation(line: 1261, column: 26, scope: !5806)
!5813 = !DILocalVariable(name: "grid_hidden", scope: !5806, file: !3, line: 1262, type: !5814)
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!5815 = !DILocation(line: 1262, column: 15, scope: !5806)
!5816 = !DILocation(line: 1262, column: 29, scope: !5806)
!5817 = !DILocation(line: 1262, column: 36, scope: !5806)
!5818 = !DILocalVariable(name: "me", scope: !5806, file: !3, line: 1263, type: !2466)
!5819 = !DILocation(line: 1263, column: 8, scope: !5806)
!5820 = !DILocation(line: 1263, column: 13, scope: !5806)
!5821 = !DILocation(line: 1263, column: 20, scope: !5806)
!5822 = !DILocation(line: 1263, column: 29, scope: !5806)
!5823 = !DILocation(line: 1263, column: 33, scope: !5806)
!5824 = !DILocalVariable(name: "mdisps", scope: !5806, file: !3, line: 1264, type: !3566)
!5825 = !DILocation(line: 1264, column: 10, scope: !5806)
!5826 = !DILocation(line: 1264, column: 41, scope: !5806)
!5827 = !DILocation(line: 1264, column: 45, scope: !5806)
!5828 = !DILocation(line: 1264, column: 19, scope: !5806)
!5829 = !DILocalVariable(name: "totlvl", scope: !5806, file: !3, line: 1265, type: !196)
!5830 = !DILocation(line: 1265, column: 6, scope: !5806)
!5831 = !DILocation(line: 1265, column: 15, scope: !5806)
!5832 = !DILocation(line: 1265, column: 22, scope: !5806)
!5833 = !DILocation(line: 1265, column: 31, scope: !5806)
!5834 = !DILocalVariable(name: "lvl", scope: !5806, file: !3, line: 1266, type: !196)
!5835 = !DILocation(line: 1266, column: 6, scope: !5806)
!5836 = !DILocation(line: 1266, column: 12, scope: !5806)
!5837 = !DILocation(line: 1266, column: 19, scope: !5806)
!5838 = !DILocation(line: 1266, column: 28, scope: !5806)
!5839 = !DILocation(line: 1268, column: 6, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 1268, column: 6)
!5841 = !DILocation(line: 1268, column: 6, scope: !5806)
!5842 = !DILocalVariable(name: "i", scope: !5843, file: !3, line: 1269, type: !196)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1268, column: 14)
!5844 = !DILocation(line: 1269, column: 7, scope: !5843)
!5845 = !DILocation(line: 1271, column: 10, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 1271, column: 3)
!5847 = !DILocation(line: 1271, column: 8, scope: !5846)
!5848 = !DILocation(line: 1271, column: 15, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 1271, column: 3)
!5850 = !DILocation(line: 1271, column: 19, scope: !5849)
!5851 = !DILocation(line: 1271, column: 23, scope: !5849)
!5852 = !DILocation(line: 1271, column: 17, scope: !5849)
!5853 = !DILocation(line: 1271, column: 3, scope: !5846)
!5854 = !DILocalVariable(name: "md", scope: !5855, file: !3, line: 1272, type: !3566)
!5855 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 1271, column: 37)
!5856 = !DILocation(line: 1272, column: 12, scope: !5855)
!5857 = !DILocation(line: 1272, column: 18, scope: !5855)
!5858 = !DILocation(line: 1272, column: 25, scope: !5855)
!5859 = !DILocalVariable(name: "gh", scope: !5855, file: !3, line: 1273, type: !2611)
!5860 = !DILocation(line: 1273, column: 16, scope: !5855)
!5861 = !DILocation(line: 1273, column: 21, scope: !5855)
!5862 = !DILocation(line: 1273, column: 33, scope: !5855)
!5863 = !DILocation(line: 1275, column: 9, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 1275, column: 8)
!5865 = !DILocation(line: 1275, column: 12, scope: !5864)
!5866 = !DILocation(line: 1275, column: 15, scope: !5864)
!5867 = !DILocation(line: 1275, column: 19, scope: !5864)
!5868 = !DILocation(line: 1275, column: 8, scope: !5855)
!5869 = !DILocation(line: 1276, column: 5, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 1275, column: 27)
!5871 = !DILocation(line: 1276, column: 15, scope: !5870)
!5872 = !DILocation(line: 1276, column: 19, scope: !5870)
!5873 = !DILocation(line: 1277, column: 5, scope: !5870)
!5874 = !DILocation(line: 1277, column: 9, scope: !5870)
!5875 = !DILocation(line: 1277, column: 16, scope: !5870)
!5876 = !DILocation(line: 1278, column: 4, scope: !5870)
!5877 = !DILocation(line: 1279, column: 13, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 1279, column: 13)
!5879 = !DILocation(line: 1279, column: 13, scope: !5864)
!5880 = !DILocation(line: 1280, column: 42, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 1279, column: 17)
!5882 = !DILocation(line: 1280, column: 46, scope: !5881)
!5883 = !DILocation(line: 1280, column: 51, scope: !5881)
!5884 = !DILocation(line: 1281, column: 42, scope: !5881)
!5885 = !DILocation(line: 1281, column: 46, scope: !5881)
!5886 = !DILocation(line: 1280, column: 10, scope: !5881)
!5887 = !DILocation(line: 1280, column: 8, scope: !5881)
!5888 = !DILocation(line: 1282, column: 9, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 1282, column: 9)
!5890 = !DILocation(line: 1282, column: 13, scope: !5889)
!5891 = !DILocation(line: 1282, column: 9, scope: !5881)
!5892 = !DILocation(line: 1283, column: 6, scope: !5889)
!5893 = !DILocation(line: 1283, column: 16, scope: !5889)
!5894 = !DILocation(line: 1283, column: 20, scope: !5889)
!5895 = !DILocation(line: 1285, column: 18, scope: !5881)
!5896 = !DILocation(line: 1285, column: 5, scope: !5881)
!5897 = !DILocation(line: 1285, column: 9, scope: !5881)
!5898 = !DILocation(line: 1285, column: 16, scope: !5881)
!5899 = !DILocation(line: 1286, column: 4, scope: !5881)
!5900 = !DILocation(line: 1287, column: 3, scope: !5855)
!5901 = !DILocation(line: 1271, column: 33, scope: !5849)
!5902 = !DILocation(line: 1271, column: 3, scope: !5849)
!5903 = distinct !{!5903, !5853, !5904}
!5904 = !DILocation(line: 1287, column: 3, scope: !5846)
!5905 = !DILocation(line: 1288, column: 2, scope: !5843)
!5906 = !DILocation(line: 1289, column: 1, scope: !5806)
!5907 = distinct !DISubprogram(name: "multires_mdisps_upsample_hidden", scope: !3, file: !3, line: 109, type: !5908, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!5908 = !DISubroutineType(types: !5909)
!5909 = !{!2611, !2611, !196, !196, !5910}
!5910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5911, size: 64)
!5911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2612)
!5912 = !DILocalVariable(name: "lo_hidden", arg: 1, scope: !5907, file: !3, line: 109, type: !2611)
!5913 = !DILocation(line: 109, column: 64, scope: !5907)
!5914 = !DILocalVariable(name: "lo_level", arg: 2, scope: !5907, file: !3, line: 110, type: !196)
!5915 = !DILocation(line: 110, column: 56, scope: !5907)
!5916 = !DILocalVariable(name: "hi_level", arg: 3, scope: !5907, file: !3, line: 111, type: !196)
!5917 = !DILocation(line: 111, column: 56, scope: !5907)
!5918 = !DILocalVariable(name: "prev_hidden", arg: 4, scope: !5907, file: !3, line: 115, type: !5910)
!5919 = !DILocation(line: 115, column: 70, scope: !5907)
!5920 = !DILocalVariable(name: "subd", scope: !5907, file: !3, line: 117, type: !2611)
!5921 = !DILocation(line: 117, column: 14, scope: !5907)
!5922 = !DILocalVariable(name: "hi_gridsize", scope: !5907, file: !3, line: 118, type: !196)
!5923 = !DILocation(line: 118, column: 6, scope: !5907)
!5924 = !DILocation(line: 118, column: 37, scope: !5907)
!5925 = !DILocation(line: 118, column: 20, scope: !5907)
!5926 = !DILocalVariable(name: "lo_gridsize", scope: !5907, file: !3, line: 119, type: !196)
!5927 = !DILocation(line: 119, column: 6, scope: !5907)
!5928 = !DILocation(line: 119, column: 37, scope: !5907)
!5929 = !DILocation(line: 119, column: 20, scope: !5907)
!5930 = !DILocalVariable(name: "yh", scope: !5907, file: !3, line: 120, type: !196)
!5931 = !DILocation(line: 120, column: 6, scope: !5907)
!5932 = !DILocalVariable(name: "xh", scope: !5907, file: !3, line: 120, type: !196)
!5933 = !DILocation(line: 120, column: 10, scope: !5907)
!5934 = !DILocalVariable(name: "xl", scope: !5907, file: !3, line: 120, type: !196)
!5935 = !DILocation(line: 120, column: 14, scope: !5907)
!5936 = !DILocalVariable(name: "yl", scope: !5907, file: !3, line: 120, type: !196)
!5937 = !DILocation(line: 120, column: 18, scope: !5907)
!5938 = !DILocalVariable(name: "xo", scope: !5907, file: !3, line: 120, type: !196)
!5939 = !DILocation(line: 120, column: 22, scope: !5907)
!5940 = !DILocalVariable(name: "yo", scope: !5907, file: !3, line: 120, type: !196)
!5941 = !DILocation(line: 120, column: 26, scope: !5907)
!5942 = !DILocalVariable(name: "hi_ndx", scope: !5907, file: !3, line: 120, type: !196)
!5943 = !DILocation(line: 120, column: 30, scope: !5907)
!5944 = !DILocalVariable(name: "offset", scope: !5907, file: !3, line: 121, type: !196)
!5945 = !DILocation(line: 121, column: 6, scope: !5907)
!5946 = !DILocalVariable(name: "factor", scope: !5907, file: !3, line: 121, type: !196)
!5947 = !DILocation(line: 121, column: 14, scope: !5907)
!5948 = !DILocation(line: 126, column: 6, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 126, column: 6)
!5950 = !DILocation(line: 126, column: 18, scope: !5949)
!5951 = !DILocation(line: 126, column: 15, scope: !5949)
!5952 = !DILocation(line: 126, column: 6, scope: !5907)
!5953 = !DILocation(line: 127, column: 10, scope: !5949)
!5954 = !DILocation(line: 127, column: 24, scope: !5949)
!5955 = !DILocation(line: 127, column: 3, scope: !5949)
!5956 = !DILocation(line: 129, column: 9, scope: !5907)
!5957 = !DILocation(line: 129, column: 7, scope: !5907)
!5958 = !DILocation(line: 131, column: 26, scope: !5907)
!5959 = !DILocation(line: 131, column: 36, scope: !5907)
!5960 = !DILocation(line: 131, column: 11, scope: !5907)
!5961 = !DILocation(line: 131, column: 9, scope: !5907)
!5962 = !DILocation(line: 132, column: 17, scope: !5907)
!5963 = !DILocation(line: 132, column: 28, scope: !5907)
!5964 = !DILocation(line: 132, column: 26, scope: !5907)
!5965 = !DILocation(line: 132, column: 37, scope: !5907)
!5966 = !DILocation(line: 132, column: 13, scope: !5907)
!5967 = !DILocation(line: 132, column: 9, scope: !5907)
!5968 = !DILocation(line: 135, column: 10, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 135, column: 2)
!5970 = !DILocation(line: 135, column: 7, scope: !5969)
!5971 = !DILocation(line: 135, column: 15, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 135, column: 2)
!5973 = !DILocation(line: 135, column: 20, scope: !5972)
!5974 = !DILocation(line: 135, column: 18, scope: !5972)
!5975 = !DILocation(line: 135, column: 2, scope: !5969)
!5976 = !DILocation(line: 136, column: 11, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 136, column: 3)
!5978 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 135, column: 39)
!5979 = !DILocation(line: 136, column: 8, scope: !5977)
!5980 = !DILocation(line: 136, column: 16, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 136, column: 3)
!5982 = !DILocation(line: 136, column: 21, scope: !5981)
!5983 = !DILocation(line: 136, column: 19, scope: !5981)
!5984 = !DILocation(line: 136, column: 3, scope: !5977)
!5985 = !DILocalVariable(name: "lo_val", scope: !5986, file: !3, line: 137, type: !196)
!5986 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 136, column: 40)
!5987 = !DILocation(line: 137, column: 8, scope: !5986)
!5988 = !DILocation(line: 137, column: 17, scope: !5986)
!5989 = !DILocation(line: 140, column: 15, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 140, column: 4)
!5991 = !DILocation(line: 140, column: 14, scope: !5990)
!5992 = !DILocation(line: 140, column: 12, scope: !5990)
!5993 = !DILocation(line: 140, column: 9, scope: !5990)
!5994 = !DILocation(line: 140, column: 23, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 140, column: 4)
!5996 = !DILocation(line: 140, column: 29, scope: !5995)
!5997 = !DILocation(line: 140, column: 26, scope: !5995)
!5998 = !DILocation(line: 140, column: 4, scope: !5990)
!5999 = !DILocation(line: 141, column: 10, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 140, column: 43)
!6001 = !DILocation(line: 141, column: 15, scope: !6000)
!6002 = !DILocation(line: 141, column: 13, scope: !6000)
!6003 = !DILocation(line: 141, column: 24, scope: !6000)
!6004 = !DILocation(line: 141, column: 22, scope: !6000)
!6005 = !DILocation(line: 141, column: 8, scope: !6000)
!6006 = !DILocation(line: 142, column: 9, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 142, column: 9)
!6008 = !DILocation(line: 142, column: 12, scope: !6007)
!6009 = !DILocation(line: 142, column: 16, scope: !6007)
!6010 = !DILocation(line: 142, column: 19, scope: !6007)
!6011 = !DILocation(line: 142, column: 25, scope: !6007)
!6012 = !DILocation(line: 142, column: 22, scope: !6007)
!6013 = !DILocation(line: 142, column: 9, scope: !6000)
!6014 = !DILocation(line: 143, column: 6, scope: !6007)
!6015 = !DILocation(line: 145, column: 16, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 145, column: 5)
!6017 = !DILocation(line: 145, column: 15, scope: !6016)
!6018 = !DILocation(line: 145, column: 13, scope: !6016)
!6019 = !DILocation(line: 145, column: 10, scope: !6016)
!6020 = !DILocation(line: 145, column: 24, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 145, column: 5)
!6022 = !DILocation(line: 145, column: 30, scope: !6021)
!6023 = !DILocation(line: 145, column: 27, scope: !6021)
!6024 = !DILocation(line: 145, column: 5, scope: !6016)
!6025 = !DILocation(line: 146, column: 11, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 145, column: 44)
!6027 = !DILocation(line: 146, column: 16, scope: !6026)
!6028 = !DILocation(line: 146, column: 14, scope: !6026)
!6029 = !DILocation(line: 146, column: 25, scope: !6026)
!6030 = !DILocation(line: 146, column: 23, scope: !6026)
!6031 = !DILocation(line: 146, column: 9, scope: !6026)
!6032 = !DILocation(line: 147, column: 10, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 147, column: 10)
!6034 = !DILocation(line: 147, column: 13, scope: !6033)
!6035 = !DILocation(line: 147, column: 17, scope: !6033)
!6036 = !DILocation(line: 147, column: 20, scope: !6033)
!6037 = !DILocation(line: 147, column: 26, scope: !6033)
!6038 = !DILocation(line: 147, column: 23, scope: !6033)
!6039 = !DILocation(line: 147, column: 10, scope: !6026)
!6040 = !DILocation(line: 148, column: 7, scope: !6033)
!6041 = !DILocation(line: 150, column: 15, scope: !6026)
!6042 = !DILocation(line: 150, column: 20, scope: !6026)
!6043 = !DILocation(line: 150, column: 18, scope: !6026)
!6044 = !DILocation(line: 150, column: 34, scope: !6026)
!6045 = !DILocation(line: 150, column: 32, scope: !6026)
!6046 = !DILocation(line: 150, column: 13, scope: !6026)
!6047 = !DILocation(line: 152, column: 10, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 152, column: 10)
!6049 = !DILocation(line: 152, column: 10, scope: !6026)
!6050 = !DILocation(line: 156, column: 11, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 156, column: 11)
!6052 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 152, column: 23)
!6053 = !DILocation(line: 156, column: 21, scope: !6051)
!6054 = !DILocation(line: 156, column: 33, scope: !6051)
!6055 = !DILocation(line: 156, column: 18, scope: !6051)
!6056 = !DILocation(line: 156, column: 11, scope: !6052)
!6057 = !DILocation(line: 157, column: 8, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 157, column: 8)
!6059 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 157, column: 8)
!6060 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 156, column: 42)
!6061 = !DILocation(line: 157, column: 8, scope: !6059)
!6062 = !DILocation(line: 158, column: 7, scope: !6060)
!6063 = !DILocation(line: 160, column: 8, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 160, column: 8)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 160, column: 8)
!6066 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 159, column: 12)
!6067 = !DILocation(line: 160, column: 8, scope: !6065)
!6068 = !DILocation(line: 162, column: 6, scope: !6052)
!6069 = !DILocation(line: 164, column: 7, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 164, column: 7)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 164, column: 7)
!6072 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 163, column: 11)
!6073 = !DILocation(line: 164, column: 7, scope: !6071)
!6074 = !DILocation(line: 166, column: 5, scope: !6026)
!6075 = !DILocation(line: 145, column: 40, scope: !6021)
!6076 = !DILocation(line: 145, column: 5, scope: !6021)
!6077 = distinct !{!6077, !6024, !6078}
!6078 = !DILocation(line: 166, column: 5, scope: !6016)
!6079 = !DILocation(line: 167, column: 4, scope: !6000)
!6080 = !DILocation(line: 140, column: 39, scope: !5995)
!6081 = !DILocation(line: 140, column: 4, scope: !5995)
!6082 = distinct !{!6082, !5998, !6083}
!6083 = !DILocation(line: 167, column: 4, scope: !5990)
!6084 = !DILocation(line: 168, column: 3, scope: !5986)
!6085 = !DILocation(line: 136, column: 36, scope: !5981)
!6086 = !DILocation(line: 136, column: 3, scope: !5981)
!6087 = distinct !{!6087, !5984, !6088}
!6088 = !DILocation(line: 168, column: 3, scope: !5977)
!6089 = !DILocation(line: 169, column: 2, scope: !5978)
!6090 = !DILocation(line: 135, column: 35, scope: !5972)
!6091 = !DILocation(line: 135, column: 2, scope: !5972)
!6092 = distinct !{!6092, !5975, !6093}
!6093 = !DILocation(line: 169, column: 2, scope: !5969)
!6094 = !DILocation(line: 171, column: 9, scope: !5907)
!6095 = !DILocation(line: 171, column: 2, scope: !5907)
!6096 = !DILocation(line: 172, column: 1, scope: !5907)
!6097 = distinct !DISubprogram(name: "multires_set_space", scope: !3, file: !3, line: 1291, type: !6098, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{null, !915, !2689, !196, !196}
!6100 = !DILocalVariable(name: "dm", arg: 1, scope: !6097, file: !3, line: 1291, type: !915)
!6101 = !DILocation(line: 1291, column: 38, scope: !6097)
!6102 = !DILocalVariable(name: "ob", arg: 2, scope: !6097, file: !3, line: 1291, type: !2689)
!6103 = !DILocation(line: 1291, column: 50, scope: !6097)
!6104 = !DILocalVariable(name: "from", arg: 3, scope: !6097, file: !3, line: 1291, type: !196)
!6105 = !DILocation(line: 1291, column: 58, scope: !6097)
!6106 = !DILocalVariable(name: "to", arg: 4, scope: !6097, file: !3, line: 1291, type: !196)
!6107 = !DILocation(line: 1291, column: 68, scope: !6097)
!6108 = !DILocalVariable(name: "ccgdm", scope: !6097, file: !3, line: 1293, type: !915)
!6109 = !DILocation(line: 1293, column: 15, scope: !6097)
!6110 = !DILocalVariable(name: "subsurf", scope: !6097, file: !3, line: 1293, type: !915)
!6111 = !DILocation(line: 1293, column: 30, scope: !6097)
!6112 = !DILocalVariable(name: "gridData", scope: !6097, file: !3, line: 1294, type: !4611)
!6113 = !DILocation(line: 1294, column: 12, scope: !6097)
!6114 = !DILocalVariable(name: "subGridData", scope: !6097, file: !3, line: 1294, type: !4611)
!6115 = !DILocation(line: 1294, column: 24, scope: !6097)
!6116 = !DILocalVariable(name: "key", scope: !6097, file: !3, line: 1295, type: !3133)
!6117 = !DILocation(line: 1295, column: 9, scope: !6097)
!6118 = !DILocalVariable(name: "mpoly", scope: !6097, file: !3, line: 1296, type: !4635)
!6119 = !DILocation(line: 1296, column: 9, scope: !6097)
!6120 = !DILocation(line: 1296, column: 39, scope: !6097)
!6121 = !DILocation(line: 1296, column: 43, scope: !6097)
!6122 = !DILocation(line: 1296, column: 17, scope: !6097)
!6123 = !DILocalVariable(name: "mdisps", scope: !6097, file: !3, line: 1297, type: !3566)
!6124 = !DILocation(line: 1297, column: 10, scope: !6097)
!6125 = !DILocalVariable(name: "mmd", scope: !6097, file: !3, line: 1298, type: !2391)
!6126 = !DILocation(line: 1298, column: 24, scope: !6097)
!6127 = !DILocation(line: 1298, column: 58, scope: !6097)
!6128 = !DILocation(line: 1298, column: 30, scope: !6097)
!6129 = !DILocalVariable(name: "gridOffset", scope: !6097, file: !3, line: 1299, type: !426)
!6130 = !DILocation(line: 1299, column: 7, scope: !6097)
!6131 = !DILocalVariable(name: "totlvl", scope: !6097, file: !3, line: 1299, type: !196)
!6132 = !DILocation(line: 1299, column: 19, scope: !6097)
!6133 = !DILocalVariable(name: "i", scope: !6097, file: !3, line: 1300, type: !196)
!6134 = !DILocation(line: 1300, column: 6, scope: !6097)
!6135 = !DILocalVariable(name: "k", scope: !6097, file: !3, line: 1300, type: !196)
!6136 = !DILocation(line: 1300, column: 9, scope: !6097)
!6137 = !DILocalVariable(name: "numGrids", scope: !6097, file: !3, line: 1300, type: !196)
!6138 = !DILocation(line: 1300, column: 12, scope: !6097)
!6139 = !DILocalVariable(name: "gridSize", scope: !6097, file: !3, line: 1300, type: !196)
!6140 = !DILocation(line: 1300, column: 22, scope: !6097)
!6141 = !DILocalVariable(name: "dGridSize", scope: !6097, file: !3, line: 1300, type: !196)
!6142 = !DILocation(line: 1300, column: 32, scope: !6097)
!6143 = !DILocalVariable(name: "dSkip", scope: !6097, file: !3, line: 1300, type: !196)
!6144 = !DILocation(line: 1300, column: 43, scope: !6097)
!6145 = !DILocation(line: 1302, column: 7, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 1302, column: 6)
!6147 = !DILocation(line: 1302, column: 6, scope: !6097)
!6148 = !DILocation(line: 1303, column: 3, scope: !6146)
!6149 = !DILocation(line: 1305, column: 33, scope: !6097)
!6150 = !DILocation(line: 1305, column: 37, scope: !6097)
!6151 = !DILocation(line: 1305, column: 11, scope: !6097)
!6152 = !DILocation(line: 1305, column: 9, scope: !6097)
!6153 = !DILocation(line: 1307, column: 7, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 1307, column: 6)
!6155 = !DILocation(line: 1307, column: 6, scope: !6097)
!6156 = !DILocation(line: 1308, column: 3, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 1307, column: 15)
!6158 = !DILocation(line: 1311, column: 11, scope: !6097)
!6159 = !DILocation(line: 1311, column: 16, scope: !6097)
!6160 = !DILocation(line: 1311, column: 9, scope: !6097)
!6161 = !DILocation(line: 1312, column: 35, scope: !6097)
!6162 = !DILocation(line: 1312, column: 39, scope: !6097)
!6163 = !DILocation(line: 1312, column: 43, scope: !6097)
!6164 = !DILocation(line: 1312, column: 51, scope: !6097)
!6165 = !DILocation(line: 1312, column: 59, scope: !6097)
!6166 = !DILocation(line: 1312, column: 64, scope: !6097)
!6167 = !DILocation(line: 1312, column: 10, scope: !6097)
!6168 = !DILocation(line: 1312, column: 8, scope: !6097)
!6169 = !DILocation(line: 1314, column: 36, scope: !6097)
!6170 = !DILocation(line: 1314, column: 40, scope: !6097)
!6171 = !DILocation(line: 1314, column: 44, scope: !6097)
!6172 = !DILocation(line: 1315, column: 36, scope: !6097)
!6173 = !DILocation(line: 1315, column: 41, scope: !6097)
!6174 = !DILocation(line: 1315, column: 49, scope: !6097)
!6175 = !DILocation(line: 1315, column: 54, scope: !6097)
!6176 = !DILocation(line: 1315, column: 60, scope: !6097)
!6177 = !DILocation(line: 1315, column: 98, scope: !6097)
!6178 = !DILocation(line: 1315, column: 103, scope: !6097)
!6179 = !DILocation(line: 1315, column: 109, scope: !6097)
!6180 = !DILocation(line: 1314, column: 12, scope: !6097)
!6181 = !DILocation(line: 1314, column: 10, scope: !6097)
!6182 = !DILocation(line: 1317, column: 13, scope: !6097)
!6183 = !DILocation(line: 1317, column: 22, scope: !6097)
!6184 = !DILocation(line: 1317, column: 34, scope: !6097)
!6185 = !DILocation(line: 1317, column: 11, scope: !6097)
!6186 = !DILocation(line: 1318, column: 13, scope: !6097)
!6187 = !DILocation(line: 1318, column: 22, scope: !6097)
!6188 = !DILocation(line: 1318, column: 34, scope: !6097)
!6189 = !DILocation(line: 1318, column: 11, scope: !6097)
!6190 = !DILocation(line: 1319, column: 13, scope: !6097)
!6191 = !DILocation(line: 1319, column: 22, scope: !6097)
!6192 = !DILocation(line: 1319, column: 34, scope: !6097)
!6193 = !DILocation(line: 1319, column: 11, scope: !6097)
!6194 = !DILocation(line: 1320, column: 2, scope: !6097)
!6195 = !DILocation(line: 1320, column: 11, scope: !6097)
!6196 = !DILocation(line: 1320, column: 22, scope: !6097)
!6197 = !DILocation(line: 1322, column: 16, scope: !6097)
!6198 = !DILocation(line: 1322, column: 48, scope: !6097)
!6199 = !DILocation(line: 1322, column: 46, scope: !6097)
!6200 = !DILocation(line: 1322, column: 14, scope: !6097)
!6201 = !DILocation(line: 1324, column: 9, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 1324, column: 2)
!6203 = !DILocation(line: 1324, column: 7, scope: !6202)
!6204 = !DILocation(line: 1324, column: 14, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 1324, column: 2)
!6206 = !DILocation(line: 1324, column: 18, scope: !6205)
!6207 = !DILocation(line: 1324, column: 16, scope: !6205)
!6208 = !DILocation(line: 1324, column: 2, scope: !6202)
!6209 = !DILocation(line: 1325, column: 20, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1324, column: 33)
!6211 = !DILocation(line: 1325, column: 36, scope: !6210)
!6212 = !DILocation(line: 1325, column: 48, scope: !6210)
!6213 = !DILocation(line: 1325, column: 46, scope: !6210)
!6214 = !DILocation(line: 1325, column: 59, scope: !6210)
!6215 = !DILocation(line: 1325, column: 57, scope: !6210)
!6216 = !DILocation(line: 1325, column: 32, scope: !6210)
!6217 = !DILocation(line: 1325, column: 3, scope: !6210)
!6218 = !DILocation(line: 1325, column: 15, scope: !6210)
!6219 = !DILocation(line: 1325, column: 18, scope: !6210)
!6220 = !DILocation(line: 1326, column: 10, scope: !6210)
!6221 = !DILocation(line: 1326, column: 22, scope: !6210)
!6222 = !DILocation(line: 1326, column: 3, scope: !6210)
!6223 = !DILocation(line: 1326, column: 26, scope: !6210)
!6224 = !DILocation(line: 1326, column: 35, scope: !6210)
!6225 = !DILocation(line: 1326, column: 43, scope: !6210)
!6226 = !DILocation(line: 1326, column: 55, scope: !6210)
!6227 = !DILocation(line: 1326, column: 53, scope: !6210)
!6228 = !DILocation(line: 1326, column: 66, scope: !6210)
!6229 = !DILocation(line: 1326, column: 64, scope: !6210)
!6230 = !DILocation(line: 1326, column: 39, scope: !6210)
!6231 = !DILocation(line: 1327, column: 2, scope: !6210)
!6232 = !DILocation(line: 1324, column: 29, scope: !6205)
!6233 = !DILocation(line: 1324, column: 2, scope: !6205)
!6234 = distinct !{!6234, !6208, !6235}
!6235 = !DILocation(line: 1327, column: 2, scope: !6202)
!6236 = !DILocation(line: 1330, column: 13, scope: !6097)
!6237 = !DILocation(line: 1330, column: 20, scope: !6097)
!6238 = !DILocation(line: 1330, column: 47, scope: !6097)
!6239 = !DILocation(line: 1330, column: 11, scope: !6097)
!6240 = !DILocation(line: 1331, column: 13, scope: !6097)
!6241 = !DILocation(line: 1331, column: 20, scope: !6097)
!6242 = !DILocation(line: 1331, column: 47, scope: !6097)
!6243 = !DILocation(line: 1331, column: 11, scope: !6097)
!6244 = !DILocation(line: 1332, column: 15, scope: !6097)
!6245 = !DILocation(line: 1332, column: 22, scope: !6097)
!6246 = !DILocation(line: 1332, column: 51, scope: !6097)
!6247 = !DILocation(line: 1332, column: 13, scope: !6097)
!6248 = !DILocation(line: 1334, column: 32, scope: !6097)
!6249 = !DILocation(line: 1334, column: 14, scope: !6097)
!6250 = !DILocation(line: 1334, column: 12, scope: !6097)
!6251 = !DILocation(line: 1335, column: 11, scope: !6097)
!6252 = !DILocation(line: 1335, column: 21, scope: !6097)
!6253 = !DILocation(line: 1335, column: 29, scope: !6097)
!6254 = !DILocation(line: 1335, column: 38, scope: !6097)
!6255 = !DILocation(line: 1335, column: 26, scope: !6097)
!6256 = !DILocation(line: 1335, column: 8, scope: !6097)
!6257 = !DILocation(line: 1337, column: 4, scope: !6097)
!6258 = !DILocation(line: 1343, column: 9, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 1343, column: 2)
!6260 = !DILocation(line: 1343, column: 7, scope: !6259)
!6261 = !DILocation(line: 1343, column: 14, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 1343, column: 2)
!6263 = !DILocation(line: 1343, column: 18, scope: !6262)
!6264 = !DILocation(line: 1343, column: 22, scope: !6262)
!6265 = !DILocation(line: 1343, column: 16, scope: !6262)
!6266 = !DILocation(line: 1343, column: 2, scope: !6259)
!6267 = !DILocalVariable(name: "numVerts", scope: !6268, file: !3, line: 1344, type: !2620)
!6268 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1343, column: 40)
!6269 = !DILocation(line: 1344, column: 13, scope: !6268)
!6270 = !DILocation(line: 1344, column: 24, scope: !6268)
!6271 = !DILocation(line: 1344, column: 30, scope: !6268)
!6272 = !DILocation(line: 1344, column: 33, scope: !6268)
!6273 = !DILocalVariable(name: "S", scope: !6268, file: !3, line: 1345, type: !196)
!6274 = !DILocation(line: 1345, column: 7, scope: !6268)
!6275 = !DILocalVariable(name: "x", scope: !6268, file: !3, line: 1345, type: !196)
!6276 = !DILocation(line: 1345, column: 10, scope: !6268)
!6277 = !DILocalVariable(name: "y", scope: !6268, file: !3, line: 1345, type: !196)
!6278 = !DILocation(line: 1345, column: 13, scope: !6268)
!6279 = !DILocalVariable(name: "gIndex", scope: !6268, file: !3, line: 1345, type: !196)
!6280 = !DILocation(line: 1345, column: 16, scope: !6268)
!6281 = !DILocation(line: 1345, column: 25, scope: !6268)
!6282 = !DILocation(line: 1345, column: 36, scope: !6268)
!6283 = !DILocation(line: 1347, column: 10, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 1347, column: 3)
!6285 = !DILocation(line: 1347, column: 8, scope: !6284)
!6286 = !DILocation(line: 1347, column: 15, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 1347, column: 3)
!6288 = !DILocation(line: 1347, column: 19, scope: !6287)
!6289 = !DILocation(line: 1347, column: 17, scope: !6287)
!6290 = !DILocation(line: 1347, column: 3, scope: !6284)
!6291 = !DILocalVariable(name: "mdisp", scope: !6292, file: !3, line: 1348, type: !3566)
!6292 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 1347, column: 49)
!6293 = !DILocation(line: 1348, column: 12, scope: !6292)
!6294 = !DILocation(line: 1348, column: 21, scope: !6292)
!6295 = !DILocation(line: 1348, column: 28, scope: !6292)
!6296 = !DILocation(line: 1348, column: 34, scope: !6292)
!6297 = !DILocation(line: 1348, column: 37, scope: !6292)
!6298 = !DILocation(line: 1348, column: 49, scope: !6292)
!6299 = !DILocation(line: 1348, column: 47, scope: !6292)
!6300 = !DILocalVariable(name: "subgrid", scope: !6292, file: !3, line: 1350, type: !2614)
!6301 = !DILocation(line: 1350, column: 13, scope: !6292)
!6302 = !DILocation(line: 1350, column: 23, scope: !6292)
!6303 = !DILocation(line: 1350, column: 35, scope: !6292)
!6304 = !DILocalVariable(name: "dispgrid", scope: !6292, file: !3, line: 1351, type: !413)
!6305 = !DILocation(line: 1351, column: 12, scope: !6292)
!6306 = !DILocation(line: 1354, column: 9, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1354, column: 8)
!6308 = !DILocation(line: 1354, column: 16, scope: !6307)
!6309 = !DILocation(line: 1354, column: 8, scope: !6292)
!6310 = !DILocation(line: 1355, column: 22, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 1354, column: 23)
!6312 = !DILocation(line: 1355, column: 33, scope: !6311)
!6313 = !DILocation(line: 1355, column: 31, scope: !6311)
!6314 = !DILocation(line: 1355, column: 5, scope: !6311)
!6315 = !DILocation(line: 1355, column: 12, scope: !6311)
!6316 = !DILocation(line: 1355, column: 20, scope: !6311)
!6317 = !DILocation(line: 1356, column: 20, scope: !6311)
!6318 = !DILocation(line: 1356, column: 5, scope: !6311)
!6319 = !DILocation(line: 1356, column: 12, scope: !6311)
!6320 = !DILocation(line: 1356, column: 18, scope: !6311)
!6321 = !DILocation(line: 1357, column: 20, scope: !6311)
!6322 = !DILocation(line: 1357, column: 52, scope: !6311)
!6323 = !DILocation(line: 1357, column: 59, scope: !6311)
!6324 = !DILocation(line: 1357, column: 50, scope: !6311)
!6325 = !DILocation(line: 1357, column: 5, scope: !6311)
!6326 = !DILocation(line: 1357, column: 12, scope: !6311)
!6327 = !DILocation(line: 1357, column: 18, scope: !6311)
!6328 = !DILocation(line: 1358, column: 4, scope: !6311)
!6329 = !DILocation(line: 1360, column: 15, scope: !6292)
!6330 = !DILocation(line: 1360, column: 22, scope: !6292)
!6331 = !DILocation(line: 1360, column: 13, scope: !6292)
!6332 = !DILocation(line: 1362, column: 11, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1362, column: 4)
!6334 = !DILocation(line: 1362, column: 9, scope: !6333)
!6335 = !DILocation(line: 1362, column: 16, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 1362, column: 4)
!6337 = !DILocation(line: 1362, column: 20, scope: !6336)
!6338 = !DILocation(line: 1362, column: 18, scope: !6336)
!6339 = !DILocation(line: 1362, column: 4, scope: !6333)
!6340 = !DILocation(line: 1363, column: 12, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 1363, column: 5)
!6342 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1362, column: 35)
!6343 = !DILocation(line: 1363, column: 10, scope: !6341)
!6344 = !DILocation(line: 1363, column: 17, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 1363, column: 5)
!6346 = !DILocation(line: 1363, column: 21, scope: !6345)
!6347 = !DILocation(line: 1363, column: 19, scope: !6345)
!6348 = !DILocation(line: 1363, column: 5, scope: !6341)
!6349 = !DILocalVariable(name: "data", scope: !6350, file: !3, line: 1364, type: !418)
!6350 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 1363, column: 36)
!6351 = !DILocation(line: 1364, column: 13, scope: !6350)
!6352 = !DILocation(line: 1364, column: 20, scope: !6350)
!6353 = !DILocation(line: 1364, column: 29, scope: !6350)
!6354 = !DILocation(line: 1364, column: 41, scope: !6350)
!6355 = !DILocation(line: 1364, column: 39, scope: !6350)
!6356 = !DILocation(line: 1364, column: 45, scope: !6350)
!6357 = !DILocation(line: 1364, column: 43, scope: !6350)
!6358 = !DILocation(line: 1364, column: 53, scope: !6350)
!6359 = !DILocation(line: 1364, column: 57, scope: !6350)
!6360 = !DILocation(line: 1364, column: 55, scope: !6350)
!6361 = !DILocation(line: 1364, column: 51, scope: !6350)
!6362 = !DILocalVariable(name: "co", scope: !6350, file: !3, line: 1365, type: !418)
!6363 = !DILocation(line: 1365, column: 13, scope: !6350)
!6364 = !DILocation(line: 1365, column: 41, scope: !6350)
!6365 = !DILocation(line: 1365, column: 50, scope: !6350)
!6366 = !DILocation(line: 1365, column: 53, scope: !6350)
!6367 = !DILocation(line: 1365, column: 18, scope: !6350)
!6368 = !DILocalVariable(name: "mat", scope: !6350, file: !3, line: 1366, type: !640)
!6369 = !DILocation(line: 1366, column: 12, scope: !6350)
!6370 = !DILocalVariable(name: "dco", scope: !6350, file: !3, line: 1366, type: !387)
!6371 = !DILocation(line: 1366, column: 23, scope: !6350)
!6372 = !DILocation(line: 1369, column: 26, scope: !6350)
!6373 = !DILocation(line: 1369, column: 37, scope: !6350)
!6374 = !DILocation(line: 1369, column: 40, scope: !6350)
!6375 = !DILocation(line: 1369, column: 43, scope: !6350)
!6376 = !DILocation(line: 1369, column: 6, scope: !6350)
!6377 = !DILocation(line: 1372, column: 10, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 1372, column: 10)
!6379 = !DILocation(line: 1372, column: 15, scope: !6378)
!6380 = !DILocation(line: 1372, column: 10, scope: !6350)
!6381 = !DILocation(line: 1373, column: 19, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 1372, column: 42)
!6383 = !DILocation(line: 1373, column: 24, scope: !6382)
!6384 = !DILocation(line: 1373, column: 29, scope: !6382)
!6385 = !DILocation(line: 1373, column: 7, scope: !6382)
!6386 = !DILocation(line: 1374, column: 17, scope: !6382)
!6387 = !DILocation(line: 1374, column: 22, scope: !6382)
!6388 = !DILocation(line: 1374, column: 7, scope: !6382)
!6389 = !DILocation(line: 1375, column: 6, scope: !6382)
!6390 = !DILocation(line: 1376, column: 15, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 1376, column: 15)
!6392 = !DILocation(line: 1376, column: 20, scope: !6391)
!6393 = !DILocation(line: 1376, column: 15, scope: !6378)
!6394 = !DILocation(line: 1377, column: 19, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 1376, column: 46)
!6396 = !DILocation(line: 1377, column: 24, scope: !6395)
!6397 = !DILocation(line: 1377, column: 28, scope: !6395)
!6398 = !DILocation(line: 1377, column: 7, scope: !6395)
!6399 = !DILocation(line: 1378, column: 6, scope: !6395)
!6400 = !DILocation(line: 1379, column: 15, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 1379, column: 15)
!6402 = !DILocation(line: 1379, column: 20, scope: !6401)
!6403 = !DILocation(line: 1379, column: 15, scope: !6391)
!6404 = !DILocation(line: 1380, column: 18, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 1379, column: 48)
!6406 = !DILocation(line: 1380, column: 23, scope: !6405)
!6407 = !DILocation(line: 1380, column: 7, scope: !6405)
!6408 = !DILocation(line: 1381, column: 6, scope: !6405)
!6409 = !DILocation(line: 1384, column: 10, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 1384, column: 10)
!6411 = !DILocation(line: 1384, column: 13, scope: !6410)
!6412 = !DILocation(line: 1384, column: 10, scope: !6350)
!6413 = !DILocation(line: 1385, column: 17, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1384, column: 40)
!6415 = !DILocation(line: 1385, column: 7, scope: !6414)
!6416 = !DILocation(line: 1387, column: 17, scope: !6414)
!6417 = !DILocation(line: 1387, column: 22, scope: !6414)
!6418 = !DILocation(line: 1387, column: 7, scope: !6414)
!6419 = !DILocation(line: 1388, column: 19, scope: !6414)
!6420 = !DILocation(line: 1388, column: 25, scope: !6414)
!6421 = !DILocation(line: 1388, column: 30, scope: !6414)
!6422 = !DILocation(line: 1388, column: 7, scope: !6414)
!6423 = !DILocation(line: 1389, column: 6, scope: !6414)
!6424 = !DILocation(line: 1390, column: 15, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1390, column: 15)
!6426 = !DILocation(line: 1390, column: 18, scope: !6425)
!6427 = !DILocation(line: 1390, column: 15, scope: !6410)
!6428 = !DILocation(line: 1391, column: 17, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1390, column: 44)
!6430 = !DILocation(line: 1391, column: 22, scope: !6429)
!6431 = !DILocation(line: 1391, column: 7, scope: !6429)
!6432 = !DILocation(line: 1392, column: 19, scope: !6429)
!6433 = !DILocation(line: 1392, column: 25, scope: !6429)
!6434 = !DILocation(line: 1392, column: 30, scope: !6429)
!6435 = !DILocation(line: 1392, column: 7, scope: !6429)
!6436 = !DILocation(line: 1393, column: 6, scope: !6429)
!6437 = !DILocation(line: 1394, column: 15, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1394, column: 15)
!6439 = !DILocation(line: 1394, column: 18, scope: !6438)
!6440 = !DILocation(line: 1394, column: 15, scope: !6425)
!6441 = !DILocation(line: 1395, column: 18, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 1394, column: 46)
!6443 = !DILocation(line: 1395, column: 24, scope: !6442)
!6444 = !DILocation(line: 1395, column: 7, scope: !6442)
!6445 = !DILocation(line: 1396, column: 6, scope: !6442)
!6446 = !DILocation(line: 1397, column: 5, scope: !6350)
!6447 = !DILocation(line: 1363, column: 32, scope: !6345)
!6448 = !DILocation(line: 1363, column: 5, scope: !6345)
!6449 = distinct !{!6449, !6348, !6450}
!6450 = !DILocation(line: 1397, column: 5, scope: !6341)
!6451 = !DILocation(line: 1398, column: 4, scope: !6342)
!6452 = !DILocation(line: 1362, column: 31, scope: !6336)
!6453 = !DILocation(line: 1362, column: 4, scope: !6336)
!6454 = distinct !{!6454, !6339, !6455}
!6455 = !DILocation(line: 1398, column: 4, scope: !6333)
!6456 = !DILocation(line: 1399, column: 3, scope: !6292)
!6457 = !DILocation(line: 1347, column: 29, scope: !6287)
!6458 = !DILocation(line: 1347, column: 34, scope: !6287)
!6459 = !DILocation(line: 1347, column: 44, scope: !6287)
!6460 = !DILocation(line: 1347, column: 3, scope: !6287)
!6461 = distinct !{!6461, !6290, !6462}
!6462 = !DILocation(line: 1399, column: 3, scope: !6284)
!6463 = !DILocation(line: 1400, column: 2, scope: !6268)
!6464 = !DILocation(line: 1343, column: 35, scope: !6262)
!6465 = !DILocation(line: 1343, column: 2, scope: !6262)
!6466 = distinct !{!6466, !6266, !6467}
!6467 = !DILocation(line: 1400, column: 2, scope: !6259)
!6468 = !DILabel(scope: !6097, name: "cleanup", file: !3, line: 1402)
!6469 = !DILocation(line: 1402, column: 1, scope: !6097)
!6470 = !DILocation(line: 1403, column: 6, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 1403, column: 6)
!6472 = !DILocation(line: 1403, column: 6, scope: !6097)
!6473 = !DILocation(line: 1404, column: 3, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 1403, column: 15)
!6475 = !DILocation(line: 1404, column: 12, scope: !6474)
!6476 = !DILocation(line: 1404, column: 22, scope: !6474)
!6477 = !DILocation(line: 1405, column: 3, scope: !6474)
!6478 = !DILocation(line: 1405, column: 12, scope: !6474)
!6479 = !DILocation(line: 1405, column: 20, scope: !6474)
!6480 = !DILocation(line: 1406, column: 2, scope: !6474)
!6481 = !DILocation(line: 1408, column: 6, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 1408, column: 6)
!6483 = !DILocation(line: 1408, column: 6, scope: !6097)
!6484 = !DILocation(line: 1409, column: 3, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 1408, column: 13)
!6486 = !DILocation(line: 1409, column: 10, scope: !6485)
!6487 = !DILocation(line: 1409, column: 20, scope: !6485)
!6488 = !DILocation(line: 1410, column: 3, scope: !6485)
!6489 = !DILocation(line: 1410, column: 10, scope: !6485)
!6490 = !DILocation(line: 1410, column: 18, scope: !6485)
!6491 = !DILocation(line: 1411, column: 2, scope: !6485)
!6492 = !DILocation(line: 1412, column: 1, scope: !6097)
!6493 = distinct !DISubprogram(name: "CCG_grid_elem_co", scope: !1066, file: !1066, line: 137, type: !6494, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!418, !5646, !2614, !196, !196}
!6496 = !DILocalVariable(name: "key", arg: 1, scope: !6493, file: !1066, line: 137, type: !5646)
!6497 = !DILocation(line: 137, column: 50, scope: !6493)
!6498 = !DILocalVariable(name: "elem", arg: 2, scope: !6493, file: !1066, line: 137, type: !2614)
!6499 = !DILocation(line: 137, column: 64, scope: !6493)
!6500 = !DILocalVariable(name: "x", arg: 3, scope: !6493, file: !1066, line: 137, type: !196)
!6501 = !DILocation(line: 137, column: 74, scope: !6493)
!6502 = !DILocalVariable(name: "y", arg: 4, scope: !6493, file: !1066, line: 137, type: !196)
!6503 = !DILocation(line: 137, column: 81, scope: !6493)
!6504 = !DILocation(line: 139, column: 21, scope: !6493)
!6505 = !DILocation(line: 139, column: 40, scope: !6493)
!6506 = !DILocation(line: 139, column: 45, scope: !6493)
!6507 = !DILocation(line: 139, column: 51, scope: !6493)
!6508 = !DILocation(line: 139, column: 54, scope: !6493)
!6509 = !DILocation(line: 139, column: 26, scope: !6493)
!6510 = !DILocation(line: 139, column: 9, scope: !6493)
!6511 = !DILocation(line: 139, column: 2, scope: !6493)
!6512 = distinct !DISubprogram(name: "grid_tangent_matrix", scope: !3, file: !3, line: 991, type: !6513, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6513 = !DISubroutineType(types: !6514)
!6514 = !{null, !413, !5646, !196, !196, !2614}
!6515 = !DILocalVariable(name: "mat", arg: 1, scope: !6512, file: !3, line: 991, type: !413)
!6516 = !DILocation(line: 991, column: 39, scope: !6512)
!6517 = !DILocalVariable(name: "key", arg: 2, scope: !6512, file: !3, line: 991, type: !5646)
!6518 = !DILocation(line: 991, column: 64, scope: !6512)
!6519 = !DILocalVariable(name: "x", arg: 3, scope: !6512, file: !3, line: 992, type: !196)
!6520 = !DILocation(line: 992, column: 37, scope: !6512)
!6521 = !DILocalVariable(name: "y", arg: 4, scope: !6512, file: !3, line: 992, type: !196)
!6522 = !DILocation(line: 992, column: 44, scope: !6512)
!6523 = !DILocalVariable(name: "grid", arg: 5, scope: !6512, file: !3, line: 992, type: !2614)
!6524 = !DILocation(line: 992, column: 56, scope: !6512)
!6525 = !DILocation(line: 994, column: 15, scope: !6512)
!6526 = !DILocation(line: 994, column: 20, scope: !6512)
!6527 = !DILocation(line: 994, column: 23, scope: !6512)
!6528 = !DILocation(line: 994, column: 29, scope: !6512)
!6529 = !DILocation(line: 994, column: 35, scope: !6512)
!6530 = !DILocation(line: 994, column: 2, scope: !6512)
!6531 = !DILocation(line: 995, column: 15, scope: !6512)
!6532 = !DILocation(line: 995, column: 2, scope: !6512)
!6533 = !DILocation(line: 997, column: 15, scope: !6512)
!6534 = !DILocation(line: 997, column: 20, scope: !6512)
!6535 = !DILocation(line: 997, column: 23, scope: !6512)
!6536 = !DILocation(line: 997, column: 29, scope: !6512)
!6537 = !DILocation(line: 997, column: 35, scope: !6512)
!6538 = !DILocation(line: 997, column: 2, scope: !6512)
!6539 = !DILocation(line: 998, column: 15, scope: !6512)
!6540 = !DILocation(line: 998, column: 2, scope: !6512)
!6541 = !DILocation(line: 1000, column: 13, scope: !6512)
!6542 = !DILocation(line: 1000, column: 38, scope: !6512)
!6543 = !DILocation(line: 1000, column: 43, scope: !6512)
!6544 = !DILocation(line: 1000, column: 49, scope: !6512)
!6545 = !DILocation(line: 1000, column: 52, scope: !6512)
!6546 = !DILocation(line: 1000, column: 21, scope: !6512)
!6547 = !DILocation(line: 1000, column: 2, scope: !6512)
!6548 = !DILocation(line: 1001, column: 1, scope: !6512)
!6549 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !4459, file: !4459, line: 309, type: !5614, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6550 = !DILocalVariable(name: "r", arg: 1, scope: !6549, file: !4459, line: 309, type: !418)
!6551 = !DILocation(line: 309, column: 32, scope: !6549)
!6552 = !DILocalVariable(name: "a", arg: 2, scope: !6549, file: !4459, line: 309, type: !1100)
!6553 = !DILocation(line: 309, column: 50, scope: !6549)
!6554 = !DILocalVariable(name: "b", arg: 3, scope: !6549, file: !4459, line: 309, type: !1100)
!6555 = !DILocation(line: 309, column: 68, scope: !6549)
!6556 = !DILocation(line: 311, column: 9, scope: !6549)
!6557 = !DILocation(line: 311, column: 16, scope: !6549)
!6558 = !DILocation(line: 311, column: 14, scope: !6549)
!6559 = !DILocation(line: 311, column: 2, scope: !6549)
!6560 = !DILocation(line: 311, column: 7, scope: !6549)
!6561 = !DILocation(line: 312, column: 9, scope: !6549)
!6562 = !DILocation(line: 312, column: 16, scope: !6549)
!6563 = !DILocation(line: 312, column: 14, scope: !6549)
!6564 = !DILocation(line: 312, column: 2, scope: !6549)
!6565 = !DILocation(line: 312, column: 7, scope: !6549)
!6566 = !DILocation(line: 313, column: 9, scope: !6549)
!6567 = !DILocation(line: 313, column: 16, scope: !6549)
!6568 = !DILocation(line: 313, column: 14, scope: !6549)
!6569 = !DILocation(line: 313, column: 2, scope: !6549)
!6570 = !DILocation(line: 313, column: 7, scope: !6549)
!6571 = !DILocation(line: 314, column: 1, scope: !6549)
!6572 = distinct !DISubprogram(name: "sub_v3_v3", scope: !4459, file: !4459, line: 350, type: !4460, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6573 = !DILocalVariable(name: "r", arg: 1, scope: !6572, file: !4459, line: 350, type: !418)
!6574 = !DILocation(line: 350, column: 30, scope: !6572)
!6575 = !DILocalVariable(name: "a", arg: 2, scope: !6572, file: !4459, line: 350, type: !1100)
!6576 = !DILocation(line: 350, column: 48, scope: !6572)
!6577 = !DILocation(line: 352, column: 10, scope: !6572)
!6578 = !DILocation(line: 352, column: 2, scope: !6572)
!6579 = !DILocation(line: 352, column: 7, scope: !6572)
!6580 = !DILocation(line: 353, column: 10, scope: !6572)
!6581 = !DILocation(line: 353, column: 2, scope: !6572)
!6582 = !DILocation(line: 353, column: 7, scope: !6572)
!6583 = !DILocation(line: 354, column: 10, scope: !6572)
!6584 = !DILocation(line: 354, column: 2, scope: !6572)
!6585 = !DILocation(line: 354, column: 7, scope: !6572)
!6586 = !DILocation(line: 355, column: 1, scope: !6572)
!6587 = distinct !DISubprogram(name: "multires_stitch_grids", scope: !3, file: !3, line: 1414, type: !2997, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6588 = !DILocalVariable(name: "ob", arg: 1, scope: !6587, file: !3, line: 1414, type: !2689)
!6589 = !DILocation(line: 1414, column: 36, scope: !6587)
!6590 = !DILocation(line: 1417, column: 6, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 1417, column: 6)
!6592 = !DILocation(line: 1417, column: 9, scope: !6591)
!6593 = !DILocation(line: 1417, column: 12, scope: !6591)
!6594 = !DILocation(line: 1417, column: 16, scope: !6591)
!6595 = !DILocation(line: 1417, column: 6, scope: !6587)
!6596 = !DILocalVariable(name: "ccgdm", scope: !6597, file: !3, line: 1418, type: !2395)
!6597 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 1417, column: 30)
!6598 = !DILocation(line: 1418, column: 19, scope: !6597)
!6599 = !DILocation(line: 1418, column: 45, scope: !6597)
!6600 = !DILocation(line: 1418, column: 49, scope: !6597)
!6601 = !DILocation(line: 1418, column: 27, scope: !6597)
!6602 = !DILocalVariable(name: "faces", scope: !6597, file: !3, line: 1419, type: !6603)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!6604 = !DILocation(line: 1419, column: 13, scope: !6597)
!6605 = !DILocalVariable(name: "totface", scope: !6597, file: !3, line: 1420, type: !196)
!6606 = !DILocation(line: 1420, column: 7, scope: !6597)
!6607 = !DILocation(line: 1422, column: 7, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 1422, column: 7)
!6609 = !DILocation(line: 1422, column: 14, scope: !6608)
!6610 = !DILocation(line: 1422, column: 7, scope: !6597)
!6611 = !DILocation(line: 1423, column: 30, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 1422, column: 20)
!6613 = !DILocation(line: 1423, column: 37, scope: !6612)
!6614 = !DILocation(line: 1423, column: 46, scope: !6612)
!6615 = !DILocation(line: 1423, column: 4, scope: !6612)
!6616 = !DILocation(line: 1425, column: 8, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 1425, column: 8)
!6618 = !DILocation(line: 1425, column: 8, scope: !6612)
!6619 = !DILocation(line: 1426, column: 28, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1425, column: 17)
!6621 = !DILocation(line: 1426, column: 35, scope: !6620)
!6622 = !DILocation(line: 1426, column: 42, scope: !6620)
!6623 = !DILocation(line: 1426, column: 49, scope: !6620)
!6624 = !DILocation(line: 1426, column: 5, scope: !6620)
!6625 = !DILocation(line: 1427, column: 5, scope: !6620)
!6626 = !DILocation(line: 1427, column: 15, scope: !6620)
!6627 = !DILocation(line: 1428, column: 4, scope: !6620)
!6628 = !DILocation(line: 1429, column: 3, scope: !6612)
!6629 = !DILocation(line: 1430, column: 2, scope: !6597)
!6630 = !DILocation(line: 1431, column: 1, scope: !6587)
!6631 = distinct !DISubprogram(name: "multires_make_derived_from_derived", scope: !3, file: !3, line: 1433, type: !6632, scopeLine: 1437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6632 = !DISubroutineType(types: !6633)
!6633 = !{!879, !915, !2391, !2689, !4431}
!6634 = !DILocalVariable(name: "dm", arg: 1, scope: !6631, file: !3, line: 1433, type: !915)
!6635 = !DILocation(line: 1433, column: 62, scope: !6631)
!6636 = !DILocalVariable(name: "mmd", arg: 2, scope: !6631, file: !3, line: 1434, type: !2391)
!6637 = !DILocation(line: 1434, column: 71, scope: !6631)
!6638 = !DILocalVariable(name: "ob", arg: 3, scope: !6631, file: !3, line: 1435, type: !2689)
!6639 = !DILocation(line: 1435, column: 57, scope: !6631)
!6640 = !DILocalVariable(name: "flags", arg: 4, scope: !6631, file: !3, line: 1436, type: !4431)
!6641 = !DILocation(line: 1436, column: 63, scope: !6631)
!6642 = !DILocalVariable(name: "me", scope: !6631, file: !3, line: 1438, type: !2466)
!6643 = !DILocation(line: 1438, column: 8, scope: !6631)
!6644 = !DILocation(line: 1438, column: 13, scope: !6631)
!6645 = !DILocation(line: 1438, column: 17, scope: !6631)
!6646 = !DILocalVariable(name: "result", scope: !6631, file: !3, line: 1439, type: !915)
!6647 = !DILocation(line: 1439, column: 15, scope: !6631)
!6648 = !DILocalVariable(name: "ccgdm", scope: !6631, file: !3, line: 1440, type: !2395)
!6649 = !DILocation(line: 1440, column: 18, scope: !6631)
!6650 = !DILocalVariable(name: "gridData", scope: !6631, file: !3, line: 1441, type: !4611)
!6651 = !DILocation(line: 1441, column: 12, scope: !6631)
!6652 = !DILocalVariable(name: "subGridData", scope: !6631, file: !3, line: 1441, type: !4611)
!6653 = !DILocation(line: 1441, column: 24, scope: !6631)
!6654 = !DILocalVariable(name: "key", scope: !6631, file: !3, line: 1442, type: !3133)
!6655 = !DILocation(line: 1442, column: 9, scope: !6631)
!6656 = !DILocalVariable(name: "render", scope: !6631, file: !3, line: 1443, type: !1261)
!6657 = !DILocation(line: 1443, column: 13, scope: !6631)
!6658 = !DILocation(line: 1443, column: 23, scope: !6631)
!6659 = !DILocation(line: 1443, column: 29, scope: !6631)
!6660 = !DILocation(line: 1443, column: 59, scope: !6631)
!6661 = !DILocation(line: 1443, column: 22, scope: !6631)
!6662 = !DILocalVariable(name: "ignore_simplify", scope: !6631, file: !3, line: 1444, type: !1261)
!6663 = !DILocation(line: 1444, column: 13, scope: !6631)
!6664 = !DILocation(line: 1444, column: 32, scope: !6631)
!6665 = !DILocation(line: 1444, column: 38, scope: !6631)
!6666 = !DILocation(line: 1444, column: 66, scope: !6631)
!6667 = !DILocation(line: 1444, column: 31, scope: !6631)
!6668 = !DILocalVariable(name: "lvl", scope: !6631, file: !3, line: 1445, type: !196)
!6669 = !DILocation(line: 1445, column: 6, scope: !6631)
!6670 = !DILocation(line: 1445, column: 31, scope: !6631)
!6671 = !DILocation(line: 1445, column: 35, scope: !6631)
!6672 = !DILocation(line: 1445, column: 40, scope: !6631)
!6673 = !DILocation(line: 1445, column: 48, scope: !6631)
!6674 = !DILocation(line: 1445, column: 12, scope: !6631)
!6675 = !DILocalVariable(name: "i", scope: !6631, file: !3, line: 1446, type: !196)
!6676 = !DILocation(line: 1446, column: 6, scope: !6631)
!6677 = !DILocalVariable(name: "gridSize", scope: !6631, file: !3, line: 1446, type: !196)
!6678 = !DILocation(line: 1446, column: 9, scope: !6631)
!6679 = !DILocalVariable(name: "numGrids", scope: !6631, file: !3, line: 1446, type: !196)
!6680 = !DILocation(line: 1446, column: 19, scope: !6631)
!6681 = !DILocation(line: 1448, column: 6, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1448, column: 6)
!6683 = !DILocation(line: 1448, column: 10, scope: !6682)
!6684 = !DILocation(line: 1448, column: 6, scope: !6631)
!6685 = !DILocation(line: 1449, column: 10, scope: !6682)
!6686 = !DILocation(line: 1449, column: 3, scope: !6682)
!6687 = !DILocation(line: 1451, column: 35, scope: !6631)
!6688 = !DILocation(line: 1451, column: 39, scope: !6631)
!6689 = !DILocation(line: 1451, column: 43, scope: !6631)
!6690 = !DILocation(line: 1452, column: 35, scope: !6631)
!6691 = !DILocation(line: 1452, column: 40, scope: !6631)
!6692 = !DILocation(line: 1452, column: 48, scope: !6631)
!6693 = !DILocation(line: 1452, column: 53, scope: !6631)
!6694 = !DILocation(line: 1452, column: 59, scope: !6631)
!6695 = !DILocation(line: 1453, column: 35, scope: !6631)
!6696 = !DILocation(line: 1453, column: 40, scope: !6631)
!6697 = !DILocation(line: 1453, column: 46, scope: !6631)
!6698 = !DILocation(line: 1454, column: 35, scope: !6631)
!6699 = !DILocation(line: 1454, column: 41, scope: !6631)
!6700 = !DILocation(line: 1451, column: 11, scope: !6631)
!6701 = !DILocation(line: 1451, column: 9, scope: !6631)
!6702 = !DILocation(line: 1456, column: 8, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1456, column: 6)
!6704 = !DILocation(line: 1456, column: 14, scope: !6703)
!6705 = !DILocation(line: 1456, column: 6, scope: !6631)
!6706 = !DILocation(line: 1457, column: 29, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1456, column: 41)
!6708 = !DILocation(line: 1457, column: 11, scope: !6707)
!6709 = !DILocation(line: 1457, column: 9, scope: !6707)
!6710 = !DILocation(line: 1459, column: 24, scope: !6707)
!6711 = !DILocation(line: 1459, column: 3, scope: !6707)
!6712 = !DILocation(line: 1459, column: 10, scope: !6707)
!6713 = !DILocation(line: 1459, column: 19, scope: !6707)
!6714 = !DILocation(line: 1459, column: 22, scope: !6707)
!6715 = !DILocation(line: 1460, column: 25, scope: !6707)
!6716 = !DILocation(line: 1460, column: 3, scope: !6707)
!6717 = !DILocation(line: 1460, column: 10, scope: !6707)
!6718 = !DILocation(line: 1460, column: 19, scope: !6707)
!6719 = !DILocation(line: 1460, column: 23, scope: !6707)
!6720 = !DILocation(line: 1461, column: 3, scope: !6707)
!6721 = !DILocation(line: 1461, column: 10, scope: !6707)
!6722 = !DILocation(line: 1461, column: 19, scope: !6707)
!6723 = !DILocation(line: 1461, column: 29, scope: !6707)
!6724 = !DILocation(line: 1462, column: 25, scope: !6707)
!6725 = !DILocation(line: 1462, column: 3, scope: !6707)
!6726 = !DILocation(line: 1462, column: 10, scope: !6707)
!6727 = !DILocation(line: 1462, column: 19, scope: !6707)
!6728 = !DILocation(line: 1462, column: 23, scope: !6707)
!6729 = !DILocation(line: 1463, column: 28, scope: !6707)
!6730 = !DILocation(line: 1463, column: 33, scope: !6707)
!6731 = !DILocation(line: 1463, column: 3, scope: !6707)
!6732 = !DILocation(line: 1463, column: 10, scope: !6707)
!6733 = !DILocation(line: 1463, column: 19, scope: !6707)
!6734 = !DILocation(line: 1463, column: 26, scope: !6707)
!6735 = !DILocation(line: 1464, column: 3, scope: !6707)
!6736 = !DILocation(line: 1464, column: 10, scope: !6707)
!6737 = !DILocation(line: 1464, column: 19, scope: !6707)
!6738 = !DILocation(line: 1464, column: 34, scope: !6707)
!6739 = !DILocation(line: 1465, column: 2, scope: !6707)
!6740 = !DILocation(line: 1467, column: 13, scope: !6631)
!6741 = !DILocation(line: 1467, column: 21, scope: !6631)
!6742 = !DILocation(line: 1467, column: 33, scope: !6631)
!6743 = !DILocation(line: 1467, column: 11, scope: !6631)
!6744 = !DILocation(line: 1468, column: 13, scope: !6631)
!6745 = !DILocation(line: 1468, column: 21, scope: !6631)
!6746 = !DILocation(line: 1468, column: 33, scope: !6631)
!6747 = !DILocation(line: 1468, column: 11, scope: !6631)
!6748 = !DILocation(line: 1469, column: 13, scope: !6631)
!6749 = !DILocation(line: 1469, column: 21, scope: !6631)
!6750 = !DILocation(line: 1469, column: 33, scope: !6631)
!6751 = !DILocation(line: 1469, column: 11, scope: !6631)
!6752 = !DILocation(line: 1470, column: 2, scope: !6631)
!6753 = !DILocation(line: 1470, column: 10, scope: !6631)
!6754 = !DILocation(line: 1470, column: 21, scope: !6631)
!6755 = !DILocation(line: 1472, column: 16, scope: !6631)
!6756 = !DILocation(line: 1472, column: 48, scope: !6631)
!6757 = !DILocation(line: 1472, column: 46, scope: !6631)
!6758 = !DILocation(line: 1472, column: 14, scope: !6631)
!6759 = !DILocation(line: 1474, column: 9, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1474, column: 2)
!6761 = !DILocation(line: 1474, column: 7, scope: !6760)
!6762 = !DILocation(line: 1474, column: 14, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 1474, column: 2)
!6764 = !DILocation(line: 1474, column: 18, scope: !6763)
!6765 = !DILocation(line: 1474, column: 16, scope: !6763)
!6766 = !DILocation(line: 1474, column: 2, scope: !6760)
!6767 = !DILocation(line: 1475, column: 20, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 1474, column: 33)
!6769 = !DILocation(line: 1475, column: 36, scope: !6768)
!6770 = !DILocation(line: 1475, column: 48, scope: !6768)
!6771 = !DILocation(line: 1475, column: 46, scope: !6768)
!6772 = !DILocation(line: 1475, column: 59, scope: !6768)
!6773 = !DILocation(line: 1475, column: 57, scope: !6768)
!6774 = !DILocation(line: 1475, column: 32, scope: !6768)
!6775 = !DILocation(line: 1475, column: 3, scope: !6768)
!6776 = !DILocation(line: 1475, column: 15, scope: !6768)
!6777 = !DILocation(line: 1475, column: 18, scope: !6768)
!6778 = !DILocation(line: 1476, column: 10, scope: !6768)
!6779 = !DILocation(line: 1476, column: 22, scope: !6768)
!6780 = !DILocation(line: 1476, column: 3, scope: !6768)
!6781 = !DILocation(line: 1476, column: 26, scope: !6768)
!6782 = !DILocation(line: 1476, column: 35, scope: !6768)
!6783 = !DILocation(line: 1476, column: 43, scope: !6768)
!6784 = !DILocation(line: 1476, column: 55, scope: !6768)
!6785 = !DILocation(line: 1476, column: 53, scope: !6768)
!6786 = !DILocation(line: 1476, column: 66, scope: !6768)
!6787 = !DILocation(line: 1476, column: 64, scope: !6768)
!6788 = !DILocation(line: 1476, column: 39, scope: !6768)
!6789 = !DILocation(line: 1477, column: 2, scope: !6768)
!6790 = !DILocation(line: 1474, column: 29, scope: !6763)
!6791 = !DILocation(line: 1474, column: 2, scope: !6763)
!6792 = distinct !{!6792, !6766, !6793}
!6793 = !DILocation(line: 1477, column: 2, scope: !6760)
!6794 = !DILocation(line: 1479, column: 26, scope: !6631)
!6795 = !DILocation(line: 1479, column: 30, scope: !6631)
!6796 = !DILocation(line: 1479, column: 35, scope: !6631)
!6797 = !DILocation(line: 1479, column: 2, scope: !6631)
!6798 = !DILocation(line: 1480, column: 28, scope: !6631)
!6799 = !DILocation(line: 1480, column: 32, scope: !6631)
!6800 = !DILocation(line: 1480, column: 40, scope: !6631)
!6801 = !DILocation(line: 1480, column: 44, scope: !6631)
!6802 = !DILocation(line: 1480, column: 64, scope: !6631)
!6803 = !DILocation(line: 1480, column: 68, scope: !6631)
!6804 = !DILocation(line: 1480, column: 2, scope: !6631)
!6805 = !DILocation(line: 1483, column: 28, scope: !6631)
!6806 = !DILocation(line: 1483, column: 36, scope: !6631)
!6807 = !DILocation(line: 1483, column: 40, scope: !6631)
!6808 = !DILocation(line: 1483, column: 46, scope: !6631)
!6809 = !DILocation(line: 1483, column: 71, scope: !6631)
!6810 = !DILocation(line: 1483, column: 84, scope: !6631)
!6811 = !DILocation(line: 1483, column: 89, scope: !6631)
!6812 = !DILocation(line: 1483, column: 2, scope: !6631)
!6813 = !DILocation(line: 1486, column: 6, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1486, column: 6)
!6815 = !DILocation(line: 1486, column: 6, scope: !6631)
!6816 = !DILocation(line: 1487, column: 35, scope: !6814)
!6817 = !DILocation(line: 1487, column: 42, scope: !6814)
!6818 = !DILocation(line: 1487, column: 46, scope: !6814)
!6819 = !DILocation(line: 1487, column: 3, scope: !6814)
!6820 = !DILocation(line: 1489, column: 9, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6631, file: !3, line: 1489, column: 2)
!6822 = !DILocation(line: 1489, column: 7, scope: !6821)
!6823 = !DILocation(line: 1489, column: 14, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1489, column: 2)
!6825 = !DILocation(line: 1489, column: 18, scope: !6824)
!6826 = !DILocation(line: 1489, column: 16, scope: !6824)
!6827 = !DILocation(line: 1489, column: 2, scope: !6821)
!6828 = !DILocation(line: 1490, column: 3, scope: !6824)
!6829 = !DILocation(line: 1490, column: 13, scope: !6824)
!6830 = !DILocation(line: 1490, column: 25, scope: !6824)
!6831 = !DILocation(line: 1489, column: 29, scope: !6824)
!6832 = !DILocation(line: 1489, column: 2, scope: !6824)
!6833 = distinct !{!6833, !6827, !6834}
!6834 = !DILocation(line: 1490, column: 27, scope: !6821)
!6835 = !DILocation(line: 1491, column: 2, scope: !6631)
!6836 = !DILocation(line: 1491, column: 12, scope: !6631)
!6837 = !DILocation(line: 1493, column: 9, scope: !6631)
!6838 = !DILocation(line: 1493, column: 2, scope: !6631)
!6839 = !DILocation(line: 1494, column: 1, scope: !6631)
!6840 = distinct !DISubprogram(name: "multires_output_hidden_to_ccgdm", scope: !3, file: !3, line: 200, type: !6841, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{null, !2395, !2466, !196}
!6843 = !DILocalVariable(name: "ccgdm", arg: 1, scope: !6840, file: !3, line: 200, type: !2395)
!6844 = !DILocation(line: 200, column: 61, scope: !6840)
!6845 = !DILocalVariable(name: "me", arg: 2, scope: !6840, file: !3, line: 201, type: !2466)
!6846 = !DILocation(line: 201, column: 51, scope: !6840)
!6847 = !DILocalVariable(name: "level", arg: 3, scope: !6840, file: !3, line: 201, type: !196)
!6848 = !DILocation(line: 201, column: 59, scope: !6840)
!6849 = !DILocalVariable(name: "mdisps", scope: !6840, file: !3, line: 203, type: !6850)
!6850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6851, size: 64)
!6851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3567)
!6852 = !DILocation(line: 203, column: 16, scope: !6840)
!6853 = !DILocation(line: 203, column: 47, scope: !6840)
!6854 = !DILocation(line: 203, column: 51, scope: !6840)
!6855 = !DILocation(line: 203, column: 25, scope: !6840)
!6856 = !DILocalVariable(name: "grid_hidden", scope: !6840, file: !3, line: 204, type: !5814)
!6857 = !DILocation(line: 204, column: 15, scope: !6840)
!6858 = !DILocation(line: 204, column: 29, scope: !6840)
!6859 = !DILocation(line: 204, column: 36, scope: !6840)
!6860 = !DILocalVariable(name: "gridOffset", scope: !6840, file: !3, line: 205, type: !426)
!6861 = !DILocation(line: 205, column: 7, scope: !6840)
!6862 = !DILocalVariable(name: "i", scope: !6840, file: !3, line: 206, type: !196)
!6863 = !DILocation(line: 206, column: 6, scope: !6840)
!6864 = !DILocalVariable(name: "j", scope: !6840, file: !3, line: 206, type: !196)
!6865 = !DILocation(line: 206, column: 9, scope: !6840)
!6866 = !DILocation(line: 208, column: 15, scope: !6840)
!6867 = !DILocation(line: 208, column: 22, scope: !6840)
!6868 = !DILocation(line: 208, column: 25, scope: !6840)
!6869 = !DILocation(line: 208, column: 40, scope: !6840)
!6870 = !DILocation(line: 208, column: 47, scope: !6840)
!6871 = !DILocation(line: 208, column: 13, scope: !6840)
!6872 = !DILocation(line: 210, column: 9, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 210, column: 2)
!6874 = !DILocation(line: 210, column: 7, scope: !6873)
!6875 = !DILocation(line: 210, column: 14, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 210, column: 2)
!6877 = !DILocation(line: 210, column: 18, scope: !6876)
!6878 = !DILocation(line: 210, column: 22, scope: !6876)
!6879 = !DILocation(line: 210, column: 16, scope: !6876)
!6880 = !DILocation(line: 210, column: 2, scope: !6873)
!6881 = !DILocation(line: 211, column: 10, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 211, column: 3)
!6883 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 210, column: 36)
!6884 = !DILocation(line: 211, column: 8, scope: !6882)
!6885 = !DILocation(line: 211, column: 15, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 211, column: 3)
!6887 = !DILocation(line: 211, column: 19, scope: !6886)
!6888 = !DILocation(line: 211, column: 23, scope: !6886)
!6889 = !DILocation(line: 211, column: 29, scope: !6886)
!6890 = !DILocation(line: 211, column: 32, scope: !6886)
!6891 = !DILocation(line: 211, column: 17, scope: !6886)
!6892 = !DILocation(line: 211, column: 3, scope: !6882)
!6893 = !DILocalVariable(name: "g", scope: !6894, file: !3, line: 212, type: !196)
!6894 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 211, column: 46)
!6895 = !DILocation(line: 212, column: 8, scope: !6894)
!6896 = !DILocation(line: 212, column: 12, scope: !6894)
!6897 = !DILocation(line: 212, column: 23, scope: !6894)
!6898 = !DILocation(line: 212, column: 28, scope: !6894)
!6899 = !DILocation(line: 212, column: 26, scope: !6894)
!6900 = !DILocalVariable(name: "md", scope: !6894, file: !3, line: 213, type: !6850)
!6901 = !DILocation(line: 213, column: 18, scope: !6894)
!6902 = !DILocation(line: 213, column: 24, scope: !6894)
!6903 = !DILocation(line: 213, column: 31, scope: !6894)
!6904 = !DILocalVariable(name: "gh", scope: !6894, file: !3, line: 214, type: !2611)
!6905 = !DILocation(line: 214, column: 16, scope: !6894)
!6906 = !DILocation(line: 214, column: 21, scope: !6894)
!6907 = !DILocation(line: 214, column: 25, scope: !6894)
!6908 = !DILocation(line: 216, column: 8, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 216, column: 8)
!6910 = !DILocation(line: 216, column: 8, scope: !6894)
!6911 = !DILocation(line: 218, column: 47, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 216, column: 12)
!6913 = !DILocation(line: 218, column: 51, scope: !6912)
!6914 = !DILocation(line: 218, column: 55, scope: !6912)
!6915 = !DILocation(line: 218, column: 62, scope: !6912)
!6916 = !DILocation(line: 218, column: 13, scope: !6912)
!6917 = !DILocation(line: 217, column: 5, scope: !6912)
!6918 = !DILocation(line: 217, column: 17, scope: !6912)
!6919 = !DILocation(line: 217, column: 20, scope: !6912)
!6920 = !DILocation(line: 219, column: 4, scope: !6912)
!6921 = !DILocation(line: 220, column: 3, scope: !6894)
!6922 = !DILocation(line: 211, column: 42, scope: !6886)
!6923 = !DILocation(line: 211, column: 3, scope: !6886)
!6924 = distinct !{!6924, !6892, !6925}
!6925 = !DILocation(line: 220, column: 3, scope: !6882)
!6926 = !DILocation(line: 221, column: 2, scope: !6883)
!6927 = !DILocation(line: 210, column: 32, scope: !6876)
!6928 = !DILocation(line: 210, column: 2, scope: !6876)
!6929 = distinct !{!6929, !6880, !6930}
!6930 = !DILocation(line: 221, column: 2, scope: !6873)
!6931 = !DILocation(line: 222, column: 1, scope: !6840)
!6932 = distinct !DISubprogram(name: "old_mdisps_bilinear", scope: !3, file: !3, line: 1500, type: !6933, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{null, !418, !413, !2620, !388, !388}
!6935 = !DILocalVariable(name: "out", arg: 1, scope: !6932, file: !3, line: 1500, type: !418)
!6936 = !DILocation(line: 1500, column: 32, scope: !6932)
!6937 = !DILocalVariable(name: "disps", arg: 2, scope: !6932, file: !3, line: 1500, type: !413)
!6938 = !DILocation(line: 1500, column: 48, scope: !6932)
!6939 = !DILocalVariable(name: "st", arg: 3, scope: !6932, file: !3, line: 1500, type: !2620)
!6940 = !DILocation(line: 1500, column: 69, scope: !6932)
!6941 = !DILocalVariable(name: "u", arg: 4, scope: !6932, file: !3, line: 1500, type: !388)
!6942 = !DILocation(line: 1500, column: 79, scope: !6932)
!6943 = !DILocalVariable(name: "v", arg: 5, scope: !6932, file: !3, line: 1500, type: !388)
!6944 = !DILocation(line: 1500, column: 88, scope: !6932)
!6945 = !DILocalVariable(name: "x", scope: !6932, file: !3, line: 1502, type: !196)
!6946 = !DILocation(line: 1502, column: 6, scope: !6932)
!6947 = !DILocalVariable(name: "y", scope: !6932, file: !3, line: 1502, type: !196)
!6948 = !DILocation(line: 1502, column: 9, scope: !6932)
!6949 = !DILocalVariable(name: "x2", scope: !6932, file: !3, line: 1502, type: !196)
!6950 = !DILocation(line: 1502, column: 12, scope: !6932)
!6951 = !DILocalVariable(name: "y2", scope: !6932, file: !3, line: 1502, type: !196)
!6952 = !DILocation(line: 1502, column: 16, scope: !6932)
!6953 = !DILocalVariable(name: "st_max", scope: !6932, file: !3, line: 1503, type: !2620)
!6954 = !DILocation(line: 1503, column: 12, scope: !6932)
!6955 = !DILocation(line: 1503, column: 21, scope: !6932)
!6956 = !DILocation(line: 1503, column: 24, scope: !6932)
!6957 = !DILocalVariable(name: "urat", scope: !6932, file: !3, line: 1504, type: !388)
!6958 = !DILocation(line: 1504, column: 8, scope: !6932)
!6959 = !DILocalVariable(name: "vrat", scope: !6932, file: !3, line: 1504, type: !388)
!6960 = !DILocation(line: 1504, column: 14, scope: !6932)
!6961 = !DILocalVariable(name: "uopp", scope: !6932, file: !3, line: 1504, type: !388)
!6962 = !DILocation(line: 1504, column: 20, scope: !6932)
!6963 = !DILocalVariable(name: "d", scope: !6932, file: !3, line: 1505, type: !6964)
!6964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 384, elements: !6965)
!6965 = !{!785, !390}
!6966 = !DILocation(line: 1505, column: 8, scope: !6932)
!6967 = !DILocalVariable(name: "d2", scope: !6932, file: !3, line: 1505, type: !6968)
!6968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 192, elements: !6969)
!6969 = !{!381, !390}
!6970 = !DILocation(line: 1505, column: 17, scope: !6932)
!6971 = !DILocation(line: 1507, column: 7, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1507, column: 6)
!6973 = !DILocation(line: 1507, column: 13, scope: !6972)
!6974 = !DILocation(line: 1507, column: 16, scope: !6972)
!6975 = !DILocation(line: 1507, column: 25, scope: !6972)
!6976 = !DILocation(line: 1507, column: 28, scope: !6972)
!6977 = !DILocation(line: 1507, column: 6, scope: !6932)
!6978 = !DILocation(line: 1508, column: 3, scope: !6972)
!6979 = !DILocation(line: 1510, column: 6, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1510, column: 6)
!6981 = !DILocation(line: 1510, column: 8, scope: !6980)
!6982 = !DILocation(line: 1510, column: 6, scope: !6932)
!6983 = !DILocation(line: 1511, column: 5, scope: !6980)
!6984 = !DILocation(line: 1511, column: 3, scope: !6980)
!6985 = !DILocation(line: 1512, column: 11, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6980, file: !3, line: 1512, column: 11)
!6987 = !DILocation(line: 1512, column: 16, scope: !6986)
!6988 = !DILocation(line: 1512, column: 13, scope: !6986)
!6989 = !DILocation(line: 1512, column: 11, scope: !6980)
!6990 = !DILocation(line: 1513, column: 7, scope: !6986)
!6991 = !DILocation(line: 1513, column: 5, scope: !6986)
!6992 = !DILocation(line: 1513, column: 3, scope: !6986)
!6993 = !DILocation(line: 1514, column: 6, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1514, column: 6)
!6995 = !DILocation(line: 1514, column: 8, scope: !6994)
!6996 = !DILocation(line: 1514, column: 6, scope: !6932)
!6997 = !DILocation(line: 1515, column: 5, scope: !6994)
!6998 = !DILocation(line: 1515, column: 3, scope: !6994)
!6999 = !DILocation(line: 1516, column: 11, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1516, column: 11)
!7001 = !DILocation(line: 1516, column: 16, scope: !7000)
!7002 = !DILocation(line: 1516, column: 13, scope: !7000)
!7003 = !DILocation(line: 1516, column: 11, scope: !6994)
!7004 = !DILocation(line: 1517, column: 7, scope: !7000)
!7005 = !DILocation(line: 1517, column: 5, scope: !7000)
!7006 = !DILocation(line: 1517, column: 3, scope: !7000)
!7007 = !DILocation(line: 1519, column: 12, scope: !6932)
!7008 = !DILocation(line: 1519, column: 6, scope: !6932)
!7009 = !DILocation(line: 1519, column: 4, scope: !6932)
!7010 = !DILocation(line: 1520, column: 12, scope: !6932)
!7011 = !DILocation(line: 1520, column: 6, scope: !6932)
!7012 = !DILocation(line: 1520, column: 4, scope: !6932)
!7013 = !DILocation(line: 1521, column: 7, scope: !6932)
!7014 = !DILocation(line: 1521, column: 9, scope: !6932)
!7015 = !DILocation(line: 1521, column: 5, scope: !6932)
!7016 = !DILocation(line: 1522, column: 7, scope: !6932)
!7017 = !DILocation(line: 1522, column: 9, scope: !6932)
!7018 = !DILocation(line: 1522, column: 5, scope: !6932)
!7019 = !DILocation(line: 1524, column: 6, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1524, column: 6)
!7021 = !DILocation(line: 1524, column: 12, scope: !7020)
!7022 = !DILocation(line: 1524, column: 9, scope: !7020)
!7023 = !DILocation(line: 1524, column: 6, scope: !6932)
!7024 = !DILocation(line: 1524, column: 21, scope: !7020)
!7025 = !DILocation(line: 1524, column: 19, scope: !7020)
!7026 = !DILocation(line: 1524, column: 16, scope: !7020)
!7027 = !DILocation(line: 1525, column: 6, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1525, column: 6)
!7029 = !DILocation(line: 1525, column: 12, scope: !7028)
!7030 = !DILocation(line: 1525, column: 9, scope: !7028)
!7031 = !DILocation(line: 1525, column: 6, scope: !6932)
!7032 = !DILocation(line: 1525, column: 21, scope: !7028)
!7033 = !DILocation(line: 1525, column: 19, scope: !7028)
!7034 = !DILocation(line: 1525, column: 16, scope: !7028)
!7035 = !DILocation(line: 1527, column: 9, scope: !6932)
!7036 = !DILocation(line: 1527, column: 13, scope: !6932)
!7037 = !DILocation(line: 1527, column: 11, scope: !6932)
!7038 = !DILocation(line: 1527, column: 7, scope: !6932)
!7039 = !DILocation(line: 1528, column: 9, scope: !6932)
!7040 = !DILocation(line: 1528, column: 13, scope: !6932)
!7041 = !DILocation(line: 1528, column: 11, scope: !6932)
!7042 = !DILocation(line: 1528, column: 7, scope: !6932)
!7043 = !DILocation(line: 1529, column: 13, scope: !6932)
!7044 = !DILocation(line: 1529, column: 11, scope: !6932)
!7045 = !DILocation(line: 1529, column: 7, scope: !6932)
!7046 = !DILocation(line: 1531, column: 14, scope: !6932)
!7047 = !DILocation(line: 1531, column: 20, scope: !6932)
!7048 = !DILocation(line: 1531, column: 26, scope: !6932)
!7049 = !DILocation(line: 1531, column: 30, scope: !6932)
!7050 = !DILocation(line: 1531, column: 28, scope: !6932)
!7051 = !DILocation(line: 1531, column: 35, scope: !6932)
!7052 = !DILocation(line: 1531, column: 33, scope: !6932)
!7053 = !DILocation(line: 1531, column: 39, scope: !6932)
!7054 = !DILocation(line: 1531, column: 2, scope: !6932)
!7055 = !DILocation(line: 1532, column: 14, scope: !6932)
!7056 = !DILocation(line: 1532, column: 20, scope: !6932)
!7057 = !DILocation(line: 1532, column: 26, scope: !6932)
!7058 = !DILocation(line: 1532, column: 30, scope: !6932)
!7059 = !DILocation(line: 1532, column: 28, scope: !6932)
!7060 = !DILocation(line: 1532, column: 35, scope: !6932)
!7061 = !DILocation(line: 1532, column: 33, scope: !6932)
!7062 = !DILocation(line: 1532, column: 40, scope: !6932)
!7063 = !DILocation(line: 1532, column: 2, scope: !6932)
!7064 = !DILocation(line: 1533, column: 14, scope: !6932)
!7065 = !DILocation(line: 1533, column: 20, scope: !6932)
!7066 = !DILocation(line: 1533, column: 26, scope: !6932)
!7067 = !DILocation(line: 1533, column: 31, scope: !6932)
!7068 = !DILocation(line: 1533, column: 29, scope: !6932)
!7069 = !DILocation(line: 1533, column: 36, scope: !6932)
!7070 = !DILocation(line: 1533, column: 34, scope: !6932)
!7071 = !DILocation(line: 1533, column: 40, scope: !6932)
!7072 = !DILocation(line: 1533, column: 2, scope: !6932)
!7073 = !DILocation(line: 1534, column: 14, scope: !6932)
!7074 = !DILocation(line: 1534, column: 20, scope: !6932)
!7075 = !DILocation(line: 1534, column: 26, scope: !6932)
!7076 = !DILocation(line: 1534, column: 31, scope: !6932)
!7077 = !DILocation(line: 1534, column: 29, scope: !6932)
!7078 = !DILocation(line: 1534, column: 36, scope: !6932)
!7079 = !DILocation(line: 1534, column: 34, scope: !6932)
!7080 = !DILocation(line: 1534, column: 41, scope: !6932)
!7081 = !DILocation(line: 1534, column: 2, scope: !6932)
!7082 = !DILocation(line: 1536, column: 14, scope: !6932)
!7083 = !DILocation(line: 1536, column: 21, scope: !6932)
!7084 = !DILocation(line: 1536, column: 27, scope: !6932)
!7085 = !DILocation(line: 1536, column: 2, scope: !6932)
!7086 = !DILocation(line: 1537, column: 14, scope: !6932)
!7087 = !DILocation(line: 1537, column: 21, scope: !6932)
!7088 = !DILocation(line: 1537, column: 27, scope: !6932)
!7089 = !DILocation(line: 1537, column: 2, scope: !6932)
!7090 = !DILocation(line: 1538, column: 12, scope: !6932)
!7091 = !DILocation(line: 1538, column: 23, scope: !6932)
!7092 = !DILocation(line: 1538, column: 21, scope: !6932)
!7093 = !DILocation(line: 1538, column: 2, scope: !6932)
!7094 = !DILocation(line: 1539, column: 12, scope: !6932)
!7095 = !DILocation(line: 1539, column: 19, scope: !6932)
!7096 = !DILocation(line: 1539, column: 2, scope: !6932)
!7097 = !DILocation(line: 1541, column: 14, scope: !6932)
!7098 = !DILocation(line: 1541, column: 19, scope: !6932)
!7099 = !DILocation(line: 1541, column: 26, scope: !6932)
!7100 = !DILocation(line: 1541, column: 2, scope: !6932)
!7101 = !DILocation(line: 1542, column: 1, scope: !6932)
!7102 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4459, file: !4459, line: 399, type: !7103, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{null, !418, !1100, !388}
!7105 = !DILocalVariable(name: "r", arg: 1, scope: !7102, file: !4459, line: 399, type: !418)
!7106 = !DILocation(line: 399, column: 32, scope: !7102)
!7107 = !DILocalVariable(name: "a", arg: 2, scope: !7102, file: !4459, line: 399, type: !1100)
!7108 = !DILocation(line: 399, column: 50, scope: !7102)
!7109 = !DILocalVariable(name: "f", arg: 3, scope: !7102, file: !4459, line: 399, type: !388)
!7110 = !DILocation(line: 399, column: 62, scope: !7102)
!7111 = !DILocation(line: 401, column: 9, scope: !7102)
!7112 = !DILocation(line: 401, column: 16, scope: !7102)
!7113 = !DILocation(line: 401, column: 14, scope: !7102)
!7114 = !DILocation(line: 401, column: 2, scope: !7102)
!7115 = !DILocation(line: 401, column: 7, scope: !7102)
!7116 = !DILocation(line: 402, column: 9, scope: !7102)
!7117 = !DILocation(line: 402, column: 16, scope: !7102)
!7118 = !DILocation(line: 402, column: 14, scope: !7102)
!7119 = !DILocation(line: 402, column: 2, scope: !7102)
!7120 = !DILocation(line: 402, column: 7, scope: !7102)
!7121 = !DILocation(line: 403, column: 9, scope: !7102)
!7122 = !DILocation(line: 403, column: 16, scope: !7102)
!7123 = !DILocation(line: 403, column: 14, scope: !7102)
!7124 = !DILocation(line: 403, column: 2, scope: !7102)
!7125 = !DILocation(line: 403, column: 7, scope: !7102)
!7126 = !DILocation(line: 404, column: 1, scope: !7102)
!7127 = distinct !DISubprogram(name: "multires_load_old_250", scope: !3, file: !3, line: 1589, type: !2630, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!7128 = !DILocalVariable(name: "me", arg: 1, scope: !7127, file: !3, line: 1589, type: !2466)
!7129 = !DILocation(line: 1589, column: 34, scope: !7127)
!7130 = !DILocalVariable(name: "mdisps", scope: !7127, file: !3, line: 1591, type: !3566)
!7131 = !DILocation(line: 1591, column: 10, scope: !7127)
!7132 = !DILocalVariable(name: "mdisps2", scope: !7127, file: !3, line: 1591, type: !3566)
!7133 = !DILocation(line: 1591, column: 19, scope: !7127)
!7134 = !DILocalVariable(name: "mf", scope: !7127, file: !3, line: 1592, type: !7135)
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !257, line: 46, baseType: !952)
!7137 = !DILocation(line: 1592, column: 9, scope: !7127)
!7138 = !DILocalVariable(name: "i", scope: !7127, file: !3, line: 1593, type: !196)
!7139 = !DILocation(line: 1593, column: 6, scope: !7127)
!7140 = !DILocalVariable(name: "j", scope: !7127, file: !3, line: 1593, type: !196)
!7141 = !DILocation(line: 1593, column: 9, scope: !7127)
!7142 = !DILocalVariable(name: "k", scope: !7127, file: !3, line: 1593, type: !196)
!7143 = !DILocation(line: 1593, column: 12, scope: !7127)
!7144 = !DILocation(line: 1595, column: 33, scope: !7127)
!7145 = !DILocation(line: 1595, column: 37, scope: !7127)
!7146 = !DILocation(line: 1595, column: 11, scope: !7127)
!7147 = !DILocation(line: 1595, column: 9, scope: !7127)
!7148 = !DILocation(line: 1597, column: 6, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 1597, column: 6)
!7150 = !DILocation(line: 1597, column: 6, scope: !7127)
!7151 = !DILocation(line: 1598, column: 10, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1598, column: 3)
!7153 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1597, column: 14)
!7154 = !DILocation(line: 1598, column: 8, scope: !7152)
!7155 = !DILocation(line: 1598, column: 15, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 1598, column: 3)
!7157 = !DILocation(line: 1598, column: 19, scope: !7156)
!7158 = !DILocation(line: 1598, column: 23, scope: !7156)
!7159 = !DILocation(line: 1598, column: 17, scope: !7156)
!7160 = !DILocation(line: 1598, column: 3, scope: !7152)
!7161 = !DILocation(line: 1599, column: 8, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 1599, column: 8)
!7163 = !DILocation(line: 1599, column: 15, scope: !7162)
!7164 = !DILocation(line: 1599, column: 18, scope: !7162)
!7165 = !DILocation(line: 1599, column: 8, scope: !7156)
!7166 = !DILocation(line: 1600, column: 25, scope: !7162)
!7167 = !DILocation(line: 1600, column: 29, scope: !7162)
!7168 = !DILocation(line: 1600, column: 35, scope: !7162)
!7169 = !DILocation(line: 1600, column: 40, scope: !7162)
!7170 = !DILocation(line: 1600, column: 47, scope: !7162)
!7171 = !DILocation(line: 1600, column: 5, scope: !7162)
!7172 = !DILocation(line: 1598, column: 33, scope: !7156)
!7173 = !DILocation(line: 1598, column: 3, scope: !7156)
!7174 = distinct !{!7174, !7160, !7175}
!7175 = !DILocation(line: 1600, column: 49, scope: !7152)
!7176 = !DILocation(line: 1602, column: 25, scope: !7153)
!7177 = !DILocation(line: 1602, column: 29, scope: !7153)
!7178 = !DILocation(line: 1602, column: 64, scope: !7153)
!7179 = !DILocation(line: 1602, column: 68, scope: !7153)
!7180 = !DILocation(line: 1602, column: 3, scope: !7153)
!7181 = !DILocation(line: 1603, column: 35, scope: !7153)
!7182 = !DILocation(line: 1603, column: 39, scope: !7153)
!7183 = !DILocation(line: 1603, column: 13, scope: !7153)
!7184 = !DILocation(line: 1603, column: 11, scope: !7153)
!7185 = !DILocation(line: 1605, column: 5, scope: !7153)
!7186 = !DILocation(line: 1606, column: 8, scope: !7153)
!7187 = !DILocation(line: 1606, column: 12, scope: !7153)
!7188 = !DILocation(line: 1606, column: 6, scope: !7153)
!7189 = !DILocation(line: 1607, column: 10, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1607, column: 3)
!7191 = !DILocation(line: 1607, column: 8, scope: !7190)
!7192 = !DILocation(line: 1607, column: 15, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 1607, column: 3)
!7194 = !DILocation(line: 1607, column: 19, scope: !7193)
!7195 = !DILocation(line: 1607, column: 23, scope: !7193)
!7196 = !DILocation(line: 1607, column: 17, scope: !7193)
!7197 = !DILocation(line: 1607, column: 3, scope: !7190)
!7198 = !DILocalVariable(name: "nvert", scope: !7199, file: !3, line: 1608, type: !196)
!7199 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1607, column: 43)
!7200 = !DILocation(line: 1608, column: 8, scope: !7199)
!7201 = !DILocation(line: 1608, column: 16, scope: !7199)
!7202 = !DILocation(line: 1608, column: 20, scope: !7199)
!7203 = !DILocalVariable(name: "totdisp", scope: !7199, file: !3, line: 1609, type: !196)
!7204 = !DILocation(line: 1609, column: 8, scope: !7199)
!7205 = !DILocation(line: 1609, column: 18, scope: !7199)
!7206 = !DILocation(line: 1609, column: 25, scope: !7199)
!7207 = !DILocation(line: 1609, column: 28, scope: !7199)
!7208 = !DILocation(line: 1609, column: 38, scope: !7199)
!7209 = !DILocation(line: 1609, column: 36, scope: !7199)
!7210 = !DILocation(line: 1611, column: 11, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 1611, column: 4)
!7212 = !DILocation(line: 1611, column: 9, scope: !7211)
!7213 = !DILocation(line: 1611, column: 16, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1611, column: 4)
!7215 = !DILocation(line: 1611, column: 20, scope: !7214)
!7216 = !DILocation(line: 1611, column: 24, scope: !7214)
!7217 = !DILocation(line: 1611, column: 18, scope: !7214)
!7218 = !DILocation(line: 1611, column: 4, scope: !7211)
!7219 = !DILocation(line: 1612, column: 24, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 1611, column: 46)
!7221 = !DILocation(line: 1612, column: 56, scope: !7220)
!7222 = !DILocation(line: 1612, column: 54, scope: !7220)
!7223 = !DILocation(line: 1612, column: 5, scope: !7220)
!7224 = !DILocation(line: 1612, column: 13, scope: !7220)
!7225 = !DILocation(line: 1612, column: 16, scope: !7220)
!7226 = !DILocation(line: 1612, column: 22, scope: !7220)
!7227 = !DILocation(line: 1613, column: 26, scope: !7220)
!7228 = !DILocation(line: 1613, column: 5, scope: !7220)
!7229 = !DILocation(line: 1613, column: 13, scope: !7220)
!7230 = !DILocation(line: 1613, column: 16, scope: !7220)
!7231 = !DILocation(line: 1613, column: 24, scope: !7220)
!7232 = !DILocation(line: 1614, column: 24, scope: !7220)
!7233 = !DILocation(line: 1614, column: 31, scope: !7220)
!7234 = !DILocation(line: 1614, column: 34, scope: !7220)
!7235 = !DILocation(line: 1614, column: 5, scope: !7220)
!7236 = !DILocation(line: 1614, column: 13, scope: !7220)
!7237 = !DILocation(line: 1614, column: 16, scope: !7220)
!7238 = !DILocation(line: 1614, column: 22, scope: !7220)
!7239 = !DILocation(line: 1615, column: 12, scope: !7220)
!7240 = !DILocation(line: 1615, column: 20, scope: !7220)
!7241 = !DILocation(line: 1615, column: 23, scope: !7220)
!7242 = !DILocation(line: 1615, column: 5, scope: !7220)
!7243 = !DILocation(line: 1615, column: 30, scope: !7220)
!7244 = !DILocation(line: 1615, column: 37, scope: !7220)
!7245 = !DILocation(line: 1615, column: 40, scope: !7220)
!7246 = !DILocation(line: 1615, column: 48, scope: !7220)
!7247 = !DILocation(line: 1615, column: 58, scope: !7220)
!7248 = !DILocation(line: 1615, column: 56, scope: !7220)
!7249 = !DILocation(line: 1615, column: 46, scope: !7220)
!7250 = !DILocation(line: 1615, column: 61, scope: !7220)
!7251 = !DILocation(line: 1616, column: 4, scope: !7220)
!7252 = !DILocation(line: 1611, column: 37, scope: !7214)
!7253 = !DILocation(line: 1611, column: 42, scope: !7214)
!7254 = !DILocation(line: 1611, column: 4, scope: !7214)
!7255 = distinct !{!7255, !7218, !7256}
!7256 = !DILocation(line: 1616, column: 4, scope: !7211)
!7257 = !DILocation(line: 1618, column: 3, scope: !7199)
!7258 = !DILocation(line: 1607, column: 33, scope: !7193)
!7259 = !DILocation(line: 1607, column: 39, scope: !7193)
!7260 = !DILocation(line: 1607, column: 3, scope: !7193)
!7261 = distinct !{!7261, !7197, !7262}
!7262 = !DILocation(line: 1618, column: 3, scope: !7190)
!7263 = !DILocation(line: 1619, column: 2, scope: !7153)
!7264 = !DILocation(line: 1620, column: 1, scope: !7127)
!7265 = distinct !DISubprogram(name: "old_mdisps_convert", scope: !3, file: !3, line: 1554, type: !7266, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!7266 = !DISubroutineType(types: !7267)
!7267 = !{null, !7135, !3566}
!7268 = !DILocalVariable(name: "mface", arg: 1, scope: !7265, file: !3, line: 1554, type: !7135)
!7269 = !DILocation(line: 1554, column: 39, scope: !7265)
!7270 = !DILocalVariable(name: "mdisp", arg: 2, scope: !7265, file: !3, line: 1554, type: !3566)
!7271 = !DILocation(line: 1554, column: 54, scope: !7265)
!7272 = !DILocalVariable(name: "newlvl", scope: !7265, file: !3, line: 1556, type: !196)
!7273 = !DILocation(line: 1556, column: 6, scope: !7265)
!7274 = !DILocation(line: 1556, column: 24, scope: !7265)
!7275 = !DILocation(line: 1556, column: 31, scope: !7265)
!7276 = !DILocation(line: 1556, column: 19, scope: !7265)
!7277 = !DILocation(line: 1556, column: 40, scope: !7265)
!7278 = !DILocation(line: 1556, column: 15, scope: !7265)
!7279 = !DILocation(line: 1556, column: 45, scope: !7265)
!7280 = !DILocalVariable(name: "oldlvl", scope: !7265, file: !3, line: 1557, type: !196)
!7281 = !DILocation(line: 1557, column: 6, scope: !7265)
!7282 = !DILocation(line: 1557, column: 15, scope: !7265)
!7283 = !DILocation(line: 1557, column: 22, scope: !7265)
!7284 = !DILocalVariable(name: "oldside", scope: !7265, file: !3, line: 1558, type: !196)
!7285 = !DILocation(line: 1558, column: 6, scope: !7265)
!7286 = !DILocation(line: 1558, column: 34, scope: !7265)
!7287 = !DILocation(line: 1558, column: 16, scope: !7265)
!7288 = !DILocalVariable(name: "newside", scope: !7265, file: !3, line: 1559, type: !196)
!7289 = !DILocation(line: 1559, column: 6, scope: !7265)
!7290 = !DILocation(line: 1559, column: 34, scope: !7265)
!7291 = !DILocation(line: 1559, column: 16, scope: !7265)
!7292 = !DILocalVariable(name: "nvert", scope: !7265, file: !3, line: 1560, type: !196)
!7293 = !DILocation(line: 1560, column: 6, scope: !7265)
!7294 = !DILocation(line: 1560, column: 15, scope: !7265)
!7295 = !DILocation(line: 1560, column: 22, scope: !7265)
!7296 = !DILocation(line: 1560, column: 14, scope: !7265)
!7297 = !DILocalVariable(name: "newtotdisp", scope: !7265, file: !3, line: 1561, type: !196)
!7298 = !DILocation(line: 1561, column: 6, scope: !7265)
!7299 = !DILocation(line: 1561, column: 37, scope: !7265)
!7300 = !DILocation(line: 1561, column: 19, scope: !7265)
!7301 = !DILocation(line: 1561, column: 47, scope: !7265)
!7302 = !DILocation(line: 1561, column: 45, scope: !7265)
!7303 = !DILocalVariable(name: "x", scope: !7265, file: !3, line: 1562, type: !196)
!7304 = !DILocation(line: 1562, column: 6, scope: !7265)
!7305 = !DILocalVariable(name: "y", scope: !7265, file: !3, line: 1562, type: !196)
!7306 = !DILocation(line: 1562, column: 9, scope: !7265)
!7307 = !DILocalVariable(name: "S", scope: !7265, file: !3, line: 1562, type: !196)
!7308 = !DILocation(line: 1562, column: 12, scope: !7265)
!7309 = !DILocalVariable(name: "disps", scope: !7265, file: !3, line: 1563, type: !413)
!7310 = !DILocation(line: 1563, column: 10, scope: !7265)
!7311 = !DILocalVariable(name: "out", scope: !7265, file: !3, line: 1563, type: !413)
!7312 = !DILocation(line: 1563, column: 23, scope: !7265)
!7313 = !DILocalVariable(name: "u", scope: !7265, file: !3, line: 1563, type: !388)
!7314 = !DILocation(line: 1563, column: 32, scope: !7265)
!7315 = !DILocalVariable(name: "v", scope: !7265, file: !3, line: 1563, type: !388)
!7316 = !DILocation(line: 1563, column: 42, scope: !7265)
!7317 = !DILocation(line: 1565, column: 10, scope: !7265)
!7318 = !DILocation(line: 1565, column: 42, scope: !7265)
!7319 = !DILocation(line: 1565, column: 40, scope: !7265)
!7320 = !DILocation(line: 1565, column: 8, scope: !7265)
!7321 = !DILocation(line: 1567, column: 8, scope: !7265)
!7322 = !DILocation(line: 1567, column: 6, scope: !7265)
!7323 = !DILocation(line: 1568, column: 9, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 1568, column: 2)
!7325 = !DILocation(line: 1568, column: 7, scope: !7324)
!7326 = !DILocation(line: 1568, column: 14, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1568, column: 2)
!7328 = !DILocation(line: 1568, column: 18, scope: !7327)
!7329 = !DILocation(line: 1568, column: 16, scope: !7327)
!7330 = !DILocation(line: 1568, column: 2, scope: !7324)
!7331 = !DILocation(line: 1569, column: 10, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 1569, column: 3)
!7333 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1568, column: 30)
!7334 = !DILocation(line: 1569, column: 8, scope: !7332)
!7335 = !DILocation(line: 1569, column: 15, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1569, column: 3)
!7337 = !DILocation(line: 1569, column: 19, scope: !7336)
!7338 = !DILocation(line: 1569, column: 17, scope: !7336)
!7339 = !DILocation(line: 1569, column: 3, scope: !7332)
!7340 = !DILocation(line: 1570, column: 11, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 1570, column: 4)
!7342 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 1569, column: 33)
!7343 = !DILocation(line: 1570, column: 9, scope: !7341)
!7344 = !DILocation(line: 1570, column: 16, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 1570, column: 4)
!7346 = !DILocation(line: 1570, column: 20, scope: !7345)
!7347 = !DILocation(line: 1570, column: 18, scope: !7345)
!7348 = !DILocation(line: 1570, column: 4, scope: !7341)
!7349 = !DILocation(line: 1571, column: 23, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 1570, column: 41)
!7351 = !DILocation(line: 1571, column: 26, scope: !7350)
!7352 = !DILocation(line: 1571, column: 35, scope: !7350)
!7353 = !DILocation(line: 1571, column: 44, scope: !7350)
!7354 = !DILocation(line: 1571, column: 47, scope: !7350)
!7355 = !DILocation(line: 1571, column: 5, scope: !7350)
!7356 = !DILocation(line: 1572, column: 26, scope: !7350)
!7357 = !DILocation(line: 1572, column: 25, scope: !7350)
!7358 = !DILocation(line: 1572, column: 31, scope: !7350)
!7359 = !DILocation(line: 1572, column: 38, scope: !7350)
!7360 = !DILocation(line: 1572, column: 45, scope: !7350)
!7361 = !DILocation(line: 1572, column: 54, scope: !7350)
!7362 = !DILocation(line: 1572, column: 57, scope: !7350)
!7363 = !DILocation(line: 1572, column: 5, scope: !7350)
!7364 = !DILocation(line: 1574, column: 9, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 1574, column: 9)
!7366 = !DILocation(line: 1574, column: 11, scope: !7365)
!7367 = !DILocation(line: 1574, column: 9, scope: !7350)
!7368 = !DILocation(line: 1574, column: 34, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 1574, column: 17)
!7370 = !DILocation(line: 1574, column: 32, scope: !7369)
!7371 = !DILocation(line: 1574, column: 31, scope: !7369)
!7372 = !DILocation(line: 1574, column: 21, scope: !7369)
!7373 = !DILocation(line: 1574, column: 19, scope: !7369)
!7374 = !DILocation(line: 1574, column: 29, scope: !7369)
!7375 = !DILocation(line: 1574, column: 43, scope: !7369)
!7376 = !DILocation(line: 1575, column: 14, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 1575, column: 14)
!7378 = !DILocation(line: 1575, column: 16, scope: !7377)
!7379 = !DILocation(line: 1575, column: 14, scope: !7365)
!7380 = !DILocalVariable(name: "sw_ap", scope: !7381, file: !3, line: 1575, type: !388)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 1575, column: 24)
!7382 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 1575, column: 22)
!7383 = !DILocation(line: 1575, column: 24, scope: !7381)
!7384 = !DILocation(line: 1575, column: 59, scope: !7382)
!7385 = !DILocation(line: 1576, column: 14, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 1576, column: 14)
!7387 = !DILocation(line: 1576, column: 16, scope: !7386)
!7388 = !DILocation(line: 1576, column: 14, scope: !7377)
!7389 = !DILocation(line: 1576, column: 39, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1576, column: 22)
!7391 = !DILocation(line: 1576, column: 37, scope: !7390)
!7392 = !DILocation(line: 1576, column: 36, scope: !7390)
!7393 = !DILocation(line: 1576, column: 26, scope: !7390)
!7394 = !DILocation(line: 1576, column: 24, scope: !7390)
!7395 = !DILocation(line: 1576, column: 34, scope: !7390)
!7396 = !DILocation(line: 1576, column: 48, scope: !7390)
!7397 = !DILocation(line: 1577, column: 14, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1577, column: 14)
!7399 = !DILocation(line: 1577, column: 16, scope: !7398)
!7400 = !DILocation(line: 1577, column: 14, scope: !7386)
!7401 = !DILocalVariable(name: "sw_ap", scope: !7402, file: !3, line: 1577, type: !388)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 1577, column: 24)
!7403 = distinct !DILexicalBlock(scope: !7398, file: !3, line: 1577, column: 22)
!7404 = !DILocation(line: 1577, column: 24, scope: !7402)
!7405 = !DILocation(line: 1577, column: 74, scope: !7403)
!7406 = !DILocation(line: 1577, column: 72, scope: !7403)
!7407 = !DILocation(line: 1577, column: 71, scope: !7403)
!7408 = !DILocation(line: 1577, column: 61, scope: !7403)
!7409 = !DILocation(line: 1577, column: 59, scope: !7403)
!7410 = !DILocation(line: 1577, column: 69, scope: !7403)
!7411 = !DILocation(line: 1577, column: 98, scope: !7403)
!7412 = !DILocation(line: 1577, column: 96, scope: !7403)
!7413 = !DILocation(line: 1577, column: 95, scope: !7403)
!7414 = !DILocation(line: 1577, column: 85, scope: !7403)
!7415 = !DILocation(line: 1577, column: 83, scope: !7403)
!7416 = !DILocation(line: 1577, column: 93, scope: !7403)
!7417 = !DILocation(line: 1577, column: 107, scope: !7403)
!7418 = !DILocation(line: 1578, column: 4, scope: !7350)
!7419 = !DILocation(line: 1570, column: 29, scope: !7345)
!7420 = !DILocation(line: 1570, column: 34, scope: !7345)
!7421 = !DILocation(line: 1570, column: 4, scope: !7345)
!7422 = distinct !{!7422, !7348, !7423}
!7423 = !DILocation(line: 1578, column: 4, scope: !7341)
!7424 = !DILocation(line: 1579, column: 3, scope: !7342)
!7425 = !DILocation(line: 1569, column: 28, scope: !7336)
!7426 = !DILocation(line: 1569, column: 3, scope: !7336)
!7427 = distinct !{!7427, !7339, !7428}
!7428 = !DILocation(line: 1579, column: 3, scope: !7332)
!7429 = !DILocation(line: 1580, column: 2, scope: !7333)
!7430 = !DILocation(line: 1568, column: 26, scope: !7327)
!7431 = !DILocation(line: 1568, column: 2, scope: !7327)
!7432 = distinct !{!7432, !7330, !7433}
!7433 = !DILocation(line: 1580, column: 2, scope: !7324)
!7434 = !DILocation(line: 1582, column: 2, scope: !7265)
!7435 = !DILocation(line: 1582, column: 12, scope: !7265)
!7436 = !DILocation(line: 1582, column: 19, scope: !7265)
!7437 = !DILocation(line: 1584, column: 19, scope: !7265)
!7438 = !DILocation(line: 1584, column: 2, scope: !7265)
!7439 = !DILocation(line: 1584, column: 9, scope: !7265)
!7440 = !DILocation(line: 1584, column: 17, scope: !7265)
!7441 = !DILocation(line: 1585, column: 17, scope: !7265)
!7442 = !DILocation(line: 1585, column: 2, scope: !7265)
!7443 = !DILocation(line: 1585, column: 9, scope: !7265)
!7444 = !DILocation(line: 1585, column: 15, scope: !7265)
!7445 = !DILocation(line: 1586, column: 17, scope: !7265)
!7446 = !DILocation(line: 1586, column: 2, scope: !7265)
!7447 = !DILocation(line: 1586, column: 9, scope: !7265)
!7448 = !DILocation(line: 1586, column: 15, scope: !7265)
!7449 = !DILocation(line: 1587, column: 1, scope: !7265)
!7450 = distinct !DISubprogram(name: "multires_free", scope: !3, file: !3, line: 1632, type: !7451, scopeLine: 1633, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!7451 = !DISubroutineType(types: !7452)
!7452 = !{null, !7453}
!7453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7454, size: 64)
!7454 = !DIDerivedType(tag: DW_TAG_typedef, name: "Multires", file: !257, line: 245, baseType: !2593)
!7455 = !DILocalVariable(name: "mr", arg: 1, scope: !7450, file: !3, line: 1632, type: !7453)
!7456 = !DILocation(line: 1632, column: 30, scope: !7450)
!7457 = !DILocation(line: 1634, column: 6, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 1634, column: 6)
!7459 = !DILocation(line: 1634, column: 6, scope: !7450)
!7460 = !DILocalVariable(name: "lvl", scope: !7461, file: !3, line: 1635, type: !7462)
!7461 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1634, column: 10)
!7462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7463, size: 64)
!7463 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresLevel", file: !257, line: 231, baseType: !7464)
!7464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresLevel", file: !257, line: 220, size: 512, elements: !7465)
!7465 = !{!7466, !7468, !7469, !7479, !7493, !7500, !7501, !7502, !7503, !7504}
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7464, file: !257, line: 221, baseType: !7467, size: 64)
!7467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7464, size: 64)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7464, file: !257, line: 221, baseType: !7467, size: 64, offset: 64)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !7464, file: !257, line: 223, baseType: !7470, size: 64, offset: 128)
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7471, size: 64)
!7471 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresFace", file: !257, line: 212, baseType: !7472)
!7472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresFace", file: !257, line: 208, size: 192, elements: !7473)
!7473 = !{!7474, !7475, !7476, !7477, !7478}
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !7472, file: !257, line: 209, baseType: !2519, size: 128)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !7472, file: !257, line: 210, baseType: !7, size: 32, offset: 128)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7472, file: !257, line: 211, baseType: !277, size: 8, offset: 160)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !7472, file: !257, line: 211, baseType: !277, size: 8, offset: 168)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7472, file: !257, line: 211, baseType: !379, size: 16, offset: 176)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "colfaces", scope: !7464, file: !257, line: 224, baseType: !7480, size: 64, offset: 192)
!7480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7481, size: 64)
!7481 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresColFace", file: !257, line: 206, baseType: !7482)
!7482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresColFace", file: !257, line: 203, size: 512, elements: !7483)
!7483 = !{!7484}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !7482, file: !257, line: 205, baseType: !7485, size: 512)
!7485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7486, size: 512, elements: !784)
!7486 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresCol", file: !257, line: 201, baseType: !7487)
!7487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresCol", file: !257, line: 199, size: 128, elements: !7488)
!7488 = !{!7489, !7490, !7491, !7492}
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7487, file: !257, line: 200, baseType: !388, size: 32)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !7487, file: !257, line: 200, baseType: !388, size: 32, offset: 32)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !7487, file: !257, line: 200, baseType: !388, size: 32, offset: 64)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !7487, file: !257, line: 200, baseType: !388, size: 32, offset: 96)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !7464, file: !257, line: 225, baseType: !7494, size: 64, offset: 256)
!7494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7495, size: 64)
!7495 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresEdge", file: !257, line: 217, baseType: !7496)
!7496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresEdge", file: !257, line: 214, size: 96, elements: !7497)
!7497 = !{!7498, !7499}
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !7496, file: !257, line: 215, baseType: !1218, size: 64)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "mid", scope: !7496, file: !257, line: 216, baseType: !7, size: 32, offset: 64)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !7464, file: !257, line: 227, baseType: !7, size: 32, offset: 320)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !7464, file: !257, line: 227, baseType: !7, size: 32, offset: 352)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !7464, file: !257, line: 227, baseType: !7, size: 32, offset: 384)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7464, file: !257, line: 227, baseType: !7, size: 32, offset: 416)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !7464, file: !257, line: 230, baseType: !2597, size: 64, offset: 448)
!7505 = !DILocation(line: 1635, column: 18, scope: !7461)
!7506 = !DILocation(line: 1635, column: 24, scope: !7461)
!7507 = !DILocation(line: 1635, column: 28, scope: !7461)
!7508 = !DILocation(line: 1635, column: 35, scope: !7461)
!7509 = !DILocation(line: 1638, column: 7, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1638, column: 7)
!7511 = !DILocation(line: 1638, column: 7, scope: !7461)
!7512 = !DILocation(line: 1639, column: 21, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 1638, column: 12)
!7514 = !DILocation(line: 1639, column: 25, scope: !7513)
!7515 = !DILocation(line: 1639, column: 32, scope: !7513)
!7516 = !DILocation(line: 1639, column: 37, scope: !7513)
!7517 = !DILocation(line: 1639, column: 4, scope: !7513)
!7518 = !DILocation(line: 1640, column: 21, scope: !7513)
!7519 = !DILocation(line: 1640, column: 25, scope: !7513)
!7520 = !DILocation(line: 1640, column: 32, scope: !7513)
!7521 = !DILocation(line: 1640, column: 37, scope: !7513)
!7522 = !DILocation(line: 1640, column: 4, scope: !7513)
!7523 = !DILocation(line: 1641, column: 8, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1641, column: 8)
!7525 = !DILocation(line: 1641, column: 12, scope: !7524)
!7526 = !DILocation(line: 1641, column: 8, scope: !7513)
!7527 = !DILocation(line: 1642, column: 5, scope: !7524)
!7528 = !DILocation(line: 1642, column: 15, scope: !7524)
!7529 = !DILocation(line: 1642, column: 19, scope: !7524)
!7530 = !DILocation(line: 1643, column: 8, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1643, column: 8)
!7532 = !DILocation(line: 1643, column: 12, scope: !7531)
!7533 = !DILocation(line: 1643, column: 8, scope: !7513)
!7534 = !DILocation(line: 1644, column: 5, scope: !7531)
!7535 = !DILocation(line: 1644, column: 15, scope: !7531)
!7536 = !DILocation(line: 1644, column: 19, scope: !7531)
!7537 = !DILocation(line: 1645, column: 3, scope: !7513)
!7538 = !DILocation(line: 1647, column: 3, scope: !7461)
!7539 = !DILocation(line: 1647, column: 10, scope: !7461)
!7540 = !DILocation(line: 1648, column: 24, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1647, column: 15)
!7542 = !DILocation(line: 1648, column: 4, scope: !7541)
!7543 = !DILocation(line: 1649, column: 10, scope: !7541)
!7544 = !DILocation(line: 1649, column: 15, scope: !7541)
!7545 = !DILocation(line: 1649, column: 8, scope: !7541)
!7546 = distinct !{!7546, !7538, !7547}
!7547 = !DILocation(line: 1650, column: 3, scope: !7461)
!7548 = !DILocation(line: 1652, column: 3, scope: !7461)
!7549 = !DILocation(line: 1652, column: 13, scope: !7461)
!7550 = !DILocation(line: 1652, column: 17, scope: !7461)
!7551 = !DILocation(line: 1654, column: 18, scope: !7461)
!7552 = !DILocation(line: 1654, column: 22, scope: !7461)
!7553 = !DILocation(line: 1654, column: 3, scope: !7461)
!7554 = !DILocation(line: 1656, column: 3, scope: !7461)
!7555 = !DILocation(line: 1656, column: 13, scope: !7461)
!7556 = !DILocation(line: 1657, column: 2, scope: !7461)
!7557 = !DILocation(line: 1658, column: 1, scope: !7450)
!7558 = distinct !DISubprogram(name: "multires_free_level", scope: !3, file: !3, line: 1623, type: !7559, scopeLine: 1624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{null, !7462}
!7561 = !DILocalVariable(name: "lvl", arg: 1, scope: !7558, file: !3, line: 1623, type: !7462)
!7562 = !DILocation(line: 1623, column: 48, scope: !7558)
!7563 = !DILocation(line: 1625, column: 6, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 1625, column: 6)
!7565 = !DILocation(line: 1625, column: 6, scope: !7558)
!7566 = !DILocation(line: 1626, column: 7, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 1626, column: 7)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 1625, column: 11)
!7569 = !DILocation(line: 1626, column: 12, scope: !7567)
!7570 = !DILocation(line: 1626, column: 7, scope: !7568)
!7571 = !DILocation(line: 1626, column: 19, scope: !7567)
!7572 = !DILocation(line: 1626, column: 29, scope: !7567)
!7573 = !DILocation(line: 1626, column: 34, scope: !7567)
!7574 = !DILocation(line: 1627, column: 7, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 1627, column: 7)
!7576 = !DILocation(line: 1627, column: 12, scope: !7575)
!7577 = !DILocation(line: 1627, column: 7, scope: !7568)
!7578 = !DILocation(line: 1627, column: 19, scope: !7575)
!7579 = !DILocation(line: 1627, column: 29, scope: !7575)
!7580 = !DILocation(line: 1627, column: 34, scope: !7575)
!7581 = !DILocation(line: 1628, column: 7, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 1628, column: 7)
!7583 = !DILocation(line: 1628, column: 12, scope: !7582)
!7584 = !DILocation(line: 1628, column: 7, scope: !7568)
!7585 = !DILocation(line: 1628, column: 22, scope: !7582)
!7586 = !DILocation(line: 1628, column: 32, scope: !7582)
!7587 = !DILocation(line: 1628, column: 37, scope: !7582)
!7588 = !DILocation(line: 1629, column: 2, scope: !7568)
!7589 = !DILocation(line: 1630, column: 1, scope: !7558)
!7590 = distinct !DISubprogram(name: "multires_load_old", scope: !3, file: !3, line: 2069, type: !7591, scopeLine: 2070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!7591 = !DISubroutineType(types: !7592)
!7592 = !{null, !2689, !2466}
!7593 = !DILocalVariable(name: "ob", arg: 1, scope: !7590, file: !3, line: 2069, type: !2689)
!7594 = !DILocation(line: 2069, column: 32, scope: !7590)
!7595 = !DILocalVariable(name: "me", arg: 2, scope: !7590, file: !3, line: 2069, type: !2466)
!7596 = !DILocation(line: 2069, column: 42, scope: !7590)
!7597 = !DILocalVariable(name: "lvl", scope: !7590, file: !3, line: 2071, type: !7462)
!7598 = !DILocation(line: 2071, column: 17, scope: !7590)
!7599 = !DILocalVariable(name: "md", scope: !7590, file: !3, line: 2072, type: !264)
!7600 = !DILocation(line: 2072, column: 16, scope: !7590)
!7601 = !DILocalVariable(name: "mmd", scope: !7590, file: !3, line: 2073, type: !2391)
!7602 = !DILocation(line: 2073, column: 24, scope: !7590)
!7603 = !DILocalVariable(name: "dm", scope: !7590, file: !3, line: 2074, type: !915)
!7604 = !DILocation(line: 2074, column: 15, scope: !7590)
!7605 = !DILocalVariable(name: "orig", scope: !7590, file: !3, line: 2074, type: !915)
!7606 = !DILocation(line: 2074, column: 20, scope: !7590)
!7607 = !DILocalVariable(name: "l", scope: !7590, file: !3, line: 2075, type: !584)
!7608 = !DILocation(line: 2075, column: 19, scope: !7590)
!7609 = !DILocalVariable(name: "i", scope: !7590, file: !3, line: 2076, type: !196)
!7610 = !DILocation(line: 2076, column: 6, scope: !7590)
!7611 = !DILocation(line: 2079, column: 8, scope: !7590)
!7612 = !DILocation(line: 2079, column: 12, scope: !7590)
!7613 = !DILocation(line: 2079, column: 16, scope: !7590)
!7614 = !DILocation(line: 2079, column: 23, scope: !7590)
!7615 = !DILocation(line: 2079, column: 6, scope: !7590)
!7616 = !DILocation(line: 2080, column: 26, scope: !7590)
!7617 = !DILocation(line: 2080, column: 30, scope: !7590)
!7618 = !DILocation(line: 2080, column: 47, scope: !7590)
!7619 = !DILocation(line: 2080, column: 52, scope: !7590)
!7620 = !DILocation(line: 2080, column: 2, scope: !7590)
!7621 = !DILocation(line: 2081, column: 26, scope: !7590)
!7622 = !DILocation(line: 2081, column: 30, scope: !7590)
!7623 = !DILocation(line: 2081, column: 47, scope: !7590)
!7624 = !DILocation(line: 2081, column: 52, scope: !7590)
!7625 = !DILocation(line: 2081, column: 2, scope: !7590)
!7626 = !DILocation(line: 2082, column: 26, scope: !7590)
!7627 = !DILocation(line: 2082, column: 30, scope: !7590)
!7628 = !DILocation(line: 2082, column: 47, scope: !7590)
!7629 = !DILocation(line: 2082, column: 52, scope: !7590)
!7630 = !DILocation(line: 2082, column: 2, scope: !7590)
!7631 = !DILocation(line: 2083, column: 16, scope: !7590)
!7632 = !DILocation(line: 2083, column: 21, scope: !7590)
!7633 = !DILocation(line: 2083, column: 2, scope: !7590)
!7634 = !DILocation(line: 2083, column: 6, scope: !7590)
!7635 = !DILocation(line: 2083, column: 14, scope: !7590)
!7636 = !DILocation(line: 2084, column: 16, scope: !7590)
!7637 = !DILocation(line: 2084, column: 21, scope: !7590)
!7638 = !DILocation(line: 2084, column: 2, scope: !7590)
!7639 = !DILocation(line: 2084, column: 6, scope: !7590)
!7640 = !DILocation(line: 2084, column: 14, scope: !7590)
!7641 = !DILocation(line: 2085, column: 16, scope: !7590)
!7642 = !DILocation(line: 2085, column: 21, scope: !7590)
!7643 = !DILocation(line: 2085, column: 2, scope: !7590)
!7644 = !DILocation(line: 2085, column: 6, scope: !7590)
!7645 = !DILocation(line: 2085, column: 14, scope: !7590)
!7646 = !DILocation(line: 2086, column: 36, scope: !7590)
!7647 = !DILocation(line: 2086, column: 40, scope: !7590)
!7648 = !DILocation(line: 2086, column: 74, scope: !7590)
!7649 = !DILocation(line: 2086, column: 78, scope: !7590)
!7650 = !DILocation(line: 2086, column: 14, scope: !7590)
!7651 = !DILocation(line: 2086, column: 2, scope: !7590)
!7652 = !DILocation(line: 2086, column: 6, scope: !7590)
!7653 = !DILocation(line: 2086, column: 12, scope: !7590)
!7654 = !DILocation(line: 2087, column: 36, scope: !7590)
!7655 = !DILocation(line: 2087, column: 40, scope: !7590)
!7656 = !DILocation(line: 2087, column: 74, scope: !7590)
!7657 = !DILocation(line: 2087, column: 78, scope: !7590)
!7658 = !DILocation(line: 2087, column: 14, scope: !7590)
!7659 = !DILocation(line: 2087, column: 2, scope: !7590)
!7660 = !DILocation(line: 2087, column: 6, scope: !7590)
!7661 = !DILocation(line: 2087, column: 12, scope: !7590)
!7662 = !DILocation(line: 2088, column: 36, scope: !7590)
!7663 = !DILocation(line: 2088, column: 40, scope: !7590)
!7664 = !DILocation(line: 2088, column: 74, scope: !7590)
!7665 = !DILocation(line: 2088, column: 78, scope: !7590)
!7666 = !DILocation(line: 2088, column: 14, scope: !7590)
!7667 = !DILocation(line: 2088, column: 2, scope: !7590)
!7668 = !DILocation(line: 2088, column: 6, scope: !7590)
!7669 = !DILocation(line: 2088, column: 12, scope: !7590)
!7670 = !DILocation(line: 2089, column: 9, scope: !7590)
!7671 = !DILocation(line: 2089, column: 13, scope: !7590)
!7672 = !DILocation(line: 2089, column: 2, scope: !7590)
!7673 = !DILocation(line: 2089, column: 20, scope: !7590)
!7674 = !DILocation(line: 2089, column: 24, scope: !7590)
!7675 = !DILocation(line: 2089, column: 28, scope: !7590)
!7676 = !DILocation(line: 2089, column: 51, scope: !7590)
!7677 = !DILocation(line: 2089, column: 55, scope: !7590)
!7678 = !DILocation(line: 2089, column: 49, scope: !7590)
!7679 = !DILocation(line: 2090, column: 9, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2090, column: 2)
!7681 = !DILocation(line: 2090, column: 7, scope: !7680)
!7682 = !DILocation(line: 2090, column: 14, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 2090, column: 2)
!7684 = !DILocation(line: 2090, column: 18, scope: !7683)
!7685 = !DILocation(line: 2090, column: 22, scope: !7683)
!7686 = !DILocation(line: 2090, column: 16, scope: !7683)
!7687 = !DILocation(line: 2090, column: 2, scope: !7680)
!7688 = !DILocation(line: 2091, column: 21, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 2090, column: 36)
!7690 = !DILocation(line: 2091, column: 26, scope: !7689)
!7691 = !DILocation(line: 2091, column: 32, scope: !7689)
!7692 = !DILocation(line: 2091, column: 35, scope: !7689)
!7693 = !DILocation(line: 2091, column: 3, scope: !7689)
!7694 = !DILocation(line: 2091, column: 7, scope: !7689)
!7695 = !DILocation(line: 2091, column: 13, scope: !7689)
!7696 = !DILocation(line: 2091, column: 16, scope: !7689)
!7697 = !DILocation(line: 2091, column: 19, scope: !7689)
!7698 = !DILocation(line: 2092, column: 21, scope: !7689)
!7699 = !DILocation(line: 2092, column: 26, scope: !7689)
!7700 = !DILocation(line: 2092, column: 32, scope: !7689)
!7701 = !DILocation(line: 2092, column: 35, scope: !7689)
!7702 = !DILocation(line: 2092, column: 3, scope: !7689)
!7703 = !DILocation(line: 2092, column: 7, scope: !7689)
!7704 = !DILocation(line: 2092, column: 13, scope: !7689)
!7705 = !DILocation(line: 2092, column: 16, scope: !7689)
!7706 = !DILocation(line: 2092, column: 19, scope: !7689)
!7707 = !DILocation(line: 2093, column: 2, scope: !7689)
!7708 = !DILocation(line: 2090, column: 31, scope: !7683)
!7709 = !DILocation(line: 2090, column: 2, scope: !7683)
!7710 = distinct !{!7710, !7687, !7711}
!7711 = !DILocation(line: 2093, column: 2, scope: !7680)
!7712 = !DILocation(line: 2094, column: 9, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2094, column: 2)
!7714 = !DILocation(line: 2094, column: 7, scope: !7713)
!7715 = !DILocation(line: 2094, column: 14, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 2094, column: 2)
!7717 = !DILocation(line: 2094, column: 18, scope: !7716)
!7718 = !DILocation(line: 2094, column: 22, scope: !7716)
!7719 = !DILocation(line: 2094, column: 16, scope: !7716)
!7720 = !DILocation(line: 2094, column: 2, scope: !7713)
!7721 = !DILocation(line: 2095, column: 21, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 2094, column: 36)
!7723 = !DILocation(line: 2095, column: 26, scope: !7722)
!7724 = !DILocation(line: 2095, column: 32, scope: !7722)
!7725 = !DILocation(line: 2095, column: 35, scope: !7722)
!7726 = !DILocation(line: 2095, column: 3, scope: !7722)
!7727 = !DILocation(line: 2095, column: 7, scope: !7722)
!7728 = !DILocation(line: 2095, column: 13, scope: !7722)
!7729 = !DILocation(line: 2095, column: 16, scope: !7722)
!7730 = !DILocation(line: 2095, column: 19, scope: !7722)
!7731 = !DILocation(line: 2096, column: 21, scope: !7722)
!7732 = !DILocation(line: 2096, column: 26, scope: !7722)
!7733 = !DILocation(line: 2096, column: 32, scope: !7722)
!7734 = !DILocation(line: 2096, column: 35, scope: !7722)
!7735 = !DILocation(line: 2096, column: 3, scope: !7722)
!7736 = !DILocation(line: 2096, column: 7, scope: !7722)
!7737 = !DILocation(line: 2096, column: 13, scope: !7722)
!7738 = !DILocation(line: 2096, column: 16, scope: !7722)
!7739 = !DILocation(line: 2096, column: 19, scope: !7722)
!7740 = !DILocation(line: 2097, column: 21, scope: !7722)
!7741 = !DILocation(line: 2097, column: 26, scope: !7722)
!7742 = !DILocation(line: 2097, column: 32, scope: !7722)
!7743 = !DILocation(line: 2097, column: 35, scope: !7722)
!7744 = !DILocation(line: 2097, column: 3, scope: !7722)
!7745 = !DILocation(line: 2097, column: 7, scope: !7722)
!7746 = !DILocation(line: 2097, column: 13, scope: !7722)
!7747 = !DILocation(line: 2097, column: 16, scope: !7722)
!7748 = !DILocation(line: 2097, column: 19, scope: !7722)
!7749 = !DILocation(line: 2098, column: 21, scope: !7722)
!7750 = !DILocation(line: 2098, column: 26, scope: !7722)
!7751 = !DILocation(line: 2098, column: 32, scope: !7722)
!7752 = !DILocation(line: 2098, column: 35, scope: !7722)
!7753 = !DILocation(line: 2098, column: 3, scope: !7722)
!7754 = !DILocation(line: 2098, column: 7, scope: !7722)
!7755 = !DILocation(line: 2098, column: 13, scope: !7722)
!7756 = !DILocation(line: 2098, column: 16, scope: !7722)
!7757 = !DILocation(line: 2098, column: 19, scope: !7722)
!7758 = !DILocation(line: 2099, column: 25, scope: !7722)
!7759 = !DILocation(line: 2099, column: 30, scope: !7722)
!7760 = !DILocation(line: 2099, column: 36, scope: !7722)
!7761 = !DILocation(line: 2099, column: 39, scope: !7722)
!7762 = !DILocation(line: 2099, column: 3, scope: !7722)
!7763 = !DILocation(line: 2099, column: 7, scope: !7722)
!7764 = !DILocation(line: 2099, column: 13, scope: !7722)
!7765 = !DILocation(line: 2099, column: 16, scope: !7722)
!7766 = !DILocation(line: 2099, column: 23, scope: !7722)
!7767 = !DILocation(line: 2100, column: 2, scope: !7722)
!7768 = !DILocation(line: 2094, column: 31, scope: !7716)
!7769 = !DILocation(line: 2094, column: 2, scope: !7716)
!7770 = distinct !{!7770, !7720, !7771}
!7771 = !DILocation(line: 2100, column: 2, scope: !7713)
!7772 = !DILocation(line: 2104, column: 9, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2104, column: 2)
!7774 = !DILocation(line: 2104, column: 18, scope: !7773)
!7775 = !DILocation(line: 2104, column: 22, scope: !7773)
!7776 = !DILocation(line: 2104, column: 26, scope: !7773)
!7777 = !DILocation(line: 2104, column: 32, scope: !7773)
!7778 = !DILocation(line: 2104, column: 16, scope: !7773)
!7779 = !DILocation(line: 2104, column: 7, scope: !7773)
!7780 = !DILocation(line: 2104, column: 40, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 2104, column: 2)
!7782 = !DILocation(line: 2104, column: 44, scope: !7781)
!7783 = !DILocation(line: 2104, column: 48, scope: !7781)
!7784 = !DILocation(line: 2104, column: 52, scope: !7781)
!7785 = !DILocation(line: 2104, column: 58, scope: !7781)
!7786 = !DILocation(line: 2104, column: 42, scope: !7781)
!7787 = !DILocation(line: 2104, column: 2, scope: !7773)
!7788 = !DILocation(line: 2105, column: 25, scope: !7781)
!7789 = !DILocation(line: 2105, column: 29, scope: !7781)
!7790 = !DILocation(line: 2105, column: 36, scope: !7781)
!7791 = !DILocation(line: 2105, column: 39, scope: !7781)
!7792 = !DILocation(line: 2105, column: 59, scope: !7781)
!7793 = !DILocation(line: 2105, column: 62, scope: !7781)
!7794 = !DILocation(line: 2105, column: 68, scope: !7781)
!7795 = !DILocation(line: 2105, column: 72, scope: !7781)
!7796 = !DILocation(line: 2105, column: 3, scope: !7781)
!7797 = !DILocation(line: 2104, column: 68, scope: !7781)
!7798 = !DILocation(line: 2104, column: 73, scope: !7781)
!7799 = !DILocation(line: 2104, column: 2, scope: !7781)
!7800 = distinct !{!7800, !7787, !7801}
!7801 = !DILocation(line: 2105, column: 79, scope: !7773)
!7802 = !DILocation(line: 2106, column: 9, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2106, column: 2)
!7804 = !DILocation(line: 2106, column: 18, scope: !7803)
!7805 = !DILocation(line: 2106, column: 22, scope: !7803)
!7806 = !DILocation(line: 2106, column: 26, scope: !7803)
!7807 = !DILocation(line: 2106, column: 32, scope: !7803)
!7808 = !DILocation(line: 2106, column: 16, scope: !7803)
!7809 = !DILocation(line: 2106, column: 7, scope: !7803)
!7810 = !DILocation(line: 2106, column: 40, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2106, column: 2)
!7812 = !DILocation(line: 2106, column: 44, scope: !7811)
!7813 = !DILocation(line: 2106, column: 48, scope: !7811)
!7814 = !DILocation(line: 2106, column: 52, scope: !7811)
!7815 = !DILocation(line: 2106, column: 58, scope: !7811)
!7816 = !DILocation(line: 2106, column: 42, scope: !7811)
!7817 = !DILocation(line: 2106, column: 2, scope: !7803)
!7818 = !DILocation(line: 2107, column: 25, scope: !7811)
!7819 = !DILocation(line: 2107, column: 29, scope: !7811)
!7820 = !DILocation(line: 2107, column: 36, scope: !7811)
!7821 = !DILocation(line: 2107, column: 39, scope: !7811)
!7822 = !DILocation(line: 2107, column: 59, scope: !7811)
!7823 = !DILocation(line: 2107, column: 62, scope: !7811)
!7824 = !DILocation(line: 2107, column: 68, scope: !7811)
!7825 = !DILocation(line: 2107, column: 72, scope: !7811)
!7826 = !DILocation(line: 2107, column: 3, scope: !7811)
!7827 = !DILocation(line: 2106, column: 68, scope: !7811)
!7828 = !DILocation(line: 2106, column: 73, scope: !7811)
!7829 = !DILocation(line: 2106, column: 2, scope: !7811)
!7830 = distinct !{!7830, !7817, !7831}
!7831 = !DILocation(line: 2107, column: 79, scope: !7803)
!7832 = !DILocation(line: 2108, column: 20, scope: !7590)
!7833 = !DILocation(line: 2108, column: 24, scope: !7590)
!7834 = !DILocation(line: 2108, column: 28, scope: !7590)
!7835 = !DILocation(line: 2108, column: 2, scope: !7590)
!7836 = !DILocation(line: 2109, column: 20, scope: !7590)
!7837 = !DILocation(line: 2109, column: 24, scope: !7590)
!7838 = !DILocation(line: 2109, column: 28, scope: !7590)
!7839 = !DILocation(line: 2109, column: 2, scope: !7590)
!7840 = !DILocation(line: 2111, column: 26, scope: !7590)
!7841 = !DILocation(line: 2111, column: 2, scope: !7590)
!7842 = !DILocation(line: 2112, column: 31, scope: !7590)
!7843 = !DILocation(line: 2112, column: 2, scope: !7590)
!7844 = !DILocation(line: 2115, column: 36, scope: !7590)
!7845 = !DILocation(line: 2115, column: 2, scope: !7590)
!7846 = !DILocation(line: 2118, column: 7, scope: !7590)
!7847 = !DILocation(line: 2118, column: 11, scope: !7590)
!7848 = !DILocation(line: 2118, column: 21, scope: !7590)
!7849 = !DILocation(line: 2118, column: 5, scope: !7590)
!7850 = !DILocation(line: 2119, column: 2, scope: !7590)
!7851 = !DILocation(line: 2119, column: 9, scope: !7590)
!7852 = !DILocation(line: 2119, column: 12, scope: !7590)
!7853 = !DILocation(line: 2119, column: 36, scope: !7590)
!7854 = !DILocation(line: 2119, column: 40, scope: !7590)
!7855 = !DILocation(line: 2119, column: 15, scope: !7590)
!7856 = !DILocation(line: 2119, column: 47, scope: !7590)
!7857 = !DILocation(line: 2119, column: 52, scope: !7590)
!7858 = !DILocation(line: 0, scope: !7590)
!7859 = !DILocation(line: 2120, column: 8, scope: !7590)
!7860 = !DILocation(line: 2120, column: 12, scope: !7590)
!7861 = !DILocation(line: 2120, column: 6, scope: !7590)
!7862 = distinct !{!7862, !7850, !7860}
!7863 = !DILocation(line: 2121, column: 32, scope: !7590)
!7864 = !DILocation(line: 2121, column: 8, scope: !7590)
!7865 = !DILocation(line: 2121, column: 6, scope: !7590)
!7866 = !DILocation(line: 2122, column: 24, scope: !7590)
!7867 = !DILocation(line: 2122, column: 28, scope: !7590)
!7868 = !DILocation(line: 2122, column: 39, scope: !7590)
!7869 = !DILocation(line: 2122, column: 43, scope: !7590)
!7870 = !DILocation(line: 2122, column: 2, scope: !7590)
!7871 = !DILocation(line: 2124, column: 9, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2124, column: 2)
!7873 = !DILocation(line: 2124, column: 7, scope: !7872)
!7874 = !DILocation(line: 2124, column: 14, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 2124, column: 2)
!7876 = !DILocation(line: 2124, column: 18, scope: !7875)
!7877 = !DILocation(line: 2124, column: 22, scope: !7875)
!7878 = !DILocation(line: 2124, column: 26, scope: !7875)
!7879 = !DILocation(line: 2124, column: 38, scope: !7875)
!7880 = !DILocation(line: 2124, column: 16, scope: !7875)
!7881 = !DILocation(line: 2124, column: 2, scope: !7872)
!7882 = !DILocation(line: 2125, column: 30, scope: !7875)
!7883 = !DILocation(line: 2125, column: 35, scope: !7875)
!7884 = !DILocation(line: 2125, column: 3, scope: !7875)
!7885 = !DILocation(line: 2124, column: 43, scope: !7875)
!7886 = !DILocation(line: 2124, column: 2, scope: !7875)
!7887 = distinct !{!7887, !7881, !7888}
!7888 = !DILocation(line: 2125, column: 43, scope: !7872)
!7889 = !DILocation(line: 2127, column: 13, scope: !7590)
!7890 = !DILocation(line: 2127, column: 18, scope: !7590)
!7891 = !DILocation(line: 2127, column: 2, scope: !7590)
!7892 = !DILocation(line: 2127, column: 7, scope: !7590)
!7893 = !DILocation(line: 2127, column: 11, scope: !7590)
!7894 = !DILocation(line: 2128, column: 24, scope: !7590)
!7895 = !DILocation(line: 2128, column: 9, scope: !7590)
!7896 = !DILocation(line: 2128, column: 7, scope: !7590)
!7897 = !DILocation(line: 2134, column: 42, scope: !7590)
!7898 = !DILocation(line: 2134, column: 48, scope: !7590)
!7899 = !DILocation(line: 2134, column: 53, scope: !7590)
!7900 = !DILocation(line: 2134, column: 7, scope: !7590)
!7901 = !DILocation(line: 2134, column: 5, scope: !7590)
!7902 = !DILocation(line: 2136, column: 23, scope: !7590)
!7903 = !DILocation(line: 2136, column: 27, scope: !7590)
!7904 = !DILocation(line: 2136, column: 31, scope: !7590)
!7905 = !DILocation(line: 2136, column: 36, scope: !7590)
!7906 = !DILocation(line: 2136, column: 43, scope: !7590)
!7907 = !DILocation(line: 2136, column: 2, scope: !7590)
!7908 = !DILocation(line: 2138, column: 31, scope: !7590)
!7909 = !DILocation(line: 2138, column: 2, scope: !7590)
!7910 = !DILocation(line: 2139, column: 2, scope: !7590)
!7911 = !DILocation(line: 2139, column: 6, scope: !7590)
!7912 = !DILocation(line: 2139, column: 14, scope: !7590)
!7913 = !DILocation(line: 2140, column: 2, scope: !7590)
!7914 = !DILocation(line: 2140, column: 8, scope: !7590)
!7915 = !DILocation(line: 2140, column: 16, scope: !7590)
!7916 = !DILocation(line: 2143, column: 16, scope: !7590)
!7917 = !DILocation(line: 2143, column: 20, scope: !7590)
!7918 = !DILocation(line: 2143, column: 2, scope: !7590)
!7919 = !DILocation(line: 2144, column: 2, scope: !7590)
!7920 = !DILocation(line: 2144, column: 6, scope: !7590)
!7921 = !DILocation(line: 2144, column: 9, scope: !7590)
!7922 = !DILocation(line: 2145, column: 1, scope: !7590)
!7923 = distinct !DISubprogram(name: "multires_load_old_vcols", scope: !3, file: !3, line: 2024, type: !2630, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!7924 = !DILocalVariable(name: "me", arg: 1, scope: !7923, file: !3, line: 2024, type: !2466)
!7925 = !DILocation(line: 2024, column: 43, scope: !7923)
!7926 = !DILocalVariable(name: "lvl", scope: !7923, file: !3, line: 2026, type: !7462)
!7927 = !DILocation(line: 2026, column: 17, scope: !7923)
!7928 = !DILocalVariable(name: "colface", scope: !7923, file: !3, line: 2027, type: !7480)
!7929 = !DILocation(line: 2027, column: 19, scope: !7923)
!7930 = !DILocalVariable(name: "mcol", scope: !7923, file: !3, line: 2028, type: !7931)
!7931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7932, size: 64)
!7932 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !257, line: 76, baseType: !2530)
!7933 = !DILocation(line: 2028, column: 8, scope: !7923)
!7934 = !DILocalVariable(name: "i", scope: !7923, file: !3, line: 2029, type: !196)
!7935 = !DILocation(line: 2029, column: 6, scope: !7923)
!7936 = !DILocalVariable(name: "j", scope: !7923, file: !3, line: 2029, type: !196)
!7937 = !DILocation(line: 2029, column: 9, scope: !7923)
!7938 = !DILocation(line: 2031, column: 14, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2031, column: 6)
!7940 = !DILocation(line: 2031, column: 18, scope: !7939)
!7941 = !DILocation(line: 2031, column: 22, scope: !7939)
!7942 = !DILocation(line: 2031, column: 29, scope: !7939)
!7943 = !DILocation(line: 2031, column: 12, scope: !7939)
!7944 = !DILocation(line: 2031, column: 6, scope: !7923)
!7945 = !DILocation(line: 2032, column: 3, scope: !7939)
!7946 = !DILocation(line: 2034, column: 18, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2034, column: 6)
!7948 = !DILocation(line: 2034, column: 23, scope: !7947)
!7949 = !DILocation(line: 2034, column: 16, scope: !7947)
!7950 = !DILocation(line: 2034, column: 6, scope: !7923)
!7951 = !DILocation(line: 2035, column: 3, scope: !7947)
!7952 = !DILocation(line: 2039, column: 37, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2039, column: 6)
!7954 = !DILocation(line: 2039, column: 41, scope: !7953)
!7955 = !DILocation(line: 2039, column: 15, scope: !7953)
!7956 = !DILocation(line: 2039, column: 13, scope: !7953)
!7957 = !DILocation(line: 2039, column: 6, scope: !7923)
!7958 = !DILocation(line: 2040, column: 3, scope: !7953)
!7959 = !DILocation(line: 2042, column: 9, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2042, column: 2)
!7961 = !DILocation(line: 2042, column: 7, scope: !7960)
!7962 = !DILocation(line: 2042, column: 14, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 2042, column: 2)
!7964 = !DILocation(line: 2042, column: 18, scope: !7963)
!7965 = !DILocation(line: 2042, column: 22, scope: !7963)
!7966 = !DILocation(line: 2042, column: 16, scope: !7963)
!7967 = !DILocation(line: 2042, column: 2, scope: !7960)
!7968 = !DILocation(line: 2043, column: 10, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 2043, column: 3)
!7970 = distinct !DILexicalBlock(scope: !7963, file: !3, line: 2042, column: 36)
!7971 = !DILocation(line: 2043, column: 8, scope: !7969)
!7972 = !DILocation(line: 2043, column: 15, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 2043, column: 3)
!7974 = !DILocation(line: 2043, column: 17, scope: !7973)
!7975 = !DILocation(line: 2043, column: 3, scope: !7969)
!7976 = !DILocation(line: 2044, column: 24, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 2043, column: 27)
!7978 = !DILocation(line: 2044, column: 32, scope: !7977)
!7979 = !DILocation(line: 2044, column: 35, scope: !7977)
!7980 = !DILocation(line: 2044, column: 39, scope: !7977)
!7981 = !DILocation(line: 2044, column: 42, scope: !7977)
!7982 = !DILocation(line: 2044, column: 4, scope: !7977)
!7983 = !DILocation(line: 2044, column: 9, scope: !7977)
!7984 = !DILocation(line: 2044, column: 11, scope: !7977)
!7985 = !DILocation(line: 2044, column: 17, scope: !7977)
!7986 = !DILocation(line: 2044, column: 15, scope: !7977)
!7987 = !DILocation(line: 2044, column: 20, scope: !7977)
!7988 = !DILocation(line: 2044, column: 22, scope: !7977)
!7989 = !DILocation(line: 2045, column: 24, scope: !7977)
!7990 = !DILocation(line: 2045, column: 32, scope: !7977)
!7991 = !DILocation(line: 2045, column: 35, scope: !7977)
!7992 = !DILocation(line: 2045, column: 39, scope: !7977)
!7993 = !DILocation(line: 2045, column: 42, scope: !7977)
!7994 = !DILocation(line: 2045, column: 4, scope: !7977)
!7995 = !DILocation(line: 2045, column: 9, scope: !7977)
!7996 = !DILocation(line: 2045, column: 11, scope: !7977)
!7997 = !DILocation(line: 2045, column: 17, scope: !7977)
!7998 = !DILocation(line: 2045, column: 15, scope: !7977)
!7999 = !DILocation(line: 2045, column: 20, scope: !7977)
!8000 = !DILocation(line: 2045, column: 22, scope: !7977)
!8001 = !DILocation(line: 2046, column: 24, scope: !7977)
!8002 = !DILocation(line: 2046, column: 32, scope: !7977)
!8003 = !DILocation(line: 2046, column: 35, scope: !7977)
!8004 = !DILocation(line: 2046, column: 39, scope: !7977)
!8005 = !DILocation(line: 2046, column: 42, scope: !7977)
!8006 = !DILocation(line: 2046, column: 4, scope: !7977)
!8007 = !DILocation(line: 2046, column: 9, scope: !7977)
!8008 = !DILocation(line: 2046, column: 11, scope: !7977)
!8009 = !DILocation(line: 2046, column: 17, scope: !7977)
!8010 = !DILocation(line: 2046, column: 15, scope: !7977)
!8011 = !DILocation(line: 2046, column: 20, scope: !7977)
!8012 = !DILocation(line: 2046, column: 22, scope: !7977)
!8013 = !DILocation(line: 2047, column: 24, scope: !7977)
!8014 = !DILocation(line: 2047, column: 32, scope: !7977)
!8015 = !DILocation(line: 2047, column: 35, scope: !7977)
!8016 = !DILocation(line: 2047, column: 39, scope: !7977)
!8017 = !DILocation(line: 2047, column: 42, scope: !7977)
!8018 = !DILocation(line: 2047, column: 4, scope: !7977)
!8019 = !DILocation(line: 2047, column: 9, scope: !7977)
!8020 = !DILocation(line: 2047, column: 11, scope: !7977)
!8021 = !DILocation(line: 2047, column: 17, scope: !7977)
!8022 = !DILocation(line: 2047, column: 15, scope: !7977)
!8023 = !DILocation(line: 2047, column: 20, scope: !7977)
!8024 = !DILocation(line: 2047, column: 22, scope: !7977)
!8025 = !DILocation(line: 2048, column: 3, scope: !7977)
!8026 = !DILocation(line: 2043, column: 22, scope: !7973)
!8027 = !DILocation(line: 2043, column: 3, scope: !7973)
!8028 = distinct !{!8028, !7975, !8029}
!8029 = !DILocation(line: 2048, column: 3, scope: !7969)
!8030 = !DILocation(line: 2049, column: 2, scope: !7970)
!8031 = !DILocation(line: 2042, column: 31, scope: !7963)
!8032 = !DILocation(line: 2042, column: 2, scope: !7963)
!8033 = distinct !{!8033, !7967, !8034}
!8034 = !DILocation(line: 2049, column: 2, scope: !7960)
!8035 = !DILocation(line: 2050, column: 1, scope: !7923)
!8036 = distinct !DISubprogram(name: "multires_load_old_face_flags", scope: !3, file: !3, line: 2053, type: !2630, scopeLine: 2054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!8037 = !DILocalVariable(name: "me", arg: 1, scope: !8036, file: !3, line: 2053, type: !2466)
!8038 = !DILocation(line: 2053, column: 48, scope: !8036)
!8039 = !DILocalVariable(name: "lvl", scope: !8036, file: !3, line: 2055, type: !7462)
!8040 = !DILocation(line: 2055, column: 17, scope: !8036)
!8041 = !DILocalVariable(name: "faces", scope: !8036, file: !3, line: 2056, type: !7470)
!8042 = !DILocation(line: 2056, column: 16, scope: !8036)
!8043 = !DILocalVariable(name: "i", scope: !8036, file: !3, line: 2057, type: !196)
!8044 = !DILocation(line: 2057, column: 6, scope: !8036)
!8045 = !DILocation(line: 2059, column: 14, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 2059, column: 6)
!8047 = !DILocation(line: 2059, column: 18, scope: !8046)
!8048 = !DILocation(line: 2059, column: 22, scope: !8046)
!8049 = !DILocation(line: 2059, column: 29, scope: !8046)
!8050 = !DILocation(line: 2059, column: 12, scope: !8046)
!8051 = !DILocation(line: 2059, column: 6, scope: !8036)
!8052 = !DILocation(line: 2060, column: 3, scope: !8046)
!8053 = !DILocation(line: 2062, column: 16, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 2062, column: 6)
!8055 = !DILocation(line: 2062, column: 21, scope: !8054)
!8056 = !DILocation(line: 2062, column: 14, scope: !8054)
!8057 = !DILocation(line: 2062, column: 6, scope: !8036)
!8058 = !DILocation(line: 2063, column: 3, scope: !8054)
!8059 = !DILocation(line: 2065, column: 9, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 2065, column: 2)
!8061 = !DILocation(line: 2065, column: 7, scope: !8060)
!8062 = !DILocation(line: 2065, column: 14, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2065, column: 2)
!8064 = !DILocation(line: 2065, column: 18, scope: !8063)
!8065 = !DILocation(line: 2065, column: 22, scope: !8063)
!8066 = !DILocation(line: 2065, column: 16, scope: !8063)
!8067 = !DILocation(line: 2065, column: 2, scope: !8060)
!8068 = !DILocation(line: 2066, column: 23, scope: !8063)
!8069 = !DILocation(line: 2066, column: 29, scope: !8063)
!8070 = !DILocation(line: 2066, column: 32, scope: !8063)
!8071 = !DILocation(line: 2066, column: 3, scope: !8063)
!8072 = !DILocation(line: 2066, column: 7, scope: !8063)
!8073 = !DILocation(line: 2066, column: 13, scope: !8063)
!8074 = !DILocation(line: 2066, column: 16, scope: !8063)
!8075 = !DILocation(line: 2066, column: 21, scope: !8063)
!8076 = !DILocation(line: 2065, column: 31, scope: !8063)
!8077 = !DILocation(line: 2065, column: 2, scope: !8063)
!8078 = distinct !{!8078, !8067, !8079}
!8079 = !DILocation(line: 2066, column: 32, scope: !8060)
!8080 = !DILocation(line: 2067, column: 1, scope: !8036)
!8081 = distinct !DISubprogram(name: "multires_load_old_dm", scope: !3, file: !3, line: 1856, type: !8082, scopeLine: 1857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!8082 = !DISubroutineType(types: !8083)
!8083 = !{null, !915, !2466, !196}
!8084 = !DILocalVariable(name: "dm", arg: 1, scope: !8081, file: !3, line: 1856, type: !915)
!8085 = !DILocation(line: 1856, column: 47, scope: !8081)
!8086 = !DILocalVariable(name: "me", arg: 2, scope: !8081, file: !3, line: 1856, type: !2466)
!8087 = !DILocation(line: 1856, column: 57, scope: !8081)
!8088 = !DILocalVariable(name: "totlvl", arg: 3, scope: !8081, file: !3, line: 1856, type: !196)
!8089 = !DILocation(line: 1856, column: 65, scope: !8081)
!8090 = !DILocalVariable(name: "lvl", scope: !8081, file: !3, line: 1858, type: !7462)
!8091 = !DILocation(line: 1858, column: 17, scope: !8081)
!8092 = !DILocalVariable(name: "lvl1", scope: !8081, file: !3, line: 1858, type: !7462)
!8093 = !DILocation(line: 1858, column: 23, scope: !8081)
!8094 = !DILocalVariable(name: "mr", scope: !8081, file: !3, line: 1859, type: !7453)
!8095 = !DILocation(line: 1859, column: 12, scope: !8081)
!8096 = !DILocation(line: 1859, column: 17, scope: !8081)
!8097 = !DILocation(line: 1859, column: 21, scope: !8081)
!8098 = !DILocalVariable(name: "vsrc", scope: !8081, file: !3, line: 1860, type: !2597)
!8099 = !DILocation(line: 1860, column: 9, scope: !8081)
!8100 = !DILocalVariable(name: "vdst", scope: !8081, file: !3, line: 1860, type: !2597)
!8101 = !DILocation(line: 1860, column: 16, scope: !8081)
!8102 = !DILocalVariable(name: "src", scope: !8081, file: !3, line: 1861, type: !7)
!8103 = !DILocation(line: 1861, column: 15, scope: !8081)
!8104 = !DILocalVariable(name: "dst", scope: !8081, file: !3, line: 1861, type: !7)
!8105 = !DILocation(line: 1861, column: 20, scope: !8081)
!8106 = !DILocalVariable(name: "st", scope: !8081, file: !3, line: 1862, type: !196)
!8107 = !DILocation(line: 1862, column: 6, scope: !8081)
!8108 = !DILocation(line: 1862, column: 29, scope: !8081)
!8109 = !DILocation(line: 1862, column: 36, scope: !8081)
!8110 = !DILocation(line: 1862, column: 11, scope: !8081)
!8111 = !DILocation(line: 1862, column: 41, scope: !8081)
!8112 = !DILocalVariable(name: "extedgelen", scope: !8081, file: !3, line: 1863, type: !196)
!8113 = !DILocation(line: 1863, column: 6, scope: !8081)
!8114 = !DILocation(line: 1863, column: 37, scope: !8081)
!8115 = !DILocation(line: 1863, column: 19, scope: !8081)
!8116 = !DILocation(line: 1863, column: 45, scope: !8081)
!8117 = !DILocalVariable(name: "vvmap", scope: !8081, file: !3, line: 1864, type: !426)
!8118 = !DILocation(line: 1864, column: 7, scope: !8081)
!8119 = !DILocalVariable(name: "crossedgelen", scope: !8081, file: !3, line: 1865, type: !196)
!8120 = !DILocation(line: 1865, column: 6, scope: !8081)
!8121 = !DILocalVariable(name: "s", scope: !8081, file: !3, line: 1866, type: !196)
!8122 = !DILocation(line: 1866, column: 6, scope: !8081)
!8123 = !DILocalVariable(name: "x", scope: !8081, file: !3, line: 1866, type: !196)
!8124 = !DILocation(line: 1866, column: 9, scope: !8081)
!8125 = !DILocalVariable(name: "tottri", scope: !8081, file: !3, line: 1866, type: !196)
!8126 = !DILocation(line: 1866, column: 12, scope: !8081)
!8127 = !DILocalVariable(name: "totquad", scope: !8081, file: !3, line: 1866, type: !196)
!8128 = !DILocation(line: 1866, column: 20, scope: !8081)
!8129 = !DILocalVariable(name: "i", scope: !8081, file: !3, line: 1867, type: !7)
!8130 = !DILocation(line: 1867, column: 15, scope: !8081)
!8131 = !DILocalVariable(name: "j", scope: !8081, file: !3, line: 1867, type: !7)
!8132 = !DILocation(line: 1867, column: 18, scope: !8081)
!8133 = !DILocalVariable(name: "totvert", scope: !8081, file: !3, line: 1867, type: !7)
!8134 = !DILocation(line: 1867, column: 21, scope: !8081)
!8135 = !DILocation(line: 1869, column: 6, scope: !8081)
!8136 = !DILocation(line: 1870, column: 9, scope: !8081)
!8137 = !DILocation(line: 1870, column: 13, scope: !8081)
!8138 = !DILocation(line: 1870, column: 7, scope: !8081)
!8139 = !DILocation(line: 1871, column: 9, scope: !8081)
!8140 = !DILocation(line: 1871, column: 13, scope: !8081)
!8141 = !DILocation(line: 1871, column: 26, scope: !8081)
!8142 = !DILocation(line: 1871, column: 7, scope: !8081)
!8143 = !DILocation(line: 1872, column: 26, scope: !8081)
!8144 = !DILocation(line: 1872, column: 30, scope: !8081)
!8145 = !DILocation(line: 1872, column: 42, scope: !8081)
!8146 = !DILocation(line: 1872, column: 10, scope: !8081)
!8147 = !DILocation(line: 1873, column: 10, scope: !8081)
!8148 = !DILocation(line: 1873, column: 36, scope: !8081)
!8149 = !DILocation(line: 1873, column: 34, scope: !8081)
!8150 = !DILocation(line: 1873, column: 8, scope: !8081)
!8151 = !DILocation(line: 1875, column: 9, scope: !8081)
!8152 = !DILocation(line: 1875, column: 13, scope: !8081)
!8153 = !DILocation(line: 1875, column: 20, scope: !8081)
!8154 = !DILocation(line: 1875, column: 7, scope: !8081)
!8155 = !DILocation(line: 1877, column: 9, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 1877, column: 2)
!8157 = !DILocation(line: 1877, column: 7, scope: !8156)
!8158 = !DILocation(line: 1877, column: 14, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 1877, column: 2)
!8160 = !DILocation(line: 1877, column: 18, scope: !8159)
!8161 = !DILocation(line: 1877, column: 24, scope: !8159)
!8162 = !DILocation(line: 1877, column: 16, scope: !8159)
!8163 = !DILocation(line: 1877, column: 2, scope: !8156)
!8164 = !DILocation(line: 1878, column: 40, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 1877, column: 38)
!8166 = !DILocation(line: 1878, column: 3, scope: !8165)
!8167 = !DILocation(line: 1878, column: 9, scope: !8165)
!8168 = !DILocation(line: 1878, column: 19, scope: !8165)
!8169 = !DILocation(line: 1878, column: 25, scope: !8165)
!8170 = !DILocation(line: 1878, column: 17, scope: !8165)
!8171 = !DILocation(line: 1878, column: 35, scope: !8165)
!8172 = !DILocation(line: 1878, column: 33, scope: !8165)
!8173 = !DILocation(line: 1878, column: 38, scope: !8165)
!8174 = !DILocation(line: 1879, column: 6, scope: !8165)
!8175 = !DILocation(line: 1880, column: 2, scope: !8165)
!8176 = !DILocation(line: 1877, column: 33, scope: !8159)
!8177 = !DILocation(line: 1877, column: 2, scope: !8159)
!8178 = distinct !{!8178, !8163, !8179}
!8179 = !DILocation(line: 1880, column: 2, scope: !8156)
!8180 = !DILocation(line: 1883, column: 8, scope: !8081)
!8181 = !DILocation(line: 1883, column: 18, scope: !8081)
!8182 = !DILocation(line: 1883, column: 24, scope: !8081)
!8183 = !DILocation(line: 1883, column: 16, scope: !8081)
!8184 = !DILocation(line: 1883, column: 34, scope: !8081)
!8185 = !DILocation(line: 1883, column: 47, scope: !8081)
!8186 = !DILocation(line: 1883, column: 53, scope: !8081)
!8187 = !DILocation(line: 1883, column: 45, scope: !8081)
!8188 = !DILocation(line: 1883, column: 32, scope: !8081)
!8189 = !DILocation(line: 1883, column: 6, scope: !8081)
!8190 = !DILocation(line: 1884, column: 9, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 1884, column: 2)
!8192 = !DILocation(line: 1884, column: 7, scope: !8191)
!8193 = !DILocation(line: 1884, column: 14, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 1884, column: 2)
!8195 = !DILocation(line: 1884, column: 18, scope: !8194)
!8196 = !DILocation(line: 1884, column: 24, scope: !8194)
!8197 = !DILocation(line: 1884, column: 16, scope: !8194)
!8198 = !DILocation(line: 1884, column: 2, scope: !8191)
!8199 = !DILocalVariable(name: "ldst", scope: !8200, file: !3, line: 1885, type: !196)
!8200 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 1884, column: 38)
!8201 = !DILocation(line: 1885, column: 7, scope: !8200)
!8202 = !DILocation(line: 1885, column: 14, scope: !8200)
!8203 = !DILocation(line: 1885, column: 20, scope: !8200)
!8204 = !DILocation(line: 1885, column: 33, scope: !8200)
!8205 = !DILocation(line: 1885, column: 31, scope: !8200)
!8206 = !DILocation(line: 1885, column: 18, scope: !8200)
!8207 = !DILocalVariable(name: "lsrc", scope: !8200, file: !3, line: 1886, type: !196)
!8208 = !DILocation(line: 1886, column: 7, scope: !8200)
!8209 = !DILocation(line: 1886, column: 14, scope: !8200)
!8210 = !DILocation(line: 1887, column: 9, scope: !8200)
!8211 = !DILocation(line: 1887, column: 15, scope: !8200)
!8212 = !DILocation(line: 1887, column: 7, scope: !8200)
!8213 = !DILocation(line: 1889, column: 10, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 1889, column: 3)
!8215 = !DILocation(line: 1889, column: 8, scope: !8214)
!8216 = !DILocation(line: 1889, column: 15, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1889, column: 3)
!8218 = !DILocation(line: 1889, column: 20, scope: !8217)
!8219 = !DILocation(line: 1889, column: 24, scope: !8217)
!8220 = !DILocation(line: 1889, column: 17, scope: !8217)
!8221 = !DILocation(line: 1889, column: 3, scope: !8214)
!8222 = !DILocalVariable(name: "base", scope: !8223, file: !3, line: 1890, type: !196)
!8223 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 1889, column: 42)
!8224 = !DILocation(line: 1890, column: 8, scope: !8223)
!8225 = !DILocation(line: 1890, column: 33, scope: !8223)
!8226 = !DILocation(line: 1890, column: 42, scope: !8223)
!8227 = !DILocation(line: 1890, column: 40, scope: !8223)
!8228 = !DILocation(line: 1890, column: 44, scope: !8223)
!8229 = !DILocation(line: 1890, column: 15, scope: !8223)
!8230 = !DILocation(line: 1890, column: 49, scope: !8223)
!8231 = !DILocalVariable(name: "skip", scope: !8223, file: !3, line: 1891, type: !196)
!8232 = !DILocation(line: 1891, column: 8, scope: !8223)
!8233 = !DILocation(line: 1891, column: 33, scope: !8223)
!8234 = !DILocation(line: 1891, column: 42, scope: !8223)
!8235 = !DILocation(line: 1891, column: 40, scope: !8223)
!8236 = !DILocation(line: 1891, column: 44, scope: !8223)
!8237 = !DILocation(line: 1891, column: 15, scope: !8223)
!8238 = !DILocation(line: 1891, column: 49, scope: !8223)
!8239 = !DILocalVariable(name: "st", scope: !8223, file: !3, line: 1892, type: !196)
!8240 = !DILocation(line: 1892, column: 8, scope: !8223)
!8241 = !DILocation(line: 1892, column: 31, scope: !8223)
!8242 = !DILocation(line: 1892, column: 33, scope: !8223)
!8243 = !DILocation(line: 1892, column: 13, scope: !8223)
!8244 = !DILocation(line: 1892, column: 38, scope: !8223)
!8245 = !DILocation(line: 1894, column: 11, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 1894, column: 4)
!8247 = !DILocation(line: 1894, column: 9, scope: !8246)
!8248 = !DILocation(line: 1894, column: 16, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 1894, column: 4)
!8250 = !DILocation(line: 1894, column: 20, scope: !8249)
!8251 = !DILocation(line: 1894, column: 18, scope: !8249)
!8252 = !DILocation(line: 1894, column: 4, scope: !8246)
!8253 = !DILocation(line: 1895, column: 37, scope: !8249)
!8254 = !DILocation(line: 1895, column: 44, scope: !8249)
!8255 = !DILocation(line: 1895, column: 49, scope: !8249)
!8256 = !DILocation(line: 1895, column: 47, scope: !8249)
!8257 = !DILocation(line: 1895, column: 42, scope: !8249)
!8258 = !DILocation(line: 1895, column: 53, scope: !8249)
!8259 = !DILocation(line: 1895, column: 51, scope: !8249)
!8260 = !DILocation(line: 1895, column: 5, scope: !8249)
!8261 = !DILocation(line: 1895, column: 11, scope: !8249)
!8262 = !DILocation(line: 1895, column: 18, scope: !8249)
!8263 = !DILocation(line: 1895, column: 16, scope: !8249)
!8264 = !DILocation(line: 1895, column: 25, scope: !8249)
!8265 = !DILocation(line: 1895, column: 29, scope: !8249)
!8266 = !DILocation(line: 1895, column: 27, scope: !8249)
!8267 = !DILocation(line: 1895, column: 23, scope: !8249)
!8268 = !DILocation(line: 1895, column: 35, scope: !8249)
!8269 = !DILocation(line: 1894, column: 24, scope: !8249)
!8270 = !DILocation(line: 1894, column: 4, scope: !8249)
!8271 = distinct !{!8271, !8252, !8272}
!8272 = !DILocation(line: 1895, column: 53, scope: !8246)
!8273 = !DILocation(line: 1897, column: 12, scope: !8223)
!8274 = !DILocation(line: 1897, column: 17, scope: !8223)
!8275 = !DILocation(line: 1897, column: 27, scope: !8223)
!8276 = !DILocation(line: 1897, column: 32, scope: !8223)
!8277 = !DILocation(line: 1897, column: 38, scope: !8223)
!8278 = !DILocation(line: 1897, column: 25, scope: !8223)
!8279 = !DILocation(line: 1897, column: 9, scope: !8223)
!8280 = !DILocation(line: 1898, column: 10, scope: !8223)
!8281 = !DILocation(line: 1898, column: 15, scope: !8223)
!8282 = !DILocation(line: 1898, column: 8, scope: !8223)
!8283 = !DILocation(line: 1899, column: 3, scope: !8223)
!8284 = !DILocation(line: 1889, column: 37, scope: !8217)
!8285 = !DILocation(line: 1889, column: 3, scope: !8217)
!8286 = distinct !{!8286, !8221, !8287}
!8287 = !DILocation(line: 1899, column: 3, scope: !8214)
!8288 = !DILocation(line: 1900, column: 2, scope: !8200)
!8289 = !DILocation(line: 1884, column: 33, scope: !8194)
!8290 = !DILocation(line: 1884, column: 2, scope: !8194)
!8291 = distinct !{!8291, !8198, !8292}
!8292 = !DILocation(line: 1900, column: 2, scope: !8191)
!8293 = !DILocation(line: 1903, column: 6, scope: !8081)
!8294 = !DILocation(line: 1904, column: 9, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 1904, column: 2)
!8296 = !DILocation(line: 1904, column: 7, scope: !8295)
!8297 = !DILocation(line: 1904, column: 14, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 1904, column: 2)
!8299 = !DILocation(line: 1904, column: 18, scope: !8298)
!8300 = !DILocation(line: 1904, column: 24, scope: !8298)
!8301 = !DILocation(line: 1904, column: 16, scope: !8298)
!8302 = !DILocation(line: 1904, column: 2, scope: !8295)
!8303 = !DILocalVariable(name: "sides", scope: !8304, file: !3, line: 1905, type: !196)
!8304 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 1904, column: 38)
!8305 = !DILocation(line: 1905, column: 7, scope: !8304)
!8306 = !DILocation(line: 1905, column: 15, scope: !8304)
!8307 = !DILocation(line: 1905, column: 21, scope: !8304)
!8308 = !DILocation(line: 1905, column: 27, scope: !8304)
!8309 = !DILocation(line: 1905, column: 30, scope: !8304)
!8310 = !DILocation(line: 1907, column: 16, scope: !8304)
!8311 = !DILocation(line: 1907, column: 22, scope: !8304)
!8312 = !DILocation(line: 1907, column: 28, scope: !8304)
!8313 = !DILocation(line: 1907, column: 20, scope: !8304)
!8314 = !DILocation(line: 1907, column: 38, scope: !8304)
!8315 = !DILocation(line: 1907, column: 36, scope: !8304)
!8316 = !DILocation(line: 1907, column: 3, scope: !8304)
!8317 = !DILocation(line: 1907, column: 9, scope: !8304)
!8318 = !DILocation(line: 1907, column: 14, scope: !8304)
!8319 = !DILocation(line: 1908, column: 14, scope: !8304)
!8320 = !DILocation(line: 1908, column: 23, scope: !8304)
!8321 = !DILocation(line: 1908, column: 26, scope: !8304)
!8322 = !DILocation(line: 1908, column: 20, scope: !8304)
!8323 = !DILocation(line: 1908, column: 33, scope: !8304)
!8324 = !DILocation(line: 1908, column: 31, scope: !8304)
!8325 = !DILocation(line: 1908, column: 12, scope: !8304)
!8326 = !DILocation(line: 1908, column: 7, scope: !8304)
!8327 = !DILocation(line: 1909, column: 2, scope: !8304)
!8328 = !DILocation(line: 1904, column: 33, scope: !8298)
!8329 = !DILocation(line: 1904, column: 2, scope: !8298)
!8330 = distinct !{!8330, !8302, !8331}
!8331 = !DILocation(line: 1909, column: 2, scope: !8295)
!8332 = !DILocation(line: 1913, column: 6, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 1913, column: 6)
!8334 = !DILocation(line: 1913, column: 12, scope: !8333)
!8335 = !DILocation(line: 1913, column: 17, scope: !8333)
!8336 = !DILocation(line: 1913, column: 20, scope: !8333)
!8337 = !DILocation(line: 1913, column: 26, scope: !8333)
!8338 = !DILocation(line: 1913, column: 32, scope: !8333)
!8339 = !DILocation(line: 1913, column: 6, scope: !8081)
!8340 = !DILocalVariable(name: "fmap", scope: !8341, file: !3, line: 1914, type: !8342)
!8341 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 1913, column: 38)
!8342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!8343 = !DILocation(line: 1914, column: 14, scope: !8341)
!8344 = !DILocalVariable(name: "emap", scope: !8341, file: !3, line: 1914, type: !8342)
!8345 = !DILocation(line: 1914, column: 22, scope: !8341)
!8346 = !DILocalVariable(name: "fmem", scope: !8341, file: !3, line: 1915, type: !8347)
!8347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8348, size: 64)
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8349, size: 64)
!8349 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexNode", file: !3, line: 1663, baseType: !8350)
!8350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IndexNode", file: !3, line: 1660, size: 192, elements: !8351)
!8351 = !{!8352, !8354, !8355}
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8350, file: !3, line: 1661, baseType: !8353, size: 64)
!8353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8350, size: 64)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8350, file: !3, line: 1661, baseType: !8353, size: 64, offset: 64)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8350, file: !3, line: 1662, baseType: !196, size: 32, offset: 128)
!8356 = !DILocation(line: 1915, column: 15, scope: !8341)
!8357 = !DILocalVariable(name: "emem", scope: !8341, file: !3, line: 1915, type: !8347)
!8358 = !DILocation(line: 1915, column: 23, scope: !8341)
!8359 = !DILocation(line: 1918, column: 20, scope: !8341)
!8360 = !DILocation(line: 1918, column: 10, scope: !8341)
!8361 = !DILocation(line: 1919, column: 36, scope: !8341)
!8362 = !DILocation(line: 1919, column: 43, scope: !8341)
!8363 = !DILocation(line: 1919, column: 18, scope: !8341)
!8364 = !DILocation(line: 1919, column: 48, scope: !8341)
!8365 = !DILocation(line: 1919, column: 16, scope: !8341)
!8366 = !DILocation(line: 1920, column: 7, scope: !8341)
!8367 = !DILocation(line: 1921, column: 10, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 1921, column: 3)
!8369 = !DILocation(line: 1921, column: 8, scope: !8368)
!8370 = !DILocation(line: 1921, column: 15, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 1921, column: 3)
!8372 = !DILocation(line: 1921, column: 19, scope: !8371)
!8373 = !DILocation(line: 1921, column: 25, scope: !8371)
!8374 = !DILocation(line: 1921, column: 17, scope: !8371)
!8375 = !DILocation(line: 1921, column: 3, scope: !8368)
!8376 = !DILocalVariable(name: "sides", scope: !8377, file: !3, line: 1922, type: !196)
!8377 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 1921, column: 39)
!8378 = !DILocation(line: 1922, column: 8, scope: !8377)
!8379 = !DILocation(line: 1922, column: 16, scope: !8377)
!8380 = !DILocation(line: 1922, column: 22, scope: !8377)
!8381 = !DILocation(line: 1922, column: 28, scope: !8377)
!8382 = !DILocation(line: 1922, column: 31, scope: !8377)
!8383 = !DILocation(line: 1924, column: 10, scope: !8377)
!8384 = !DILocation(line: 1924, column: 16, scope: !8377)
!8385 = !DILocation(line: 1924, column: 22, scope: !8377)
!8386 = !DILocation(line: 1924, column: 8, scope: !8377)
!8387 = !DILocation(line: 1925, column: 7, scope: !8377)
!8388 = !DILocation(line: 1927, column: 11, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 1927, column: 4)
!8390 = !DILocation(line: 1927, column: 9, scope: !8389)
!8391 = !DILocation(line: 1927, column: 16, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 1927, column: 4)
!8393 = !DILocation(line: 1927, column: 21, scope: !8392)
!8394 = !DILocation(line: 1927, column: 25, scope: !8392)
!8395 = !DILocation(line: 1927, column: 18, scope: !8392)
!8396 = !DILocation(line: 1927, column: 4, scope: !8389)
!8397 = !DILocalVariable(name: "base", scope: !8398, file: !3, line: 1928, type: !196)
!8398 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1927, column: 43)
!8399 = !DILocation(line: 1928, column: 9, scope: !8398)
!8400 = !DILocation(line: 1928, column: 34, scope: !8398)
!8401 = !DILocation(line: 1928, column: 43, scope: !8398)
!8402 = !DILocation(line: 1928, column: 41, scope: !8398)
!8403 = !DILocation(line: 1928, column: 45, scope: !8398)
!8404 = !DILocation(line: 1928, column: 16, scope: !8398)
!8405 = !DILocation(line: 1928, column: 50, scope: !8398)
!8406 = !DILocalVariable(name: "skip", scope: !8398, file: !3, line: 1929, type: !196)
!8407 = !DILocation(line: 1929, column: 9, scope: !8398)
!8408 = !DILocation(line: 1929, column: 34, scope: !8398)
!8409 = !DILocation(line: 1929, column: 43, scope: !8398)
!8410 = !DILocation(line: 1929, column: 41, scope: !8398)
!8411 = !DILocation(line: 1929, column: 45, scope: !8398)
!8412 = !DILocation(line: 1929, column: 16, scope: !8398)
!8413 = !DILocation(line: 1929, column: 50, scope: !8398)
!8414 = !DILocalVariable(name: "st", scope: !8398, file: !3, line: 1930, type: !196)
!8415 = !DILocation(line: 1930, column: 9, scope: !8398)
!8416 = !DILocation(line: 1930, column: 21, scope: !8398)
!8417 = !DILocation(line: 1930, column: 23, scope: !8398)
!8418 = !DILocation(line: 1930, column: 14, scope: !8398)
!8419 = !DILocalVariable(name: "st2", scope: !8398, file: !3, line: 1931, type: !196)
!8420 = !DILocation(line: 1931, column: 9, scope: !8398)
!8421 = !DILocation(line: 1931, column: 22, scope: !8398)
!8422 = !DILocation(line: 1931, column: 24, scope: !8398)
!8423 = !DILocation(line: 1931, column: 15, scope: !8398)
!8424 = !DILocalVariable(name: "lsrc", scope: !8398, file: !3, line: 1932, type: !196)
!8425 = !DILocation(line: 1932, column: 9, scope: !8398)
!8426 = !DILocation(line: 1932, column: 16, scope: !8398)
!8427 = !DILocation(line: 1932, column: 21, scope: !8398)
!8428 = !DILocation(line: 1932, column: 27, scope: !8398)
!8429 = !DILocation(line: 1935, column: 13, scope: !8398)
!8430 = !DILocation(line: 1935, column: 19, scope: !8398)
!8431 = !DILocation(line: 1935, column: 29, scope: !8398)
!8432 = !DILocation(line: 1935, column: 27, scope: !8398)
!8433 = !DILocation(line: 1935, column: 10, scope: !8398)
!8434 = !DILocation(line: 1938, column: 13, scope: !8398)
!8435 = !DILocation(line: 1938, column: 20, scope: !8398)
!8436 = !DILocation(line: 1938, column: 27, scope: !8398)
!8437 = !DILocation(line: 1938, column: 33, scope: !8398)
!8438 = !DILocation(line: 1938, column: 41, scope: !8398)
!8439 = !DILocation(line: 1938, column: 31, scope: !8398)
!8440 = !DILocation(line: 1938, column: 17, scope: !8398)
!8441 = !DILocation(line: 1938, column: 10, scope: !8398)
!8442 = !DILocation(line: 1940, column: 12, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 1940, column: 5)
!8444 = !DILocation(line: 1940, column: 10, scope: !8443)
!8445 = !DILocation(line: 1940, column: 17, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 1940, column: 5)
!8447 = !DILocation(line: 1940, column: 21, scope: !8446)
!8448 = !DILocation(line: 1940, column: 19, scope: !8446)
!8449 = !DILocation(line: 1940, column: 5, scope: !8443)
!8450 = !DILocation(line: 1941, column: 13, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !3, line: 1941, column: 6)
!8452 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 1940, column: 33)
!8453 = !DILocation(line: 1941, column: 11, scope: !8451)
!8454 = !DILocation(line: 1941, column: 18, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 1941, column: 6)
!8456 = !DILocation(line: 1941, column: 22, scope: !8455)
!8457 = !DILocation(line: 1941, column: 20, scope: !8455)
!8458 = !DILocation(line: 1941, column: 6, scope: !8451)
!8459 = !DILocation(line: 1942, column: 67, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 1941, column: 32)
!8461 = !DILocation(line: 1942, column: 7, scope: !8460)
!8462 = !DILocation(line: 1942, column: 13, scope: !8460)
!8463 = !DILocation(line: 1942, column: 19, scope: !8460)
!8464 = !DILocation(line: 1942, column: 35, scope: !8460)
!8465 = !DILocation(line: 1942, column: 37, scope: !8460)
!8466 = !DILocation(line: 1942, column: 32, scope: !8460)
!8467 = !DILocation(line: 1942, column: 17, scope: !8460)
!8468 = !DILocation(line: 1942, column: 44, scope: !8460)
!8469 = !DILocation(line: 1942, column: 42, scope: !8460)
!8470 = !DILocation(line: 1942, column: 51, scope: !8460)
!8471 = !DILocation(line: 1942, column: 55, scope: !8460)
!8472 = !DILocation(line: 1942, column: 53, scope: !8460)
!8473 = !DILocation(line: 1942, column: 49, scope: !8460)
!8474 = !DILocation(line: 1942, column: 60, scope: !8460)
!8475 = !DILocation(line: 1942, column: 65, scope: !8460)
!8476 = !DILocation(line: 1943, column: 11, scope: !8460)
!8477 = !DILocation(line: 1944, column: 6, scope: !8460)
!8478 = !DILocation(line: 1941, column: 27, scope: !8455)
!8479 = !DILocation(line: 1941, column: 6, scope: !8455)
!8480 = distinct !{!8480, !8458, !8481}
!8481 = !DILocation(line: 1944, column: 6, scope: !8451)
!8482 = !DILocation(line: 1945, column: 5, scope: !8452)
!8483 = !DILocation(line: 1940, column: 28, scope: !8446)
!8484 = !DILocation(line: 1940, column: 5, scope: !8446)
!8485 = distinct !{!8485, !8449, !8486}
!8486 = !DILocation(line: 1945, column: 5, scope: !8443)
!8487 = !DILocation(line: 1947, column: 11, scope: !8398)
!8488 = !DILocation(line: 1947, column: 16, scope: !8398)
!8489 = !DILocation(line: 1947, column: 9, scope: !8398)
!8490 = !DILocation(line: 1948, column: 4, scope: !8398)
!8491 = !DILocation(line: 1927, column: 38, scope: !8392)
!8492 = !DILocation(line: 1927, column: 4, scope: !8392)
!8493 = distinct !{!8493, !8396, !8494}
!8494 = !DILocation(line: 1948, column: 4, scope: !8389)
!8495 = !DILocation(line: 1950, column: 11, scope: !8377)
!8496 = !DILocation(line: 1950, column: 20, scope: !8377)
!8497 = !DILocation(line: 1950, column: 23, scope: !8377)
!8498 = !DILocation(line: 1950, column: 17, scope: !8377)
!8499 = !DILocation(line: 1950, column: 30, scope: !8377)
!8500 = !DILocation(line: 1950, column: 28, scope: !8377)
!8501 = !DILocation(line: 1950, column: 8, scope: !8377)
!8502 = !DILocation(line: 1952, column: 8, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 1952, column: 8)
!8504 = !DILocation(line: 1952, column: 14, scope: !8503)
!8505 = !DILocation(line: 1952, column: 8, scope: !8377)
!8506 = !DILocation(line: 1952, column: 20, scope: !8503)
!8507 = !DILocation(line: 1953, column: 9, scope: !8503)
!8508 = !DILocation(line: 1955, column: 3, scope: !8377)
!8509 = !DILocation(line: 1921, column: 34, scope: !8371)
!8510 = !DILocation(line: 1921, column: 3, scope: !8371)
!8511 = distinct !{!8511, !8375, !8512}
!8512 = !DILocation(line: 1955, column: 3, scope: !8368)
!8513 = !DILocation(line: 1958, column: 10, scope: !8341)
!8514 = !DILocation(line: 1958, column: 44, scope: !8341)
!8515 = !DILocation(line: 1958, column: 48, scope: !8341)
!8516 = !DILocation(line: 1958, column: 60, scope: !8341)
!8517 = !DILocation(line: 1958, column: 43, scope: !8341)
!8518 = !DILocation(line: 1958, column: 41, scope: !8341)
!8519 = !DILocation(line: 1958, column: 8, scope: !8341)
!8520 = !DILocation(line: 1959, column: 10, scope: !8341)
!8521 = !DILocation(line: 1959, column: 44, scope: !8341)
!8522 = !DILocation(line: 1959, column: 48, scope: !8341)
!8523 = !DILocation(line: 1959, column: 60, scope: !8341)
!8524 = !DILocation(line: 1959, column: 43, scope: !8341)
!8525 = !DILocation(line: 1959, column: 41, scope: !8341)
!8526 = !DILocation(line: 1959, column: 8, scope: !8341)
!8527 = !DILocation(line: 1960, column: 10, scope: !8341)
!8528 = !DILocation(line: 1960, column: 45, scope: !8341)
!8529 = !DILocation(line: 1960, column: 49, scope: !8341)
!8530 = !DILocation(line: 1960, column: 61, scope: !8341)
!8531 = !DILocation(line: 1960, column: 44, scope: !8341)
!8532 = !DILocation(line: 1960, column: 42, scope: !8341)
!8533 = !DILocation(line: 1960, column: 8, scope: !8341)
!8534 = !DILocation(line: 1961, column: 10, scope: !8341)
!8535 = !DILocation(line: 1961, column: 45, scope: !8341)
!8536 = !DILocation(line: 1961, column: 49, scope: !8341)
!8537 = !DILocation(line: 1961, column: 61, scope: !8341)
!8538 = !DILocation(line: 1961, column: 44, scope: !8341)
!8539 = !DILocation(line: 1961, column: 42, scope: !8341)
!8540 = !DILocation(line: 1961, column: 8, scope: !8341)
!8541 = !DILocation(line: 1962, column: 9, scope: !8341)
!8542 = !DILocation(line: 1962, column: 7, scope: !8341)
!8543 = !DILocation(line: 1963, column: 10, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 1963, column: 3)
!8545 = !DILocation(line: 1963, column: 8, scope: !8544)
!8546 = !DILocation(line: 1963, column: 15, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 1963, column: 3)
!8548 = !DILocation(line: 1963, column: 33, scope: !8547)
!8549 = !DILocation(line: 1963, column: 37, scope: !8547)
!8550 = !DILocation(line: 1963, column: 19, scope: !8547)
!8551 = !DILocation(line: 1963, column: 49, scope: !8547)
!8552 = !DILocation(line: 1963, column: 17, scope: !8547)
!8553 = !DILocation(line: 1963, column: 3, scope: !8544)
!8554 = !DILocation(line: 1964, column: 29, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 1963, column: 59)
!8556 = !DILocation(line: 1964, column: 36, scope: !8555)
!8557 = !DILocation(line: 1964, column: 34, scope: !8555)
!8558 = !DILocation(line: 1964, column: 39, scope: !8555)
!8559 = !DILocation(line: 1964, column: 46, scope: !8555)
!8560 = !DILocation(line: 1964, column: 44, scope: !8555)
!8561 = !DILocation(line: 1964, column: 49, scope: !8555)
!8562 = !DILocation(line: 1964, column: 54, scope: !8555)
!8563 = !DILocation(line: 1964, column: 61, scope: !8555)
!8564 = !DILocation(line: 1964, column: 66, scope: !8555)
!8565 = !DILocation(line: 1964, column: 75, scope: !8555)
!8566 = !DILocation(line: 1964, column: 80, scope: !8555)
!8567 = !DILocation(line: 1964, column: 4, scope: !8555)
!8568 = !DILocation(line: 1965, column: 29, scope: !8555)
!8569 = !DILocation(line: 1965, column: 36, scope: !8555)
!8570 = !DILocation(line: 1965, column: 34, scope: !8555)
!8571 = !DILocation(line: 1965, column: 39, scope: !8555)
!8572 = !DILocation(line: 1965, column: 46, scope: !8555)
!8573 = !DILocation(line: 1965, column: 44, scope: !8555)
!8574 = !DILocation(line: 1965, column: 49, scope: !8555)
!8575 = !DILocation(line: 1965, column: 54, scope: !8555)
!8576 = !DILocation(line: 1965, column: 61, scope: !8555)
!8577 = !DILocation(line: 1965, column: 66, scope: !8555)
!8578 = !DILocation(line: 1965, column: 75, scope: !8555)
!8579 = !DILocation(line: 1965, column: 80, scope: !8555)
!8580 = !DILocation(line: 1965, column: 4, scope: !8555)
!8581 = !DILocation(line: 1966, column: 10, scope: !8555)
!8582 = !DILocation(line: 1966, column: 15, scope: !8555)
!8583 = !DILocation(line: 1966, column: 8, scope: !8555)
!8584 = !DILocation(line: 1967, column: 3, scope: !8555)
!8585 = !DILocation(line: 1963, column: 54, scope: !8547)
!8586 = !DILocation(line: 1963, column: 3, scope: !8547)
!8587 = distinct !{!8587, !8553, !8588}
!8588 = !DILocation(line: 1967, column: 3, scope: !8544)
!8589 = !DILocation(line: 1971, column: 7, scope: !8341)
!8590 = !DILocation(line: 1972, column: 10, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 1972, column: 3)
!8592 = !DILocation(line: 1972, column: 8, scope: !8591)
!8593 = !DILocation(line: 1972, column: 15, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 1972, column: 3)
!8595 = !DILocation(line: 1972, column: 19, scope: !8594)
!8596 = !DILocation(line: 1972, column: 25, scope: !8594)
!8597 = !DILocation(line: 1972, column: 17, scope: !8594)
!8598 = !DILocation(line: 1972, column: 3, scope: !8591)
!8599 = !DILocalVariable(name: "sides", scope: !8600, file: !3, line: 1973, type: !196)
!8600 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 1972, column: 39)
!8601 = !DILocation(line: 1973, column: 8, scope: !8600)
!8602 = !DILocation(line: 1973, column: 16, scope: !8600)
!8603 = !DILocation(line: 1973, column: 22, scope: !8600)
!8604 = !DILocation(line: 1973, column: 28, scope: !8600)
!8605 = !DILocation(line: 1973, column: 31, scope: !8600)
!8606 = !DILocalVariable(name: "ldst", scope: !8600, file: !3, line: 1974, type: !196)
!8607 = !DILocation(line: 1974, column: 8, scope: !8600)
!8608 = !DILocation(line: 1974, column: 15, scope: !8600)
!8609 = !DILocation(line: 1974, column: 19, scope: !8600)
!8610 = !DILocation(line: 1974, column: 25, scope: !8600)
!8611 = !DILocation(line: 1974, column: 34, scope: !8600)
!8612 = !DILocation(line: 1974, column: 37, scope: !8600)
!8613 = !DILocation(line: 1974, column: 31, scope: !8600)
!8614 = !DILocation(line: 1974, column: 23, scope: !8600)
!8615 = !DILocation(line: 1976, column: 11, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8600, file: !3, line: 1976, column: 4)
!8617 = !DILocation(line: 1976, column: 9, scope: !8616)
!8618 = !DILocation(line: 1976, column: 16, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 1976, column: 4)
!8620 = !DILocation(line: 1976, column: 20, scope: !8619)
!8621 = !DILocation(line: 1976, column: 18, scope: !8619)
!8622 = !DILocation(line: 1976, column: 4, scope: !8616)
!8623 = !DILocalVariable(name: "st2", scope: !8624, file: !3, line: 1977, type: !196)
!8624 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 1976, column: 32)
!8625 = !DILocation(line: 1977, column: 9, scope: !8624)
!8626 = !DILocation(line: 1977, column: 33, scope: !8624)
!8627 = !DILocation(line: 1977, column: 40, scope: !8624)
!8628 = !DILocation(line: 1977, column: 15, scope: !8624)
!8629 = !DILocation(line: 1977, column: 45, scope: !8624)
!8630 = !DILocalVariable(name: "st3", scope: !8624, file: !3, line: 1978, type: !196)
!8631 = !DILocation(line: 1978, column: 9, scope: !8624)
!8632 = !DILocation(line: 1978, column: 33, scope: !8624)
!8633 = !DILocation(line: 1978, column: 40, scope: !8624)
!8634 = !DILocation(line: 1978, column: 15, scope: !8624)
!8635 = !DILocation(line: 1978, column: 45, scope: !8624)
!8636 = !DILocalVariable(name: "st4", scope: !8624, file: !3, line: 1979, type: !196)
!8637 = !DILocation(line: 1979, column: 9, scope: !8624)
!8638 = !DILocation(line: 1979, column: 15, scope: !8624)
!8639 = !DILocation(line: 1979, column: 19, scope: !8624)
!8640 = !DILocation(line: 1979, column: 31, scope: !8624)
!8641 = !DILocation(line: 1979, column: 35, scope: !8624)
!8642 = !DILocation(line: 1979, column: 40, scope: !8624)
!8643 = !DILocalVariable(name: "mid", scope: !8624, file: !3, line: 1980, type: !196)
!8644 = !DILocation(line: 1980, column: 9, scope: !8624)
!8645 = !DILocation(line: 1980, column: 15, scope: !8624)
!8646 = !DILocation(line: 1980, column: 22, scope: !8624)
!8647 = !DILocation(line: 1980, column: 28, scope: !8624)
!8648 = !DILocation(line: 1980, column: 26, scope: !8624)
!8649 = !DILocation(line: 1980, column: 20, scope: !8624)
!8650 = !DILocation(line: 1980, column: 34, scope: !8624)
!8651 = !DILocation(line: 1980, column: 32, scope: !8624)
!8652 = !DILocalVariable(name: "cv", scope: !8624, file: !3, line: 1981, type: !196)
!8653 = !DILocation(line: 1981, column: 9, scope: !8624)
!8654 = !DILocation(line: 1981, column: 14, scope: !8624)
!8655 = !DILocation(line: 1981, column: 20, scope: !8624)
!8656 = !DILocation(line: 1981, column: 26, scope: !8624)
!8657 = !DILocation(line: 1981, column: 29, scope: !8624)
!8658 = !DILocation(line: 1981, column: 31, scope: !8624)
!8659 = !DILocalVariable(name: "nv", scope: !8624, file: !3, line: 1982, type: !196)
!8660 = !DILocation(line: 1982, column: 9, scope: !8624)
!8661 = !DILocation(line: 1982, column: 14, scope: !8624)
!8662 = !DILocation(line: 1982, column: 20, scope: !8624)
!8663 = !DILocation(line: 1982, column: 26, scope: !8624)
!8664 = !DILocation(line: 1982, column: 29, scope: !8624)
!8665 = !DILocation(line: 1982, column: 31, scope: !8624)
!8666 = !DILocation(line: 1982, column: 36, scope: !8624)
!8667 = !DILocation(line: 1982, column: 42, scope: !8624)
!8668 = !DILocation(line: 1982, column: 33, scope: !8624)
!8669 = !DILocation(line: 1982, column: 52, scope: !8624)
!8670 = !DILocation(line: 1982, column: 54, scope: !8624)
!8671 = !DILocalVariable(name: "pv", scope: !8624, file: !3, line: 1983, type: !196)
!8672 = !DILocation(line: 1983, column: 9, scope: !8624)
!8673 = !DILocation(line: 1983, column: 14, scope: !8624)
!8674 = !DILocation(line: 1983, column: 20, scope: !8624)
!8675 = !DILocation(line: 1983, column: 26, scope: !8624)
!8676 = !DILocation(line: 1983, column: 29, scope: !8624)
!8677 = !DILocation(line: 1983, column: 31, scope: !8624)
!8678 = !DILocation(line: 1983, column: 33, scope: !8624)
!8679 = !DILocation(line: 1983, column: 40, scope: !8624)
!8680 = !DILocation(line: 1983, column: 46, scope: !8624)
!8681 = !DILocation(line: 1983, column: 52, scope: !8624)
!8682 = !DILocation(line: 1983, column: 54, scope: !8624)
!8683 = !DILocation(line: 1985, column: 29, scope: !8624)
!8684 = !DILocation(line: 1985, column: 35, scope: !8624)
!8685 = !DILocation(line: 1985, column: 41, scope: !8624)
!8686 = !DILocation(line: 1985, column: 47, scope: !8624)
!8687 = !DILocation(line: 1985, column: 53, scope: !8624)
!8688 = !DILocation(line: 1985, column: 60, scope: !8624)
!8689 = !DILocation(line: 1986, column: 29, scope: !8624)
!8690 = !DILocation(line: 1986, column: 35, scope: !8624)
!8691 = !DILocation(line: 1986, column: 41, scope: !8624)
!8692 = !DILocation(line: 1987, column: 43, scope: !8624)
!8693 = !DILocation(line: 1987, column: 52, scope: !8624)
!8694 = !DILocation(line: 1987, column: 58, scope: !8624)
!8695 = !DILocation(line: 1987, column: 65, scope: !8624)
!8696 = !DILocation(line: 1987, column: 69, scope: !8624)
!8697 = !DILocation(line: 1987, column: 29, scope: !8624)
!8698 = !DILocation(line: 1987, column: 74, scope: !8624)
!8699 = !DILocation(line: 1988, column: 43, scope: !8624)
!8700 = !DILocation(line: 1988, column: 52, scope: !8624)
!8701 = !DILocation(line: 1988, column: 58, scope: !8624)
!8702 = !DILocation(line: 1988, column: 65, scope: !8624)
!8703 = !DILocation(line: 1988, column: 69, scope: !8624)
!8704 = !DILocation(line: 1988, column: 29, scope: !8624)
!8705 = !DILocation(line: 1988, column: 74, scope: !8624)
!8706 = !DILocation(line: 1989, column: 29, scope: !8624)
!8707 = !DILocation(line: 1989, column: 34, scope: !8624)
!8708 = !DILocation(line: 1985, column: 5, scope: !8624)
!8709 = !DILocation(line: 1991, column: 14, scope: !8624)
!8710 = !DILocation(line: 1991, column: 17, scope: !8624)
!8711 = !DILocation(line: 1991, column: 25, scope: !8624)
!8712 = !DILocation(line: 1991, column: 28, scope: !8624)
!8713 = !DILocation(line: 1991, column: 22, scope: !8624)
!8714 = !DILocation(line: 1991, column: 10, scope: !8624)
!8715 = !DILocation(line: 1992, column: 4, scope: !8624)
!8716 = !DILocation(line: 1976, column: 27, scope: !8619)
!8717 = !DILocation(line: 1976, column: 4, scope: !8619)
!8718 = distinct !{!8718, !8622, !8719}
!8719 = !DILocation(line: 1992, column: 4, scope: !8616)
!8720 = !DILocation(line: 1995, column: 10, scope: !8600)
!8721 = !DILocation(line: 1995, column: 8, scope: !8600)
!8722 = !DILocation(line: 1996, column: 3, scope: !8600)
!8723 = !DILocation(line: 1972, column: 34, scope: !8594)
!8724 = !DILocation(line: 1972, column: 3, scope: !8594)
!8725 = distinct !{!8725, !8598, !8726}
!8726 = !DILocation(line: 1996, column: 3, scope: !8591)
!8727 = !DILocation(line: 2000, column: 10, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 2000, column: 3)
!8729 = !DILocation(line: 2000, column: 8, scope: !8728)
!8730 = !DILocation(line: 2000, column: 15, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 2000, column: 3)
!8732 = !DILocation(line: 2000, column: 34, scope: !8731)
!8733 = !DILocation(line: 2000, column: 38, scope: !8731)
!8734 = !DILocation(line: 2000, column: 50, scope: !8731)
!8735 = !DILocation(line: 2000, column: 17, scope: !8731)
!8736 = !DILocation(line: 2000, column: 3, scope: !8728)
!8737 = !DILocation(line: 2001, column: 4, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 2000, column: 61)
!8739 = !DILocation(line: 2001, column: 14, scope: !8738)
!8740 = !DILocation(line: 2001, column: 19, scope: !8738)
!8741 = !DILocation(line: 2002, column: 4, scope: !8738)
!8742 = !DILocation(line: 2002, column: 14, scope: !8738)
!8743 = !DILocation(line: 2002, column: 19, scope: !8738)
!8744 = !DILocation(line: 2003, column: 4, scope: !8738)
!8745 = !DILocation(line: 2003, column: 14, scope: !8738)
!8746 = !DILocation(line: 2003, column: 19, scope: !8738)
!8747 = !DILocation(line: 2004, column: 4, scope: !8738)
!8748 = !DILocation(line: 2004, column: 14, scope: !8738)
!8749 = !DILocation(line: 2004, column: 19, scope: !8738)
!8750 = !DILocation(line: 2005, column: 3, scope: !8738)
!8751 = !DILocation(line: 2000, column: 56, scope: !8731)
!8752 = !DILocation(line: 2000, column: 3, scope: !8731)
!8753 = distinct !{!8753, !8736, !8754}
!8754 = !DILocation(line: 2005, column: 3, scope: !8728)
!8755 = !DILocation(line: 2007, column: 3, scope: !8341)
!8756 = !DILocation(line: 2007, column: 13, scope: !8341)
!8757 = !DILocation(line: 2008, column: 3, scope: !8341)
!8758 = !DILocation(line: 2008, column: 13, scope: !8341)
!8759 = !DILocation(line: 2009, column: 3, scope: !8341)
!8760 = !DILocation(line: 2009, column: 13, scope: !8341)
!8761 = !DILocation(line: 2010, column: 3, scope: !8341)
!8762 = !DILocation(line: 2010, column: 13, scope: !8341)
!8763 = !DILocation(line: 2011, column: 2, scope: !8341)
!8764 = !DILocation(line: 2014, column: 9, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 2014, column: 2)
!8766 = !DILocation(line: 2014, column: 7, scope: !8765)
!8767 = !DILocation(line: 2014, column: 14, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 2014, column: 2)
!8769 = !DILocation(line: 2014, column: 18, scope: !8768)
!8770 = !DILocation(line: 2014, column: 16, scope: !8768)
!8771 = !DILocation(line: 2014, column: 2, scope: !8765)
!8772 = !DILocation(line: 2015, column: 14, scope: !8768)
!8773 = !DILocation(line: 2015, column: 19, scope: !8768)
!8774 = !DILocation(line: 2015, column: 22, scope: !8768)
!8775 = !DILocation(line: 2015, column: 26, scope: !8768)
!8776 = !DILocation(line: 2015, column: 31, scope: !8768)
!8777 = !DILocation(line: 2015, column: 37, scope: !8768)
!8778 = !DILocation(line: 2015, column: 41, scope: !8768)
!8779 = !DILocation(line: 2015, column: 3, scope: !8768)
!8780 = !DILocation(line: 2014, column: 27, scope: !8768)
!8781 = !DILocation(line: 2014, column: 2, scope: !8768)
!8782 = distinct !{!8782, !8771, !8783}
!8783 = !DILocation(line: 2015, column: 43, scope: !8765)
!8784 = !DILocation(line: 2017, column: 2, scope: !8081)
!8785 = !DILocation(line: 2017, column: 12, scope: !8081)
!8786 = !DILocation(line: 2019, column: 23, scope: !8081)
!8787 = !DILocation(line: 2019, column: 27, scope: !8081)
!8788 = !DILocation(line: 2019, column: 2, scope: !8081)
!8789 = !DILocation(line: 2020, column: 1, scope: !8081)
!8790 = distinct !DISubprogram(name: "multires_mdisp_corners", scope: !3, file: !3, line: 2262, type: !8791, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!8791 = !DISubroutineType(types: !8792)
!8792 = !{!196, !3566}
!8793 = !DILocalVariable(name: "s", arg: 1, scope: !8790, file: !3, line: 2262, type: !3566)
!8794 = !DILocation(line: 2262, column: 36, scope: !8790)
!8795 = !DILocalVariable(name: "lvl", scope: !8790, file: !3, line: 2264, type: !196)
!8796 = !DILocation(line: 2264, column: 6, scope: !8790)
!8797 = !DILocation(line: 2266, column: 2, scope: !8790)
!8798 = !DILocation(line: 2266, column: 9, scope: !8790)
!8799 = !DILocation(line: 2266, column: 13, scope: !8790)
!8800 = !DILocalVariable(name: "side", scope: !8801, file: !3, line: 2267, type: !196)
!8801 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 2266, column: 18)
!8802 = !DILocation(line: 2267, column: 7, scope: !8801)
!8803 = !DILocation(line: 2267, column: 21, scope: !8801)
!8804 = !DILocation(line: 2267, column: 25, scope: !8801)
!8805 = !DILocation(line: 2267, column: 17, scope: !8801)
!8806 = !DILocation(line: 2267, column: 31, scope: !8801)
!8807 = !DILocation(line: 2268, column: 8, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 2268, column: 7)
!8809 = !DILocation(line: 2268, column: 11, scope: !8808)
!8810 = !DILocation(line: 2268, column: 22, scope: !8808)
!8811 = !DILocation(line: 2268, column: 29, scope: !8808)
!8812 = !DILocation(line: 2268, column: 27, scope: !8808)
!8813 = !DILocation(line: 2268, column: 19, scope: !8808)
!8814 = !DILocation(line: 2268, column: 36, scope: !8808)
!8815 = !DILocation(line: 2268, column: 7, scope: !8801)
!8816 = !DILocation(line: 2268, column: 49, scope: !8808)
!8817 = !DILocation(line: 2268, column: 52, scope: !8808)
!8818 = !DILocation(line: 2268, column: 63, scope: !8808)
!8819 = !DILocation(line: 2268, column: 70, scope: !8808)
!8820 = !DILocation(line: 2268, column: 68, scope: !8808)
!8821 = !DILocation(line: 2268, column: 60, scope: !8808)
!8822 = !DILocation(line: 2268, column: 42, scope: !8808)
!8823 = !DILocation(line: 2269, column: 6, scope: !8801)
!8824 = distinct !{!8824, !8797, !8825}
!8825 = !DILocation(line: 2270, column: 2, scope: !8790)
!8826 = !DILocation(line: 2272, column: 2, scope: !8790)
!8827 = !DILocation(line: 2273, column: 1, scope: !8790)
!8828 = distinct !DISubprogram(name: "multiresModifier_scale_disp", scope: !3, file: !3, line: 2275, type: !8829, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{null, !2687, !2689}
!8831 = !DILocalVariable(name: "scene", arg: 1, scope: !8828, file: !3, line: 2275, type: !2687)
!8832 = !DILocation(line: 2275, column: 41, scope: !8828)
!8833 = !DILocalVariable(name: "ob", arg: 2, scope: !8828, file: !3, line: 2275, type: !2689)
!8834 = !DILocation(line: 2275, column: 56, scope: !8828)
!8835 = !DILocalVariable(name: "smat", scope: !8828, file: !3, line: 2277, type: !640)
!8836 = !DILocation(line: 2277, column: 8, scope: !8828)
!8837 = !DILocation(line: 2280, column: 27, scope: !8828)
!8838 = !DILocation(line: 2280, column: 31, scope: !8828)
!8839 = !DILocation(line: 2280, column: 2, scope: !8828)
!8840 = !DILocation(line: 2282, column: 22, scope: !8828)
!8841 = !DILocation(line: 2282, column: 29, scope: !8828)
!8842 = !DILocation(line: 2282, column: 33, scope: !8828)
!8843 = !DILocation(line: 2282, column: 2, scope: !8828)
!8844 = !DILocation(line: 2283, column: 1, scope: !8828)
!8845 = distinct !DISubprogram(name: "multires_apply_smat", scope: !3, file: !3, line: 2171, type: !8846, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!8846 = !DISubroutineType(types: !8847)
!8847 = !{null, !2687, !2689, !413}
!8848 = !DILocalVariable(name: "scene", arg: 1, scope: !8845, file: !3, line: 2171, type: !2687)
!8849 = !DILocation(line: 2171, column: 40, scope: !8845)
!8850 = !DILocalVariable(name: "ob", arg: 2, scope: !8845, file: !3, line: 2171, type: !2689)
!8851 = !DILocation(line: 2171, column: 55, scope: !8845)
!8852 = !DILocalVariable(name: "smat", arg: 3, scope: !8845, file: !3, line: 2171, type: !413)
!8853 = !DILocation(line: 2171, column: 65, scope: !8845)
!8854 = !DILocalVariable(name: "dm", scope: !8845, file: !3, line: 2173, type: !915)
!8855 = !DILocation(line: 2173, column: 15, scope: !8845)
!8856 = !DILocalVariable(name: "cddm", scope: !8845, file: !3, line: 2173, type: !915)
!8857 = !DILocation(line: 2173, column: 27, scope: !8845)
!8858 = !DILocalVariable(name: "subdm", scope: !8845, file: !3, line: 2173, type: !915)
!8859 = !DILocation(line: 2173, column: 41, scope: !8845)
!8860 = !DILocalVariable(name: "gridData", scope: !8845, file: !3, line: 2174, type: !4611)
!8861 = !DILocation(line: 2174, column: 12, scope: !8845)
!8862 = !DILocalVariable(name: "subGridData", scope: !8845, file: !3, line: 2174, type: !4611)
!8863 = !DILocation(line: 2174, column: 24, scope: !8845)
!8864 = !DILocalVariable(name: "dm_key", scope: !8845, file: !3, line: 2175, type: !3133)
!8865 = !DILocation(line: 2175, column: 9, scope: !8845)
!8866 = !DILocalVariable(name: "subdm_key", scope: !8845, file: !3, line: 2175, type: !3133)
!8867 = !DILocation(line: 2175, column: 17, scope: !8845)
!8868 = !DILocalVariable(name: "me", scope: !8845, file: !3, line: 2176, type: !2466)
!8869 = !DILocation(line: 2176, column: 8, scope: !8845)
!8870 = !DILocation(line: 2176, column: 21, scope: !8845)
!8871 = !DILocation(line: 2176, column: 25, scope: !8845)
!8872 = !DILocation(line: 2176, column: 13, scope: !8845)
!8873 = !DILocalVariable(name: "mpoly", scope: !8845, file: !3, line: 2177, type: !4635)
!8874 = !DILocation(line: 2177, column: 9, scope: !8845)
!8875 = !DILocation(line: 2177, column: 17, scope: !8845)
!8876 = !DILocation(line: 2177, column: 21, scope: !8845)
!8877 = !DILocalVariable(name: "mdisps", scope: !8845, file: !3, line: 2179, type: !3566)
!8878 = !DILocation(line: 2179, column: 10, scope: !8845)
!8879 = !DILocalVariable(name: "gridOffset", scope: !8845, file: !3, line: 2180, type: !426)
!8880 = !DILocation(line: 2180, column: 7, scope: !8845)
!8881 = !DILocalVariable(name: "i", scope: !8845, file: !3, line: 2181, type: !196)
!8882 = !DILocation(line: 2181, column: 6, scope: !8845)
!8883 = !DILocalVariable(name: "gridSize", scope: !8845, file: !3, line: 2181, type: !196)
!8884 = !DILocation(line: 2181, column: 24, scope: !8845)
!8885 = !DILocalVariable(name: "dGridSize", scope: !8845, file: !3, line: 2181, type: !196)
!8886 = !DILocation(line: 2181, column: 34, scope: !8845)
!8887 = !DILocalVariable(name: "dSkip", scope: !8845, file: !3, line: 2181, type: !196)
!8888 = !DILocation(line: 2181, column: 45, scope: !8845)
!8889 = !DILocalVariable(name: "totvert", scope: !8845, file: !3, line: 2181, type: !196)
!8890 = !DILocation(line: 2181, column: 52, scope: !8845)
!8891 = !DILocalVariable(name: "vertCos", scope: !8845, file: !3, line: 2182, type: !413)
!8892 = !DILocation(line: 2182, column: 10, scope: !8845)
!8893 = !DILocalVariable(name: "mmd", scope: !8845, file: !3, line: 2183, type: !2391)
!8894 = !DILocation(line: 2183, column: 24, scope: !8845)
!8895 = !DILocation(line: 2183, column: 52, scope: !8845)
!8896 = !DILocation(line: 2183, column: 59, scope: !8845)
!8897 = !DILocation(line: 2183, column: 30, scope: !8845)
!8898 = !DILocalVariable(name: "high_mmd", scope: !8845, file: !3, line: 2184, type: !2392)
!8899 = !DILocation(line: 2184, column: 23, scope: !8845)
!8900 = !DILocation(line: 2186, column: 28, scope: !8845)
!8901 = !DILocation(line: 2186, column: 32, scope: !8845)
!8902 = !DILocation(line: 2186, column: 40, scope: !8845)
!8903 = !DILocation(line: 2186, column: 44, scope: !8845)
!8904 = !DILocation(line: 2186, column: 64, scope: !8845)
!8905 = !DILocation(line: 2186, column: 68, scope: !8845)
!8906 = !DILocation(line: 2186, column: 2, scope: !8845)
!8907 = !DILocation(line: 2187, column: 33, scope: !8845)
!8908 = !DILocation(line: 2187, column: 37, scope: !8845)
!8909 = !DILocation(line: 2187, column: 11, scope: !8845)
!8910 = !DILocation(line: 2187, column: 9, scope: !8845)
!8911 = !DILocation(line: 2189, column: 7, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 2189, column: 6)
!8913 = !DILocation(line: 2189, column: 14, scope: !8912)
!8914 = !DILocation(line: 2189, column: 18, scope: !8912)
!8915 = !DILocation(line: 2189, column: 22, scope: !8912)
!8916 = !DILocation(line: 2189, column: 26, scope: !8912)
!8917 = !DILocation(line: 2189, column: 31, scope: !8912)
!8918 = !DILocation(line: 2189, column: 6, scope: !8845)
!8919 = !DILocation(line: 2189, column: 39, scope: !8912)
!8920 = !DILocation(line: 2192, column: 14, scope: !8845)
!8921 = !DILocation(line: 2192, column: 13, scope: !8845)
!8922 = !DILocation(line: 2193, column: 26, scope: !8845)
!8923 = !DILocation(line: 2193, column: 11, scope: !8845)
!8924 = !DILocation(line: 2193, column: 15, scope: !8845)
!8925 = !DILocation(line: 2196, column: 26, scope: !8845)
!8926 = !DILocation(line: 2196, column: 44, scope: !8845)
!8927 = !DILocation(line: 2196, column: 10, scope: !8845)
!8928 = !DILocation(line: 2196, column: 8, scope: !8845)
!8929 = !DILocation(line: 2199, column: 33, scope: !8845)
!8930 = !DILocation(line: 2199, column: 40, scope: !8845)
!8931 = !DILocation(line: 2199, column: 44, scope: !8845)
!8932 = !DILocation(line: 2199, column: 9, scope: !8845)
!8933 = !DILocation(line: 2199, column: 7, scope: !8845)
!8934 = !DILocation(line: 2201, column: 12, scope: !8845)
!8935 = !DILocation(line: 2201, column: 18, scope: !8845)
!8936 = !DILocation(line: 2201, column: 30, scope: !8845)
!8937 = !DILocation(line: 2201, column: 10, scope: !8845)
!8938 = !DILocation(line: 2202, column: 12, scope: !8845)
!8939 = !DILocation(line: 2202, column: 43, scope: !8845)
!8940 = !DILocation(line: 2202, column: 41, scope: !8845)
!8941 = !DILocation(line: 2202, column: 10, scope: !8845)
!8942 = !DILocation(line: 2203, column: 2, scope: !8845)
!8943 = !DILocation(line: 2203, column: 8, scope: !8845)
!8944 = !DILocation(line: 2203, column: 19, scope: !8845)
!8945 = !DILocation(line: 2203, column: 25, scope: !8845)
!8946 = !DILocation(line: 2204, column: 9, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 2204, column: 2)
!8948 = !DILocation(line: 2204, column: 7, scope: !8947)
!8949 = !DILocation(line: 2204, column: 14, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8947, file: !3, line: 2204, column: 2)
!8951 = !DILocation(line: 2204, column: 18, scope: !8950)
!8952 = !DILocation(line: 2204, column: 16, scope: !8950)
!8953 = !DILocation(line: 2204, column: 2, scope: !8947)
!8954 = !DILocation(line: 2205, column: 13, scope: !8950)
!8955 = !DILocation(line: 2205, column: 19, scope: !8950)
!8956 = !DILocation(line: 2205, column: 27, scope: !8950)
!8957 = !DILocation(line: 2205, column: 3, scope: !8950)
!8958 = !DILocation(line: 2204, column: 28, scope: !8950)
!8959 = !DILocation(line: 2204, column: 2, scope: !8950)
!8960 = distinct !{!8960, !8953, !8961}
!8961 = !DILocation(line: 2205, column: 29, scope: !8947)
!8962 = !DILocation(line: 2206, column: 25, scope: !8845)
!8963 = !DILocation(line: 2206, column: 31, scope: !8845)
!8964 = !DILocation(line: 2206, column: 2, scope: !8845)
!8965 = !DILocation(line: 2207, column: 2, scope: !8845)
!8966 = !DILocation(line: 2207, column: 12, scope: !8845)
!8967 = !DILocation(line: 2210, column: 31, scope: !8845)
!8968 = !DILocation(line: 2210, column: 35, scope: !8845)
!8969 = !DILocation(line: 2210, column: 50, scope: !8845)
!8970 = !DILocation(line: 2210, column: 41, scope: !8845)
!8971 = !DILocation(line: 2210, column: 67, scope: !8845)
!8972 = !DILocation(line: 2210, column: 58, scope: !8845)
!8973 = !DILocation(line: 2210, column: 78, scope: !8845)
!8974 = !DILocation(line: 2210, column: 83, scope: !8845)
!8975 = !DILocation(line: 2210, column: 89, scope: !8845)
!8976 = !DILocation(line: 2210, column: 7, scope: !8845)
!8977 = !DILocation(line: 2210, column: 5, scope: !8845)
!8978 = !DILocation(line: 2211, column: 2, scope: !8845)
!8979 = !DILocation(line: 2211, column: 8, scope: !8845)
!8980 = !DILocation(line: 2211, column: 16, scope: !8845)
!8981 = !DILocation(line: 2213, column: 13, scope: !8845)
!8982 = !DILocation(line: 2213, column: 17, scope: !8845)
!8983 = !DILocation(line: 2213, column: 29, scope: !8845)
!8984 = !DILocation(line: 2213, column: 11, scope: !8845)
!8985 = !DILocation(line: 2214, column: 13, scope: !8845)
!8986 = !DILocation(line: 2214, column: 17, scope: !8845)
!8987 = !DILocation(line: 2214, column: 29, scope: !8845)
!8988 = !DILocation(line: 2214, column: 11, scope: !8845)
!8989 = !DILocation(line: 2215, column: 15, scope: !8845)
!8990 = !DILocation(line: 2215, column: 19, scope: !8845)
!8991 = !DILocation(line: 2215, column: 33, scope: !8845)
!8992 = !DILocation(line: 2215, column: 13, scope: !8845)
!8993 = !DILocation(line: 2216, column: 2, scope: !8845)
!8994 = !DILocation(line: 2216, column: 6, scope: !8845)
!8995 = !DILocation(line: 2216, column: 17, scope: !8845)
!8996 = !DILocation(line: 2217, column: 16, scope: !8845)
!8997 = !DILocation(line: 2217, column: 23, scope: !8845)
!8998 = !DILocation(line: 2217, column: 35, scope: !8845)
!8999 = !DILocation(line: 2217, column: 14, scope: !8845)
!9000 = !DILocation(line: 2218, column: 2, scope: !8845)
!9001 = !DILocation(line: 2218, column: 9, scope: !8845)
!9002 = !DILocation(line: 2218, column: 20, scope: !8845)
!9003 = !DILocation(line: 2220, column: 41, scope: !8845)
!9004 = !DILocation(line: 2220, column: 14, scope: !8845)
!9005 = !DILocation(line: 2220, column: 12, scope: !8845)
!9006 = !DILocation(line: 2221, column: 11, scope: !8845)
!9007 = !DILocation(line: 2221, column: 21, scope: !8845)
!9008 = !DILocation(line: 2221, column: 29, scope: !8845)
!9009 = !DILocation(line: 2221, column: 38, scope: !8845)
!9010 = !DILocation(line: 2221, column: 26, scope: !8845)
!9011 = !DILocation(line: 2221, column: 8, scope: !8845)
!9012 = !DILocation(line: 2226, column: 9, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 2226, column: 2)
!9014 = !DILocation(line: 2226, column: 7, scope: !9013)
!9015 = !DILocation(line: 2226, column: 14, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 2226, column: 2)
!9017 = !DILocation(line: 2226, column: 18, scope: !9016)
!9018 = !DILocation(line: 2226, column: 22, scope: !9016)
!9019 = !DILocation(line: 2226, column: 16, scope: !9016)
!9020 = !DILocation(line: 2226, column: 2, scope: !9013)
!9021 = !DILocalVariable(name: "numVerts", scope: !9022, file: !3, line: 2227, type: !2620)
!9022 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 2226, column: 36)
!9023 = !DILocation(line: 2227, column: 13, scope: !9022)
!9024 = !DILocation(line: 2227, column: 24, scope: !9022)
!9025 = !DILocation(line: 2227, column: 30, scope: !9022)
!9026 = !DILocation(line: 2227, column: 33, scope: !9022)
!9027 = !DILocalVariable(name: "mdisp", scope: !9022, file: !3, line: 2228, type: !3566)
!9028 = !DILocation(line: 2228, column: 11, scope: !9022)
!9029 = !DILocation(line: 2228, column: 20, scope: !9022)
!9030 = !DILocation(line: 2228, column: 27, scope: !9022)
!9031 = !DILocation(line: 2228, column: 33, scope: !9022)
!9032 = !DILocation(line: 2228, column: 36, scope: !9022)
!9033 = !DILocalVariable(name: "S", scope: !9022, file: !3, line: 2229, type: !196)
!9034 = !DILocation(line: 2229, column: 7, scope: !9022)
!9035 = !DILocalVariable(name: "x", scope: !9022, file: !3, line: 2229, type: !196)
!9036 = !DILocation(line: 2229, column: 10, scope: !9022)
!9037 = !DILocalVariable(name: "y", scope: !9022, file: !3, line: 2229, type: !196)
!9038 = !DILocation(line: 2229, column: 13, scope: !9022)
!9039 = !DILocalVariable(name: "gIndex", scope: !9022, file: !3, line: 2229, type: !196)
!9040 = !DILocation(line: 2229, column: 16, scope: !9022)
!9041 = !DILocation(line: 2229, column: 25, scope: !9022)
!9042 = !DILocation(line: 2229, column: 36, scope: !9022)
!9043 = !DILocation(line: 2231, column: 10, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 2231, column: 3)
!9045 = !DILocation(line: 2231, column: 8, scope: !9044)
!9046 = !DILocation(line: 2231, column: 15, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 2231, column: 3)
!9048 = !DILocation(line: 2231, column: 19, scope: !9047)
!9049 = !DILocation(line: 2231, column: 17, scope: !9047)
!9050 = !DILocation(line: 2231, column: 3, scope: !9044)
!9051 = !DILocalVariable(name: "grid", scope: !9052, file: !3, line: 2232, type: !2614)
!9052 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 2231, column: 53)
!9053 = !DILocation(line: 2232, column: 13, scope: !9052)
!9054 = !DILocation(line: 2232, column: 20, scope: !9052)
!9055 = !DILocation(line: 2232, column: 29, scope: !9052)
!9056 = !DILocalVariable(name: "subgrid", scope: !9052, file: !3, line: 2233, type: !2614)
!9057 = !DILocation(line: 2233, column: 13, scope: !9052)
!9058 = !DILocation(line: 2233, column: 23, scope: !9052)
!9059 = !DILocation(line: 2233, column: 35, scope: !9052)
!9060 = !DILocalVariable(name: "dispgrid", scope: !9052, file: !3, line: 2234, type: !413)
!9061 = !DILocation(line: 2234, column: 12, scope: !9052)
!9062 = !DILocation(line: 2234, column: 27, scope: !9052)
!9063 = !DILocation(line: 2234, column: 34, scope: !9052)
!9064 = !DILocation(line: 2236, column: 11, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2236, column: 4)
!9066 = !DILocation(line: 2236, column: 9, scope: !9065)
!9067 = !DILocation(line: 2236, column: 16, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9065, file: !3, line: 2236, column: 4)
!9069 = !DILocation(line: 2236, column: 20, scope: !9068)
!9070 = !DILocation(line: 2236, column: 18, scope: !9068)
!9071 = !DILocation(line: 2236, column: 4, scope: !9065)
!9072 = !DILocation(line: 2237, column: 12, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 2237, column: 5)
!9074 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 2236, column: 35)
!9075 = !DILocation(line: 2237, column: 10, scope: !9073)
!9076 = !DILocation(line: 2237, column: 17, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 2237, column: 5)
!9078 = !DILocation(line: 2237, column: 21, scope: !9077)
!9079 = !DILocation(line: 2237, column: 19, scope: !9077)
!9080 = !DILocation(line: 2237, column: 5, scope: !9073)
!9081 = !DILocalVariable(name: "co", scope: !9082, file: !3, line: 2238, type: !418)
!9082 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 2237, column: 36)
!9083 = !DILocation(line: 2238, column: 13, scope: !9082)
!9084 = !DILocation(line: 2238, column: 44, scope: !9082)
!9085 = !DILocation(line: 2238, column: 50, scope: !9082)
!9086 = !DILocation(line: 2238, column: 53, scope: !9082)
!9087 = !DILocation(line: 2238, column: 18, scope: !9082)
!9088 = !DILocalVariable(name: "sco", scope: !9082, file: !3, line: 2239, type: !418)
!9089 = !DILocation(line: 2239, column: 13, scope: !9082)
!9090 = !DILocation(line: 2239, column: 48, scope: !9082)
!9091 = !DILocation(line: 2239, column: 57, scope: !9082)
!9092 = !DILocation(line: 2239, column: 60, scope: !9082)
!9093 = !DILocation(line: 2239, column: 19, scope: !9082)
!9094 = !DILocalVariable(name: "data", scope: !9082, file: !3, line: 2240, type: !418)
!9095 = !DILocation(line: 2240, column: 13, scope: !9082)
!9096 = !DILocation(line: 2240, column: 20, scope: !9082)
!9097 = !DILocation(line: 2240, column: 29, scope: !9082)
!9098 = !DILocation(line: 2240, column: 41, scope: !9082)
!9099 = !DILocation(line: 2240, column: 39, scope: !9082)
!9100 = !DILocation(line: 2240, column: 45, scope: !9082)
!9101 = !DILocation(line: 2240, column: 43, scope: !9082)
!9102 = !DILocation(line: 2240, column: 53, scope: !9082)
!9103 = !DILocation(line: 2240, column: 57, scope: !9082)
!9104 = !DILocation(line: 2240, column: 55, scope: !9082)
!9105 = !DILocation(line: 2240, column: 51, scope: !9082)
!9106 = !DILocalVariable(name: "mat", scope: !9082, file: !3, line: 2241, type: !640)
!9107 = !DILocation(line: 2241, column: 12, scope: !9082)
!9108 = !DILocalVariable(name: "disp", scope: !9082, file: !3, line: 2241, type: !387)
!9109 = !DILocation(line: 2241, column: 23, scope: !9082)
!9110 = !DILocation(line: 2244, column: 26, scope: !9082)
!9111 = !DILocation(line: 2244, column: 40, scope: !9082)
!9112 = !DILocation(line: 2244, column: 43, scope: !9082)
!9113 = !DILocation(line: 2244, column: 46, scope: !9082)
!9114 = !DILocation(line: 2244, column: 6, scope: !9082)
!9115 = !DILocation(line: 2247, column: 16, scope: !9082)
!9116 = !DILocation(line: 2247, column: 22, scope: !9082)
!9117 = !DILocation(line: 2247, column: 6, scope: !9082)
!9118 = !DILocation(line: 2248, column: 18, scope: !9082)
!9119 = !DILocation(line: 2248, column: 24, scope: !9082)
!9120 = !DILocation(line: 2248, column: 29, scope: !9082)
!9121 = !DILocation(line: 2248, column: 6, scope: !9082)
!9122 = !DILocation(line: 2251, column: 16, scope: !9082)
!9123 = !DILocation(line: 2251, column: 6, scope: !9082)
!9124 = !DILocation(line: 2252, column: 18, scope: !9082)
!9125 = !DILocation(line: 2252, column: 24, scope: !9082)
!9126 = !DILocation(line: 2252, column: 29, scope: !9082)
!9127 = !DILocation(line: 2252, column: 6, scope: !9082)
!9128 = !DILocation(line: 2253, column: 5, scope: !9082)
!9129 = !DILocation(line: 2237, column: 32, scope: !9077)
!9130 = !DILocation(line: 2237, column: 5, scope: !9077)
!9131 = distinct !{!9131, !9080, !9132}
!9132 = !DILocation(line: 2253, column: 5, scope: !9073)
!9133 = !DILocation(line: 2254, column: 4, scope: !9074)
!9134 = !DILocation(line: 2236, column: 31, scope: !9068)
!9135 = !DILocation(line: 2236, column: 4, scope: !9068)
!9136 = distinct !{!9136, !9071, !9137}
!9137 = !DILocation(line: 2254, column: 4, scope: !9065)
!9138 = !DILocation(line: 2255, column: 3, scope: !9052)
!9139 = !DILocation(line: 2231, column: 29, scope: !9047)
!9140 = !DILocation(line: 2231, column: 34, scope: !9047)
!9141 = !DILocation(line: 2231, column: 49, scope: !9047)
!9142 = !DILocation(line: 2231, column: 3, scope: !9047)
!9143 = distinct !{!9143, !9050, !9144}
!9144 = !DILocation(line: 2255, column: 3, scope: !9044)
!9145 = !DILocation(line: 2256, column: 2, scope: !9022)
!9146 = !DILocation(line: 2226, column: 31, scope: !9016)
!9147 = !DILocation(line: 2226, column: 2, scope: !9016)
!9148 = distinct !{!9148, !9020, !9149}
!9149 = !DILocation(line: 2256, column: 2, scope: !9013)
!9150 = !DILocation(line: 2258, column: 2, scope: !8845)
!9151 = !DILocation(line: 2258, column: 6, scope: !8845)
!9152 = !DILocation(line: 2258, column: 14, scope: !8845)
!9153 = !DILocation(line: 2259, column: 2, scope: !8845)
!9154 = !DILocation(line: 2259, column: 9, scope: !8845)
!9155 = !DILocation(line: 2259, column: 17, scope: !8845)
!9156 = !DILocation(line: 2260, column: 1, scope: !8845)
!9157 = distinct !DISubprogram(name: "multiresModifier_prepare_join", scope: !3, file: !3, line: 2285, type: !9158, scopeLine: 2286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9158 = !DISubroutineType(types: !9159)
!9159 = !{null, !2687, !2689, !2689}
!9160 = !DILocalVariable(name: "scene", arg: 1, scope: !9157, file: !3, line: 2285, type: !2687)
!9161 = !DILocation(line: 2285, column: 43, scope: !9157)
!9162 = !DILocalVariable(name: "ob", arg: 2, scope: !9157, file: !3, line: 2285, type: !2689)
!9163 = !DILocation(line: 2285, column: 58, scope: !9157)
!9164 = !DILocalVariable(name: "to_ob", arg: 3, scope: !9157, file: !3, line: 2285, type: !2689)
!9165 = !DILocation(line: 2285, column: 70, scope: !9157)
!9166 = !DILocalVariable(name: "smat", scope: !9157, file: !3, line: 2287, type: !640)
!9167 = !DILocation(line: 2287, column: 8, scope: !9157)
!9168 = !DILocalVariable(name: "tmat", scope: !9157, file: !3, line: 2287, type: !640)
!9169 = !DILocation(line: 2287, column: 20, scope: !9157)
!9170 = !DILocalVariable(name: "mat", scope: !9157, file: !3, line: 2287, type: !640)
!9171 = !DILocation(line: 2287, column: 32, scope: !9157)
!9172 = !DILocation(line: 2288, column: 23, scope: !9157)
!9173 = !DILocation(line: 2288, column: 30, scope: !9157)
!9174 = !DILocation(line: 2288, column: 34, scope: !9157)
!9175 = !DILocation(line: 2288, column: 2, scope: !9157)
!9176 = !DILocation(line: 2291, column: 27, scope: !9157)
!9177 = !DILocation(line: 2291, column: 34, scope: !9157)
!9178 = !DILocation(line: 2291, column: 2, scope: !9157)
!9179 = !DILocation(line: 2292, column: 12, scope: !9157)
!9180 = !DILocation(line: 2292, column: 2, scope: !9157)
!9181 = !DILocation(line: 2293, column: 27, scope: !9157)
!9182 = !DILocation(line: 2293, column: 31, scope: !9157)
!9183 = !DILocation(line: 2293, column: 2, scope: !9157)
!9184 = !DILocation(line: 2294, column: 14, scope: !9157)
!9185 = !DILocation(line: 2294, column: 19, scope: !9157)
!9186 = !DILocation(line: 2294, column: 25, scope: !9157)
!9187 = !DILocation(line: 2294, column: 2, scope: !9157)
!9188 = !DILocation(line: 2296, column: 22, scope: !9157)
!9189 = !DILocation(line: 2296, column: 29, scope: !9157)
!9190 = !DILocation(line: 2296, column: 33, scope: !9157)
!9191 = !DILocation(line: 2296, column: 2, scope: !9157)
!9192 = !DILocation(line: 2297, column: 1, scope: !9157)
!9193 = distinct !DISubprogram(name: "multires_sync_levels", scope: !3, file: !3, line: 2149, type: !9158, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9194 = !DILocalVariable(name: "scene", arg: 1, scope: !9193, file: !3, line: 2149, type: !2687)
!9195 = !DILocation(line: 2149, column: 41, scope: !9193)
!9196 = !DILocalVariable(name: "ob", arg: 2, scope: !9193, file: !3, line: 2149, type: !2689)
!9197 = !DILocation(line: 2149, column: 56, scope: !9193)
!9198 = !DILocalVariable(name: "to_ob", arg: 3, scope: !9193, file: !3, line: 2149, type: !2689)
!9199 = !DILocation(line: 2149, column: 68, scope: !9193)
!9200 = !DILocalVariable(name: "mmd", scope: !9193, file: !3, line: 2151, type: !2391)
!9201 = !DILocation(line: 2151, column: 24, scope: !9193)
!9202 = !DILocation(line: 2151, column: 52, scope: !9193)
!9203 = !DILocation(line: 2151, column: 59, scope: !9193)
!9204 = !DILocation(line: 2151, column: 30, scope: !9193)
!9205 = !DILocalVariable(name: "to_mmd", scope: !9193, file: !3, line: 2152, type: !2391)
!9206 = !DILocation(line: 2152, column: 24, scope: !9193)
!9207 = !DILocation(line: 2152, column: 55, scope: !9193)
!9208 = !DILocation(line: 2152, column: 62, scope: !9193)
!9209 = !DILocation(line: 2152, column: 33, scope: !9193)
!9210 = !DILocation(line: 2154, column: 7, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 2154, column: 6)
!9212 = !DILocation(line: 2154, column: 6, scope: !9193)
!9213 = !DILocation(line: 2160, column: 30, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9211, file: !3, line: 2154, column: 12)
!9215 = !DILocation(line: 2160, column: 34, scope: !9214)
!9216 = !DILocation(line: 2160, column: 3, scope: !9214)
!9217 = !DILocation(line: 2161, column: 2, scope: !9214)
!9218 = !DILocation(line: 2163, column: 6, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 2163, column: 6)
!9220 = !DILocation(line: 2163, column: 10, scope: !9219)
!9221 = !DILocation(line: 2163, column: 13, scope: !9219)
!9222 = !DILocation(line: 2163, column: 6, scope: !9193)
!9223 = !DILocation(line: 2164, column: 7, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 2164, column: 7)
!9225 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 2163, column: 21)
!9226 = !DILocation(line: 2164, column: 12, scope: !9224)
!9227 = !DILocation(line: 2164, column: 21, scope: !9224)
!9228 = !DILocation(line: 2164, column: 29, scope: !9224)
!9229 = !DILocation(line: 2164, column: 19, scope: !9224)
!9230 = !DILocation(line: 2164, column: 7, scope: !9225)
!9231 = !DILocation(line: 2165, column: 24, scope: !9224)
!9232 = !DILocation(line: 2165, column: 29, scope: !9224)
!9233 = !DILocation(line: 2165, column: 33, scope: !9224)
!9234 = !DILocation(line: 2165, column: 41, scope: !9224)
!9235 = !DILocation(line: 2165, column: 4, scope: !9224)
!9236 = !DILocation(line: 2167, column: 23, scope: !9224)
!9237 = !DILocation(line: 2167, column: 28, scope: !9224)
!9238 = !DILocation(line: 2167, column: 32, scope: !9224)
!9239 = !DILocation(line: 2167, column: 40, scope: !9224)
!9240 = !DILocation(line: 2167, column: 51, scope: !9224)
!9241 = !DILocation(line: 2167, column: 56, scope: !9224)
!9242 = !DILocation(line: 2167, column: 4, scope: !9224)
!9243 = !DILocation(line: 2168, column: 2, scope: !9225)
!9244 = !DILocation(line: 2169, column: 1, scope: !9193)
!9245 = distinct !DISubprogram(name: "multires_topology_changed", scope: !3, file: !3, line: 2300, type: !2630, scopeLine: 2301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9246 = !DILocalVariable(name: "me", arg: 1, scope: !9245, file: !3, line: 2300, type: !2466)
!9247 = !DILocation(line: 2300, column: 38, scope: !9245)
!9248 = !DILocalVariable(name: "mdisp", scope: !9245, file: !3, line: 2302, type: !3566)
!9249 = !DILocation(line: 2302, column: 10, scope: !9245)
!9250 = !DILocalVariable(name: "cur", scope: !9245, file: !3, line: 2302, type: !3566)
!9251 = !DILocation(line: 2302, column: 25, scope: !9245)
!9252 = !DILocalVariable(name: "i", scope: !9245, file: !3, line: 2303, type: !196)
!9253 = !DILocation(line: 2303, column: 6, scope: !9245)
!9254 = !DILocalVariable(name: "grid", scope: !9245, file: !3, line: 2303, type: !196)
!9255 = !DILocation(line: 2303, column: 9, scope: !9245)
!9256 = !DILocation(line: 2305, column: 28, scope: !9245)
!9257 = !DILocation(line: 2305, column: 32, scope: !9245)
!9258 = !DILocation(line: 2305, column: 40, scope: !9245)
!9259 = !DILocation(line: 2305, column: 44, scope: !9245)
!9260 = !DILocation(line: 2305, column: 64, scope: !9245)
!9261 = !DILocation(line: 2305, column: 68, scope: !9245)
!9262 = !DILocation(line: 2305, column: 2, scope: !9245)
!9263 = !DILocation(line: 2306, column: 32, scope: !9245)
!9264 = !DILocation(line: 2306, column: 36, scope: !9245)
!9265 = !DILocation(line: 2306, column: 10, scope: !9245)
!9266 = !DILocation(line: 2306, column: 8, scope: !9245)
!9267 = !DILocation(line: 2308, column: 7, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 2308, column: 6)
!9269 = !DILocation(line: 2308, column: 6, scope: !9245)
!9270 = !DILocation(line: 2309, column: 3, scope: !9268)
!9271 = !DILocation(line: 2311, column: 8, scope: !9245)
!9272 = !DILocation(line: 2311, column: 6, scope: !9245)
!9273 = !DILocation(line: 2312, column: 9, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 2312, column: 2)
!9275 = !DILocation(line: 2312, column: 7, scope: !9274)
!9276 = !DILocation(line: 2312, column: 14, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9274, file: !3, line: 2312, column: 2)
!9278 = !DILocation(line: 2312, column: 18, scope: !9277)
!9279 = !DILocation(line: 2312, column: 22, scope: !9277)
!9280 = !DILocation(line: 2312, column: 16, scope: !9277)
!9281 = !DILocation(line: 2312, column: 2, scope: !9274)
!9282 = !DILocation(line: 2313, column: 7, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 2313, column: 7)
!9284 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 2312, column: 43)
!9285 = !DILocation(line: 2313, column: 12, scope: !9283)
!9286 = !DILocation(line: 2313, column: 7, scope: !9284)
!9287 = !DILocation(line: 2314, column: 11, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 2313, column: 21)
!9289 = !DILocation(line: 2314, column: 18, scope: !9288)
!9290 = !DILocation(line: 2314, column: 9, scope: !9288)
!9291 = !DILocation(line: 2316, column: 4, scope: !9288)
!9292 = !DILocation(line: 2318, column: 2, scope: !9284)
!9293 = !DILocation(line: 2312, column: 32, scope: !9277)
!9294 = !DILocation(line: 2312, column: 39, scope: !9277)
!9295 = !DILocation(line: 2312, column: 2, scope: !9277)
!9296 = distinct !{!9296, !9281, !9297}
!9297 = !DILocation(line: 2318, column: 2, scope: !9274)
!9298 = !DILocation(line: 2320, column: 9, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 2320, column: 2)
!9300 = !DILocation(line: 2320, column: 7, scope: !9299)
!9301 = !DILocation(line: 2320, column: 14, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 2320, column: 2)
!9303 = !DILocation(line: 2320, column: 18, scope: !9302)
!9304 = !DILocation(line: 2320, column: 22, scope: !9302)
!9305 = !DILocation(line: 2320, column: 16, scope: !9302)
!9306 = !DILocation(line: 2320, column: 2, scope: !9299)
!9307 = !DILocation(line: 2322, column: 8, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9309, file: !3, line: 2322, column: 7)
!9309 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 2320, column: 45)
!9310 = !DILocation(line: 2322, column: 15, scope: !9308)
!9311 = !DILocation(line: 2322, column: 23, scope: !9308)
!9312 = !DILocation(line: 2322, column: 27, scope: !9308)
!9313 = !DILocation(line: 2322, column: 34, scope: !9308)
!9314 = !DILocation(line: 2322, column: 7, scope: !9309)
!9315 = !DILocation(line: 2323, column: 8, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2323, column: 8)
!9317 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 2322, column: 41)
!9318 = !DILocation(line: 2323, column: 8, scope: !9317)
!9319 = !DILocation(line: 2324, column: 22, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 2323, column: 14)
!9321 = !DILocation(line: 2324, column: 5, scope: !9320)
!9322 = !DILocation(line: 2324, column: 12, scope: !9320)
!9323 = !DILocation(line: 2324, column: 20, scope: !9320)
!9324 = !DILocation(line: 2325, column: 20, scope: !9320)
!9325 = !DILocation(line: 2325, column: 36, scope: !9320)
!9326 = !DILocation(line: 2325, column: 43, scope: !9320)
!9327 = !DILocation(line: 2325, column: 34, scope: !9320)
!9328 = !DILocation(line: 2325, column: 32, scope: !9320)
!9329 = !DILocation(line: 2325, column: 51, scope: !9320)
!9330 = !DILocation(line: 2325, column: 5, scope: !9320)
!9331 = !DILocation(line: 2325, column: 12, scope: !9320)
!9332 = !DILocation(line: 2325, column: 18, scope: !9320)
!9333 = !DILocation(line: 2326, column: 4, scope: !9320)
!9334 = !DILocation(line: 2328, column: 4, scope: !9317)
!9335 = !DILocation(line: 2330, column: 2, scope: !9309)
!9336 = !DILocation(line: 2320, column: 32, scope: !9302)
!9337 = !DILocation(line: 2320, column: 41, scope: !9302)
!9338 = !DILocation(line: 2320, column: 2, scope: !9302)
!9339 = distinct !{!9339, !9306, !9340}
!9340 = !DILocation(line: 2330, column: 2, scope: !9299)
!9341 = !DILocation(line: 2331, column: 1, scope: !9245)
!9342 = distinct !DISubprogram(name: "mdisp_rot_face_to_crn", scope: !3, file: !3, line: 2336, type: !9343, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{!196, !2620, !2620, !921, !921, !418, !418}
!9345 = !DILocalVariable(name: "corners", arg: 1, scope: !9342, file: !3, line: 2336, type: !2620)
!9346 = !DILocation(line: 2336, column: 37, scope: !9342)
!9347 = !DILocalVariable(name: "face_side", arg: 2, scope: !9342, file: !3, line: 2336, type: !2620)
!9348 = !DILocation(line: 2336, column: 56, scope: !9342)
!9349 = !DILocalVariable(name: "u", arg: 3, scope: !9342, file: !3, line: 2336, type: !921)
!9350 = !DILocation(line: 2336, column: 79, scope: !9342)
!9351 = !DILocalVariable(name: "v", arg: 4, scope: !9342, file: !3, line: 2336, type: !921)
!9352 = !DILocation(line: 2336, column: 94, scope: !9342)
!9353 = !DILocalVariable(name: "x", arg: 5, scope: !9342, file: !3, line: 2336, type: !418)
!9354 = !DILocation(line: 2336, column: 104, scope: !9342)
!9355 = !DILocalVariable(name: "y", arg: 6, scope: !9342, file: !3, line: 2336, type: !418)
!9356 = !DILocation(line: 2336, column: 114, scope: !9342)
!9357 = !DILocalVariable(name: "offset", scope: !9342, file: !3, line: 2338, type: !921)
!9358 = !DILocation(line: 2338, column: 14, scope: !9342)
!9359 = !DILocation(line: 2338, column: 23, scope: !9342)
!9360 = !DILocation(line: 2338, column: 33, scope: !9342)
!9361 = !DILocation(line: 2338, column: 40, scope: !9342)
!9362 = !DILocalVariable(name: "S", scope: !9342, file: !3, line: 2339, type: !196)
!9363 = !DILocation(line: 2339, column: 6, scope: !9342)
!9364 = !DILocation(line: 2341, column: 6, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 2341, column: 6)
!9366 = !DILocation(line: 2341, column: 14, scope: !9365)
!9367 = !DILocation(line: 2341, column: 6, scope: !9342)
!9368 = !DILocation(line: 2342, column: 7, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 2342, column: 7)
!9370 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 2341, column: 20)
!9371 = !DILocation(line: 2342, column: 12, scope: !9369)
!9372 = !DILocation(line: 2342, column: 9, scope: !9369)
!9373 = !DILocation(line: 2342, column: 19, scope: !9369)
!9374 = !DILocation(line: 2342, column: 22, scope: !9369)
!9375 = !DILocation(line: 2342, column: 27, scope: !9369)
!9376 = !DILocation(line: 2342, column: 24, scope: !9369)
!9377 = !DILocation(line: 2342, column: 7, scope: !9370)
!9378 = !DILocation(line: 2342, column: 37, scope: !9369)
!9379 = !DILocation(line: 2342, column: 35, scope: !9369)
!9380 = !DILocation(line: 2343, column: 12, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 2343, column: 12)
!9382 = !DILocation(line: 2343, column: 16, scope: !9381)
!9383 = !DILocation(line: 2343, column: 14, scope: !9381)
!9384 = !DILocation(line: 2343, column: 24, scope: !9381)
!9385 = !DILocation(line: 2343, column: 27, scope: !9381)
!9386 = !DILocation(line: 2343, column: 32, scope: !9381)
!9387 = !DILocation(line: 2343, column: 29, scope: !9381)
!9388 = !DILocation(line: 2343, column: 12, scope: !9369)
!9389 = !DILocation(line: 2343, column: 42, scope: !9381)
!9390 = !DILocation(line: 2343, column: 40, scope: !9381)
!9391 = !DILocation(line: 2344, column: 12, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 2344, column: 12)
!9393 = !DILocation(line: 2344, column: 16, scope: !9392)
!9394 = !DILocation(line: 2344, column: 14, scope: !9392)
!9395 = !DILocation(line: 2344, column: 24, scope: !9392)
!9396 = !DILocation(line: 2344, column: 27, scope: !9392)
!9397 = !DILocation(line: 2344, column: 31, scope: !9392)
!9398 = !DILocation(line: 2344, column: 29, scope: !9392)
!9399 = !DILocation(line: 2344, column: 12, scope: !9381)
!9400 = !DILocation(line: 2344, column: 41, scope: !9392)
!9401 = !DILocation(line: 2344, column: 39, scope: !9392)
!9402 = !DILocation(line: 2345, column: 12, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9392, file: !3, line: 2345, column: 12)
!9404 = !DILocation(line: 2345, column: 17, scope: !9403)
!9405 = !DILocation(line: 2345, column: 14, scope: !9403)
!9406 = !DILocation(line: 2345, column: 24, scope: !9403)
!9407 = !DILocation(line: 2345, column: 27, scope: !9403)
!9408 = !DILocation(line: 2345, column: 32, scope: !9403)
!9409 = !DILocation(line: 2345, column: 29, scope: !9403)
!9410 = !DILocation(line: 2345, column: 12, scope: !9392)
!9411 = !DILocation(line: 2345, column: 42, scope: !9403)
!9412 = !DILocation(line: 2345, column: 40, scope: !9403)
!9413 = !DILocation(line: 2347, column: 7, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 2347, column: 7)
!9415 = !DILocation(line: 2347, column: 9, scope: !9414)
!9416 = !DILocation(line: 2347, column: 7, scope: !9370)
!9417 = !DILocation(line: 2348, column: 9, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 2347, column: 15)
!9419 = !DILocation(line: 2348, column: 18, scope: !9418)
!9420 = !DILocation(line: 2348, column: 16, scope: !9418)
!9421 = !DILocation(line: 2348, column: 5, scope: !9418)
!9422 = !DILocation(line: 2348, column: 7, scope: !9418)
!9423 = !DILocation(line: 2349, column: 9, scope: !9418)
!9424 = !DILocation(line: 2349, column: 18, scope: !9418)
!9425 = !DILocation(line: 2349, column: 16, scope: !9418)
!9426 = !DILocation(line: 2349, column: 5, scope: !9418)
!9427 = !DILocation(line: 2349, column: 7, scope: !9418)
!9428 = !DILocation(line: 2350, column: 3, scope: !9418)
!9429 = !DILocation(line: 2351, column: 12, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 2351, column: 12)
!9431 = !DILocation(line: 2351, column: 14, scope: !9430)
!9432 = !DILocation(line: 2351, column: 12, scope: !9414)
!9433 = !DILocation(line: 2352, column: 9, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 2351, column: 20)
!9435 = !DILocation(line: 2352, column: 13, scope: !9434)
!9436 = !DILocation(line: 2352, column: 11, scope: !9434)
!9437 = !DILocation(line: 2352, column: 5, scope: !9434)
!9438 = !DILocation(line: 2352, column: 7, scope: !9434)
!9439 = !DILocation(line: 2353, column: 9, scope: !9434)
!9440 = !DILocation(line: 2353, column: 18, scope: !9434)
!9441 = !DILocation(line: 2353, column: 16, scope: !9434)
!9442 = !DILocation(line: 2353, column: 5, scope: !9434)
!9443 = !DILocation(line: 2353, column: 7, scope: !9434)
!9444 = !DILocation(line: 2354, column: 3, scope: !9434)
!9445 = !DILocation(line: 2355, column: 12, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 2355, column: 12)
!9447 = !DILocation(line: 2355, column: 14, scope: !9446)
!9448 = !DILocation(line: 2355, column: 12, scope: !9430)
!9449 = !DILocation(line: 2356, column: 9, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 2355, column: 20)
!9451 = !DILocation(line: 2356, column: 13, scope: !9450)
!9452 = !DILocation(line: 2356, column: 11, scope: !9450)
!9453 = !DILocation(line: 2356, column: 5, scope: !9450)
!9454 = !DILocation(line: 2356, column: 7, scope: !9450)
!9455 = !DILocation(line: 2357, column: 9, scope: !9450)
!9456 = !DILocation(line: 2357, column: 13, scope: !9450)
!9457 = !DILocation(line: 2357, column: 11, scope: !9450)
!9458 = !DILocation(line: 2357, column: 5, scope: !9450)
!9459 = !DILocation(line: 2357, column: 7, scope: !9450)
!9460 = !DILocation(line: 2358, column: 3, scope: !9450)
!9461 = !DILocation(line: 2359, column: 12, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 2359, column: 12)
!9463 = !DILocation(line: 2359, column: 14, scope: !9462)
!9464 = !DILocation(line: 2359, column: 12, scope: !9446)
!9465 = !DILocation(line: 2360, column: 9, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2359, column: 20)
!9467 = !DILocation(line: 2360, column: 18, scope: !9466)
!9468 = !DILocation(line: 2360, column: 16, scope: !9466)
!9469 = !DILocation(line: 2360, column: 5, scope: !9466)
!9470 = !DILocation(line: 2360, column: 7, scope: !9466)
!9471 = !DILocation(line: 2361, column: 9, scope: !9466)
!9472 = !DILocation(line: 2361, column: 13, scope: !9466)
!9473 = !DILocation(line: 2361, column: 11, scope: !9466)
!9474 = !DILocation(line: 2361, column: 5, scope: !9466)
!9475 = !DILocation(line: 2361, column: 7, scope: !9466)
!9476 = !DILocation(line: 2362, column: 3, scope: !9466)
!9477 = !DILocation(line: 2363, column: 2, scope: !9370)
!9478 = !DILocalVariable(name: "grid_size", scope: !9479, file: !3, line: 2365, type: !196)
!9479 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 2364, column: 7)
!9480 = !DILocation(line: 2365, column: 7, scope: !9479)
!9481 = !DILocation(line: 2365, column: 19, scope: !9479)
!9482 = !DILocalVariable(name: "w", scope: !9479, file: !3, line: 2366, type: !388)
!9483 = !DILocation(line: 2366, column: 9, scope: !9479)
!9484 = !DILocation(line: 2366, column: 14, scope: !9479)
!9485 = !DILocation(line: 2366, column: 24, scope: !9479)
!9486 = !DILocation(line: 2366, column: 13, scope: !9479)
!9487 = !DILocation(line: 2366, column: 31, scope: !9479)
!9488 = !DILocation(line: 2366, column: 29, scope: !9479)
!9489 = !DILocation(line: 2366, column: 35, scope: !9479)
!9490 = !DILocation(line: 2366, column: 33, scope: !9479)
!9491 = !DILocalVariable(name: "W1", scope: !9479, file: !3, line: 2367, type: !388)
!9492 = !DILocation(line: 2367, column: 9, scope: !9479)
!9493 = !DILocalVariable(name: "W2", scope: !9479, file: !3, line: 2367, type: !388)
!9494 = !DILocation(line: 2367, column: 13, scope: !9479)
!9495 = !DILocation(line: 2369, column: 7, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9479, file: !3, line: 2369, column: 7)
!9497 = !DILocation(line: 2369, column: 12, scope: !9496)
!9498 = !DILocation(line: 2369, column: 9, scope: !9496)
!9499 = !DILocation(line: 2369, column: 14, scope: !9496)
!9500 = !DILocation(line: 2369, column: 17, scope: !9496)
!9501 = !DILocation(line: 2369, column: 22, scope: !9496)
!9502 = !DILocation(line: 2369, column: 19, scope: !9496)
!9503 = !DILocation(line: 2369, column: 7, scope: !9479)
!9504 = !DILocation(line: 2369, column: 28, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 2369, column: 25)
!9506 = !DILocation(line: 2369, column: 38, scope: !9505)
!9507 = !DILocation(line: 2369, column: 36, scope: !9505)
!9508 = !DILocation(line: 2369, column: 46, scope: !9505)
!9509 = !DILocation(line: 2369, column: 44, scope: !9505)
!9510 = !DILocation(line: 2369, column: 49, scope: !9505)
!9511 = !DILocation(line: 2370, column: 12, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 2370, column: 12)
!9513 = !DILocation(line: 2370, column: 17, scope: !9512)
!9514 = !DILocation(line: 2370, column: 14, scope: !9512)
!9515 = !DILocation(line: 2370, column: 19, scope: !9512)
!9516 = !DILocation(line: 2370, column: 22, scope: !9512)
!9517 = !DILocation(line: 2370, column: 27, scope: !9512)
!9518 = !DILocation(line: 2370, column: 24, scope: !9512)
!9519 = !DILocation(line: 2370, column: 12, scope: !9496)
!9520 = !DILocation(line: 2370, column: 33, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 2370, column: 30)
!9522 = !DILocation(line: 2370, column: 43, scope: !9521)
!9523 = !DILocation(line: 2370, column: 41, scope: !9521)
!9524 = !DILocation(line: 2370, column: 51, scope: !9521)
!9525 = !DILocation(line: 2370, column: 49, scope: !9521)
!9526 = !DILocation(line: 2370, column: 54, scope: !9521)
!9527 = !DILocation(line: 2371, column: 11, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 2371, column: 8)
!9529 = !DILocation(line: 2371, column: 21, scope: !9528)
!9530 = !DILocation(line: 2371, column: 19, scope: !9528)
!9531 = !DILocation(line: 2371, column: 29, scope: !9528)
!9532 = !DILocation(line: 2371, column: 27, scope: !9528)
!9533 = !DILocation(line: 2373, column: 10, scope: !9479)
!9534 = !DILocation(line: 2373, column: 20, scope: !9479)
!9535 = !DILocation(line: 2373, column: 9, scope: !9479)
!9536 = !DILocation(line: 2373, column: 6, scope: !9479)
!9537 = !DILocation(line: 2374, column: 10, scope: !9479)
!9538 = !DILocation(line: 2374, column: 20, scope: !9479)
!9539 = !DILocation(line: 2374, column: 9, scope: !9479)
!9540 = !DILocation(line: 2374, column: 6, scope: !9479)
!9541 = !DILocation(line: 2376, column: 18, scope: !9479)
!9542 = !DILocation(line: 2376, column: 16, scope: !9479)
!9543 = !DILocation(line: 2376, column: 29, scope: !9479)
!9544 = !DILocation(line: 2376, column: 27, scope: !9479)
!9545 = !DILocation(line: 2376, column: 22, scope: !9479)
!9546 = !DILocation(line: 2376, column: 11, scope: !9479)
!9547 = !DILocation(line: 2376, column: 36, scope: !9479)
!9548 = !DILocation(line: 2376, column: 34, scope: !9479)
!9549 = !DILocation(line: 2376, column: 4, scope: !9479)
!9550 = !DILocation(line: 2376, column: 6, scope: !9479)
!9551 = !DILocation(line: 2377, column: 18, scope: !9479)
!9552 = !DILocation(line: 2377, column: 16, scope: !9479)
!9553 = !DILocation(line: 2377, column: 29, scope: !9479)
!9554 = !DILocation(line: 2377, column: 27, scope: !9479)
!9555 = !DILocation(line: 2377, column: 22, scope: !9479)
!9556 = !DILocation(line: 2377, column: 11, scope: !9479)
!9557 = !DILocation(line: 2377, column: 36, scope: !9479)
!9558 = !DILocation(line: 2377, column: 34, scope: !9479)
!9559 = !DILocation(line: 2377, column: 4, scope: !9479)
!9560 = !DILocation(line: 2377, column: 6, scope: !9479)
!9561 = !DILocation(line: 2380, column: 9, scope: !9342)
!9562 = !DILocation(line: 2380, column: 2, scope: !9342)
!9563 = distinct !DISubprogram(name: "multires_copy_grid", scope: !3, file: !3, line: 550, type: !9564, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{null, !413, !413, !196, !196}
!9566 = !DILocalVariable(name: "gridA", arg: 1, scope: !9563, file: !3, line: 550, type: !413)
!9567 = !DILocation(line: 550, column: 40, scope: !9563)
!9568 = !DILocalVariable(name: "gridB", arg: 2, scope: !9563, file: !3, line: 550, type: !413)
!9569 = !DILocation(line: 550, column: 59, scope: !9563)
!9570 = !DILocalVariable(name: "sizeA", arg: 3, scope: !9563, file: !3, line: 550, type: !196)
!9571 = !DILocation(line: 550, column: 74, scope: !9563)
!9572 = !DILocalVariable(name: "sizeB", arg: 4, scope: !9563, file: !3, line: 550, type: !196)
!9573 = !DILocation(line: 550, column: 85, scope: !9563)
!9574 = !DILocalVariable(name: "x", scope: !9563, file: !3, line: 552, type: !196)
!9575 = !DILocation(line: 552, column: 6, scope: !9563)
!9576 = !DILocalVariable(name: "y", scope: !9563, file: !3, line: 552, type: !196)
!9577 = !DILocation(line: 552, column: 9, scope: !9563)
!9578 = !DILocalVariable(name: "j", scope: !9563, file: !3, line: 552, type: !196)
!9579 = !DILocation(line: 552, column: 12, scope: !9563)
!9580 = !DILocalVariable(name: "skip", scope: !9563, file: !3, line: 552, type: !196)
!9581 = !DILocation(line: 552, column: 15, scope: !9563)
!9582 = !DILocation(line: 554, column: 6, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 554, column: 6)
!9584 = !DILocation(line: 554, column: 14, scope: !9583)
!9585 = !DILocation(line: 554, column: 12, scope: !9583)
!9586 = !DILocation(line: 554, column: 6, scope: !9563)
!9587 = !DILocation(line: 555, column: 11, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 554, column: 21)
!9589 = !DILocation(line: 555, column: 17, scope: !9588)
!9590 = !DILocation(line: 555, column: 25, scope: !9588)
!9591 = !DILocation(line: 555, column: 31, scope: !9588)
!9592 = !DILocation(line: 555, column: 22, scope: !9588)
!9593 = !DILocation(line: 555, column: 8, scope: !9588)
!9594 = !DILocation(line: 557, column: 10, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 557, column: 3)
!9596 = !DILocation(line: 557, column: 17, scope: !9595)
!9597 = !DILocation(line: 557, column: 8, scope: !9595)
!9598 = !DILocation(line: 557, column: 22, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 557, column: 3)
!9600 = !DILocation(line: 557, column: 26, scope: !9599)
!9601 = !DILocation(line: 557, column: 24, scope: !9599)
!9602 = !DILocation(line: 557, column: 3, scope: !9595)
!9603 = !DILocation(line: 558, column: 11, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 558, column: 4)
!9605 = !DILocation(line: 558, column: 9, scope: !9604)
!9606 = !DILocation(line: 558, column: 16, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 558, column: 4)
!9608 = !DILocation(line: 558, column: 20, scope: !9607)
!9609 = !DILocation(line: 558, column: 18, scope: !9607)
!9610 = !DILocation(line: 558, column: 4, scope: !9604)
!9611 = !DILocation(line: 559, column: 16, scope: !9607)
!9612 = !DILocation(line: 559, column: 22, scope: !9607)
!9613 = !DILocation(line: 559, column: 26, scope: !9607)
!9614 = !DILocation(line: 559, column: 24, scope: !9607)
!9615 = !DILocation(line: 559, column: 33, scope: !9607)
!9616 = !DILocation(line: 559, column: 31, scope: !9607)
!9617 = !DILocation(line: 559, column: 41, scope: !9607)
!9618 = !DILocation(line: 559, column: 45, scope: !9607)
!9619 = !DILocation(line: 559, column: 43, scope: !9607)
!9620 = !DILocation(line: 559, column: 39, scope: !9607)
!9621 = !DILocation(line: 559, column: 52, scope: !9607)
!9622 = !DILocation(line: 559, column: 58, scope: !9607)
!9623 = !DILocation(line: 559, column: 5, scope: !9607)
!9624 = !DILocation(line: 558, column: 28, scope: !9607)
!9625 = !DILocation(line: 558, column: 33, scope: !9607)
!9626 = !DILocation(line: 558, column: 4, scope: !9607)
!9627 = distinct !{!9627, !9610, !9628}
!9628 = !DILocation(line: 559, column: 60, scope: !9604)
!9629 = !DILocation(line: 557, column: 34, scope: !9599)
!9630 = !DILocation(line: 557, column: 3, scope: !9599)
!9631 = distinct !{!9631, !9602, !9632}
!9632 = !DILocation(line: 559, column: 60, scope: !9595)
!9633 = !DILocation(line: 560, column: 2, scope: !9588)
!9634 = !DILocation(line: 562, column: 11, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 561, column: 7)
!9636 = !DILocation(line: 562, column: 17, scope: !9635)
!9637 = !DILocation(line: 562, column: 25, scope: !9635)
!9638 = !DILocation(line: 562, column: 31, scope: !9635)
!9639 = !DILocation(line: 562, column: 22, scope: !9635)
!9640 = !DILocation(line: 562, column: 8, scope: !9635)
!9641 = !DILocation(line: 564, column: 10, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 564, column: 3)
!9643 = !DILocation(line: 564, column: 17, scope: !9642)
!9644 = !DILocation(line: 564, column: 8, scope: !9642)
!9645 = !DILocation(line: 564, column: 22, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 564, column: 3)
!9647 = !DILocation(line: 564, column: 26, scope: !9646)
!9648 = !DILocation(line: 564, column: 24, scope: !9646)
!9649 = !DILocation(line: 564, column: 3, scope: !9642)
!9650 = !DILocation(line: 565, column: 11, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 565, column: 4)
!9652 = !DILocation(line: 565, column: 9, scope: !9651)
!9653 = !DILocation(line: 565, column: 16, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 565, column: 4)
!9655 = !DILocation(line: 565, column: 20, scope: !9654)
!9656 = !DILocation(line: 565, column: 18, scope: !9654)
!9657 = !DILocation(line: 565, column: 4, scope: !9651)
!9658 = !DILocation(line: 566, column: 16, scope: !9654)
!9659 = !DILocation(line: 566, column: 22, scope: !9654)
!9660 = !DILocation(line: 566, column: 26, scope: !9654)
!9661 = !DILocation(line: 566, column: 32, scope: !9654)
!9662 = !DILocation(line: 566, column: 36, scope: !9654)
!9663 = !DILocation(line: 566, column: 34, scope: !9654)
!9664 = !DILocation(line: 566, column: 43, scope: !9654)
!9665 = !DILocation(line: 566, column: 41, scope: !9654)
!9666 = !DILocation(line: 566, column: 51, scope: !9654)
!9667 = !DILocation(line: 566, column: 55, scope: !9654)
!9668 = !DILocation(line: 566, column: 53, scope: !9654)
!9669 = !DILocation(line: 566, column: 49, scope: !9654)
!9670 = !DILocation(line: 566, column: 5, scope: !9654)
!9671 = !DILocation(line: 565, column: 28, scope: !9654)
!9672 = !DILocation(line: 565, column: 33, scope: !9654)
!9673 = !DILocation(line: 565, column: 4, scope: !9654)
!9674 = distinct !{!9674, !9657, !9675}
!9675 = !DILocation(line: 566, column: 60, scope: !9651)
!9676 = !DILocation(line: 564, column: 34, scope: !9646)
!9677 = !DILocation(line: 564, column: 3, scope: !9646)
!9678 = distinct !{!9678, !9649, !9679}
!9679 = !DILocation(line: 566, column: 60, scope: !9642)
!9680 = !DILocation(line: 568, column: 1, scope: !9563)
!9681 = distinct !DISubprogram(name: "multires_mdisps_downsample_hidden", scope: !3, file: !3, line: 174, type: !9682, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9682 = !DISubroutineType(types: !9683)
!9683 = !{!2611, !2611, !196, !196}
!9684 = !DILocalVariable(name: "old_hidden", arg: 1, scope: !9681, file: !3, line: 174, type: !2611)
!9685 = !DILocation(line: 174, column: 66, scope: !9681)
!9686 = !DILocalVariable(name: "old_level", arg: 2, scope: !9681, file: !3, line: 175, type: !196)
!9687 = !DILocation(line: 175, column: 58, scope: !9681)
!9688 = !DILocalVariable(name: "new_level", arg: 3, scope: !9681, file: !3, line: 176, type: !196)
!9689 = !DILocation(line: 176, column: 58, scope: !9681)
!9690 = !DILocalVariable(name: "new_hidden", scope: !9681, file: !3, line: 178, type: !2611)
!9691 = !DILocation(line: 178, column: 14, scope: !9681)
!9692 = !DILocalVariable(name: "new_gridsize", scope: !9681, file: !3, line: 179, type: !196)
!9693 = !DILocation(line: 179, column: 6, scope: !9681)
!9694 = !DILocation(line: 179, column: 38, scope: !9681)
!9695 = !DILocation(line: 179, column: 21, scope: !9681)
!9696 = !DILocalVariable(name: "old_gridsize", scope: !9681, file: !3, line: 180, type: !196)
!9697 = !DILocation(line: 180, column: 6, scope: !9681)
!9698 = !DILocation(line: 180, column: 38, scope: !9681)
!9699 = !DILocation(line: 180, column: 21, scope: !9681)
!9700 = !DILocalVariable(name: "x", scope: !9681, file: !3, line: 181, type: !196)
!9701 = !DILocation(line: 181, column: 6, scope: !9681)
!9702 = !DILocalVariable(name: "y", scope: !9681, file: !3, line: 181, type: !196)
!9703 = !DILocation(line: 181, column: 9, scope: !9681)
!9704 = !DILocalVariable(name: "factor", scope: !9681, file: !3, line: 181, type: !196)
!9705 = !DILocation(line: 181, column: 12, scope: !9681)
!9706 = !DILocalVariable(name: "old_value", scope: !9681, file: !3, line: 181, type: !196)
!9707 = !DILocation(line: 181, column: 20, scope: !9681)
!9708 = !DILocation(line: 184, column: 26, scope: !9681)
!9709 = !DILocation(line: 184, column: 37, scope: !9681)
!9710 = !DILocation(line: 184, column: 11, scope: !9681)
!9711 = !DILocation(line: 184, column: 9, scope: !9681)
!9712 = !DILocation(line: 185, column: 15, scope: !9681)
!9713 = !DILocation(line: 185, column: 13, scope: !9681)
!9714 = !DILocation(line: 188, column: 9, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 188, column: 2)
!9716 = !DILocation(line: 188, column: 7, scope: !9715)
!9717 = !DILocation(line: 188, column: 14, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 188, column: 2)
!9719 = !DILocation(line: 188, column: 18, scope: !9718)
!9720 = !DILocation(line: 188, column: 16, scope: !9718)
!9721 = !DILocation(line: 188, column: 2, scope: !9715)
!9722 = !DILocation(line: 189, column: 10, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9724, file: !3, line: 189, column: 3)
!9724 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 188, column: 37)
!9725 = !DILocation(line: 189, column: 8, scope: !9723)
!9726 = !DILocation(line: 189, column: 15, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9723, file: !3, line: 189, column: 3)
!9728 = !DILocation(line: 189, column: 19, scope: !9727)
!9729 = !DILocation(line: 189, column: 17, scope: !9727)
!9730 = !DILocation(line: 189, column: 3, scope: !9723)
!9731 = !DILocation(line: 190, column: 16, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 189, column: 38)
!9733 = !DILocation(line: 190, column: 14, scope: !9732)
!9734 = !DILocation(line: 193, column: 4, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 193, column: 4)
!9736 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 193, column: 4)
!9737 = !DILocation(line: 193, column: 4, scope: !9736)
!9738 = !DILocation(line: 194, column: 3, scope: !9732)
!9739 = !DILocation(line: 189, column: 34, scope: !9727)
!9740 = !DILocation(line: 189, column: 3, scope: !9727)
!9741 = distinct !{!9741, !9730, !9742}
!9742 = !DILocation(line: 194, column: 3, scope: !9723)
!9743 = !DILocation(line: 195, column: 2, scope: !9724)
!9744 = !DILocation(line: 188, column: 33, scope: !9718)
!9745 = !DILocation(line: 188, column: 2, scope: !9718)
!9746 = distinct !{!9746, !9721, !9747}
!9747 = !DILocation(line: 195, column: 2, scope: !9715)
!9748 = !DILocation(line: 197, column: 9, scope: !9681)
!9749 = !DILocation(line: 197, column: 2, scope: !9681)
!9750 = distinct !DISubprogram(name: "multires_grid_paint_mask_downsample", scope: !3, file: !3, line: 596, type: !9751, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9751 = !DISubroutineType(types: !9752)
!9752 = !{null, !3844, !196}
!9753 = !DILocalVariable(name: "gpm", arg: 1, scope: !9750, file: !3, line: 596, type: !3844)
!9754 = !DILocation(line: 596, column: 64, scope: !9750)
!9755 = !DILocalVariable(name: "level", arg: 2, scope: !9750, file: !3, line: 596, type: !196)
!9756 = !DILocation(line: 596, column: 73, scope: !9750)
!9757 = !DILocation(line: 598, column: 6, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 598, column: 6)
!9759 = !DILocation(line: 598, column: 14, scope: !9758)
!9760 = !DILocation(line: 598, column: 19, scope: !9758)
!9761 = !DILocation(line: 598, column: 12, scope: !9758)
!9762 = !DILocation(line: 598, column: 6, scope: !9750)
!9763 = !DILocalVariable(name: "gridsize", scope: !9764, file: !3, line: 599, type: !196)
!9764 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 598, column: 26)
!9765 = !DILocation(line: 599, column: 7, scope: !9764)
!9766 = !DILocation(line: 599, column: 35, scope: !9764)
!9767 = !DILocation(line: 599, column: 18, scope: !9764)
!9768 = !DILocalVariable(name: "data", scope: !9764, file: !3, line: 600, type: !418)
!9769 = !DILocation(line: 600, column: 10, scope: !9764)
!9770 = !DILocation(line: 600, column: 17, scope: !9764)
!9771 = !DILocation(line: 600, column: 45, scope: !9764)
!9772 = !DILocation(line: 600, column: 43, scope: !9764)
!9773 = !DILocalVariable(name: "x", scope: !9764, file: !3, line: 602, type: !196)
!9774 = !DILocation(line: 602, column: 7, scope: !9764)
!9775 = !DILocalVariable(name: "y", scope: !9764, file: !3, line: 602, type: !196)
!9776 = !DILocation(line: 602, column: 10, scope: !9764)
!9777 = !DILocation(line: 604, column: 10, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9764, file: !3, line: 604, column: 3)
!9779 = !DILocation(line: 604, column: 8, scope: !9778)
!9780 = !DILocation(line: 604, column: 15, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9778, file: !3, line: 604, column: 3)
!9782 = !DILocation(line: 604, column: 19, scope: !9781)
!9783 = !DILocation(line: 604, column: 17, scope: !9781)
!9784 = !DILocation(line: 604, column: 3, scope: !9778)
!9785 = !DILocation(line: 605, column: 11, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 605, column: 4)
!9787 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 604, column: 34)
!9788 = !DILocation(line: 605, column: 9, scope: !9786)
!9789 = !DILocation(line: 605, column: 16, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 605, column: 4)
!9791 = !DILocation(line: 605, column: 20, scope: !9790)
!9792 = !DILocation(line: 605, column: 18, scope: !9790)
!9793 = !DILocation(line: 605, column: 4, scope: !9786)
!9794 = !DILocation(line: 607, column: 31, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 605, column: 35)
!9796 = !DILocation(line: 607, column: 36, scope: !9795)
!9797 = !DILocation(line: 607, column: 43, scope: !9795)
!9798 = !DILocation(line: 607, column: 46, scope: !9795)
!9799 = !DILocation(line: 607, column: 9, scope: !9795)
!9800 = !DILocation(line: 606, column: 5, scope: !9795)
!9801 = !DILocation(line: 606, column: 10, scope: !9795)
!9802 = !DILocation(line: 606, column: 14, scope: !9795)
!9803 = !DILocation(line: 606, column: 12, scope: !9795)
!9804 = !DILocation(line: 606, column: 25, scope: !9795)
!9805 = !DILocation(line: 606, column: 23, scope: !9795)
!9806 = !DILocation(line: 606, column: 28, scope: !9795)
!9807 = !DILocation(line: 608, column: 4, scope: !9795)
!9808 = !DILocation(line: 605, column: 31, scope: !9790)
!9809 = !DILocation(line: 605, column: 4, scope: !9790)
!9810 = distinct !{!9810, !9793, !9811}
!9811 = !DILocation(line: 608, column: 4, scope: !9786)
!9812 = !DILocation(line: 609, column: 3, scope: !9787)
!9813 = !DILocation(line: 604, column: 30, scope: !9781)
!9814 = !DILocation(line: 604, column: 3, scope: !9781)
!9815 = distinct !{!9815, !9784, !9816}
!9816 = !DILocation(line: 609, column: 3, scope: !9778)
!9817 = !DILocation(line: 611, column: 3, scope: !9764)
!9818 = !DILocation(line: 611, column: 13, scope: !9764)
!9819 = !DILocation(line: 611, column: 18, scope: !9764)
!9820 = !DILocation(line: 612, column: 15, scope: !9764)
!9821 = !DILocation(line: 612, column: 3, scope: !9764)
!9822 = !DILocation(line: 612, column: 8, scope: !9764)
!9823 = !DILocation(line: 612, column: 13, scope: !9764)
!9824 = !DILocation(line: 613, column: 16, scope: !9764)
!9825 = !DILocation(line: 613, column: 3, scope: !9764)
!9826 = !DILocation(line: 613, column: 8, scope: !9764)
!9827 = !DILocation(line: 613, column: 14, scope: !9764)
!9828 = !DILocation(line: 614, column: 2, scope: !9764)
!9829 = !DILocation(line: 615, column: 1, scope: !9750)
!9830 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4459, file: !4459, line: 788, type: !9831, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9831 = !DISubroutineType(types: !9832)
!9832 = !{!388, !418, !1100}
!9833 = !DILocalVariable(name: "r", arg: 1, scope: !9830, file: !4459, line: 788, type: !418)
!9834 = !DILocation(line: 788, column: 37, scope: !9830)
!9835 = !DILocalVariable(name: "a", arg: 2, scope: !9830, file: !4459, line: 788, type: !1100)
!9836 = !DILocation(line: 788, column: 55, scope: !9830)
!9837 = !DILocalVariable(name: "d", scope: !9830, file: !4459, line: 790, type: !388)
!9838 = !DILocation(line: 790, column: 8, scope: !9830)
!9839 = !DILocation(line: 790, column: 21, scope: !9830)
!9840 = !DILocation(line: 790, column: 24, scope: !9830)
!9841 = !DILocation(line: 790, column: 12, scope: !9830)
!9842 = !DILocation(line: 794, column: 6, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9830, file: !4459, line: 794, column: 6)
!9844 = !DILocation(line: 794, column: 8, scope: !9843)
!9845 = !DILocation(line: 794, column: 6, scope: !9830)
!9846 = !DILocation(line: 795, column: 13, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9843, file: !4459, line: 794, column: 20)
!9848 = !DILocation(line: 795, column: 7, scope: !9847)
!9849 = !DILocation(line: 795, column: 5, scope: !9847)
!9850 = !DILocation(line: 796, column: 15, scope: !9847)
!9851 = !DILocation(line: 796, column: 18, scope: !9847)
!9852 = !DILocation(line: 796, column: 28, scope: !9847)
!9853 = !DILocation(line: 796, column: 26, scope: !9847)
!9854 = !DILocation(line: 796, column: 3, scope: !9847)
!9855 = !DILocation(line: 797, column: 2, scope: !9847)
!9856 = !DILocation(line: 799, column: 11, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9843, file: !4459, line: 798, column: 7)
!9858 = !DILocation(line: 799, column: 3, scope: !9857)
!9859 = !DILocation(line: 800, column: 5, scope: !9857)
!9860 = !DILocation(line: 803, column: 9, scope: !9830)
!9861 = !DILocation(line: 803, column: 2, scope: !9830)
!9862 = distinct !DISubprogram(name: "dot_v3v3", scope: !4459, file: !4459, line: 619, type: !9863, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9863 = !DISubroutineType(types: !9864)
!9864 = !{!388, !1100, !1100}
!9865 = !DILocalVariable(name: "a", arg: 1, scope: !9862, file: !4459, line: 619, type: !1100)
!9866 = !DILocation(line: 619, column: 36, scope: !9862)
!9867 = !DILocalVariable(name: "b", arg: 2, scope: !9862, file: !4459, line: 619, type: !1100)
!9868 = !DILocation(line: 619, column: 54, scope: !9862)
!9869 = !DILocation(line: 621, column: 9, scope: !9862)
!9870 = !DILocation(line: 621, column: 16, scope: !9862)
!9871 = !DILocation(line: 621, column: 14, scope: !9862)
!9872 = !DILocation(line: 621, column: 23, scope: !9862)
!9873 = !DILocation(line: 621, column: 30, scope: !9862)
!9874 = !DILocation(line: 621, column: 28, scope: !9862)
!9875 = !DILocation(line: 621, column: 21, scope: !9862)
!9876 = !DILocation(line: 621, column: 37, scope: !9862)
!9877 = !DILocation(line: 621, column: 44, scope: !9862)
!9878 = !DILocation(line: 621, column: 42, scope: !9862)
!9879 = !DILocation(line: 621, column: 35, scope: !9862)
!9880 = !DILocation(line: 621, column: 2, scope: !9862)
!9881 = distinct !DISubprogram(name: "zero_v3", scope: !4459, file: !4459, line: 43, type: !9882, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9882 = !DISubroutineType(types: !9883)
!9883 = !{null, !418}
!9884 = !DILocalVariable(name: "r", arg: 1, scope: !9881, file: !4459, line: 43, type: !418)
!9885 = !DILocation(line: 43, column: 28, scope: !9881)
!9886 = !DILocation(line: 45, column: 2, scope: !9881)
!9887 = !DILocation(line: 45, column: 7, scope: !9881)
!9888 = !DILocation(line: 46, column: 2, scope: !9881)
!9889 = !DILocation(line: 46, column: 7, scope: !9881)
!9890 = !DILocation(line: 47, column: 2, scope: !9881)
!9891 = !DILocation(line: 47, column: 7, scope: !9881)
!9892 = !DILocation(line: 48, column: 1, scope: !9881)
!9893 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !4459, file: !4459, line: 357, type: !5614, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9894 = !DILocalVariable(name: "r", arg: 1, scope: !9893, file: !4459, line: 357, type: !418)
!9895 = !DILocation(line: 357, column: 32, scope: !9893)
!9896 = !DILocalVariable(name: "a", arg: 2, scope: !9893, file: !4459, line: 357, type: !1100)
!9897 = !DILocation(line: 357, column: 50, scope: !9893)
!9898 = !DILocalVariable(name: "b", arg: 3, scope: !9893, file: !4459, line: 357, type: !1100)
!9899 = !DILocation(line: 357, column: 68, scope: !9893)
!9900 = !DILocation(line: 359, column: 9, scope: !9893)
!9901 = !DILocation(line: 359, column: 16, scope: !9893)
!9902 = !DILocation(line: 359, column: 14, scope: !9893)
!9903 = !DILocation(line: 359, column: 2, scope: !9893)
!9904 = !DILocation(line: 359, column: 7, scope: !9893)
!9905 = !DILocation(line: 360, column: 9, scope: !9893)
!9906 = !DILocation(line: 360, column: 16, scope: !9893)
!9907 = !DILocation(line: 360, column: 14, scope: !9893)
!9908 = !DILocation(line: 360, column: 2, scope: !9893)
!9909 = !DILocation(line: 360, column: 7, scope: !9893)
!9910 = !DILocation(line: 361, column: 9, scope: !9893)
!9911 = !DILocation(line: 361, column: 16, scope: !9893)
!9912 = !DILocation(line: 361, column: 14, scope: !9893)
!9913 = !DILocation(line: 361, column: 2, scope: !9893)
!9914 = !DILocation(line: 361, column: 7, scope: !9893)
!9915 = !DILocation(line: 362, column: 1, scope: !9893)
!9916 = distinct !DISubprogram(name: "multires_mdisps_initialize_hidden", scope: !3, file: !3, line: 246, type: !9917, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!9917 = !DISubroutineType(types: !9918)
!9918 = !{!3566, !2466, !196}
!9919 = !DILocalVariable(name: "me", arg: 1, scope: !9916, file: !3, line: 246, type: !2466)
!9920 = !DILocation(line: 246, column: 56, scope: !9916)
!9921 = !DILocalVariable(name: "level", arg: 2, scope: !9916, file: !3, line: 246, type: !196)
!9922 = !DILocation(line: 246, column: 64, scope: !9916)
!9923 = !DILocalVariable(name: "mdisps", scope: !9916, file: !3, line: 248, type: !3566)
!9924 = !DILocation(line: 248, column: 10, scope: !9916)
!9925 = !DILocation(line: 248, column: 41, scope: !9916)
!9926 = !DILocation(line: 248, column: 45, scope: !9916)
!9927 = !DILocation(line: 249, column: 57, scope: !9916)
!9928 = !DILocation(line: 249, column: 61, scope: !9916)
!9929 = !DILocation(line: 248, column: 19, scope: !9916)
!9930 = !DILocalVariable(name: "gridsize", scope: !9916, file: !3, line: 250, type: !196)
!9931 = !DILocation(line: 250, column: 6, scope: !9916)
!9932 = !DILocation(line: 250, column: 34, scope: !9916)
!9933 = !DILocation(line: 250, column: 17, scope: !9916)
!9934 = !DILocalVariable(name: "gridarea", scope: !9916, file: !3, line: 251, type: !196)
!9935 = !DILocation(line: 251, column: 6, scope: !9916)
!9936 = !DILocation(line: 251, column: 17, scope: !9916)
!9937 = !DILocalVariable(name: "i", scope: !9916, file: !3, line: 252, type: !196)
!9938 = !DILocation(line: 252, column: 6, scope: !9916)
!9939 = !DILocalVariable(name: "j", scope: !9916, file: !3, line: 252, type: !196)
!9940 = !DILocation(line: 252, column: 9, scope: !9916)
!9941 = !DILocation(line: 254, column: 9, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9916, file: !3, line: 254, column: 2)
!9943 = !DILocation(line: 254, column: 7, scope: !9942)
!9944 = !DILocation(line: 254, column: 14, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 254, column: 2)
!9946 = !DILocation(line: 254, column: 18, scope: !9945)
!9947 = !DILocation(line: 254, column: 22, scope: !9945)
!9948 = !DILocation(line: 254, column: 16, scope: !9945)
!9949 = !DILocation(line: 254, column: 2, scope: !9942)
!9950 = !DILocalVariable(name: "hide", scope: !9951, file: !3, line: 255, type: !626)
!9951 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 254, column: 36)
!9952 = !DILocation(line: 255, column: 8, scope: !9951)
!9953 = !DILocation(line: 257, column: 10, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 257, column: 3)
!9955 = !DILocation(line: 257, column: 8, scope: !9954)
!9956 = !DILocation(line: 257, column: 15, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 257, column: 3)
!9958 = !DILocation(line: 257, column: 19, scope: !9957)
!9959 = !DILocation(line: 257, column: 23, scope: !9957)
!9960 = !DILocation(line: 257, column: 29, scope: !9957)
!9961 = !DILocation(line: 257, column: 32, scope: !9957)
!9962 = !DILocation(line: 257, column: 17, scope: !9957)
!9963 = !DILocation(line: 257, column: 3, scope: !9954)
!9964 = !DILocation(line: 258, column: 8, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 258, column: 8)
!9966 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 257, column: 46)
!9967 = !DILocation(line: 258, column: 12, scope: !9965)
!9968 = !DILocation(line: 258, column: 18, scope: !9965)
!9969 = !DILocation(line: 258, column: 22, scope: !9965)
!9970 = !DILocation(line: 258, column: 28, scope: !9965)
!9971 = !DILocation(line: 258, column: 32, scope: !9965)
!9972 = !DILocation(line: 258, column: 38, scope: !9965)
!9973 = !DILocation(line: 258, column: 41, scope: !9965)
!9974 = !DILocation(line: 258, column: 53, scope: !9965)
!9975 = !DILocation(line: 258, column: 51, scope: !9965)
!9976 = !DILocation(line: 258, column: 56, scope: !9965)
!9977 = !DILocation(line: 258, column: 59, scope: !9965)
!9978 = !DILocation(line: 258, column: 64, scope: !9965)
!9979 = !DILocation(line: 258, column: 8, scope: !9966)
!9980 = !DILocation(line: 259, column: 10, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 258, column: 75)
!9982 = !DILocation(line: 260, column: 5, scope: !9981)
!9983 = !DILocation(line: 262, column: 3, scope: !9966)
!9984 = !DILocation(line: 257, column: 42, scope: !9957)
!9985 = !DILocation(line: 257, column: 3, scope: !9957)
!9986 = distinct !{!9986, !9963, !9987}
!9987 = !DILocation(line: 262, column: 3, scope: !9954)
!9988 = !DILocation(line: 264, column: 8, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 264, column: 7)
!9990 = !DILocation(line: 264, column: 7, scope: !9951)
!9991 = !DILocation(line: 265, column: 4, scope: !9989)
!9992 = !DILocation(line: 267, column: 10, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 267, column: 3)
!9994 = !DILocation(line: 267, column: 8, scope: !9993)
!9995 = !DILocation(line: 267, column: 15, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 267, column: 3)
!9997 = !DILocation(line: 267, column: 19, scope: !9996)
!9998 = !DILocation(line: 267, column: 23, scope: !9996)
!9999 = !DILocation(line: 267, column: 29, scope: !9996)
!10000 = !DILocation(line: 267, column: 32, scope: !9996)
!10001 = !DILocation(line: 267, column: 17, scope: !9996)
!10002 = !DILocation(line: 267, column: 3, scope: !9993)
!10003 = !DILocalVariable(name: "md", scope: !10004, file: !3, line: 268, type: !3566)
!10004 = distinct !DILexicalBlock(scope: !9996, file: !3, line: 267, column: 46)
!10005 = !DILocation(line: 268, column: 12, scope: !10004)
!10006 = !DILocation(line: 268, column: 18, scope: !10004)
!10007 = !DILocation(line: 268, column: 25, scope: !10004)
!10008 = !DILocation(line: 268, column: 29, scope: !10004)
!10009 = !DILocation(line: 268, column: 35, scope: !10004)
!10010 = !DILocation(line: 268, column: 38, scope: !10004)
!10011 = !DILocation(line: 268, column: 50, scope: !10004)
!10012 = !DILocation(line: 268, column: 48, scope: !10004)
!10013 = !DILocation(line: 272, column: 17, scope: !10004)
!10014 = !DILocation(line: 272, column: 4, scope: !10004)
!10015 = !DILocation(line: 272, column: 8, scope: !10004)
!10016 = !DILocation(line: 272, column: 15, scope: !10004)
!10017 = !DILocation(line: 273, column: 4, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 273, column: 4)
!10019 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 273, column: 4)
!10020 = !DILocation(line: 274, column: 3, scope: !10004)
!10021 = !DILocation(line: 267, column: 42, scope: !9996)
!10022 = !DILocation(line: 267, column: 3, scope: !9996)
!10023 = distinct !{!10023, !10002, !10024}
!10024 = !DILocation(line: 274, column: 3, scope: !9993)
!10025 = !DILocation(line: 275, column: 2, scope: !9951)
!10026 = !DILocation(line: 254, column: 32, scope: !9945)
!10027 = !DILocation(line: 254, column: 2, scope: !9945)
!10028 = distinct !{!10028, !9949, !10029}
!10029 = !DILocation(line: 275, column: 2, scope: !9942)
!10030 = !DILocation(line: 277, column: 9, scope: !9916)
!10031 = !DILocation(line: 277, column: 2, scope: !9916)
!10032 = distinct !DISubprogram(name: "multires_reallocate_mdisps", scope: !3, file: !3, line: 529, type: !10033, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10033 = !DISubroutineType(types: !10034)
!10034 = !{null, !196, !3566, !196}
!10035 = !DILocalVariable(name: "totloop", arg: 1, scope: !10032, file: !3, line: 529, type: !196)
!10036 = !DILocation(line: 529, column: 44, scope: !10032)
!10037 = !DILocalVariable(name: "mdisps", arg: 2, scope: !10032, file: !3, line: 529, type: !3566)
!10038 = !DILocation(line: 529, column: 61, scope: !10032)
!10039 = !DILocalVariable(name: "lvl", arg: 3, scope: !10032, file: !3, line: 529, type: !196)
!10040 = !DILocation(line: 529, column: 73, scope: !10032)
!10041 = !DILocalVariable(name: "i", scope: !10032, file: !3, line: 531, type: !196)
!10042 = !DILocation(line: 531, column: 6, scope: !10032)
!10043 = !DILocation(line: 534, column: 9, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 534, column: 2)
!10045 = !DILocation(line: 534, column: 7, scope: !10044)
!10046 = !DILocation(line: 534, column: 14, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 534, column: 2)
!10048 = !DILocation(line: 534, column: 18, scope: !10047)
!10049 = !DILocation(line: 534, column: 16, scope: !10047)
!10050 = !DILocation(line: 534, column: 2, scope: !10044)
!10051 = !DILocalVariable(name: "totdisp", scope: !10052, file: !3, line: 535, type: !196)
!10052 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 534, column: 32)
!10053 = !DILocation(line: 535, column: 7, scope: !10052)
!10054 = !DILocation(line: 535, column: 35, scope: !10052)
!10055 = !DILocation(line: 535, column: 17, scope: !10052)
!10056 = !DILocalVariable(name: "disps", scope: !10052, file: !3, line: 536, type: !413)
!10057 = !DILocation(line: 536, column: 11, scope: !10052)
!10058 = !DILocation(line: 536, column: 23, scope: !10052)
!10059 = !DILocation(line: 536, column: 55, scope: !10052)
!10060 = !DILocation(line: 536, column: 53, scope: !10052)
!10061 = !DILocation(line: 538, column: 7, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 538, column: 7)
!10063 = !DILocation(line: 538, column: 14, scope: !10062)
!10064 = !DILocation(line: 538, column: 17, scope: !10062)
!10065 = !DILocation(line: 538, column: 7, scope: !10052)
!10066 = !DILocation(line: 539, column: 4, scope: !10062)
!10067 = !DILocation(line: 539, column: 14, scope: !10062)
!10068 = !DILocation(line: 539, column: 21, scope: !10062)
!10069 = !DILocation(line: 539, column: 24, scope: !10062)
!10070 = !DILocation(line: 541, column: 7, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 541, column: 7)
!10072 = !DILocation(line: 541, column: 14, scope: !10071)
!10073 = !DILocation(line: 541, column: 17, scope: !10071)
!10074 = !DILocation(line: 541, column: 23, scope: !10071)
!10075 = !DILocation(line: 541, column: 26, scope: !10071)
!10076 = !DILocation(line: 541, column: 33, scope: !10071)
!10077 = !DILocation(line: 541, column: 36, scope: !10071)
!10078 = !DILocation(line: 541, column: 7, scope: !10052)
!10079 = !DILocation(line: 542, column: 38, scope: !10071)
!10080 = !DILocation(line: 542, column: 45, scope: !10071)
!10081 = !DILocation(line: 542, column: 49, scope: !10071)
!10082 = !DILocation(line: 542, column: 4, scope: !10071)
!10083 = !DILocation(line: 544, column: 21, scope: !10052)
!10084 = !DILocation(line: 544, column: 3, scope: !10052)
!10085 = !DILocation(line: 544, column: 10, scope: !10052)
!10086 = !DILocation(line: 544, column: 13, scope: !10052)
!10087 = !DILocation(line: 544, column: 19, scope: !10052)
!10088 = !DILocation(line: 545, column: 23, scope: !10052)
!10089 = !DILocation(line: 545, column: 3, scope: !10052)
!10090 = !DILocation(line: 545, column: 10, scope: !10052)
!10091 = !DILocation(line: 545, column: 13, scope: !10052)
!10092 = !DILocation(line: 545, column: 21, scope: !10052)
!10093 = !DILocation(line: 546, column: 21, scope: !10052)
!10094 = !DILocation(line: 546, column: 3, scope: !10052)
!10095 = !DILocation(line: 546, column: 10, scope: !10052)
!10096 = !DILocation(line: 546, column: 13, scope: !10052)
!10097 = !DILocation(line: 546, column: 19, scope: !10052)
!10098 = !DILocation(line: 547, column: 2, scope: !10052)
!10099 = !DILocation(line: 534, column: 27, scope: !10047)
!10100 = !DILocation(line: 534, column: 2, scope: !10047)
!10101 = distinct !{!10101, !10050, !10102}
!10102 = !DILocation(line: 547, column: 2, scope: !10044)
!10103 = !DILocation(line: 548, column: 1, scope: !10032)
!10104 = distinct !DISubprogram(name: "multires_mdisps_subdivide_hidden", scope: !3, file: !3, line: 226, type: !10105, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10105 = !DISubroutineType(types: !10106)
!10106 = !{null, !3566, !196}
!10107 = !DILocalVariable(name: "md", arg: 1, scope: !10104, file: !3, line: 226, type: !3566)
!10108 = !DILocation(line: 226, column: 54, scope: !10104)
!10109 = !DILocalVariable(name: "new_level", arg: 2, scope: !10104, file: !3, line: 226, type: !196)
!10110 = !DILocation(line: 226, column: 62, scope: !10104)
!10111 = !DILocalVariable(name: "subd", scope: !10104, file: !3, line: 228, type: !2611)
!10112 = !DILocation(line: 228, column: 14, scope: !10104)
!10113 = !DILocation(line: 233, column: 6, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 233, column: 6)
!10115 = !DILocation(line: 233, column: 10, scope: !10114)
!10116 = !DILocation(line: 233, column: 19, scope: !10114)
!10117 = !DILocation(line: 233, column: 16, scope: !10114)
!10118 = !DILocation(line: 233, column: 6, scope: !10104)
!10119 = !DILocation(line: 234, column: 3, scope: !10114)
!10120 = !DILocation(line: 236, column: 41, scope: !10104)
!10121 = !DILocation(line: 236, column: 45, scope: !10104)
!10122 = !DILocation(line: 237, column: 41, scope: !10104)
!10123 = !DILocation(line: 237, column: 45, scope: !10104)
!10124 = !DILocation(line: 238, column: 41, scope: !10104)
!10125 = !DILocation(line: 236, column: 9, scope: !10104)
!10126 = !DILocation(line: 236, column: 7, scope: !10104)
!10127 = !DILocation(line: 242, column: 2, scope: !10104)
!10128 = !DILocation(line: 242, column: 12, scope: !10104)
!10129 = !DILocation(line: 242, column: 16, scope: !10104)
!10130 = !DILocation(line: 243, column: 15, scope: !10104)
!10131 = !DILocation(line: 243, column: 2, scope: !10104)
!10132 = !DILocation(line: 243, column: 6, scope: !10104)
!10133 = !DILocation(line: 243, column: 13, scope: !10104)
!10134 = !DILocation(line: 244, column: 1, scope: !10104)
!10135 = distinct !DISubprogram(name: "CCG_grid_elem_mask", scope: !1066, file: !1066, line: 147, type: !6494, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10136 = !DILocalVariable(name: "key", arg: 1, scope: !10135, file: !1066, line: 147, type: !5646)
!10137 = !DILocation(line: 147, column: 52, scope: !10135)
!10138 = !DILocalVariable(name: "elem", arg: 2, scope: !10135, file: !1066, line: 147, type: !2614)
!10139 = !DILocation(line: 147, column: 66, scope: !10135)
!10140 = !DILocalVariable(name: "x", arg: 3, scope: !10135, file: !1066, line: 147, type: !196)
!10141 = !DILocation(line: 147, column: 76, scope: !10135)
!10142 = !DILocalVariable(name: "y", arg: 4, scope: !10135, file: !1066, line: 147, type: !196)
!10143 = !DILocation(line: 147, column: 83, scope: !10135)
!10144 = !DILocation(line: 149, column: 23, scope: !10135)
!10145 = !DILocation(line: 149, column: 42, scope: !10135)
!10146 = !DILocation(line: 149, column: 47, scope: !10135)
!10147 = !DILocation(line: 149, column: 53, scope: !10135)
!10148 = !DILocation(line: 149, column: 56, scope: !10135)
!10149 = !DILocation(line: 149, column: 28, scope: !10135)
!10150 = !DILocation(line: 149, column: 9, scope: !10135)
!10151 = !DILocation(line: 149, column: 2, scope: !10135)
!10152 = distinct !DISubprogram(name: "CCG_elem_mask", scope: !1066, file: !1066, line: 120, type: !10153, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{!418, !5646, !2614}
!10155 = !DILocalVariable(name: "key", arg: 1, scope: !10152, file: !1066, line: 120, type: !5646)
!10156 = !DILocation(line: 120, column: 47, scope: !10152)
!10157 = !DILocalVariable(name: "elem", arg: 2, scope: !10152, file: !1066, line: 120, type: !2614)
!10158 = !DILocation(line: 120, column: 61, scope: !10152)
!10159 = !DILocation(line: 123, column: 27, scope: !10152)
!10160 = !DILocation(line: 123, column: 19, scope: !10152)
!10161 = !DILocation(line: 123, column: 35, scope: !10152)
!10162 = !DILocation(line: 123, column: 40, scope: !10152)
!10163 = !DILocation(line: 123, column: 32, scope: !10152)
!10164 = !DILocation(line: 123, column: 9, scope: !10152)
!10165 = !DILocation(line: 123, column: 2, scope: !10152)
!10166 = distinct !DISubprogram(name: "CCG_grid_elem", scope: !1066, file: !1066, line: 131, type: !10167, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10167 = !DISubroutineType(types: !10168)
!10168 = !{!2614, !5646, !2614, !196, !196}
!10169 = !DILocalVariable(name: "key", arg: 1, scope: !10166, file: !1066, line: 131, type: !5646)
!10170 = !DILocation(line: 131, column: 49, scope: !10166)
!10171 = !DILocalVariable(name: "elem", arg: 2, scope: !10166, file: !1066, line: 131, type: !2614)
!10172 = !DILocation(line: 131, column: 63, scope: !10166)
!10173 = !DILocalVariable(name: "x", arg: 3, scope: !10166, file: !1066, line: 131, type: !196)
!10174 = !DILocation(line: 131, column: 73, scope: !10166)
!10175 = !DILocalVariable(name: "y", arg: 4, scope: !10166, file: !1066, line: 131, type: !196)
!10176 = !DILocation(line: 131, column: 80, scope: !10166)
!10177 = !DILocation(line: 134, column: 25, scope: !10166)
!10178 = !DILocation(line: 134, column: 30, scope: !10166)
!10179 = !DILocation(line: 134, column: 37, scope: !10166)
!10180 = !DILocation(line: 134, column: 41, scope: !10166)
!10181 = !DILocation(line: 134, column: 46, scope: !10166)
!10182 = !DILocation(line: 134, column: 39, scope: !10166)
!10183 = !DILocation(line: 134, column: 58, scope: !10166)
!10184 = !DILocation(line: 134, column: 56, scope: !10166)
!10185 = !DILocation(line: 134, column: 9, scope: !10166)
!10186 = !DILocation(line: 134, column: 2, scope: !10166)
!10187 = distinct !DISubprogram(name: "CCG_elem_offset", scope: !1066, file: !1066, line: 126, type: !10188, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10188 = !DISubroutineType(types: !10189)
!10189 = !{!2614, !5646, !2614, !196}
!10190 = !DILocalVariable(name: "key", arg: 1, scope: !10187, file: !1066, line: 126, type: !5646)
!10191 = !DILocation(line: 126, column: 51, scope: !10187)
!10192 = !DILocalVariable(name: "elem", arg: 2, scope: !10187, file: !1066, line: 126, type: !2614)
!10193 = !DILocation(line: 126, column: 65, scope: !10187)
!10194 = !DILocalVariable(name: "offset", arg: 3, scope: !10187, file: !1066, line: 126, type: !196)
!10195 = !DILocation(line: 126, column: 75, scope: !10187)
!10196 = !DILocation(line: 128, column: 30, scope: !10187)
!10197 = !DILocation(line: 128, column: 22, scope: !10187)
!10198 = !DILocation(line: 128, column: 38, scope: !10187)
!10199 = !DILocation(line: 128, column: 43, scope: !10187)
!10200 = !DILocation(line: 128, column: 55, scope: !10187)
!10201 = !DILocation(line: 128, column: 53, scope: !10187)
!10202 = !DILocation(line: 128, column: 36, scope: !10187)
!10203 = !DILocation(line: 128, column: 9, scope: !10187)
!10204 = !DILocation(line: 128, column: 2, scope: !10187)
!10205 = distinct !DISubprogram(name: "CCG_elem_co", scope: !1066, file: !1066, line: 109, type: !10153, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10206 = !DILocalVariable(name: "UNUSED_key", arg: 1, scope: !10205, file: !1066, line: 109, type: !5646)
!10207 = !DILocation(line: 109, column: 45, scope: !10205)
!10208 = !DILocalVariable(name: "elem", arg: 2, scope: !10205, file: !1066, line: 109, type: !2614)
!10209 = !DILocation(line: 109, column: 67, scope: !10205)
!10210 = !DILocation(line: 111, column: 18, scope: !10205)
!10211 = !DILocation(line: 111, column: 9, scope: !10205)
!10212 = !DILocation(line: 111, column: 2, scope: !10205)
!10213 = distinct !DISubprogram(name: "grid_tangent", scope: !3, file: !3, line: 966, type: !10214, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10214 = !DISubroutineType(types: !10215)
!10215 = !{null, !5646, !196, !196, !196, !2614, !418}
!10216 = !DILocalVariable(name: "key", arg: 1, scope: !10213, file: !3, line: 966, type: !5646)
!10217 = !DILocation(line: 966, column: 40, scope: !10213)
!10218 = !DILocalVariable(name: "x", arg: 2, scope: !10213, file: !3, line: 966, type: !196)
!10219 = !DILocation(line: 966, column: 49, scope: !10213)
!10220 = !DILocalVariable(name: "y", arg: 3, scope: !10213, file: !3, line: 966, type: !196)
!10221 = !DILocation(line: 966, column: 56, scope: !10213)
!10222 = !DILocalVariable(name: "axis", arg: 4, scope: !10213, file: !3, line: 966, type: !196)
!10223 = !DILocation(line: 966, column: 63, scope: !10213)
!10224 = !DILocalVariable(name: "grid", arg: 5, scope: !10213, file: !3, line: 966, type: !2614)
!10225 = !DILocation(line: 966, column: 78, scope: !10213)
!10226 = !DILocalVariable(name: "t", arg: 6, scope: !10213, file: !3, line: 966, type: !418)
!10227 = !DILocation(line: 966, column: 90, scope: !10213)
!10228 = !DILocation(line: 968, column: 6, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 968, column: 6)
!10230 = !DILocation(line: 968, column: 11, scope: !10229)
!10231 = !DILocation(line: 968, column: 6, scope: !10213)
!10232 = !DILocation(line: 969, column: 7, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 969, column: 7)
!10234 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 968, column: 17)
!10235 = !DILocation(line: 969, column: 12, scope: !10233)
!10236 = !DILocation(line: 969, column: 17, scope: !10233)
!10237 = !DILocation(line: 969, column: 27, scope: !10233)
!10238 = !DILocation(line: 969, column: 9, scope: !10233)
!10239 = !DILocation(line: 969, column: 7, scope: !10234)
!10240 = !DILocation(line: 970, column: 8, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 970, column: 8)
!10242 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 969, column: 32)
!10243 = !DILocation(line: 970, column: 13, scope: !10241)
!10244 = !DILocation(line: 970, column: 18, scope: !10241)
!10245 = !DILocation(line: 970, column: 28, scope: !10241)
!10246 = !DILocation(line: 970, column: 10, scope: !10241)
!10247 = !DILocation(line: 970, column: 8, scope: !10242)
!10248 = !DILocation(line: 971, column: 17, scope: !10241)
!10249 = !DILocation(line: 971, column: 37, scope: !10241)
!10250 = !DILocation(line: 971, column: 42, scope: !10241)
!10251 = !DILocation(line: 971, column: 48, scope: !10241)
!10252 = !DILocation(line: 971, column: 51, scope: !10241)
!10253 = !DILocation(line: 971, column: 53, scope: !10241)
!10254 = !DILocation(line: 971, column: 20, scope: !10241)
!10255 = !DILocation(line: 971, column: 76, scope: !10241)
!10256 = !DILocation(line: 971, column: 81, scope: !10241)
!10257 = !DILocation(line: 971, column: 87, scope: !10241)
!10258 = !DILocation(line: 971, column: 89, scope: !10241)
!10259 = !DILocation(line: 971, column: 94, scope: !10241)
!10260 = !DILocation(line: 971, column: 96, scope: !10241)
!10261 = !DILocation(line: 971, column: 59, scope: !10241)
!10262 = !DILocation(line: 971, column: 5, scope: !10241)
!10263 = !DILocation(line: 973, column: 17, scope: !10241)
!10264 = !DILocation(line: 973, column: 37, scope: !10241)
!10265 = !DILocation(line: 973, column: 42, scope: !10241)
!10266 = !DILocation(line: 973, column: 48, scope: !10241)
!10267 = !DILocation(line: 973, column: 51, scope: !10241)
!10268 = !DILocation(line: 973, column: 20, scope: !10241)
!10269 = !DILocation(line: 973, column: 72, scope: !10241)
!10270 = !DILocation(line: 973, column: 77, scope: !10241)
!10271 = !DILocation(line: 973, column: 83, scope: !10241)
!10272 = !DILocation(line: 973, column: 85, scope: !10241)
!10273 = !DILocation(line: 973, column: 90, scope: !10241)
!10274 = !DILocation(line: 973, column: 55, scope: !10241)
!10275 = !DILocation(line: 973, column: 5, scope: !10241)
!10276 = !DILocation(line: 974, column: 3, scope: !10242)
!10277 = !DILocation(line: 976, column: 16, scope: !10233)
!10278 = !DILocation(line: 976, column: 36, scope: !10233)
!10279 = !DILocation(line: 976, column: 41, scope: !10233)
!10280 = !DILocation(line: 976, column: 47, scope: !10233)
!10281 = !DILocation(line: 976, column: 49, scope: !10233)
!10282 = !DILocation(line: 976, column: 54, scope: !10233)
!10283 = !DILocation(line: 976, column: 19, scope: !10233)
!10284 = !DILocation(line: 976, column: 75, scope: !10233)
!10285 = !DILocation(line: 976, column: 80, scope: !10233)
!10286 = !DILocation(line: 976, column: 86, scope: !10233)
!10287 = !DILocation(line: 976, column: 89, scope: !10233)
!10288 = !DILocation(line: 976, column: 58, scope: !10233)
!10289 = !DILocation(line: 976, column: 4, scope: !10233)
!10290 = !DILocation(line: 977, column: 2, scope: !10234)
!10291 = !DILocation(line: 978, column: 11, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 978, column: 11)
!10293 = !DILocation(line: 978, column: 16, scope: !10292)
!10294 = !DILocation(line: 978, column: 11, scope: !10229)
!10295 = !DILocation(line: 979, column: 7, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10297, file: !3, line: 979, column: 7)
!10297 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 978, column: 22)
!10298 = !DILocation(line: 979, column: 12, scope: !10296)
!10299 = !DILocation(line: 979, column: 17, scope: !10296)
!10300 = !DILocation(line: 979, column: 27, scope: !10296)
!10301 = !DILocation(line: 979, column: 9, scope: !10296)
!10302 = !DILocation(line: 979, column: 7, scope: !10297)
!10303 = !DILocation(line: 980, column: 8, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 980, column: 8)
!10305 = distinct !DILexicalBlock(scope: !10296, file: !3, line: 979, column: 32)
!10306 = !DILocation(line: 980, column: 13, scope: !10304)
!10307 = !DILocation(line: 980, column: 18, scope: !10304)
!10308 = !DILocation(line: 980, column: 28, scope: !10304)
!10309 = !DILocation(line: 980, column: 10, scope: !10304)
!10310 = !DILocation(line: 980, column: 8, scope: !10305)
!10311 = !DILocation(line: 981, column: 17, scope: !10304)
!10312 = !DILocation(line: 981, column: 37, scope: !10304)
!10313 = !DILocation(line: 981, column: 42, scope: !10304)
!10314 = !DILocation(line: 981, column: 48, scope: !10304)
!10315 = !DILocation(line: 981, column: 50, scope: !10304)
!10316 = !DILocation(line: 981, column: 55, scope: !10304)
!10317 = !DILocation(line: 981, column: 20, scope: !10304)
!10318 = !DILocation(line: 981, column: 76, scope: !10304)
!10319 = !DILocation(line: 981, column: 81, scope: !10304)
!10320 = !DILocation(line: 981, column: 87, scope: !10304)
!10321 = !DILocation(line: 981, column: 89, scope: !10304)
!10322 = !DILocation(line: 981, column: 95, scope: !10304)
!10323 = !DILocation(line: 981, column: 97, scope: !10304)
!10324 = !DILocation(line: 981, column: 59, scope: !10304)
!10325 = !DILocation(line: 981, column: 5, scope: !10304)
!10326 = !DILocation(line: 983, column: 17, scope: !10304)
!10327 = !DILocation(line: 983, column: 37, scope: !10304)
!10328 = !DILocation(line: 983, column: 42, scope: !10304)
!10329 = !DILocation(line: 983, column: 48, scope: !10304)
!10330 = !DILocation(line: 983, column: 51, scope: !10304)
!10331 = !DILocation(line: 983, column: 20, scope: !10304)
!10332 = !DILocation(line: 983, column: 72, scope: !10304)
!10333 = !DILocation(line: 983, column: 77, scope: !10304)
!10334 = !DILocation(line: 983, column: 83, scope: !10304)
!10335 = !DILocation(line: 983, column: 87, scope: !10304)
!10336 = !DILocation(line: 983, column: 89, scope: !10304)
!10337 = !DILocation(line: 983, column: 55, scope: !10304)
!10338 = !DILocation(line: 983, column: 5, scope: !10304)
!10339 = !DILocation(line: 984, column: 3, scope: !10305)
!10340 = !DILocation(line: 986, column: 16, scope: !10296)
!10341 = !DILocation(line: 986, column: 36, scope: !10296)
!10342 = !DILocation(line: 986, column: 41, scope: !10296)
!10343 = !DILocation(line: 986, column: 47, scope: !10296)
!10344 = !DILocation(line: 986, column: 51, scope: !10296)
!10345 = !DILocation(line: 986, column: 53, scope: !10296)
!10346 = !DILocation(line: 986, column: 19, scope: !10296)
!10347 = !DILocation(line: 986, column: 77, scope: !10296)
!10348 = !DILocation(line: 986, column: 82, scope: !10296)
!10349 = !DILocation(line: 986, column: 88, scope: !10296)
!10350 = !DILocation(line: 986, column: 91, scope: !10296)
!10351 = !DILocation(line: 986, column: 60, scope: !10296)
!10352 = !DILocation(line: 986, column: 4, scope: !10296)
!10353 = !DILocation(line: 987, column: 2, scope: !10297)
!10354 = !DILocation(line: 988, column: 1, scope: !10213)
!10355 = distinct !DISubprogram(name: "CCG_grid_elem_no", scope: !1066, file: !1066, line: 142, type: !6494, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10356 = !DILocalVariable(name: "key", arg: 1, scope: !10355, file: !1066, line: 142, type: !5646)
!10357 = !DILocation(line: 142, column: 50, scope: !10355)
!10358 = !DILocalVariable(name: "elem", arg: 2, scope: !10355, file: !1066, line: 142, type: !2614)
!10359 = !DILocation(line: 142, column: 64, scope: !10355)
!10360 = !DILocalVariable(name: "x", arg: 3, scope: !10355, file: !1066, line: 142, type: !196)
!10361 = !DILocation(line: 142, column: 74, scope: !10355)
!10362 = !DILocalVariable(name: "y", arg: 4, scope: !10355, file: !1066, line: 142, type: !196)
!10363 = !DILocation(line: 142, column: 81, scope: !10355)
!10364 = !DILocation(line: 144, column: 21, scope: !10355)
!10365 = !DILocation(line: 144, column: 40, scope: !10355)
!10366 = !DILocation(line: 144, column: 45, scope: !10355)
!10367 = !DILocation(line: 144, column: 51, scope: !10355)
!10368 = !DILocation(line: 144, column: 54, scope: !10355)
!10369 = !DILocation(line: 144, column: 26, scope: !10355)
!10370 = !DILocation(line: 144, column: 9, scope: !10355)
!10371 = !DILocation(line: 144, column: 2, scope: !10355)
!10372 = distinct !DISubprogram(name: "CCG_elem_no", scope: !1066, file: !1066, line: 114, type: !10153, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10373 = !DILocalVariable(name: "key", arg: 1, scope: !10372, file: !1066, line: 114, type: !5646)
!10374 = !DILocation(line: 114, column: 45, scope: !10372)
!10375 = !DILocalVariable(name: "elem", arg: 2, scope: !10372, file: !1066, line: 114, type: !2614)
!10376 = !DILocation(line: 114, column: 59, scope: !10372)
!10377 = !DILocation(line: 117, column: 27, scope: !10372)
!10378 = !DILocation(line: 117, column: 19, scope: !10372)
!10379 = !DILocation(line: 117, column: 34, scope: !10372)
!10380 = !DILocation(line: 117, column: 39, scope: !10372)
!10381 = !DILocation(line: 117, column: 32, scope: !10372)
!10382 = !DILocation(line: 117, column: 9, scope: !10372)
!10383 = !DILocation(line: 117, column: 2, scope: !10372)
!10384 = distinct !DISubprogram(name: "old_mdisps_rotate", scope: !3, file: !3, line: 1544, type: !10385, scopeLine: 1545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10385 = !DISubroutineType(types: !10386)
!10386 = !{null, !196, !196, !196, !196, !196, !418, !418}
!10387 = !DILocalVariable(name: "S", arg: 1, scope: !10384, file: !3, line: 1544, type: !196)
!10388 = !DILocation(line: 1544, column: 35, scope: !10384)
!10389 = !DILocalVariable(name: "UNUSED_newside", arg: 2, scope: !10384, file: !3, line: 1544, type: !196)
!10390 = !DILocation(line: 1544, column: 42, scope: !10384)
!10391 = !DILocalVariable(name: "oldside", arg: 3, scope: !10384, file: !3, line: 1544, type: !196)
!10392 = !DILocation(line: 1544, column: 63, scope: !10384)
!10393 = !DILocalVariable(name: "x", arg: 4, scope: !10384, file: !3, line: 1544, type: !196)
!10394 = !DILocation(line: 1544, column: 76, scope: !10384)
!10395 = !DILocalVariable(name: "y", arg: 5, scope: !10384, file: !3, line: 1544, type: !196)
!10396 = !DILocation(line: 1544, column: 83, scope: !10384)
!10397 = !DILocalVariable(name: "u", arg: 6, scope: !10384, file: !3, line: 1544, type: !418)
!10398 = !DILocation(line: 1544, column: 93, scope: !10384)
!10399 = !DILocalVariable(name: "v", arg: 7, scope: !10384, file: !3, line: 1544, type: !418)
!10400 = !DILocation(line: 1544, column: 103, scope: !10384)
!10401 = !DILocalVariable(name: "offset", scope: !10384, file: !3, line: 1546, type: !388)
!10402 = !DILocation(line: 1546, column: 8, scope: !10384)
!10403 = !DILocation(line: 1546, column: 17, scope: !10384)
!10404 = !DILocation(line: 1546, column: 25, scope: !10384)
!10405 = !DILocation(line: 1546, column: 32, scope: !10384)
!10406 = !DILocation(line: 1548, column: 6, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 1548, column: 6)
!10408 = !DILocation(line: 1548, column: 8, scope: !10407)
!10409 = !DILocation(line: 1548, column: 6, scope: !10384)
!10410 = !DILocation(line: 1548, column: 21, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 1548, column: 14)
!10412 = !DILocation(line: 1548, column: 30, scope: !10411)
!10413 = !DILocation(line: 1548, column: 28, scope: !10411)
!10414 = !DILocation(line: 1548, column: 17, scope: !10411)
!10415 = !DILocation(line: 1548, column: 19, scope: !10411)
!10416 = !DILocation(line: 1548, column: 38, scope: !10411)
!10417 = !DILocation(line: 1548, column: 47, scope: !10411)
!10418 = !DILocation(line: 1548, column: 45, scope: !10411)
!10419 = !DILocation(line: 1548, column: 34, scope: !10411)
!10420 = !DILocation(line: 1548, column: 36, scope: !10411)
!10421 = !DILocation(line: 1548, column: 50, scope: !10411)
!10422 = !DILocation(line: 1549, column: 6, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 1549, column: 6)
!10424 = !DILocation(line: 1549, column: 8, scope: !10423)
!10425 = !DILocation(line: 1549, column: 6, scope: !10384)
!10426 = !DILocation(line: 1549, column: 21, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 1549, column: 14)
!10428 = !DILocation(line: 1549, column: 30, scope: !10427)
!10429 = !DILocation(line: 1549, column: 28, scope: !10427)
!10430 = !DILocation(line: 1549, column: 17, scope: !10427)
!10431 = !DILocation(line: 1549, column: 19, scope: !10427)
!10432 = !DILocation(line: 1549, column: 38, scope: !10427)
!10433 = !DILocation(line: 1549, column: 47, scope: !10427)
!10434 = !DILocation(line: 1549, column: 45, scope: !10427)
!10435 = !DILocation(line: 1549, column: 34, scope: !10427)
!10436 = !DILocation(line: 1549, column: 36, scope: !10427)
!10437 = !DILocation(line: 1549, column: 50, scope: !10427)
!10438 = !DILocation(line: 1550, column: 6, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 1550, column: 6)
!10440 = !DILocation(line: 1550, column: 8, scope: !10439)
!10441 = !DILocation(line: 1550, column: 6, scope: !10384)
!10442 = !DILocation(line: 1550, column: 21, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 1550, column: 14)
!10444 = !DILocation(line: 1550, column: 30, scope: !10443)
!10445 = !DILocation(line: 1550, column: 28, scope: !10443)
!10446 = !DILocation(line: 1550, column: 17, scope: !10443)
!10447 = !DILocation(line: 1550, column: 19, scope: !10443)
!10448 = !DILocation(line: 1550, column: 38, scope: !10443)
!10449 = !DILocation(line: 1550, column: 47, scope: !10443)
!10450 = !DILocation(line: 1550, column: 45, scope: !10443)
!10451 = !DILocation(line: 1550, column: 34, scope: !10443)
!10452 = !DILocation(line: 1550, column: 36, scope: !10443)
!10453 = !DILocation(line: 1550, column: 50, scope: !10443)
!10454 = !DILocation(line: 1551, column: 6, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10384, file: !3, line: 1551, column: 6)
!10456 = !DILocation(line: 1551, column: 8, scope: !10455)
!10457 = !DILocation(line: 1551, column: 6, scope: !10384)
!10458 = !DILocation(line: 1551, column: 21, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 1551, column: 14)
!10460 = !DILocation(line: 1551, column: 30, scope: !10459)
!10461 = !DILocation(line: 1551, column: 28, scope: !10459)
!10462 = !DILocation(line: 1551, column: 17, scope: !10459)
!10463 = !DILocation(line: 1551, column: 19, scope: !10459)
!10464 = !DILocation(line: 1551, column: 38, scope: !10459)
!10465 = !DILocation(line: 1551, column: 47, scope: !10459)
!10466 = !DILocation(line: 1551, column: 45, scope: !10459)
!10467 = !DILocation(line: 1551, column: 34, scope: !10459)
!10468 = !DILocation(line: 1551, column: 36, scope: !10459)
!10469 = !DILocation(line: 1551, column: 50, scope: !10459)
!10470 = !DILocation(line: 1552, column: 1, scope: !10384)
!10471 = distinct !DISubprogram(name: "create_old_vert_face_map", scope: !3, file: !3, line: 1665, type: !10472, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10472 = !DISubroutineType(types: !10473)
!10473 = !{null, !8342, !8347, !10474, !2620, !2620}
!10474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10475, size: 64)
!10475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7471)
!10476 = !DILocalVariable(name: "map", arg: 1, scope: !10471, file: !3, line: 1665, type: !8342)
!10477 = !DILocation(line: 1665, column: 49, scope: !10471)
!10478 = !DILocalVariable(name: "mem", arg: 2, scope: !10471, file: !3, line: 1665, type: !8347)
!10479 = !DILocation(line: 1665, column: 66, scope: !10471)
!10480 = !DILocalVariable(name: "mface", arg: 3, scope: !10471, file: !3, line: 1665, type: !10474)
!10481 = !DILocation(line: 1665, column: 91, scope: !10471)
!10482 = !DILocalVariable(name: "totvert", arg: 4, scope: !10471, file: !3, line: 1666, type: !2620)
!10483 = !DILocation(line: 1666, column: 48, scope: !10471)
!10484 = !DILocalVariable(name: "totface", arg: 5, scope: !10471, file: !3, line: 1666, type: !2620)
!10485 = !DILocation(line: 1666, column: 67, scope: !10471)
!10486 = !DILocalVariable(name: "i", scope: !10471, file: !3, line: 1668, type: !196)
!10487 = !DILocation(line: 1668, column: 6, scope: !10471)
!10488 = !DILocalVariable(name: "j", scope: !10471, file: !3, line: 1668, type: !196)
!10489 = !DILocation(line: 1668, column: 9, scope: !10471)
!10490 = !DILocalVariable(name: "node", scope: !10471, file: !3, line: 1669, type: !8348)
!10491 = !DILocation(line: 1669, column: 13, scope: !10471)
!10492 = !DILocation(line: 1671, column: 11, scope: !10471)
!10493 = !DILocation(line: 1671, column: 42, scope: !10471)
!10494 = !DILocation(line: 1671, column: 40, scope: !10471)
!10495 = !DILocation(line: 1671, column: 4, scope: !10471)
!10496 = !DILocation(line: 1671, column: 9, scope: !10471)
!10497 = !DILocation(line: 1672, column: 11, scope: !10471)
!10498 = !DILocation(line: 1672, column: 43, scope: !10471)
!10499 = !DILocation(line: 1672, column: 41, scope: !10471)
!10500 = !DILocation(line: 1672, column: 51, scope: !10471)
!10501 = !DILocation(line: 1672, column: 4, scope: !10471)
!10502 = !DILocation(line: 1672, column: 9, scope: !10471)
!10503 = !DILocation(line: 1673, column: 10, scope: !10471)
!10504 = !DILocation(line: 1673, column: 9, scope: !10471)
!10505 = !DILocation(line: 1673, column: 7, scope: !10471)
!10506 = !DILocation(line: 1676, column: 9, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 1676, column: 2)
!10508 = !DILocation(line: 1676, column: 7, scope: !10507)
!10509 = !DILocation(line: 1676, column: 14, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 1676, column: 2)
!10511 = !DILocation(line: 1676, column: 18, scope: !10510)
!10512 = !DILocation(line: 1676, column: 16, scope: !10510)
!10513 = !DILocation(line: 1676, column: 2, scope: !10507)
!10514 = !DILocation(line: 1677, column: 10, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 1677, column: 3)
!10516 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 1676, column: 32)
!10517 = !DILocation(line: 1677, column: 8, scope: !10515)
!10518 = !DILocation(line: 1677, column: 15, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 1677, column: 3)
!10520 = !DILocation(line: 1677, column: 20, scope: !10519)
!10521 = !DILocation(line: 1677, column: 26, scope: !10519)
!10522 = !DILocation(line: 1677, column: 29, scope: !10519)
!10523 = !DILocation(line: 1677, column: 17, scope: !10519)
!10524 = !DILocation(line: 1677, column: 3, scope: !10515)
!10525 = !DILocation(line: 1678, column: 18, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 1677, column: 57)
!10527 = !DILocation(line: 1678, column: 4, scope: !10526)
!10528 = !DILocation(line: 1678, column: 10, scope: !10526)
!10529 = !DILocation(line: 1678, column: 16, scope: !10526)
!10530 = !DILocation(line: 1679, column: 19, scope: !10526)
!10531 = !DILocation(line: 1679, column: 18, scope: !10526)
!10532 = !DILocation(line: 1679, column: 24, scope: !10526)
!10533 = !DILocation(line: 1679, column: 30, scope: !10526)
!10534 = !DILocation(line: 1679, column: 33, scope: !10526)
!10535 = !DILocation(line: 1679, column: 35, scope: !10526)
!10536 = !DILocation(line: 1679, column: 17, scope: !10526)
!10537 = !DILocation(line: 1679, column: 40, scope: !10526)
!10538 = !DILocation(line: 1679, column: 4, scope: !10526)
!10539 = !DILocation(line: 1680, column: 3, scope: !10526)
!10540 = !DILocation(line: 1677, column: 44, scope: !10519)
!10541 = !DILocation(line: 1677, column: 49, scope: !10519)
!10542 = !DILocation(line: 1677, column: 3, scope: !10519)
!10543 = distinct !{!10543, !10524, !10544}
!10544 = !DILocation(line: 1680, column: 3, scope: !10515)
!10545 = !DILocation(line: 1681, column: 2, scope: !10516)
!10546 = !DILocation(line: 1676, column: 27, scope: !10510)
!10547 = !DILocation(line: 1676, column: 2, scope: !10510)
!10548 = distinct !{!10548, !10513, !10549}
!10549 = !DILocation(line: 1681, column: 2, scope: !10507)
!10550 = !DILocation(line: 1682, column: 1, scope: !10471)
!10551 = distinct !DISubprogram(name: "create_old_vert_edge_map", scope: !3, file: !3, line: 1684, type: !10552, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10552 = !DISubroutineType(types: !10553)
!10553 = !{null, !8342, !8347, !10554, !2620, !2620}
!10554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10555, size: 64)
!10555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7495)
!10556 = !DILocalVariable(name: "map", arg: 1, scope: !10551, file: !3, line: 1684, type: !8342)
!10557 = !DILocation(line: 1684, column: 49, scope: !10551)
!10558 = !DILocalVariable(name: "mem", arg: 2, scope: !10551, file: !3, line: 1684, type: !8347)
!10559 = !DILocation(line: 1684, column: 66, scope: !10551)
!10560 = !DILocalVariable(name: "medge", arg: 3, scope: !10551, file: !3, line: 1684, type: !10554)
!10561 = !DILocation(line: 1684, column: 91, scope: !10551)
!10562 = !DILocalVariable(name: "totvert", arg: 4, scope: !10551, file: !3, line: 1685, type: !2620)
!10563 = !DILocation(line: 1685, column: 48, scope: !10551)
!10564 = !DILocalVariable(name: "totedge", arg: 5, scope: !10551, file: !3, line: 1685, type: !2620)
!10565 = !DILocation(line: 1685, column: 67, scope: !10551)
!10566 = !DILocalVariable(name: "i", scope: !10551, file: !3, line: 1687, type: !196)
!10567 = !DILocation(line: 1687, column: 6, scope: !10551)
!10568 = !DILocalVariable(name: "j", scope: !10551, file: !3, line: 1687, type: !196)
!10569 = !DILocation(line: 1687, column: 9, scope: !10551)
!10570 = !DILocalVariable(name: "node", scope: !10551, file: !3, line: 1688, type: !8348)
!10571 = !DILocation(line: 1688, column: 13, scope: !10551)
!10572 = !DILocation(line: 1690, column: 11, scope: !10551)
!10573 = !DILocation(line: 1690, column: 42, scope: !10551)
!10574 = !DILocation(line: 1690, column: 40, scope: !10551)
!10575 = !DILocation(line: 1690, column: 4, scope: !10551)
!10576 = !DILocation(line: 1690, column: 9, scope: !10551)
!10577 = !DILocation(line: 1691, column: 11, scope: !10551)
!10578 = !DILocation(line: 1691, column: 43, scope: !10551)
!10579 = !DILocation(line: 1691, column: 41, scope: !10551)
!10580 = !DILocation(line: 1691, column: 51, scope: !10551)
!10581 = !DILocation(line: 1691, column: 4, scope: !10551)
!10582 = !DILocation(line: 1691, column: 9, scope: !10551)
!10583 = !DILocation(line: 1692, column: 10, scope: !10551)
!10584 = !DILocation(line: 1692, column: 9, scope: !10551)
!10585 = !DILocation(line: 1692, column: 7, scope: !10551)
!10586 = !DILocation(line: 1695, column: 9, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 1695, column: 2)
!10588 = !DILocation(line: 1695, column: 7, scope: !10587)
!10589 = !DILocation(line: 1695, column: 14, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 1695, column: 2)
!10591 = !DILocation(line: 1695, column: 18, scope: !10590)
!10592 = !DILocation(line: 1695, column: 16, scope: !10590)
!10593 = !DILocation(line: 1695, column: 2, scope: !10587)
!10594 = !DILocation(line: 1696, column: 10, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 1696, column: 3)
!10596 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 1695, column: 32)
!10597 = !DILocation(line: 1696, column: 8, scope: !10595)
!10598 = !DILocation(line: 1696, column: 15, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 1696, column: 3)
!10600 = !DILocation(line: 1696, column: 17, scope: !10599)
!10601 = !DILocation(line: 1696, column: 3, scope: !10595)
!10602 = !DILocation(line: 1697, column: 18, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 1696, column: 35)
!10604 = !DILocation(line: 1697, column: 4, scope: !10603)
!10605 = !DILocation(line: 1697, column: 10, scope: !10603)
!10606 = !DILocation(line: 1697, column: 16, scope: !10603)
!10607 = !DILocation(line: 1698, column: 19, scope: !10603)
!10608 = !DILocation(line: 1698, column: 18, scope: !10603)
!10609 = !DILocation(line: 1698, column: 24, scope: !10603)
!10610 = !DILocation(line: 1698, column: 30, scope: !10603)
!10611 = !DILocation(line: 1698, column: 33, scope: !10603)
!10612 = !DILocation(line: 1698, column: 35, scope: !10603)
!10613 = !DILocation(line: 1698, column: 17, scope: !10603)
!10614 = !DILocation(line: 1698, column: 40, scope: !10603)
!10615 = !DILocation(line: 1698, column: 4, scope: !10603)
!10616 = !DILocation(line: 1699, column: 3, scope: !10603)
!10617 = !DILocation(line: 1696, column: 22, scope: !10599)
!10618 = !DILocation(line: 1696, column: 27, scope: !10599)
!10619 = !DILocation(line: 1696, column: 3, scope: !10599)
!10620 = distinct !{!10620, !10601, !10621}
!10621 = !DILocation(line: 1699, column: 3, scope: !10595)
!10622 = !DILocation(line: 1700, column: 2, scope: !10596)
!10623 = !DILocation(line: 1695, column: 27, scope: !10590)
!10624 = !DILocation(line: 1695, column: 2, scope: !10590)
!10625 = distinct !{!10625, !10593, !10626}
!10626 = !DILocation(line: 1700, column: 2, scope: !10587)
!10627 = !DILocation(line: 1701, column: 1, scope: !10551)
!10628 = distinct !DISubprogram(name: "multires_load_old_faces", scope: !3, file: !3, line: 1755, type: !10629, scopeLine: 1757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10629 = !DISubroutineType(types: !10630)
!10630 = !{null, !8342, !8342, !7462, !426, !196, !196, !196, !196, !196, !196, !196}
!10631 = !DILocalVariable(name: "fmap", arg: 1, scope: !10628, file: !3, line: 1755, type: !8342)
!10632 = !DILocation(line: 1755, column: 48, scope: !10628)
!10633 = !DILocalVariable(name: "emap", arg: 2, scope: !10628, file: !3, line: 1755, type: !8342)
!10634 = !DILocation(line: 1755, column: 65, scope: !10628)
!10635 = !DILocalVariable(name: "lvl", arg: 3, scope: !10628, file: !3, line: 1755, type: !7462)
!10636 = !DILocation(line: 1755, column: 86, scope: !10628)
!10637 = !DILocalVariable(name: "vvmap", arg: 4, scope: !10628, file: !3, line: 1755, type: !426)
!10638 = !DILocation(line: 1755, column: 96, scope: !10628)
!10639 = !DILocalVariable(name: "dst", arg: 5, scope: !10628, file: !3, line: 1755, type: !196)
!10640 = !DILocation(line: 1755, column: 107, scope: !10628)
!10641 = !DILocalVariable(name: "v1", arg: 6, scope: !10628, file: !3, line: 1756, type: !196)
!10642 = !DILocation(line: 1756, column: 41, scope: !10628)
!10643 = !DILocalVariable(name: "v2", arg: 7, scope: !10628, file: !3, line: 1756, type: !196)
!10644 = !DILocation(line: 1756, column: 49, scope: !10628)
!10645 = !DILocalVariable(name: "v3", arg: 8, scope: !10628, file: !3, line: 1756, type: !196)
!10646 = !DILocation(line: 1756, column: 57, scope: !10628)
!10647 = !DILocalVariable(name: "v4", arg: 9, scope: !10628, file: !3, line: 1756, type: !196)
!10648 = !DILocation(line: 1756, column: 65, scope: !10628)
!10649 = !DILocalVariable(name: "st2", arg: 10, scope: !10628, file: !3, line: 1756, type: !196)
!10650 = !DILocation(line: 1756, column: 73, scope: !10628)
!10651 = !DILocalVariable(name: "st3", arg: 11, scope: !10628, file: !3, line: 1756, type: !196)
!10652 = !DILocation(line: 1756, column: 82, scope: !10628)
!10653 = !DILocalVariable(name: "fmid", scope: !10628, file: !3, line: 1758, type: !196)
!10654 = !DILocation(line: 1758, column: 6, scope: !10628)
!10655 = !DILocalVariable(name: "emid13", scope: !10628, file: !3, line: 1759, type: !196)
!10656 = !DILocation(line: 1759, column: 6, scope: !10628)
!10657 = !DILocalVariable(name: "emid14", scope: !10628, file: !3, line: 1759, type: !196)
!10658 = !DILocation(line: 1759, column: 14, scope: !10628)
!10659 = !DILocalVariable(name: "emid23", scope: !10628, file: !3, line: 1759, type: !196)
!10660 = !DILocation(line: 1759, column: 22, scope: !10628)
!10661 = !DILocalVariable(name: "emid24", scope: !10628, file: !3, line: 1759, type: !196)
!10662 = !DILocation(line: 1759, column: 30, scope: !10628)
!10663 = !DILocation(line: 1761, column: 6, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 1761, column: 6)
!10665 = !DILocation(line: 1761, column: 10, scope: !10664)
!10666 = !DILocation(line: 1761, column: 13, scope: !10664)
!10667 = !DILocation(line: 1761, column: 18, scope: !10664)
!10668 = !DILocation(line: 1761, column: 6, scope: !10628)
!10669 = !DILocation(line: 1762, column: 24, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10664, file: !3, line: 1761, column: 24)
!10671 = !DILocation(line: 1762, column: 33, scope: !10670)
!10672 = !DILocation(line: 1762, column: 38, scope: !10670)
!10673 = !DILocation(line: 1762, column: 45, scope: !10670)
!10674 = !DILocation(line: 1762, column: 49, scope: !10670)
!10675 = !DILocation(line: 1762, column: 53, scope: !10670)
!10676 = !DILocation(line: 1762, column: 57, scope: !10670)
!10677 = !DILocation(line: 1762, column: 10, scope: !10670)
!10678 = !DILocation(line: 1762, column: 62, scope: !10670)
!10679 = !DILocation(line: 1762, column: 8, scope: !10670)
!10680 = !DILocation(line: 1763, column: 16, scope: !10670)
!10681 = !DILocation(line: 1763, column: 3, scope: !10670)
!10682 = !DILocation(line: 1763, column: 9, scope: !10670)
!10683 = !DILocation(line: 1763, column: 14, scope: !10670)
!10684 = !DILocation(line: 1765, column: 26, scope: !10670)
!10685 = !DILocation(line: 1765, column: 35, scope: !10670)
!10686 = !DILocation(line: 1765, column: 40, scope: !10670)
!10687 = !DILocation(line: 1765, column: 47, scope: !10670)
!10688 = !DILocation(line: 1765, column: 51, scope: !10670)
!10689 = !DILocation(line: 1765, column: 12, scope: !10670)
!10690 = !DILocation(line: 1765, column: 56, scope: !10670)
!10691 = !DILocation(line: 1765, column: 10, scope: !10670)
!10692 = !DILocation(line: 1766, column: 26, scope: !10670)
!10693 = !DILocation(line: 1766, column: 35, scope: !10670)
!10694 = !DILocation(line: 1766, column: 40, scope: !10670)
!10695 = !DILocation(line: 1766, column: 47, scope: !10670)
!10696 = !DILocation(line: 1766, column: 51, scope: !10670)
!10697 = !DILocation(line: 1766, column: 12, scope: !10670)
!10698 = !DILocation(line: 1766, column: 56, scope: !10670)
!10699 = !DILocation(line: 1766, column: 10, scope: !10670)
!10700 = !DILocation(line: 1767, column: 26, scope: !10670)
!10701 = !DILocation(line: 1767, column: 35, scope: !10670)
!10702 = !DILocation(line: 1767, column: 40, scope: !10670)
!10703 = !DILocation(line: 1767, column: 47, scope: !10670)
!10704 = !DILocation(line: 1767, column: 51, scope: !10670)
!10705 = !DILocation(line: 1767, column: 12, scope: !10670)
!10706 = !DILocation(line: 1767, column: 56, scope: !10670)
!10707 = !DILocation(line: 1767, column: 10, scope: !10670)
!10708 = !DILocation(line: 1768, column: 26, scope: !10670)
!10709 = !DILocation(line: 1768, column: 35, scope: !10670)
!10710 = !DILocation(line: 1768, column: 40, scope: !10670)
!10711 = !DILocation(line: 1768, column: 47, scope: !10670)
!10712 = !DILocation(line: 1768, column: 51, scope: !10670)
!10713 = !DILocation(line: 1768, column: 12, scope: !10670)
!10714 = !DILocation(line: 1768, column: 56, scope: !10670)
!10715 = !DILocation(line: 1768, column: 10, scope: !10670)
!10716 = !DILocation(line: 1771, column: 27, scope: !10670)
!10717 = !DILocation(line: 1771, column: 32, scope: !10670)
!10718 = !DILocation(line: 1771, column: 37, scope: !10670)
!10719 = !DILocation(line: 1771, column: 42, scope: !10670)
!10720 = !DILocation(line: 1771, column: 47, scope: !10670)
!10721 = !DILocation(line: 1771, column: 52, scope: !10670)
!10722 = !DILocation(line: 1771, column: 58, scope: !10670)
!10723 = !DILocation(line: 1771, column: 65, scope: !10670)
!10724 = !DILocation(line: 1771, column: 71, scope: !10670)
!10725 = !DILocation(line: 1771, column: 77, scope: !10670)
!10726 = !DILocation(line: 1771, column: 75, scope: !10670)
!10727 = !DILocation(line: 1771, column: 69, scope: !10670)
!10728 = !DILocation(line: 1771, column: 83, scope: !10670)
!10729 = !DILocation(line: 1771, column: 81, scope: !10670)
!10730 = !DILocation(line: 1772, column: 27, scope: !10670)
!10731 = !DILocation(line: 1772, column: 33, scope: !10670)
!10732 = !DILocation(line: 1772, column: 37, scope: !10670)
!10733 = !DILocation(line: 1772, column: 45, scope: !10670)
!10734 = !DILocation(line: 1772, column: 53, scope: !10670)
!10735 = !DILocation(line: 1772, column: 58, scope: !10670)
!10736 = !DILocation(line: 1772, column: 62, scope: !10670)
!10737 = !DILocation(line: 1771, column: 3, scope: !10670)
!10738 = !DILocation(line: 1774, column: 27, scope: !10670)
!10739 = !DILocation(line: 1774, column: 32, scope: !10670)
!10740 = !DILocation(line: 1774, column: 37, scope: !10670)
!10741 = !DILocation(line: 1774, column: 42, scope: !10670)
!10742 = !DILocation(line: 1774, column: 47, scope: !10670)
!10743 = !DILocation(line: 1774, column: 52, scope: !10670)
!10744 = !DILocation(line: 1774, column: 58, scope: !10670)
!10745 = !DILocation(line: 1774, column: 65, scope: !10670)
!10746 = !DILocation(line: 1774, column: 71, scope: !10670)
!10747 = !DILocation(line: 1774, column: 77, scope: !10670)
!10748 = !DILocation(line: 1774, column: 75, scope: !10670)
!10749 = !DILocation(line: 1774, column: 69, scope: !10670)
!10750 = !DILocation(line: 1774, column: 83, scope: !10670)
!10751 = !DILocation(line: 1774, column: 81, scope: !10670)
!10752 = !DILocation(line: 1775, column: 27, scope: !10670)
!10753 = !DILocation(line: 1775, column: 35, scope: !10670)
!10754 = !DILocation(line: 1775, column: 43, scope: !10670)
!10755 = !DILocation(line: 1775, column: 49, scope: !10670)
!10756 = !DILocation(line: 1775, column: 53, scope: !10670)
!10757 = !DILocation(line: 1775, column: 58, scope: !10670)
!10758 = !DILocation(line: 1775, column: 62, scope: !10670)
!10759 = !DILocation(line: 1774, column: 3, scope: !10670)
!10760 = !DILocation(line: 1777, column: 27, scope: !10670)
!10761 = !DILocation(line: 1777, column: 32, scope: !10670)
!10762 = !DILocation(line: 1777, column: 37, scope: !10670)
!10763 = !DILocation(line: 1777, column: 42, scope: !10670)
!10764 = !DILocation(line: 1777, column: 47, scope: !10670)
!10765 = !DILocation(line: 1777, column: 52, scope: !10670)
!10766 = !DILocation(line: 1777, column: 58, scope: !10670)
!10767 = !DILocation(line: 1777, column: 65, scope: !10670)
!10768 = !DILocation(line: 1777, column: 71, scope: !10670)
!10769 = !DILocation(line: 1777, column: 77, scope: !10670)
!10770 = !DILocation(line: 1777, column: 75, scope: !10670)
!10771 = !DILocation(line: 1777, column: 69, scope: !10670)
!10772 = !DILocation(line: 1777, column: 83, scope: !10670)
!10773 = !DILocation(line: 1777, column: 81, scope: !10670)
!10774 = !DILocation(line: 1778, column: 27, scope: !10670)
!10775 = !DILocation(line: 1778, column: 35, scope: !10670)
!10776 = !DILocation(line: 1778, column: 43, scope: !10670)
!10777 = !DILocation(line: 1778, column: 47, scope: !10670)
!10778 = !DILocation(line: 1778, column: 53, scope: !10670)
!10779 = !DILocation(line: 1778, column: 58, scope: !10670)
!10780 = !DILocation(line: 1778, column: 62, scope: !10670)
!10781 = !DILocation(line: 1777, column: 3, scope: !10670)
!10782 = !DILocation(line: 1780, column: 27, scope: !10670)
!10783 = !DILocation(line: 1780, column: 32, scope: !10670)
!10784 = !DILocation(line: 1780, column: 37, scope: !10670)
!10785 = !DILocation(line: 1780, column: 42, scope: !10670)
!10786 = !DILocation(line: 1780, column: 47, scope: !10670)
!10787 = !DILocation(line: 1780, column: 52, scope: !10670)
!10788 = !DILocation(line: 1780, column: 58, scope: !10670)
!10789 = !DILocation(line: 1780, column: 65, scope: !10670)
!10790 = !DILocation(line: 1780, column: 71, scope: !10670)
!10791 = !DILocation(line: 1780, column: 77, scope: !10670)
!10792 = !DILocation(line: 1780, column: 75, scope: !10670)
!10793 = !DILocation(line: 1780, column: 69, scope: !10670)
!10794 = !DILocation(line: 1780, column: 83, scope: !10670)
!10795 = !DILocation(line: 1780, column: 81, scope: !10670)
!10796 = !DILocation(line: 1781, column: 27, scope: !10670)
!10797 = !DILocation(line: 1781, column: 31, scope: !10670)
!10798 = !DILocation(line: 1781, column: 37, scope: !10670)
!10799 = !DILocation(line: 1781, column: 45, scope: !10670)
!10800 = !DILocation(line: 1781, column: 53, scope: !10670)
!10801 = !DILocation(line: 1781, column: 58, scope: !10670)
!10802 = !DILocation(line: 1781, column: 62, scope: !10670)
!10803 = !DILocation(line: 1780, column: 3, scope: !10670)
!10804 = !DILocation(line: 1783, column: 7, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 1783, column: 7)
!10806 = !DILocation(line: 1783, column: 12, scope: !10805)
!10807 = !DILocation(line: 1783, column: 18, scope: !10805)
!10808 = !DILocation(line: 1783, column: 7, scope: !10670)
!10809 = !DILocation(line: 1784, column: 28, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 1783, column: 24)
!10811 = !DILocation(line: 1784, column: 34, scope: !10810)
!10812 = !DILocation(line: 1784, column: 39, scope: !10810)
!10813 = !DILocation(line: 1784, column: 45, scope: !10810)
!10814 = !DILocation(line: 1784, column: 52, scope: !10810)
!10815 = !DILocation(line: 1784, column: 57, scope: !10810)
!10816 = !DILocation(line: 1784, column: 65, scope: !10810)
!10817 = !DILocation(line: 1784, column: 71, scope: !10810)
!10818 = !DILocation(line: 1784, column: 4, scope: !10810)
!10819 = !DILocation(line: 1785, column: 28, scope: !10810)
!10820 = !DILocation(line: 1785, column: 34, scope: !10810)
!10821 = !DILocation(line: 1785, column: 39, scope: !10810)
!10822 = !DILocation(line: 1785, column: 45, scope: !10810)
!10823 = !DILocation(line: 1785, column: 52, scope: !10810)
!10824 = !DILocation(line: 1785, column: 57, scope: !10810)
!10825 = !DILocation(line: 1785, column: 65, scope: !10810)
!10826 = !DILocation(line: 1785, column: 72, scope: !10810)
!10827 = !DILocation(line: 1785, column: 71, scope: !10810)
!10828 = !DILocation(line: 1785, column: 4, scope: !10810)
!10829 = !DILocation(line: 1786, column: 28, scope: !10810)
!10830 = !DILocation(line: 1786, column: 34, scope: !10810)
!10831 = !DILocation(line: 1786, column: 39, scope: !10810)
!10832 = !DILocation(line: 1786, column: 45, scope: !10810)
!10833 = !DILocation(line: 1786, column: 52, scope: !10810)
!10834 = !DILocation(line: 1786, column: 57, scope: !10810)
!10835 = !DILocation(line: 1786, column: 65, scope: !10810)
!10836 = !DILocation(line: 1786, column: 72, scope: !10810)
!10837 = !DILocation(line: 1786, column: 71, scope: !10810)
!10838 = !DILocation(line: 1786, column: 78, scope: !10810)
!10839 = !DILocation(line: 1786, column: 76, scope: !10810)
!10840 = !DILocation(line: 1786, column: 4, scope: !10810)
!10841 = !DILocation(line: 1787, column: 28, scope: !10810)
!10842 = !DILocation(line: 1787, column: 34, scope: !10810)
!10843 = !DILocation(line: 1787, column: 39, scope: !10810)
!10844 = !DILocation(line: 1787, column: 45, scope: !10810)
!10845 = !DILocation(line: 1787, column: 52, scope: !10810)
!10846 = !DILocation(line: 1787, column: 57, scope: !10810)
!10847 = !DILocation(line: 1787, column: 65, scope: !10810)
!10848 = !DILocation(line: 1787, column: 71, scope: !10810)
!10849 = !DILocation(line: 1787, column: 77, scope: !10810)
!10850 = !DILocation(line: 1787, column: 75, scope: !10810)
!10851 = !DILocation(line: 1787, column: 4, scope: !10810)
!10852 = !DILocation(line: 1788, column: 3, scope: !10810)
!10853 = !DILocation(line: 1789, column: 2, scope: !10670)
!10854 = !DILocation(line: 1790, column: 1, scope: !10628)
!10855 = distinct !DISubprogram(name: "find_old_edge", scope: !3, file: !3, line: 1730, type: !10856, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10856 = !DISubroutineType(types: !10857)
!10857 = !{!7494, !1323, !7494, !196, !196}
!10858 = !DILocalVariable(name: "map", arg: 1, scope: !10855, file: !3, line: 1730, type: !1323)
!10859 = !DILocation(line: 1730, column: 46, scope: !10855)
!10860 = !DILocalVariable(name: "edges", arg: 2, scope: !10855, file: !3, line: 1730, type: !7494)
!10861 = !DILocation(line: 1730, column: 65, scope: !10855)
!10862 = !DILocalVariable(name: "v1", arg: 3, scope: !10855, file: !3, line: 1730, type: !196)
!10863 = !DILocation(line: 1730, column: 76, scope: !10855)
!10864 = !DILocalVariable(name: "v2", arg: 4, scope: !10855, file: !3, line: 1730, type: !196)
!10865 = !DILocation(line: 1730, column: 84, scope: !10855)
!10866 = !DILocalVariable(name: "n1", scope: !10855, file: !3, line: 1732, type: !8348)
!10867 = !DILocation(line: 1732, column: 13, scope: !10855)
!10868 = !DILocalVariable(name: "n2", scope: !10855, file: !3, line: 1732, type: !8348)
!10869 = !DILocation(line: 1732, column: 18, scope: !10855)
!10870 = !DILocation(line: 1734, column: 12, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 1734, column: 2)
!10872 = !DILocation(line: 1734, column: 16, scope: !10871)
!10873 = !DILocation(line: 1734, column: 20, scope: !10871)
!10874 = !DILocation(line: 1734, column: 10, scope: !10871)
!10875 = !DILocation(line: 1734, column: 7, scope: !10871)
!10876 = !DILocation(line: 1734, column: 27, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 1734, column: 2)
!10878 = !DILocation(line: 1734, column: 2, scope: !10871)
!10879 = !DILocation(line: 1735, column: 13, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !3, line: 1735, column: 3)
!10881 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 1734, column: 46)
!10882 = !DILocation(line: 1735, column: 17, scope: !10880)
!10883 = !DILocation(line: 1735, column: 21, scope: !10880)
!10884 = !DILocation(line: 1735, column: 11, scope: !10880)
!10885 = !DILocation(line: 1735, column: 8, scope: !10880)
!10886 = !DILocation(line: 1735, column: 28, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 1735, column: 3)
!10888 = !DILocation(line: 1735, column: 3, scope: !10880)
!10889 = !DILocation(line: 1736, column: 8, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10891, file: !3, line: 1736, column: 8)
!10891 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 1735, column: 47)
!10892 = !DILocation(line: 1736, column: 12, scope: !10890)
!10893 = !DILocation(line: 1736, column: 21, scope: !10890)
!10894 = !DILocation(line: 1736, column: 25, scope: !10890)
!10895 = !DILocation(line: 1736, column: 18, scope: !10890)
!10896 = !DILocation(line: 1736, column: 8, scope: !10891)
!10897 = !DILocation(line: 1737, column: 13, scope: !10890)
!10898 = !DILocation(line: 1737, column: 19, scope: !10890)
!10899 = !DILocation(line: 1737, column: 23, scope: !10890)
!10900 = !DILocation(line: 1737, column: 5, scope: !10890)
!10901 = !DILocation(line: 1738, column: 3, scope: !10891)
!10902 = !DILocation(line: 1735, column: 37, scope: !10887)
!10903 = !DILocation(line: 1735, column: 41, scope: !10887)
!10904 = !DILocation(line: 1735, column: 35, scope: !10887)
!10905 = !DILocation(line: 1735, column: 3, scope: !10887)
!10906 = distinct !{!10906, !10888, !10907}
!10907 = !DILocation(line: 1738, column: 3, scope: !10880)
!10908 = !DILocation(line: 1739, column: 2, scope: !10881)
!10909 = !DILocation(line: 1734, column: 36, scope: !10877)
!10910 = !DILocation(line: 1734, column: 40, scope: !10877)
!10911 = !DILocation(line: 1734, column: 34, scope: !10877)
!10912 = !DILocation(line: 1734, column: 2, scope: !10877)
!10913 = distinct !{!10913, !10878, !10914}
!10914 = !DILocation(line: 1739, column: 2, scope: !10871)
!10915 = !DILocation(line: 1741, column: 2, scope: !10855)
!10916 = !DILocation(line: 1742, column: 1, scope: !10855)
!10917 = distinct !DISubprogram(name: "find_old_face", scope: !3, file: !3, line: 1703, type: !10918, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!10918 = !DISubroutineType(types: !10919)
!10919 = !{!7470, !1323, !7470, !196, !196, !196, !196}
!10920 = !DILocalVariable(name: "map", arg: 1, scope: !10917, file: !3, line: 1703, type: !1323)
!10921 = !DILocation(line: 1703, column: 46, scope: !10917)
!10922 = !DILocalVariable(name: "faces", arg: 2, scope: !10917, file: !3, line: 1703, type: !7470)
!10923 = !DILocation(line: 1703, column: 65, scope: !10917)
!10924 = !DILocalVariable(name: "v1", arg: 3, scope: !10917, file: !3, line: 1703, type: !196)
!10925 = !DILocation(line: 1703, column: 76, scope: !10917)
!10926 = !DILocalVariable(name: "v2", arg: 4, scope: !10917, file: !3, line: 1703, type: !196)
!10927 = !DILocation(line: 1703, column: 84, scope: !10917)
!10928 = !DILocalVariable(name: "v3", arg: 5, scope: !10917, file: !3, line: 1703, type: !196)
!10929 = !DILocation(line: 1703, column: 92, scope: !10917)
!10930 = !DILocalVariable(name: "v4", arg: 6, scope: !10917, file: !3, line: 1703, type: !196)
!10931 = !DILocation(line: 1703, column: 100, scope: !10917)
!10932 = !DILocalVariable(name: "n1", scope: !10917, file: !3, line: 1705, type: !8348)
!10933 = !DILocation(line: 1705, column: 13, scope: !10917)
!10934 = !DILocalVariable(name: "v", scope: !10917, file: !3, line: 1706, type: !1054)
!10935 = !DILocation(line: 1706, column: 6, scope: !10917)
!10936 = !DILocalVariable(name: "i", scope: !10917, file: !3, line: 1706, type: !196)
!10937 = !DILocation(line: 1706, column: 12, scope: !10917)
!10938 = !DILocalVariable(name: "j", scope: !10917, file: !3, line: 1706, type: !196)
!10939 = !DILocation(line: 1706, column: 15, scope: !10917)
!10940 = !DILocation(line: 1708, column: 9, scope: !10917)
!10941 = !DILocation(line: 1708, column: 2, scope: !10917)
!10942 = !DILocation(line: 1708, column: 7, scope: !10917)
!10943 = !DILocation(line: 1709, column: 9, scope: !10917)
!10944 = !DILocation(line: 1709, column: 2, scope: !10917)
!10945 = !DILocation(line: 1709, column: 7, scope: !10917)
!10946 = !DILocation(line: 1710, column: 9, scope: !10917)
!10947 = !DILocation(line: 1710, column: 2, scope: !10917)
!10948 = !DILocation(line: 1710, column: 7, scope: !10917)
!10949 = !DILocation(line: 1711, column: 9, scope: !10917)
!10950 = !DILocation(line: 1711, column: 2, scope: !10917)
!10951 = !DILocation(line: 1711, column: 7, scope: !10917)
!10952 = !DILocation(line: 1713, column: 12, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 1713, column: 2)
!10954 = !DILocation(line: 1713, column: 16, scope: !10953)
!10955 = !DILocation(line: 1713, column: 20, scope: !10953)
!10956 = !DILocation(line: 1713, column: 10, scope: !10953)
!10957 = !DILocation(line: 1713, column: 7, scope: !10953)
!10958 = !DILocation(line: 1713, column: 27, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 1713, column: 2)
!10960 = !DILocation(line: 1713, column: 2, scope: !10953)
!10961 = !DILocalVariable(name: "fnd", scope: !10962, file: !3, line: 1714, type: !1054)
!10962 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 1713, column: 46)
!10963 = !DILocation(line: 1714, column: 7, scope: !10962)
!10964 = !DILocation(line: 1716, column: 10, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 1716, column: 3)
!10966 = !DILocation(line: 1716, column: 8, scope: !10965)
!10967 = !DILocation(line: 1716, column: 15, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 1716, column: 3)
!10969 = !DILocation(line: 1716, column: 17, scope: !10968)
!10970 = !DILocation(line: 1716, column: 3, scope: !10965)
!10971 = !DILocation(line: 1717, column: 11, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 1717, column: 4)
!10973 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 1716, column: 27)
!10974 = !DILocation(line: 1717, column: 9, scope: !10972)
!10975 = !DILocation(line: 1717, column: 16, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 1717, column: 4)
!10977 = !DILocation(line: 1717, column: 18, scope: !10976)
!10978 = !DILocation(line: 1717, column: 4, scope: !10972)
!10979 = !DILocation(line: 1718, column: 11, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 1718, column: 9)
!10981 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 1717, column: 28)
!10982 = !DILocation(line: 1718, column: 9, scope: !10980)
!10983 = !DILocation(line: 1718, column: 17, scope: !10980)
!10984 = !DILocation(line: 1718, column: 23, scope: !10980)
!10985 = !DILocation(line: 1718, column: 27, scope: !10980)
!10986 = !DILocation(line: 1718, column: 34, scope: !10980)
!10987 = !DILocation(line: 1718, column: 36, scope: !10980)
!10988 = !DILocation(line: 1718, column: 14, scope: !10980)
!10989 = !DILocation(line: 1718, column: 9, scope: !10981)
!10990 = !DILocation(line: 1719, column: 10, scope: !10980)
!10991 = !DILocation(line: 1719, column: 6, scope: !10980)
!10992 = !DILocation(line: 1719, column: 13, scope: !10980)
!10993 = !DILocation(line: 1720, column: 4, scope: !10981)
!10994 = !DILocation(line: 1717, column: 23, scope: !10976)
!10995 = !DILocation(line: 1717, column: 4, scope: !10976)
!10996 = distinct !{!10996, !10978, !10997}
!10997 = !DILocation(line: 1720, column: 4, scope: !10972)
!10998 = !DILocation(line: 1721, column: 3, scope: !10973)
!10999 = !DILocation(line: 1716, column: 22, scope: !10968)
!11000 = !DILocation(line: 1716, column: 3, scope: !10968)
!11001 = distinct !{!11001, !10970, !11002}
!11002 = !DILocation(line: 1721, column: 3, scope: !10965)
!11003 = !DILocation(line: 1723, column: 7, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 1723, column: 7)
!11005 = !DILocation(line: 1723, column: 14, scope: !11004)
!11006 = !DILocation(line: 1723, column: 17, scope: !11004)
!11007 = !DILocation(line: 1723, column: 24, scope: !11004)
!11008 = !DILocation(line: 1723, column: 27, scope: !11004)
!11009 = !DILocation(line: 1723, column: 34, scope: !11004)
!11010 = !DILocation(line: 1723, column: 37, scope: !11004)
!11011 = !DILocation(line: 1723, column: 7, scope: !10962)
!11012 = !DILocation(line: 1724, column: 12, scope: !11004)
!11013 = !DILocation(line: 1724, column: 18, scope: !11004)
!11014 = !DILocation(line: 1724, column: 22, scope: !11004)
!11015 = !DILocation(line: 1724, column: 4, scope: !11004)
!11016 = !DILocation(line: 1725, column: 2, scope: !10962)
!11017 = !DILocation(line: 1713, column: 36, scope: !10959)
!11018 = !DILocation(line: 1713, column: 40, scope: !10959)
!11019 = !DILocation(line: 1713, column: 34, scope: !10959)
!11020 = !DILocation(line: 1713, column: 2, scope: !10959)
!11021 = distinct !{!11021, !10960, !11022}
!11022 = !DILocation(line: 1725, column: 2, scope: !10953)
!11023 = !DILocation(line: 1727, column: 2, scope: !10917)
!11024 = !DILocation(line: 1728, column: 1, scope: !10917)
!11025 = distinct !DISubprogram(name: "multires_load_old_edges", scope: !3, file: !3, line: 1744, type: !11026, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2632)
!11026 = !DISubroutineType(types: !11027)
!11027 = !{null, !8342, !7462, !426, !196, !196, !196, !196}
!11028 = !DILocalVariable(name: "emap", arg: 1, scope: !11025, file: !3, line: 1744, type: !8342)
!11029 = !DILocation(line: 1744, column: 48, scope: !11025)
!11030 = !DILocalVariable(name: "lvl", arg: 2, scope: !11025, file: !3, line: 1744, type: !7462)
!11031 = !DILocation(line: 1744, column: 69, scope: !11025)
!11032 = !DILocalVariable(name: "vvmap", arg: 3, scope: !11025, file: !3, line: 1744, type: !426)
!11033 = !DILocation(line: 1744, column: 79, scope: !11025)
!11034 = !DILocalVariable(name: "dst", arg: 4, scope: !11025, file: !3, line: 1744, type: !196)
!11035 = !DILocation(line: 1744, column: 90, scope: !11025)
!11036 = !DILocalVariable(name: "v1", arg: 5, scope: !11025, file: !3, line: 1744, type: !196)
!11037 = !DILocation(line: 1744, column: 99, scope: !11025)
!11038 = !DILocalVariable(name: "v2", arg: 6, scope: !11025, file: !3, line: 1744, type: !196)
!11039 = !DILocation(line: 1744, column: 107, scope: !11025)
!11040 = !DILocalVariable(name: "mov", arg: 7, scope: !11025, file: !3, line: 1744, type: !196)
!11041 = !DILocation(line: 1744, column: 115, scope: !11025)
!11042 = !DILocalVariable(name: "emid", scope: !11025, file: !3, line: 1746, type: !196)
!11043 = !DILocation(line: 1746, column: 6, scope: !11025)
!11044 = !DILocation(line: 1746, column: 27, scope: !11025)
!11045 = !DILocation(line: 1746, column: 36, scope: !11025)
!11046 = !DILocation(line: 1746, column: 41, scope: !11025)
!11047 = !DILocation(line: 1746, column: 48, scope: !11025)
!11048 = !DILocation(line: 1746, column: 52, scope: !11025)
!11049 = !DILocation(line: 1746, column: 13, scope: !11025)
!11050 = !DILocation(line: 1746, column: 57, scope: !11025)
!11051 = !DILocation(line: 1747, column: 21, scope: !11025)
!11052 = !DILocation(line: 1747, column: 2, scope: !11025)
!11053 = !DILocation(line: 1747, column: 8, scope: !11025)
!11054 = !DILocation(line: 1747, column: 14, scope: !11025)
!11055 = !DILocation(line: 1747, column: 12, scope: !11025)
!11056 = !DILocation(line: 1747, column: 19, scope: !11025)
!11057 = !DILocation(line: 1749, column: 6, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 1749, column: 6)
!11059 = !DILocation(line: 1749, column: 11, scope: !11058)
!11060 = !DILocation(line: 1749, column: 17, scope: !11058)
!11061 = !DILocation(line: 1749, column: 6, scope: !11025)
!11062 = !DILocation(line: 1750, column: 27, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 1749, column: 23)
!11064 = !DILocation(line: 1750, column: 32, scope: !11063)
!11065 = !DILocation(line: 1750, column: 37, scope: !11063)
!11066 = !DILocation(line: 1750, column: 42, scope: !11063)
!11067 = !DILocation(line: 1750, column: 48, scope: !11063)
!11068 = !DILocation(line: 1750, column: 55, scope: !11063)
!11069 = !DILocation(line: 1750, column: 61, scope: !11063)
!11070 = !DILocation(line: 1750, column: 59, scope: !11063)
!11071 = !DILocation(line: 1750, column: 66, scope: !11063)
!11072 = !DILocation(line: 1750, column: 70, scope: !11063)
!11073 = !DILocation(line: 1750, column: 76, scope: !11063)
!11074 = !DILocation(line: 1750, column: 80, scope: !11063)
!11075 = !DILocation(line: 1750, column: 3, scope: !11063)
!11076 = !DILocation(line: 1751, column: 27, scope: !11063)
!11077 = !DILocation(line: 1751, column: 32, scope: !11063)
!11078 = !DILocation(line: 1751, column: 37, scope: !11063)
!11079 = !DILocation(line: 1751, column: 42, scope: !11063)
!11080 = !DILocation(line: 1751, column: 48, scope: !11063)
!11081 = !DILocation(line: 1751, column: 55, scope: !11063)
!11082 = !DILocation(line: 1751, column: 61, scope: !11063)
!11083 = !DILocation(line: 1751, column: 59, scope: !11063)
!11084 = !DILocation(line: 1751, column: 66, scope: !11063)
!11085 = !DILocation(line: 1751, column: 70, scope: !11063)
!11086 = !DILocation(line: 1751, column: 77, scope: !11063)
!11087 = !DILocation(line: 1751, column: 76, scope: !11063)
!11088 = !DILocation(line: 1751, column: 81, scope: !11063)
!11089 = !DILocation(line: 1751, column: 3, scope: !11063)
!11090 = !DILocation(line: 1752, column: 2, scope: !11063)
!11091 = !DILocation(line: 1753, column: 1, scope: !11025)
