; ModuleID = 'blender/source/blender/makesrna/intern/rna_access.c'
source_filename = "blender/source/blender/makesrna/intern/rna_access.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.StructRNA = type { %struct.ContainerRNA, i8*, i8*, i8*, i32, i8*, i8*, i8*, i32, %struct.PropertyRNA*, %struct.PropertyRNA*, %struct.StructRNA*, %struct.StructRNA*, %struct.StructRNA* (%struct.PointerRNA*)*, i8* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)*, void (%struct.Main*, %struct.StructRNA*)*, i8** (%struct.PointerRNA*)*, %struct.IDProperty* (%struct.PointerRNA*, i8)*, %struct.ListBase }
%struct.ContainerRNA = type { i8*, i8*, %struct.GHash*, %struct.ListBase }
%struct.GHash = type opaque
%struct.PropertyRNA = type { %struct.PropertyRNA*, %struct.PropertyRNA*, i32, i8*, i32, i8*, i8*, i32, i8*, i32, i32, i32 (%struct.PointerRNA*, i32*)*, i32, [3 x i32], i32, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, i32, i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32)*, i32, i32, %struct.StructRNA*, i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.bContext = type opaque
%struct.FunctionRNA = type { %struct.ContainerRNA, i8*, i32, i8*, void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)*, %struct.PropertyRNA* }
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.ListBase = type { i8*, i8* }
%struct.BlenderRNA = type { %struct.ListBase }
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.IntPropertyRNA = type { %struct.PropertyRNA, i32 (%struct.PointerRNA*)*, void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)*, i32, i32, i32, i32, i32, i32, i32* }
%struct.FloatPropertyRNA = type { %struct.PropertyRNA, float (%struct.PointerRNA*)*, void (%struct.PointerRNA*, float)*, void (%struct.PointerRNA*, float*)*, void (%struct.PointerRNA*, float*)*, void (%struct.PointerRNA*, float*, float*, float*, float*)*, float (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)*, float, float, float, float, float, i32, float, float* }
%struct.CollectionPropertyRNA = type { %struct.PropertyRNA, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)*, void (%struct.CollectionPropertyIterator*)*, void (%struct.CollectionPropertyIterator*)*, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)*, i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)*, %struct.StructRNA* }
%struct.CollectionPropertyIterator = type { %struct.PointerRNA, %struct.PointerRNA, %struct.PropertyRNA*, %union.anon, i32, i32, %struct.PointerRNA, i32 }
%union.anon = type { %struct.ArrayIterator }
%struct.ArrayIterator = type { i8*, i8*, i8*, i32, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct.StringPropertyRNA = type { %struct.PropertyRNA, void (%struct.PointerRNA*, i8*)*, i32 (%struct.PointerRNA*)*, void (%struct.PointerRNA*, i8*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, i32, i8* }
%struct.PointerPropertyRNA = type { %struct.PropertyRNA, void (%struct.PointerRNA*, %struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*, %struct.PointerRNA*)*, %struct.StructRNA* }
%struct.tRnaUpdateCacheElem = type { %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem*, %struct.PointerRNA, %struct.ListBase }
%struct.EnumPropertyRNA = type { %struct.PropertyRNA, i32 (%struct.PointerRNA*)*, void (%struct.PointerRNA*, i32)*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, i8*, %struct.EnumPropertyItem*, i32, i32 }
%struct.FCurve = type opaque
%struct.LinkData = type { %struct.LinkData*, %struct.LinkData*, i8* }
%struct.BoolPropertyRNA = type { %struct.PropertyRNA, i32 (%struct.PointerRNA*)*, void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, i32, i32* }
%union.IDPropertyTemplate = type { %struct.anon.0 }
%struct.anon.0 = type { i8*, i16, i8 }
%struct.anon.1 = type { i16, i16 }
%struct.RawArray = type { i8*, i32, i32, i32 }
%struct.ListBaseIterator = type { %struct.Link*, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct.Link = type { %struct.Link*, %struct.Link* }
%struct.PropertyElemRNA = type { %struct.PropertyElemRNA*, %struct.PropertyElemRNA*, %struct.PointerRNA, %struct.PropertyRNA*, i32 }
%struct.DynStr = type opaque
%struct.IDP_Chain = type { %struct.IDP_Chain*, i8*, i32 }
%struct.ParameterDynAlloc = type { i64, i8* }
%struct.ParameterIterator = type { %struct.ParameterList*, i8*, i32, i32, %struct.PropertyRNA*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.CollectionPointerLink = type { %struct.CollectionPointerLink*, %struct.CollectionPointerLink*, %struct.PointerRNA }

@PointerRNA_NULL = dso_local constant %struct.PointerRNA zeroinitializer, align 8, !dbg !0
@BLENDER_RNA = external dso_local global %struct.BlenderRNA, align 8
@.str = private unnamed_addr constant [12 x i8] c"RNA_init gh\00", align 1
@RNA_BlendData = external dso_local global %struct.StructRNA, align 8
@RNA_BlenderRNA = external dso_local global %struct.StructRNA, align 8
@arraytypemap = internal global [10 x %struct.PropertyRNA*] [%struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.IntPropertyRNA, %struct.IntPropertyRNA* @rna_PropertyGroupItem_int_array, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_PropertyGroupItem_float_array, i32 0, i32 0), %struct.PropertyRNA* null, %struct.PropertyRNA* null, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_PropertyGroupItem_collection, i32 0, i32 0), %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_PropertyGroupItem_double_array, i32 0, i32 0), %struct.PropertyRNA* null], align 16, !dbg !2809
@typemap = internal global [10 x %struct.PropertyRNA*] [%struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_PropertyGroupItem_string, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.IntPropertyRNA, %struct.IntPropertyRNA* @rna_PropertyGroupItem_int, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_PropertyGroupItem_float, i32 0, i32 0), %struct.PropertyRNA* null, %struct.PropertyRNA* null, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_PropertyGroupItem_group, i32 0, i32 0), %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_PropertyGroupItem_double, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_PropertyGroupItem_idp_array, i32 0, i32 0)], align 16, !dbg !2814
@RNA_AnyType = external dso_local global %struct.StructRNA, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"XYZW\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"WXYZ\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"RGBA\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"soft_min\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"soft_max\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"precision\00", align 1
@RNA_UnknownType = external dso_local global %struct.StructRNA, align 8
@.str.10 = private unnamed_addr constant [35 x i8] c"%s %s: is not a pointer property.\0A\00", align 1
@__func__.RNA_property_pointer_poll = private unnamed_addr constant [26 x i8] c"RNA_property_pointer_poll\00", align 1
@DummyRNA_NULL_items = dso_local global [1 x %struct.EnumPropertyItem] zeroinitializer, align 16, !dbg !2803
@.str.11 = private unnamed_addr constant [8 x i8] c"DEFAULT\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"Default\00", align 1
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@DummyRNA_DEFAULT_items = dso_local global [2 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2806
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.14 = private unnamed_addr constant [17 x i8] c"enum_gettext_all\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@rna_updates_cache = internal global %struct.ListBase zeroinitializer, align 8, !dbg !2816
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.15 = private unnamed_addr constant [20 x i8] c"tRnaUpdateCacheElem\00", align 1
@__const.RNA_property_boolean_set.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.16 = private unnamed_addr constant [31 x i8] c"RNA_property_boolean_get_index\00", align 1
@__const.RNA_property_boolean_set_array.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.17 = private unnamed_addr constant [39 x i8] c"RNA_property_boolean_get_default_index\00", align 1
@__const.RNA_property_int_set.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.18 = private unnamed_addr constant [33 x i8] c"RNA_property_int_get_array_range\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"RNA_property_int_get_index\00", align 1
@__const.RNA_property_int_set_array.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.20 = private unnamed_addr constant [35 x i8] c"RNA_property_int_get_default_index\00", align 1
@__const.RNA_property_float_set.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.21 = private unnamed_addr constant [35 x i8] c"RNA_property_float_get_array_range\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"RNA_property_float_get_index\00", align 1
@__const.RNA_property_float_set_array.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.23 = private unnamed_addr constant [37 x i8] c"RNA_property_float_get_default_index\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"RNA_string_get_alloc\00", align 1
@__const.RNA_property_enum_set.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@__const.RNA_property_pointer_add.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.25 = private unnamed_addr constant [45 x i8] c"%s %s.%s: only supported for id properties.\0A\00", align 1
@__func__.RNA_property_pointer_add = private unnamed_addr constant [25 x i8] c"RNA_property_pointer_add\00", align 1
@__func__.RNA_property_pointer_remove = private unnamed_addr constant [28 x i8] c"RNA_property_pointer_remove\00", align 1
@__const.RNA_property_collection_add.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@__const.RNA_property_collection_add.val.26 = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.27 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@RNA_PropertyGroup = external dso_local global %struct.StructRNA, align 8
@.str.32 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"%s[\22%s\22]\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"[\22%s\22]\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"bpy.data.%s[\22%s\22]\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"%s.%s[%d]\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"%s[%d]\00", align 1
@.str.39 = private unnamed_addr constant [32 x i8] c"%s: %s.%s has no enum id '%s'.\0A\00", align 1
@__func__.RNA_enum_set_identifier = private unnamed_addr constant [24 x i8] c"RNA_enum_set_identifier\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"%s: %s.%s item %s not found.\0A\00", align 1
@__func__.RNA_enum_is_equal = private unnamed_addr constant [18 x i8] c"RNA_enum_is_equal\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"rna_type\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"\22%s\22:%s\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"None\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"%s=%s\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c", %s=%s\00", align 1
@RNA_Function = external dso_local global %struct.StructRNA, align 8
@.str.50 = private unnamed_addr constant [11 x i8] c"parameters\00", align 1
@.str.51 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c", %d\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c", %g\00", align 1
@.str.57 = private unnamed_addr constant [23 x i8] c"RNA_property_as_string\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"RNA_property_as_string esc\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"'%s'\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c", '%s'\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"set()\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"'<UNKNOWN ENUM>'\00", align 1
@.str.64 = private unnamed_addr constant [17 x i8] c"'<UNKNOWN TYPE>'\00", align 1
@.str.65 = private unnamed_addr constant [26 x i8] c"RNA_parameter_list_create\00", align 1
@__func__.RNA_parameter_set = private unnamed_addr constant [18 x i8] c"RNA_parameter_set\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.66 = private unnamed_addr constant [38 x i8] c"%s.%s: missing required parameter %s\0A\00", align 1
@.str.67 = private unnamed_addr constant [92 x i8] c"%s.%s: for parameter %s, was expecting an array of %i elements, passed %i elements instead\0A\00", align 1
@.str.68 = private unnamed_addr constant [99 x i8] c"%s.%s: for return parameter %s, was expecting an array of %i elements, passed %i elements instead\0A\00", align 1
@.str.69 = private unnamed_addr constant [25 x i8] c"reset_defaults - boolean\00", align 1
@.str.70 = private unnamed_addr constant [21 x i8] c"reset_defaults - int\00", align 1
@.str.71 = private unnamed_addr constant [23 x i8] c"reset_defaults - float\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"copy - boolean\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"copy - int\00", align 1
@.str.74 = private unnamed_addr constant [13 x i8] c"copy - float\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c"RNA equals\00", align 1
@rna_PropertyGroupItem_int_array = external dso_local global %struct.IntPropertyRNA, align 8
@rna_PropertyGroupItem_float_array = external dso_local global %struct.FloatPropertyRNA, align 8
@rna_PropertyGroupItem_collection = external dso_local global %struct.CollectionPropertyRNA, align 8
@rna_PropertyGroupItem_double_array = external dso_local global %struct.FloatPropertyRNA, align 8
@rna_PropertyGroupItem_string = external dso_local global %struct.StringPropertyRNA, align 8
@rna_PropertyGroupItem_int = external dso_local global %struct.IntPropertyRNA, align 8
@rna_PropertyGroupItem_float = external dso_local global %struct.FloatPropertyRNA, align 8
@rna_PropertyGroupItem_group = external dso_local global %struct.PointerPropertyRNA, align 8
@rna_PropertyGroupItem_double = external dso_local global %struct.FloatPropertyRNA, align 8
@rna_PropertyGroupItem_idp_array = external dso_local global %struct.CollectionPropertyRNA, align 8
@.str.76 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"_RNA_UI\00", align 1
@.str.78 = private unnamed_addr constant [49 x i8] c"Only boolean, int and float properties supported\00", align 1
@.str.79 = private unnamed_addr constant [44 x i8] c"Array length mismatch (expected %d, got %d)\00", align 1
@.str.80 = private unnamed_addr constant [30 x i8] c"Property named '%s' not found\00", align 1
@.str.81 = private unnamed_addr constant [46 x i8] c"Array length mismatch (got %d, expected more)\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"RNA tmparray\0A\00", align 1
@__func__.rna_path_parse = private unnamed_addr constant [15 x i8] c"rna_path_parse\00", align 1
@.str.83 = private unnamed_addr constant [15 x i8] c"rna_path_token\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c".%s[%d]\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c".%s\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"True\00", align 1
@.str.87 = private unnamed_addr constant [6 x i8] c"False\00", align 1
@.str.88 = private unnamed_addr constant [60 x i8] c"%s.%s: wrong type for parameter %s, a boolean was expected\0A\00", align 1
@.str.89 = private unnamed_addr constant [61 x i8] c"%s.%s: wrong type for parameter %s, an integer was expected\0A\00", align 1
@.str.90 = private unnamed_addr constant [58 x i8] c"%s.%s: wrong type for parameter %s, a float was expected\0A\00", align 1
@.str.91 = private unnamed_addr constant [59 x i8] c"%s.%s: wrong type for parameter %s, a string was expected\0A\00", align 1
@.str.92 = private unnamed_addr constant [58 x i8] c"%s.%s: wrong type for parameter %s, an enum was expected\0A\00", align 1
@.str.93 = private unnamed_addr constant [60 x i8] c"%s.%s: wrong type for parameter %s, an object was expected\0A\00", align 1
@.str.94 = private unnamed_addr constant [100 x i8] c"%s.%s: wrong type for parameter %s, an object of type %s was expected, passed an object of type %s\0A\00", align 1
@.str.95 = private unnamed_addr constant [63 x i8] c"%s.%s: wrong type for parameter %s, a collection was expected\0A\00", align 1
@.str.96 = private unnamed_addr constant [128 x i8] c"%s.%s: wrong type for parameter %s, a collection of objects of type %s was expected, passed a collection of objects of type %s\0A\00", align 1
@.str.97 = private unnamed_addr constant [23 x i8] c"CCollectionPointerLink\00", align 1
@.str.98 = private unnamed_addr constant [38 x i8] c"%s.%s: unknown type for parameter %s\0A\00", align 1
@.str.99 = private unnamed_addr constant [44 x i8] c"%s.%s: unknown array type for parameter %s\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_init() #0 !dbg !2822 {
entry:
  %srna = alloca %struct.StructRNA*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna, metadata !2826, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !2828, metadata !DIExpression()), !dbg !2829
  %0 = load i8*, i8** getelementptr inbounds (%struct.BlenderRNA, %struct.BlenderRNA* @BLENDER_RNA, i32 0, i32 0, i32 0), align 8, !dbg !2830
  %1 = bitcast i8* %0 to %struct.StructRNA*, !dbg !2832
  store %struct.StructRNA* %1, %struct.StructRNA** %srna, align 8, !dbg !2833
  br label %for.cond, !dbg !2834

for.cond:                                         ; preds = %for.inc13, %entry
  %2 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2835
  %tobool = icmp ne %struct.StructRNA* %2, null, !dbg !2837
  br i1 %tobool, label %for.body, label %for.end16, !dbg !2837

for.body:                                         ; preds = %for.cond
  %3 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2838
  %cont = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %3, i32 0, i32 0, !dbg !2841
  %prophash = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 2, !dbg !2842
  %4 = load %struct.GHash*, %struct.GHash** %prophash, align 8, !dbg !2842
  %tobool1 = icmp ne %struct.GHash* %4, null, !dbg !2838
  br i1 %tobool1, label %if.end12, label %if.then, !dbg !2843

if.then:                                          ; preds = %for.body
  %call = call %struct.GHash* @BLI_ghash_str_new(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)), !dbg !2844
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2846
  %cont2 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %5, i32 0, i32 0, !dbg !2847
  %prophash3 = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont2, i32 0, i32 2, !dbg !2848
  store %struct.GHash* %call, %struct.GHash** %prophash3, align 8, !dbg !2849
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2850
  %cont4 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %6, i32 0, i32 0, !dbg !2852
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont4, i32 0, i32 3, !dbg !2853
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %properties, i32 0, i32 0, !dbg !2854
  %7 = load i8*, i8** %first, align 8, !dbg !2854
  %8 = bitcast i8* %7 to %struct.PropertyRNA*, !dbg !2850
  store %struct.PropertyRNA* %8, %struct.PropertyRNA** %prop, align 8, !dbg !2855
  br label %for.cond5, !dbg !2856

for.cond5:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2857
  %tobool6 = icmp ne %struct.PropertyRNA* %9, null, !dbg !2859
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !2859

for.body7:                                        ; preds = %for.cond5
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2860
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %10, i32 0, i32 4, !dbg !2862
  %11 = load i32, i32* %flag, align 8, !dbg !2862
  %and = and i32 %11, 128, !dbg !2863
  %tobool8 = icmp ne i32 %and, 0, !dbg !2863
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !2864

if.then9:                                         ; preds = %for.body7
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2865
  %cont10 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %12, i32 0, i32 0, !dbg !2866
  %prophash11 = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont10, i32 0, i32 2, !dbg !2867
  %13 = load %struct.GHash*, %struct.GHash** %prophash11, align 8, !dbg !2867
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2868
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 3, !dbg !2869
  %15 = load i8*, i8** %identifier, align 8, !dbg !2869
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2870
  %17 = bitcast %struct.PropertyRNA* %16 to i8*, !dbg !2870
  call void @BLI_ghash_insert(%struct.GHash* %13, i8* %15, i8* %17), !dbg !2871
  br label %if.end, !dbg !2871

if.end:                                           ; preds = %if.then9, %for.body7
  br label %for.inc, !dbg !2872

for.inc:                                          ; preds = %if.end
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2873
  %next = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %18, i32 0, i32 0, !dbg !2874
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %next, align 8, !dbg !2874
  store %struct.PropertyRNA* %19, %struct.PropertyRNA** %prop, align 8, !dbg !2875
  br label %for.cond5, !dbg !2876, !llvm.loop !2877

for.end:                                          ; preds = %for.cond5
  br label %if.end12, !dbg !2879

if.end12:                                         ; preds = %for.end, %for.body
  br label %for.inc13, !dbg !2880

for.inc13:                                        ; preds = %if.end12
  %20 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2881
  %cont14 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %20, i32 0, i32 0, !dbg !2882
  %next15 = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont14, i32 0, i32 0, !dbg !2883
  %21 = load i8*, i8** %next15, align 8, !dbg !2883
  %22 = bitcast i8* %21 to %struct.StructRNA*, !dbg !2881
  store %struct.StructRNA* %22, %struct.StructRNA** %srna, align 8, !dbg !2884
  br label %for.cond, !dbg !2885, !llvm.loop !2886

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !2888
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.GHash* @BLI_ghash_str_new(i8*) #2

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_exit() #0 !dbg !2889 {
entry:
  %srna = alloca %struct.StructRNA*, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna, metadata !2890, metadata !DIExpression()), !dbg !2891
  call void @RNA_property_update_cache_free(), !dbg !2892
  %0 = load i8*, i8** getelementptr inbounds (%struct.BlenderRNA, %struct.BlenderRNA* @BLENDER_RNA, i32 0, i32 0, i32 0), align 8, !dbg !2893
  %1 = bitcast i8* %0 to %struct.StructRNA*, !dbg !2895
  store %struct.StructRNA* %1, %struct.StructRNA** %srna, align 8, !dbg !2896
  br label %for.cond, !dbg !2897

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2898
  %tobool = icmp ne %struct.StructRNA* %2, null, !dbg !2900
  br i1 %tobool, label %for.body, label %for.end, !dbg !2900

for.body:                                         ; preds = %for.cond
  %3 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2901
  %cont = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %3, i32 0, i32 0, !dbg !2904
  %prophash = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 2, !dbg !2905
  %4 = load %struct.GHash*, %struct.GHash** %prophash, align 8, !dbg !2905
  %tobool1 = icmp ne %struct.GHash* %4, null, !dbg !2901
  br i1 %tobool1, label %if.then, label %if.end, !dbg !2906

if.then:                                          ; preds = %for.body
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2907
  %cont2 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %5, i32 0, i32 0, !dbg !2909
  %prophash3 = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont2, i32 0, i32 2, !dbg !2910
  %6 = load %struct.GHash*, %struct.GHash** %prophash3, align 8, !dbg !2910
  call void @BLI_ghash_free(%struct.GHash* %6, void (i8*)* null, void (i8*)* null), !dbg !2911
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2912
  %cont4 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %7, i32 0, i32 0, !dbg !2913
  %prophash5 = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont4, i32 0, i32 2, !dbg !2914
  store %struct.GHash* null, %struct.GHash** %prophash5, align 8, !dbg !2915
  br label %if.end, !dbg !2916

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2917

for.inc:                                          ; preds = %if.end
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2918
  %cont6 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %8, i32 0, i32 0, !dbg !2919
  %next = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont6, i32 0, i32 0, !dbg !2920
  %9 = load i8*, i8** %next, align 8, !dbg !2920
  %10 = bitcast i8* %9 to %struct.StructRNA*, !dbg !2918
  store %struct.StructRNA* %10, %struct.StructRNA** %srna, align 8, !dbg !2921
  br label %for.cond, !dbg !2922, !llvm.loop !2923

for.end:                                          ; preds = %for.cond
  call void @RNA_free(%struct.BlenderRNA* @BLENDER_RNA), !dbg !2925
  ret void, !dbg !2926
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_update_cache_free() #0 !dbg !2927 {
entry:
  %uce = alloca %struct.tRnaUpdateCacheElem*, align 8
  %ucn = alloca %struct.tRnaUpdateCacheElem*, align 8
  call void @llvm.dbg.declare(metadata %struct.tRnaUpdateCacheElem** %uce, metadata !2928, metadata !DIExpression()), !dbg !2938
  call void @llvm.dbg.declare(metadata %struct.tRnaUpdateCacheElem** %ucn, metadata !2939, metadata !DIExpression()), !dbg !2940
  %0 = load i8*, i8** getelementptr inbounds (%struct.ListBase, %struct.ListBase* @rna_updates_cache, i32 0, i32 0), align 8, !dbg !2941
  %1 = bitcast i8* %0 to %struct.tRnaUpdateCacheElem*, !dbg !2943
  store %struct.tRnaUpdateCacheElem* %1, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !2944
  br label %for.cond, !dbg !2945

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !2946
  %tobool = icmp ne %struct.tRnaUpdateCacheElem* %2, null, !dbg !2948
  br i1 %tobool, label %for.body, label %for.end, !dbg !2948

for.body:                                         ; preds = %for.cond
  %3 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !2949
  %next = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %3, i32 0, i32 0, !dbg !2951
  %4 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %next, align 8, !dbg !2951
  store %struct.tRnaUpdateCacheElem* %4, %struct.tRnaUpdateCacheElem** %ucn, align 8, !dbg !2952
  %5 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !2953
  %L2Funcs = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %5, i32 0, i32 3, !dbg !2954
  call void @BLI_freelistN(%struct.ListBase* %L2Funcs), !dbg !2955
  %6 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !2956
  %7 = bitcast %struct.tRnaUpdateCacheElem* %6 to i8*, !dbg !2956
  call void @BLI_freelinkN(%struct.ListBase* @rna_updates_cache, i8* %7), !dbg !2957
  br label %for.inc, !dbg !2958

for.inc:                                          ; preds = %for.body
  %8 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %ucn, align 8, !dbg !2959
  store %struct.tRnaUpdateCacheElem* %8, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !2960
  br label %for.cond, !dbg !2961, !llvm.loop !2962

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2964
}

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

declare dso_local void @RNA_free(%struct.BlenderRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_main_pointer_create(%struct.Main* %main, %struct.PointerRNA* %r_ptr) #0 !dbg !2965 {
entry:
  %main.addr = alloca %struct.Main*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.Main* %main, %struct.Main** %main.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %main.addr, metadata !2968, metadata !DIExpression()), !dbg !2969
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !2970, metadata !DIExpression()), !dbg !2971
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !2972
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !2973
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !2974
  store i8* null, i8** %data, align 8, !dbg !2975
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !2976
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %1, i32 0, i32 1, !dbg !2977
  store %struct.StructRNA* @RNA_BlendData, %struct.StructRNA** %type, align 8, !dbg !2978
  %2 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !2979
  %3 = bitcast %struct.Main* %2 to i8*, !dbg !2979
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !2980
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 2, !dbg !2981
  store i8* %3, i8** %data1, align 8, !dbg !2982
  ret void, !dbg !2983
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_id_pointer_create(%struct.ID* %id, %struct.PointerRNA* %r_ptr) #0 !dbg !2984 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %type = alloca %struct.StructRNA*, align 8
  %idtype = alloca %struct.StructRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !2987, metadata !DIExpression()), !dbg !2988
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !2989, metadata !DIExpression()), !dbg !2990
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type, metadata !2991, metadata !DIExpression()), !dbg !2992
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %idtype, metadata !2993, metadata !DIExpression()), !dbg !2994
  store %struct.StructRNA* null, %struct.StructRNA** %idtype, align 8, !dbg !2994
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !2995
  %tobool = icmp ne %struct.ID* %0, null, !dbg !2995
  br i1 %tobool, label %if.then, label %if.end5, !dbg !2997

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %tmp, metadata !2998, metadata !DIExpression()), !dbg !3000
  %1 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3000
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 24, i1 false), !dbg !3000
  %2 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !3001
  %3 = bitcast %struct.ID* %2 to i8*, !dbg !3001
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tmp, i32 0, i32 2, !dbg !3002
  store i8* %3, i8** %data, align 8, !dbg !3003
  %call = call %struct.StructRNA* @rna_ID_refine(%struct.PointerRNA* %tmp), !dbg !3004
  store %struct.StructRNA* %call, %struct.StructRNA** %idtype, align 8, !dbg !3005
  br label %while.cond, !dbg !3006

while.cond:                                       ; preds = %if.end, %if.then
  %4 = load %struct.StructRNA*, %struct.StructRNA** %idtype, align 8, !dbg !3007
  %refine = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %4, i32 0, i32 13, !dbg !3008
  %5 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %refine, align 8, !dbg !3008
  %tobool1 = icmp ne %struct.StructRNA* (%struct.PointerRNA*)* %5, null, !dbg !3006
  br i1 %tobool1, label %while.body, label %while.end, !dbg !3006

while.body:                                       ; preds = %while.cond
  %6 = load %struct.StructRNA*, %struct.StructRNA** %idtype, align 8, !dbg !3009
  %refine2 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %6, i32 0, i32 13, !dbg !3011
  %7 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %refine2, align 8, !dbg !3011
  %call3 = call %struct.StructRNA* %7(%struct.PointerRNA* %tmp), !dbg !3009
  store %struct.StructRNA* %call3, %struct.StructRNA** %type, align 8, !dbg !3012
  %8 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3013
  %9 = load %struct.StructRNA*, %struct.StructRNA** %idtype, align 8, !dbg !3015
  %cmp = icmp eq %struct.StructRNA* %8, %9, !dbg !3016
  br i1 %cmp, label %if.then4, label %if.else, !dbg !3017

if.then4:                                         ; preds = %while.body
  br label %while.end, !dbg !3018

if.else:                                          ; preds = %while.body
  %10 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3019
  store %struct.StructRNA* %10, %struct.StructRNA** %idtype, align 8, !dbg !3020
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond, !dbg !3006, !llvm.loop !3021

while.end:                                        ; preds = %if.then4, %while.cond
  br label %if.end5, !dbg !3023

if.end5:                                          ; preds = %while.end, %entry
  %11 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !3024
  %12 = bitcast %struct.ID* %11 to i8*, !dbg !3024
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3025
  %id6 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %13, i32 0, i32 0, !dbg !3026
  %data7 = getelementptr inbounds %struct.anon, %struct.anon* %id6, i32 0, i32 0, !dbg !3027
  store i8* %12, i8** %data7, align 8, !dbg !3028
  %14 = load %struct.StructRNA*, %struct.StructRNA** %idtype, align 8, !dbg !3029
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3030
  %type8 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %15, i32 0, i32 1, !dbg !3031
  store %struct.StructRNA* %14, %struct.StructRNA** %type8, align 8, !dbg !3032
  %16 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !3033
  %17 = bitcast %struct.ID* %16 to i8*, !dbg !3033
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3034
  %data9 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %18, i32 0, i32 2, !dbg !3035
  store i8* %17, i8** %data9, align 8, !dbg !3036
  ret void, !dbg !3037
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local %struct.StructRNA* @rna_ID_refine(%struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_pointer_create(%struct.ID* %id, %struct.StructRNA* %type, i8* %data, %struct.PointerRNA* %r_ptr) #0 !dbg !3038 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %type.addr = alloca %struct.StructRNA*, align 8
  %data.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %rtype = alloca %struct.StructRNA*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !3041, metadata !DIExpression()), !dbg !3042
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3043, metadata !DIExpression()), !dbg !3044
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3045, metadata !DIExpression()), !dbg !3046
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3047, metadata !DIExpression()), !dbg !3048
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !3049
  %1 = bitcast %struct.ID* %0 to i8*, !dbg !3049
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3050
  %id1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 0, !dbg !3051
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id1, i32 0, i32 0, !dbg !3052
  store i8* %1, i8** %data2, align 8, !dbg !3053
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3054
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3055
  %type3 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 1, !dbg !3056
  store %struct.StructRNA* %3, %struct.StructRNA** %type3, align 8, !dbg !3057
  %5 = load i8*, i8** %data.addr, align 8, !dbg !3058
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3059
  %data4 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 2, !dbg !3060
  store i8* %5, i8** %data4, align 8, !dbg !3061
  %7 = load i8*, i8** %data.addr, align 8, !dbg !3062
  %tobool = icmp ne i8* %7, null, !dbg !3062
  br i1 %tobool, label %if.then, label %if.end14, !dbg !3064

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !3065

while.cond:                                       ; preds = %if.end, %if.then
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3067
  %type5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %8, i32 0, i32 1, !dbg !3068
  %9 = load %struct.StructRNA*, %struct.StructRNA** %type5, align 8, !dbg !3068
  %tobool6 = icmp ne %struct.StructRNA* %9, null, !dbg !3067
  br i1 %tobool6, label %land.rhs, label %land.end, !dbg !3069

land.rhs:                                         ; preds = %while.cond
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3070
  %type7 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %10, i32 0, i32 1, !dbg !3071
  %11 = load %struct.StructRNA*, %struct.StructRNA** %type7, align 8, !dbg !3071
  %refine = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %11, i32 0, i32 13, !dbg !3072
  %12 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %refine, align 8, !dbg !3072
  %tobool8 = icmp ne %struct.StructRNA* (%struct.PointerRNA*)* %12, null, !dbg !3069
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %tobool8, %land.rhs ], !dbg !3073
  br i1 %13, label %while.body, label %while.end, !dbg !3065

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %rtype, metadata !3074, metadata !DIExpression()), !dbg !3076
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3077
  %type9 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %14, i32 0, i32 1, !dbg !3078
  %15 = load %struct.StructRNA*, %struct.StructRNA** %type9, align 8, !dbg !3078
  %refine10 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %15, i32 0, i32 13, !dbg !3079
  %16 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %refine10, align 8, !dbg !3079
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3080
  %call = call %struct.StructRNA* %16(%struct.PointerRNA* %17), !dbg !3077
  store %struct.StructRNA* %call, %struct.StructRNA** %rtype, align 8, !dbg !3076
  %18 = load %struct.StructRNA*, %struct.StructRNA** %rtype, align 8, !dbg !3081
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3083
  %type11 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %19, i32 0, i32 1, !dbg !3084
  %20 = load %struct.StructRNA*, %struct.StructRNA** %type11, align 8, !dbg !3084
  %cmp = icmp eq %struct.StructRNA* %18, %20, !dbg !3085
  br i1 %cmp, label %if.then12, label %if.else, !dbg !3086

if.then12:                                        ; preds = %while.body
  br label %while.end, !dbg !3087

if.else:                                          ; preds = %while.body
  %21 = load %struct.StructRNA*, %struct.StructRNA** %rtype, align 8, !dbg !3088
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3089
  %type13 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %22, i32 0, i32 1, !dbg !3090
  store %struct.StructRNA* %21, %struct.StructRNA** %type13, align 8, !dbg !3091
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond, !dbg !3065, !llvm.loop !3092

while.end:                                        ; preds = %if.then12, %land.end
  br label %if.end14, !dbg !3094

if.end14:                                         ; preds = %while.end, %entry
  ret void, !dbg !3095
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_blender_rna_pointer_create(%struct.PointerRNA* %r_ptr) #0 !dbg !3096 {
entry:
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3099, metadata !DIExpression()), !dbg !3100
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3101
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !3102
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !3103
  store i8* null, i8** %data, align 8, !dbg !3104
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3105
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %1, i32 0, i32 1, !dbg !3106
  store %struct.StructRNA* @RNA_BlenderRNA, %struct.StructRNA** %type, align 8, !dbg !3107
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3108
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 2, !dbg !3109
  store i8* bitcast (%struct.BlenderRNA* @BLENDER_RNA to i8*), i8** %data1, align 8, !dbg !3110
  ret void, !dbg !3111
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_pointer_inherit_refine(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr, %struct.StructRNA* %type, i8* %data) #0 !dbg !3112 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %type.addr = alloca %struct.StructRNA*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3115, metadata !DIExpression()), !dbg !3116
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3117, metadata !DIExpression()), !dbg !3118
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3119, metadata !DIExpression()), !dbg !3120
  %0 = load i8*, i8** %data.addr, align 8, !dbg !3121
  %tobool = icmp ne i8* %0, null, !dbg !3121
  br i1 %tobool, label %if.then, label %if.else10, !dbg !3123

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %agg.result, metadata !3124, metadata !DIExpression()), !dbg !3126
  %1 = load i8*, i8** %data.addr, align 8, !dbg !3127
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %agg.result, i32 0, i32 2, !dbg !3128
  store i8* %1, i8** %data1, align 8, !dbg !3129
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3130
  %type2 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %agg.result, i32 0, i32 1, !dbg !3131
  store %struct.StructRNA* %2, %struct.StructRNA** %type2, align 8, !dbg !3132
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3133
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3134
  call void @rna_pointer_inherit_id(%struct.StructRNA* %3, %struct.PointerRNA* %4, %struct.PointerRNA* %agg.result), !dbg !3135
  br label %while.cond, !dbg !3136

while.cond:                                       ; preds = %if.end, %if.then
  %type3 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %agg.result, i32 0, i32 1, !dbg !3137
  %5 = load %struct.StructRNA*, %struct.StructRNA** %type3, align 8, !dbg !3137
  %refine = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %5, i32 0, i32 13, !dbg !3138
  %6 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %refine, align 8, !dbg !3138
  %tobool4 = icmp ne %struct.StructRNA* (%struct.PointerRNA*)* %6, null, !dbg !3136
  br i1 %tobool4, label %while.body, label %while.end, !dbg !3136

while.body:                                       ; preds = %while.cond
  %type5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %agg.result, i32 0, i32 1, !dbg !3139
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type5, align 8, !dbg !3139
  %refine6 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %7, i32 0, i32 13, !dbg !3141
  %8 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %refine6, align 8, !dbg !3141
  %call = call %struct.StructRNA* %8(%struct.PointerRNA* %agg.result), !dbg !3142
  store %struct.StructRNA* %call, %struct.StructRNA** %type.addr, align 8, !dbg !3143
  %9 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3144
  %type7 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %agg.result, i32 0, i32 1, !dbg !3146
  %10 = load %struct.StructRNA*, %struct.StructRNA** %type7, align 8, !dbg !3146
  %cmp = icmp eq %struct.StructRNA* %9, %10, !dbg !3147
  br i1 %cmp, label %if.then8, label %if.else, !dbg !3148

if.then8:                                         ; preds = %while.body
  br label %while.end, !dbg !3149

if.else:                                          ; preds = %while.body
  %11 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3150
  %type9 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %agg.result, i32 0, i32 1, !dbg !3151
  store %struct.StructRNA* %11, %struct.StructRNA** %type9, align 8, !dbg !3152
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond, !dbg !3136, !llvm.loop !3153

while.end:                                        ; preds = %if.then8, %while.cond
  br label %return, !dbg !3155

if.else10:                                        ; preds = %entry
  %12 = bitcast %struct.PointerRNA* %agg.result to i8*, !dbg !3156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 bitcast (%struct.PointerRNA* @PointerRNA_NULL to i8*), i64 24, i1 false), !dbg !3156
  br label %return, !dbg !3158

return:                                           ; preds = %if.else10, %while.end
  ret void, !dbg !3159
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_pointer_inherit_id(%struct.StructRNA* %type, %struct.PointerRNA* %parent, %struct.PointerRNA* %ptr) #0 !dbg !3160 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  %parent.addr = alloca %struct.PointerRNA*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3163, metadata !DIExpression()), !dbg !3164
  store %struct.PointerRNA* %parent, %struct.PointerRNA** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %parent.addr, metadata !3165, metadata !DIExpression()), !dbg !3166
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3167, metadata !DIExpression()), !dbg !3168
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3169
  %tobool = icmp ne %struct.StructRNA* %0, null, !dbg !3169
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3171

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3172
  %flag = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %1, i32 0, i32 4, !dbg !3173
  %2 = load i32, i32* %flag, align 8, !dbg !3173
  %and = and i32 %2, 1, !dbg !3174
  %tobool1 = icmp ne i32 %and, 0, !dbg !3174
  br i1 %tobool1, label %if.then, label %if.else, !dbg !3175

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3176
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 2, !dbg !3178
  %4 = load i8*, i8** %data, align 8, !dbg !3178
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3179
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 0, !dbg !3180
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !3181
  store i8* %4, i8** %data2, align 8, !dbg !3182
  br label %if.end, !dbg !3183

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %parent.addr, align 8, !dbg !3184
  %id3 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 0, !dbg !3186
  %data4 = getelementptr inbounds %struct.anon, %struct.anon* %id3, i32 0, i32 0, !dbg !3187
  %7 = load i8*, i8** %data4, align 8, !dbg !3187
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3188
  %id5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %8, i32 0, i32 0, !dbg !3189
  %data6 = getelementptr inbounds %struct.anon, %struct.anon* %id5, i32 0, i32 0, !dbg !3190
  store i8* %7, i8** %data6, align 8, !dbg !3191
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3192
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_pointer_recast(%struct.PointerRNA* %ptr, %struct.PointerRNA* %r_ptr) #0 !dbg !3193 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %base = alloca %struct.StructRNA*, align 8
  %t_ptr = alloca %struct.PointerRNA, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3196, metadata !DIExpression()), !dbg !3197
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3198, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %base, metadata !3200, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %t_ptr, metadata !3203, metadata !DIExpression()), !dbg !3204
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3205
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3206
  %2 = bitcast %struct.PointerRNA* %0 to i8*, !dbg !3207
  %3 = bitcast %struct.PointerRNA* %1 to i8*, !dbg !3207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !3207
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3208
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 1, !dbg !3210
  %5 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3210
  %base1 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %5, i32 0, i32 11, !dbg !3211
  %6 = load %struct.StructRNA*, %struct.StructRNA** %base1, align 8, !dbg !3211
  store %struct.StructRNA* %6, %struct.StructRNA** %base, align 8, !dbg !3212
  br label %for.cond, !dbg !3213

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !3214
  %tobool = icmp ne %struct.StructRNA* %7, null, !dbg !3216
  br i1 %tobool, label %for.body, label %for.end, !dbg !3216

for.body:                                         ; preds = %for.cond
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3217
  %9 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !3219
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3220
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %10, i32 0, i32 2, !dbg !3221
  %11 = load i8*, i8** %data, align 8, !dbg !3221
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %tmp, %struct.PointerRNA* %8, %struct.StructRNA* %9, i8* %11), !dbg !3222
  %12 = bitcast %struct.PointerRNA* %t_ptr to i8*, !dbg !3222
  %13 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !3222
  %type2 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %t_ptr, i32 0, i32 1, !dbg !3223
  %14 = load %struct.StructRNA*, %struct.StructRNA** %type2, align 8, !dbg !3223
  %tobool3 = icmp ne %struct.StructRNA* %14, null, !dbg !3225
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !3226

land.lhs.true:                                    ; preds = %for.body
  %type4 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %t_ptr, i32 0, i32 1, !dbg !3227
  %15 = load %struct.StructRNA*, %struct.StructRNA** %type4, align 8, !dbg !3227
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3228
  %type5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %16, i32 0, i32 1, !dbg !3229
  %17 = load %struct.StructRNA*, %struct.StructRNA** %type5, align 8, !dbg !3229
  %cmp = icmp ne %struct.StructRNA* %15, %17, !dbg !3230
  br i1 %cmp, label %if.then, label %if.end, !dbg !3231

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3232
  %19 = bitcast %struct.PointerRNA* %18 to i8*, !dbg !3234
  %20 = bitcast %struct.PointerRNA* %t_ptr to i8*, !dbg !3234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false), !dbg !3234
  br label %if.end, !dbg !3235

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3236

for.inc:                                          ; preds = %if.end
  %21 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !3237
  %base6 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %21, i32 0, i32 11, !dbg !3238
  %22 = load %struct.StructRNA*, %struct.StructRNA** %base6, align 8, !dbg !3238
  store %struct.StructRNA* %22, %struct.StructRNA** %base, align 8, !dbg !3239
  br label %for.cond, !dbg !3240, !llvm.loop !3241

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3243
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %ptr, i8 zeroext %create) #0 !dbg !3244 {
entry:
  %retval = alloca %struct.IDProperty*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %create.addr = alloca i8, align 1
  %type = alloca %struct.StructRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3247, metadata !DIExpression()), !dbg !3248
  store i8 %create, i8* %create.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %create.addr, metadata !3249, metadata !DIExpression()), !dbg !3250
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type, metadata !3251, metadata !DIExpression()), !dbg !3252
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3253
  %type1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 1, !dbg !3254
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type1, align 8, !dbg !3254
  store %struct.StructRNA* %1, %struct.StructRNA** %type, align 8, !dbg !3252
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3255
  %tobool = icmp ne %struct.StructRNA* %2, null, !dbg !3255
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3257

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3258
  %idproperties = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %3, i32 0, i32 18, !dbg !3259
  %4 = load %struct.IDProperty* (%struct.PointerRNA*, i8)*, %struct.IDProperty* (%struct.PointerRNA*, i8)** %idproperties, align 8, !dbg !3259
  %tobool2 = icmp ne %struct.IDProperty* (%struct.PointerRNA*, i8)* %4, null, !dbg !3258
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3260

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3261
  %idproperties3 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %5, i32 0, i32 18, !dbg !3262
  %6 = load %struct.IDProperty* (%struct.PointerRNA*, i8)*, %struct.IDProperty* (%struct.PointerRNA*, i8)** %idproperties3, align 8, !dbg !3262
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3263
  %8 = load i8, i8* %create.addr, align 1, !dbg !3264
  %call = call %struct.IDProperty* %6(%struct.PointerRNA* %7, i8 zeroext %8), !dbg !3261
  store %struct.IDProperty* %call, %struct.IDProperty** %retval, align 8, !dbg !3265
  br label %return, !dbg !3265

if.end:                                           ; preds = %land.lhs.true, %entry
  store %struct.IDProperty* null, %struct.IDProperty** %retval, align 8, !dbg !3266
  br label %return, !dbg !3266

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.IDProperty*, %struct.IDProperty** %retval, align 8, !dbg !3267
  ret %struct.IDProperty* %9, !dbg !3267
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_idprops_check(%struct.StructRNA* %srna) #0 !dbg !3268 {
entry:
  %srna.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !3271, metadata !DIExpression()), !dbg !3272
  %0 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !3273
  %tobool = icmp ne %struct.StructRNA* %0, null, !dbg !3273
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3274

land.rhs:                                         ; preds = %entry
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !3275
  %idproperties = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %1, i32 0, i32 18, !dbg !3276
  %2 = load %struct.IDProperty* (%struct.PointerRNA*, i8)*, %struct.IDProperty* (%struct.PointerRNA*, i8)** %idproperties, align 8, !dbg !3276
  %tobool1 = icmp ne %struct.IDProperty* (%struct.PointerRNA*, i8)* %2, null, !dbg !3274
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !3277
  %land.ext = zext i1 %3 to i32, !dbg !3274
  %conv = trunc i32 %land.ext to i8, !dbg !3278
  ret i8 %conv, !dbg !3279
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop, %struct.PointerRNA* %ptr) #0 !dbg !3280 {
entry:
  %retval = alloca %struct.IDProperty*, align 8
  %prop.addr = alloca %struct.PropertyRNA**, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %group = alloca %struct.IDProperty*, align 8
  %idprop8 = alloca %struct.IDProperty*, align 8
  store %struct.PropertyRNA** %prop, %struct.PropertyRNA*** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %prop.addr, metadata !3284, metadata !DIExpression()), !dbg !3285
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3286, metadata !DIExpression()), !dbg !3287
  %0 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !3288
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %0, align 8, !dbg !3290
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 2, !dbg !3291
  %2 = load i32, i32* %magic, align 8, !dbg !3291
  %cmp = icmp eq i32 %2, -1, !dbg !3292
  br i1 %cmp, label %if.then, label %if.end7, !dbg !3293

if.then:                                          ; preds = %entry
  %3 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !3294
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %3, align 8, !dbg !3297
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 4, !dbg !3298
  %5 = load i32, i32* %flag, align 8, !dbg !3298
  %and = and i32 %5, 1024, !dbg !3299
  %tobool = icmp ne i32 %and, 0, !dbg !3299
  br i1 %tobool, label %if.then1, label %if.else, !dbg !3300

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !3301, metadata !DIExpression()), !dbg !3303
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3304
  %7 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !3305
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %7, align 8, !dbg !3306
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %8, i32 0, i32 3, !dbg !3307
  %9 = load i8*, i8** %identifier, align 8, !dbg !3307
  %call = call %struct.IDProperty* @rna_idproperty_find(%struct.PointerRNA* %6, i8* %9), !dbg !3308
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !3303
  %10 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !3309
  %tobool2 = icmp ne %struct.IDProperty* %10, null, !dbg !3309
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !3311

land.lhs.true:                                    ; preds = %if.then1
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3312
  %12 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !3313
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %12, align 8, !dbg !3314
  %14 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !3315
  %call3 = call zeroext i8 @rna_idproperty_verify_valid(%struct.PointerRNA* %11, %struct.PropertyRNA* %13, %struct.IDProperty* %14), !dbg !3316
  %tobool4 = icmp ne i8 %call3, 0, !dbg !3316
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !3317

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !3318, metadata !DIExpression()), !dbg !3320
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3321
  %call6 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %15, i8 zeroext 0), !dbg !3322
  store %struct.IDProperty* %call6, %struct.IDProperty** %group, align 8, !dbg !3320
  %16 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !3323
  %17 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !3324
  call void @IDP_FreeFromGroup(%struct.IDProperty* %16, %struct.IDProperty* %17), !dbg !3325
  store %struct.IDProperty* null, %struct.IDProperty** %retval, align 8, !dbg !3326
  br label %return, !dbg !3326

if.end:                                           ; preds = %land.lhs.true, %if.then1
  %18 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !3327
  store %struct.IDProperty* %18, %struct.IDProperty** %retval, align 8, !dbg !3328
  br label %return, !dbg !3328

if.else:                                          ; preds = %if.then
  store %struct.IDProperty* null, %struct.IDProperty** %retval, align 8, !dbg !3329
  br label %return, !dbg !3329

if.end7:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop8, metadata !3330, metadata !DIExpression()), !dbg !3332
  %19 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !3333
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %19, align 8, !dbg !3334
  %21 = bitcast %struct.PropertyRNA* %20 to %struct.IDProperty*, !dbg !3335
  store %struct.IDProperty* %21, %struct.IDProperty** %idprop8, align 8, !dbg !3332
  %22 = load %struct.IDProperty*, %struct.IDProperty** %idprop8, align 8, !dbg !3336
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %22, i32 0, i32 2, !dbg !3338
  %23 = load i8, i8* %type, align 8, !dbg !3338
  %conv = zext i8 %23 to i32, !dbg !3336
  %cmp9 = icmp eq i32 %conv, 5, !dbg !3339
  br i1 %cmp9, label %if.then11, label %if.else13, !dbg !3340

if.then11:                                        ; preds = %if.end7
  %24 = load %struct.IDProperty*, %struct.IDProperty** %idprop8, align 8, !dbg !3341
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %24, i32 0, i32 3, !dbg !3342
  %25 = load i8, i8* %subtype, align 1, !dbg !3342
  %conv12 = zext i8 %25 to i32, !dbg !3343
  %idxprom = sext i32 %conv12 to i64, !dbg !3344
  %arrayidx = getelementptr inbounds [10 x %struct.PropertyRNA*], [10 x %struct.PropertyRNA*]* @arraytypemap, i64 0, i64 %idxprom, !dbg !3344
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %arrayidx, align 8, !dbg !3344
  %27 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !3345
  store %struct.PropertyRNA* %26, %struct.PropertyRNA** %27, align 8, !dbg !3346
  br label %if.end18, !dbg !3347

if.else13:                                        ; preds = %if.end7
  %28 = load %struct.IDProperty*, %struct.IDProperty** %idprop8, align 8, !dbg !3348
  %type14 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %28, i32 0, i32 2, !dbg !3349
  %29 = load i8, i8* %type14, align 8, !dbg !3349
  %conv15 = zext i8 %29 to i32, !dbg !3350
  %idxprom16 = sext i32 %conv15 to i64, !dbg !3351
  %arrayidx17 = getelementptr inbounds [10 x %struct.PropertyRNA*], [10 x %struct.PropertyRNA*]* @typemap, i64 0, i64 %idxprom16, !dbg !3351
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %arrayidx17, align 8, !dbg !3351
  %31 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !3352
  store %struct.PropertyRNA* %30, %struct.PropertyRNA** %31, align 8, !dbg !3353
  br label %if.end18

if.end18:                                         ; preds = %if.else13, %if.then11
  %32 = load %struct.IDProperty*, %struct.IDProperty** %idprop8, align 8, !dbg !3354
  store %struct.IDProperty* %32, %struct.IDProperty** %retval, align 8, !dbg !3355
  br label %return, !dbg !3355

return:                                           ; preds = %if.end18, %if.else, %if.end, %if.then5
  %33 = load %struct.IDProperty*, %struct.IDProperty** %retval, align 8, !dbg !3356
  ret %struct.IDProperty* %33, !dbg !3356
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.IDProperty* @rna_idproperty_find(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !3357 {
entry:
  %retval = alloca %struct.IDProperty*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3360, metadata !DIExpression()), !dbg !3361
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3362, metadata !DIExpression()), !dbg !3363
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !3364, metadata !DIExpression()), !dbg !3365
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3366
  %call = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %0, i8 zeroext 0), !dbg !3367
  store %struct.IDProperty* %call, %struct.IDProperty** %group, align 8, !dbg !3365
  %1 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !3368
  %tobool = icmp ne %struct.IDProperty* %1, null, !dbg !3368
  br i1 %tobool, label %if.then, label %if.end, !dbg !3370

if.then:                                          ; preds = %entry
  %2 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !3371
  %3 = load i8*, i8** %name.addr, align 8, !dbg !3372
  %call1 = call %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty* %2, i8* %3), !dbg !3373
  store %struct.IDProperty* %call1, %struct.IDProperty** %retval, align 8, !dbg !3374
  br label %return, !dbg !3374

if.end:                                           ; preds = %entry
  store %struct.IDProperty* null, %struct.IDProperty** %retval, align 8, !dbg !3375
  br label %return, !dbg !3375

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.IDProperty*, %struct.IDProperty** %retval, align 8, !dbg !3376
  ret %struct.IDProperty* %4, !dbg !3376
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rna_idproperty_verify_valid(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.IDProperty* %idprop) #0 !dbg !3377 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %idprop.addr = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3380, metadata !DIExpression()), !dbg !3381
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !3382, metadata !DIExpression()), !dbg !3383
  store %struct.IDProperty* %idprop, %struct.IDProperty** %idprop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop.addr, metadata !3384, metadata !DIExpression()), !dbg !3385
  %0 = load %struct.IDProperty*, %struct.IDProperty** %idprop.addr, align 8, !dbg !3386
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %0, i32 0, i32 2, !dbg !3387
  %1 = load i8, i8* %type, align 8, !dbg !3387
  %conv = zext i8 %1 to i32, !dbg !3386
  switch i32 %conv, label %sw.default [
    i32 9, label %sw.bb
    i32 5, label %sw.bb3
    i32 1, label %sw.bb33
    i32 2, label %sw.bb47
    i32 8, label %sw.bb47
    i32 0, label %sw.bb53
    i32 6, label %sw.bb59
  ], !dbg !3388

sw.bb:                                            ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3389
  %type1 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 9, !dbg !3392
  %3 = load i32, i32* %type1, align 8, !dbg !3392
  %cmp = icmp ne i32 %3, 6, !dbg !3393
  br i1 %cmp, label %if.then, label %if.end, !dbg !3394

if.then:                                          ; preds = %sw.bb
  store i8 0, i8* %retval, align 1, !dbg !3395
  br label %return, !dbg !3395

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !3396

sw.bb3:                                           ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3397
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3399
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %4, %struct.PropertyRNA* %5), !dbg !3400
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idprop.addr, align 8, !dbg !3401
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %6, i32 0, i32 8, !dbg !3402
  %7 = load i32, i32* %len, align 8, !dbg !3402
  %cmp4 = icmp ne i32 %call, %7, !dbg !3403
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !3404

if.then6:                                         ; preds = %sw.bb3
  store i8 0, i8* %retval, align 1, !dbg !3405
  br label %return, !dbg !3405

if.end7:                                          ; preds = %sw.bb3
  %8 = load %struct.IDProperty*, %struct.IDProperty** %idprop.addr, align 8, !dbg !3406
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 3, !dbg !3408
  %9 = load i8, i8* %subtype, align 1, !dbg !3408
  %conv8 = zext i8 %9 to i32, !dbg !3406
  %cmp9 = icmp eq i32 %conv8, 2, !dbg !3409
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !3410

land.lhs.true:                                    ; preds = %if.end7
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3411
  %type11 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %10, i32 0, i32 9, !dbg !3412
  %11 = load i32, i32* %type11, align 8, !dbg !3412
  %cmp12 = icmp ne i32 %11, 2, !dbg !3413
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3414

if.then14:                                        ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !3415
  br label %return, !dbg !3415

if.end15:                                         ; preds = %land.lhs.true, %if.end7
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idprop.addr, align 8, !dbg !3416
  %subtype16 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 3, !dbg !3418
  %13 = load i8, i8* %subtype16, align 1, !dbg !3418
  %conv17 = zext i8 %13 to i32, !dbg !3416
  %cmp18 = icmp eq i32 %conv17, 1, !dbg !3419
  br i1 %cmp18, label %land.lhs.true20, label %if.end32, !dbg !3420

land.lhs.true20:                                  ; preds = %if.end15
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3421
  %type21 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 9, !dbg !3421
  %15 = load i32, i32* %type21, align 8, !dbg !3421
  %cmp22 = icmp eq i32 %15, 0, !dbg !3421
  br i1 %cmp22, label %if.end32, label %lor.lhs.false, !dbg !3421

lor.lhs.false:                                    ; preds = %land.lhs.true20
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3421
  %type24 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %16, i32 0, i32 9, !dbg !3421
  %17 = load i32, i32* %type24, align 8, !dbg !3421
  %cmp25 = icmp eq i32 %17, 1, !dbg !3421
  br i1 %cmp25, label %if.end32, label %lor.lhs.false27, !dbg !3421

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3421
  %type28 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %18, i32 0, i32 9, !dbg !3421
  %19 = load i32, i32* %type28, align 8, !dbg !3421
  %cmp29 = icmp eq i32 %19, 4, !dbg !3421
  br i1 %cmp29, label %if.end32, label %if.then31, !dbg !3422

if.then31:                                        ; preds = %lor.lhs.false27
  store i8 0, i8* %retval, align 1, !dbg !3423
  br label %return, !dbg !3423

if.end32:                                         ; preds = %lor.lhs.false27, %lor.lhs.false, %land.lhs.true20, %if.end15
  br label %sw.epilog, !dbg !3424

sw.bb33:                                          ; preds = %entry
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3425
  %type34 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %20, i32 0, i32 9, !dbg !3425
  %21 = load i32, i32* %type34, align 8, !dbg !3425
  %cmp35 = icmp eq i32 %21, 0, !dbg !3425
  br i1 %cmp35, label %if.end46, label %lor.lhs.false37, !dbg !3425

lor.lhs.false37:                                  ; preds = %sw.bb33
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3425
  %type38 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %22, i32 0, i32 9, !dbg !3425
  %23 = load i32, i32* %type38, align 8, !dbg !3425
  %cmp39 = icmp eq i32 %23, 1, !dbg !3425
  br i1 %cmp39, label %if.end46, label %lor.lhs.false41, !dbg !3425

lor.lhs.false41:                                  ; preds = %lor.lhs.false37
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3425
  %type42 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %24, i32 0, i32 9, !dbg !3425
  %25 = load i32, i32* %type42, align 8, !dbg !3425
  %cmp43 = icmp eq i32 %25, 4, !dbg !3425
  br i1 %cmp43, label %if.end46, label %if.then45, !dbg !3427

if.then45:                                        ; preds = %lor.lhs.false41
  store i8 0, i8* %retval, align 1, !dbg !3428
  br label %return, !dbg !3428

if.end46:                                         ; preds = %lor.lhs.false41, %lor.lhs.false37, %sw.bb33
  br label %sw.epilog, !dbg !3429

sw.bb47:                                          ; preds = %entry, %entry
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3430
  %type48 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %26, i32 0, i32 9, !dbg !3432
  %27 = load i32, i32* %type48, align 8, !dbg !3432
  %cmp49 = icmp ne i32 %27, 2, !dbg !3433
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !3434

if.then51:                                        ; preds = %sw.bb47
  store i8 0, i8* %retval, align 1, !dbg !3435
  br label %return, !dbg !3435

if.end52:                                         ; preds = %sw.bb47
  br label %sw.epilog, !dbg !3436

sw.bb53:                                          ; preds = %entry
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3437
  %type54 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %28, i32 0, i32 9, !dbg !3439
  %29 = load i32, i32* %type54, align 8, !dbg !3439
  %cmp55 = icmp ne i32 %29, 3, !dbg !3440
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !3441

if.then57:                                        ; preds = %sw.bb53
  store i8 0, i8* %retval, align 1, !dbg !3442
  br label %return, !dbg !3442

if.end58:                                         ; preds = %sw.bb53
  br label %sw.epilog, !dbg !3443

sw.bb59:                                          ; preds = %entry
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3444
  %type60 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %30, i32 0, i32 9, !dbg !3446
  %31 = load i32, i32* %type60, align 8, !dbg !3446
  %cmp61 = icmp ne i32 %31, 5, !dbg !3447
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !3448

if.then63:                                        ; preds = %sw.bb59
  store i8 0, i8* %retval, align 1, !dbg !3449
  br label %return, !dbg !3449

if.end64:                                         ; preds = %sw.bb59
  br label %sw.epilog, !dbg !3450

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3451
  br label %return, !dbg !3451

sw.epilog:                                        ; preds = %if.end64, %if.end58, %if.end52, %if.end46, %if.end32, %if.end
  store i8 1, i8* %retval, align 1, !dbg !3452
  br label %return, !dbg !3452

return:                                           ; preds = %sw.epilog, %sw.default, %if.then63, %if.then57, %if.then51, %if.then45, %if.then31, %if.then14, %if.then6, %if.then
  %32 = load i8, i8* %retval, align 1, !dbg !3453
  ret i8 %32, !dbg !3453
}

declare dso_local void @IDP_FreeFromGroup(%struct.IDProperty*, %struct.IDProperty*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.StructRNA* @RNA_struct_find(i8* %identifier) #0 !dbg !3454 {
entry:
  %retval = alloca %struct.StructRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %type = alloca %struct.StructRNA*, align 8
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !3457, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type, metadata !3459, metadata !DIExpression()), !dbg !3460
  %0 = load i8*, i8** %identifier.addr, align 8, !dbg !3461
  %tobool = icmp ne i8* %0, null, !dbg !3461
  br i1 %tobool, label %if.then, label %if.end4, !dbg !3463

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** getelementptr inbounds (%struct.BlenderRNA, %struct.BlenderRNA* @BLENDER_RNA, i32 0, i32 0, i32 0), align 8, !dbg !3464
  %2 = bitcast i8* %1 to %struct.StructRNA*, !dbg !3467
  store %struct.StructRNA* %2, %struct.StructRNA** %type, align 8, !dbg !3468
  br label %for.cond, !dbg !3469

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3470
  %tobool1 = icmp ne %struct.StructRNA* %3, null, !dbg !3472
  br i1 %tobool1, label %for.body, label %for.end, !dbg !3472

for.body:                                         ; preds = %for.cond
  %4 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3473
  %identifier2 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %4, i32 0, i32 1, !dbg !3475
  %5 = load i8*, i8** %identifier2, align 8, !dbg !3475
  %6 = load i8*, i8** %identifier.addr, align 8, !dbg !3476
  %call = call i32 @strcmp(i8* %5, i8* %6) #7, !dbg !3477
  %cmp = icmp eq i32 %call, 0, !dbg !3478
  br i1 %cmp, label %if.then3, label %if.end, !dbg !3479

if.then3:                                         ; preds = %for.body
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3480
  store %struct.StructRNA* %7, %struct.StructRNA** %retval, align 8, !dbg !3481
  br label %return, !dbg !3481

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3482

for.inc:                                          ; preds = %if.end
  %8 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3483
  %cont = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %8, i32 0, i32 0, !dbg !3484
  %next = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 0, !dbg !3485
  %9 = load i8*, i8** %next, align 8, !dbg !3485
  %10 = bitcast i8* %9 to %struct.StructRNA*, !dbg !3483
  store %struct.StructRNA* %10, %struct.StructRNA** %type, align 8, !dbg !3486
  br label %for.cond, !dbg !3487, !llvm.loop !3488

for.end:                                          ; preds = %for.cond
  br label %if.end4, !dbg !3490

if.end4:                                          ; preds = %for.end, %entry
  store %struct.StructRNA* null, %struct.StructRNA** %retval, align 8, !dbg !3491
  br label %return, !dbg !3491

return:                                           ; preds = %if.end4, %if.then3
  %11 = load %struct.StructRNA*, %struct.StructRNA** %retval, align 8, !dbg !3492
  ret %struct.StructRNA* %11, !dbg !3492
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_identifier(%struct.StructRNA* %type) #0 !dbg !3493 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3498, metadata !DIExpression()), !dbg !3499
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3500
  %identifier = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 1, !dbg !3501
  %1 = load i8*, i8** %identifier, align 8, !dbg !3501
  ret i8* %1, !dbg !3502
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_ui_name(%struct.StructRNA* %type) #0 !dbg !3503 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3504, metadata !DIExpression()), !dbg !3505
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3506
  %name = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 5, !dbg !3506
  %1 = load i8*, i8** %name, align 8, !dbg !3506
  ret i8* %1, !dbg !3507
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_ui_name_raw(%struct.StructRNA* %type) #0 !dbg !3508 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3509, metadata !DIExpression()), !dbg !3510
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3511
  %name = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 5, !dbg !3512
  %1 = load i8*, i8** %name, align 8, !dbg !3512
  ret i8* %1, !dbg !3513
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_struct_ui_icon(%struct.StructRNA* %type) #0 !dbg !3514 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3517, metadata !DIExpression()), !dbg !3518
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3519
  %tobool = icmp ne %struct.StructRNA* %0, null, !dbg !3519
  br i1 %tobool, label %if.then, label %if.else, !dbg !3521

if.then:                                          ; preds = %entry
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3522
  %icon = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %1, i32 0, i32 8, !dbg !3523
  %2 = load i32, i32* %icon, align 8, !dbg !3523
  store i32 %2, i32* %retval, align 4, !dbg !3524
  br label %return, !dbg !3524

if.else:                                          ; preds = %entry
  store i32 17, i32* %retval, align 4, !dbg !3525
  br label %return, !dbg !3525

return:                                           ; preds = %if.else, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3526
  ret i32 %3, !dbg !3526
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_ui_description(%struct.StructRNA* %type) #0 !dbg !3527 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3528, metadata !DIExpression()), !dbg !3529
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3530
  %description = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 6, !dbg !3530
  %1 = load i8*, i8** %description, align 8, !dbg !3530
  ret i8* %1, !dbg !3531
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_ui_description_raw(%struct.StructRNA* %type) #0 !dbg !3532 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3533, metadata !DIExpression()), !dbg !3534
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3535
  %description = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 6, !dbg !3536
  %1 = load i8*, i8** %description, align 8, !dbg !3536
  ret i8* %1, !dbg !3537
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_translation_context(%struct.StructRNA* %type) #0 !dbg !3538 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3539, metadata !DIExpression()), !dbg !3540
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3541
  %translation_context = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 7, !dbg !3542
  %1 = load i8*, i8** %translation_context, align 8, !dbg !3542
  ret i8* %1, !dbg !3543
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PropertyRNA* @RNA_struct_name_property(%struct.StructRNA* %type) #0 !dbg !3544 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3547, metadata !DIExpression()), !dbg !3548
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3549
  %nameproperty = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 9, !dbg !3550
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %nameproperty, align 8, !dbg !3550
  ret %struct.PropertyRNA* %1, !dbg !3551
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %type) #0 !dbg !3552 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3553, metadata !DIExpression()), !dbg !3554
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3555
  %iteratorproperty = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 10, !dbg !3556
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iteratorproperty, align 8, !dbg !3556
  ret %struct.PropertyRNA* %1, !dbg !3557
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.StructRNA* @RNA_struct_base(%struct.StructRNA* %type) #0 !dbg !3558 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3561, metadata !DIExpression()), !dbg !3562
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3563
  %base = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 11, !dbg !3564
  %1 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !3564
  ret %struct.StructRNA* %1, !dbg !3565
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %type) #0 !dbg !3566 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3569, metadata !DIExpression()), !dbg !3570
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3571
  %flag = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 4, !dbg !3572
  %1 = load i32, i32* %flag, align 8, !dbg !3572
  %and = and i32 %1, 1, !dbg !3573
  %cmp = icmp ne i32 %and, 0, !dbg !3574
  %conv = zext i1 %cmp to i32, !dbg !3574
  %conv1 = trunc i32 %conv to i8, !dbg !3575
  ret i8 %conv1, !dbg !3576
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_undo_check(%struct.StructRNA* %type) #0 !dbg !3577 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3578, metadata !DIExpression()), !dbg !3579
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3580
  %flag = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 4, !dbg !3581
  %1 = load i32, i32* %flag, align 8, !dbg !3581
  %and = and i32 %1, 4, !dbg !3582
  %cmp = icmp ne i32 %and, 0, !dbg !3583
  %conv = zext i1 %cmp to i32, !dbg !3583
  %conv1 = trunc i32 %conv to i8, !dbg !3584
  ret i8 %conv1, !dbg !3585
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_idprops_register_check(%struct.StructRNA* %type) #0 !dbg !3586 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3587, metadata !DIExpression()), !dbg !3588
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3589
  %flag = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 4, !dbg !3590
  %1 = load i32, i32* %flag, align 8, !dbg !3590
  %and = and i32 %1, 64, !dbg !3591
  %cmp = icmp eq i32 %and, 0, !dbg !3592
  %conv = zext i1 %cmp to i32, !dbg !3592
  %conv1 = trunc i32 %conv to i8, !dbg !3593
  ret i8 %conv1, !dbg !3594
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_idprops_unset(%struct.PointerRNA* %ptr, i8* %identifier) #0 !dbg !3595 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %group = alloca %struct.IDProperty*, align 8
  %idp = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3598, metadata !DIExpression()), !dbg !3599
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !3600, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !3602, metadata !DIExpression()), !dbg !3603
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3604
  %call = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %0, i8 zeroext 0), !dbg !3605
  store %struct.IDProperty* %call, %struct.IDProperty** %group, align 8, !dbg !3603
  %1 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !3606
  %tobool = icmp ne %struct.IDProperty* %1, null, !dbg !3606
  br i1 %tobool, label %if.then, label %if.end4, !dbg !3608

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idp, metadata !3609, metadata !DIExpression()), !dbg !3611
  %2 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !3612
  %3 = load i8*, i8** %identifier.addr, align 8, !dbg !3613
  %call1 = call %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty* %2, i8* %3), !dbg !3614
  store %struct.IDProperty* %call1, %struct.IDProperty** %idp, align 8, !dbg !3611
  %4 = load %struct.IDProperty*, %struct.IDProperty** %idp, align 8, !dbg !3615
  %tobool2 = icmp ne %struct.IDProperty* %4, null, !dbg !3615
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3617

if.then3:                                         ; preds = %if.then
  %5 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !3618
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idp, align 8, !dbg !3620
  call void @IDP_FreeFromGroup(%struct.IDProperty* %5, %struct.IDProperty* %6), !dbg !3621
  store i8 1, i8* %retval, align 1, !dbg !3622
  br label %return, !dbg !3622

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !3623

if.end4:                                          ; preds = %if.end, %entry
  store i8 0, i8* %retval, align 1, !dbg !3624
  br label %return, !dbg !3624

return:                                           ; preds = %if.end4, %if.then3
  %7 = load i8, i8* %retval, align 1, !dbg !3625
  ret i8 %7, !dbg !3625
}

declare dso_local %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %type, %struct.StructRNA* %srna) #0 !dbg !3626 {
entry:
  %retval = alloca i8, align 1
  %type.addr = alloca %struct.StructRNA*, align 8
  %srna.addr = alloca %struct.StructRNA*, align 8
  %base = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !3629, metadata !DIExpression()), !dbg !3630
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !3631, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %base, metadata !3633, metadata !DIExpression()), !dbg !3634
  %0 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !3635
  %cmp = icmp eq %struct.StructRNA* %0, @RNA_AnyType, !dbg !3637
  br i1 %cmp, label %if.then, label %if.end, !dbg !3638

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !3639
  br label %return, !dbg !3639

if.end:                                           ; preds = %entry
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3640
  %tobool = icmp ne %struct.StructRNA* %1, null, !dbg !3640
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !3642

if.then1:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !3643
  br label %return, !dbg !3643

if.end2:                                          ; preds = %if.end
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !3644
  store %struct.StructRNA* %2, %struct.StructRNA** %base, align 8, !dbg !3646
  br label %for.cond, !dbg !3647

for.cond:                                         ; preds = %for.inc, %if.end2
  %3 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !3648
  %tobool3 = icmp ne %struct.StructRNA* %3, null, !dbg !3650
  br i1 %tobool3, label %for.body, label %for.end, !dbg !3650

for.body:                                         ; preds = %for.cond
  %4 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !3651
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !3653
  %cmp4 = icmp eq %struct.StructRNA* %4, %5, !dbg !3654
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3655

if.then5:                                         ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !3656
  br label %return, !dbg !3656

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !3653

for.inc:                                          ; preds = %if.end6
  %6 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !3657
  %base7 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %6, i32 0, i32 11, !dbg !3658
  %7 = load %struct.StructRNA*, %struct.StructRNA** %base7, align 8, !dbg !3658
  store %struct.StructRNA* %7, %struct.StructRNA** %base, align 8, !dbg !3659
  br label %for.cond, !dbg !3660, !llvm.loop !3661

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !3663
  br label %return, !dbg !3663

return:                                           ; preds = %for.end, %if.then5, %if.then1, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !3664
  ret i8 %8, !dbg !3664
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %ptr, i8* %identifier) #0 !dbg !3665 {
entry:
  %retval = alloca %struct.PropertyRNA*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %r_prop = alloca %struct.PropertyRNA*, align 8
  %r_ptr = alloca %struct.PointerRNA, align 8
  %iterprop = alloca %struct.PropertyRNA*, align 8
  %propptr = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3668, metadata !DIExpression()), !dbg !3669
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !3670, metadata !DIExpression()), !dbg !3671
  %0 = load i8*, i8** %identifier.addr, align 8, !dbg !3672
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !3672
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3672
  %conv = zext i8 %1 to i32, !dbg !3672
  %cmp = icmp eq i32 %conv, 91, !dbg !3674
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3675

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %identifier.addr, align 8, !dbg !3676
  %arrayidx2 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !3676
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !3676
  %conv3 = zext i8 %3 to i32, !dbg !3676
  %cmp4 = icmp eq i32 %conv3, 34, !dbg !3677
  br i1 %cmp4, label %if.then, label %if.else, !dbg !3678

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %r_prop, metadata !3679, metadata !DIExpression()), !dbg !3681
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %r_prop, align 8, !dbg !3681
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %r_ptr, metadata !3682, metadata !DIExpression()), !dbg !3683
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3684
  %5 = load i8*, i8** %identifier.addr, align 8, !dbg !3686
  %call = call zeroext i8 @RNA_path_resolve(%struct.PointerRNA* %4, i8* %5, %struct.PointerRNA* %r_ptr, %struct.PropertyRNA** %r_prop), !dbg !3687
  %conv6 = zext i8 %call to i32, !dbg !3687
  %tobool = icmp ne i32 %conv6, 0, !dbg !3687
  br i1 %tobool, label %land.lhs.true7, label %if.end, !dbg !3688

land.lhs.true7:                                   ; preds = %if.then
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %r_ptr, i32 0, i32 1, !dbg !3689
  %6 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3689
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3690
  %type8 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %7, i32 0, i32 1, !dbg !3691
  %8 = load %struct.StructRNA*, %struct.StructRNA** %type8, align 8, !dbg !3691
  %cmp9 = icmp eq %struct.StructRNA* %6, %8, !dbg !3692
  br i1 %cmp9, label %land.lhs.true11, label %if.end, !dbg !3693

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %r_ptr, i32 0, i32 2, !dbg !3694
  %9 = load i8*, i8** %data, align 8, !dbg !3694
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3695
  %data12 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %10, i32 0, i32 2, !dbg !3696
  %11 = load i8*, i8** %data12, align 8, !dbg !3696
  %cmp13 = icmp eq i8* %9, %11, !dbg !3697
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !3698

if.then15:                                        ; preds = %land.lhs.true11
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %r_prop, align 8, !dbg !3699
  store %struct.PropertyRNA* %12, %struct.PropertyRNA** %retval, align 8, !dbg !3700
  br label %return, !dbg !3700

if.end:                                           ; preds = %land.lhs.true11, %land.lhs.true7, %if.then
  br label %if.end23, !dbg !3701

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iterprop, metadata !3702, metadata !DIExpression()), !dbg !3704
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3705
  %type16 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %13, i32 0, i32 1, !dbg !3706
  %14 = load %struct.StructRNA*, %struct.StructRNA** %type16, align 8, !dbg !3706
  %call17 = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %14), !dbg !3707
  store %struct.PropertyRNA* %call17, %struct.PropertyRNA** %iterprop, align 8, !dbg !3704
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %propptr, metadata !3708, metadata !DIExpression()), !dbg !3709
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3710
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iterprop, align 8, !dbg !3712
  %17 = load i8*, i8** %identifier.addr, align 8, !dbg !3713
  %call18 = call i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %15, %struct.PropertyRNA* %16, i8* %17, %struct.PointerRNA* %propptr), !dbg !3714
  %tobool19 = icmp ne i32 %call18, 0, !dbg !3714
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !3715

if.then20:                                        ; preds = %if.else
  %data21 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %propptr, i32 0, i32 2, !dbg !3716
  %18 = load i8*, i8** %data21, align 8, !dbg !3716
  %19 = bitcast i8* %18 to %struct.PropertyRNA*, !dbg !3717
  store %struct.PropertyRNA* %19, %struct.PropertyRNA** %retval, align 8, !dbg !3718
  br label %return, !dbg !3718

if.end22:                                         ; preds = %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %retval, align 8, !dbg !3719
  br label %return, !dbg !3719

return:                                           ; preds = %if.end23, %if.then20, %if.then15
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %retval, align 8, !dbg !3720
  ret %struct.PropertyRNA* %20, !dbg !3720
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_path_resolve(%struct.PointerRNA* %ptr, i8* %path, %struct.PointerRNA* %r_ptr, %struct.PropertyRNA** %r_prop) #0 !dbg !3721 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %path.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %r_prop.addr = alloca %struct.PropertyRNA**, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3724, metadata !DIExpression()), !dbg !3725
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3726, metadata !DIExpression()), !dbg !3727
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  store %struct.PropertyRNA** %r_prop, %struct.PropertyRNA*** %r_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %r_prop.addr, metadata !3730, metadata !DIExpression()), !dbg !3731
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3732
  %1 = load i8*, i8** %path.addr, align 8, !dbg !3734
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3735
  %3 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !3736
  %call = call zeroext i8 @rna_path_parse(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2, %struct.PropertyRNA** %3, i32* null, %struct.ListBase* null, i8 zeroext 1), !dbg !3737
  %tobool = icmp ne i8 %call, 0, !dbg !3737
  br i1 %tobool, label %if.end, label %if.then, !dbg !3738

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3739
  br label %return, !dbg !3739

if.end:                                           ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3740
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 2, !dbg !3741
  %5 = load i8*, i8** %data, align 8, !dbg !3741
  %cmp = icmp ne i8* %5, null, !dbg !3742
  %conv = zext i1 %cmp to i32, !dbg !3742
  %conv1 = trunc i32 %conv to i8, !dbg !3740
  store i8 %conv1, i8* %retval, align 1, !dbg !3743
  br label %return, !dbg !3743

return:                                           ; preds = %if.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !3744
  ret i8 %6, !dbg !3744
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !3745 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %nameprop = alloca %struct.PropertyRNA*, align 8
  %name = alloca [256 x i8], align 16
  %nameptr = alloca i8*, align 8
  %found = alloca i32, align 4
  %keylen = alloca i32, align 4
  %namelen = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3748, metadata !DIExpression()), !dbg !3749
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !3750, metadata !DIExpression()), !dbg !3751
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3752, metadata !DIExpression()), !dbg !3753
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3754, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !3756, metadata !DIExpression()), !dbg !3757
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3758
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !3759
  %1 = bitcast %struct.PropertyRNA* %call to %struct.CollectionPropertyRNA*, !dbg !3760
  store %struct.CollectionPropertyRNA* %1, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !3757
  %2 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !3761
  %lookupstring = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %2, i32 0, i32 7, !dbg !3763
  %3 = load i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)** %lookupstring, align 8, !dbg !3763
  %tobool = icmp ne i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* %3, null, !dbg !3761
  br i1 %tobool, label %if.then, label %if.else, !dbg !3764

if.then:                                          ; preds = %entry
  %4 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !3765
  %lookupstring1 = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %4, i32 0, i32 7, !dbg !3767
  %5 = load i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)** %lookupstring1, align 8, !dbg !3767
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3768
  %7 = load i8*, i8** %key.addr, align 8, !dbg !3769
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3770
  %call2 = call i32 %5(%struct.PointerRNA* %6, i8* %7, %struct.PointerRNA* %8), !dbg !3765
  store i32 %call2, i32* %retval, align 4, !dbg !3771
  br label %return, !dbg !3771

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !3772, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %nameprop, metadata !3776, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata [256 x i8]* %name, metadata !3778, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.declare(metadata i8** %nameptr, metadata !3780, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.declare(metadata i32* %found, metadata !3782, metadata !DIExpression()), !dbg !3783
  store i32 0, i32* %found, align 4, !dbg !3783
  call void @llvm.dbg.declare(metadata i32* %keylen, metadata !3784, metadata !DIExpression()), !dbg !3785
  %9 = load i8*, i8** %key.addr, align 8, !dbg !3786
  %call3 = call i64 @strlen(i8* %9) #7, !dbg !3787
  %conv = trunc i64 %call3 to i32, !dbg !3787
  store i32 %conv, i32* %keylen, align 4, !dbg !3785
  call void @llvm.dbg.declare(metadata i32* %namelen, metadata !3788, metadata !DIExpression()), !dbg !3789
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3790
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3791
  call void @RNA_property_collection_begin(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, %struct.CollectionPropertyIterator* %iter), !dbg !3792
  br label %for.cond, !dbg !3793

for.cond:                                         ; preds = %for.inc, %if.else
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3794
  %12 = load i32, i32* %valid, align 8, !dbg !3794
  %tobool4 = icmp ne i32 %12, 0, !dbg !3797
  br i1 %tobool4, label %for.body, label %for.end, !dbg !3797

for.body:                                         ; preds = %for.cond
  %ptr5 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !3798
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr5, i32 0, i32 2, !dbg !3801
  %13 = load i8*, i8** %data, align 8, !dbg !3801
  %tobool6 = icmp ne i8* %13, null, !dbg !3802
  br i1 %tobool6, label %land.lhs.true, label %if.end29, !dbg !3803

land.lhs.true:                                    ; preds = %for.body
  %ptr7 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !3804
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr7, i32 0, i32 1, !dbg !3805
  %14 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3805
  %nameproperty = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %14, i32 0, i32 9, !dbg !3806
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %nameproperty, align 8, !dbg !3806
  %tobool8 = icmp ne %struct.PropertyRNA* %15, null, !dbg !3807
  br i1 %tobool8, label %if.then9, label %if.end29, !dbg !3808

if.then9:                                         ; preds = %land.lhs.true
  %ptr10 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !3809
  %type11 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr10, i32 0, i32 1, !dbg !3811
  %16 = load %struct.StructRNA*, %struct.StructRNA** %type11, align 8, !dbg !3811
  %nameproperty12 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %16, i32 0, i32 9, !dbg !3812
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %nameproperty12, align 8, !dbg !3812
  store %struct.PropertyRNA* %17, %struct.PropertyRNA** %nameprop, align 8, !dbg !3813
  %ptr13 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !3814
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %nameprop, align 8, !dbg !3815
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %name, i64 0, i64 0, !dbg !3816
  %call14 = call i8* @RNA_property_string_get_alloc(%struct.PointerRNA* %ptr13, %struct.PropertyRNA* %18, i8* %arraydecay, i32 256, i32* %namelen), !dbg !3817
  store i8* %call14, i8** %nameptr, align 8, !dbg !3818
  %19 = load i32, i32* %keylen, align 4, !dbg !3819
  %20 = load i32, i32* %namelen, align 4, !dbg !3821
  %cmp = icmp eq i32 %19, %20, !dbg !3822
  br i1 %cmp, label %land.lhs.true16, label %if.end, !dbg !3823

land.lhs.true16:                                  ; preds = %if.then9
  %21 = load i8*, i8** %nameptr, align 8, !dbg !3824
  %22 = load i8*, i8** %key.addr, align 8, !dbg !3825
  %call17 = call i32 @strcmp(i8* %21, i8* %22) #7, !dbg !3826
  %cmp18 = icmp eq i32 %call17, 0, !dbg !3827
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !3828

if.then20:                                        ; preds = %land.lhs.true16
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3829
  %ptr21 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !3831
  %24 = bitcast %struct.PointerRNA* %23 to i8*, !dbg !3831
  %25 = bitcast %struct.PointerRNA* %ptr21 to i8*, !dbg !3831
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false), !dbg !3831
  store i32 1, i32* %found, align 4, !dbg !3832
  br label %if.end, !dbg !3833

if.end:                                           ; preds = %if.then20, %land.lhs.true16, %if.then9
  %26 = bitcast [256 x i8]* %name to i8*, !dbg !3834
  %27 = load i8*, i8** %nameptr, align 8, !dbg !3836
  %cmp22 = icmp ne i8* %26, %27, !dbg !3837
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !3838

if.then24:                                        ; preds = %if.end
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3839
  %29 = load i8*, i8** %nameptr, align 8, !dbg !3840
  call void %28(i8* %29), !dbg !3839
  br label %if.end25, !dbg !3839

if.end25:                                         ; preds = %if.then24, %if.end
  %30 = load i32, i32* %found, align 4, !dbg !3841
  %tobool26 = icmp ne i32 %30, 0, !dbg !3841
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !3843

if.then27:                                        ; preds = %if.end25
  br label %for.end, !dbg !3844

if.end28:                                         ; preds = %if.end25
  br label %if.end29, !dbg !3845

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3846

for.inc:                                          ; preds = %if.end29
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %iter), !dbg !3847
  br label %for.cond, !dbg !3848, !llvm.loop !3849

for.end:                                          ; preds = %if.then27, %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %iter), !dbg !3851
  %valid30 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3852
  %31 = load i32, i32* %valid30, align 8, !dbg !3852
  %tobool31 = icmp ne i32 %31, 0, !dbg !3854
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !3855

if.then32:                                        ; preds = %for.end
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3856
  %33 = bitcast %struct.PointerRNA* %32 to i8*, !dbg !3857
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false), !dbg !3857
  br label %if.end33, !dbg !3857

if.end33:                                         ; preds = %if.then32, %for.end
  %valid34 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3858
  %34 = load i32, i32* %valid34, align 8, !dbg !3858
  store i32 %34, i32* %retval, align 4, !dbg !3859
  br label %return, !dbg !3859

return:                                           ; preds = %if.end33, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !3860
  ret i32 %35, !dbg !3860
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_contains_property(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop_test) #0 !dbg !3861 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop_test.addr = alloca %struct.PropertyRNA*, align 8
  %iterprop = alloca %struct.PropertyRNA*, align 8
  %found = alloca i8, align 1
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3864, metadata !DIExpression()), !dbg !3865
  store %struct.PropertyRNA* %prop_test, %struct.PropertyRNA** %prop_test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop_test.addr, metadata !3866, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iterprop, metadata !3868, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.declare(metadata i8* %found, metadata !3870, metadata !DIExpression()), !dbg !3871
  store i8 0, i8* %found, align 1, !dbg !3871
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3872
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 1, !dbg !3873
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3873
  %call = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %1), !dbg !3874
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %iterprop, align 8, !dbg !3875
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !3876, metadata !DIExpression()), !dbg !3878
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3879
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iterprop, align 8, !dbg !3879
  call void @RNA_property_collection_begin(%struct.PointerRNA* %2, %struct.PropertyRNA* %3, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !3879
  br label %for.cond, !dbg !3879

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !3881
  %4 = load i32, i32* %valid, align 8, !dbg !3881
  %tobool = icmp ne i32 %4, 0, !dbg !3879
  br i1 %tobool, label %for.body, label %for.end, !dbg !3879

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !3883, metadata !DIExpression()), !dbg !3885
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !3885
  %5 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !3885
  %6 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !3885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !3885
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop_test.addr, align 8, !dbg !3886
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %itemptr, i32 0, i32 2, !dbg !3889
  %8 = load i8*, i8** %data, align 8, !dbg !3889
  %9 = bitcast i8* %8 to %struct.PropertyRNA*, !dbg !3890
  %cmp = icmp eq %struct.PropertyRNA* %7, %9, !dbg !3891
  br i1 %cmp, label %if.then, label %if.end, !dbg !3892

if.then:                                          ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !3893
  br label %for.end, !dbg !3895

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3896

for.inc:                                          ; preds = %if.end
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !3881
  br label %for.cond, !dbg !3881, !llvm.loop !3897

for.end:                                          ; preds = %if.then, %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !3899
  %10 = load i8, i8* %found, align 1, !dbg !3900
  ret i8 %10, !dbg !3901
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_collection_begin(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.CollectionPropertyIterator* %iter) #0 !dbg !3902 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3906, metadata !DIExpression()), !dbg !3907
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !3908, metadata !DIExpression()), !dbg !3909
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3910, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !3912, metadata !DIExpression()), !dbg !3913
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3914
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !3915
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !3915
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3916
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !3918
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !3919
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !3919
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3920

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3921
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 4, !dbg !3922
  %4 = load i32, i32* %flag, align 8, !dbg !3922
  %and = and i32 %4, 1024, !dbg !3923
  %tobool1 = icmp ne i32 %and, 0, !dbg !3923
  br i1 %tobool1, label %if.then, label %if.else9, !dbg !3924

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3925
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %5, i32 0, i32 0, !dbg !3927
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3928
  %7 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !3929
  %8 = bitcast %struct.PointerRNA* %6 to i8*, !dbg !3929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !3929
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3930
  %10 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3931
  %prop2 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %10, i32 0, i32 2, !dbg !3932
  store %struct.PropertyRNA* %9, %struct.PropertyRNA** %prop2, align 8, !dbg !3933
  %11 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !3934
  %tobool3 = icmp ne %struct.IDProperty* %11, null, !dbg !3934
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3936

if.then4:                                         ; preds = %if.then
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3937
  %13 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !3938
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %13, i32 0, i32 7, !dbg !3938
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !3938
  %14 = load i8*, i8** %pointer, align 8, !dbg !3938
  %15 = bitcast i8* %14 to %struct.IDProperty*, !dbg !3938
  %16 = bitcast %struct.IDProperty* %15 to i8*, !dbg !3938
  %17 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !3939
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %17, i32 0, i32 8, !dbg !3940
  %18 = load i32, i32* %len, align 8, !dbg !3940
  call void @rna_iterator_array_begin(%struct.CollectionPropertyIterator* %12, i8* %16, i32 128, i32 %18, i8 zeroext 0, i32 (%struct.CollectionPropertyIterator*, i8*)* null), !dbg !3941
  br label %if.end, !dbg !3941

if.else:                                          ; preds = %if.then
  %19 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3942
  call void @rna_iterator_array_begin(%struct.CollectionPropertyIterator* %19, i8* null, i32 128, i32 0, i8 zeroext 0, i32 (%struct.CollectionPropertyIterator*, i8*)* null), !dbg !3943
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %20 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3944
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %20, i32 0, i32 7, !dbg !3946
  %21 = load i32, i32* %valid, align 8, !dbg !3946
  %tobool5 = icmp ne i32 %21, 0, !dbg !3944
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !3947

if.then6:                                         ; preds = %if.end
  %22 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3948
  call void @rna_property_collection_get_idp(%struct.CollectionPropertyIterator* %22), !dbg !3949
  br label %if.end7, !dbg !3949

if.end7:                                          ; preds = %if.then6, %if.end
  %23 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3950
  %idprop8 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %23, i32 0, i32 4, !dbg !3951
  store i32 1, i32* %idprop8, align 8, !dbg !3952
  br label %if.end10, !dbg !3953

if.else9:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !3954, metadata !DIExpression()), !dbg !3956
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3957
  %25 = bitcast %struct.PropertyRNA* %24 to %struct.CollectionPropertyRNA*, !dbg !3958
  store %struct.CollectionPropertyRNA* %25, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !3956
  %26 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !3959
  %begin = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %26, i32 0, i32 1, !dbg !3960
  %27 = load void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)*, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)** %begin, align 8, !dbg !3960
  %28 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3961
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3962
  call void %27(%struct.CollectionPropertyIterator* %28, %struct.PointerRNA* %29), !dbg !3959
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end7
  ret void, !dbg !3963
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3964 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3967, metadata !DIExpression()), !dbg !3968
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !3969, metadata !DIExpression()), !dbg !3970
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3971
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 2, !dbg !3972
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3972
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %1), !dbg !3973
  %2 = bitcast %struct.PropertyRNA* %call to %struct.CollectionPropertyRNA*, !dbg !3974
  store %struct.CollectionPropertyRNA* %2, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !3970
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3975
  %idprop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 4, !dbg !3977
  %4 = load i32, i32* %idprop, align 8, !dbg !3977
  %tobool = icmp ne i32 %4, 0, !dbg !3975
  br i1 %tobool, label %if.then, label %if.else, !dbg !3978

if.then:                                          ; preds = %entry
  %5 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3979
  call void @rna_iterator_array_next(%struct.CollectionPropertyIterator* %5), !dbg !3981
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3982
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 7, !dbg !3984
  %7 = load i32, i32* %valid, align 8, !dbg !3984
  %tobool1 = icmp ne i32 %7, 0, !dbg !3982
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3985

if.then2:                                         ; preds = %if.then
  %8 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3986
  call void @rna_property_collection_get_idp(%struct.CollectionPropertyIterator* %8), !dbg !3987
  br label %if.end, !dbg !3987

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !3988

if.else:                                          ; preds = %entry
  %9 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !3989
  %next = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %9, i32 0, i32 2, !dbg !3990
  %10 = load void (%struct.CollectionPropertyIterator*)*, void (%struct.CollectionPropertyIterator*)** %next, align 8, !dbg !3990
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3991
  call void %10(%struct.CollectionPropertyIterator* %11), !dbg !3989
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.end
  ret void, !dbg !3992
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3993 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3994, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !3996, metadata !DIExpression()), !dbg !3997
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3998
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 2, !dbg !3999
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3999
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %1), !dbg !4000
  %2 = bitcast %struct.PropertyRNA* %call to %struct.CollectionPropertyRNA*, !dbg !4001
  store %struct.CollectionPropertyRNA* %2, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !3997
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4002
  %idprop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 4, !dbg !4004
  %4 = load i32, i32* %idprop, align 8, !dbg !4004
  %tobool = icmp ne i32 %4, 0, !dbg !4002
  br i1 %tobool, label %if.then, label %if.else, !dbg !4005

if.then:                                          ; preds = %entry
  %5 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4006
  call void @rna_iterator_array_end(%struct.CollectionPropertyIterator* %5), !dbg !4007
  br label %if.end, !dbg !4007

if.else:                                          ; preds = %entry
  %6 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !4008
  %end = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %6, i32 0, i32 3, !dbg !4009
  %7 = load void (%struct.CollectionPropertyIterator*)*, void (%struct.CollectionPropertyIterator*)** %end, align 8, !dbg !4009
  %8 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4010
  call void %7(%struct.CollectionPropertyIterator* %8), !dbg !4008
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4011
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @RNA_struct_type_properties(%struct.StructRNA* %srna) #0 !dbg !4012 {
entry:
  %srna.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !4017, metadata !DIExpression()), !dbg !4018
  %0 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !4019
  %cont = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 0, !dbg !4020
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !4021
  ret %struct.ListBase* %properties, !dbg !4022
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PropertyRNA* @RNA_struct_type_find_property(%struct.StructRNA* %srna, i8* %identifier) #0 !dbg !4023 {
entry:
  %srna.addr = alloca %struct.StructRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !4026, metadata !DIExpression()), !dbg !4027
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !4028, metadata !DIExpression()), !dbg !4029
  %0 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !4030
  %cont = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 0, !dbg !4031
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !4032
  %1 = load i8*, i8** %identifier.addr, align 8, !dbg !4033
  %call = call i8* @BLI_findstring_ptr(%struct.ListBase* %properties, i8* %1, i32 24), !dbg !4034
  %2 = bitcast i8* %call to %struct.PropertyRNA*, !dbg !4034
  ret %struct.PropertyRNA* %2, !dbg !4035
}

declare dso_local i8* @BLI_findstring_ptr(%struct.ListBase*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.FunctionRNA* @RNA_struct_find_function(%struct.StructRNA* %srna, i8* %identifier) #0 !dbg !4036 {
entry:
  %retval = alloca %struct.FunctionRNA*, align 8
  %srna.addr = alloca %struct.StructRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %func = alloca %struct.FunctionRNA*, align 8
  %type = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !4039, metadata !DIExpression()), !dbg !4040
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !4041, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func, metadata !4043, metadata !DIExpression()), !dbg !4044
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type, metadata !4045, metadata !DIExpression()), !dbg !4046
  %0 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !4047
  store %struct.StructRNA* %0, %struct.StructRNA** %type, align 8, !dbg !4049
  br label %for.cond, !dbg !4050

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !4051
  %tobool = icmp ne %struct.StructRNA* %1, null, !dbg !4053
  br i1 %tobool, label %for.body, label %for.end, !dbg !4053

for.body:                                         ; preds = %for.cond
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !4054
  %functions = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %2, i32 0, i32 19, !dbg !4056
  %3 = load i8*, i8** %identifier.addr, align 8, !dbg !4057
  %call = call i8* @BLI_findstring_ptr(%struct.ListBase* %functions, i8* %3, i32 40), !dbg !4058
  %4 = bitcast i8* %call to %struct.FunctionRNA*, !dbg !4059
  store %struct.FunctionRNA* %4, %struct.FunctionRNA** %func, align 8, !dbg !4060
  %5 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !4061
  %tobool1 = icmp ne %struct.FunctionRNA* %5, null, !dbg !4061
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4063

if.then:                                          ; preds = %for.body
  %6 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !4064
  store %struct.FunctionRNA* %6, %struct.FunctionRNA** %retval, align 8, !dbg !4066
  br label %return, !dbg !4066

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4067

for.inc:                                          ; preds = %if.end
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !4068
  %base = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %7, i32 0, i32 11, !dbg !4069
  %8 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !4069
  store %struct.StructRNA* %8, %struct.StructRNA** %type, align 8, !dbg !4070
  br label %for.cond, !dbg !4071, !llvm.loop !4072

for.end:                                          ; preds = %for.cond
  store %struct.FunctionRNA* null, %struct.FunctionRNA** %retval, align 8, !dbg !4074
  br label %return, !dbg !4074

return:                                           ; preds = %for.end, %if.then
  %9 = load %struct.FunctionRNA*, %struct.FunctionRNA** %retval, align 8, !dbg !4075
  ret %struct.FunctionRNA* %9, !dbg !4075
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @RNA_struct_type_functions(%struct.StructRNA* %srna) #0 !dbg !4076 {
entry:
  %srna.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  %0 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !4079
  %functions = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 19, !dbg !4080
  ret %struct.ListBase* %functions, !dbg !4081
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* @RNA_struct_register(%struct.StructRNA* %type) #0 !dbg !4082 {
entry:
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !4085, metadata !DIExpression()), !dbg !4086
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !4087
  %reg = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 15, !dbg !4088
  %1 = load %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)*, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)** %reg, align 8, !dbg !4088
  ret %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* %1, !dbg !4089
}

; Function Attrs: noinline nounwind uwtable
define dso_local void (%struct.Main*, %struct.StructRNA*)* @RNA_struct_unregister(%struct.StructRNA* %type) #0 !dbg !4090 {
entry:
  %retval = alloca void (%struct.Main*, %struct.StructRNA*)*, align 8
  %type.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !4093, metadata !DIExpression()), !dbg !4094
  br label %do.body, !dbg !4095

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !4096
  %unreg = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 16, !dbg !4099
  %1 = load void (%struct.Main*, %struct.StructRNA*)*, void (%struct.Main*, %struct.StructRNA*)** %unreg, align 8, !dbg !4099
  %tobool = icmp ne void (%struct.Main*, %struct.StructRNA*)* %1, null, !dbg !4096
  br i1 %tobool, label %if.then, label %if.end, !dbg !4100

if.then:                                          ; preds = %do.body
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !4101
  %unreg1 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %2, i32 0, i32 16, !dbg !4102
  %3 = load void (%struct.Main*, %struct.StructRNA*)*, void (%struct.Main*, %struct.StructRNA*)** %unreg1, align 8, !dbg !4102
  store void (%struct.Main*, %struct.StructRNA*)* %3, void (%struct.Main*, %struct.StructRNA*)** %retval, align 8, !dbg !4103
  br label %return, !dbg !4103

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !4104

do.cond:                                          ; preds = %if.end
  %4 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !4105
  %base = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %4, i32 0, i32 11, !dbg !4106
  %5 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !4106
  store %struct.StructRNA* %5, %struct.StructRNA** %type.addr, align 8, !dbg !4107
  %tobool2 = icmp ne %struct.StructRNA* %5, null, !dbg !4104
  br i1 %tobool2, label %do.body, label %do.end, !dbg !4104, !llvm.loop !4108

do.end:                                           ; preds = %do.cond
  store void (%struct.Main*, %struct.StructRNA*)* null, void (%struct.Main*, %struct.StructRNA*)** %retval, align 8, !dbg !4110
  br label %return, !dbg !4110

return:                                           ; preds = %do.end, %if.then
  %6 = load void (%struct.Main*, %struct.StructRNA*)*, void (%struct.Main*, %struct.StructRNA*)** %retval, align 8, !dbg !4111
  ret void (%struct.Main*, %struct.StructRNA*)* %6, !dbg !4111
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8** @RNA_struct_instance(%struct.PointerRNA* %ptr) #0 !dbg !4112 {
entry:
  %retval = alloca i8**, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %type = alloca %struct.StructRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4113, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type, metadata !4115, metadata !DIExpression()), !dbg !4116
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4117
  %type1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 1, !dbg !4118
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type1, align 8, !dbg !4118
  store %struct.StructRNA* %1, %struct.StructRNA** %type, align 8, !dbg !4116
  br label %do.body, !dbg !4119

do.body:                                          ; preds = %do.cond, %entry
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !4120
  %instance = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %2, i32 0, i32 17, !dbg !4123
  %3 = load i8** (%struct.PointerRNA*)*, i8** (%struct.PointerRNA*)** %instance, align 8, !dbg !4123
  %tobool = icmp ne i8** (%struct.PointerRNA*)* %3, null, !dbg !4120
  br i1 %tobool, label %if.then, label %if.end, !dbg !4124

if.then:                                          ; preds = %do.body
  %4 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !4125
  %instance2 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %4, i32 0, i32 17, !dbg !4126
  %5 = load i8** (%struct.PointerRNA*)*, i8** (%struct.PointerRNA*)** %instance2, align 8, !dbg !4126
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4127
  %call = call i8** %5(%struct.PointerRNA* %6), !dbg !4125
  store i8** %call, i8*** %retval, align 8, !dbg !4128
  br label %return, !dbg !4128

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !4129

do.cond:                                          ; preds = %if.end
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !4130
  %base = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %7, i32 0, i32 11, !dbg !4131
  %8 = load %struct.StructRNA*, %struct.StructRNA** %base, align 8, !dbg !4131
  store %struct.StructRNA* %8, %struct.StructRNA** %type, align 8, !dbg !4132
  %tobool3 = icmp ne %struct.StructRNA* %8, null, !dbg !4129
  br i1 %tobool3, label %do.body, label %do.end, !dbg !4129, !llvm.loop !4133

do.end:                                           ; preds = %do.cond
  store i8** null, i8*** %retval, align 8, !dbg !4135
  br label %return, !dbg !4135

return:                                           ; preds = %do.end, %if.then
  %9 = load i8**, i8*** %retval, align 8, !dbg !4136
  ret i8** %9, !dbg !4136
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_py_type_get(%struct.StructRNA* %srna) #0 !dbg !4137 {
entry:
  %srna.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !4140, metadata !DIExpression()), !dbg !4141
  %0 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !4142
  %py_type = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 2, !dbg !4143
  %1 = load i8*, i8** %py_type, align 8, !dbg !4143
  ret i8* %1, !dbg !4144
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_struct_py_type_set(%struct.StructRNA* %srna, i8* %py_type) #0 !dbg !4145 {
entry:
  %srna.addr = alloca %struct.StructRNA*, align 8
  %py_type.addr = alloca i8*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !4148, metadata !DIExpression()), !dbg !4149
  store i8* %py_type, i8** %py_type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %py_type.addr, metadata !4150, metadata !DIExpression()), !dbg !4151
  %0 = load i8*, i8** %py_type.addr, align 8, !dbg !4152
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !4153
  %py_type1 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %1, i32 0, i32 2, !dbg !4154
  store i8* %0, i8** %py_type1, align 8, !dbg !4155
  ret void, !dbg !4156
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_blender_type_get(%struct.StructRNA* %srna) #0 !dbg !4157 {
entry:
  %srna.addr = alloca %struct.StructRNA*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !4158, metadata !DIExpression()), !dbg !4159
  %0 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !4160
  %blender_type = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %0, i32 0, i32 3, !dbg !4161
  %1 = load i8*, i8** %blender_type, align 8, !dbg !4161
  ret i8* %1, !dbg !4162
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_struct_blender_type_set(%struct.StructRNA* %srna, i8* %blender_type) #0 !dbg !4163 {
entry:
  %srna.addr = alloca %struct.StructRNA*, align 8
  %blender_type.addr = alloca i8*, align 8
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !4164, metadata !DIExpression()), !dbg !4165
  store i8* %blender_type, i8** %blender_type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %blender_type.addr, metadata !4166, metadata !DIExpression()), !dbg !4167
  %0 = load i8*, i8** %blender_type.addr, align 8, !dbg !4168
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !4169
  %blender_type1 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %1, i32 0, i32 3, !dbg !4170
  store i8* %0, i8** %blender_type1, align 8, !dbg !4171
  ret void, !dbg !4172
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_struct_name_get_alloc(%struct.PointerRNA* %ptr, i8* %fixedbuf, i32 %fixedlen, i32* %r_len) #0 !dbg !4173 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %fixedbuf.addr = alloca i8*, align 8
  %fixedlen.addr = alloca i32, align 4
  %r_len.addr = alloca i32*, align 8
  %nameprop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4176, metadata !DIExpression()), !dbg !4177
  store i8* %fixedbuf, i8** %fixedbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fixedbuf.addr, metadata !4178, metadata !DIExpression()), !dbg !4179
  store i32 %fixedlen, i32* %fixedlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fixedlen.addr, metadata !4180, metadata !DIExpression()), !dbg !4181
  store i32* %r_len, i32** %r_len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_len.addr, metadata !4182, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %nameprop, metadata !4184, metadata !DIExpression()), !dbg !4185
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4186
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4188
  %1 = load i8*, i8** %data, align 8, !dbg !4188
  %tobool = icmp ne i8* %1, null, !dbg !4186
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4189

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4190
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 1, !dbg !4191
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !4191
  %call = call %struct.PropertyRNA* @RNA_struct_name_property(%struct.StructRNA* %3), !dbg !4192
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %nameprop, align 8, !dbg !4193
  %tobool1 = icmp ne %struct.PropertyRNA* %call, null, !dbg !4193
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4194

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4195
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %nameprop, align 8, !dbg !4196
  %6 = load i8*, i8** %fixedbuf.addr, align 8, !dbg !4197
  %7 = load i32, i32* %fixedlen.addr, align 4, !dbg !4198
  %8 = load i32*, i32** %r_len.addr, align 8, !dbg !4199
  %call2 = call i8* @RNA_property_string_get_alloc(%struct.PointerRNA* %4, %struct.PropertyRNA* %5, i8* %6, i32 %7, i32* %8), !dbg !4200
  store i8* %call2, i8** %retval, align 8, !dbg !4201
  br label %return, !dbg !4201

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* null, i8** %retval, align 8, !dbg !4202
  br label %return, !dbg !4202

return:                                           ; preds = %if.end, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !4203
  ret i8* %9, !dbg !4203
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_string_get_alloc(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %fixedbuf, i32 %fixedlen, i32* %r_len) #0 !dbg !4204 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %fixedbuf.addr = alloca i8*, align 8
  %fixedlen.addr = alloca i32, align 4
  %r_len.addr = alloca i32*, align 8
  %buf = alloca i8*, align 8
  %length = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4207, metadata !DIExpression()), !dbg !4208
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4209, metadata !DIExpression()), !dbg !4210
  store i8* %fixedbuf, i8** %fixedbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fixedbuf.addr, metadata !4211, metadata !DIExpression()), !dbg !4212
  store i32 %fixedlen, i32* %fixedlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fixedlen.addr, metadata !4213, metadata !DIExpression()), !dbg !4214
  store i32* %r_len, i32** %r_len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_len.addr, metadata !4215, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4217, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.declare(metadata i32* %length, metadata !4219, metadata !DIExpression()), !dbg !4220
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4221
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4222
  %call = call i32 @RNA_property_string_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !4223
  store i32 %call, i32* %length, align 4, !dbg !4224
  %2 = load i32, i32* %length, align 4, !dbg !4225
  %add = add nsw i32 %2, 1, !dbg !4227
  %3 = load i32, i32* %fixedlen.addr, align 4, !dbg !4228
  %cmp = icmp slt i32 %add, %3, !dbg !4229
  br i1 %cmp, label %if.then, label %if.else, !dbg !4230

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %fixedbuf.addr, align 8, !dbg !4231
  store i8* %4, i8** %buf, align 8, !dbg !4232
  br label %if.end, !dbg !4233

if.else:                                          ; preds = %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4234
  %6 = load i32, i32* %length, align 4, !dbg !4235
  %add1 = add nsw i32 %6, 1, !dbg !4236
  %conv = sext i32 %add1 to i64, !dbg !4237
  %mul = mul i64 1, %conv, !dbg !4238
  %call2 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0)), !dbg !4234
  store i8* %call2, i8** %buf, align 8, !dbg !4239
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4240
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4241
  %9 = load i8*, i8** %buf, align 8, !dbg !4242
  call void @RNA_property_string_get(%struct.PointerRNA* %7, %struct.PropertyRNA* %8, i8* %9), !dbg !4243
  %10 = load i32*, i32** %r_len.addr, align 8, !dbg !4244
  %tobool = icmp ne i32* %10, null, !dbg !4244
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !4246

if.then3:                                         ; preds = %if.end
  %11 = load i32, i32* %length, align 4, !dbg !4247
  %12 = load i32*, i32** %r_len.addr, align 8, !dbg !4249
  store i32 %11, i32* %12, align 4, !dbg !4250
  br label %if.end4, !dbg !4251

if.end4:                                          ; preds = %if.then3, %if.end
  %13 = load i8*, i8** %buf, align 8, !dbg !4252
  ret i8* %13, !dbg !4253
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_identifier(%struct.PropertyRNA* %prop) #0 !dbg !4254 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4257, metadata !DIExpression()), !dbg !4258
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4259
  %call = call i8* @rna_ensure_property_identifier(%struct.PropertyRNA* %0), !dbg !4260
  ret i8* %call, !dbg !4261
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_ensure_property_identifier(%struct.PropertyRNA* %prop) #0 !dbg !4262 {
entry:
  %retval = alloca i8*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4267, metadata !DIExpression()), !dbg !4268
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4269
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !4271
  %1 = load i32, i32* %magic, align 8, !dbg !4271
  %cmp = icmp eq i32 %1, -1, !dbg !4272
  br i1 %cmp, label %if.then, label %if.else, !dbg !4273

if.then:                                          ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4274
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 3, !dbg !4275
  %3 = load i8*, i8** %identifier, align 8, !dbg !4275
  store i8* %3, i8** %retval, align 8, !dbg !4276
  br label %return, !dbg !4276

if.else:                                          ; preds = %entry
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4277
  %5 = bitcast %struct.PropertyRNA* %4 to %struct.IDProperty*, !dbg !4278
  %name = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 5, !dbg !4278
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4279
  store i8* %arraydecay, i8** %retval, align 8, !dbg !4280
  br label %return, !dbg !4280

return:                                           ; preds = %if.else, %if.then
  %6 = load i8*, i8** %retval, align 8, !dbg !4281
  ret i8* %6, !dbg !4281
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_description(%struct.PropertyRNA* %prop) #0 !dbg !4282 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4283, metadata !DIExpression()), !dbg !4284
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4285
  %call = call i8* @rna_ensure_property_description(%struct.PropertyRNA* %0), !dbg !4285
  ret i8* %call, !dbg !4286
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_ensure_property_description(%struct.PropertyRNA* %prop) #0 !dbg !4287 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %description = alloca i8*, align 8
  %idp_ui = alloca %struct.IDProperty*, align 8
  %item = alloca %struct.IDProperty*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4288, metadata !DIExpression()), !dbg !4289
  call void @llvm.dbg.declare(metadata i8** %description, metadata !4290, metadata !DIExpression()), !dbg !4291
  store i8* null, i8** %description, align 8, !dbg !4291
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4292
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !4294
  %1 = load i32, i32* %magic, align 8, !dbg !4294
  %cmp = icmp eq i32 %1, -1, !dbg !4295
  br i1 %cmp, label %if.then, label %if.else, !dbg !4296

if.then:                                          ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4297
  %description1 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 6, !dbg !4298
  %3 = load i8*, i8** %description1, align 8, !dbg !4298
  store i8* %3, i8** %description, align 8, !dbg !4299
  br label %if.end10, !dbg !4300

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idp_ui, metadata !4301, metadata !DIExpression()), !dbg !4303
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4304
  %call = call %struct.IDProperty* @rna_idproperty_ui(%struct.PropertyRNA* %4), !dbg !4305
  store %struct.IDProperty* %call, %struct.IDProperty** %idp_ui, align 8, !dbg !4303
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4306
  %tobool = icmp ne %struct.IDProperty* %5, null, !dbg !4306
  br i1 %tobool, label %if.then2, label %if.end6, !dbg !4308

if.then2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %item, metadata !4309, metadata !DIExpression()), !dbg !4311
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4312
  %call3 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i64 0, i64 0), i8 zeroext 0), !dbg !4313
  store %struct.IDProperty* %call3, %struct.IDProperty** %item, align 8, !dbg !4311
  %7 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4314
  %tobool4 = icmp ne %struct.IDProperty* %7, null, !dbg !4314
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4316

if.then5:                                         ; preds = %if.then2
  %8 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4317
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 7, !dbg !4317
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !4317
  %9 = load i8*, i8** %pointer, align 8, !dbg !4317
  store i8* %9, i8** %description, align 8, !dbg !4318
  br label %if.end, !dbg !4319

if.end:                                           ; preds = %if.then5, %if.then2
  br label %if.end6, !dbg !4320

if.end6:                                          ; preds = %if.end, %if.else
  %10 = load i8*, i8** %description, align 8, !dbg !4321
  %cmp7 = icmp eq i8* %10, null, !dbg !4323
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4324

if.then8:                                         ; preds = %if.end6
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4325
  %12 = bitcast %struct.PropertyRNA* %11 to %struct.IDProperty*, !dbg !4326
  %name = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 5, !dbg !4326
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4327
  store i8* %arraydecay, i8** %description, align 8, !dbg !4328
  br label %if.end9, !dbg !4329

if.end9:                                          ; preds = %if.then8, %if.end6
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then
  %13 = load i8*, i8** %description, align 8, !dbg !4330
  ret i8* %13, !dbg !4331
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_type(%struct.PropertyRNA* %prop) #0 !dbg !4332 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4335, metadata !DIExpression()), !dbg !4336
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4337
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4338
  %type = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %call, i32 0, i32 9, !dbg !4339
  %1 = load i32, i32* %type, align 8, !dbg !4339
  ret i32 %1, !dbg !4340
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %prop) #0 !dbg !4341 {
entry:
  %retval = alloca %struct.PropertyRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4344, metadata !DIExpression()), !dbg !4345
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4346
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !4348
  %1 = load i32, i32* %magic, align 8, !dbg !4348
  %cmp = icmp eq i32 %1, -1, !dbg !4349
  br i1 %cmp, label %if.then, label %if.end, !dbg !4350

if.then:                                          ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4351
  store %struct.PropertyRNA* %2, %struct.PropertyRNA** %retval, align 8, !dbg !4352
  br label %return, !dbg !4352

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !4353, metadata !DIExpression()), !dbg !4355
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4356
  %4 = bitcast %struct.PropertyRNA* %3 to %struct.IDProperty*, !dbg !4357
  store %struct.IDProperty* %4, %struct.IDProperty** %idprop, align 8, !dbg !4355
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4358
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 2, !dbg !4360
  %6 = load i8, i8* %type, align 8, !dbg !4360
  %conv = zext i8 %6 to i32, !dbg !4358
  %cmp1 = icmp eq i32 %conv, 5, !dbg !4361
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !4362

if.then3:                                         ; preds = %if.end
  %7 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4363
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %7, i32 0, i32 3, !dbg !4364
  %8 = load i8, i8* %subtype, align 1, !dbg !4364
  %conv4 = zext i8 %8 to i32, !dbg !4365
  %idxprom = sext i32 %conv4 to i64, !dbg !4366
  %arrayidx = getelementptr inbounds [10 x %struct.PropertyRNA*], [10 x %struct.PropertyRNA*]* @arraytypemap, i64 0, i64 %idxprom, !dbg !4366
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %arrayidx, align 8, !dbg !4366
  store %struct.PropertyRNA* %9, %struct.PropertyRNA** %retval, align 8, !dbg !4367
  br label %return, !dbg !4367

if.else:                                          ; preds = %if.end
  %10 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4368
  %type5 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %10, i32 0, i32 2, !dbg !4369
  %11 = load i8, i8* %type5, align 8, !dbg !4369
  %conv6 = zext i8 %11 to i32, !dbg !4370
  %idxprom7 = sext i32 %conv6 to i64, !dbg !4371
  %arrayidx8 = getelementptr inbounds [10 x %struct.PropertyRNA*], [10 x %struct.PropertyRNA*]* @typemap, i64 0, i64 %idxprom7, !dbg !4371
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %arrayidx8, align 8, !dbg !4371
  store %struct.PropertyRNA* %12, %struct.PropertyRNA** %retval, align 8, !dbg !4372
  br label %return, !dbg !4372

return:                                           ; preds = %if.else, %if.then3, %if.then
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %retval, align 8, !dbg !4373
  ret %struct.PropertyRNA* %13, !dbg !4373
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_subtype(%struct.PropertyRNA* %prop) #0 !dbg !4374 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4377, metadata !DIExpression()), !dbg !4378
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4379
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4380
  %subtype = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %call, i32 0, i32 10, !dbg !4381
  %1 = load i32, i32* %subtype, align 4, !dbg !4381
  ret i32 %1, !dbg !4382
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_unit(%struct.PropertyRNA* %prop) #0 !dbg !4383 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4387, metadata !DIExpression()), !dbg !4388
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4389
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4389
  %subtype = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %call, i32 0, i32 10, !dbg !4389
  %1 = load i32, i32* %subtype, align 4, !dbg !4389
  %and = and i32 %1, 16711680, !dbg !4389
  ret i32 %and, !dbg !4390
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_flag(%struct.PropertyRNA* %prop) #0 !dbg !4391 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4394, metadata !DIExpression()), !dbg !4395
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4396
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4397
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %call, i32 0, i32 4, !dbg !4398
  %1 = load i32, i32* %flag, align 8, !dbg !4398
  ret i32 %1, !dbg !4399
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_py_data_get(%struct.PropertyRNA* %prop) #0 !dbg !4400 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4403, metadata !DIExpression()), !dbg !4404
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4405
  %py_data = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 22, !dbg !4406
  %1 = load i8*, i8** %py_data, align 8, !dbg !4406
  ret i8* %1, !dbg !4407
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_array_length(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !4408 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4411, metadata !DIExpression()), !dbg !4412
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4413, metadata !DIExpression()), !dbg !4414
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4415
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4416
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !4417
  ret i32 %call, !dbg !4418
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_ensure_property_array_length(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !4419 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %arraylen = alloca [3 x i32], align 4
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4420, metadata !DIExpression()), !dbg !4421
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4422, metadata !DIExpression()), !dbg !4423
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4424
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !4426
  %1 = load i32, i32* %magic, align 8, !dbg !4426
  %cmp = icmp eq i32 %1, -1, !dbg !4427
  br i1 %cmp, label %if.then, label %if.else, !dbg !4428

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x i32]* %arraylen, metadata !4429, metadata !DIExpression()), !dbg !4431
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4432
  %getlength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 11, !dbg !4433
  %3 = load i32 (%struct.PointerRNA*, i32*)*, i32 (%struct.PointerRNA*, i32*)** %getlength, align 8, !dbg !4433
  %tobool = icmp ne i32 (%struct.PointerRNA*, i32*)* %3, null, !dbg !4432
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !4434

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4435
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 2, !dbg !4436
  %5 = load i8*, i8** %data, align 8, !dbg !4436
  %tobool1 = icmp ne i8* %5, null, !dbg !4435
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !4437

cond.true:                                        ; preds = %land.lhs.true
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4438
  %getlength2 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %6, i32 0, i32 11, !dbg !4439
  %7 = load i32 (%struct.PointerRNA*, i32*)*, i32 (%struct.PointerRNA*, i32*)** %getlength2, align 8, !dbg !4439
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4440
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %arraylen, i64 0, i64 0, !dbg !4441
  %call = call i32 %7(%struct.PointerRNA* %8, i32* %arraydecay), !dbg !4438
  br label %cond.end, !dbg !4437

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4442
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %9, i32 0, i32 14, !dbg !4443
  %10 = load i32, i32* %totarraylength, align 8, !dbg !4443
  br label %cond.end, !dbg !4437

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %10, %cond.false ], !dbg !4437
  store i32 %cond, i32* %retval, align 4, !dbg !4444
  br label %return, !dbg !4444

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !4445, metadata !DIExpression()), !dbg !4447
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4448
  %12 = bitcast %struct.PropertyRNA* %11 to %struct.IDProperty*, !dbg !4449
  store %struct.IDProperty* %12, %struct.IDProperty** %idprop, align 8, !dbg !4447
  %13 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4450
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %13, i32 0, i32 2, !dbg !4452
  %14 = load i8, i8* %type, align 8, !dbg !4452
  %conv = zext i8 %14 to i32, !dbg !4450
  %cmp3 = icmp eq i32 %conv, 5, !dbg !4453
  br i1 %cmp3, label %if.then5, label %if.else6, !dbg !4454

if.then5:                                         ; preds = %if.else
  %15 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4455
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %15, i32 0, i32 8, !dbg !4456
  %16 = load i32, i32* %len, align 8, !dbg !4456
  store i32 %16, i32* %retval, align 4, !dbg !4457
  br label %return, !dbg !4457

if.else6:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !4458
  br label %return, !dbg !4458

return:                                           ; preds = %if.else6, %if.then5, %cond.end
  %17 = load i32, i32* %retval, align 4, !dbg !4459
  ret i32 %17, !dbg !4459
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %prop) #0 !dbg !4460 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4465
  %call = call zeroext i8 @rna_ensure_property_array_check(%struct.PropertyRNA* %0), !dbg !4466
  ret i8 %call, !dbg !4467
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rna_ensure_property_array_check(%struct.PropertyRNA* %prop) #0 !dbg !4468 {
entry:
  %retval = alloca i8, align 1
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4469, metadata !DIExpression()), !dbg !4470
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4471
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !4473
  %1 = load i32, i32* %magic, align 8, !dbg !4473
  %cmp = icmp eq i32 %1, -1, !dbg !4474
  br i1 %cmp, label %if.then, label %if.else, !dbg !4475

if.then:                                          ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4476
  %getlength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 11, !dbg !4478
  %3 = load i32 (%struct.PointerRNA*, i32*)*, i32 (%struct.PointerRNA*, i32*)** %getlength, align 8, !dbg !4478
  %tobool = icmp ne i32 (%struct.PointerRNA*, i32*)* %3, null, !dbg !4476
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4479

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4480
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 14, !dbg !4481
  %5 = load i32, i32* %totarraylength, align 8, !dbg !4481
  %tobool1 = icmp ne i32 %5, 0, !dbg !4479
  br label %lor.end, !dbg !4479

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool1, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !4479
  %conv = trunc i32 %lor.ext to i8, !dbg !4482
  store i8 %conv, i8* %retval, align 1, !dbg !4483
  br label %return, !dbg !4483

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !4484, metadata !DIExpression()), !dbg !4486
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4487
  %8 = bitcast %struct.PropertyRNA* %7 to %struct.IDProperty*, !dbg !4488
  store %struct.IDProperty* %8, %struct.IDProperty** %idprop, align 8, !dbg !4486
  %9 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4489
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %9, i32 0, i32 2, !dbg !4490
  %10 = load i8, i8* %type, align 8, !dbg !4490
  %conv2 = zext i8 %10 to i32, !dbg !4489
  %cmp3 = icmp eq i32 %conv2, 5, !dbg !4491
  %conv4 = zext i1 %cmp3 to i32, !dbg !4491
  %conv5 = trunc i32 %conv4 to i8, !dbg !4492
  store i8 %conv5, i8* %retval, align 1, !dbg !4493
  br label %return, !dbg !4493

return:                                           ; preds = %if.else, %lor.end
  %11 = load i8, i8* %retval, align 1, !dbg !4494
  ret i8 %11, !dbg !4494
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_array_dimension(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %length) #0 !dbg !4495 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %length.addr = alloca i32*, align 8
  %rprop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4500, metadata !DIExpression()), !dbg !4501
  store i32* %length, i32** %length.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %length.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %rprop, metadata !4504, metadata !DIExpression()), !dbg !4505
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4506
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4507
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %rprop, align 8, !dbg !4505
  %1 = load i32*, i32** %length.addr, align 8, !dbg !4508
  %tobool = icmp ne i32* %1, null, !dbg !4508
  br i1 %tobool, label %if.then, label %if.end, !dbg !4510

if.then:                                          ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4511
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4512
  %4 = load i32*, i32** %length.addr, align 8, !dbg !4513
  call void @rna_ensure_property_multi_array_length(%struct.PointerRNA* %2, %struct.PropertyRNA* %3, i32* %4), !dbg !4514
  br label %if.end, !dbg !4514

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rprop, align 8, !dbg !4515
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %5, i32 0, i32 12, !dbg !4516
  %6 = load i32, i32* %arraydimension, align 8, !dbg !4516
  ret i32 %6, !dbg !4517
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_ensure_property_multi_array_length(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %length) #0 !dbg !4518 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %length.addr = alloca i32*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4521, metadata !DIExpression()), !dbg !4522
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4523, metadata !DIExpression()), !dbg !4524
  store i32* %length, i32** %length.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %length.addr, metadata !4525, metadata !DIExpression()), !dbg !4526
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4527
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !4529
  %1 = load i32, i32* %magic, align 8, !dbg !4529
  %cmp = icmp eq i32 %1, -1, !dbg !4530
  br i1 %cmp, label %if.then, label %if.else3, !dbg !4531

if.then:                                          ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4532
  %getlength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 11, !dbg !4535
  %3 = load i32 (%struct.PointerRNA*, i32*)*, i32 (%struct.PointerRNA*, i32*)** %getlength, align 8, !dbg !4535
  %tobool = icmp ne i32 (%struct.PointerRNA*, i32*)* %3, null, !dbg !4532
  br i1 %tobool, label %if.then1, label %if.else, !dbg !4536

if.then1:                                         ; preds = %if.then
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4537
  %getlength2 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 11, !dbg !4538
  %5 = load i32 (%struct.PointerRNA*, i32*)*, i32 (%struct.PointerRNA*, i32*)** %getlength2, align 8, !dbg !4538
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4539
  %7 = load i32*, i32** %length.addr, align 8, !dbg !4540
  %call = call i32 %5(%struct.PointerRNA* %6, i32* %7), !dbg !4537
  br label %if.end, !dbg !4537

if.else:                                          ; preds = %if.then
  %8 = load i32*, i32** %length.addr, align 8, !dbg !4541
  %9 = bitcast i32* %8 to i8*, !dbg !4542
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4543
  %arraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %10, i32 0, i32 13, !dbg !4544
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %arraylength, i64 0, i64 0, !dbg !4542
  %11 = bitcast i32* %arraydecay to i8*, !dbg !4542
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4545
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %12, i32 0, i32 12, !dbg !4546
  %13 = load i32, i32* %arraydimension, align 8, !dbg !4546
  %conv = zext i32 %13 to i64, !dbg !4545
  %mul = mul i64 %conv, 4, !dbg !4547
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %11, i64 %mul, i1 false), !dbg !4542
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end11, !dbg !4548

if.else3:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !4549, metadata !DIExpression()), !dbg !4551
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4552
  %15 = bitcast %struct.PropertyRNA* %14 to %struct.IDProperty*, !dbg !4553
  store %struct.IDProperty* %15, %struct.IDProperty** %idprop, align 8, !dbg !4551
  %16 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4554
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %16, i32 0, i32 2, !dbg !4556
  %17 = load i8, i8* %type, align 8, !dbg !4556
  %conv4 = zext i8 %17 to i32, !dbg !4554
  %cmp5 = icmp eq i32 %conv4, 5, !dbg !4557
  br i1 %cmp5, label %if.then7, label %if.else8, !dbg !4558

if.then7:                                         ; preds = %if.else3
  %18 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4559
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %18, i32 0, i32 8, !dbg !4560
  %19 = load i32, i32* %len, align 8, !dbg !4560
  %20 = load i32*, i32** %length.addr, align 8, !dbg !4561
  %arrayidx = getelementptr inbounds i32, i32* %20, i64 0, !dbg !4561
  store i32 %19, i32* %arrayidx, align 4, !dbg !4562
  br label %if.end10, !dbg !4561

if.else8:                                         ; preds = %if.else3
  %21 = load i32*, i32** %length.addr, align 8, !dbg !4563
  %arrayidx9 = getelementptr inbounds i32, i32* %21, i64 0, !dbg !4563
  store i32 0, i32* %arrayidx9, align 4, !dbg !4564
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.then7
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  ret void, !dbg !4565
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_multi_array_length(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %dim) #0 !dbg !4566 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %dim.addr = alloca i32, align 4
  %len = alloca [3 x i32], align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4569, metadata !DIExpression()), !dbg !4570
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4571, metadata !DIExpression()), !dbg !4572
  store i32 %dim, i32* %dim.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.addr, metadata !4573, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.declare(metadata [3 x i32]* %len, metadata !4575, metadata !DIExpression()), !dbg !4576
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4577
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4578
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %len, i64 0, i64 0, !dbg !4579
  call void @rna_ensure_property_multi_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1, i32* %arraydecay), !dbg !4580
  %2 = load i32, i32* %dim.addr, align 4, !dbg !4581
  %idxprom = sext i32 %2 to i64, !dbg !4582
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %len, i64 0, i64 %idxprom, !dbg !4582
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4582
  ret i32 %3, !dbg !4583
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_array_item_char(%struct.PropertyRNA* %prop, i32 %index) #0 !dbg !4584 {
entry:
  %retval = alloca i8, align 1
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %vectoritem = alloca i8*, align 8
  %quatitem = alloca i8*, align 8
  %coloritem = alloca i8*, align 8
  %subtype = alloca i32, align 4
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4587, metadata !DIExpression()), !dbg !4588
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4589, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.declare(metadata i8** %vectoritem, metadata !4591, metadata !DIExpression()), !dbg !4592
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %vectoritem, align 8, !dbg !4592
  call void @llvm.dbg.declare(metadata i8** %quatitem, metadata !4593, metadata !DIExpression()), !dbg !4594
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %quatitem, align 8, !dbg !4594
  call void @llvm.dbg.declare(metadata i8** %coloritem, metadata !4595, metadata !DIExpression()), !dbg !4596
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %coloritem, align 8, !dbg !4596
  call void @llvm.dbg.declare(metadata i32* %subtype, metadata !4597, metadata !DIExpression()), !dbg !4598
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4599
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4600
  %subtype1 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %call, i32 0, i32 10, !dbg !4601
  %1 = load i32, i32* %subtype1, align 4, !dbg !4601
  store i32 %1, i32* %subtype, align 4, !dbg !4598
  %2 = load i32, i32* %index.addr, align 4, !dbg !4602
  %cmp = icmp slt i32 %2, 4, !dbg !4604
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4605

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %subtype, align 4, !dbg !4606
  %cmp2 = icmp eq i32 %3, 27, !dbg !4606
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !4606

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load i32, i32* %subtype, align 4, !dbg !4606
  %cmp3 = icmp eq i32 %4, 28, !dbg !4606
  br i1 %cmp3, label %if.then, label %if.else, !dbg !4607

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %5 = load i8*, i8** %quatitem, align 8, !dbg !4608
  %6 = load i32, i32* %index.addr, align 4, !dbg !4610
  %idxprom = sext i32 %6 to i64, !dbg !4608
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !4608
  %7 = load i8, i8* %arrayidx, align 1, !dbg !4608
  store i8 %7, i8* %retval, align 1, !dbg !4611
  br label %return, !dbg !4611

if.else:                                          ; preds = %lor.lhs.false, %entry
  %8 = load i32, i32* %index.addr, align 4, !dbg !4612
  %cmp4 = icmp slt i32 %8, 4, !dbg !4614
  br i1 %cmp4, label %land.lhs.true5, label %if.else24, !dbg !4615

land.lhs.true5:                                   ; preds = %if.else
  %9 = load i32, i32* %subtype, align 4, !dbg !4616
  %cmp6 = icmp eq i32 %9, 65557, !dbg !4616
  br i1 %cmp6, label %if.then21, label %lor.lhs.false7, !dbg !4616

lor.lhs.false7:                                   ; preds = %land.lhs.true5
  %10 = load i32, i32* %subtype, align 4, !dbg !4616
  %cmp8 = icmp eq i32 %10, 22, !dbg !4616
  br i1 %cmp8, label %if.then21, label %lor.lhs.false9, !dbg !4616

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %11 = load i32, i32* %subtype, align 4, !dbg !4616
  %cmp10 = icmp eq i32 %11, 29, !dbg !4616
  br i1 %cmp10, label %if.then21, label %lor.lhs.false11, !dbg !4616

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %12 = load i32, i32* %subtype, align 4, !dbg !4616
  %cmp12 = icmp eq i32 %12, 65565, !dbg !4616
  br i1 %cmp12, label %if.then21, label %lor.lhs.false13, !dbg !4616

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %13 = load i32, i32* %subtype, align 4, !dbg !4616
  %cmp14 = icmp eq i32 %13, 327706, !dbg !4616
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !4616

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %14 = load i32, i32* %subtype, align 4, !dbg !4616
  %cmp16 = icmp eq i32 %14, 458775, !dbg !4616
  br i1 %cmp16, label %if.then21, label %lor.lhs.false17, !dbg !4616

lor.lhs.false17:                                  ; preds = %lor.lhs.false15
  %15 = load i32, i32* %subtype, align 4, !dbg !4616
  %cmp18 = icmp eq i32 %15, 524312, !dbg !4616
  br i1 %cmp18, label %if.then21, label %lor.lhs.false19, !dbg !4616

lor.lhs.false19:                                  ; preds = %lor.lhs.false17
  %16 = load i32, i32* %subtype, align 4, !dbg !4616
  %cmp20 = icmp eq i32 %16, 31, !dbg !4616
  br i1 %cmp20, label %if.then21, label %if.else24, !dbg !4617

if.then21:                                        ; preds = %lor.lhs.false19, %lor.lhs.false17, %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false11, %lor.lhs.false9, %lor.lhs.false7, %land.lhs.true5
  %17 = load i8*, i8** %vectoritem, align 8, !dbg !4618
  %18 = load i32, i32* %index.addr, align 4, !dbg !4620
  %idxprom22 = sext i32 %18 to i64, !dbg !4618
  %arrayidx23 = getelementptr inbounds i8, i8* %17, i64 %idxprom22, !dbg !4618
  %19 = load i8, i8* %arrayidx23, align 1, !dbg !4618
  store i8 %19, i8* %retval, align 1, !dbg !4621
  br label %return, !dbg !4621

if.else24:                                        ; preds = %lor.lhs.false19, %if.else
  %20 = load i32, i32* %index.addr, align 4, !dbg !4622
  %cmp25 = icmp slt i32 %20, 4, !dbg !4624
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !4625

land.lhs.true26:                                  ; preds = %if.else24
  %21 = load i32, i32* %subtype, align 4, !dbg !4626
  %cmp27 = icmp eq i32 %21, 20, !dbg !4626
  br i1 %cmp27, label %if.then30, label %lor.lhs.false28, !dbg !4626

lor.lhs.false28:                                  ; preds = %land.lhs.true26
  %22 = load i32, i32* %subtype, align 4, !dbg !4626
  %cmp29 = icmp eq i32 %22, 30, !dbg !4626
  br i1 %cmp29, label %if.then30, label %if.end, !dbg !4627

if.then30:                                        ; preds = %lor.lhs.false28, %land.lhs.true26
  %23 = load i8*, i8** %coloritem, align 8, !dbg !4628
  %24 = load i32, i32* %index.addr, align 4, !dbg !4630
  %idxprom31 = sext i32 %24 to i64, !dbg !4628
  %arrayidx32 = getelementptr inbounds i8, i8* %23, i64 %idxprom31, !dbg !4628
  %25 = load i8, i8* %arrayidx32, align 1, !dbg !4628
  store i8 %25, i8* %retval, align 1, !dbg !4631
  br label %return, !dbg !4631

if.end:                                           ; preds = %lor.lhs.false28, %if.else24
  br label %if.end33

if.end33:                                         ; preds = %if.end
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  store i8 0, i8* %retval, align 1, !dbg !4632
  br label %return, !dbg !4632

return:                                           ; preds = %if.end34, %if.then30, %if.then21, %if.then
  %26 = load i8, i8* %retval, align 1, !dbg !4633
  ret i8 %26, !dbg !4633
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_array_item_index(%struct.PropertyRNA* %prop, i8 zeroext %name) #0 !dbg !4634 {
entry:
  %retval = alloca i32, align 4
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %name.addr = alloca i8, align 1
  %subtype = alloca i32, align 4
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4637, metadata !DIExpression()), !dbg !4638
  store i8 %name, i8* %name.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %name.addr, metadata !4639, metadata !DIExpression()), !dbg !4640
  call void @llvm.dbg.declare(metadata i32* %subtype, metadata !4641, metadata !DIExpression()), !dbg !4642
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4643
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4644
  %subtype1 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %call, i32 0, i32 10, !dbg !4645
  %1 = load i32, i32* %subtype1, align 4, !dbg !4645
  store i32 %1, i32* %subtype, align 4, !dbg !4642
  %2 = load i32, i32* %subtype, align 4, !dbg !4646
  %cmp = icmp eq i32 %2, 27, !dbg !4646
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4646

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %subtype, align 4, !dbg !4646
  %cmp2 = icmp eq i32 %3, 28, !dbg !4646
  br i1 %cmp2, label %if.then, label %if.else, !dbg !4648

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i8, i8* %name.addr, align 1, !dbg !4649
  %conv = zext i8 %4 to i32, !dbg !4649
  switch i32 %conv, label %sw.epilog [
    i32 119, label %sw.bb
    i32 120, label %sw.bb3
    i32 121, label %sw.bb4
    i32 122, label %sw.bb5
  ], !dbg !4651

sw.bb:                                            ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !4652
  br label %return, !dbg !4652

sw.bb3:                                           ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !4654
  br label %return, !dbg !4654

sw.bb4:                                           ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !4655
  br label %return, !dbg !4655

sw.bb5:                                           ; preds = %if.then
  store i32 3, i32* %retval, align 4, !dbg !4656
  br label %return, !dbg !4656

sw.epilog:                                        ; preds = %if.then
  br label %if.end47, !dbg !4657

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %subtype, align 4, !dbg !4658
  %cmp6 = icmp eq i32 %5, 65557, !dbg !4658
  br i1 %cmp6, label %if.then26, label %lor.lhs.false8, !dbg !4658

lor.lhs.false8:                                   ; preds = %if.else
  %6 = load i32, i32* %subtype, align 4, !dbg !4658
  %cmp9 = icmp eq i32 %6, 22, !dbg !4658
  br i1 %cmp9, label %if.then26, label %lor.lhs.false11, !dbg !4658

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %7 = load i32, i32* %subtype, align 4, !dbg !4658
  %cmp12 = icmp eq i32 %7, 29, !dbg !4658
  br i1 %cmp12, label %if.then26, label %lor.lhs.false14, !dbg !4658

lor.lhs.false14:                                  ; preds = %lor.lhs.false11
  %8 = load i32, i32* %subtype, align 4, !dbg !4658
  %cmp15 = icmp eq i32 %8, 65565, !dbg !4658
  br i1 %cmp15, label %if.then26, label %lor.lhs.false17, !dbg !4658

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %9 = load i32, i32* %subtype, align 4, !dbg !4658
  %cmp18 = icmp eq i32 %9, 327706, !dbg !4658
  br i1 %cmp18, label %if.then26, label %lor.lhs.false20, !dbg !4658

lor.lhs.false20:                                  ; preds = %lor.lhs.false17
  %10 = load i32, i32* %subtype, align 4, !dbg !4658
  %cmp21 = icmp eq i32 %10, 458775, !dbg !4658
  br i1 %cmp21, label %if.then26, label %lor.lhs.false23, !dbg !4658

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %11 = load i32, i32* %subtype, align 4, !dbg !4658
  %cmp24 = icmp eq i32 %11, 524312, !dbg !4658
  br i1 %cmp24, label %if.then26, label %if.else33, !dbg !4660

if.then26:                                        ; preds = %lor.lhs.false23, %lor.lhs.false20, %lor.lhs.false17, %lor.lhs.false14, %lor.lhs.false11, %lor.lhs.false8, %if.else
  %12 = load i8, i8* %name.addr, align 1, !dbg !4661
  %conv27 = zext i8 %12 to i32, !dbg !4661
  switch i32 %conv27, label %sw.epilog32 [
    i32 120, label %sw.bb28
    i32 121, label %sw.bb29
    i32 122, label %sw.bb30
    i32 119, label %sw.bb31
  ], !dbg !4663

sw.bb28:                                          ; preds = %if.then26
  store i32 0, i32* %retval, align 4, !dbg !4664
  br label %return, !dbg !4664

sw.bb29:                                          ; preds = %if.then26
  store i32 1, i32* %retval, align 4, !dbg !4666
  br label %return, !dbg !4666

sw.bb30:                                          ; preds = %if.then26
  store i32 2, i32* %retval, align 4, !dbg !4667
  br label %return, !dbg !4667

sw.bb31:                                          ; preds = %if.then26
  store i32 3, i32* %retval, align 4, !dbg !4668
  br label %return, !dbg !4668

sw.epilog32:                                      ; preds = %if.then26
  br label %if.end46, !dbg !4669

if.else33:                                        ; preds = %lor.lhs.false23
  %13 = load i32, i32* %subtype, align 4, !dbg !4670
  %cmp34 = icmp eq i32 %13, 20, !dbg !4670
  br i1 %cmp34, label %if.then39, label %lor.lhs.false36, !dbg !4670

lor.lhs.false36:                                  ; preds = %if.else33
  %14 = load i32, i32* %subtype, align 4, !dbg !4670
  %cmp37 = icmp eq i32 %14, 30, !dbg !4670
  br i1 %cmp37, label %if.then39, label %if.end, !dbg !4672

if.then39:                                        ; preds = %lor.lhs.false36, %if.else33
  %15 = load i8, i8* %name.addr, align 1, !dbg !4673
  %conv40 = zext i8 %15 to i32, !dbg !4673
  switch i32 %conv40, label %sw.epilog45 [
    i32 114, label %sw.bb41
    i32 103, label %sw.bb42
    i32 98, label %sw.bb43
    i32 97, label %sw.bb44
  ], !dbg !4675

sw.bb41:                                          ; preds = %if.then39
  store i32 0, i32* %retval, align 4, !dbg !4676
  br label %return, !dbg !4676

sw.bb42:                                          ; preds = %if.then39
  store i32 1, i32* %retval, align 4, !dbg !4678
  br label %return, !dbg !4678

sw.bb43:                                          ; preds = %if.then39
  store i32 2, i32* %retval, align 4, !dbg !4679
  br label %return, !dbg !4679

sw.bb44:                                          ; preds = %if.then39
  store i32 3, i32* %retval, align 4, !dbg !4680
  br label %return, !dbg !4680

sw.epilog45:                                      ; preds = %if.then39
  br label %if.end, !dbg !4681

if.end:                                           ; preds = %sw.epilog45, %lor.lhs.false36
  br label %if.end46

if.end46:                                         ; preds = %if.end, %sw.epilog32
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %sw.epilog
  store i32 -1, i32* %retval, align 4, !dbg !4682
  br label %return, !dbg !4682

return:                                           ; preds = %if.end47, %sw.bb44, %sw.bb43, %sw.bb42, %sw.bb41, %sw.bb31, %sw.bb30, %sw.bb29, %sw.bb28, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb
  %16 = load i32, i32* %retval, align 4, !dbg !4683
  ret i32 %16, !dbg !4683
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_int_range(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %hardmin, i32* %hardmax) #0 !dbg !4684 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %hardmin.addr = alloca i32*, align 8
  %hardmax.addr = alloca i32*, align 8
  %iprop = alloca %struct.IntPropertyRNA*, align 8
  %softmin = alloca i32, align 4
  %softmax = alloca i32, align 4
  %idp_ui = alloca %struct.IDProperty*, align 8
  %item = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4687, metadata !DIExpression()), !dbg !4688
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4689, metadata !DIExpression()), !dbg !4690
  store i32* %hardmin, i32** %hardmin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %hardmin.addr, metadata !4691, metadata !DIExpression()), !dbg !4692
  store i32* %hardmax, i32** %hardmax.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %hardmax.addr, metadata !4693, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.declare(metadata %struct.IntPropertyRNA** %iprop, metadata !4695, metadata !DIExpression()), !dbg !4696
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4697
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4698
  %1 = bitcast %struct.PropertyRNA* %call to %struct.IntPropertyRNA*, !dbg !4699
  store %struct.IntPropertyRNA* %1, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4696
  call void @llvm.dbg.declare(metadata i32* %softmin, metadata !4700, metadata !DIExpression()), !dbg !4701
  call void @llvm.dbg.declare(metadata i32* %softmax, metadata !4702, metadata !DIExpression()), !dbg !4703
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4704
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 2, !dbg !4706
  %3 = load i32, i32* %magic, align 8, !dbg !4706
  %cmp = icmp ne i32 %3, -1, !dbg !4707
  br i1 %cmp, label %if.then, label %if.end13, !dbg !4708

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idp_ui, metadata !4709, metadata !DIExpression()), !dbg !4711
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4712
  %call1 = call %struct.IDProperty* @rna_idproperty_ui(%struct.PropertyRNA* %4), !dbg !4713
  store %struct.IDProperty* %call1, %struct.IDProperty** %idp_ui, align 8, !dbg !4711
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4714
  %tobool = icmp ne %struct.IDProperty* %5, null, !dbg !4714
  br i1 %tobool, label %if.then2, label %if.end, !dbg !4716

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %item, metadata !4717, metadata !DIExpression()), !dbg !4719
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4720
  %call3 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8 zeroext 1), !dbg !4721
  store %struct.IDProperty* %call3, %struct.IDProperty** %item, align 8, !dbg !4722
  %7 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4723
  %tobool4 = icmp ne %struct.IDProperty* %7, null, !dbg !4723
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4723

cond.true:                                        ; preds = %if.then2
  %8 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4724
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 7, !dbg !4724
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !4724
  %9 = load i32, i32* %val, align 8, !dbg !4724
  br label %cond.end, !dbg !4723

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !4723

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ -2147483648, %cond.false ], !dbg !4723
  %10 = load i32*, i32** %hardmin.addr, align 8, !dbg !4725
  store i32 %cond, i32* %10, align 4, !dbg !4726
  %11 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4727
  %call5 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8 zeroext 1), !dbg !4728
  store %struct.IDProperty* %call5, %struct.IDProperty** %item, align 8, !dbg !4729
  %12 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4730
  %tobool6 = icmp ne %struct.IDProperty* %12, null, !dbg !4730
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !4730

cond.true7:                                       ; preds = %cond.end
  %13 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4731
  %data8 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %13, i32 0, i32 7, !dbg !4731
  %val9 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data8, i32 0, i32 2, !dbg !4731
  %14 = load i32, i32* %val9, align 8, !dbg !4731
  br label %cond.end11, !dbg !4730

cond.false10:                                     ; preds = %cond.end
  br label %cond.end11, !dbg !4730

cond.end11:                                       ; preds = %cond.false10, %cond.true7
  %cond12 = phi i32 [ %14, %cond.true7 ], [ 2147483647, %cond.false10 ], !dbg !4730
  %15 = load i32*, i32** %hardmax.addr, align 8, !dbg !4732
  store i32 %cond12, i32* %15, align 4, !dbg !4733
  br label %if.end24, !dbg !4734

if.end:                                           ; preds = %if.then
  br label %if.end13, !dbg !4735

if.end13:                                         ; preds = %if.end, %entry
  %16 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4736
  %range = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %16, i32 0, i32 5, !dbg !4738
  %17 = load void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)*, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)** %range, align 8, !dbg !4738
  %tobool14 = icmp ne void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)* %17, null, !dbg !4736
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !4739

if.then15:                                        ; preds = %if.end13
  %18 = load i32*, i32** %hardmin.addr, align 8, !dbg !4740
  store i32 -2147483648, i32* %18, align 4, !dbg !4742
  %19 = load i32*, i32** %hardmax.addr, align 8, !dbg !4743
  store i32 2147483647, i32* %19, align 4, !dbg !4744
  %20 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4745
  %range16 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %20, i32 0, i32 5, !dbg !4746
  %21 = load void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)*, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)** %range16, align 8, !dbg !4746
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4747
  %23 = load i32*, i32** %hardmin.addr, align 8, !dbg !4748
  %24 = load i32*, i32** %hardmax.addr, align 8, !dbg !4749
  call void %21(%struct.PointerRNA* %22, i32* %23, i32* %24, i32* %softmin, i32* %softmax), !dbg !4745
  br label %if.end24, !dbg !4750

if.else:                                          ; preds = %if.end13
  %25 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4751
  %range_ex = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %25, i32 0, i32 10, !dbg !4753
  %26 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)** %range_ex, align 8, !dbg !4753
  %tobool17 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)* %26, null, !dbg !4751
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !4754

if.then18:                                        ; preds = %if.else
  %27 = load i32*, i32** %hardmin.addr, align 8, !dbg !4755
  store i32 -2147483648, i32* %27, align 4, !dbg !4757
  %28 = load i32*, i32** %hardmax.addr, align 8, !dbg !4758
  store i32 2147483647, i32* %28, align 4, !dbg !4759
  %29 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4760
  %range_ex19 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %29, i32 0, i32 10, !dbg !4761
  %30 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)** %range_ex19, align 8, !dbg !4761
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4762
  %32 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4763
  %33 = load i32*, i32** %hardmin.addr, align 8, !dbg !4764
  %34 = load i32*, i32** %hardmax.addr, align 8, !dbg !4765
  call void %30(%struct.PointerRNA* %31, %struct.PropertyRNA* %32, i32* %33, i32* %34, i32* %softmin, i32* %softmax), !dbg !4760
  br label %if.end23, !dbg !4766

if.else20:                                        ; preds = %if.else
  %35 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4767
  %hardmin21 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %35, i32 0, i32 13, !dbg !4769
  %36 = load i32, i32* %hardmin21, align 8, !dbg !4769
  %37 = load i32*, i32** %hardmin.addr, align 8, !dbg !4770
  store i32 %36, i32* %37, align 4, !dbg !4771
  %38 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4772
  %hardmax22 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %38, i32 0, i32 14, !dbg !4773
  %39 = load i32, i32* %hardmax22, align 4, !dbg !4773
  %40 = load i32*, i32** %hardmax.addr, align 8, !dbg !4774
  store i32 %39, i32* %40, align 4, !dbg !4775
  br label %if.end23

if.end23:                                         ; preds = %if.else20, %if.then18
  br label %if.end24

if.end24:                                         ; preds = %cond.end11, %if.end23, %if.then15
  ret void, !dbg !4776
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.IDProperty* @rna_idproperty_ui(%struct.PropertyRNA* %prop) #0 !dbg !4777 {
entry:
  %retval = alloca %struct.IDProperty*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4780, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !4782, metadata !DIExpression()), !dbg !4783
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4784
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.IDProperty*, !dbg !4786
  %prev = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %1, i32 0, i32 1, !dbg !4786
  %2 = load %struct.IDProperty*, %struct.IDProperty** %prev, align 8, !dbg !4786
  store %struct.IDProperty* %2, %struct.IDProperty** %idprop, align 8, !dbg !4787
  br label %for.cond, !dbg !4788

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4789
  %tobool = icmp ne %struct.IDProperty* %3, null, !dbg !4791
  br i1 %tobool, label %for.body, label %for.end, !dbg !4791

for.body:                                         ; preds = %for.cond
  %4 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4792
  %name = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %4, i32 0, i32 5, !dbg !4795
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4792
  %call = call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %arraydecay) #7, !dbg !4796
  %cmp = icmp eq i32 %call, 0, !dbg !4797
  br i1 %cmp, label %if.then, label %if.end, !dbg !4798

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4799

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4800

for.inc:                                          ; preds = %if.end
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4801
  %prev1 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 1, !dbg !4802
  %6 = load %struct.IDProperty*, %struct.IDProperty** %prev1, align 8, !dbg !4802
  store %struct.IDProperty* %6, %struct.IDProperty** %idprop, align 8, !dbg !4803
  br label %for.cond, !dbg !4804, !llvm.loop !4805

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4807
  %cmp2 = icmp eq %struct.IDProperty* %7, null, !dbg !4809
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !4810

if.then3:                                         ; preds = %for.end
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4811
  %9 = bitcast %struct.PropertyRNA* %8 to %struct.IDProperty*, !dbg !4814
  %next = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %9, i32 0, i32 0, !dbg !4814
  %10 = load %struct.IDProperty*, %struct.IDProperty** %next, align 8, !dbg !4814
  store %struct.IDProperty* %10, %struct.IDProperty** %idprop, align 8, !dbg !4815
  br label %for.cond4, !dbg !4816

for.cond4:                                        ; preds = %for.inc13, %if.then3
  %11 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4817
  %tobool5 = icmp ne %struct.IDProperty* %11, null, !dbg !4819
  br i1 %tobool5, label %for.body6, label %for.end15, !dbg !4819

for.body6:                                        ; preds = %for.cond4
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4820
  %name7 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 5, !dbg !4823
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %name7, i64 0, i64 0, !dbg !4820
  %call9 = call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0), i8* %arraydecay8) #7, !dbg !4824
  %cmp10 = icmp eq i32 %call9, 0, !dbg !4825
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4826

if.then11:                                        ; preds = %for.body6
  br label %for.end15, !dbg !4827

if.end12:                                         ; preds = %for.body6
  br label %for.inc13, !dbg !4828

for.inc13:                                        ; preds = %if.end12
  %13 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4829
  %next14 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %13, i32 0, i32 0, !dbg !4830
  %14 = load %struct.IDProperty*, %struct.IDProperty** %next14, align 8, !dbg !4830
  store %struct.IDProperty* %14, %struct.IDProperty** %idprop, align 8, !dbg !4831
  br label %for.cond4, !dbg !4832, !llvm.loop !4833

for.end15:                                        ; preds = %if.then11, %for.cond4
  br label %if.end16, !dbg !4835

if.end16:                                         ; preds = %for.end15, %for.end
  %15 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4836
  %tobool17 = icmp ne %struct.IDProperty* %15, null, !dbg !4836
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !4838

if.then18:                                        ; preds = %if.end16
  %16 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !4839
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4841
  %18 = bitcast %struct.PropertyRNA* %17 to %struct.IDProperty*, !dbg !4842
  %name19 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %18, i32 0, i32 5, !dbg !4842
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %name19, i64 0, i64 0, !dbg !4843
  %call21 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %16, i8* %arraydecay20, i8 zeroext 6), !dbg !4844
  store %struct.IDProperty* %call21, %struct.IDProperty** %retval, align 8, !dbg !4845
  br label %return, !dbg !4845

if.end22:                                         ; preds = %if.end16
  store %struct.IDProperty* null, %struct.IDProperty** %retval, align 8, !dbg !4846
  br label %return, !dbg !4846

return:                                           ; preds = %if.end22, %if.then18
  %19 = load %struct.IDProperty*, %struct.IDProperty** %retval, align 8, !dbg !4847
  ret %struct.IDProperty* %19, !dbg !4847
}

declare dso_local %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty*, i8*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_int_ui_range(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %softmin, i32* %softmax, i32* %step) #0 !dbg !4848 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %softmin.addr = alloca i32*, align 8
  %softmax.addr = alloca i32*, align 8
  %step.addr = alloca i32*, align 8
  %iprop = alloca %struct.IntPropertyRNA*, align 8
  %hardmin = alloca i32, align 4
  %hardmax = alloca i32, align 4
  %idp_ui = alloca %struct.IDProperty*, align 8
  %item = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4851, metadata !DIExpression()), !dbg !4852
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4853, metadata !DIExpression()), !dbg !4854
  store i32* %softmin, i32** %softmin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %softmin.addr, metadata !4855, metadata !DIExpression()), !dbg !4856
  store i32* %softmax, i32** %softmax.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %softmax.addr, metadata !4857, metadata !DIExpression()), !dbg !4858
  store i32* %step, i32** %step.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %step.addr, metadata !4859, metadata !DIExpression()), !dbg !4860
  call void @llvm.dbg.declare(metadata %struct.IntPropertyRNA** %iprop, metadata !4861, metadata !DIExpression()), !dbg !4862
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4863
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !4864
  %1 = bitcast %struct.PropertyRNA* %call to %struct.IntPropertyRNA*, !dbg !4865
  store %struct.IntPropertyRNA* %1, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4862
  call void @llvm.dbg.declare(metadata i32* %hardmin, metadata !4866, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.declare(metadata i32* %hardmax, metadata !4868, metadata !DIExpression()), !dbg !4869
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4870
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 2, !dbg !4872
  %3 = load i32, i32* %magic, align 8, !dbg !4872
  %cmp = icmp ne i32 %3, -1, !dbg !4873
  br i1 %cmp, label %if.then, label %if.end21, !dbg !4874

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idp_ui, metadata !4875, metadata !DIExpression()), !dbg !4877
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4878
  %call1 = call %struct.IDProperty* @rna_idproperty_ui(%struct.PropertyRNA* %4), !dbg !4879
  store %struct.IDProperty* %call1, %struct.IDProperty** %idp_ui, align 8, !dbg !4877
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4880
  %tobool = icmp ne %struct.IDProperty* %5, null, !dbg !4880
  br i1 %tobool, label %if.then2, label %if.end, !dbg !4882

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %item, metadata !4883, metadata !DIExpression()), !dbg !4885
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4886
  %call3 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8 zeroext 1), !dbg !4887
  store %struct.IDProperty* %call3, %struct.IDProperty** %item, align 8, !dbg !4888
  %7 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4889
  %tobool4 = icmp ne %struct.IDProperty* %7, null, !dbg !4889
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4889

cond.true:                                        ; preds = %if.then2
  %8 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4890
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 7, !dbg !4890
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !4890
  %9 = load i32, i32* %val, align 8, !dbg !4890
  br label %cond.end, !dbg !4889

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !4889

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ -2147483648, %cond.false ], !dbg !4889
  %10 = load i32*, i32** %softmin.addr, align 8, !dbg !4891
  store i32 %cond, i32* %10, align 4, !dbg !4892
  %11 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4893
  %call5 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8 zeroext 1), !dbg !4894
  store %struct.IDProperty* %call5, %struct.IDProperty** %item, align 8, !dbg !4895
  %12 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4896
  %tobool6 = icmp ne %struct.IDProperty* %12, null, !dbg !4896
  br i1 %tobool6, label %cond.true7, label %cond.false10, !dbg !4896

cond.true7:                                       ; preds = %cond.end
  %13 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4897
  %data8 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %13, i32 0, i32 7, !dbg !4897
  %val9 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data8, i32 0, i32 2, !dbg !4897
  %14 = load i32, i32* %val9, align 8, !dbg !4897
  br label %cond.end11, !dbg !4896

cond.false10:                                     ; preds = %cond.end
  br label %cond.end11, !dbg !4896

cond.end11:                                       ; preds = %cond.false10, %cond.true7
  %cond12 = phi i32 [ %14, %cond.true7 ], [ 2147483647, %cond.false10 ], !dbg !4896
  %15 = load i32*, i32** %softmax.addr, align 8, !dbg !4898
  store i32 %cond12, i32* %15, align 4, !dbg !4899
  %16 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !4900
  %call13 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8 zeroext 1), !dbg !4901
  store %struct.IDProperty* %call13, %struct.IDProperty** %item, align 8, !dbg !4902
  %17 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4903
  %tobool14 = icmp ne %struct.IDProperty* %17, null, !dbg !4903
  br i1 %tobool14, label %cond.true15, label %cond.false18, !dbg !4903

cond.true15:                                      ; preds = %cond.end11
  %18 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !4904
  %data16 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %18, i32 0, i32 7, !dbg !4904
  %val17 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data16, i32 0, i32 2, !dbg !4904
  %19 = load i32, i32* %val17, align 8, !dbg !4904
  br label %cond.end19, !dbg !4903

cond.false18:                                     ; preds = %cond.end11
  br label %cond.end19, !dbg !4903

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i32 [ %19, %cond.true15 ], [ 1, %cond.false18 ], !dbg !4903
  %20 = load i32*, i32** %step.addr, align 8, !dbg !4905
  store i32 %cond20, i32* %20, align 4, !dbg !4906
  br label %return, !dbg !4907

if.end:                                           ; preds = %if.then
  br label %if.end21, !dbg !4908

if.end21:                                         ; preds = %if.end, %entry
  %21 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4909
  %softmin22 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %21, i32 0, i32 11, !dbg !4910
  %22 = load i32, i32* %softmin22, align 8, !dbg !4910
  %23 = load i32*, i32** %softmin.addr, align 8, !dbg !4911
  store i32 %22, i32* %23, align 4, !dbg !4912
  %24 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4913
  %softmax23 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %24, i32 0, i32 12, !dbg !4914
  %25 = load i32, i32* %softmax23, align 4, !dbg !4914
  %26 = load i32*, i32** %softmax.addr, align 8, !dbg !4915
  store i32 %25, i32* %26, align 4, !dbg !4916
  %27 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4917
  %range = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %27, i32 0, i32 5, !dbg !4919
  %28 = load void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)*, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)** %range, align 8, !dbg !4919
  %tobool24 = icmp ne void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)* %28, null, !dbg !4917
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !4920

if.then25:                                        ; preds = %if.end21
  store i32 -2147483648, i32* %hardmin, align 4, !dbg !4921
  store i32 2147483647, i32* %hardmax, align 4, !dbg !4923
  %29 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4924
  %range26 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %29, i32 0, i32 5, !dbg !4925
  %30 = load void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)*, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)** %range26, align 8, !dbg !4925
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4926
  %32 = load i32*, i32** %softmin.addr, align 8, !dbg !4927
  %33 = load i32*, i32** %softmax.addr, align 8, !dbg !4928
  call void %30(%struct.PointerRNA* %31, i32* %hardmin, i32* %hardmax, i32* %32, i32* %33), !dbg !4924
  %34 = load i32*, i32** %softmin.addr, align 8, !dbg !4929
  %35 = load i32, i32* %34, align 4, !dbg !4930
  %36 = load i32, i32* %hardmin, align 4, !dbg !4931
  %call27 = call i32 @max_ii(i32 %35, i32 %36), !dbg !4932
  %37 = load i32*, i32** %softmin.addr, align 8, !dbg !4933
  store i32 %call27, i32* %37, align 4, !dbg !4934
  %38 = load i32*, i32** %softmax.addr, align 8, !dbg !4935
  %39 = load i32, i32* %38, align 4, !dbg !4936
  %40 = load i32, i32* %hardmax, align 4, !dbg !4937
  %call28 = call i32 @min_ii(i32 %39, i32 %40), !dbg !4938
  %41 = load i32*, i32** %softmax.addr, align 8, !dbg !4939
  store i32 %call28, i32* %41, align 4, !dbg !4940
  br label %if.end35, !dbg !4941

if.else:                                          ; preds = %if.end21
  %42 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4942
  %range_ex = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %42, i32 0, i32 10, !dbg !4944
  %43 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)** %range_ex, align 8, !dbg !4944
  %tobool29 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)* %43, null, !dbg !4942
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !4945

if.then30:                                        ; preds = %if.else
  store i32 -2147483648, i32* %hardmin, align 4, !dbg !4946
  store i32 2147483647, i32* %hardmax, align 4, !dbg !4948
  %44 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4949
  %range_ex31 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %44, i32 0, i32 10, !dbg !4950
  %45 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)** %range_ex31, align 8, !dbg !4950
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4951
  %47 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4952
  %48 = load i32*, i32** %softmin.addr, align 8, !dbg !4953
  %49 = load i32*, i32** %softmax.addr, align 8, !dbg !4954
  call void %45(%struct.PointerRNA* %46, %struct.PropertyRNA* %47, i32* %hardmin, i32* %hardmax, i32* %48, i32* %49), !dbg !4949
  %50 = load i32*, i32** %softmin.addr, align 8, !dbg !4955
  %51 = load i32, i32* %50, align 4, !dbg !4956
  %52 = load i32, i32* %hardmin, align 4, !dbg !4957
  %call32 = call i32 @max_ii(i32 %51, i32 %52), !dbg !4958
  %53 = load i32*, i32** %softmin.addr, align 8, !dbg !4959
  store i32 %call32, i32* %53, align 4, !dbg !4960
  %54 = load i32*, i32** %softmax.addr, align 8, !dbg !4961
  %55 = load i32, i32* %54, align 4, !dbg !4962
  %56 = load i32, i32* %hardmax, align 4, !dbg !4963
  %call33 = call i32 @min_ii(i32 %55, i32 %56), !dbg !4964
  %57 = load i32*, i32** %softmax.addr, align 8, !dbg !4965
  store i32 %call33, i32* %57, align 4, !dbg !4966
  br label %if.end34, !dbg !4967

if.end34:                                         ; preds = %if.then30, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then25
  %58 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !4968
  %step36 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %58, i32 0, i32 15, !dbg !4969
  %59 = load i32, i32* %step36, align 8, !dbg !4969
  %60 = load i32*, i32** %step.addr, align 8, !dbg !4970
  store i32 %59, i32* %60, align 4, !dbg !4971
  br label %return, !dbg !4972

return:                                           ; preds = %if.end35, %cond.end19
  ret void, !dbg !4972
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !4973 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !4979, metadata !DIExpression()), !dbg !4980
  %0 = load i32, i32* %b.addr, align 4, !dbg !4981
  %1 = load i32, i32* %a.addr, align 4, !dbg !4982
  %cmp = icmp slt i32 %0, %1, !dbg !4983
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4984

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !4985
  br label %cond.end, !dbg !4984

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !4986
  br label %cond.end, !dbg !4984

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4984
  ret i32 %cond, !dbg !4987
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !4988 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !4989, metadata !DIExpression()), !dbg !4990
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !4991, metadata !DIExpression()), !dbg !4992
  %0 = load i32, i32* %a.addr, align 4, !dbg !4993
  %1 = load i32, i32* %b.addr, align 4, !dbg !4994
  %cmp = icmp slt i32 %0, %1, !dbg !4995
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4996

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !4997
  br label %cond.end, !dbg !4996

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !4998
  br label %cond.end, !dbg !4996

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4996
  ret i32 %cond, !dbg !4999
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_float_range(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, float* %hardmin, float* %hardmax) #0 !dbg !5000 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %hardmin.addr = alloca float*, align 8
  %hardmax.addr = alloca float*, align 8
  %fprop = alloca %struct.FloatPropertyRNA*, align 8
  %softmin = alloca float, align 4
  %softmax = alloca float, align 4
  %idp_ui = alloca %struct.IDProperty*, align 8
  %item = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5003, metadata !DIExpression()), !dbg !5004
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5005, metadata !DIExpression()), !dbg !5006
  store float* %hardmin, float** %hardmin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hardmin.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  store float* %hardmax, float** %hardmax.addr, align 8
  call void @llvm.dbg.declare(metadata float** %hardmax.addr, metadata !5009, metadata !DIExpression()), !dbg !5010
  call void @llvm.dbg.declare(metadata %struct.FloatPropertyRNA** %fprop, metadata !5011, metadata !DIExpression()), !dbg !5012
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5013
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !5014
  %1 = bitcast %struct.PropertyRNA* %call to %struct.FloatPropertyRNA*, !dbg !5015
  store %struct.FloatPropertyRNA* %1, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5012
  call void @llvm.dbg.declare(metadata float* %softmin, metadata !5016, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.declare(metadata float* %softmax, metadata !5018, metadata !DIExpression()), !dbg !5019
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5020
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 2, !dbg !5022
  %3 = load i32, i32* %magic, align 8, !dbg !5022
  %cmp = icmp ne i32 %3, -1, !dbg !5023
  br i1 %cmp, label %if.then, label %if.end14, !dbg !5024

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idp_ui, metadata !5025, metadata !DIExpression()), !dbg !5027
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5028
  %call1 = call %struct.IDProperty* @rna_idproperty_ui(%struct.PropertyRNA* %4), !dbg !5029
  store %struct.IDProperty* %call1, %struct.IDProperty** %idp_ui, align 8, !dbg !5027
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !5030
  %tobool = icmp ne %struct.IDProperty* %5, null, !dbg !5030
  br i1 %tobool, label %if.then2, label %if.end, !dbg !5032

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %item, metadata !5033, metadata !DIExpression()), !dbg !5035
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !5036
  %call3 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8 zeroext 8), !dbg !5037
  store %struct.IDProperty* %call3, %struct.IDProperty** %item, align 8, !dbg !5038
  %7 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5039
  %tobool4 = icmp ne %struct.IDProperty* %7, null, !dbg !5039
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !5039

cond.true:                                        ; preds = %if.then2
  %8 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5040
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 7, !dbg !5040
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !5040
  %9 = bitcast i32* %val to double*, !dbg !5040
  %10 = load double, double* %9, align 8, !dbg !5040
  %conv = fptrunc double %10 to float, !dbg !5041
  br label %cond.end, !dbg !5039

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !5039

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %conv, %cond.true ], [ 0xC7EFFFFFE0000000, %cond.false ], !dbg !5039
  %11 = load float*, float** %hardmin.addr, align 8, !dbg !5042
  store float %cond, float* %11, align 4, !dbg !5043
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !5044
  %call5 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8 zeroext 8), !dbg !5045
  store %struct.IDProperty* %call5, %struct.IDProperty** %item, align 8, !dbg !5046
  %13 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5047
  %tobool6 = icmp ne %struct.IDProperty* %13, null, !dbg !5047
  br i1 %tobool6, label %cond.true7, label %cond.false11, !dbg !5047

cond.true7:                                       ; preds = %cond.end
  %14 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5048
  %data8 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %14, i32 0, i32 7, !dbg !5048
  %val9 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data8, i32 0, i32 2, !dbg !5048
  %15 = bitcast i32* %val9 to double*, !dbg !5048
  %16 = load double, double* %15, align 8, !dbg !5048
  %conv10 = fptrunc double %16 to float, !dbg !5049
  br label %cond.end12, !dbg !5047

cond.false11:                                     ; preds = %cond.end
  br label %cond.end12, !dbg !5047

cond.end12:                                       ; preds = %cond.false11, %cond.true7
  %cond13 = phi float [ %conv10, %cond.true7 ], [ 0x47EFFFFFE0000000, %cond.false11 ], !dbg !5047
  %17 = load float*, float** %hardmax.addr, align 8, !dbg !5050
  store float %cond13, float* %17, align 4, !dbg !5051
  br label %if.end25, !dbg !5052

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !5053

if.end14:                                         ; preds = %if.end, %entry
  %18 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5054
  %range = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %18, i32 0, i32 5, !dbg !5056
  %19 = load void (%struct.PointerRNA*, float*, float*, float*, float*)*, void (%struct.PointerRNA*, float*, float*, float*, float*)** %range, align 8, !dbg !5056
  %tobool15 = icmp ne void (%struct.PointerRNA*, float*, float*, float*, float*)* %19, null, !dbg !5054
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !5057

if.then16:                                        ; preds = %if.end14
  %20 = load float*, float** %hardmin.addr, align 8, !dbg !5058
  store float 0xC7EFFFFFE0000000, float* %20, align 4, !dbg !5060
  %21 = load float*, float** %hardmax.addr, align 8, !dbg !5061
  store float 0x47EFFFFFE0000000, float* %21, align 4, !dbg !5062
  %22 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5063
  %range17 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %22, i32 0, i32 5, !dbg !5064
  %23 = load void (%struct.PointerRNA*, float*, float*, float*, float*)*, void (%struct.PointerRNA*, float*, float*, float*, float*)** %range17, align 8, !dbg !5064
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5065
  %25 = load float*, float** %hardmin.addr, align 8, !dbg !5066
  %26 = load float*, float** %hardmax.addr, align 8, !dbg !5067
  call void %23(%struct.PointerRNA* %24, float* %25, float* %26, float* %softmin, float* %softmax), !dbg !5063
  br label %if.end25, !dbg !5068

if.else:                                          ; preds = %if.end14
  %27 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5069
  %range_ex = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %27, i32 0, i32 10, !dbg !5071
  %28 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)** %range_ex, align 8, !dbg !5071
  %tobool18 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* %28, null, !dbg !5069
  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !5072

if.then19:                                        ; preds = %if.else
  %29 = load float*, float** %hardmin.addr, align 8, !dbg !5073
  store float 0xC7EFFFFFE0000000, float* %29, align 4, !dbg !5075
  %30 = load float*, float** %hardmax.addr, align 8, !dbg !5076
  store float 0x47EFFFFFE0000000, float* %30, align 4, !dbg !5077
  %31 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5078
  %range_ex20 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %31, i32 0, i32 10, !dbg !5079
  %32 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)** %range_ex20, align 8, !dbg !5079
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5080
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5081
  %35 = load float*, float** %hardmin.addr, align 8, !dbg !5082
  %36 = load float*, float** %hardmax.addr, align 8, !dbg !5083
  call void %32(%struct.PointerRNA* %33, %struct.PropertyRNA* %34, float* %35, float* %36, float* %softmin, float* %softmax), !dbg !5078
  br label %if.end24, !dbg !5084

if.else21:                                        ; preds = %if.else
  %37 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5085
  %hardmin22 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %37, i32 0, i32 13, !dbg !5087
  %38 = load float, float* %hardmin22, align 8, !dbg !5087
  %39 = load float*, float** %hardmin.addr, align 8, !dbg !5088
  store float %38, float* %39, align 4, !dbg !5089
  %40 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5090
  %hardmax23 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %40, i32 0, i32 14, !dbg !5091
  %41 = load float, float* %hardmax23, align 4, !dbg !5091
  %42 = load float*, float** %hardmax.addr, align 8, !dbg !5092
  store float %41, float* %42, align 4, !dbg !5093
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.then19
  br label %if.end25

if.end25:                                         ; preds = %cond.end12, %if.end24, %if.then16
  ret void, !dbg !5094
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_float_ui_range(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, float* %softmin, float* %softmax, float* %step, float* %precision) #0 !dbg !5095 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %softmin.addr = alloca float*, align 8
  %softmax.addr = alloca float*, align 8
  %step.addr = alloca float*, align 8
  %precision.addr = alloca float*, align 8
  %fprop = alloca %struct.FloatPropertyRNA*, align 8
  %hardmin = alloca float, align 4
  %hardmax = alloca float, align 4
  %idp_ui = alloca %struct.IDProperty*, align 8
  %item = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5098, metadata !DIExpression()), !dbg !5099
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5100, metadata !DIExpression()), !dbg !5101
  store float* %softmin, float** %softmin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %softmin.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  store float* %softmax, float** %softmax.addr, align 8
  call void @llvm.dbg.declare(metadata float** %softmax.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  store float* %step, float** %step.addr, align 8
  call void @llvm.dbg.declare(metadata float** %step.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  store float* %precision, float** %precision.addr, align 8
  call void @llvm.dbg.declare(metadata float** %precision.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata %struct.FloatPropertyRNA** %fprop, metadata !5110, metadata !DIExpression()), !dbg !5111
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5112
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !5113
  %1 = bitcast %struct.PropertyRNA* %call to %struct.FloatPropertyRNA*, !dbg !5114
  store %struct.FloatPropertyRNA* %1, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5111
  call void @llvm.dbg.declare(metadata float* %hardmin, metadata !5115, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.declare(metadata float* %hardmax, metadata !5117, metadata !DIExpression()), !dbg !5118
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5119
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 2, !dbg !5121
  %3 = load i32, i32* %magic, align 8, !dbg !5121
  %cmp = icmp ne i32 %3, -1, !dbg !5122
  br i1 %cmp, label %if.then, label %if.end32, !dbg !5123

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idp_ui, metadata !5124, metadata !DIExpression()), !dbg !5126
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5127
  %call1 = call %struct.IDProperty* @rna_idproperty_ui(%struct.PropertyRNA* %4), !dbg !5128
  store %struct.IDProperty* %call1, %struct.IDProperty** %idp_ui, align 8, !dbg !5126
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !5129
  %tobool = icmp ne %struct.IDProperty* %5, null, !dbg !5129
  br i1 %tobool, label %if.then2, label %if.end, !dbg !5131

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %item, metadata !5132, metadata !DIExpression()), !dbg !5134
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !5135
  %call3 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8 zeroext 8), !dbg !5136
  store %struct.IDProperty* %call3, %struct.IDProperty** %item, align 8, !dbg !5137
  %7 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5138
  %tobool4 = icmp ne %struct.IDProperty* %7, null, !dbg !5138
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !5138

cond.true:                                        ; preds = %if.then2
  %8 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5139
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 7, !dbg !5139
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !5139
  %9 = bitcast i32* %val to double*, !dbg !5139
  %10 = load double, double* %9, align 8, !dbg !5139
  %conv = fptrunc double %10 to float, !dbg !5140
  br label %cond.end, !dbg !5138

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !5138

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %conv, %cond.true ], [ 0xC7EFFFFFE0000000, %cond.false ], !dbg !5138
  %11 = load float*, float** %softmin.addr, align 8, !dbg !5141
  store float %cond, float* %11, align 4, !dbg !5142
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !5143
  %call5 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8 zeroext 8), !dbg !5144
  store %struct.IDProperty* %call5, %struct.IDProperty** %item, align 8, !dbg !5145
  %13 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5146
  %tobool6 = icmp ne %struct.IDProperty* %13, null, !dbg !5146
  br i1 %tobool6, label %cond.true7, label %cond.false11, !dbg !5146

cond.true7:                                       ; preds = %cond.end
  %14 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5147
  %data8 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %14, i32 0, i32 7, !dbg !5147
  %val9 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data8, i32 0, i32 2, !dbg !5147
  %15 = bitcast i32* %val9 to double*, !dbg !5147
  %16 = load double, double* %15, align 8, !dbg !5147
  %conv10 = fptrunc double %16 to float, !dbg !5148
  br label %cond.end12, !dbg !5146

cond.false11:                                     ; preds = %cond.end
  br label %cond.end12, !dbg !5146

cond.end12:                                       ; preds = %cond.false11, %cond.true7
  %cond13 = phi float [ %conv10, %cond.true7 ], [ 0x47EFFFFFE0000000, %cond.false11 ], !dbg !5146
  %17 = load float*, float** %softmax.addr, align 8, !dbg !5149
  store float %cond13, float* %17, align 4, !dbg !5150
  %18 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !5151
  %call14 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8 zeroext 8), !dbg !5152
  store %struct.IDProperty* %call14, %struct.IDProperty** %item, align 8, !dbg !5153
  %19 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5154
  %tobool15 = icmp ne %struct.IDProperty* %19, null, !dbg !5154
  br i1 %tobool15, label %cond.true16, label %cond.false20, !dbg !5154

cond.true16:                                      ; preds = %cond.end12
  %20 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5155
  %data17 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %20, i32 0, i32 7, !dbg !5155
  %val18 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data17, i32 0, i32 2, !dbg !5155
  %21 = bitcast i32* %val18 to double*, !dbg !5155
  %22 = load double, double* %21, align 8, !dbg !5155
  %conv19 = fptrunc double %22 to float, !dbg !5156
  br label %cond.end21, !dbg !5154

cond.false20:                                     ; preds = %cond.end12
  br label %cond.end21, !dbg !5154

cond.end21:                                       ; preds = %cond.false20, %cond.true16
  %cond22 = phi float [ %conv19, %cond.true16 ], [ 1.000000e+00, %cond.false20 ], !dbg !5154
  %23 = load float*, float** %step.addr, align 8, !dbg !5157
  store float %cond22, float* %23, align 4, !dbg !5158
  %24 = load %struct.IDProperty*, %struct.IDProperty** %idp_ui, align 8, !dbg !5159
  %call23 = call %struct.IDProperty* @IDP_GetPropertyTypeFromGroup(%struct.IDProperty* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8 zeroext 8), !dbg !5160
  store %struct.IDProperty* %call23, %struct.IDProperty** %item, align 8, !dbg !5161
  %25 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5162
  %tobool24 = icmp ne %struct.IDProperty* %25, null, !dbg !5162
  br i1 %tobool24, label %cond.true25, label %cond.false29, !dbg !5162

cond.true25:                                      ; preds = %cond.end21
  %26 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !5163
  %data26 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %26, i32 0, i32 7, !dbg !5163
  %val27 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data26, i32 0, i32 2, !dbg !5163
  %27 = bitcast i32* %val27 to double*, !dbg !5163
  %28 = load double, double* %27, align 8, !dbg !5163
  %conv28 = fptrunc double %28 to float, !dbg !5164
  br label %cond.end30, !dbg !5162

cond.false29:                                     ; preds = %cond.end21
  br label %cond.end30, !dbg !5162

cond.end30:                                       ; preds = %cond.false29, %cond.true25
  %cond31 = phi float [ %conv28, %cond.true25 ], [ 3.000000e+00, %cond.false29 ], !dbg !5162
  %29 = load float*, float** %precision.addr, align 8, !dbg !5165
  store float %cond31, float* %29, align 4, !dbg !5166
  br label %return, !dbg !5167

if.end:                                           ; preds = %if.then
  br label %if.end32, !dbg !5168

if.end32:                                         ; preds = %if.end, %entry
  %30 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5169
  %softmin33 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %30, i32 0, i32 11, !dbg !5170
  %31 = load float, float* %softmin33, align 8, !dbg !5170
  %32 = load float*, float** %softmin.addr, align 8, !dbg !5171
  store float %31, float* %32, align 4, !dbg !5172
  %33 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5173
  %softmax34 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %33, i32 0, i32 12, !dbg !5174
  %34 = load float, float* %softmax34, align 4, !dbg !5174
  %35 = load float*, float** %softmax.addr, align 8, !dbg !5175
  store float %34, float* %35, align 4, !dbg !5176
  %36 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5177
  %range = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %36, i32 0, i32 5, !dbg !5179
  %37 = load void (%struct.PointerRNA*, float*, float*, float*, float*)*, void (%struct.PointerRNA*, float*, float*, float*, float*)** %range, align 8, !dbg !5179
  %tobool35 = icmp ne void (%struct.PointerRNA*, float*, float*, float*, float*)* %37, null, !dbg !5177
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !5180

if.then36:                                        ; preds = %if.end32
  store float 0xC7EFFFFFE0000000, float* %hardmin, align 4, !dbg !5181
  store float 0x47EFFFFFE0000000, float* %hardmax, align 4, !dbg !5183
  %38 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5184
  %range37 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %38, i32 0, i32 5, !dbg !5185
  %39 = load void (%struct.PointerRNA*, float*, float*, float*, float*)*, void (%struct.PointerRNA*, float*, float*, float*, float*)** %range37, align 8, !dbg !5185
  %40 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5186
  %41 = load float*, float** %softmin.addr, align 8, !dbg !5187
  %42 = load float*, float** %softmax.addr, align 8, !dbg !5188
  call void %39(%struct.PointerRNA* %40, float* %hardmin, float* %hardmax, float* %41, float* %42), !dbg !5184
  %43 = load float*, float** %softmin.addr, align 8, !dbg !5189
  %44 = load float, float* %43, align 4, !dbg !5190
  %45 = load float, float* %hardmin, align 4, !dbg !5191
  %call38 = call float @max_ff(float %44, float %45), !dbg !5192
  %46 = load float*, float** %softmin.addr, align 8, !dbg !5193
  store float %call38, float* %46, align 4, !dbg !5194
  %47 = load float*, float** %softmax.addr, align 8, !dbg !5195
  %48 = load float, float* %47, align 4, !dbg !5196
  %49 = load float, float* %hardmax, align 4, !dbg !5197
  %call39 = call float @min_ff(float %48, float %49), !dbg !5198
  %50 = load float*, float** %softmax.addr, align 8, !dbg !5199
  store float %call39, float* %50, align 4, !dbg !5200
  br label %if.end46, !dbg !5201

if.else:                                          ; preds = %if.end32
  %51 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5202
  %range_ex = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %51, i32 0, i32 10, !dbg !5204
  %52 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)** %range_ex, align 8, !dbg !5204
  %tobool40 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* %52, null, !dbg !5202
  br i1 %tobool40, label %if.then41, label %if.end45, !dbg !5205

if.then41:                                        ; preds = %if.else
  store float 0xC7EFFFFFE0000000, float* %hardmin, align 4, !dbg !5206
  store float 0x47EFFFFFE0000000, float* %hardmax, align 4, !dbg !5208
  %53 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5209
  %range_ex42 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %53, i32 0, i32 10, !dbg !5210
  %54 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)** %range_ex42, align 8, !dbg !5210
  %55 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5211
  %56 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5212
  %57 = load float*, float** %softmin.addr, align 8, !dbg !5213
  %58 = load float*, float** %softmax.addr, align 8, !dbg !5214
  call void %54(%struct.PointerRNA* %55, %struct.PropertyRNA* %56, float* %hardmin, float* %hardmax, float* %57, float* %58), !dbg !5209
  %59 = load float*, float** %softmin.addr, align 8, !dbg !5215
  %60 = load float, float* %59, align 4, !dbg !5216
  %61 = load float, float* %hardmin, align 4, !dbg !5217
  %call43 = call float @max_ff(float %60, float %61), !dbg !5218
  %62 = load float*, float** %softmin.addr, align 8, !dbg !5219
  store float %call43, float* %62, align 4, !dbg !5220
  %63 = load float*, float** %softmax.addr, align 8, !dbg !5221
  %64 = load float, float* %63, align 4, !dbg !5222
  %65 = load float, float* %hardmax, align 4, !dbg !5223
  %call44 = call float @min_ff(float %64, float %65), !dbg !5224
  %66 = load float*, float** %softmax.addr, align 8, !dbg !5225
  store float %call44, float* %66, align 4, !dbg !5226
  br label %if.end45, !dbg !5227

if.end45:                                         ; preds = %if.then41, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then36
  %67 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5228
  %step47 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %67, i32 0, i32 15, !dbg !5229
  %68 = load float, float* %step47, align 8, !dbg !5229
  %69 = load float*, float** %step.addr, align 8, !dbg !5230
  store float %68, float* %69, align 4, !dbg !5231
  %70 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !5232
  %precision48 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %70, i32 0, i32 16, !dbg !5233
  %71 = load i32, i32* %precision48, align 4, !dbg !5233
  %conv49 = sitofp i32 %71 to float, !dbg !5234
  %72 = load float*, float** %precision.addr, align 8, !dbg !5235
  store float %conv49, float* %72, align 4, !dbg !5236
  br label %return, !dbg !5237

return:                                           ; preds = %if.end46, %cond.end30
  ret void, !dbg !5237
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !5238 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !5241, metadata !DIExpression()), !dbg !5242
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !5243, metadata !DIExpression()), !dbg !5244
  %0 = load float, float* %a.addr, align 4, !dbg !5245
  %1 = load float, float* %b.addr, align 4, !dbg !5246
  %cmp = fcmp ogt float %0, %1, !dbg !5247
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5248

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !5249
  br label %cond.end, !dbg !5248

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !5250
  br label %cond.end, !dbg !5248

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5248
  ret float %cond, !dbg !5251
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !5252 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !5253, metadata !DIExpression()), !dbg !5254
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !5255, metadata !DIExpression()), !dbg !5256
  %0 = load float, float* %a.addr, align 4, !dbg !5257
  %1 = load float, float* %b.addr, align 4, !dbg !5258
  %cmp = fcmp olt float %0, %1, !dbg !5259
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5260

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !5261
  br label %cond.end, !dbg !5260

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !5262
  br label %cond.end, !dbg !5260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5260
  ret float %cond, !dbg !5263
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_float_clamp(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, float* %value) #0 !dbg !5264 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca float*, align 8
  %min = alloca float, align 4
  %max = alloca float, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5267, metadata !DIExpression()), !dbg !5268
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  store float* %value, float** %value.addr, align 8
  call void @llvm.dbg.declare(metadata float** %value.addr, metadata !5271, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.declare(metadata float* %min, metadata !5273, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.declare(metadata float* %max, metadata !5275, metadata !DIExpression()), !dbg !5276
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5277
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5278
  call void @RNA_property_float_range(%struct.PointerRNA* %0, %struct.PropertyRNA* %1, float* %min, float* %max), !dbg !5279
  %2 = load float*, float** %value.addr, align 8, !dbg !5280
  %3 = load float, float* %2, align 4, !dbg !5282
  %4 = load float, float* %min, align 4, !dbg !5283
  %cmp = fcmp olt float %3, %4, !dbg !5284
  br i1 %cmp, label %if.then, label %if.else, !dbg !5285

if.then:                                          ; preds = %entry
  %5 = load float, float* %min, align 4, !dbg !5286
  %6 = load float*, float** %value.addr, align 8, !dbg !5288
  store float %5, float* %6, align 4, !dbg !5289
  store i32 -1, i32* %retval, align 4, !dbg !5290
  br label %return, !dbg !5290

if.else:                                          ; preds = %entry
  %7 = load float*, float** %value.addr, align 8, !dbg !5291
  %8 = load float, float* %7, align 4, !dbg !5293
  %9 = load float, float* %max, align 4, !dbg !5294
  %cmp1 = fcmp ogt float %8, %9, !dbg !5295
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !5296

if.then2:                                         ; preds = %if.else
  %10 = load float, float* %max, align 4, !dbg !5297
  %11 = load float*, float** %value.addr, align 8, !dbg !5299
  store float %10, float* %11, align 4, !dbg !5300
  store i32 1, i32* %retval, align 4, !dbg !5301
  br label %return, !dbg !5301

if.else3:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !5302
  br label %return, !dbg !5302

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !5304
  ret i32 %12, !dbg !5304
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_int_clamp(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %value) #0 !dbg !5305 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i32*, align 8
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5306, metadata !DIExpression()), !dbg !5307
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5308, metadata !DIExpression()), !dbg !5309
  store i32* %value, i32** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %value.addr, metadata !5310, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.declare(metadata i32* %min, metadata !5312, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.declare(metadata i32* %max, metadata !5314, metadata !DIExpression()), !dbg !5315
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5316
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5317
  call void @RNA_property_int_range(%struct.PointerRNA* %0, %struct.PropertyRNA* %1, i32* %min, i32* %max), !dbg !5318
  %2 = load i32*, i32** %value.addr, align 8, !dbg !5319
  %3 = load i32, i32* %2, align 4, !dbg !5321
  %4 = load i32, i32* %min, align 4, !dbg !5322
  %cmp = icmp slt i32 %3, %4, !dbg !5323
  br i1 %cmp, label %if.then, label %if.else, !dbg !5324

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %min, align 4, !dbg !5325
  %6 = load i32*, i32** %value.addr, align 8, !dbg !5327
  store i32 %5, i32* %6, align 4, !dbg !5328
  store i32 -1, i32* %retval, align 4, !dbg !5329
  br label %return, !dbg !5329

if.else:                                          ; preds = %entry
  %7 = load i32*, i32** %value.addr, align 8, !dbg !5330
  %8 = load i32, i32* %7, align 4, !dbg !5332
  %9 = load i32, i32* %max, align 4, !dbg !5333
  %cmp1 = icmp sgt i32 %8, %9, !dbg !5334
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !5335

if.then2:                                         ; preds = %if.else
  %10 = load i32, i32* %max, align 4, !dbg !5336
  %11 = load i32*, i32** %value.addr, align 8, !dbg !5338
  store i32 %10, i32* %11, align 4, !dbg !5339
  store i32 1, i32* %retval, align 4, !dbg !5340
  br label %return, !dbg !5340

if.else3:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !5341
  br label %return, !dbg !5341

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !5343
  ret i32 %12, !dbg !5343
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_string_maxlength(%struct.PropertyRNA* %prop) #0 !dbg !5344 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %sprop = alloca %struct.StringPropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5345, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.declare(metadata %struct.StringPropertyRNA** %sprop, metadata !5347, metadata !DIExpression()), !dbg !5348
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5349
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !5350
  %1 = bitcast %struct.PropertyRNA* %call to %struct.StringPropertyRNA*, !dbg !5351
  store %struct.StringPropertyRNA* %1, %struct.StringPropertyRNA** %sprop, align 8, !dbg !5348
  %2 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !5352
  %maxlength = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %2, i32 0, i32 7, !dbg !5353
  %3 = load i32, i32* %maxlength, align 8, !dbg !5353
  ret i32 %3, !dbg !5354
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !5355 {
entry:
  %retval = alloca %struct.StructRNA*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %pprop = alloca %struct.PointerPropertyRNA*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5358, metadata !DIExpression()), !dbg !5359
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5360, metadata !DIExpression()), !dbg !5361
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5362
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !5363
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5364
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5365
  %type = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 9, !dbg !5367
  %2 = load i32, i32* %type, align 8, !dbg !5367
  %cmp = icmp eq i32 %2, 5, !dbg !5368
  br i1 %cmp, label %if.then, label %if.else9, !dbg !5369

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerPropertyRNA** %pprop, metadata !5370, metadata !DIExpression()), !dbg !5372
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5373
  %4 = bitcast %struct.PropertyRNA* %3 to %struct.PointerPropertyRNA*, !dbg !5374
  store %struct.PointerPropertyRNA* %4, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !5372
  %5 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !5375
  %typef = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %5, i32 0, i32 3, !dbg !5377
  %6 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %typef, align 8, !dbg !5377
  %tobool = icmp ne %struct.StructRNA* (%struct.PointerRNA*)* %6, null, !dbg !5375
  br i1 %tobool, label %if.then1, label %if.else, !dbg !5378

if.then1:                                         ; preds = %if.then
  %7 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !5379
  %typef2 = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %7, i32 0, i32 3, !dbg !5380
  %8 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %typef2, align 8, !dbg !5380
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5381
  %call3 = call %struct.StructRNA* %8(%struct.PointerRNA* %9), !dbg !5379
  store %struct.StructRNA* %call3, %struct.StructRNA** %retval, align 8, !dbg !5382
  br label %return, !dbg !5382

if.else:                                          ; preds = %if.then
  %10 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !5383
  %type4 = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %10, i32 0, i32 5, !dbg !5385
  %11 = load %struct.StructRNA*, %struct.StructRNA** %type4, align 8, !dbg !5385
  %tobool5 = icmp ne %struct.StructRNA* %11, null, !dbg !5383
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5386

if.then6:                                         ; preds = %if.else
  %12 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !5387
  %type7 = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %12, i32 0, i32 5, !dbg !5388
  %13 = load %struct.StructRNA*, %struct.StructRNA** %type7, align 8, !dbg !5388
  store %struct.StructRNA* %13, %struct.StructRNA** %retval, align 8, !dbg !5389
  br label %return, !dbg !5389

if.end:                                           ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end
  br label %if.end18, !dbg !5390

if.else9:                                         ; preds = %entry
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5391
  %type10 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 9, !dbg !5393
  %15 = load i32, i32* %type10, align 8, !dbg !5393
  %cmp11 = icmp eq i32 %15, 6, !dbg !5394
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !5395

if.then12:                                        ; preds = %if.else9
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !5396, metadata !DIExpression()), !dbg !5398
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5399
  %17 = bitcast %struct.PropertyRNA* %16 to %struct.CollectionPropertyRNA*, !dbg !5400
  store %struct.CollectionPropertyRNA* %17, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !5398
  %18 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !5401
  %item_type = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %18, i32 0, i32 9, !dbg !5403
  %19 = load %struct.StructRNA*, %struct.StructRNA** %item_type, align 8, !dbg !5403
  %tobool13 = icmp ne %struct.StructRNA* %19, null, !dbg !5401
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !5404

if.then14:                                        ; preds = %if.then12
  %20 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !5405
  %item_type15 = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %20, i32 0, i32 9, !dbg !5406
  %21 = load %struct.StructRNA*, %struct.StructRNA** %item_type15, align 8, !dbg !5406
  store %struct.StructRNA* %21, %struct.StructRNA** %retval, align 8, !dbg !5407
  br label %return, !dbg !5407

if.end16:                                         ; preds = %if.then12
  br label %if.end17, !dbg !5408

if.end17:                                         ; preds = %if.end16, %if.else9
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end8
  store %struct.StructRNA* @RNA_UnknownType, %struct.StructRNA** %retval, align 8, !dbg !5409
  br label %return, !dbg !5409

return:                                           ; preds = %if.end18, %if.then14, %if.then6, %if.then1
  %22 = load %struct.StructRNA*, %struct.StructRNA** %retval, align 8, !dbg !5410
  ret %struct.StructRNA* %22, !dbg !5410
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_pointer_poll(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PointerRNA* %value) #0 !dbg !5411 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca %struct.PointerRNA*, align 8
  %pprop = alloca %struct.PointerPropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5416, metadata !DIExpression()), !dbg !5417
  store %struct.PointerRNA* %value, %struct.PointerRNA** %value.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %value.addr, metadata !5418, metadata !DIExpression()), !dbg !5419
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5420
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !5421
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5422
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5423
  %type = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 9, !dbg !5425
  %2 = load i32, i32* %type, align 8, !dbg !5425
  %cmp = icmp eq i32 %2, 5, !dbg !5426
  br i1 %cmp, label %if.then, label %if.end4, !dbg !5427

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerPropertyRNA** %pprop, metadata !5428, metadata !DIExpression()), !dbg !5430
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5431
  %4 = bitcast %struct.PropertyRNA* %3 to %struct.PointerPropertyRNA*, !dbg !5432
  store %struct.PointerPropertyRNA* %4, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !5430
  %5 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !5433
  %poll = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %5, i32 0, i32 4, !dbg !5435
  %6 = load i32 (%struct.PointerRNA*, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, %struct.PointerRNA*)** %poll, align 8, !dbg !5435
  %tobool = icmp ne i32 (%struct.PointerRNA*, %struct.PointerRNA*)* %6, null, !dbg !5433
  br i1 %tobool, label %if.then1, label %if.end, !dbg !5436

if.then1:                                         ; preds = %if.then
  %7 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !5437
  %poll2 = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %7, i32 0, i32 4, !dbg !5438
  %8 = load i32 (%struct.PointerRNA*, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, %struct.PointerRNA*)** %poll2, align 8, !dbg !5438
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5439
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %value.addr, align 8, !dbg !5440
  %call3 = call i32 %8(%struct.PointerRNA* %9, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %10), !dbg !5437
  store i32 %call3, i32* %retval, align 4, !dbg !5441
  br label %return, !dbg !5441

if.end:                                           ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !5442
  br label %return, !dbg !5442

if.end4:                                          ; preds = %entry
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5443
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %11, i32 0, i32 3, !dbg !5444
  %12 = load i8*, i8** %identifier, align 8, !dbg !5444
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.RNA_property_pointer_poll, i64 0, i64 0), i8* %12), !dbg !5445
  store i32 0, i32* %retval, align 4, !dbg !5446
  br label %return, !dbg !5446

return:                                           ; preds = %if.end4, %if.end, %if.then1
  %13 = load i32, i32* %retval, align 4, !dbg !5447
  ret i32 %13, !dbg !5447
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_enum_items(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.EnumPropertyItem** %r_item, i32* %r_totitem, i8* %r_free) #0 !dbg !5448 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_item.addr = alloca %struct.EnumPropertyItem**, align 8
  %r_totitem.addr = alloca i32*, align 8
  %r_free.addr = alloca i8*, align 8
  %eprop = alloca %struct.EnumPropertyRNA*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %tot = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5455, metadata !DIExpression()), !dbg !5456
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5457, metadata !DIExpression()), !dbg !5458
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5459, metadata !DIExpression()), !dbg !5460
  store %struct.EnumPropertyItem** %r_item, %struct.EnumPropertyItem*** %r_item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem*** %r_item.addr, metadata !5461, metadata !DIExpression()), !dbg !5462
  store i32* %r_totitem, i32** %r_totitem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totitem.addr, metadata !5463, metadata !DIExpression()), !dbg !5464
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !5465, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyRNA** %eprop, metadata !5467, metadata !DIExpression()), !dbg !5468
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5469
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !5470
  %1 = bitcast %struct.PropertyRNA* %call to %struct.EnumPropertyRNA*, !dbg !5471
  store %struct.EnumPropertyRNA* %1, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5468
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !5472
  store i8 0, i8* %2, align 1, !dbg !5473
  %3 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5474
  %itemf = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %3, i32 0, i32 3, !dbg !5476
  %4 = load %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %itemf, align 8, !dbg !5476
  %tobool = icmp ne %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* %4, null, !dbg !5474
  br i1 %tobool, label %land.lhs.true, label %if.else14, !dbg !5477

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5478
  %cmp = icmp ne %struct.bContext* %5, null, !dbg !5479
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5480

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5481
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %6, i32 0, i32 4, !dbg !5482
  %7 = load i32, i32* %flag, align 8, !dbg !5482
  %and = and i32 %7, 16777216, !dbg !5483
  %tobool1 = icmp ne i32 %and, 0, !dbg !5483
  br i1 %tobool1, label %if.then, label %if.else14, !dbg !5484

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !5485, metadata !DIExpression()), !dbg !5487
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5488
  %flag2 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %8, i32 0, i32 4, !dbg !5490
  %9 = load i32, i32* %flag2, align 8, !dbg !5490
  %and3 = and i32 %9, 16777216, !dbg !5491
  %tobool4 = icmp ne i32 %and3, 0, !dbg !5491
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5492

if.then5:                                         ; preds = %if.then
  %10 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5493
  %itemf6 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %10, i32 0, i32 3, !dbg !5494
  %11 = load %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %itemf6, align 8, !dbg !5494
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5495
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5496
  %14 = load i8*, i8** %r_free.addr, align 8, !dbg !5497
  %call7 = call %struct.EnumPropertyItem* %11(%struct.bContext* null, %struct.PointerRNA* %12, %struct.PropertyRNA* %13, i8* %14), !dbg !5493
  store %struct.EnumPropertyItem* %call7, %struct.EnumPropertyItem** %item, align 8, !dbg !5498
  br label %if.end, !dbg !5499

if.else:                                          ; preds = %if.then
  %15 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5500
  %itemf8 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %15, i32 0, i32 3, !dbg !5501
  %16 = load %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %itemf8, align 8, !dbg !5501
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5502
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5503
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5504
  %20 = load i8*, i8** %r_free.addr, align 8, !dbg !5505
  %call9 = call %struct.EnumPropertyItem* %16(%struct.bContext* %17, %struct.PointerRNA* %18, %struct.PropertyRNA* %19, i8* %20), !dbg !5500
  store %struct.EnumPropertyItem* %call9, %struct.EnumPropertyItem** %item, align 8, !dbg !5506
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %21 = load i32*, i32** %r_totitem.addr, align 8, !dbg !5507
  %tobool10 = icmp ne i32* %21, null, !dbg !5507
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !5509

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5510, metadata !DIExpression()), !dbg !5512
  store i32 0, i32* %tot, align 4, !dbg !5513
  br label %for.cond, !dbg !5515

for.cond:                                         ; preds = %for.inc, %if.then11
  %22 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5516
  %23 = load i32, i32* %tot, align 4, !dbg !5518
  %idxprom = sext i32 %23 to i64, !dbg !5516
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %22, i64 %idxprom, !dbg !5516
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 1, !dbg !5519
  %24 = load i8*, i8** %identifier, align 8, !dbg !5519
  %tobool12 = icmp ne i8* %24, null, !dbg !5520
  br i1 %tobool12, label %for.body, label %for.end, !dbg !5520

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !5521

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %tot, align 4, !dbg !5523
  %inc = add nsw i32 %25, 1, !dbg !5523
  store i32 %inc, i32* %tot, align 4, !dbg !5523
  br label %for.cond, !dbg !5524, !llvm.loop !5525

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %tot, align 4, !dbg !5527
  %27 = load i32*, i32** %r_totitem.addr, align 8, !dbg !5528
  store i32 %26, i32* %27, align 4, !dbg !5529
  br label %if.end13, !dbg !5530

if.end13:                                         ; preds = %for.end, %if.end
  %28 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5531
  %29 = load %struct.EnumPropertyItem**, %struct.EnumPropertyItem*** %r_item.addr, align 8, !dbg !5532
  store %struct.EnumPropertyItem* %28, %struct.EnumPropertyItem** %29, align 8, !dbg !5533
  br label %if.end19, !dbg !5534

if.else14:                                        ; preds = %lor.lhs.false, %entry
  %30 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5535
  %item15 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %30, i32 0, i32 7, !dbg !5537
  %31 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item15, align 8, !dbg !5537
  %32 = load %struct.EnumPropertyItem**, %struct.EnumPropertyItem*** %r_item.addr, align 8, !dbg !5538
  store %struct.EnumPropertyItem* %31, %struct.EnumPropertyItem** %32, align 8, !dbg !5539
  %33 = load i32*, i32** %r_totitem.addr, align 8, !dbg !5540
  %tobool16 = icmp ne i32* %33, null, !dbg !5540
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5542

if.then17:                                        ; preds = %if.else14
  %34 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5543
  %totitem = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %34, i32 0, i32 8, !dbg !5544
  %35 = load i32, i32* %totitem, align 8, !dbg !5544
  %36 = load i32*, i32** %r_totitem.addr, align 8, !dbg !5545
  store i32 %35, i32* %36, align 4, !dbg !5546
  br label %if.end18, !dbg !5547

if.end18:                                         ; preds = %if.then17, %if.else14
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end13
  ret void, !dbg !5548
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_enum_items_gettexted(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.EnumPropertyItem** %r_item, i32* %r_totitem, i8* %r_free) #0 !dbg !5549 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_item.addr = alloca %struct.EnumPropertyItem**, align 8
  %r_totitem.addr = alloca i32*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5550, metadata !DIExpression()), !dbg !5551
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5552, metadata !DIExpression()), !dbg !5553
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5554, metadata !DIExpression()), !dbg !5555
  store %struct.EnumPropertyItem** %r_item, %struct.EnumPropertyItem*** %r_item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem*** %r_item.addr, metadata !5556, metadata !DIExpression()), !dbg !5557
  store i32* %r_totitem, i32** %r_totitem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totitem.addr, metadata !5558, metadata !DIExpression()), !dbg !5559
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !5560, metadata !DIExpression()), !dbg !5561
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5562
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5563
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5564
  %3 = load %struct.EnumPropertyItem**, %struct.EnumPropertyItem*** %r_item.addr, align 8, !dbg !5565
  %4 = load i32*, i32** %r_totitem.addr, align 8, !dbg !5566
  %5 = load i8*, i8** %r_free.addr, align 8, !dbg !5567
  call void @RNA_property_enum_items(%struct.bContext* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, %struct.EnumPropertyItem** %3, i32* %4, i8* %5), !dbg !5568
  ret void, !dbg !5569
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_enum_items_gettexted_all(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.EnumPropertyItem** %r_item, i32* %r_totitem, i8* %r_free) #0 !dbg !5570 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_item.addr = alloca %struct.EnumPropertyItem**, align 8
  %r_totitem.addr = alloca i32*, align 8
  %r_free.addr = alloca i8*, align 8
  %eprop = alloca %struct.EnumPropertyRNA*, align 8
  %mem_size = alloca i32, align 4
  %item10 = alloca %struct.EnumPropertyItem*, align 8
  %i = alloca i32, align 4
  %free = alloca i8, align 1
  %exists = alloca i8, align 1
  %i_fixed = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5571, metadata !DIExpression()), !dbg !5572
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5575, metadata !DIExpression()), !dbg !5576
  store %struct.EnumPropertyItem** %r_item, %struct.EnumPropertyItem*** %r_item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem*** %r_item.addr, metadata !5577, metadata !DIExpression()), !dbg !5578
  store i32* %r_totitem, i32** %r_totitem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_totitem.addr, metadata !5579, metadata !DIExpression()), !dbg !5580
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !5581, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyRNA** %eprop, metadata !5583, metadata !DIExpression()), !dbg !5584
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5585
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !5586
  %1 = bitcast %struct.PropertyRNA* %call to %struct.EnumPropertyRNA*, !dbg !5587
  store %struct.EnumPropertyRNA* %1, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5584
  call void @llvm.dbg.declare(metadata i32* %mem_size, metadata !5588, metadata !DIExpression()), !dbg !5589
  %2 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5590
  %totitem = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %2, i32 0, i32 8, !dbg !5591
  %3 = load i32, i32* %totitem, align 8, !dbg !5591
  %add = add nsw i32 %3, 1, !dbg !5592
  %conv = sext i32 %add to i64, !dbg !5593
  %mul = mul i64 40, %conv, !dbg !5594
  %conv1 = trunc i64 %mul to i32, !dbg !5595
  store i32 %conv1, i32* %mem_size, align 4, !dbg !5589
  %4 = load i8*, i8** %r_free.addr, align 8, !dbg !5596
  store i8 1, i8* %4, align 1, !dbg !5597
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5598
  %6 = load i32, i32* %mem_size, align 4, !dbg !5599
  %conv2 = sext i32 %6 to i64, !dbg !5599
  %call3 = call i8* %5(i64 %conv2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)), !dbg !5598
  %7 = bitcast i8* %call3 to %struct.EnumPropertyItem*, !dbg !5598
  %8 = load %struct.EnumPropertyItem**, %struct.EnumPropertyItem*** %r_item.addr, align 8, !dbg !5600
  store %struct.EnumPropertyItem* %7, %struct.EnumPropertyItem** %8, align 8, !dbg !5601
  %9 = load %struct.EnumPropertyItem**, %struct.EnumPropertyItem*** %r_item.addr, align 8, !dbg !5602
  %10 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %9, align 8, !dbg !5603
  %11 = bitcast %struct.EnumPropertyItem* %10 to i8*, !dbg !5604
  %12 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5605
  %item = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %12, i32 0, i32 7, !dbg !5606
  %13 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5606
  %14 = bitcast %struct.EnumPropertyItem* %13 to i8*, !dbg !5604
  %15 = load i32, i32* %mem_size, align 4, !dbg !5607
  %conv4 = sext i32 %15 to i64, !dbg !5607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %14, i64 %conv4, i1 false), !dbg !5604
  %16 = load i32*, i32** %r_totitem.addr, align 8, !dbg !5608
  %tobool = icmp ne i32* %16, null, !dbg !5608
  br i1 %tobool, label %if.then, label %if.end, !dbg !5610

if.then:                                          ; preds = %entry
  %17 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5611
  %totitem5 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %17, i32 0, i32 8, !dbg !5612
  %18 = load i32, i32* %totitem5, align 8, !dbg !5612
  %19 = load i32*, i32** %r_totitem.addr, align 8, !dbg !5613
  store i32 %18, i32* %19, align 4, !dbg !5614
  br label %if.end, !dbg !5615

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5616
  %itemf = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %20, i32 0, i32 3, !dbg !5618
  %21 = load %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %itemf, align 8, !dbg !5618
  %tobool6 = icmp ne %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* %21, null, !dbg !5616
  br i1 %tobool6, label %land.lhs.true, label %if.end51, !dbg !5619

land.lhs.true:                                    ; preds = %if.end
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5620
  %cmp = icmp ne %struct.bContext* %22, null, !dbg !5621
  br i1 %cmp, label %if.then9, label %lor.lhs.false, !dbg !5622

lor.lhs.false:                                    ; preds = %land.lhs.true
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5623
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %23, i32 0, i32 4, !dbg !5624
  %24 = load i32, i32* %flag, align 8, !dbg !5624
  %and = and i32 %24, 16777216, !dbg !5625
  %tobool8 = icmp ne i32 %and, 0, !dbg !5625
  br i1 %tobool8, label %if.then9, label %if.end51, !dbg !5626

if.then9:                                         ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item10, metadata !5627, metadata !DIExpression()), !dbg !5629
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5630, metadata !DIExpression()), !dbg !5631
  call void @llvm.dbg.declare(metadata i8* %free, metadata !5632, metadata !DIExpression()), !dbg !5633
  store i8 0, i8* %free, align 1, !dbg !5633
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5634
  %flag11 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %25, i32 0, i32 4, !dbg !5636
  %26 = load i32, i32* %flag11, align 8, !dbg !5636
  %and12 = and i32 %26, 16777216, !dbg !5637
  %tobool13 = icmp ne i32 %and12, 0, !dbg !5637
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !5638

if.then14:                                        ; preds = %if.then9
  %27 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5639
  %itemf15 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %27, i32 0, i32 3, !dbg !5640
  %28 = load %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %itemf15, align 8, !dbg !5640
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5641
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5642
  %call16 = call %struct.EnumPropertyItem* %28(%struct.bContext* null, %struct.PointerRNA* %29, %struct.PropertyRNA* %30, i8* %free), !dbg !5639
  store %struct.EnumPropertyItem* %call16, %struct.EnumPropertyItem** %item10, align 8, !dbg !5643
  br label %if.end19, !dbg !5644

if.else:                                          ; preds = %if.then9
  %31 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5645
  %itemf17 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %31, i32 0, i32 3, !dbg !5646
  %32 = load %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %itemf17, align 8, !dbg !5646
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5647
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5648
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5649
  %call18 = call %struct.EnumPropertyItem* %32(%struct.bContext* %33, %struct.PointerRNA* %34, %struct.PropertyRNA* %35, i8* %free), !dbg !5645
  store %struct.EnumPropertyItem* %call18, %struct.EnumPropertyItem** %item10, align 8, !dbg !5650
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then14
  store i32 0, i32* %i, align 4, !dbg !5651
  br label %for.cond, !dbg !5653

for.cond:                                         ; preds = %for.inc45, %if.end19
  %36 = load i32, i32* %i, align 4, !dbg !5654
  %37 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !5656
  %totitem20 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %37, i32 0, i32 8, !dbg !5657
  %38 = load i32, i32* %totitem20, align 8, !dbg !5657
  %cmp21 = icmp slt i32 %36, %38, !dbg !5658
  br i1 %cmp21, label %for.body, label %for.end47, !dbg !5659

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %exists, metadata !5660, metadata !DIExpression()), !dbg !5662
  store i8 0, i8* %exists, align 1, !dbg !5662
  call void @llvm.dbg.declare(metadata i32* %i_fixed, metadata !5663, metadata !DIExpression()), !dbg !5664
  store i32 0, i32* %i_fixed, align 4, !dbg !5665
  br label %for.cond23, !dbg !5667

for.cond23:                                       ; preds = %for.inc, %for.body
  %39 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item10, align 8, !dbg !5668
  %40 = load i32, i32* %i_fixed, align 4, !dbg !5670
  %idxprom = sext i32 %40 to i64, !dbg !5668
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %39, i64 %idxprom, !dbg !5668
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 1, !dbg !5671
  %41 = load i8*, i8** %identifier, align 8, !dbg !5671
  %tobool24 = icmp ne i8* %41, null, !dbg !5672
  br i1 %tobool24, label %for.body25, label %for.end, !dbg !5672

for.body25:                                       ; preds = %for.cond23
  %42 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item10, align 8, !dbg !5673
  %43 = load i32, i32* %i_fixed, align 4, !dbg !5673
  %idxprom26 = sext i32 %43 to i64, !dbg !5673
  %arrayidx27 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %42, i64 %idxprom26, !dbg !5673
  %identifier28 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx27, i32 0, i32 1, !dbg !5673
  %44 = load i8*, i8** %identifier28, align 8, !dbg !5673
  %45 = load %struct.EnumPropertyItem**, %struct.EnumPropertyItem*** %r_item.addr, align 8, !dbg !5673
  %46 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %45, align 8, !dbg !5673
  %47 = load i32, i32* %i, align 4, !dbg !5673
  %idxprom29 = sext i32 %47 to i64, !dbg !5673
  %arrayidx30 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %46, i64 %idxprom29, !dbg !5673
  %identifier31 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx30, i32 0, i32 1, !dbg !5673
  %48 = load i8*, i8** %identifier31, align 8, !dbg !5673
  %call32 = call i32 @strcmp(i8* %44, i8* %48) #7, !dbg !5673
  %cmp33 = icmp eq i32 %call32, 0, !dbg !5673
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !5676

if.then35:                                        ; preds = %for.body25
  store i8 1, i8* %exists, align 1, !dbg !5677
  br label %for.end, !dbg !5679

if.end36:                                         ; preds = %for.body25
  br label %for.inc, !dbg !5680

for.inc:                                          ; preds = %if.end36
  %49 = load i32, i32* %i_fixed, align 4, !dbg !5681
  %inc = add nsw i32 %49, 1, !dbg !5681
  store i32 %inc, i32* %i_fixed, align 4, !dbg !5681
  br label %for.cond23, !dbg !5682, !llvm.loop !5683

for.end:                                          ; preds = %if.then35, %for.cond23
  %50 = load i8, i8* %exists, align 1, !dbg !5685
  %tobool37 = icmp ne i8 %50, 0, !dbg !5685
  br i1 %tobool37, label %if.end44, label %if.then38, !dbg !5687

if.then38:                                        ; preds = %for.end
  %51 = load %struct.EnumPropertyItem**, %struct.EnumPropertyItem*** %r_item.addr, align 8, !dbg !5688
  %52 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %51, align 8, !dbg !5690
  %53 = load i32, i32* %i, align 4, !dbg !5691
  %idxprom39 = sext i32 %53 to i64, !dbg !5692
  %arrayidx40 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %52, i64 %idxprom39, !dbg !5692
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx40, i32 0, i32 3, !dbg !5693
  store i8* null, i8** %name, align 8, !dbg !5694
  %54 = load %struct.EnumPropertyItem**, %struct.EnumPropertyItem*** %r_item.addr, align 8, !dbg !5695
  %55 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %54, align 8, !dbg !5696
  %56 = load i32, i32* %i, align 4, !dbg !5697
  %idxprom41 = sext i32 %56 to i64, !dbg !5698
  %arrayidx42 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %55, i64 %idxprom41, !dbg !5698
  %identifier43 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx42, i32 0, i32 1, !dbg !5699
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0), i8** %identifier43, align 8, !dbg !5700
  br label %if.end44, !dbg !5701

if.end44:                                         ; preds = %if.then38, %for.end
  br label %for.inc45, !dbg !5702

for.inc45:                                        ; preds = %if.end44
  %57 = load i32, i32* %i, align 4, !dbg !5703
  %inc46 = add nsw i32 %57, 1, !dbg !5703
  store i32 %inc46, i32* %i, align 4, !dbg !5703
  br label %for.cond, !dbg !5704, !llvm.loop !5705

for.end47:                                        ; preds = %for.cond
  %58 = load i8, i8* %free, align 1, !dbg !5707
  %tobool48 = icmp ne i8 %58, 0, !dbg !5707
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !5709

if.then49:                                        ; preds = %for.end47
  %59 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5710
  %60 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item10, align 8, !dbg !5711
  %61 = bitcast %struct.EnumPropertyItem* %60 to i8*, !dbg !5711
  call void %59(i8* %61), !dbg !5710
  br label %if.end50, !dbg !5710

if.end50:                                         ; preds = %if.then49, %for.end47
  br label %if.end51, !dbg !5712

if.end51:                                         ; preds = %if.end50, %lor.lhs.false, %if.end
  ret void, !dbg !5713
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_enum_value(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %identifier, i32* %r_value) #0 !dbg !5714 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %r_value.addr = alloca i32*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %found = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5721, metadata !DIExpression()), !dbg !5722
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  store i32* %r_value, i32** %r_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_value.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !5727, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.declare(metadata i8* %free, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata i8* %found, metadata !5731, metadata !DIExpression()), !dbg !5732
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5733
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5734
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5735
  call void @RNA_property_enum_items(%struct.bContext* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !5736
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5737
  %tobool = icmp ne %struct.EnumPropertyItem* %3, null, !dbg !5737
  br i1 %tobool, label %if.then, label %if.else5, !dbg !5739

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5740, metadata !DIExpression()), !dbg !5742
  %4 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5743
  %5 = load i8*, i8** %identifier.addr, align 8, !dbg !5744
  %call = call i32 @RNA_enum_from_identifier(%struct.EnumPropertyItem* %4, i8* %5), !dbg !5745
  store i32 %call, i32* %i, align 4, !dbg !5742
  %6 = load i32, i32* %i, align 4, !dbg !5746
  %cmp = icmp ne i32 %6, -1, !dbg !5748
  br i1 %cmp, label %if.then1, label %if.else, !dbg !5749

if.then1:                                         ; preds = %if.then
  %7 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5750
  %8 = load i32, i32* %i, align 4, !dbg !5752
  %idxprom = sext i32 %8 to i64, !dbg !5750
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %7, i64 %idxprom, !dbg !5750
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 0, !dbg !5753
  %9 = load i32, i32* %value, align 8, !dbg !5753
  %10 = load i32*, i32** %r_value.addr, align 8, !dbg !5754
  store i32 %9, i32* %10, align 4, !dbg !5755
  store i8 1, i8* %found, align 1, !dbg !5756
  br label %if.end, !dbg !5757

if.else:                                          ; preds = %if.then
  store i8 0, i8* %found, align 1, !dbg !5758
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %11 = load i8, i8* %free, align 1, !dbg !5760
  %tobool2 = icmp ne i8 %11, 0, !dbg !5760
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5762

if.then3:                                         ; preds = %if.end
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5763
  %13 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5765
  %14 = bitcast %struct.EnumPropertyItem* %13 to i8*, !dbg !5765
  call void %12(i8* %14), !dbg !5763
  br label %if.end4, !dbg !5766

if.end4:                                          ; preds = %if.then3, %if.end
  br label %if.end6, !dbg !5767

if.else5:                                         ; preds = %entry
  store i8 0, i8* %found, align 1, !dbg !5768
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.end4
  %15 = load i8, i8* %found, align 1, !dbg !5770
  ret i8 %15, !dbg !5771
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_enum_from_identifier(%struct.EnumPropertyItem* %item, i8* %identifier) #0 !dbg !5772 {
entry:
  %retval = alloca i32, align 4
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %identifier.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !5775, metadata !DIExpression()), !dbg !5776
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !5777, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5779, metadata !DIExpression()), !dbg !5780
  store i32 0, i32* %i, align 4, !dbg !5780
  br label %for.cond, !dbg !5781

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5782
  %identifier1 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %0, i32 0, i32 1, !dbg !5785
  %1 = load i8*, i8** %identifier1, align 8, !dbg !5785
  %tobool = icmp ne i8* %1, null, !dbg !5786
  br i1 %tobool, label %for.body, label %for.end, !dbg !5786

for.body:                                         ; preds = %for.cond
  %2 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5787
  %identifier2 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %2, i32 0, i32 1, !dbg !5790
  %3 = load i8*, i8** %identifier2, align 8, !dbg !5790
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !5787
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5787
  %conv = zext i8 %4 to i32, !dbg !5787
  %tobool3 = icmp ne i32 %conv, 0, !dbg !5787
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !5791

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5792
  %identifier4 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %5, i32 0, i32 1, !dbg !5792
  %6 = load i8*, i8** %identifier4, align 8, !dbg !5792
  %7 = load i8*, i8** %identifier.addr, align 8, !dbg !5792
  %call = call i32 @strcmp(i8* %6, i8* %7) #7, !dbg !5792
  %cmp = icmp eq i32 %call, 0, !dbg !5792
  br i1 %cmp, label %if.then, label %if.end, !dbg !5793

if.then:                                          ; preds = %land.lhs.true
  %8 = load i32, i32* %i, align 4, !dbg !5794
  store i32 %8, i32* %retval, align 4, !dbg !5796
  br label %return, !dbg !5796

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5797

for.inc:                                          ; preds = %if.end
  %9 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5798
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %9, i32 1, !dbg !5798
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5798
  %10 = load i32, i32* %i, align 4, !dbg !5799
  %inc = add nsw i32 %10, 1, !dbg !5799
  store i32 %inc, i32* %i, align 4, !dbg !5799
  br label %for.cond, !dbg !5800, !llvm.loop !5801

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !5803
  br label %return, !dbg !5803

return:                                           ; preds = %for.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !5804
  ret i32 %11, !dbg !5804
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_enum_identifier(%struct.EnumPropertyItem* %item, i32 %value, i8** %r_identifier) #0 !dbg !5805 {
entry:
  %retval = alloca i8, align 1
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %value.addr = alloca i32, align 4
  %r_identifier.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !5809, metadata !DIExpression()), !dbg !5810
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5811, metadata !DIExpression()), !dbg !5812
  store i8** %r_identifier, i8*** %r_identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %r_identifier.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5815, metadata !DIExpression()), !dbg !5816
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5817
  %1 = load i32, i32* %value.addr, align 4, !dbg !5818
  %call = call i32 @RNA_enum_from_value(%struct.EnumPropertyItem* %0, i32 %1), !dbg !5819
  store i32 %call, i32* %i, align 4, !dbg !5816
  %2 = load i32, i32* %i, align 4, !dbg !5820
  %cmp = icmp ne i32 %2, -1, !dbg !5822
  br i1 %cmp, label %if.then, label %if.else, !dbg !5823

if.then:                                          ; preds = %entry
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5824
  %4 = load i32, i32* %i, align 4, !dbg !5826
  %idxprom = sext i32 %4 to i64, !dbg !5824
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %3, i64 %idxprom, !dbg !5824
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 1, !dbg !5827
  %5 = load i8*, i8** %identifier, align 8, !dbg !5827
  %6 = load i8**, i8*** %r_identifier.addr, align 8, !dbg !5828
  store i8* %5, i8** %6, align 8, !dbg !5829
  store i8 1, i8* %retval, align 1, !dbg !5830
  br label %return, !dbg !5830

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5831
  br label %return, !dbg !5831

return:                                           ; preds = %if.else, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !5833
  ret i8 %7, !dbg !5833
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_enum_from_value(%struct.EnumPropertyItem* %item, i32 %value) #0 !dbg !5834 {
entry:
  %retval = alloca i32, align 4
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %value.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !5837, metadata !DIExpression()), !dbg !5838
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5839, metadata !DIExpression()), !dbg !5840
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5841, metadata !DIExpression()), !dbg !5842
  store i32 0, i32* %i, align 4, !dbg !5842
  br label %for.cond, !dbg !5843

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5844
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %0, i32 0, i32 1, !dbg !5847
  %1 = load i8*, i8** %identifier, align 8, !dbg !5847
  %tobool = icmp ne i8* %1, null, !dbg !5848
  br i1 %tobool, label %for.body, label %for.end, !dbg !5848

for.body:                                         ; preds = %for.cond
  %2 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5849
  %identifier1 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %2, i32 0, i32 1, !dbg !5852
  %3 = load i8*, i8** %identifier1, align 8, !dbg !5852
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !5849
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5849
  %conv = zext i8 %4 to i32, !dbg !5849
  %tobool2 = icmp ne i32 %conv, 0, !dbg !5849
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !5853

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5854
  %value3 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %5, i32 0, i32 0, !dbg !5855
  %6 = load i32, i32* %value3, align 8, !dbg !5855
  %7 = load i32, i32* %value.addr, align 4, !dbg !5856
  %cmp = icmp eq i32 %6, %7, !dbg !5857
  br i1 %cmp, label %if.then, label %if.end, !dbg !5858

if.then:                                          ; preds = %land.lhs.true
  %8 = load i32, i32* %i, align 4, !dbg !5859
  store i32 %8, i32* %retval, align 4, !dbg !5861
  br label %return, !dbg !5861

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5862

for.inc:                                          ; preds = %if.end
  %9 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5863
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %9, i32 1, !dbg !5863
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5863
  %10 = load i32, i32* %i, align 4, !dbg !5864
  %inc = add nsw i32 %10, 1, !dbg !5864
  store i32 %inc, i32* %i, align 4, !dbg !5864
  br label %for.cond, !dbg !5865, !llvm.loop !5866

for.end:                                          ; preds = %for.cond
  store i32 -1, i32* %retval, align 4, !dbg !5868
  br label %return, !dbg !5868

return:                                           ; preds = %for.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !5869
  ret i32 %11, !dbg !5869
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_enum_bitflag_identifiers(%struct.EnumPropertyItem* %item, i32 %value, i8** %r_identifier) #0 !dbg !5870 {
entry:
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %value.addr = alloca i32, align 4
  %r_identifier.addr = alloca i8**, align 8
  %index = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !5873, metadata !DIExpression()), !dbg !5874
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5875, metadata !DIExpression()), !dbg !5876
  store i8** %r_identifier, i8*** %r_identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %r_identifier.addr, metadata !5877, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5879, metadata !DIExpression()), !dbg !5880
  store i32 0, i32* %index, align 4, !dbg !5880
  br label %for.cond, !dbg !5881

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5882
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %0, i32 0, i32 1, !dbg !5885
  %1 = load i8*, i8** %identifier, align 8, !dbg !5885
  %tobool = icmp ne i8* %1, null, !dbg !5886
  br i1 %tobool, label %for.body, label %for.end, !dbg !5886

for.body:                                         ; preds = %for.cond
  %2 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5887
  %identifier1 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %2, i32 0, i32 1, !dbg !5890
  %3 = load i8*, i8** %identifier1, align 8, !dbg !5890
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !5887
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5887
  %conv = zext i8 %4 to i32, !dbg !5887
  %tobool2 = icmp ne i32 %conv, 0, !dbg !5887
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !5891

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5892
  %value3 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %5, i32 0, i32 0, !dbg !5893
  %6 = load i32, i32* %value3, align 8, !dbg !5893
  %7 = load i32, i32* %value.addr, align 4, !dbg !5894
  %and = and i32 %6, %7, !dbg !5895
  %tobool4 = icmp ne i32 %and, 0, !dbg !5895
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5896

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5897
  %identifier5 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %8, i32 0, i32 1, !dbg !5899
  %9 = load i8*, i8** %identifier5, align 8, !dbg !5899
  %10 = load i8**, i8*** %r_identifier.addr, align 8, !dbg !5900
  %11 = load i32, i32* %index, align 4, !dbg !5901
  %inc = add nsw i32 %11, 1, !dbg !5901
  store i32 %inc, i32* %index, align 4, !dbg !5901
  %idxprom = sext i32 %11 to i64, !dbg !5900
  %arrayidx6 = getelementptr inbounds i8*, i8** %10, i64 %idxprom, !dbg !5900
  store i8* %9, i8** %arrayidx6, align 8, !dbg !5902
  br label %if.end, !dbg !5903

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !5904

for.inc:                                          ; preds = %if.end
  %12 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5905
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %12, i32 1, !dbg !5905
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5905
  br label %for.cond, !dbg !5906, !llvm.loop !5907

for.end:                                          ; preds = %for.cond
  %13 = load i8**, i8*** %r_identifier.addr, align 8, !dbg !5909
  %14 = load i32, i32* %index, align 4, !dbg !5910
  %idxprom7 = sext i32 %14 to i64, !dbg !5909
  %arrayidx8 = getelementptr inbounds i8*, i8** %13, i64 %idxprom7, !dbg !5909
  store i8* null, i8** %arrayidx8, align 8, !dbg !5911
  %15 = load i32, i32* %index, align 4, !dbg !5912
  ret i32 %15, !dbg !5913
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_enum_name(%struct.EnumPropertyItem* %item, i32 %value, i8** %r_name) #0 !dbg !5914 {
entry:
  %retval = alloca i8, align 1
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %value.addr = alloca i32, align 4
  %r_name.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !5915, metadata !DIExpression()), !dbg !5916
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5917, metadata !DIExpression()), !dbg !5918
  store i8** %r_name, i8*** %r_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %r_name.addr, metadata !5919, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5921, metadata !DIExpression()), !dbg !5922
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5923
  %1 = load i32, i32* %value.addr, align 4, !dbg !5924
  %call = call i32 @RNA_enum_from_value(%struct.EnumPropertyItem* %0, i32 %1), !dbg !5925
  store i32 %call, i32* %i, align 4, !dbg !5922
  %2 = load i32, i32* %i, align 4, !dbg !5926
  %cmp = icmp ne i32 %2, -1, !dbg !5928
  br i1 %cmp, label %if.then, label %if.else, !dbg !5929

if.then:                                          ; preds = %entry
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5930
  %4 = load i32, i32* %i, align 4, !dbg !5932
  %idxprom = sext i32 %4 to i64, !dbg !5930
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %3, i64 %idxprom, !dbg !5930
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 3, !dbg !5933
  %5 = load i8*, i8** %name, align 8, !dbg !5933
  %6 = load i8**, i8*** %r_name.addr, align 8, !dbg !5934
  store i8* %5, i8** %6, align 8, !dbg !5935
  store i8 1, i8* %retval, align 1, !dbg !5936
  br label %return, !dbg !5936

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5937
  br label %return, !dbg !5937

return:                                           ; preds = %if.else, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !5939
  ret i8 %7, !dbg !5939
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_enum_description(%struct.EnumPropertyItem* %item, i32 %value, i8** %r_description) #0 !dbg !5940 {
entry:
  %retval = alloca i8, align 1
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %value.addr = alloca i32, align 4
  %r_description.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !5941, metadata !DIExpression()), !dbg !5942
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5943, metadata !DIExpression()), !dbg !5944
  store i8** %r_description, i8*** %r_description.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %r_description.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5947, metadata !DIExpression()), !dbg !5948
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5949
  %1 = load i32, i32* %value.addr, align 4, !dbg !5950
  %call = call i32 @RNA_enum_from_value(%struct.EnumPropertyItem* %0, i32 %1), !dbg !5951
  store i32 %call, i32* %i, align 4, !dbg !5948
  %2 = load i32, i32* %i, align 4, !dbg !5952
  %cmp = icmp ne i32 %2, -1, !dbg !5954
  br i1 %cmp, label %if.then, label %if.else, !dbg !5955

if.then:                                          ; preds = %entry
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !5956
  %4 = load i32, i32* %i, align 4, !dbg !5958
  %idxprom = sext i32 %4 to i64, !dbg !5956
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %3, i64 %idxprom, !dbg !5956
  %description = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 4, !dbg !5959
  %5 = load i8*, i8** %description, align 8, !dbg !5959
  %6 = load i8**, i8*** %r_description.addr, align 8, !dbg !5960
  store i8* %5, i8** %6, align 8, !dbg !5961
  store i8 1, i8* %retval, align 1, !dbg !5962
  br label %return, !dbg !5962

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5963
  br label %return, !dbg !5963

return:                                           ; preds = %if.else, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !5965
  ret i8 %7, !dbg !5965
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_enum_identifier(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %value, i8** %identifier) #0 !dbg !5966 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i32, align 4
  %identifier.addr = alloca i8**, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %result = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5969, metadata !DIExpression()), !dbg !5970
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5971, metadata !DIExpression()), !dbg !5972
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5973, metadata !DIExpression()), !dbg !5974
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5975, metadata !DIExpression()), !dbg !5976
  store i8** %identifier, i8*** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %identifier.addr, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !5979, metadata !DIExpression()), !dbg !5980
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !5980
  call void @llvm.dbg.declare(metadata i8* %free, metadata !5981, metadata !DIExpression()), !dbg !5982
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5983
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5984
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5985
  call void @RNA_property_enum_items(%struct.bContext* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !5986
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5987
  %tobool = icmp ne %struct.EnumPropertyItem* %3, null, !dbg !5987
  br i1 %tobool, label %if.then, label %if.end3, !dbg !5989

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5990, metadata !DIExpression()), !dbg !5992
  %4 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5993
  %5 = load i32, i32* %value.addr, align 4, !dbg !5994
  %6 = load i8**, i8*** %identifier.addr, align 8, !dbg !5995
  %call = call zeroext i8 @RNA_enum_identifier(%struct.EnumPropertyItem* %4, i32 %5, i8** %6), !dbg !5996
  store i8 %call, i8* %result, align 1, !dbg !5997
  %7 = load i8, i8* %free, align 1, !dbg !5998
  %tobool1 = icmp ne i8 %7, 0, !dbg !5998
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !6000

if.then2:                                         ; preds = %if.then
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6001
  %9 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !6002
  %10 = bitcast %struct.EnumPropertyItem* %9 to i8*, !dbg !6002
  call void %8(i8* %10), !dbg !6001
  br label %if.end, !dbg !6001

if.end:                                           ; preds = %if.then2, %if.then
  %11 = load i8, i8* %result, align 1, !dbg !6003
  store i8 %11, i8* %retval, align 1, !dbg !6004
  br label %return, !dbg !6004

if.end3:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6005
  br label %return, !dbg !6005

return:                                           ; preds = %if.end3, %if.end
  %12 = load i8, i8* %retval, align 1, !dbg !6006
  ret i8 %12, !dbg !6006
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_enum_name(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %value, i8** %name) #0 !dbg !6007 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i32, align 4
  %name.addr = alloca i8**, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %result = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6008, metadata !DIExpression()), !dbg !6009
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  store i8** %name, i8*** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %name.addr, metadata !6016, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !6018, metadata !DIExpression()), !dbg !6019
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !6019
  call void @llvm.dbg.declare(metadata i8* %free, metadata !6020, metadata !DIExpression()), !dbg !6021
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6022
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6023
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6024
  call void @RNA_property_enum_items(%struct.bContext* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !6025
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !6026
  %tobool = icmp ne %struct.EnumPropertyItem* %3, null, !dbg !6026
  br i1 %tobool, label %if.then, label %if.end3, !dbg !6028

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6029, metadata !DIExpression()), !dbg !6031
  %4 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !6032
  %5 = load i32, i32* %value.addr, align 4, !dbg !6033
  %6 = load i8**, i8*** %name.addr, align 8, !dbg !6034
  %call = call zeroext i8 @RNA_enum_name(%struct.EnumPropertyItem* %4, i32 %5, i8** %6), !dbg !6035
  store i8 %call, i8* %result, align 1, !dbg !6036
  %7 = load i8, i8* %free, align 1, !dbg !6037
  %tobool1 = icmp ne i8 %7, 0, !dbg !6037
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !6039

if.then2:                                         ; preds = %if.then
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6040
  %9 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !6041
  %10 = bitcast %struct.EnumPropertyItem* %9 to i8*, !dbg !6041
  call void %8(i8* %10), !dbg !6040
  br label %if.end, !dbg !6040

if.end:                                           ; preds = %if.then2, %if.then
  %11 = load i8, i8* %result, align 1, !dbg !6042
  store i8 %11, i8* %retval, align 1, !dbg !6043
  br label %return, !dbg !6043

if.end3:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6044
  br label %return, !dbg !6044

return:                                           ; preds = %if.end3, %if.end
  %12 = load i8, i8* %retval, align 1, !dbg !6045
  ret i8 %12, !dbg !6045
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_enum_name_gettexted(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %value, i8** %name) #0 !dbg !6046 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i32, align 4
  %name.addr = alloca i8**, align 8
  %result = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6047, metadata !DIExpression()), !dbg !6048
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6051, metadata !DIExpression()), !dbg !6052
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6053, metadata !DIExpression()), !dbg !6054
  store i8** %name, i8*** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %name.addr, metadata !6055, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6057, metadata !DIExpression()), !dbg !6058
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6059
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6060
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6061
  %3 = load i32, i32* %value.addr, align 4, !dbg !6062
  %4 = load i8**, i8*** %name.addr, align 8, !dbg !6063
  %call = call zeroext i8 @RNA_property_enum_name(%struct.bContext* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, i32 %3, i8** %4), !dbg !6064
  store i8 %call, i8* %result, align 1, !dbg !6065
  %5 = load i8, i8* %result, align 1, !dbg !6066
  %tobool = icmp ne i8 %5, 0, !dbg !6066
  br i1 %tobool, label %if.then, label %if.end8, !dbg !6068

if.then:                                          ; preds = %entry
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6069
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %6, i32 0, i32 4, !dbg !6072
  %7 = load i32, i32* %flag, align 8, !dbg !6072
  %and = and i32 %7, 536870912, !dbg !6073
  %tobool1 = icmp ne i32 %and, 0, !dbg !6073
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !6074

if.then2:                                         ; preds = %if.then
  %call3 = call zeroext i8 @BLF_translate_iface(), !dbg !6075
  %tobool4 = icmp ne i8 %call3, 0, !dbg !6075
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6078

if.then5:                                         ; preds = %if.then2
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6079
  %translation_context = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %8, i32 0, i32 8, !dbg !6081
  %9 = load i8*, i8** %translation_context, align 8, !dbg !6081
  %10 = load i8**, i8*** %name.addr, align 8, !dbg !6082
  %11 = load i8*, i8** %10, align 8, !dbg !6083
  %call6 = call i8* @BLF_pgettext(i8* %9, i8* %11), !dbg !6084
  %12 = load i8**, i8*** %name.addr, align 8, !dbg !6085
  store i8* %call6, i8** %12, align 8, !dbg !6086
  br label %if.end, !dbg !6087

if.end:                                           ; preds = %if.then5, %if.then2
  br label %if.end7, !dbg !6088

if.end7:                                          ; preds = %if.end, %if.then
  br label %if.end8, !dbg !6089

if.end8:                                          ; preds = %if.end7, %entry
  %13 = load i8, i8* %result, align 1, !dbg !6090
  ret i8 %13, !dbg !6091
}

declare dso_local zeroext i8 @BLF_translate_iface() #2

declare dso_local i8* @BLF_pgettext(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_enum_bitflag_identifiers(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %value, i8** %identifier) #0 !dbg !6092 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i32, align 4
  %identifier.addr = alloca i8**, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %result = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6095, metadata !DIExpression()), !dbg !6096
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6097, metadata !DIExpression()), !dbg !6098
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6099, metadata !DIExpression()), !dbg !6100
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6101, metadata !DIExpression()), !dbg !6102
  store i8** %identifier, i8*** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %identifier.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !6105, metadata !DIExpression()), !dbg !6106
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !6106
  call void @llvm.dbg.declare(metadata i8* %free, metadata !6107, metadata !DIExpression()), !dbg !6108
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6109
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6110
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6111
  call void @RNA_property_enum_items(%struct.bContext* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !6112
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !6113
  %tobool = icmp ne %struct.EnumPropertyItem* %3, null, !dbg !6113
  br i1 %tobool, label %if.then, label %if.end3, !dbg !6115

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6116, metadata !DIExpression()), !dbg !6118
  %4 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !6119
  %5 = load i32, i32* %value.addr, align 4, !dbg !6120
  %6 = load i8**, i8*** %identifier.addr, align 8, !dbg !6121
  %call = call i32 @RNA_enum_bitflag_identifiers(%struct.EnumPropertyItem* %4, i32 %5, i8** %6), !dbg !6122
  store i32 %call, i32* %result, align 4, !dbg !6123
  %7 = load i8, i8* %free, align 1, !dbg !6124
  %tobool1 = icmp ne i8 %7, 0, !dbg !6124
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !6126

if.then2:                                         ; preds = %if.then
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6127
  %9 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !6128
  %10 = bitcast %struct.EnumPropertyItem* %9 to i8*, !dbg !6128
  call void %8(i8* %10), !dbg !6127
  br label %if.end, !dbg !6127

if.end:                                           ; preds = %if.then2, %if.then
  %11 = load i32, i32* %result, align 4, !dbg !6129
  store i32 %11, i32* %retval, align 4, !dbg !6130
  br label %return, !dbg !6130

if.end3:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6131
  br label %return, !dbg !6131

return:                                           ; preds = %if.end3, %if.end
  %12 = load i32, i32* %retval, align 4, !dbg !6132
  ret i32 %12, !dbg !6132
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_ui_name(%struct.PropertyRNA* %prop) #0 !dbg !6133 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6134, metadata !DIExpression()), !dbg !6135
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6136
  %call = call i8* @rna_ensure_property_name(%struct.PropertyRNA* %0), !dbg !6136
  ret i8* %call, !dbg !6137
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_ensure_property_name(%struct.PropertyRNA* %prop) #0 !dbg !6138 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %name = alloca i8*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6139, metadata !DIExpression()), !dbg !6140
  call void @llvm.dbg.declare(metadata i8** %name, metadata !6141, metadata !DIExpression()), !dbg !6142
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6143
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !6145
  %1 = load i32, i32* %magic, align 8, !dbg !6145
  %cmp = icmp eq i32 %1, -1, !dbg !6146
  br i1 %cmp, label %if.then, label %if.else, !dbg !6147

if.then:                                          ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6148
  %name1 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 5, !dbg !6149
  %3 = load i8*, i8** %name1, align 8, !dbg !6149
  store i8* %3, i8** %name, align 8, !dbg !6150
  br label %if.end, !dbg !6151

if.else:                                          ; preds = %entry
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6152
  %5 = bitcast %struct.PropertyRNA* %4 to %struct.IDProperty*, !dbg !6153
  %name2 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 5, !dbg !6153
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name2, i64 0, i64 0, !dbg !6154
  store i8* %arraydecay, i8** %name, align 8, !dbg !6155
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8*, i8** %name, align 8, !dbg !6156
  ret i8* %6, !dbg !6157
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_ui_name_raw(%struct.PropertyRNA* %prop) #0 !dbg !6158 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6159, metadata !DIExpression()), !dbg !6160
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6161
  %call = call i8* @rna_ensure_property_name(%struct.PropertyRNA* %0), !dbg !6162
  ret i8* %call, !dbg !6163
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_ui_description(%struct.PropertyRNA* %prop) #0 !dbg !6164 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6165, metadata !DIExpression()), !dbg !6166
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6167
  %call = call i8* @rna_ensure_property_description(%struct.PropertyRNA* %0), !dbg !6167
  ret i8* %call, !dbg !6168
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_ui_description_raw(%struct.PropertyRNA* %prop) #0 !dbg !6169 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6170, metadata !DIExpression()), !dbg !6171
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6172
  %call = call i8* @rna_ensure_property_description(%struct.PropertyRNA* %0), !dbg !6173
  ret i8* %call, !dbg !6174
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_translation_context(%struct.PropertyRNA* %_prop) #0 !dbg !6175 {
entry:
  %_prop.addr = alloca %struct.PropertyRNA*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %_prop, %struct.PropertyRNA** %_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %_prop.addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6178, metadata !DIExpression()), !dbg !6179
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %_prop.addr, align 8, !dbg !6180
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !6181
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6179
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6182
  %translation_context = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 8, !dbg !6183
  %2 = load i8*, i8** %translation_context, align 8, !dbg !6183
  ret i8* %2, !dbg !6184
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_ui_icon(%struct.PropertyRNA* %prop) #0 !dbg !6185 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6188
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !6189
  %icon = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %call, i32 0, i32 7, !dbg !6190
  %1 = load i32, i32* %icon, align 8, !dbg !6190
  ret i32 %1, !dbg !6191
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_editable(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6192 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %id = alloca %struct.ID*, align 8
  %flag = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6193, metadata !DIExpression()), !dbg !6194
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6195, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !6197, metadata !DIExpression()), !dbg !6198
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6199
  %id1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !6200
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id1, i32 0, i32 0, !dbg !6201
  %1 = load i8*, i8** %data, align 8, !dbg !6201
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !6199
  store %struct.ID* %2, %struct.ID** %id, align 8, !dbg !6198
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !6202, metadata !DIExpression()), !dbg !6203
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6204
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %3), !dbg !6205
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6206
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6207
  %editable = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 17, !dbg !6208
  %5 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %editable, align 8, !dbg !6208
  %tobool = icmp ne i32 (%struct.PointerRNA*)* %5, null, !dbg !6207
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6207

cond.true:                                        ; preds = %entry
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6209
  %editable2 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %6, i32 0, i32 17, !dbg !6210
  %7 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %editable2, align 8, !dbg !6210
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6211
  %call3 = call i32 %7(%struct.PointerRNA* %8), !dbg !6209
  br label %cond.end, !dbg !6207

cond.false:                                       ; preds = %entry
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6212
  %flag4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %9, i32 0, i32 4, !dbg !6213
  %10 = load i32, i32* %flag4, align 8, !dbg !6213
  br label %cond.end, !dbg !6207

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ %10, %cond.false ], !dbg !6207
  store i32 %cond, i32* %flag, align 4, !dbg !6214
  %11 = load i32, i32* %flag, align 4, !dbg !6215
  %and = and i32 %11, 1, !dbg !6216
  %tobool5 = icmp ne i32 %and, 0, !dbg !6216
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !6217

land.rhs:                                         ; preds = %cond.end
  %12 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6218
  %tobool6 = icmp ne %struct.ID* %12, null, !dbg !6218
  br i1 %tobool6, label %lor.lhs.false, label %lor.end, !dbg !6219

lor.lhs.false:                                    ; preds = %land.rhs
  %13 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6220
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %13, i32 0, i32 3, !dbg !6221
  %14 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !6221
  %tobool7 = icmp ne %struct.Library* %14, null, !dbg !6220
  br i1 %tobool7, label %lor.rhs, label %lor.end, !dbg !6222

lor.rhs:                                          ; preds = %lor.lhs.false
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6223
  %flag8 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %15, i32 0, i32 4, !dbg !6224
  %16 = load i32, i32* %flag8, align 8, !dbg !6224
  %and9 = and i32 %16, 65536, !dbg !6225
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6222
  br label %lor.end, !dbg !6222

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %17 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %tobool10, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %cond.end
  %18 = phi i1 [ false, %cond.end ], [ %17, %lor.end ], !dbg !6226
  %land.ext = zext i1 %18 to i32, !dbg !6217
  %conv = trunc i32 %land.ext to i8, !dbg !6227
  ret i8 %conv, !dbg !6228
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_editable_flag(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6229 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %flag = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6230, metadata !DIExpression()), !dbg !6231
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6232, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !6234, metadata !DIExpression()), !dbg !6235
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6236
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !6237
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6238
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6239
  %editable = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 17, !dbg !6240
  %2 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %editable, align 8, !dbg !6240
  %tobool = icmp ne i32 (%struct.PointerRNA*)* %2, null, !dbg !6239
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6239

cond.true:                                        ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6241
  %editable1 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 17, !dbg !6242
  %4 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %editable1, align 8, !dbg !6242
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6243
  %call2 = call i32 %4(%struct.PointerRNA* %5), !dbg !6241
  br label %cond.end, !dbg !6239

cond.false:                                       ; preds = %entry
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6244
  %flag3 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %6, i32 0, i32 4, !dbg !6245
  %7 = load i32, i32* %flag3, align 8, !dbg !6245
  br label %cond.end, !dbg !6239

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call2, %cond.true ], [ %7, %cond.false ], !dbg !6239
  store i32 %cond, i32* %flag, align 4, !dbg !6246
  %8 = load i32, i32* %flag, align 4, !dbg !6247
  %and = and i32 %8, 1, !dbg !6248
  %cmp = icmp ne i32 %and, 0, !dbg !6249
  %conv = zext i1 %cmp to i32, !dbg !6249
  %conv4 = trunc i32 %conv to i8, !dbg !6250
  ret i8 %conv4, !dbg !6251
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_editable_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !6252 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %id = alloca %struct.ID*, align 8
  %flag = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6255, metadata !DIExpression()), !dbg !6256
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6257, metadata !DIExpression()), !dbg !6258
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !6261, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !6263, metadata !DIExpression()), !dbg !6264
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6265
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !6266
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6267
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6268
  %flag1 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 4, !dbg !6269
  %2 = load i32, i32* %flag1, align 8, !dbg !6269
  store i32 %2, i32* %flag, align 4, !dbg !6270
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6271
  %editable = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 17, !dbg !6273
  %4 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %editable, align 8, !dbg !6273
  %tobool = icmp ne i32 (%struct.PointerRNA*)* %4, null, !dbg !6271
  br i1 %tobool, label %if.then, label %if.end, !dbg !6274

if.then:                                          ; preds = %entry
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6275
  %editable2 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %5, i32 0, i32 17, !dbg !6276
  %6 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %editable2, align 8, !dbg !6276
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6277
  %call3 = call i32 %6(%struct.PointerRNA* %7), !dbg !6275
  %8 = load i32, i32* %flag, align 4, !dbg !6278
  %and = and i32 %8, %call3, !dbg !6278
  store i32 %and, i32* %flag, align 4, !dbg !6278
  br label %if.end, !dbg !6279

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6280
  %itemeditable = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %9, i32 0, i32 18, !dbg !6282
  %10 = load i32 (%struct.PointerRNA*, i32)*, i32 (%struct.PointerRNA*, i32)** %itemeditable, align 8, !dbg !6282
  %tobool4 = icmp ne i32 (%struct.PointerRNA*, i32)* %10, null, !dbg !6280
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !6283

if.then5:                                         ; preds = %if.end
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6284
  %itemeditable6 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %11, i32 0, i32 18, !dbg !6285
  %12 = load i32 (%struct.PointerRNA*, i32)*, i32 (%struct.PointerRNA*, i32)** %itemeditable6, align 8, !dbg !6285
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6286
  %14 = load i32, i32* %index.addr, align 4, !dbg !6287
  %call7 = call i32 %12(%struct.PointerRNA* %13, i32 %14), !dbg !6284
  %15 = load i32, i32* %flag, align 4, !dbg !6288
  %and8 = and i32 %15, %call7, !dbg !6288
  store i32 %and8, i32* %flag, align 4, !dbg !6288
  br label %if.end9, !dbg !6289

if.end9:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6290
  %id10 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %16, i32 0, i32 0, !dbg !6291
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id10, i32 0, i32 0, !dbg !6292
  %17 = load i8*, i8** %data, align 8, !dbg !6292
  %18 = bitcast i8* %17 to %struct.ID*, !dbg !6290
  store %struct.ID* %18, %struct.ID** %id, align 8, !dbg !6293
  %19 = load i32, i32* %flag, align 4, !dbg !6294
  %and11 = and i32 %19, 1, !dbg !6295
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6295
  br i1 %tobool12, label %land.rhs, label %land.end, !dbg !6296

land.rhs:                                         ; preds = %if.end9
  %20 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6297
  %tobool13 = icmp ne %struct.ID* %20, null, !dbg !6297
  br i1 %tobool13, label %lor.lhs.false, label %lor.end, !dbg !6298

lor.lhs.false:                                    ; preds = %land.rhs
  %21 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6299
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %21, i32 0, i32 3, !dbg !6300
  %22 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !6300
  %tobool14 = icmp ne %struct.Library* %22, null, !dbg !6299
  br i1 %tobool14, label %lor.rhs, label %lor.end, !dbg !6301

lor.rhs:                                          ; preds = %lor.lhs.false
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6302
  %flag15 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %23, i32 0, i32 4, !dbg !6303
  %24 = load i32, i32* %flag15, align 8, !dbg !6303
  %and16 = and i32 %24, 65536, !dbg !6304
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6301
  br label %lor.end, !dbg !6301

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.rhs
  %25 = phi i1 [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %tobool17, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.end9
  %26 = phi i1 [ false, %if.end9 ], [ %25, %lor.end ], !dbg !6305
  %land.ext = zext i1 %26 to i32, !dbg !6296
  %conv = trunc i32 %land.ext to i8, !dbg !6306
  ret i8 %conv, !dbg !6307
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_animateable(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6308 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6313
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !6315
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6316
  %1 = load i8*, i8** %data, align 8, !dbg !6316
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !6313
  %call = call zeroext i8 @id_type_can_have_animdata(%struct.ID* %2), !dbg !6317
  %tobool = icmp ne i8 %call, 0, !dbg !6317
  br i1 %tobool, label %if.end, label %if.then, !dbg !6318

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6319
  br label %return, !dbg !6319

if.end:                                           ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6320
  %call1 = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %3), !dbg !6321
  store %struct.PropertyRNA* %call1, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6322
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6323
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 4, !dbg !6325
  %5 = load i32, i32* %flag, align 8, !dbg !6325
  %and = and i32 %5, 2, !dbg !6326
  %tobool2 = icmp ne i32 %and, 0, !dbg !6326
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6327

if.then3:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !6328
  br label %return, !dbg !6328

if.end4:                                          ; preds = %if.end
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6329
  %flag5 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %6, i32 0, i32 4, !dbg !6330
  %7 = load i32, i32* %flag5, align 8, !dbg !6330
  %and6 = and i32 %7, 1, !dbg !6331
  %cmp = icmp ne i32 %and6, 0, !dbg !6332
  %conv = zext i1 %cmp to i32, !dbg !6332
  %conv7 = trunc i32 %conv to i8, !dbg !6333
  store i8 %conv7, i8* %retval, align 1, !dbg !6334
  br label %return, !dbg !6334

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !6335
  ret i8 %8, !dbg !6335
}

declare dso_local zeroext i8 @id_type_can_have_animdata(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_animated(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6336 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %len = alloca i32, align 4
  %index = alloca i32, align 4
  %driven = alloca i8, align 1
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6341, metadata !DIExpression()), !dbg !6342
  store i32 1, i32* %len, align 4, !dbg !6342
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6343, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.declare(metadata i8* %driven, metadata !6345, metadata !DIExpression()), !dbg !6346
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6347
  %tobool = icmp ne %struct.PropertyRNA* %0, null, !dbg !6347
  br i1 %tobool, label %if.end, label %if.then, !dbg !6349

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6350
  br label %return, !dbg !6350

if.end:                                           ; preds = %entry
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6351
  %call = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %1), !dbg !6353
  %tobool1 = icmp ne i8 %call, 0, !dbg !6353
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !6354

if.then2:                                         ; preds = %if.end
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6355
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6356
  %call3 = call i32 @RNA_property_array_length(%struct.PointerRNA* %2, %struct.PropertyRNA* %3), !dbg !6357
  store i32 %call3, i32* %len, align 4, !dbg !6358
  br label %if.end4, !dbg !6359

if.end4:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %index, align 4, !dbg !6360
  br label %for.cond, !dbg !6362

for.cond:                                         ; preds = %for.inc, %if.end4
  %4 = load i32, i32* %index, align 4, !dbg !6363
  %5 = load i32, i32* %len, align 4, !dbg !6365
  %cmp = icmp slt i32 %4, %5, !dbg !6366
  br i1 %cmp, label %for.body, label %for.end, !dbg !6367

for.body:                                         ; preds = %for.cond
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6368
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6370
  %8 = load i32, i32* %index, align 4, !dbg !6371
  %call5 = call %struct.FCurve* @rna_get_fcurve(%struct.PointerRNA* %6, %struct.PropertyRNA* %7, i32 %8, %struct.bAction** null, i8* %driven), !dbg !6372
  %tobool6 = icmp ne %struct.FCurve* %call5, null, !dbg !6372
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6373

if.then7:                                         ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !6374
  br label %return, !dbg !6374

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !6375

for.inc:                                          ; preds = %if.end8
  %9 = load i32, i32* %index, align 4, !dbg !6376
  %inc = add nsw i32 %9, 1, !dbg !6376
  store i32 %inc, i32* %index, align 4, !dbg !6376
  br label %for.cond, !dbg !6377, !llvm.loop !6378

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !6380
  br label %return, !dbg !6380

return:                                           ; preds = %for.end, %if.then7, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !6381
  ret i8 %10, !dbg !6381
}

declare dso_local %struct.FCurve* @rna_get_fcurve(%struct.PointerRNA*, %struct.PropertyRNA*, i32, %struct.bAction**, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_path_from_ID_check(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6382 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %path = alloca i8*, align 8
  %ret = alloca i8, align 1
  %id_ptr = alloca %struct.PointerRNA, align 8
  %r_ptr = alloca %struct.PointerRNA, align 8
  %r_prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6383, metadata !DIExpression()), !dbg !6384
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.declare(metadata i8** %path, metadata !6387, metadata !DIExpression()), !dbg !6388
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6389
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6390
  %call = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !6391
  store i8* %call, i8** %path, align 8, !dbg !6388
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !6392, metadata !DIExpression()), !dbg !6393
  store i8 0, i8* %ret, align 1, !dbg !6393
  %2 = load i8*, i8** %path, align 8, !dbg !6394
  %tobool = icmp ne i8* %2, null, !dbg !6394
  br i1 %tobool, label %if.then, label %if.end7, !dbg !6396

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %id_ptr, metadata !6397, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %r_ptr, metadata !6400, metadata !DIExpression()), !dbg !6401
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %r_prop, metadata !6402, metadata !DIExpression()), !dbg !6403
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6404
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 0, !dbg !6405
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6406
  %4 = load i8*, i8** %data, align 8, !dbg !6406
  %5 = bitcast i8* %4 to %struct.ID*, !dbg !6404
  call void @RNA_id_pointer_create(%struct.ID* %5, %struct.PointerRNA* %id_ptr), !dbg !6407
  %6 = load i8*, i8** %path, align 8, !dbg !6408
  %call1 = call zeroext i8 @RNA_path_resolve(%struct.PointerRNA* %id_ptr, i8* %6, %struct.PointerRNA* %r_ptr, %struct.PropertyRNA** %r_prop), !dbg !6410
  %conv = zext i8 %call1 to i32, !dbg !6410
  %cmp = icmp eq i32 %conv, 1, !dbg !6411
  br i1 %cmp, label %if.then3, label %if.end, !dbg !6412

if.then3:                                         ; preds = %if.then
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6413
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %r_prop, align 8, !dbg !6415
  %cmp4 = icmp eq %struct.PropertyRNA* %7, %8, !dbg !6416
  %conv5 = zext i1 %cmp4 to i32, !dbg !6416
  %conv6 = trunc i32 %conv5 to i8, !dbg !6417
  store i8 %conv6, i8* %ret, align 1, !dbg !6418
  br label %if.end, !dbg !6419

if.end:                                           ; preds = %if.then3, %if.then
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6420
  %10 = load i8*, i8** %path, align 8, !dbg !6421
  call void %9(i8* %10), !dbg !6420
  br label %if.end7, !dbg !6422

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i8, i8* %ret, align 1, !dbg !6423
  ret i8 %11, !dbg !6424
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6425 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %is_rna = alloca i8, align 1
  %propname = alloca i8*, align 8
  %ptrpath = alloca i8*, align 8
  %path = alloca i8*, align 8
  %propname_esc = alloca [128 x i8], align 16
  %propname_esc22 = alloca [128 x i8], align 16
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6428, metadata !DIExpression()), !dbg !6429
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6430, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.declare(metadata i8* %is_rna, metadata !6432, metadata !DIExpression()), !dbg !6434
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6435
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !6436
  %1 = load i32, i32* %magic, align 8, !dbg !6436
  %cmp = icmp eq i32 %1, -1, !dbg !6437
  %conv = zext i1 %cmp to i32, !dbg !6437
  %conv1 = trunc i32 %conv to i8, !dbg !6438
  store i8 %conv1, i8* %is_rna, align 1, !dbg !6434
  call void @llvm.dbg.declare(metadata i8** %propname, metadata !6439, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.declare(metadata i8** %ptrpath, metadata !6441, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.declare(metadata i8** %path, metadata !6443, metadata !DIExpression()), !dbg !6444
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6445
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 0, !dbg !6447
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6448
  %3 = load i8*, i8** %data, align 8, !dbg !6448
  %tobool = icmp ne i8* %3, null, !dbg !6445
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6449

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6450
  %data2 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 2, !dbg !6451
  %5 = load i8*, i8** %data2, align 8, !dbg !6451
  %tobool3 = icmp ne i8* %5, null, !dbg !6450
  br i1 %tobool3, label %if.end, label %if.then, !dbg !6452

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !6453
  br label %return, !dbg !6453

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6454
  %call = call i8* @RNA_path_from_ID_to_struct(%struct.PointerRNA* %6), !dbg !6455
  store i8* %call, i8** %ptrpath, align 8, !dbg !6456
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6457
  %call4 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %7), !dbg !6458
  store i8* %call4, i8** %propname, align 8, !dbg !6459
  %8 = load i8*, i8** %ptrpath, align 8, !dbg !6460
  %tobool5 = icmp ne i8* %8, null, !dbg !6460
  br i1 %tobool5, label %if.then6, label %if.else14, !dbg !6462

if.then6:                                         ; preds = %if.end
  %9 = load i8, i8* %is_rna, align 1, !dbg !6463
  %tobool7 = icmp ne i8 %9, 0, !dbg !6463
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !6466

if.then8:                                         ; preds = %if.then6
  %10 = load i8*, i8** %ptrpath, align 8, !dbg !6467
  %11 = load i8*, i8** %propname, align 8, !dbg !6469
  %call9 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i8* %10, i8* %11), !dbg !6470
  store i8* %call9, i8** %path, align 8, !dbg !6471
  br label %if.end13, !dbg !6472

if.else:                                          ; preds = %if.then6
  call void @llvm.dbg.declare(metadata [128 x i8]* %propname_esc, metadata !6473, metadata !DIExpression()), !dbg !6475
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %propname_esc, i64 0, i64 0, !dbg !6476
  %12 = load i8*, i8** %propname, align 8, !dbg !6477
  %call10 = call i64 @BLI_strescape(i8* %arraydecay, i8* %12, i64 128), !dbg !6478
  %13 = load i8*, i8** %ptrpath, align 8, !dbg !6479
  %arraydecay11 = getelementptr inbounds [128 x i8], [128 x i8]* %propname_esc, i64 0, i64 0, !dbg !6480
  %call12 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i8* %13, i8* %arraydecay11), !dbg !6481
  store i8* %call12, i8** %path, align 8, !dbg !6482
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then8
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6483
  %15 = load i8*, i8** %ptrpath, align 8, !dbg !6484
  call void %14(i8* %15), !dbg !6483
  br label %if.end30, !dbg !6485

if.else14:                                        ; preds = %if.end
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6486
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %16, i32 0, i32 1, !dbg !6488
  %17 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !6488
  %call15 = call zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %17), !dbg !6489
  %tobool16 = icmp ne i8 %call15, 0, !dbg !6489
  br i1 %tobool16, label %if.then17, label %if.else28, !dbg !6490

if.then17:                                        ; preds = %if.else14
  %18 = load i8, i8* %is_rna, align 1, !dbg !6491
  %tobool18 = icmp ne i8 %18, 0, !dbg !6491
  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !6494

if.then19:                                        ; preds = %if.then17
  %19 = load i8*, i8** %propname, align 8, !dbg !6495
  %call20 = call i8* @BLI_strdup(i8* %19), !dbg !6497
  store i8* %call20, i8** %path, align 8, !dbg !6498
  br label %if.end27, !dbg !6499

if.else21:                                        ; preds = %if.then17
  call void @llvm.dbg.declare(metadata [128 x i8]* %propname_esc22, metadata !6500, metadata !DIExpression()), !dbg !6502
  %arraydecay23 = getelementptr inbounds [128 x i8], [128 x i8]* %propname_esc22, i64 0, i64 0, !dbg !6503
  %20 = load i8*, i8** %propname, align 8, !dbg !6504
  %call24 = call i64 @BLI_strescape(i8* %arraydecay23, i8* %20, i64 128), !dbg !6505
  %arraydecay25 = getelementptr inbounds [128 x i8], [128 x i8]* %propname_esc22, i64 0, i64 0, !dbg !6506
  %call26 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i8* %arraydecay25), !dbg !6507
  store i8* %call26, i8** %path, align 8, !dbg !6508
  br label %if.end27

if.end27:                                         ; preds = %if.else21, %if.then19
  br label %if.end29, !dbg !6509

if.else28:                                        ; preds = %if.else14
  store i8* null, i8** %path, align 8, !dbg !6510
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.end27
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end13
  %21 = load i8*, i8** %path, align 8, !dbg !6512
  store i8* %21, i8** %retval, align 8, !dbg !6513
  br label %return, !dbg !6513

return:                                           ; preds = %if.end30, %if.then
  %22 = load i8*, i8** %retval, align 8, !dbg !6514
  ret i8* %22, !dbg !6514
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_update_check(%struct.PropertyRNA* %prop) #0 !dbg !6515 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6516, metadata !DIExpression()), !dbg !6517
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6518
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !6519
  %1 = load i32, i32* %magic, align 8, !dbg !6519
  %cmp = icmp ne i32 %1, -1, !dbg !6520
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !6521

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6522
  %update = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 15, !dbg !6523
  %3 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %update, align 8, !dbg !6523
  %tobool = icmp ne void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %3, null, !dbg !6522
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6524

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6525
  %noteflag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 16, !dbg !6526
  %5 = load i32, i32* %noteflag, align 8, !dbg !6526
  %tobool1 = icmp ne i32 %5, 0, !dbg !6524
  br label %lor.end, !dbg !6524

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool1, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !6524
  %conv = trunc i32 %lor.ext to i8, !dbg !6527
  ret i8 %conv, !dbg !6528
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_update(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6529 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6534, metadata !DIExpression()), !dbg !6535
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6536, metadata !DIExpression()), !dbg !6537
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6538
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6539
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %1), !dbg !6540
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6541
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %2), !dbg !6542
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6543
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6544
  call void @rna_property_update(%struct.bContext* %0, %struct.Main* %call, %struct.Scene* %call1, %struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !6545
  ret void, !dbg !6546
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_property_update(%struct.bContext* %C, %struct.Main* %bmain, %struct.Scene* %scene, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6547 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %is_rna = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6554, metadata !DIExpression()), !dbg !6555
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !6556, metadata !DIExpression()), !dbg !6557
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6558, metadata !DIExpression()), !dbg !6559
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6560, metadata !DIExpression()), !dbg !6561
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata i8* %is_rna, metadata !6564, metadata !DIExpression()), !dbg !6565
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6566
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !6567
  %1 = load i32, i32* %magic, align 8, !dbg !6567
  %cmp = icmp eq i32 %1, -1, !dbg !6568
  %conv = zext i1 %cmp to i32, !dbg !6568
  %conv1 = trunc i32 %conv to i8, !dbg !6569
  store i8 %conv1, i8* %is_rna, align 1, !dbg !6565
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6570
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %2), !dbg !6571
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6572
  %3 = load i8, i8* %is_rna, align 1, !dbg !6573
  %tobool = icmp ne i8 %3, 0, !dbg !6573
  br i1 %tobool, label %if.then, label %if.end23, !dbg !6575

if.then:                                          ; preds = %entry
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6576
  %update = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 15, !dbg !6579
  %5 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %update, align 8, !dbg !6579
  %tobool2 = icmp ne void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %5, null, !dbg !6576
  br i1 %tobool2, label %if.then3, label %if.end18, !dbg !6580

if.then3:                                         ; preds = %if.then
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6581
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %6, i32 0, i32 4, !dbg !6584
  %7 = load i32, i32* %flag, align 8, !dbg !6584
  %and = and i32 %7, 4194304, !dbg !6585
  %tobool4 = icmp ne i32 %and, 0, !dbg !6585
  br i1 %tobool4, label %if.then5, label %if.else15, !dbg !6586

if.then5:                                         ; preds = %if.then3
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6587
  %tobool6 = icmp ne %struct.bContext* %8, null, !dbg !6587
  br i1 %tobool6, label %if.then7, label %if.end14, !dbg !6590

if.then7:                                         ; preds = %if.then5
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6591
  %flag8 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %9, i32 0, i32 4, !dbg !6594
  %10 = load i32, i32* %flag8, align 8, !dbg !6594
  %and9 = and i32 %10, 138412032, !dbg !6595
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6595
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !6596

if.then11:                                        ; preds = %if.then7
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6597
  %update12 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %11, i32 0, i32 15, !dbg !6599
  %12 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %update12, align 8, !dbg !6599
  %13 = bitcast void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %12 to void (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*)*, !dbg !6600
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6601
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6602
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6603
  call void %13(%struct.bContext* %14, %struct.PointerRNA* %15, %struct.PropertyRNA* %16), !dbg !6604
  br label %if.end, !dbg !6605

if.else:                                          ; preds = %if.then7
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6606
  %update13 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %17, i32 0, i32 15, !dbg !6608
  %18 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %update13, align 8, !dbg !6608
  %19 = bitcast void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %18 to void (%struct.bContext*, %struct.PointerRNA*)*, !dbg !6609
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6610
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6611
  call void %19(%struct.bContext* %20, %struct.PointerRNA* %21), !dbg !6612
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %if.end14, !dbg !6613

if.end14:                                         ; preds = %if.end, %if.then5
  br label %if.end17, !dbg !6614

if.else15:                                        ; preds = %if.then3
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6615
  %update16 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %22, i32 0, i32 15, !dbg !6616
  %23 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %update16, align 8, !dbg !6616
  %24 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6617
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6618
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6619
  call void %23(%struct.Main* %24, %struct.Scene* %25, %struct.PointerRNA* %26), !dbg !6615
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.end14
  br label %if.end18, !dbg !6620

if.end18:                                         ; preds = %if.end17, %if.then
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6621
  %noteflag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %27, i32 0, i32 16, !dbg !6623
  %28 = load i32, i32* %noteflag, align 8, !dbg !6623
  %tobool19 = icmp ne i32 %28, 0, !dbg !6621
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !6624

if.then20:                                        ; preds = %if.end18
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6625
  %noteflag21 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %29, i32 0, i32 16, !dbg !6626
  %30 = load i32, i32* %noteflag21, align 8, !dbg !6626
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6627
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %31, i32 0, i32 0, !dbg !6628
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6629
  %32 = load i8*, i8** %data, align 8, !dbg !6629
  call void @WM_main_add_notifier(i32 %30, i8* %32), !dbg !6630
  br label %if.end22, !dbg !6630

if.end22:                                         ; preds = %if.then20, %if.end18
  br label %if.end23, !dbg !6631

if.end23:                                         ; preds = %if.end22, %entry
  %33 = load i8, i8* %is_rna, align 1, !dbg !6632
  %tobool24 = icmp ne i8 %33, 0, !dbg !6632
  br i1 %tobool24, label %lor.lhs.false, label %if.then28, !dbg !6634

lor.lhs.false:                                    ; preds = %if.end23
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6635
  %flag25 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %34, i32 0, i32 4, !dbg !6636
  %35 = load i32, i32* %flag25, align 8, !dbg !6636
  %and26 = and i32 %35, 1024, !dbg !6637
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6637
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !6638

if.then28:                                        ; preds = %lor.lhs.false, %if.end23
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6639
  %id29 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %36, i32 0, i32 0, !dbg !6641
  %data30 = getelementptr inbounds %struct.anon, %struct.anon* %id29, i32 0, i32 0, !dbg !6642
  %37 = load i8*, i8** %data30, align 8, !dbg !6642
  %38 = bitcast i8* %37 to %struct.ID*, !dbg !6639
  call void @DAG_id_tag_update(%struct.ID* %38, i16 signext 7), !dbg !6643
  call void @WM_main_add_notifier(i32 33554432, i8* null), !dbg !6644
  br label %if.end31, !dbg !6645

if.end31:                                         ; preds = %if.then28, %lor.lhs.false
  ret void, !dbg !6646
}

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_update_main(%struct.Main* %bmain, %struct.Scene* %scene, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6647 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !6650, metadata !DIExpression()), !dbg !6651
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6652, metadata !DIExpression()), !dbg !6653
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6654, metadata !DIExpression()), !dbg !6655
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6656, metadata !DIExpression()), !dbg !6657
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6658
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6659
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6660
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6661
  call void @rna_property_update(%struct.bContext* null, %struct.Main* %0, %struct.Scene* %1, %struct.PointerRNA* %2, %struct.PropertyRNA* %3), !dbg !6662
  ret void, !dbg !6663
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_update_cache_add(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6664 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %is_rna = alloca i8, align 1
  %uce = alloca %struct.tRnaUpdateCacheElem*, align 8
  %fn = alloca void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, align 8
  %ld = alloca %struct.LinkData*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6667, metadata !DIExpression()), !dbg !6668
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6669, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.declare(metadata i8* %is_rna, metadata !6671, metadata !DIExpression()), !dbg !6672
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6673
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !6674
  %1 = load i32, i32* %magic, align 8, !dbg !6674
  %cmp = icmp eq i32 %1, -1, !dbg !6675
  %conv = zext i1 %cmp to i32, !dbg !6675
  %conv1 = trunc i32 %conv to i8, !dbg !6676
  store i8 %conv1, i8* %is_rna, align 1, !dbg !6672
  call void @llvm.dbg.declare(metadata %struct.tRnaUpdateCacheElem** %uce, metadata !6677, metadata !DIExpression()), !dbg !6678
  store %struct.tRnaUpdateCacheElem* null, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6678
  call void @llvm.dbg.declare(metadata void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %fn, metadata !6679, metadata !DIExpression()), !dbg !6680
  store void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %fn, align 8, !dbg !6680
  call void @llvm.dbg.declare(metadata %struct.LinkData** %ld, metadata !6681, metadata !DIExpression()), !dbg !6690
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6691
  %cmp2 = icmp eq %struct.PointerRNA* null, %2, !dbg !6693
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6694

if.then:                                          ; preds = %entry
  br label %return, !dbg !6695

if.end:                                           ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6696
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %3), !dbg !6697
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6698
  %4 = load i8, i8* %is_rna, align 1, !dbg !6699
  %conv4 = zext i8 %4 to i32, !dbg !6699
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !6701
  br i1 %cmp5, label %if.then10, label %lor.lhs.false, !dbg !6702

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6703
  %update = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %5, i32 0, i32 15, !dbg !6704
  %6 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %update, align 8, !dbg !6704
  %cmp7 = icmp eq void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %6, null, !dbg !6705
  br i1 %cmp7, label %if.then10, label %lor.lhs.false9, !dbg !6706

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6707
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %7, i32 0, i32 4, !dbg !6708
  %8 = load i32, i32* %flag, align 8, !dbg !6708
  %and = and i32 %8, 4194304, !dbg !6709
  %tobool = icmp ne i32 %and, 0, !dbg !6709
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !6710

if.then10:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %if.end
  br label %return, !dbg !6711

if.end11:                                         ; preds = %lor.lhs.false9
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6712
  %update12 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %9, i32 0, i32 15, !dbg !6713
  %10 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %update12, align 8, !dbg !6713
  store void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %10, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %fn, align 8, !dbg !6714
  %11 = load i8*, i8** getelementptr inbounds (%struct.ListBase, %struct.ListBase* @rna_updates_cache, i32 0, i32 0), align 8, !dbg !6715
  %12 = bitcast i8* %11 to %struct.tRnaUpdateCacheElem*, !dbg !6717
  store %struct.tRnaUpdateCacheElem* %12, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6718
  br label %for.cond, !dbg !6719

for.cond:                                         ; preds = %for.inc, %if.end11
  %13 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6720
  %tobool13 = icmp ne %struct.tRnaUpdateCacheElem* %13, null, !dbg !6722
  br i1 %tobool13, label %for.body, label %for.end, !dbg !6722

for.body:                                         ; preds = %for.cond
  %14 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6723
  %ptr14 = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %14, i32 0, i32 2, !dbg !6726
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr14, i32 0, i32 0, !dbg !6727
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6728
  %15 = load i8*, i8** %data, align 8, !dbg !6728
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6729
  %id15 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %16, i32 0, i32 0, !dbg !6730
  %data16 = getelementptr inbounds %struct.anon, %struct.anon* %id15, i32 0, i32 0, !dbg !6731
  %17 = load i8*, i8** %data16, align 8, !dbg !6731
  %cmp17 = icmp eq i8* %15, %17, !dbg !6732
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !6733

if.then19:                                        ; preds = %for.body
  br label %for.end, !dbg !6734

if.end20:                                         ; preds = %for.body
  br label %for.inc, !dbg !6735

for.inc:                                          ; preds = %if.end20
  %18 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6736
  %next = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %18, i32 0, i32 0, !dbg !6737
  %19 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %next, align 8, !dbg !6737
  store %struct.tRnaUpdateCacheElem* %19, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6738
  br label %for.cond, !dbg !6739, !llvm.loop !6740

for.end:                                          ; preds = %if.then19, %for.cond
  %20 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6742
  %cmp21 = icmp eq %struct.tRnaUpdateCacheElem* %20, null, !dbg !6744
  br i1 %cmp21, label %if.then23, label %if.end29, !dbg !6745

if.then23:                                        ; preds = %for.end
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6746
  %call24 = call i8* %21(i64 56, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0)), !dbg !6746
  %22 = bitcast i8* %call24 to %struct.tRnaUpdateCacheElem*, !dbg !6746
  store %struct.tRnaUpdateCacheElem* %22, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6748
  %23 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6749
  %24 = bitcast %struct.tRnaUpdateCacheElem* %23 to i8*, !dbg !6749
  call void @BLI_addtail(%struct.ListBase* @rna_updates_cache, i8* %24), !dbg !6750
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6751
  %id25 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %25, i32 0, i32 0, !dbg !6752
  %data26 = getelementptr inbounds %struct.anon, %struct.anon* %id25, i32 0, i32 0, !dbg !6753
  %26 = load i8*, i8** %data26, align 8, !dbg !6753
  %27 = bitcast i8* %26 to %struct.ID*, !dbg !6751
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6754
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %28, i32 0, i32 1, !dbg !6755
  %29 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !6755
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6756
  %data27 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %30, i32 0, i32 2, !dbg !6757
  %31 = load i8*, i8** %data27, align 8, !dbg !6757
  %32 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6758
  %ptr28 = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %32, i32 0, i32 2, !dbg !6759
  call void @RNA_pointer_create(%struct.ID* %27, %struct.StructRNA* %29, i8* %31, %struct.PointerRNA* %ptr28), !dbg !6760
  br label %if.end29, !dbg !6761

if.end29:                                         ; preds = %if.then23, %for.end
  %33 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6762
  %L2Funcs = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %33, i32 0, i32 3, !dbg !6764
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %L2Funcs, i32 0, i32 0, !dbg !6765
  %34 = load i8*, i8** %first, align 8, !dbg !6765
  %35 = bitcast i8* %34 to %struct.LinkData*, !dbg !6762
  store %struct.LinkData* %35, %struct.LinkData** %ld, align 8, !dbg !6766
  br label %for.cond30, !dbg !6767

for.cond30:                                       ; preds = %for.inc38, %if.end29
  %36 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !6768
  %tobool31 = icmp ne %struct.LinkData* %36, null, !dbg !6770
  br i1 %tobool31, label %for.body32, label %for.end40, !dbg !6770

for.body32:                                       ; preds = %for.cond30
  %37 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %fn, align 8, !dbg !6771
  %38 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !6774
  %data33 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %38, i32 0, i32 2, !dbg !6775
  %39 = load i8*, i8** %data33, align 8, !dbg !6775
  %40 = bitcast i8* %39 to void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, !dbg !6774
  %cmp34 = icmp eq void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %37, %40, !dbg !6776
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !6777

if.then36:                                        ; preds = %for.body32
  br label %return, !dbg !6778

if.end37:                                         ; preds = %for.body32
  br label %for.inc38, !dbg !6779

for.inc38:                                        ; preds = %if.end37
  %41 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !6780
  %next39 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %41, i32 0, i32 0, !dbg !6781
  %42 = load %struct.LinkData*, %struct.LinkData** %next39, align 8, !dbg !6781
  store %struct.LinkData* %42, %struct.LinkData** %ld, align 8, !dbg !6782
  br label %for.cond30, !dbg !6783, !llvm.loop !6784

for.end40:                                        ; preds = %for.cond30
  %43 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6786
  %L2Funcs41 = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %43, i32 0, i32 3, !dbg !6787
  %44 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %fn, align 8, !dbg !6788
  %45 = bitcast void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %44 to i8*, !dbg !6788
  %call42 = call %struct.LinkData* @BLI_genericNodeN(i8* %45), !dbg !6789
  %46 = bitcast %struct.LinkData* %call42 to i8*, !dbg !6789
  call void @BLI_addtail(%struct.ListBase* %L2Funcs41, i8* %46), !dbg !6790
  br label %return, !dbg !6791

return:                                           ; preds = %for.end40, %if.then36, %if.then10, %if.then
  ret void, !dbg !6791
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local %struct.LinkData* @BLI_genericNodeN(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_update_cache_flush(%struct.Main* %bmain, %struct.Scene* %scene) #0 !dbg !6792 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %uce = alloca %struct.tRnaUpdateCacheElem*, align 8
  %ld = alloca %struct.LinkData*, align 8
  %fn = alloca void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !6795, metadata !DIExpression()), !dbg !6796
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6797, metadata !DIExpression()), !dbg !6798
  call void @llvm.dbg.declare(metadata %struct.tRnaUpdateCacheElem** %uce, metadata !6799, metadata !DIExpression()), !dbg !6800
  %0 = load i8*, i8** getelementptr inbounds (%struct.ListBase, %struct.ListBase* @rna_updates_cache, i32 0, i32 0), align 8, !dbg !6801
  %1 = bitcast i8* %0 to %struct.tRnaUpdateCacheElem*, !dbg !6803
  store %struct.tRnaUpdateCacheElem* %1, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6804
  br label %for.cond, !dbg !6805

for.cond:                                         ; preds = %for.inc4, %entry
  %2 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6806
  %tobool = icmp ne %struct.tRnaUpdateCacheElem* %2, null, !dbg !6808
  br i1 %tobool, label %for.body, label %for.end6, !dbg !6808

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.LinkData** %ld, metadata !6809, metadata !DIExpression()), !dbg !6811
  %3 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6812
  %L2Funcs = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %3, i32 0, i32 3, !dbg !6814
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %L2Funcs, i32 0, i32 0, !dbg !6815
  %4 = load i8*, i8** %first, align 8, !dbg !6815
  %5 = bitcast i8* %4 to %struct.LinkData*, !dbg !6812
  store %struct.LinkData* %5, %struct.LinkData** %ld, align 8, !dbg !6816
  br label %for.cond1, !dbg !6817

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !6818
  %tobool2 = icmp ne %struct.LinkData* %6, null, !dbg !6820
  br i1 %tobool2, label %for.body3, label %for.end, !dbg !6820

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %fn, metadata !6821, metadata !DIExpression()), !dbg !6823
  %7 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !6824
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %7, i32 0, i32 2, !dbg !6825
  %8 = load i8*, i8** %data, align 8, !dbg !6825
  %9 = bitcast i8* %8 to void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, !dbg !6826
  store void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* %9, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %fn, align 8, !dbg !6823
  %10 = load void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)** %fn, align 8, !dbg !6827
  %11 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6828
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6829
  %13 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6830
  %ptr = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %13, i32 0, i32 2, !dbg !6831
  call void %10(%struct.Main* %11, %struct.Scene* %12, %struct.PointerRNA* %ptr), !dbg !6827
  br label %for.inc, !dbg !6832

for.inc:                                          ; preds = %for.body3
  %14 = load %struct.LinkData*, %struct.LinkData** %ld, align 8, !dbg !6833
  %next = getelementptr inbounds %struct.LinkData, %struct.LinkData* %14, i32 0, i32 0, !dbg !6834
  %15 = load %struct.LinkData*, %struct.LinkData** %next, align 8, !dbg !6834
  store %struct.LinkData* %15, %struct.LinkData** %ld, align 8, !dbg !6835
  br label %for.cond1, !dbg !6836, !llvm.loop !6837

for.end:                                          ; preds = %for.cond1
  br label %for.inc4, !dbg !6839

for.inc4:                                         ; preds = %for.end
  %16 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6840
  %next5 = getelementptr inbounds %struct.tRnaUpdateCacheElem, %struct.tRnaUpdateCacheElem* %16, i32 0, i32 0, !dbg !6841
  %17 = load %struct.tRnaUpdateCacheElem*, %struct.tRnaUpdateCacheElem** %next5, align 8, !dbg !6841
  store %struct.tRnaUpdateCacheElem* %17, %struct.tRnaUpdateCacheElem** %uce, align 8, !dbg !6842
  br label %for.cond, !dbg !6843, !llvm.loop !6844

for.end6:                                         ; preds = %for.cond
  ret void, !dbg !6846
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_boolean_get(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !6847 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %bprop = alloca %struct.BoolPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6848, metadata !DIExpression()), !dbg !6849
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6850, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.declare(metadata %struct.BoolPropertyRNA** %bprop, metadata !6852, metadata !DIExpression()), !dbg !6853
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6854
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.BoolPropertyRNA*, !dbg !6855
  store %struct.BoolPropertyRNA* %1, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6853
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !6856, metadata !DIExpression()), !dbg !6857
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6858
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !6860
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !6861
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !6861
  br i1 %tobool, label %if.then, label %if.else, !dbg !6862

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !6863
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 7, !dbg !6863
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !6863
  %4 = load i32, i32* %val, align 8, !dbg !6863
  store i32 %4, i32* %retval, align 4, !dbg !6864
  br label %return, !dbg !6864

if.else:                                          ; preds = %entry
  %5 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6865
  %get = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %5, i32 0, i32 1, !dbg !6867
  %6 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %get, align 8, !dbg !6867
  %tobool1 = icmp ne i32 (%struct.PointerRNA*)* %6, null, !dbg !6865
  br i1 %tobool1, label %if.then2, label %if.else5, !dbg !6868

if.then2:                                         ; preds = %if.else
  %7 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6869
  %get3 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %7, i32 0, i32 1, !dbg !6870
  %8 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %get3, align 8, !dbg !6870
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6871
  %call4 = call i32 %8(%struct.PointerRNA* %9), !dbg !6869
  store i32 %call4, i32* %retval, align 4, !dbg !6872
  br label %return, !dbg !6872

if.else5:                                         ; preds = %if.else
  %10 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6873
  %get_ex = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %10, i32 0, i32 5, !dbg !6875
  %11 = load i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)** %get_ex, align 8, !dbg !6875
  %tobool6 = icmp ne i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* %11, null, !dbg !6873
  br i1 %tobool6, label %if.then7, label %if.else10, !dbg !6876

if.then7:                                         ; preds = %if.else5
  %12 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6877
  %get_ex8 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %12, i32 0, i32 5, !dbg !6878
  %13 = load i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)** %get_ex8, align 8, !dbg !6878
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6879
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6880
  %call9 = call i32 %13(%struct.PointerRNA* %14, %struct.PropertyRNA* %15), !dbg !6877
  store i32 %call9, i32* %retval, align 4, !dbg !6881
  br label %return, !dbg !6881

if.else10:                                        ; preds = %if.else5
  %16 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6882
  %defaultvalue = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %16, i32 0, i32 9, !dbg !6883
  %17 = load i32, i32* %defaultvalue, align 8, !dbg !6883
  store i32 %17, i32* %retval, align 4, !dbg !6884
  br label %return, !dbg !6884

return:                                           ; preds = %if.else10, %if.then7, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !6885
  ret i32 %18, !dbg !6885
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_boolean_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %value) #0 !dbg !6886 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i32, align 4
  %bprop = alloca %struct.BoolPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %val13 = alloca %union.IDPropertyTemplate, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6889, metadata !DIExpression()), !dbg !6890
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !6891, metadata !DIExpression()), !dbg !6892
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6893, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata %struct.BoolPropertyRNA** %bprop, metadata !6895, metadata !DIExpression()), !dbg !6896
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6897
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.BoolPropertyRNA*, !dbg !6898
  store %struct.BoolPropertyRNA* %1, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6896
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !6899, metadata !DIExpression()), !dbg !6900
  %2 = load i32, i32* %value.addr, align 4, !dbg !6901
  %tobool = icmp ne i32 %2, 0, !dbg !6901
  br i1 %tobool, label %if.then, label %if.end, !dbg !6903

if.then:                                          ; preds = %entry
  store i32 1, i32* %value.addr, align 4, !dbg !6904
  br label %if.end, !dbg !6905

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6906
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %3), !dbg !6908
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !6909
  %tobool1 = icmp ne %struct.IDProperty* %call, null, !dbg !6909
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6910

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %value.addr, align 4, !dbg !6911
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !6913
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 7, !dbg !6913
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !6913
  store i32 %4, i32* %val, align 8, !dbg !6914
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !6915
  call void @rna_idproperty_touch(%struct.IDProperty* %6), !dbg !6916
  br label %if.end23, !dbg !6917

if.else:                                          ; preds = %if.end
  %7 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6918
  %set = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %7, i32 0, i32 2, !dbg !6920
  %8 = load void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32)** %set, align 8, !dbg !6920
  %tobool3 = icmp ne void (%struct.PointerRNA*, i32)* %8, null, !dbg !6918
  br i1 %tobool3, label %if.then4, label %if.else6, !dbg !6921

if.then4:                                         ; preds = %if.else
  %9 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6922
  %set5 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %9, i32 0, i32 2, !dbg !6924
  %10 = load void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32)** %set5, align 8, !dbg !6924
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6925
  %12 = load i32, i32* %value.addr, align 4, !dbg !6926
  call void %10(%struct.PointerRNA* %11, i32 %12), !dbg !6922
  br label %if.end22, !dbg !6927

if.else6:                                         ; preds = %if.else
  %13 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6928
  %set_ex = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %13, i32 0, i32 6, !dbg !6930
  %14 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)** %set_ex, align 8, !dbg !6930
  %tobool7 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* %14, null, !dbg !6928
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !6931

if.then8:                                         ; preds = %if.else6
  %15 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !6932
  %set_ex9 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %15, i32 0, i32 6, !dbg !6934
  %16 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)** %set_ex9, align 8, !dbg !6934
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6935
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6936
  %19 = load i32, i32* %value.addr, align 4, !dbg !6937
  call void %16(%struct.PointerRNA* %17, %struct.PropertyRNA* %18, i32 %19), !dbg !6932
  br label %if.end21, !dbg !6938

if.else10:                                        ; preds = %if.else6
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6939
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %20, i32 0, i32 4, !dbg !6941
  %21 = load i32, i32* %flag, align 8, !dbg !6941
  %and = and i32 %21, 1, !dbg !6942
  %tobool11 = icmp ne i32 %and, 0, !dbg !6942
  br i1 %tobool11, label %if.then12, label %if.end20, !dbg !6943

if.then12:                                        ; preds = %if.else10
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val13, metadata !6944, metadata !DIExpression()), !dbg !6970
  %22 = bitcast %union.IDPropertyTemplate* %val13 to i8*, !dbg !6970
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_boolean_set.val to i8*), i64 16, i1 false), !dbg !6970
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !6971, metadata !DIExpression()), !dbg !6972
  %23 = load i32, i32* %value.addr, align 4, !dbg !6973
  %i = bitcast %union.IDPropertyTemplate* %val13 to i32*, !dbg !6974
  store i32 %23, i32* %i, align 8, !dbg !6975
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6976
  %call14 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %24, i8 zeroext 1), !dbg !6977
  store %struct.IDProperty* %call14, %struct.IDProperty** %group, align 8, !dbg !6978
  %25 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !6979
  %tobool15 = icmp ne %struct.IDProperty* %25, null, !dbg !6979
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !6981

if.then16:                                        ; preds = %if.then12
  %26 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !6982
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !6983
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %27, i32 0, i32 3, !dbg !6984
  %28 = load i8*, i8** %identifier, align 8, !dbg !6984
  %call17 = call %struct.IDProperty* @IDP_New(i32 1, %union.IDPropertyTemplate* %val13, i8* %28), !dbg !6985
  %call18 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %26, %struct.IDProperty* %call17), !dbg !6986
  br label %if.end19, !dbg !6986

if.end19:                                         ; preds = %if.then16, %if.then12
  br label %if.end20, !dbg !6987

if.end20:                                         ; preds = %if.end19, %if.else10
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then8
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then4
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then2
  ret void, !dbg !6988
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_idproperty_touch(%struct.IDProperty* %idprop) #0 !dbg !6989 {
entry:
  %idprop.addr = alloca %struct.IDProperty*, align 8
  store %struct.IDProperty* %idprop, %struct.IDProperty** %idprop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop.addr, metadata !6992, metadata !DIExpression()), !dbg !6993
  %0 = load %struct.IDProperty*, %struct.IDProperty** %idprop.addr, align 8, !dbg !6994
  %flag = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %0, i32 0, i32 4, !dbg !6995
  %1 = load i16, i16* %flag, align 2, !dbg !6996
  %conv = sext i16 %1 to i32, !dbg !6996
  %and = and i32 %conv, -129, !dbg !6996
  %conv1 = trunc i32 %and to i16, !dbg !6996
  store i16 %conv1, i16* %flag, align 2, !dbg !6996
  ret void, !dbg !6997
}

declare dso_local zeroext i8 @IDP_AddToGroup(%struct.IDProperty*, %struct.IDProperty*) #2

declare dso_local %struct.IDProperty* @IDP_New(i32, %union.IDPropertyTemplate*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_boolean_get_array(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %values) #0 !dbg !6998 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca i32*, align 8
  %bprop = alloca %struct.BoolPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6999, metadata !DIExpression()), !dbg !7000
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7001, metadata !DIExpression()), !dbg !7002
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !7003, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.declare(metadata %struct.BoolPropertyRNA** %bprop, metadata !7005, metadata !DIExpression()), !dbg !7006
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7007
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.BoolPropertyRNA*, !dbg !7008
  store %struct.BoolPropertyRNA* %1, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7006
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !7009, metadata !DIExpression()), !dbg !7010
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7011
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !7013
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !7014
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !7014
  br i1 %tobool, label %if.then, label %if.else3, !dbg !7015

if.then:                                          ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7016
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 12, !dbg !7019
  %4 = load i32, i32* %arraydimension, align 8, !dbg !7019
  %cmp = icmp eq i32 %4, 0, !dbg !7020
  br i1 %cmp, label %if.then1, label %if.else, !dbg !7021

if.then1:                                         ; preds = %if.then
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7022
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7023
  %call2 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %5, %struct.PropertyRNA* %6), !dbg !7024
  %7 = load i32*, i32** %values.addr, align 8, !dbg !7025
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !7025
  store i32 %call2, i32* %arrayidx, align 4, !dbg !7026
  br label %if.end, !dbg !7025

if.else:                                          ; preds = %if.then
  %8 = load i32*, i32** %values.addr, align 8, !dbg !7027
  %9 = bitcast i32* %8 to i8*, !dbg !7028
  %10 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7029
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %10, i32 0, i32 7, !dbg !7029
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !7029
  %11 = load i8*, i8** %pointer, align 8, !dbg !7029
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7030
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 8, !dbg !7031
  %13 = load i32, i32* %len, align 8, !dbg !7031
  %conv = sext i32 %13 to i64, !dbg !7030
  %mul = mul i64 4, %conv, !dbg !7032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 1 %11, i64 %mul, i1 false), !dbg !7028
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end32, !dbg !7033

if.else3:                                         ; preds = %entry
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7034
  %arraydimension4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 12, !dbg !7036
  %15 = load i32, i32* %arraydimension4, align 8, !dbg !7036
  %cmp5 = icmp eq i32 %15, 0, !dbg !7037
  br i1 %cmp5, label %if.then7, label %if.else10, !dbg !7038

if.then7:                                         ; preds = %if.else3
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7039
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7040
  %call8 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %16, %struct.PropertyRNA* %17), !dbg !7041
  %18 = load i32*, i32** %values.addr, align 8, !dbg !7042
  %arrayidx9 = getelementptr inbounds i32, i32* %18, i64 0, !dbg !7042
  store i32 %call8, i32* %arrayidx9, align 4, !dbg !7043
  br label %if.end31, !dbg !7042

if.else10:                                        ; preds = %if.else3
  %19 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7044
  %getarray = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %19, i32 0, i32 3, !dbg !7046
  %20 = load void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)** %getarray, align 8, !dbg !7046
  %tobool11 = icmp ne void (%struct.PointerRNA*, i32*)* %20, null, !dbg !7044
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !7047

if.then12:                                        ; preds = %if.else10
  %21 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7048
  %getarray13 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %21, i32 0, i32 3, !dbg !7049
  %22 = load void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)** %getarray13, align 8, !dbg !7049
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7050
  %24 = load i32*, i32** %values.addr, align 8, !dbg !7051
  call void %22(%struct.PointerRNA* %23, i32* %24), !dbg !7048
  br label %if.end30, !dbg !7048

if.else14:                                        ; preds = %if.else10
  %25 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7052
  %getarray_ex = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %25, i32 0, i32 7, !dbg !7054
  %26 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)** %getarray_ex, align 8, !dbg !7054
  %tobool15 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* %26, null, !dbg !7052
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !7055

if.then16:                                        ; preds = %if.else14
  %27 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7056
  %getarray_ex17 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %27, i32 0, i32 7, !dbg !7057
  %28 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)** %getarray_ex17, align 8, !dbg !7057
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7058
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7059
  %31 = load i32*, i32** %values.addr, align 8, !dbg !7060
  call void %28(%struct.PointerRNA* %29, %struct.PropertyRNA* %30, i32* %31), !dbg !7056
  br label %if.end29, !dbg !7056

if.else18:                                        ; preds = %if.else14
  %32 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7061
  %defaultarray = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %32, i32 0, i32 10, !dbg !7063
  %33 = load i32*, i32** %defaultarray, align 8, !dbg !7063
  %tobool19 = icmp ne i32* %33, null, !dbg !7061
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !7064

if.then20:                                        ; preds = %if.else18
  %34 = load i32*, i32** %values.addr, align 8, !dbg !7065
  %35 = bitcast i32* %34 to i8*, !dbg !7066
  %36 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7067
  %defaultarray21 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %36, i32 0, i32 10, !dbg !7068
  %37 = load i32*, i32** %defaultarray21, align 8, !dbg !7068
  %38 = bitcast i32* %37 to i8*, !dbg !7066
  %39 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7069
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %39, i32 0, i32 14, !dbg !7070
  %40 = load i32, i32* %totarraylength, align 8, !dbg !7070
  %conv22 = zext i32 %40 to i64, !dbg !7069
  %mul23 = mul i64 4, %conv22, !dbg !7071
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %38, i64 %mul23, i1 false), !dbg !7066
  br label %if.end28, !dbg !7066

if.else24:                                        ; preds = %if.else18
  %41 = load i32*, i32** %values.addr, align 8, !dbg !7072
  %42 = bitcast i32* %41 to i8*, !dbg !7073
  %43 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7074
  %totarraylength25 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %43, i32 0, i32 14, !dbg !7075
  %44 = load i32, i32* %totarraylength25, align 8, !dbg !7075
  %conv26 = zext i32 %44 to i64, !dbg !7074
  %mul27 = mul i64 4, %conv26, !dbg !7076
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 %mul27, i1 false), !dbg !7073
  br label %if.end28

if.end28:                                         ; preds = %if.else24, %if.then20
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then16
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then12
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then7
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end
  ret void, !dbg !7077
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_boolean_get_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !7078 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %tmp = alloca [32 x i32], align 16
  %len = alloca i32, align 4
  %tmparray = alloca i32*, align 8
  %value = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7079, metadata !DIExpression()), !dbg !7080
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7081, metadata !DIExpression()), !dbg !7082
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7083, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.declare(metadata [32 x i32]* %tmp, metadata !7085, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7088, metadata !DIExpression()), !dbg !7089
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7090
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7091
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !7092
  store i32 %call, i32* %len, align 4, !dbg !7089
  %2 = load i32, i32* %len, align 4, !dbg !7093
  %cmp = icmp sle i32 %2, 32, !dbg !7095
  br i1 %cmp, label %if.then, label %if.else, !dbg !7096

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7097
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7099
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 0, !dbg !7100
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %arraydecay), !dbg !7101
  %5 = load i32, i32* %index.addr, align 4, !dbg !7102
  %idxprom = sext i32 %5 to i64, !dbg !7103
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 %idxprom, !dbg !7103
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7103
  store i32 %6, i32* %retval, align 4, !dbg !7104
  br label %return, !dbg !7104

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %tmparray, metadata !7105, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7108, metadata !DIExpression()), !dbg !7109
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7110
  %8 = load i32, i32* %len, align 4, !dbg !7111
  %conv = sext i32 %8 to i64, !dbg !7111
  %mul = mul i64 4, %conv, !dbg !7112
  %call1 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)), !dbg !7110
  %9 = bitcast i8* %call1 to i32*, !dbg !7110
  store i32* %9, i32** %tmparray, align 8, !dbg !7113
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7114
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7115
  %12 = load i32*, i32** %tmparray, align 8, !dbg !7116
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, i32* %12), !dbg !7117
  %13 = load i32*, i32** %tmparray, align 8, !dbg !7118
  %14 = load i32, i32* %index.addr, align 4, !dbg !7119
  %idxprom2 = sext i32 %14 to i64, !dbg !7118
  %arrayidx3 = getelementptr inbounds i32, i32* %13, i64 %idxprom2, !dbg !7118
  %15 = load i32, i32* %arrayidx3, align 4, !dbg !7118
  store i32 %15, i32* %value, align 4, !dbg !7120
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7121
  %17 = load i32*, i32** %tmparray, align 8, !dbg !7122
  %18 = bitcast i32* %17 to i8*, !dbg !7122
  call void %16(i8* %18), !dbg !7121
  %19 = load i32, i32* %value, align 4, !dbg !7123
  store i32 %19, i32* %retval, align 4, !dbg !7124
  br label %return, !dbg !7124

return:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7125
  ret i32 %20, !dbg !7125
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_boolean_set_array(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %values) #0 !dbg !7126 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca i32*, align 8
  %bprop = alloca %struct.BoolPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %val20 = alloca %union.IDPropertyTemplate, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7129, metadata !DIExpression()), !dbg !7130
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7131, metadata !DIExpression()), !dbg !7132
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !7133, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.declare(metadata %struct.BoolPropertyRNA** %bprop, metadata !7135, metadata !DIExpression()), !dbg !7136
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7137
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.BoolPropertyRNA*, !dbg !7138
  store %struct.BoolPropertyRNA* %1, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7136
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !7139, metadata !DIExpression()), !dbg !7140
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7141
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !7143
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !7144
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !7144
  br i1 %tobool, label %if.then, label %if.else3, !dbg !7145

if.then:                                          ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7146
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 12, !dbg !7149
  %4 = load i32, i32* %arraydimension, align 8, !dbg !7149
  %cmp = icmp eq i32 %4, 0, !dbg !7150
  br i1 %cmp, label %if.then1, label %if.else, !dbg !7151

if.then1:                                         ; preds = %if.then
  %5 = load i32*, i32** %values.addr, align 8, !dbg !7152
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !7152
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7152
  %7 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7153
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %7, i32 0, i32 7, !dbg !7153
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !7153
  store i32 %6, i32* %val, align 8, !dbg !7154
  br label %if.end, !dbg !7153

if.else:                                          ; preds = %if.then
  %8 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7155
  %data2 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 7, !dbg !7155
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data2, i32 0, i32 0, !dbg !7155
  %9 = load i8*, i8** %pointer, align 8, !dbg !7155
  %10 = load i32*, i32** %values.addr, align 8, !dbg !7156
  %11 = bitcast i32* %10 to i8*, !dbg !7157
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7158
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 8, !dbg !7159
  %13 = load i32, i32* %len, align 8, !dbg !7159
  %conv = sext i32 %13 to i64, !dbg !7158
  %mul = mul i64 4, %conv, !dbg !7160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 4 %11, i64 %mul, i1 false), !dbg !7157
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %14 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7161
  call void @rna_idproperty_touch(%struct.IDProperty* %14), !dbg !7162
  br label %if.end39, !dbg !7163

if.else3:                                         ; preds = %entry
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7164
  %arraydimension4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %15, i32 0, i32 12, !dbg !7166
  %16 = load i32, i32* %arraydimension4, align 8, !dbg !7166
  %cmp5 = icmp eq i32 %16, 0, !dbg !7167
  br i1 %cmp5, label %if.then7, label %if.else9, !dbg !7168

if.then7:                                         ; preds = %if.else3
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7169
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7170
  %19 = load i32*, i32** %values.addr, align 8, !dbg !7171
  %arrayidx8 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !7171
  %20 = load i32, i32* %arrayidx8, align 4, !dbg !7171
  call void @RNA_property_boolean_set(%struct.PointerRNA* %17, %struct.PropertyRNA* %18, i32 %20), !dbg !7172
  br label %if.end38, !dbg !7172

if.else9:                                         ; preds = %if.else3
  %21 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7173
  %setarray = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %21, i32 0, i32 4, !dbg !7175
  %22 = load void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)** %setarray, align 8, !dbg !7175
  %tobool10 = icmp ne void (%struct.PointerRNA*, i32*)* %22, null, !dbg !7173
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !7176

if.then11:                                        ; preds = %if.else9
  %23 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7177
  %setarray12 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %23, i32 0, i32 4, !dbg !7178
  %24 = load void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)** %setarray12, align 8, !dbg !7178
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7179
  %26 = load i32*, i32** %values.addr, align 8, !dbg !7180
  call void %24(%struct.PointerRNA* %25, i32* %26), !dbg !7177
  br label %if.end37, !dbg !7177

if.else13:                                        ; preds = %if.else9
  %27 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7181
  %setarray_ex = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %27, i32 0, i32 8, !dbg !7183
  %28 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)** %setarray_ex, align 8, !dbg !7183
  %tobool14 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* %28, null, !dbg !7181
  br i1 %tobool14, label %if.then15, label %if.else17, !dbg !7184

if.then15:                                        ; preds = %if.else13
  %29 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7185
  %setarray_ex16 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %29, i32 0, i32 8, !dbg !7186
  %30 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)** %setarray_ex16, align 8, !dbg !7186
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7187
  %32 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7188
  %33 = load i32*, i32** %values.addr, align 8, !dbg !7189
  call void %30(%struct.PointerRNA* %31, %struct.PropertyRNA* %32, i32* %33), !dbg !7185
  br label %if.end36, !dbg !7185

if.else17:                                        ; preds = %if.else13
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7190
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %34, i32 0, i32 4, !dbg !7192
  %35 = load i32, i32* %flag, align 8, !dbg !7192
  %and = and i32 %35, 1, !dbg !7193
  %tobool18 = icmp ne i32 %and, 0, !dbg !7193
  br i1 %tobool18, label %if.then19, label %if.end35, !dbg !7194

if.then19:                                        ; preds = %if.else17
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val20, metadata !7195, metadata !DIExpression()), !dbg !7197
  %36 = bitcast %union.IDPropertyTemplate* %val20 to i8*, !dbg !7197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_boolean_set_array.val to i8*), i64 16, i1 false), !dbg !7197
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !7198, metadata !DIExpression()), !dbg !7199
  %37 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7200
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %37, i32 0, i32 14, !dbg !7201
  %38 = load i32, i32* %totarraylength, align 8, !dbg !7201
  %conv21 = trunc i32 %38 to i16, !dbg !7200
  %array = bitcast %union.IDPropertyTemplate* %val20 to %struct.anon.1*, !dbg !7202
  %len22 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %array, i32 0, i32 1, !dbg !7203
  store i16 %conv21, i16* %len22, align 2, !dbg !7204
  %array23 = bitcast %union.IDPropertyTemplate* %val20 to %struct.anon.1*, !dbg !7205
  %type = getelementptr inbounds %struct.anon.1, %struct.anon.1* %array23, i32 0, i32 0, !dbg !7206
  store i16 1, i16* %type, align 8, !dbg !7207
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7208
  %call24 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %39, i8 zeroext 1), !dbg !7209
  store %struct.IDProperty* %call24, %struct.IDProperty** %group, align 8, !dbg !7210
  %40 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !7211
  %tobool25 = icmp ne %struct.IDProperty* %40, null, !dbg !7211
  br i1 %tobool25, label %if.then26, label %if.end34, !dbg !7213

if.then26:                                        ; preds = %if.then19
  %41 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7214
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %41, i32 0, i32 3, !dbg !7216
  %42 = load i8*, i8** %identifier, align 8, !dbg !7216
  %call27 = call %struct.IDProperty* @IDP_New(i32 5, %union.IDPropertyTemplate* %val20, i8* %42), !dbg !7217
  store %struct.IDProperty* %call27, %struct.IDProperty** %idprop, align 8, !dbg !7218
  %43 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !7219
  %44 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7220
  %call28 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %43, %struct.IDProperty* %44), !dbg !7221
  %45 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7222
  %data29 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %45, i32 0, i32 7, !dbg !7222
  %pointer30 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data29, i32 0, i32 0, !dbg !7222
  %46 = load i8*, i8** %pointer30, align 8, !dbg !7222
  %47 = load i32*, i32** %values.addr, align 8, !dbg !7223
  %48 = bitcast i32* %47 to i8*, !dbg !7224
  %49 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7225
  %len31 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %49, i32 0, i32 8, !dbg !7226
  %50 = load i32, i32* %len31, align 8, !dbg !7226
  %conv32 = sext i32 %50 to i64, !dbg !7225
  %mul33 = mul i64 4, %conv32, !dbg !7227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 4 %48, i64 %mul33, i1 false), !dbg !7224
  br label %if.end34, !dbg !7228

if.end34:                                         ; preds = %if.then26, %if.then19
  br label %if.end35, !dbg !7229

if.end35:                                         ; preds = %if.end34, %if.else17
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then15
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then11
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then7
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  ret void, !dbg !7230
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_boolean_set_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, i32 %value) #0 !dbg !7231 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %tmp = alloca [32 x i32], align 16
  %len = alloca i32, align 4
  %tmparray = alloca i32*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7234, metadata !DIExpression()), !dbg !7235
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7236, metadata !DIExpression()), !dbg !7237
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7238, metadata !DIExpression()), !dbg !7239
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7240, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.declare(metadata [32 x i32]* %tmp, metadata !7242, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7244, metadata !DIExpression()), !dbg !7245
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7246
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7247
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !7248
  store i32 %call, i32* %len, align 4, !dbg !7245
  %2 = load i32, i32* %len, align 4, !dbg !7249
  %cmp = icmp sle i32 %2, 32, !dbg !7251
  br i1 %cmp, label %if.then, label %if.else, !dbg !7252

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7253
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7255
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 0, !dbg !7256
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %arraydecay), !dbg !7257
  %5 = load i32, i32* %value.addr, align 4, !dbg !7258
  %6 = load i32, i32* %index.addr, align 4, !dbg !7259
  %idxprom = sext i32 %6 to i64, !dbg !7260
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 %idxprom, !dbg !7260
  store i32 %5, i32* %arrayidx, align 4, !dbg !7261
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7262
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7263
  %arraydecay1 = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 0, !dbg !7264
  call void @RNA_property_boolean_set_array(%struct.PointerRNA* %7, %struct.PropertyRNA* %8, i32* %arraydecay1), !dbg !7265
  br label %if.end, !dbg !7266

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %tmparray, metadata !7267, metadata !DIExpression()), !dbg !7269
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7270
  %10 = load i32, i32* %len, align 4, !dbg !7271
  %conv = sext i32 %10 to i64, !dbg !7271
  %mul = mul i64 4, %conv, !dbg !7272
  %call2 = call i8* %9(i64 %mul, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)), !dbg !7270
  %11 = bitcast i8* %call2 to i32*, !dbg !7270
  store i32* %11, i32** %tmparray, align 8, !dbg !7273
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7274
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7275
  %14 = load i32*, i32** %tmparray, align 8, !dbg !7276
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %12, %struct.PropertyRNA* %13, i32* %14), !dbg !7277
  %15 = load i32, i32* %value.addr, align 4, !dbg !7278
  %16 = load i32*, i32** %tmparray, align 8, !dbg !7279
  %17 = load i32, i32* %index.addr, align 4, !dbg !7280
  %idxprom3 = sext i32 %17 to i64, !dbg !7279
  %arrayidx4 = getelementptr inbounds i32, i32* %16, i64 %idxprom3, !dbg !7279
  store i32 %15, i32* %arrayidx4, align 4, !dbg !7281
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7282
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7283
  %20 = load i32*, i32** %tmparray, align 8, !dbg !7284
  call void @RNA_property_boolean_set_array(%struct.PointerRNA* %18, %struct.PropertyRNA* %19, i32* %20), !dbg !7285
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7286
  %22 = load i32*, i32** %tmparray, align 8, !dbg !7287
  %23 = bitcast i32* %22 to i8*, !dbg !7287
  call void %21(i8* %23), !dbg !7286
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7288
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_boolean_get_default(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop) #0 !dbg !7289 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %bprop = alloca %struct.BoolPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !7290, metadata !DIExpression()), !dbg !7291
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.declare(metadata %struct.BoolPropertyRNA** %bprop, metadata !7294, metadata !DIExpression()), !dbg !7295
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7296
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !7297
  %1 = bitcast %struct.PropertyRNA* %call to %struct.BoolPropertyRNA*, !dbg !7298
  store %struct.BoolPropertyRNA* %1, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7295
  %2 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7299
  %defaultvalue = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %2, i32 0, i32 9, !dbg !7300
  %3 = load i32, i32* %defaultvalue, align 8, !dbg !7300
  ret i32 %3, !dbg !7301
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_boolean_get_default_array(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop, i32* %values) #0 !dbg !7302 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca i32*, align 8
  %bprop = alloca %struct.BoolPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !7303, metadata !DIExpression()), !dbg !7304
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7305, metadata !DIExpression()), !dbg !7306
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !7307, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.declare(metadata %struct.BoolPropertyRNA** %bprop, metadata !7309, metadata !DIExpression()), !dbg !7310
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7311
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !7312
  %1 = bitcast %struct.PropertyRNA* %call to %struct.BoolPropertyRNA*, !dbg !7313
  store %struct.BoolPropertyRNA* %1, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7310
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7314
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 12, !dbg !7316
  %3 = load i32, i32* %arraydimension, align 8, !dbg !7316
  %cmp = icmp eq i32 %3, 0, !dbg !7317
  br i1 %cmp, label %if.then, label %if.else, !dbg !7318

if.then:                                          ; preds = %entry
  %4 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7319
  %defaultvalue = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %4, i32 0, i32 9, !dbg !7320
  %5 = load i32, i32* %defaultvalue, align 8, !dbg !7320
  %6 = load i32*, i32** %values.addr, align 8, !dbg !7321
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 0, !dbg !7321
  store i32 %5, i32* %arrayidx, align 4, !dbg !7322
  br label %if.end7, !dbg !7321

if.else:                                          ; preds = %entry
  %7 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7323
  %defaultarray = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %7, i32 0, i32 10, !dbg !7325
  %8 = load i32*, i32** %defaultarray, align 8, !dbg !7325
  %tobool = icmp ne i32* %8, null, !dbg !7323
  br i1 %tobool, label %if.then1, label %if.else3, !dbg !7326

if.then1:                                         ; preds = %if.else
  %9 = load i32*, i32** %values.addr, align 8, !dbg !7327
  %10 = bitcast i32* %9 to i8*, !dbg !7328
  %11 = load %struct.BoolPropertyRNA*, %struct.BoolPropertyRNA** %bprop, align 8, !dbg !7329
  %defaultarray2 = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %11, i32 0, i32 10, !dbg !7330
  %12 = load i32*, i32** %defaultarray2, align 8, !dbg !7330
  %13 = bitcast i32* %12 to i8*, !dbg !7328
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7331
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 14, !dbg !7332
  %15 = load i32, i32* %totarraylength, align 8, !dbg !7332
  %conv = zext i32 %15 to i64, !dbg !7331
  %mul = mul i64 4, %conv, !dbg !7333
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %13, i64 %mul, i1 false), !dbg !7328
  br label %if.end, !dbg !7328

if.else3:                                         ; preds = %if.else
  %16 = load i32*, i32** %values.addr, align 8, !dbg !7334
  %17 = bitcast i32* %16 to i8*, !dbg !7335
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7336
  %totarraylength4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %18, i32 0, i32 14, !dbg !7337
  %19 = load i32, i32* %totarraylength4, align 8, !dbg !7337
  %conv5 = zext i32 %19 to i64, !dbg !7336
  %mul6 = mul i64 4, %conv5, !dbg !7338
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %mul6, i1 false), !dbg !7335
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then1
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !7339
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_boolean_get_default_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !7340 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %tmp = alloca [32 x i32], align 16
  %len = alloca i32, align 4
  %tmparray = alloca i32*, align 8
  %value = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7341, metadata !DIExpression()), !dbg !7342
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7343, metadata !DIExpression()), !dbg !7344
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7345, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.declare(metadata [32 x i32]* %tmp, metadata !7347, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7349, metadata !DIExpression()), !dbg !7350
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7351
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7352
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !7353
  store i32 %call, i32* %len, align 4, !dbg !7350
  %2 = load i32, i32* %len, align 4, !dbg !7354
  %cmp = icmp sle i32 %2, 32, !dbg !7356
  br i1 %cmp, label %if.then, label %if.else, !dbg !7357

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7358
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7360
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 0, !dbg !7361
  call void @RNA_property_boolean_get_default_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %arraydecay), !dbg !7362
  %5 = load i32, i32* %index.addr, align 4, !dbg !7363
  %idxprom = sext i32 %5 to i64, !dbg !7364
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 %idxprom, !dbg !7364
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7364
  store i32 %6, i32* %retval, align 4, !dbg !7365
  br label %return, !dbg !7365

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %tmparray, metadata !7366, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7369, metadata !DIExpression()), !dbg !7370
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7371
  %8 = load i32, i32* %len, align 4, !dbg !7372
  %conv = sext i32 %8 to i64, !dbg !7372
  %mul = mul i64 4, %conv, !dbg !7373
  %call1 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i64 0, i64 0)), !dbg !7371
  %9 = bitcast i8* %call1 to i32*, !dbg !7371
  store i32* %9, i32** %tmparray, align 8, !dbg !7374
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7375
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7376
  %12 = load i32*, i32** %tmparray, align 8, !dbg !7377
  call void @RNA_property_boolean_get_default_array(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, i32* %12), !dbg !7378
  %13 = load i32*, i32** %tmparray, align 8, !dbg !7379
  %14 = load i32, i32* %index.addr, align 4, !dbg !7380
  %idxprom2 = sext i32 %14 to i64, !dbg !7379
  %arrayidx3 = getelementptr inbounds i32, i32* %13, i64 %idxprom2, !dbg !7379
  %15 = load i32, i32* %arrayidx3, align 4, !dbg !7379
  store i32 %15, i32* %value, align 4, !dbg !7381
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7382
  %17 = load i32*, i32** %tmparray, align 8, !dbg !7383
  %18 = bitcast i32* %17 to i8*, !dbg !7383
  call void %16(i8* %18), !dbg !7382
  %19 = load i32, i32* %value, align 4, !dbg !7384
  store i32 %19, i32* %retval, align 4, !dbg !7385
  br label %return, !dbg !7385

return:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7386
  ret i32 %20, !dbg !7386
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_int_get(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !7387 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %iprop = alloca %struct.IntPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7388, metadata !DIExpression()), !dbg !7389
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata %struct.IntPropertyRNA** %iprop, metadata !7392, metadata !DIExpression()), !dbg !7393
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7394
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.IntPropertyRNA*, !dbg !7395
  store %struct.IntPropertyRNA* %1, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7393
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !7396, metadata !DIExpression()), !dbg !7397
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7398
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !7400
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !7401
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !7401
  br i1 %tobool, label %if.then, label %if.else, !dbg !7402

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7403
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 7, !dbg !7403
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !7403
  %4 = load i32, i32* %val, align 8, !dbg !7403
  store i32 %4, i32* %retval, align 4, !dbg !7404
  br label %return, !dbg !7404

if.else:                                          ; preds = %entry
  %5 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7405
  %get = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %5, i32 0, i32 1, !dbg !7407
  %6 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %get, align 8, !dbg !7407
  %tobool1 = icmp ne i32 (%struct.PointerRNA*)* %6, null, !dbg !7405
  br i1 %tobool1, label %if.then2, label %if.else5, !dbg !7408

if.then2:                                         ; preds = %if.else
  %7 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7409
  %get3 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %7, i32 0, i32 1, !dbg !7410
  %8 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %get3, align 8, !dbg !7410
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7411
  %call4 = call i32 %8(%struct.PointerRNA* %9), !dbg !7409
  store i32 %call4, i32* %retval, align 4, !dbg !7412
  br label %return, !dbg !7412

if.else5:                                         ; preds = %if.else
  %10 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7413
  %get_ex = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %10, i32 0, i32 6, !dbg !7415
  %11 = load i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)** %get_ex, align 8, !dbg !7415
  %tobool6 = icmp ne i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* %11, null, !dbg !7413
  br i1 %tobool6, label %if.then7, label %if.else10, !dbg !7416

if.then7:                                         ; preds = %if.else5
  %12 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7417
  %get_ex8 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %12, i32 0, i32 6, !dbg !7418
  %13 = load i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)** %get_ex8, align 8, !dbg !7418
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7419
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7420
  %call9 = call i32 %13(%struct.PointerRNA* %14, %struct.PropertyRNA* %15), !dbg !7417
  store i32 %call9, i32* %retval, align 4, !dbg !7421
  br label %return, !dbg !7421

if.else10:                                        ; preds = %if.else5
  %16 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7422
  %defaultvalue = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %16, i32 0, i32 16, !dbg !7423
  %17 = load i32, i32* %defaultvalue, align 4, !dbg !7423
  store i32 %17, i32* %retval, align 4, !dbg !7424
  br label %return, !dbg !7424

return:                                           ; preds = %if.else10, %if.then7, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7425
  ret i32 %18, !dbg !7425
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_int_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %value) #0 !dbg !7426 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i32, align 4
  %iprop = alloca %struct.IntPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %val11 = alloca %union.IDPropertyTemplate, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7429, metadata !DIExpression()), !dbg !7430
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.declare(metadata %struct.IntPropertyRNA** %iprop, metadata !7433, metadata !DIExpression()), !dbg !7434
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7435
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.IntPropertyRNA*, !dbg !7436
  store %struct.IntPropertyRNA* %1, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7434
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !7437, metadata !DIExpression()), !dbg !7438
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7439
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !7441
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !7442
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !7442
  br i1 %tobool, label %if.then, label %if.else, !dbg !7443

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %value.addr, align 4, !dbg !7444
  %4 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7446
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %4, i32 0, i32 7, !dbg !7446
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !7446
  store i32 %3, i32* %val, align 8, !dbg !7447
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7448
  call void @rna_idproperty_touch(%struct.IDProperty* %5), !dbg !7449
  br label %if.end21, !dbg !7450

if.else:                                          ; preds = %entry
  %6 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7451
  %set = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %6, i32 0, i32 2, !dbg !7453
  %7 = load void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32)** %set, align 8, !dbg !7453
  %tobool1 = icmp ne void (%struct.PointerRNA*, i32)* %7, null, !dbg !7451
  br i1 %tobool1, label %if.then2, label %if.else4, !dbg !7454

if.then2:                                         ; preds = %if.else
  %8 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7455
  %set3 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %8, i32 0, i32 2, !dbg !7456
  %9 = load void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32)** %set3, align 8, !dbg !7456
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7457
  %11 = load i32, i32* %value.addr, align 4, !dbg !7458
  call void %9(%struct.PointerRNA* %10, i32 %11), !dbg !7455
  br label %if.end20, !dbg !7455

if.else4:                                         ; preds = %if.else
  %12 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7459
  %set_ex = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %12, i32 0, i32 7, !dbg !7461
  %13 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)** %set_ex, align 8, !dbg !7461
  %tobool5 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* %13, null, !dbg !7459
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !7462

if.then6:                                         ; preds = %if.else4
  %14 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7463
  %set_ex7 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %14, i32 0, i32 7, !dbg !7464
  %15 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)** %set_ex7, align 8, !dbg !7464
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7465
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7466
  %18 = load i32, i32* %value.addr, align 4, !dbg !7467
  call void %15(%struct.PointerRNA* %16, %struct.PropertyRNA* %17, i32 %18), !dbg !7463
  br label %if.end19, !dbg !7463

if.else8:                                         ; preds = %if.else4
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7468
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %19, i32 0, i32 4, !dbg !7470
  %20 = load i32, i32* %flag, align 8, !dbg !7470
  %and = and i32 %20, 1, !dbg !7471
  %tobool9 = icmp ne i32 %and, 0, !dbg !7471
  br i1 %tobool9, label %if.then10, label %if.end18, !dbg !7472

if.then10:                                        ; preds = %if.else8
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val11, metadata !7473, metadata !DIExpression()), !dbg !7475
  %21 = bitcast %union.IDPropertyTemplate* %val11 to i8*, !dbg !7475
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_int_set.val to i8*), i64 16, i1 false), !dbg !7475
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !7476, metadata !DIExpression()), !dbg !7477
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7478
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7479
  %call12 = call i32 @RNA_property_int_clamp(%struct.PointerRNA* %22, %struct.PropertyRNA* %23, i32* %value.addr), !dbg !7480
  %24 = load i32, i32* %value.addr, align 4, !dbg !7481
  %i = bitcast %union.IDPropertyTemplate* %val11 to i32*, !dbg !7482
  store i32 %24, i32* %i, align 8, !dbg !7483
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7484
  %call13 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %25, i8 zeroext 1), !dbg !7485
  store %struct.IDProperty* %call13, %struct.IDProperty** %group, align 8, !dbg !7486
  %26 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !7487
  %tobool14 = icmp ne %struct.IDProperty* %26, null, !dbg !7487
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !7489

if.then15:                                        ; preds = %if.then10
  %27 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !7490
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7491
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %28, i32 0, i32 3, !dbg !7492
  %29 = load i8*, i8** %identifier, align 8, !dbg !7492
  %call16 = call %struct.IDProperty* @IDP_New(i32 1, %union.IDPropertyTemplate* %val11, i8* %29), !dbg !7493
  %call17 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %27, %struct.IDProperty* %call16), !dbg !7494
  br label %if.end, !dbg !7494

if.end:                                           ; preds = %if.then15, %if.then10
  br label %if.end18, !dbg !7495

if.end18:                                         ; preds = %if.end, %if.else8
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then6
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then2
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then
  ret void, !dbg !7496
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_int_get_array(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %values) #0 !dbg !7497 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca i32*, align 8
  %iprop = alloca %struct.IntPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7498, metadata !DIExpression()), !dbg !7499
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7500, metadata !DIExpression()), !dbg !7501
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.declare(metadata %struct.IntPropertyRNA** %iprop, metadata !7504, metadata !DIExpression()), !dbg !7505
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7506
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.IntPropertyRNA*, !dbg !7507
  store %struct.IntPropertyRNA* %1, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7505
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !7508, metadata !DIExpression()), !dbg !7509
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7510
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !7512
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !7513
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !7513
  br i1 %tobool, label %if.then, label %if.else3, !dbg !7514

if.then:                                          ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7515
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 12, !dbg !7518
  %4 = load i32, i32* %arraydimension, align 8, !dbg !7518
  %cmp = icmp eq i32 %4, 0, !dbg !7519
  br i1 %cmp, label %if.then1, label %if.else, !dbg !7520

if.then1:                                         ; preds = %if.then
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7521
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7522
  %call2 = call i32 @RNA_property_int_get(%struct.PointerRNA* %5, %struct.PropertyRNA* %6), !dbg !7523
  %7 = load i32*, i32** %values.addr, align 8, !dbg !7524
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !7524
  store i32 %call2, i32* %arrayidx, align 4, !dbg !7525
  br label %if.end, !dbg !7524

if.else:                                          ; preds = %if.then
  %8 = load i32*, i32** %values.addr, align 8, !dbg !7526
  %9 = bitcast i32* %8 to i8*, !dbg !7527
  %10 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7528
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %10, i32 0, i32 7, !dbg !7528
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !7528
  %11 = load i8*, i8** %pointer, align 8, !dbg !7528
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7529
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 8, !dbg !7530
  %13 = load i32, i32* %len, align 8, !dbg !7530
  %conv = sext i32 %13 to i64, !dbg !7529
  %mul = mul i64 4, %conv, !dbg !7531
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 1 %11, i64 %mul, i1 false), !dbg !7527
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end32, !dbg !7532

if.else3:                                         ; preds = %entry
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7533
  %arraydimension4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 12, !dbg !7535
  %15 = load i32, i32* %arraydimension4, align 8, !dbg !7535
  %cmp5 = icmp eq i32 %15, 0, !dbg !7536
  br i1 %cmp5, label %if.then7, label %if.else10, !dbg !7537

if.then7:                                         ; preds = %if.else3
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7538
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7539
  %call8 = call i32 @RNA_property_int_get(%struct.PointerRNA* %16, %struct.PropertyRNA* %17), !dbg !7540
  %18 = load i32*, i32** %values.addr, align 8, !dbg !7541
  %arrayidx9 = getelementptr inbounds i32, i32* %18, i64 0, !dbg !7541
  store i32 %call8, i32* %arrayidx9, align 4, !dbg !7542
  br label %if.end31, !dbg !7541

if.else10:                                        ; preds = %if.else3
  %19 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7543
  %getarray = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %19, i32 0, i32 3, !dbg !7545
  %20 = load void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)** %getarray, align 8, !dbg !7545
  %tobool11 = icmp ne void (%struct.PointerRNA*, i32*)* %20, null, !dbg !7543
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !7546

if.then12:                                        ; preds = %if.else10
  %21 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7547
  %getarray13 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %21, i32 0, i32 3, !dbg !7548
  %22 = load void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)** %getarray13, align 8, !dbg !7548
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7549
  %24 = load i32*, i32** %values.addr, align 8, !dbg !7550
  call void %22(%struct.PointerRNA* %23, i32* %24), !dbg !7547
  br label %if.end30, !dbg !7547

if.else14:                                        ; preds = %if.else10
  %25 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7551
  %getarray_ex = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %25, i32 0, i32 8, !dbg !7553
  %26 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)** %getarray_ex, align 8, !dbg !7553
  %tobool15 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* %26, null, !dbg !7551
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !7554

if.then16:                                        ; preds = %if.else14
  %27 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7555
  %getarray_ex17 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %27, i32 0, i32 8, !dbg !7556
  %28 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)** %getarray_ex17, align 8, !dbg !7556
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7557
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7558
  %31 = load i32*, i32** %values.addr, align 8, !dbg !7559
  call void %28(%struct.PointerRNA* %29, %struct.PropertyRNA* %30, i32* %31), !dbg !7555
  br label %if.end29, !dbg !7555

if.else18:                                        ; preds = %if.else14
  %32 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7560
  %defaultarray = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %32, i32 0, i32 17, !dbg !7562
  %33 = load i32*, i32** %defaultarray, align 8, !dbg !7562
  %tobool19 = icmp ne i32* %33, null, !dbg !7560
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !7563

if.then20:                                        ; preds = %if.else18
  %34 = load i32*, i32** %values.addr, align 8, !dbg !7564
  %35 = bitcast i32* %34 to i8*, !dbg !7565
  %36 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7566
  %defaultarray21 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %36, i32 0, i32 17, !dbg !7567
  %37 = load i32*, i32** %defaultarray21, align 8, !dbg !7567
  %38 = bitcast i32* %37 to i8*, !dbg !7565
  %39 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7568
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %39, i32 0, i32 14, !dbg !7569
  %40 = load i32, i32* %totarraylength, align 8, !dbg !7569
  %conv22 = zext i32 %40 to i64, !dbg !7568
  %mul23 = mul i64 4, %conv22, !dbg !7570
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %38, i64 %mul23, i1 false), !dbg !7565
  br label %if.end28, !dbg !7565

if.else24:                                        ; preds = %if.else18
  %41 = load i32*, i32** %values.addr, align 8, !dbg !7571
  %42 = bitcast i32* %41 to i8*, !dbg !7572
  %43 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7573
  %totarraylength25 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %43, i32 0, i32 14, !dbg !7574
  %44 = load i32, i32* %totarraylength25, align 8, !dbg !7574
  %conv26 = zext i32 %44 to i64, !dbg !7573
  %mul27 = mul i64 4, %conv26, !dbg !7575
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 %mul27, i1 false), !dbg !7572
  br label %if.end28

if.end28:                                         ; preds = %if.else24, %if.then20
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then16
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then12
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then7
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end
  ret void, !dbg !7576
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_int_get_array_range(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %values) #0 !dbg !7577 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca i32*, align 8
  %array_len = alloca i32, align 4
  %arr_stack = alloca [32 x i32], align 16
  %arr = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !7582, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.declare(metadata i32* %array_len, metadata !7584, metadata !DIExpression()), !dbg !7585
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7586
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7587
  %call = call i32 @RNA_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !7588
  store i32 %call, i32* %array_len, align 4, !dbg !7585
  %2 = load i32, i32* %array_len, align 4, !dbg !7589
  %cmp = icmp sle i32 %2, 0, !dbg !7591
  br i1 %cmp, label %if.then, label %if.else, !dbg !7592

if.then:                                          ; preds = %entry
  %3 = load i32*, i32** %values.addr, align 8, !dbg !7593
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 0, !dbg !7593
  store i32 0, i32* %arrayidx, align 4, !dbg !7595
  %4 = load i32*, i32** %values.addr, align 8, !dbg !7596
  %arrayidx1 = getelementptr inbounds i32, i32* %4, i64 1, !dbg !7596
  store i32 0, i32* %arrayidx1, align 4, !dbg !7597
  br label %if.end43, !dbg !7598

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %array_len, align 4, !dbg !7599
  %cmp2 = icmp eq i32 %5, 1, !dbg !7601
  br i1 %cmp2, label %if.then3, label %if.else6, !dbg !7602

if.then3:                                         ; preds = %if.else
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7603
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7605
  %8 = load i32*, i32** %values.addr, align 8, !dbg !7606
  call void @RNA_property_int_get_array(%struct.PointerRNA* %6, %struct.PropertyRNA* %7, i32* %8), !dbg !7607
  %9 = load i32*, i32** %values.addr, align 8, !dbg !7608
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 0, !dbg !7608
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !7608
  %11 = load i32*, i32** %values.addr, align 8, !dbg !7609
  %arrayidx5 = getelementptr inbounds i32, i32* %11, i64 1, !dbg !7609
  store i32 %10, i32* %arrayidx5, align 4, !dbg !7610
  br label %if.end42, !dbg !7611

if.else6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata [32 x i32]* %arr_stack, metadata !7612, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.declare(metadata i32** %arr, metadata !7615, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7617, metadata !DIExpression()), !dbg !7618
  %12 = load i32, i32* %array_len, align 4, !dbg !7619
  %cmp7 = icmp sgt i32 %12, 32, !dbg !7621
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !7622

if.then8:                                         ; preds = %if.else6
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7623
  %14 = load i32, i32* %array_len, align 4, !dbg !7625
  %conv = sext i32 %14 to i64, !dbg !7625
  %mul = mul i64 4, %conv, !dbg !7626
  %call9 = call i8* %13(i64 %mul, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0)), !dbg !7623
  %15 = bitcast i8* %call9 to i32*, !dbg !7623
  store i32* %15, i32** %arr, align 8, !dbg !7627
  br label %if.end, !dbg !7628

if.else10:                                        ; preds = %if.else6
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %arr_stack, i64 0, i64 0, !dbg !7629
  store i32* %arraydecay, i32** %arr, align 8, !dbg !7631
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then8
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7632
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7633
  %18 = load i32*, i32** %arr, align 8, !dbg !7634
  call void @RNA_property_int_get_array(%struct.PointerRNA* %16, %struct.PropertyRNA* %17, i32* %18), !dbg !7635
  %19 = load i32*, i32** %arr, align 8, !dbg !7636
  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !7636
  %20 = load i32, i32* %arrayidx11, align 4, !dbg !7636
  %21 = load i32*, i32** %values.addr, align 8, !dbg !7637
  %arrayidx12 = getelementptr inbounds i32, i32* %21, i64 1, !dbg !7637
  store i32 %20, i32* %arrayidx12, align 4, !dbg !7638
  %22 = load i32*, i32** %values.addr, align 8, !dbg !7639
  %arrayidx13 = getelementptr inbounds i32, i32* %22, i64 0, !dbg !7639
  store i32 %20, i32* %arrayidx13, align 4, !dbg !7640
  store i32 1, i32* %i, align 4, !dbg !7641
  br label %for.cond, !dbg !7643

for.cond:                                         ; preds = %for.inc, %if.end
  %23 = load i32, i32* %i, align 4, !dbg !7644
  %24 = load i32, i32* %array_len, align 4, !dbg !7646
  %cmp14 = icmp slt i32 %23, %24, !dbg !7647
  br i1 %cmp14, label %for.body, label %for.end, !dbg !7648

for.body:                                         ; preds = %for.cond
  %25 = load i32*, i32** %values.addr, align 8, !dbg !7649
  %arrayidx16 = getelementptr inbounds i32, i32* %25, i64 0, !dbg !7649
  %26 = load i32, i32* %arrayidx16, align 4, !dbg !7649
  %27 = load i32*, i32** %arr, align 8, !dbg !7649
  %28 = load i32, i32* %i, align 4, !dbg !7649
  %idxprom = sext i32 %28 to i64, !dbg !7649
  %arrayidx17 = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !7649
  %29 = load i32, i32* %arrayidx17, align 4, !dbg !7649
  %cmp18 = icmp slt i32 %26, %29, !dbg !7649
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !7649

cond.true:                                        ; preds = %for.body
  %30 = load i32*, i32** %values.addr, align 8, !dbg !7649
  %arrayidx20 = getelementptr inbounds i32, i32* %30, i64 0, !dbg !7649
  %31 = load i32, i32* %arrayidx20, align 4, !dbg !7649
  br label %cond.end, !dbg !7649

cond.false:                                       ; preds = %for.body
  %32 = load i32*, i32** %arr, align 8, !dbg !7649
  %33 = load i32, i32* %i, align 4, !dbg !7649
  %idxprom21 = sext i32 %33 to i64, !dbg !7649
  %arrayidx22 = getelementptr inbounds i32, i32* %32, i64 %idxprom21, !dbg !7649
  %34 = load i32, i32* %arrayidx22, align 4, !dbg !7649
  br label %cond.end, !dbg !7649

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %31, %cond.true ], [ %34, %cond.false ], !dbg !7649
  %35 = load i32*, i32** %values.addr, align 8, !dbg !7651
  %arrayidx23 = getelementptr inbounds i32, i32* %35, i64 0, !dbg !7651
  store i32 %cond, i32* %arrayidx23, align 4, !dbg !7652
  %36 = load i32*, i32** %values.addr, align 8, !dbg !7653
  %arrayidx24 = getelementptr inbounds i32, i32* %36, i64 1, !dbg !7653
  %37 = load i32, i32* %arrayidx24, align 4, !dbg !7653
  %38 = load i32*, i32** %arr, align 8, !dbg !7653
  %39 = load i32, i32* %i, align 4, !dbg !7653
  %idxprom25 = sext i32 %39 to i64, !dbg !7653
  %arrayidx26 = getelementptr inbounds i32, i32* %38, i64 %idxprom25, !dbg !7653
  %40 = load i32, i32* %arrayidx26, align 4, !dbg !7653
  %cmp27 = icmp sgt i32 %37, %40, !dbg !7653
  br i1 %cmp27, label %cond.true29, label %cond.false31, !dbg !7653

cond.true29:                                      ; preds = %cond.end
  %41 = load i32*, i32** %values.addr, align 8, !dbg !7653
  %arrayidx30 = getelementptr inbounds i32, i32* %41, i64 1, !dbg !7653
  %42 = load i32, i32* %arrayidx30, align 4, !dbg !7653
  br label %cond.end34, !dbg !7653

cond.false31:                                     ; preds = %cond.end
  %43 = load i32*, i32** %arr, align 8, !dbg !7653
  %44 = load i32, i32* %i, align 4, !dbg !7653
  %idxprom32 = sext i32 %44 to i64, !dbg !7653
  %arrayidx33 = getelementptr inbounds i32, i32* %43, i64 %idxprom32, !dbg !7653
  %45 = load i32, i32* %arrayidx33, align 4, !dbg !7653
  br label %cond.end34, !dbg !7653

cond.end34:                                       ; preds = %cond.false31, %cond.true29
  %cond35 = phi i32 [ %42, %cond.true29 ], [ %45, %cond.false31 ], !dbg !7653
  %46 = load i32*, i32** %values.addr, align 8, !dbg !7654
  %arrayidx36 = getelementptr inbounds i32, i32* %46, i64 1, !dbg !7654
  store i32 %cond35, i32* %arrayidx36, align 4, !dbg !7655
  br label %for.inc, !dbg !7656

for.inc:                                          ; preds = %cond.end34
  %47 = load i32, i32* %i, align 4, !dbg !7657
  %inc = add nsw i32 %47, 1, !dbg !7657
  store i32 %inc, i32* %i, align 4, !dbg !7657
  br label %for.cond, !dbg !7658, !llvm.loop !7659

for.end:                                          ; preds = %for.cond
  %48 = load i32*, i32** %arr, align 8, !dbg !7661
  %arraydecay37 = getelementptr inbounds [32 x i32], [32 x i32]* %arr_stack, i64 0, i64 0, !dbg !7663
  %cmp38 = icmp ne i32* %48, %arraydecay37, !dbg !7664
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !7665

if.then40:                                        ; preds = %for.end
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7666
  %50 = load i32*, i32** %arr, align 8, !dbg !7668
  %51 = bitcast i32* %50 to i8*, !dbg !7668
  call void %49(i8* %51), !dbg !7666
  br label %if.end41, !dbg !7669

if.end41:                                         ; preds = %if.then40, %for.end
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then3
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then
  ret void, !dbg !7670
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_int_get_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !7671 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %tmp = alloca [32 x i32], align 16
  %len = alloca i32, align 4
  %tmparray = alloca i32*, align 8
  %value = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7672, metadata !DIExpression()), !dbg !7673
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  call void @llvm.dbg.declare(metadata [32 x i32]* %tmp, metadata !7678, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7680, metadata !DIExpression()), !dbg !7681
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7682
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7683
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !7684
  store i32 %call, i32* %len, align 4, !dbg !7681
  %2 = load i32, i32* %len, align 4, !dbg !7685
  %cmp = icmp sle i32 %2, 32, !dbg !7687
  br i1 %cmp, label %if.then, label %if.else, !dbg !7688

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7689
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7691
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 0, !dbg !7692
  call void @RNA_property_int_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %arraydecay), !dbg !7693
  %5 = load i32, i32* %index.addr, align 4, !dbg !7694
  %idxprom = sext i32 %5 to i64, !dbg !7695
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 %idxprom, !dbg !7695
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7695
  store i32 %6, i32* %retval, align 4, !dbg !7696
  br label %return, !dbg !7696

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %tmparray, metadata !7697, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7700, metadata !DIExpression()), !dbg !7701
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7702
  %8 = load i32, i32* %len, align 4, !dbg !7703
  %conv = sext i32 %8 to i64, !dbg !7703
  %mul = mul i64 4, %conv, !dbg !7704
  %call1 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)), !dbg !7702
  %9 = bitcast i8* %call1 to i32*, !dbg !7702
  store i32* %9, i32** %tmparray, align 8, !dbg !7705
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7706
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7707
  %12 = load i32*, i32** %tmparray, align 8, !dbg !7708
  call void @RNA_property_int_get_array(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, i32* %12), !dbg !7709
  %13 = load i32*, i32** %tmparray, align 8, !dbg !7710
  %14 = load i32, i32* %index.addr, align 4, !dbg !7711
  %idxprom2 = sext i32 %14 to i64, !dbg !7710
  %arrayidx3 = getelementptr inbounds i32, i32* %13, i64 %idxprom2, !dbg !7710
  %15 = load i32, i32* %arrayidx3, align 4, !dbg !7710
  store i32 %15, i32* %value, align 4, !dbg !7712
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7713
  %17 = load i32*, i32** %tmparray, align 8, !dbg !7714
  %18 = bitcast i32* %17 to i8*, !dbg !7714
  call void %16(i8* %18), !dbg !7713
  %19 = load i32, i32* %value, align 4, !dbg !7715
  store i32 %19, i32* %retval, align 4, !dbg !7716
  br label %return, !dbg !7716

return:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7717
  ret i32 %20, !dbg !7717
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_int_set_array(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %values) #0 !dbg !7718 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca i32*, align 8
  %iprop = alloca %struct.IntPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %val20 = alloca %union.IDPropertyTemplate, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7719, metadata !DIExpression()), !dbg !7720
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7721, metadata !DIExpression()), !dbg !7722
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.declare(metadata %struct.IntPropertyRNA** %iprop, metadata !7725, metadata !DIExpression()), !dbg !7726
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7727
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.IntPropertyRNA*, !dbg !7728
  store %struct.IntPropertyRNA* %1, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7726
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !7729, metadata !DIExpression()), !dbg !7730
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7731
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !7733
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !7734
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !7734
  br i1 %tobool, label %if.then, label %if.else3, !dbg !7735

if.then:                                          ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7736
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 12, !dbg !7739
  %4 = load i32, i32* %arraydimension, align 8, !dbg !7739
  %cmp = icmp eq i32 %4, 0, !dbg !7740
  br i1 %cmp, label %if.then1, label %if.else, !dbg !7741

if.then1:                                         ; preds = %if.then
  %5 = load i32*, i32** %values.addr, align 8, !dbg !7742
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 0, !dbg !7742
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7742
  %7 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7743
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %7, i32 0, i32 7, !dbg !7743
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !7743
  store i32 %6, i32* %val, align 8, !dbg !7744
  br label %if.end, !dbg !7743

if.else:                                          ; preds = %if.then
  %8 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7745
  %data2 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 7, !dbg !7745
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data2, i32 0, i32 0, !dbg !7745
  %9 = load i8*, i8** %pointer, align 8, !dbg !7745
  %10 = load i32*, i32** %values.addr, align 8, !dbg !7746
  %11 = bitcast i32* %10 to i8*, !dbg !7747
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7748
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 8, !dbg !7749
  %13 = load i32, i32* %len, align 8, !dbg !7749
  %conv = sext i32 %13 to i64, !dbg !7748
  %mul = mul i64 4, %conv, !dbg !7750
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 4 %11, i64 %mul, i1 false), !dbg !7747
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %14 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7751
  call void @rna_idproperty_touch(%struct.IDProperty* %14), !dbg !7752
  br label %if.end39, !dbg !7753

if.else3:                                         ; preds = %entry
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7754
  %arraydimension4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %15, i32 0, i32 12, !dbg !7756
  %16 = load i32, i32* %arraydimension4, align 8, !dbg !7756
  %cmp5 = icmp eq i32 %16, 0, !dbg !7757
  br i1 %cmp5, label %if.then7, label %if.else9, !dbg !7758

if.then7:                                         ; preds = %if.else3
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7759
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7760
  %19 = load i32*, i32** %values.addr, align 8, !dbg !7761
  %arrayidx8 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !7761
  %20 = load i32, i32* %arrayidx8, align 4, !dbg !7761
  call void @RNA_property_int_set(%struct.PointerRNA* %17, %struct.PropertyRNA* %18, i32 %20), !dbg !7762
  br label %if.end38, !dbg !7762

if.else9:                                         ; preds = %if.else3
  %21 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7763
  %setarray = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %21, i32 0, i32 4, !dbg !7765
  %22 = load void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)** %setarray, align 8, !dbg !7765
  %tobool10 = icmp ne void (%struct.PointerRNA*, i32*)* %22, null, !dbg !7763
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !7766

if.then11:                                        ; preds = %if.else9
  %23 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7767
  %setarray12 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %23, i32 0, i32 4, !dbg !7768
  %24 = load void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)** %setarray12, align 8, !dbg !7768
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7769
  %26 = load i32*, i32** %values.addr, align 8, !dbg !7770
  call void %24(%struct.PointerRNA* %25, i32* %26), !dbg !7767
  br label %if.end37, !dbg !7767

if.else13:                                        ; preds = %if.else9
  %27 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7771
  %setarray_ex = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %27, i32 0, i32 9, !dbg !7773
  %28 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)** %setarray_ex, align 8, !dbg !7773
  %tobool14 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* %28, null, !dbg !7771
  br i1 %tobool14, label %if.then15, label %if.else17, !dbg !7774

if.then15:                                        ; preds = %if.else13
  %29 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7775
  %setarray_ex16 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %29, i32 0, i32 9, !dbg !7776
  %30 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)** %setarray_ex16, align 8, !dbg !7776
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7777
  %32 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7778
  %33 = load i32*, i32** %values.addr, align 8, !dbg !7779
  call void %30(%struct.PointerRNA* %31, %struct.PropertyRNA* %32, i32* %33), !dbg !7775
  br label %if.end36, !dbg !7775

if.else17:                                        ; preds = %if.else13
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7780
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %34, i32 0, i32 4, !dbg !7782
  %35 = load i32, i32* %flag, align 8, !dbg !7782
  %and = and i32 %35, 1, !dbg !7783
  %tobool18 = icmp ne i32 %and, 0, !dbg !7783
  br i1 %tobool18, label %if.then19, label %if.end35, !dbg !7784

if.then19:                                        ; preds = %if.else17
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val20, metadata !7785, metadata !DIExpression()), !dbg !7787
  %36 = bitcast %union.IDPropertyTemplate* %val20 to i8*, !dbg !7787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_int_set_array.val to i8*), i64 16, i1 false), !dbg !7787
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !7788, metadata !DIExpression()), !dbg !7789
  %37 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7790
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %37, i32 0, i32 14, !dbg !7791
  %38 = load i32, i32* %totarraylength, align 8, !dbg !7791
  %conv21 = trunc i32 %38 to i16, !dbg !7790
  %array = bitcast %union.IDPropertyTemplate* %val20 to %struct.anon.1*, !dbg !7792
  %len22 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %array, i32 0, i32 1, !dbg !7793
  store i16 %conv21, i16* %len22, align 2, !dbg !7794
  %array23 = bitcast %union.IDPropertyTemplate* %val20 to %struct.anon.1*, !dbg !7795
  %type = getelementptr inbounds %struct.anon.1, %struct.anon.1* %array23, i32 0, i32 0, !dbg !7796
  store i16 1, i16* %type, align 8, !dbg !7797
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7798
  %call24 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %39, i8 zeroext 1), !dbg !7799
  store %struct.IDProperty* %call24, %struct.IDProperty** %group, align 8, !dbg !7800
  %40 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !7801
  %tobool25 = icmp ne %struct.IDProperty* %40, null, !dbg !7801
  br i1 %tobool25, label %if.then26, label %if.end34, !dbg !7803

if.then26:                                        ; preds = %if.then19
  %41 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7804
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %41, i32 0, i32 3, !dbg !7806
  %42 = load i8*, i8** %identifier, align 8, !dbg !7806
  %call27 = call %struct.IDProperty* @IDP_New(i32 5, %union.IDPropertyTemplate* %val20, i8* %42), !dbg !7807
  store %struct.IDProperty* %call27, %struct.IDProperty** %idprop, align 8, !dbg !7808
  %43 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !7809
  %44 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7810
  %call28 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %43, %struct.IDProperty* %44), !dbg !7811
  %45 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7812
  %data29 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %45, i32 0, i32 7, !dbg !7812
  %pointer30 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data29, i32 0, i32 0, !dbg !7812
  %46 = load i8*, i8** %pointer30, align 8, !dbg !7812
  %47 = load i32*, i32** %values.addr, align 8, !dbg !7813
  %48 = bitcast i32* %47 to i8*, !dbg !7814
  %49 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7815
  %len31 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %49, i32 0, i32 8, !dbg !7816
  %50 = load i32, i32* %len31, align 8, !dbg !7816
  %conv32 = sext i32 %50 to i64, !dbg !7815
  %mul33 = mul i64 4, %conv32, !dbg !7817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 4 %48, i64 %mul33, i1 false), !dbg !7814
  br label %if.end34, !dbg !7818

if.end34:                                         ; preds = %if.then26, %if.then19
  br label %if.end35, !dbg !7819

if.end35:                                         ; preds = %if.end34, %if.else17
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then15
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then11
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then7
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  ret void, !dbg !7820
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_int_set_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, i32 %value) #0 !dbg !7821 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %tmp = alloca [32 x i32], align 16
  %len = alloca i32, align 4
  %tmparray = alloca i32*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7822, metadata !DIExpression()), !dbg !7823
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7824, metadata !DIExpression()), !dbg !7825
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7828, metadata !DIExpression()), !dbg !7829
  call void @llvm.dbg.declare(metadata [32 x i32]* %tmp, metadata !7830, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7832, metadata !DIExpression()), !dbg !7833
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7834
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7835
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !7836
  store i32 %call, i32* %len, align 4, !dbg !7833
  %2 = load i32, i32* %len, align 4, !dbg !7837
  %cmp = icmp sle i32 %2, 32, !dbg !7839
  br i1 %cmp, label %if.then, label %if.else, !dbg !7840

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7841
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7843
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 0, !dbg !7844
  call void @RNA_property_int_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %arraydecay), !dbg !7845
  %5 = load i32, i32* %value.addr, align 4, !dbg !7846
  %6 = load i32, i32* %index.addr, align 4, !dbg !7847
  %idxprom = sext i32 %6 to i64, !dbg !7848
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 %idxprom, !dbg !7848
  store i32 %5, i32* %arrayidx, align 4, !dbg !7849
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7850
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7851
  %arraydecay1 = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 0, !dbg !7852
  call void @RNA_property_int_set_array(%struct.PointerRNA* %7, %struct.PropertyRNA* %8, i32* %arraydecay1), !dbg !7853
  br label %if.end, !dbg !7854

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %tmparray, metadata !7855, metadata !DIExpression()), !dbg !7857
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7858
  %10 = load i32, i32* %len, align 4, !dbg !7859
  %conv = sext i32 %10 to i64, !dbg !7859
  %mul = mul i64 4, %conv, !dbg !7860
  %call2 = call i8* %9(i64 %mul, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)), !dbg !7858
  %11 = bitcast i8* %call2 to i32*, !dbg !7858
  store i32* %11, i32** %tmparray, align 8, !dbg !7861
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7862
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7863
  %14 = load i32*, i32** %tmparray, align 8, !dbg !7864
  call void @RNA_property_int_get_array(%struct.PointerRNA* %12, %struct.PropertyRNA* %13, i32* %14), !dbg !7865
  %15 = load i32, i32* %value.addr, align 4, !dbg !7866
  %16 = load i32*, i32** %tmparray, align 8, !dbg !7867
  %17 = load i32, i32* %index.addr, align 4, !dbg !7868
  %idxprom3 = sext i32 %17 to i64, !dbg !7867
  %arrayidx4 = getelementptr inbounds i32, i32* %16, i64 %idxprom3, !dbg !7867
  store i32 %15, i32* %arrayidx4, align 4, !dbg !7869
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7870
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7871
  %20 = load i32*, i32** %tmparray, align 8, !dbg !7872
  call void @RNA_property_int_set_array(%struct.PointerRNA* %18, %struct.PropertyRNA* %19, i32* %20), !dbg !7873
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7874
  %22 = load i32*, i32** %tmparray, align 8, !dbg !7875
  %23 = bitcast i32* %22 to i8*, !dbg !7875
  call void %21(i8* %23), !dbg !7874
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7876
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_int_get_default(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop) #0 !dbg !7877 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %iprop = alloca %struct.IntPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.declare(metadata %struct.IntPropertyRNA** %iprop, metadata !7882, metadata !DIExpression()), !dbg !7883
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7884
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !7885
  %1 = bitcast %struct.PropertyRNA* %call to %struct.IntPropertyRNA*, !dbg !7886
  store %struct.IntPropertyRNA* %1, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7883
  %2 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7887
  %defaultvalue = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %2, i32 0, i32 16, !dbg !7888
  %3 = load i32, i32* %defaultvalue, align 4, !dbg !7888
  ret i32 %3, !dbg !7889
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_int_get_default_array(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop, i32* %values) #0 !dbg !7890 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca i32*, align 8
  %iprop = alloca %struct.IntPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !7891, metadata !DIExpression()), !dbg !7892
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7893, metadata !DIExpression()), !dbg !7894
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.declare(metadata %struct.IntPropertyRNA** %iprop, metadata !7897, metadata !DIExpression()), !dbg !7898
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7899
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !7900
  %1 = bitcast %struct.PropertyRNA* %call to %struct.IntPropertyRNA*, !dbg !7901
  store %struct.IntPropertyRNA* %1, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7898
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7902
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 12, !dbg !7904
  %3 = load i32, i32* %arraydimension, align 8, !dbg !7904
  %cmp = icmp eq i32 %3, 0, !dbg !7905
  br i1 %cmp, label %if.then, label %if.else, !dbg !7906

if.then:                                          ; preds = %entry
  %4 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7907
  %defaultvalue = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %4, i32 0, i32 16, !dbg !7908
  %5 = load i32, i32* %defaultvalue, align 4, !dbg !7908
  %6 = load i32*, i32** %values.addr, align 8, !dbg !7909
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 0, !dbg !7909
  store i32 %5, i32* %arrayidx, align 4, !dbg !7910
  br label %if.end7, !dbg !7909

if.else:                                          ; preds = %entry
  %7 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7911
  %defaultarray = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %7, i32 0, i32 17, !dbg !7913
  %8 = load i32*, i32** %defaultarray, align 8, !dbg !7913
  %tobool = icmp ne i32* %8, null, !dbg !7911
  br i1 %tobool, label %if.then1, label %if.else3, !dbg !7914

if.then1:                                         ; preds = %if.else
  %9 = load i32*, i32** %values.addr, align 8, !dbg !7915
  %10 = bitcast i32* %9 to i8*, !dbg !7916
  %11 = load %struct.IntPropertyRNA*, %struct.IntPropertyRNA** %iprop, align 8, !dbg !7917
  %defaultarray2 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %11, i32 0, i32 17, !dbg !7918
  %12 = load i32*, i32** %defaultarray2, align 8, !dbg !7918
  %13 = bitcast i32* %12 to i8*, !dbg !7916
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7919
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 14, !dbg !7920
  %15 = load i32, i32* %totarraylength, align 8, !dbg !7920
  %conv = zext i32 %15 to i64, !dbg !7919
  %mul = mul i64 4, %conv, !dbg !7921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %13, i64 %mul, i1 false), !dbg !7916
  br label %if.end, !dbg !7916

if.else3:                                         ; preds = %if.else
  %16 = load i32*, i32** %values.addr, align 8, !dbg !7922
  %17 = bitcast i32* %16 to i8*, !dbg !7923
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7924
  %totarraylength4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %18, i32 0, i32 14, !dbg !7925
  %19 = load i32, i32* %totarraylength4, align 8, !dbg !7925
  %conv5 = zext i32 %19 to i64, !dbg !7924
  %mul6 = mul i64 4, %conv5, !dbg !7926
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %mul6, i1 false), !dbg !7923
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then1
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !7927
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_int_get_default_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !7928 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %tmp = alloca [32 x i32], align 16
  %len = alloca i32, align 4
  %tmparray = alloca i32*, align 8
  %value = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7929, metadata !DIExpression()), !dbg !7930
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7931, metadata !DIExpression()), !dbg !7932
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7933, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.declare(metadata [32 x i32]* %tmp, metadata !7935, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7937, metadata !DIExpression()), !dbg !7938
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7939
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7940
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !7941
  store i32 %call, i32* %len, align 4, !dbg !7938
  %2 = load i32, i32* %len, align 4, !dbg !7942
  %cmp = icmp sle i32 %2, 32, !dbg !7944
  br i1 %cmp, label %if.then, label %if.else, !dbg !7945

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7946
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7948
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 0, !dbg !7949
  call void @RNA_property_int_get_default_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %arraydecay), !dbg !7950
  %5 = load i32, i32* %index.addr, align 4, !dbg !7951
  %idxprom = sext i32 %5 to i64, !dbg !7952
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %tmp, i64 0, i64 %idxprom, !dbg !7952
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7952
  store i32 %6, i32* %retval, align 4, !dbg !7953
  br label %return, !dbg !7953

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %tmparray, metadata !7954, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7957, metadata !DIExpression()), !dbg !7958
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7959
  %8 = load i32, i32* %len, align 4, !dbg !7960
  %conv = sext i32 %8 to i64, !dbg !7960
  %mul = mul i64 4, %conv, !dbg !7961
  %call1 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i64 0, i64 0)), !dbg !7959
  %9 = bitcast i8* %call1 to i32*, !dbg !7959
  store i32* %9, i32** %tmparray, align 8, !dbg !7962
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7963
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7964
  %12 = load i32*, i32** %tmparray, align 8, !dbg !7965
  call void @RNA_property_int_get_default_array(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, i32* %12), !dbg !7966
  %13 = load i32*, i32** %tmparray, align 8, !dbg !7967
  %14 = load i32, i32* %index.addr, align 4, !dbg !7968
  %idxprom2 = sext i32 %14 to i64, !dbg !7967
  %arrayidx3 = getelementptr inbounds i32, i32* %13, i64 %idxprom2, !dbg !7967
  %15 = load i32, i32* %arrayidx3, align 4, !dbg !7967
  store i32 %15, i32* %value, align 4, !dbg !7969
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7970
  %17 = load i32*, i32** %tmparray, align 8, !dbg !7971
  %18 = bitcast i32* %17 to i8*, !dbg !7971
  call void %16(i8* %18), !dbg !7970
  %19 = load i32, i32* %value, align 4, !dbg !7972
  store i32 %19, i32* %retval, align 4, !dbg !7973
  br label %return, !dbg !7973

return:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7974
  ret i32 %20, !dbg !7974
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @RNA_property_float_get(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !7975 {
entry:
  %retval = alloca float, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %fprop = alloca %struct.FloatPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7980, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.declare(metadata %struct.FloatPropertyRNA** %fprop, metadata !7982, metadata !DIExpression()), !dbg !7983
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7984
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.FloatPropertyRNA*, !dbg !7985
  store %struct.FloatPropertyRNA* %1, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !7983
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !7986, metadata !DIExpression()), !dbg !7987
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7988
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !7990
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !7991
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !7991
  br i1 %tobool, label %if.then, label %if.else6, !dbg !7992

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7993
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 2, !dbg !7996
  %4 = load i8, i8* %type, align 8, !dbg !7996
  %conv = zext i8 %4 to i32, !dbg !7993
  %cmp = icmp eq i32 %conv, 2, !dbg !7997
  br i1 %cmp, label %if.then2, label %if.else, !dbg !7998

if.then2:                                         ; preds = %if.then
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !7999
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 7, !dbg !7999
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !7999
  %6 = bitcast i32* %val to float*, !dbg !7999
  %7 = load float, float* %6, align 8, !dbg !7999
  store float %7, float* %retval, align 4, !dbg !8000
  br label %return, !dbg !8000

if.else:                                          ; preds = %if.then
  %8 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8001
  %data3 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 7, !dbg !8001
  %val4 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data3, i32 0, i32 2, !dbg !8001
  %9 = bitcast i32* %val4 to double*, !dbg !8001
  %10 = load double, double* %9, align 8, !dbg !8001
  %conv5 = fptrunc double %10 to float, !dbg !8002
  store float %conv5, float* %retval, align 4, !dbg !8003
  br label %return, !dbg !8003

if.else6:                                         ; preds = %entry
  %11 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8004
  %get = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %11, i32 0, i32 1, !dbg !8006
  %12 = load float (%struct.PointerRNA*)*, float (%struct.PointerRNA*)** %get, align 8, !dbg !8006
  %tobool7 = icmp ne float (%struct.PointerRNA*)* %12, null, !dbg !8004
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !8007

if.then8:                                         ; preds = %if.else6
  %13 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8008
  %get9 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %13, i32 0, i32 1, !dbg !8009
  %14 = load float (%struct.PointerRNA*)*, float (%struct.PointerRNA*)** %get9, align 8, !dbg !8009
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8010
  %call10 = call float %14(%struct.PointerRNA* %15), !dbg !8008
  store float %call10, float* %retval, align 4, !dbg !8011
  br label %return, !dbg !8011

if.else11:                                        ; preds = %if.else6
  %16 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8012
  %get_ex = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %16, i32 0, i32 6, !dbg !8014
  %17 = load float (%struct.PointerRNA*, %struct.PropertyRNA*)*, float (%struct.PointerRNA*, %struct.PropertyRNA*)** %get_ex, align 8, !dbg !8014
  %tobool12 = icmp ne float (%struct.PointerRNA*, %struct.PropertyRNA*)* %17, null, !dbg !8012
  br i1 %tobool12, label %if.then13, label %if.else16, !dbg !8015

if.then13:                                        ; preds = %if.else11
  %18 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8016
  %get_ex14 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %18, i32 0, i32 6, !dbg !8017
  %19 = load float (%struct.PointerRNA*, %struct.PropertyRNA*)*, float (%struct.PointerRNA*, %struct.PropertyRNA*)** %get_ex14, align 8, !dbg !8017
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8018
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8019
  %call15 = call float %19(%struct.PointerRNA* %20, %struct.PropertyRNA* %21), !dbg !8016
  store float %call15, float* %retval, align 4, !dbg !8020
  br label %return, !dbg !8020

if.else16:                                        ; preds = %if.else11
  %22 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8021
  %defaultvalue = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %22, i32 0, i32 17, !dbg !8022
  %23 = load float, float* %defaultvalue, align 8, !dbg !8022
  store float %23, float* %retval, align 4, !dbg !8023
  br label %return, !dbg !8023

return:                                           ; preds = %if.else16, %if.then13, %if.then8, %if.else, %if.then2
  %24 = load float, float* %retval, align 4, !dbg !8024
  ret float %24, !dbg !8024
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_float_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, float %value) #0 !dbg !8025 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca float, align 4
  %fprop = alloca %struct.FloatPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %val17 = alloca %union.IDPropertyTemplate, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8028, metadata !DIExpression()), !dbg !8029
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8030, metadata !DIExpression()), !dbg !8031
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !8032, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.declare(metadata %struct.FloatPropertyRNA** %fprop, metadata !8034, metadata !DIExpression()), !dbg !8035
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8036
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.FloatPropertyRNA*, !dbg !8037
  store %struct.FloatPropertyRNA* %1, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8035
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !8038, metadata !DIExpression()), !dbg !8039
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8040
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !8042
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !8043
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !8043
  br i1 %tobool, label %if.then, label %if.else6, !dbg !8044

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8045
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 2, !dbg !8048
  %4 = load i8, i8* %type, align 8, !dbg !8048
  %conv = zext i8 %4 to i32, !dbg !8045
  %cmp = icmp eq i32 %conv, 2, !dbg !8049
  br i1 %cmp, label %if.then2, label %if.else, !dbg !8050

if.then2:                                         ; preds = %if.then
  %5 = load float, float* %value.addr, align 4, !dbg !8051
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8052
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %6, i32 0, i32 7, !dbg !8052
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !8052
  %7 = bitcast i32* %val to float*, !dbg !8052
  store float %5, float* %7, align 8, !dbg !8053
  br label %if.end, !dbg !8052

if.else:                                          ; preds = %if.then
  %8 = load float, float* %value.addr, align 4, !dbg !8054
  %conv3 = fpext float %8 to double, !dbg !8054
  %9 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8055
  %data4 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %9, i32 0, i32 7, !dbg !8055
  %val5 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data4, i32 0, i32 2, !dbg !8055
  %10 = bitcast i32* %val5 to double*, !dbg !8055
  store double %conv3, double* %10, align 8, !dbg !8056
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %11 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8057
  call void @rna_idproperty_touch(%struct.IDProperty* %11), !dbg !8058
  br label %if.end28, !dbg !8059

if.else6:                                         ; preds = %entry
  %12 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8060
  %set = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %12, i32 0, i32 2, !dbg !8062
  %13 = load void (%struct.PointerRNA*, float)*, void (%struct.PointerRNA*, float)** %set, align 8, !dbg !8062
  %tobool7 = icmp ne void (%struct.PointerRNA*, float)* %13, null, !dbg !8060
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !8063

if.then8:                                         ; preds = %if.else6
  %14 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8064
  %set9 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %14, i32 0, i32 2, !dbg !8066
  %15 = load void (%struct.PointerRNA*, float)*, void (%struct.PointerRNA*, float)** %set9, align 8, !dbg !8066
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8067
  %17 = load float, float* %value.addr, align 4, !dbg !8068
  call void %15(%struct.PointerRNA* %16, float %17), !dbg !8064
  br label %if.end27, !dbg !8069

if.else10:                                        ; preds = %if.else6
  %18 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8070
  %set_ex = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %18, i32 0, i32 7, !dbg !8072
  %19 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)** %set_ex, align 8, !dbg !8072
  %tobool11 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, float)* %19, null, !dbg !8070
  br i1 %tobool11, label %if.then12, label %if.else14, !dbg !8073

if.then12:                                        ; preds = %if.else10
  %20 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8074
  %set_ex13 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %20, i32 0, i32 7, !dbg !8076
  %21 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)** %set_ex13, align 8, !dbg !8076
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8077
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8078
  %24 = load float, float* %value.addr, align 4, !dbg !8079
  call void %21(%struct.PointerRNA* %22, %struct.PropertyRNA* %23, float %24), !dbg !8074
  br label %if.end26, !dbg !8080

if.else14:                                        ; preds = %if.else10
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8081
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %25, i32 0, i32 4, !dbg !8083
  %26 = load i32, i32* %flag, align 8, !dbg !8083
  %and = and i32 %26, 1, !dbg !8084
  %tobool15 = icmp ne i32 %and, 0, !dbg !8084
  br i1 %tobool15, label %if.then16, label %if.end25, !dbg !8085

if.then16:                                        ; preds = %if.else14
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val17, metadata !8086, metadata !DIExpression()), !dbg !8088
  %27 = bitcast %union.IDPropertyTemplate* %val17 to i8*, !dbg !8088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_float_set.val to i8*), i64 16, i1 false), !dbg !8088
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !8089, metadata !DIExpression()), !dbg !8090
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8091
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8092
  %call18 = call i32 @RNA_property_float_clamp(%struct.PointerRNA* %28, %struct.PropertyRNA* %29, float* %value.addr), !dbg !8093
  %30 = load float, float* %value.addr, align 4, !dbg !8094
  %f = bitcast %union.IDPropertyTemplate* %val17 to float*, !dbg !8095
  store float %30, float* %f, align 8, !dbg !8096
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8097
  %call19 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %31, i8 zeroext 1), !dbg !8098
  store %struct.IDProperty* %call19, %struct.IDProperty** %group, align 8, !dbg !8099
  %32 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !8100
  %tobool20 = icmp ne %struct.IDProperty* %32, null, !dbg !8100
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !8102

if.then21:                                        ; preds = %if.then16
  %33 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !8103
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8104
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %34, i32 0, i32 3, !dbg !8105
  %35 = load i8*, i8** %identifier, align 8, !dbg !8105
  %call22 = call %struct.IDProperty* @IDP_New(i32 2, %union.IDPropertyTemplate* %val17, i8* %35), !dbg !8106
  %call23 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %33, %struct.IDProperty* %call22), !dbg !8107
  br label %if.end24, !dbg !8107

if.end24:                                         ; preds = %if.then21, %if.then16
  br label %if.end25, !dbg !8108

if.end25:                                         ; preds = %if.end24, %if.else14
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then12
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then8
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end
  ret void, !dbg !8109
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_float_get_array(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, float* %values) #0 !dbg !8110 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca float*, align 8
  %fprop = alloca %struct.FloatPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %i = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8113, metadata !DIExpression()), !dbg !8114
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8115, metadata !DIExpression()), !dbg !8116
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !8117, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.declare(metadata %struct.FloatPropertyRNA** %fprop, metadata !8119, metadata !DIExpression()), !dbg !8120
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8121
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.FloatPropertyRNA*, !dbg !8122
  store %struct.FloatPropertyRNA* %1, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8120
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !8123, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8125, metadata !DIExpression()), !dbg !8126
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8127
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !8129
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !8130
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !8130
  br i1 %tobool, label %if.then, label %if.else18, !dbg !8131

if.then:                                          ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8132
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 12, !dbg !8135
  %4 = load i32, i32* %arraydimension, align 8, !dbg !8135
  %cmp = icmp eq i32 %4, 0, !dbg !8136
  br i1 %cmp, label %if.then1, label %if.else, !dbg !8137

if.then1:                                         ; preds = %if.then
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8138
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8139
  %call2 = call float @RNA_property_float_get(%struct.PointerRNA* %5, %struct.PropertyRNA* %6), !dbg !8140
  %7 = load float*, float** %values.addr, align 8, !dbg !8141
  %arrayidx = getelementptr inbounds float, float* %7, i64 0, !dbg !8141
  store float %call2, float* %arrayidx, align 4, !dbg !8142
  br label %if.end17, !dbg !8141

if.else:                                          ; preds = %if.then
  %8 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8143
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 3, !dbg !8145
  %9 = load i8, i8* %subtype, align 1, !dbg !8145
  %conv = zext i8 %9 to i32, !dbg !8143
  %cmp3 = icmp eq i32 %conv, 2, !dbg !8146
  br i1 %cmp3, label %if.then5, label %if.else7, !dbg !8147

if.then5:                                         ; preds = %if.else
  %10 = load float*, float** %values.addr, align 8, !dbg !8148
  %11 = bitcast float* %10 to i8*, !dbg !8150
  %12 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8151
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i32 0, i32 7, !dbg !8151
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !8151
  %13 = load i8*, i8** %pointer, align 8, !dbg !8151
  %14 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8152
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %14, i32 0, i32 8, !dbg !8153
  %15 = load i32, i32* %len, align 8, !dbg !8153
  %conv6 = sext i32 %15 to i64, !dbg !8152
  %mul = mul i64 4, %conv6, !dbg !8154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 1 %13, i64 %mul, i1 false), !dbg !8150
  br label %if.end, !dbg !8155

if.else7:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !8156
  br label %for.cond, !dbg !8159

for.cond:                                         ; preds = %for.inc, %if.else7
  %16 = load i32, i32* %i, align 4, !dbg !8160
  %17 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8162
  %len8 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %17, i32 0, i32 8, !dbg !8163
  %18 = load i32, i32* %len8, align 8, !dbg !8163
  %cmp9 = icmp slt i32 %16, %18, !dbg !8164
  br i1 %cmp9, label %for.body, label %for.end, !dbg !8165

for.body:                                         ; preds = %for.cond
  %19 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8166
  %data11 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %19, i32 0, i32 7, !dbg !8166
  %pointer12 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data11, i32 0, i32 0, !dbg !8166
  %20 = load i8*, i8** %pointer12, align 8, !dbg !8166
  %21 = bitcast i8* %20 to double*, !dbg !8167
  %22 = load i32, i32* %i, align 4, !dbg !8168
  %idxprom = sext i32 %22 to i64, !dbg !8169
  %arrayidx13 = getelementptr inbounds double, double* %21, i64 %idxprom, !dbg !8169
  %23 = load double, double* %arrayidx13, align 8, !dbg !8169
  %conv14 = fptrunc double %23 to float, !dbg !8170
  %24 = load float*, float** %values.addr, align 8, !dbg !8171
  %25 = load i32, i32* %i, align 4, !dbg !8172
  %idxprom15 = sext i32 %25 to i64, !dbg !8171
  %arrayidx16 = getelementptr inbounds float, float* %24, i64 %idxprom15, !dbg !8171
  store float %conv14, float* %arrayidx16, align 4, !dbg !8173
  br label %for.inc, !dbg !8171

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !8174
  %inc = add nsw i32 %26, 1, !dbg !8174
  store i32 %inc, i32* %i, align 4, !dbg !8174
  br label %for.cond, !dbg !8175, !llvm.loop !8176

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then5
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then1
  br label %if.end47, !dbg !8178

if.else18:                                        ; preds = %entry
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8179
  %arraydimension19 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %27, i32 0, i32 12, !dbg !8181
  %28 = load i32, i32* %arraydimension19, align 8, !dbg !8181
  %cmp20 = icmp eq i32 %28, 0, !dbg !8182
  br i1 %cmp20, label %if.then22, label %if.else25, !dbg !8183

if.then22:                                        ; preds = %if.else18
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8184
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8185
  %call23 = call float @RNA_property_float_get(%struct.PointerRNA* %29, %struct.PropertyRNA* %30), !dbg !8186
  %31 = load float*, float** %values.addr, align 8, !dbg !8187
  %arrayidx24 = getelementptr inbounds float, float* %31, i64 0, !dbg !8187
  store float %call23, float* %arrayidx24, align 4, !dbg !8188
  br label %if.end46, !dbg !8187

if.else25:                                        ; preds = %if.else18
  %32 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8189
  %getarray = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %32, i32 0, i32 3, !dbg !8191
  %33 = load void (%struct.PointerRNA*, float*)*, void (%struct.PointerRNA*, float*)** %getarray, align 8, !dbg !8191
  %tobool26 = icmp ne void (%struct.PointerRNA*, float*)* %33, null, !dbg !8189
  br i1 %tobool26, label %if.then27, label %if.else29, !dbg !8192

if.then27:                                        ; preds = %if.else25
  %34 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8193
  %getarray28 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %34, i32 0, i32 3, !dbg !8194
  %35 = load void (%struct.PointerRNA*, float*)*, void (%struct.PointerRNA*, float*)** %getarray28, align 8, !dbg !8194
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8195
  %37 = load float*, float** %values.addr, align 8, !dbg !8196
  call void %35(%struct.PointerRNA* %36, float* %37), !dbg !8193
  br label %if.end45, !dbg !8193

if.else29:                                        ; preds = %if.else25
  %38 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8197
  %getarray_ex = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %38, i32 0, i32 8, !dbg !8199
  %39 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)** %getarray_ex, align 8, !dbg !8199
  %tobool30 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* %39, null, !dbg !8197
  br i1 %tobool30, label %if.then31, label %if.else33, !dbg !8200

if.then31:                                        ; preds = %if.else29
  %40 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8201
  %getarray_ex32 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %40, i32 0, i32 8, !dbg !8202
  %41 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)** %getarray_ex32, align 8, !dbg !8202
  %42 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8203
  %43 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8204
  %44 = load float*, float** %values.addr, align 8, !dbg !8205
  call void %41(%struct.PointerRNA* %42, %struct.PropertyRNA* %43, float* %44), !dbg !8201
  br label %if.end44, !dbg !8201

if.else33:                                        ; preds = %if.else29
  %45 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8206
  %defaultarray = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %45, i32 0, i32 18, !dbg !8208
  %46 = load float*, float** %defaultarray, align 8, !dbg !8208
  %tobool34 = icmp ne float* %46, null, !dbg !8206
  br i1 %tobool34, label %if.then35, label %if.else39, !dbg !8209

if.then35:                                        ; preds = %if.else33
  %47 = load float*, float** %values.addr, align 8, !dbg !8210
  %48 = bitcast float* %47 to i8*, !dbg !8211
  %49 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8212
  %defaultarray36 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %49, i32 0, i32 18, !dbg !8213
  %50 = load float*, float** %defaultarray36, align 8, !dbg !8213
  %51 = bitcast float* %50 to i8*, !dbg !8211
  %52 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8214
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %52, i32 0, i32 14, !dbg !8215
  %53 = load i32, i32* %totarraylength, align 8, !dbg !8215
  %conv37 = zext i32 %53 to i64, !dbg !8214
  %mul38 = mul i64 4, %conv37, !dbg !8216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %51, i64 %mul38, i1 false), !dbg !8211
  br label %if.end43, !dbg !8211

if.else39:                                        ; preds = %if.else33
  %54 = load float*, float** %values.addr, align 8, !dbg !8217
  %55 = bitcast float* %54 to i8*, !dbg !8218
  %56 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8219
  %totarraylength40 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %56, i32 0, i32 14, !dbg !8220
  %57 = load i32, i32* %totarraylength40, align 8, !dbg !8220
  %conv41 = zext i32 %57 to i64, !dbg !8219
  %mul42 = mul i64 4, %conv41, !dbg !8221
  call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 0, i64 %mul42, i1 false), !dbg !8218
  br label %if.end43

if.end43:                                         ; preds = %if.else39, %if.then35
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then31
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then27
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then22
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end17
  ret void, !dbg !8222
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_float_get_array_range(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, float* %values) #0 !dbg !8223 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca float*, align 8
  %array_len = alloca i32, align 4
  %arr_stack = alloca [32 x float], align 16
  %arr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8224, metadata !DIExpression()), !dbg !8225
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8226, metadata !DIExpression()), !dbg !8227
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !8228, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.declare(metadata i32* %array_len, metadata !8230, metadata !DIExpression()), !dbg !8231
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8232
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8233
  %call = call i32 @RNA_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !8234
  store i32 %call, i32* %array_len, align 4, !dbg !8231
  %2 = load i32, i32* %array_len, align 4, !dbg !8235
  %cmp = icmp sle i32 %2, 0, !dbg !8237
  br i1 %cmp, label %if.then, label %if.else, !dbg !8238

if.then:                                          ; preds = %entry
  %3 = load float*, float** %values.addr, align 8, !dbg !8239
  %arrayidx = getelementptr inbounds float, float* %3, i64 0, !dbg !8239
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !8241
  %4 = load float*, float** %values.addr, align 8, !dbg !8242
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !8242
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !8243
  br label %if.end43, !dbg !8244

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %array_len, align 4, !dbg !8245
  %cmp2 = icmp eq i32 %5, 1, !dbg !8247
  br i1 %cmp2, label %if.then3, label %if.else6, !dbg !8248

if.then3:                                         ; preds = %if.else
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8249
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8251
  %8 = load float*, float** %values.addr, align 8, !dbg !8252
  call void @RNA_property_float_get_array(%struct.PointerRNA* %6, %struct.PropertyRNA* %7, float* %8), !dbg !8253
  %9 = load float*, float** %values.addr, align 8, !dbg !8254
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 0, !dbg !8254
  %10 = load float, float* %arrayidx4, align 4, !dbg !8254
  %11 = load float*, float** %values.addr, align 8, !dbg !8255
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 1, !dbg !8255
  store float %10, float* %arrayidx5, align 4, !dbg !8256
  br label %if.end42, !dbg !8257

if.else6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata [32 x float]* %arr_stack, metadata !8258, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.declare(metadata float** %arr, metadata !8262, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8264, metadata !DIExpression()), !dbg !8265
  %12 = load i32, i32* %array_len, align 4, !dbg !8266
  %cmp7 = icmp sgt i32 %12, 32, !dbg !8268
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !8269

if.then8:                                         ; preds = %if.else6
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8270
  %14 = load i32, i32* %array_len, align 4, !dbg !8272
  %conv = sext i32 %14 to i64, !dbg !8272
  %mul = mul i64 4, %conv, !dbg !8273
  %call9 = call i8* %13(i64 %mul, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0)), !dbg !8270
  %15 = bitcast i8* %call9 to float*, !dbg !8270
  store float* %15, float** %arr, align 8, !dbg !8274
  br label %if.end, !dbg !8275

if.else10:                                        ; preds = %if.else6
  %arraydecay = getelementptr inbounds [32 x float], [32 x float]* %arr_stack, i64 0, i64 0, !dbg !8276
  store float* %arraydecay, float** %arr, align 8, !dbg !8278
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then8
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8279
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8280
  %18 = load float*, float** %arr, align 8, !dbg !8281
  call void @RNA_property_float_get_array(%struct.PointerRNA* %16, %struct.PropertyRNA* %17, float* %18), !dbg !8282
  %19 = load float*, float** %arr, align 8, !dbg !8283
  %arrayidx11 = getelementptr inbounds float, float* %19, i64 0, !dbg !8283
  %20 = load float, float* %arrayidx11, align 4, !dbg !8283
  %21 = load float*, float** %values.addr, align 8, !dbg !8284
  %arrayidx12 = getelementptr inbounds float, float* %21, i64 1, !dbg !8284
  store float %20, float* %arrayidx12, align 4, !dbg !8285
  %22 = load float*, float** %values.addr, align 8, !dbg !8286
  %arrayidx13 = getelementptr inbounds float, float* %22, i64 0, !dbg !8286
  store float %20, float* %arrayidx13, align 4, !dbg !8287
  store i32 1, i32* %i, align 4, !dbg !8288
  br label %for.cond, !dbg !8290

for.cond:                                         ; preds = %for.inc, %if.end
  %23 = load i32, i32* %i, align 4, !dbg !8291
  %24 = load i32, i32* %array_len, align 4, !dbg !8293
  %cmp14 = icmp slt i32 %23, %24, !dbg !8294
  br i1 %cmp14, label %for.body, label %for.end, !dbg !8295

for.body:                                         ; preds = %for.cond
  %25 = load float*, float** %values.addr, align 8, !dbg !8296
  %arrayidx16 = getelementptr inbounds float, float* %25, i64 0, !dbg !8296
  %26 = load float, float* %arrayidx16, align 4, !dbg !8296
  %27 = load float*, float** %arr, align 8, !dbg !8296
  %28 = load i32, i32* %i, align 4, !dbg !8296
  %idxprom = sext i32 %28 to i64, !dbg !8296
  %arrayidx17 = getelementptr inbounds float, float* %27, i64 %idxprom, !dbg !8296
  %29 = load float, float* %arrayidx17, align 4, !dbg !8296
  %cmp18 = fcmp olt float %26, %29, !dbg !8296
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !8296

cond.true:                                        ; preds = %for.body
  %30 = load float*, float** %values.addr, align 8, !dbg !8296
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 0, !dbg !8296
  %31 = load float, float* %arrayidx20, align 4, !dbg !8296
  br label %cond.end, !dbg !8296

cond.false:                                       ; preds = %for.body
  %32 = load float*, float** %arr, align 8, !dbg !8296
  %33 = load i32, i32* %i, align 4, !dbg !8296
  %idxprom21 = sext i32 %33 to i64, !dbg !8296
  %arrayidx22 = getelementptr inbounds float, float* %32, i64 %idxprom21, !dbg !8296
  %34 = load float, float* %arrayidx22, align 4, !dbg !8296
  br label %cond.end, !dbg !8296

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %31, %cond.true ], [ %34, %cond.false ], !dbg !8296
  %35 = load float*, float** %values.addr, align 8, !dbg !8298
  %arrayidx23 = getelementptr inbounds float, float* %35, i64 0, !dbg !8298
  store float %cond, float* %arrayidx23, align 4, !dbg !8299
  %36 = load float*, float** %values.addr, align 8, !dbg !8300
  %arrayidx24 = getelementptr inbounds float, float* %36, i64 1, !dbg !8300
  %37 = load float, float* %arrayidx24, align 4, !dbg !8300
  %38 = load float*, float** %arr, align 8, !dbg !8300
  %39 = load i32, i32* %i, align 4, !dbg !8300
  %idxprom25 = sext i32 %39 to i64, !dbg !8300
  %arrayidx26 = getelementptr inbounds float, float* %38, i64 %idxprom25, !dbg !8300
  %40 = load float, float* %arrayidx26, align 4, !dbg !8300
  %cmp27 = fcmp ogt float %37, %40, !dbg !8300
  br i1 %cmp27, label %cond.true29, label %cond.false31, !dbg !8300

cond.true29:                                      ; preds = %cond.end
  %41 = load float*, float** %values.addr, align 8, !dbg !8300
  %arrayidx30 = getelementptr inbounds float, float* %41, i64 1, !dbg !8300
  %42 = load float, float* %arrayidx30, align 4, !dbg !8300
  br label %cond.end34, !dbg !8300

cond.false31:                                     ; preds = %cond.end
  %43 = load float*, float** %arr, align 8, !dbg !8300
  %44 = load i32, i32* %i, align 4, !dbg !8300
  %idxprom32 = sext i32 %44 to i64, !dbg !8300
  %arrayidx33 = getelementptr inbounds float, float* %43, i64 %idxprom32, !dbg !8300
  %45 = load float, float* %arrayidx33, align 4, !dbg !8300
  br label %cond.end34, !dbg !8300

cond.end34:                                       ; preds = %cond.false31, %cond.true29
  %cond35 = phi float [ %42, %cond.true29 ], [ %45, %cond.false31 ], !dbg !8300
  %46 = load float*, float** %values.addr, align 8, !dbg !8301
  %arrayidx36 = getelementptr inbounds float, float* %46, i64 1, !dbg !8301
  store float %cond35, float* %arrayidx36, align 4, !dbg !8302
  br label %for.inc, !dbg !8303

for.inc:                                          ; preds = %cond.end34
  %47 = load i32, i32* %i, align 4, !dbg !8304
  %inc = add nsw i32 %47, 1, !dbg !8304
  store i32 %inc, i32* %i, align 4, !dbg !8304
  br label %for.cond, !dbg !8305, !llvm.loop !8306

for.end:                                          ; preds = %for.cond
  %48 = load float*, float** %arr, align 8, !dbg !8308
  %arraydecay37 = getelementptr inbounds [32 x float], [32 x float]* %arr_stack, i64 0, i64 0, !dbg !8310
  %cmp38 = icmp ne float* %48, %arraydecay37, !dbg !8311
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !8312

if.then40:                                        ; preds = %for.end
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8313
  %50 = load float*, float** %arr, align 8, !dbg !8315
  %51 = bitcast float* %50 to i8*, !dbg !8315
  call void %49(i8* %51), !dbg !8313
  br label %if.end41, !dbg !8316

if.end41:                                         ; preds = %if.then40, %for.end
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then3
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then
  ret void, !dbg !8317
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @RNA_property_float_get_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !8318 {
entry:
  %retval = alloca float, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %tmp = alloca [32 x float], align 16
  %len = alloca i32, align 4
  %tmparray = alloca float*, align 8
  %value = alloca float, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8321, metadata !DIExpression()), !dbg !8322
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8325, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.declare(metadata [32 x float]* %tmp, metadata !8327, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8329, metadata !DIExpression()), !dbg !8330
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8331
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8332
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !8333
  store i32 %call, i32* %len, align 4, !dbg !8330
  %2 = load i32, i32* %len, align 4, !dbg !8334
  %cmp = icmp sle i32 %2, 32, !dbg !8336
  br i1 %cmp, label %if.then, label %if.else, !dbg !8337

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8338
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8340
  %arraydecay = getelementptr inbounds [32 x float], [32 x float]* %tmp, i64 0, i64 0, !dbg !8341
  call void @RNA_property_float_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, float* %arraydecay), !dbg !8342
  %5 = load i32, i32* %index.addr, align 4, !dbg !8343
  %idxprom = sext i32 %5 to i64, !dbg !8344
  %arrayidx = getelementptr inbounds [32 x float], [32 x float]* %tmp, i64 0, i64 %idxprom, !dbg !8344
  %6 = load float, float* %arrayidx, align 4, !dbg !8344
  store float %6, float* %retval, align 4, !dbg !8345
  br label %return, !dbg !8345

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %tmparray, metadata !8346, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.declare(metadata float* %value, metadata !8349, metadata !DIExpression()), !dbg !8350
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8351
  %8 = load i32, i32* %len, align 4, !dbg !8352
  %conv = sext i32 %8 to i64, !dbg !8352
  %mul = mul i64 4, %conv, !dbg !8353
  %call1 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)), !dbg !8351
  %9 = bitcast i8* %call1 to float*, !dbg !8351
  store float* %9, float** %tmparray, align 8, !dbg !8354
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8355
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8356
  %12 = load float*, float** %tmparray, align 8, !dbg !8357
  call void @RNA_property_float_get_array(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, float* %12), !dbg !8358
  %13 = load float*, float** %tmparray, align 8, !dbg !8359
  %14 = load i32, i32* %index.addr, align 4, !dbg !8360
  %idxprom2 = sext i32 %14 to i64, !dbg !8359
  %arrayidx3 = getelementptr inbounds float, float* %13, i64 %idxprom2, !dbg !8359
  %15 = load float, float* %arrayidx3, align 4, !dbg !8359
  store float %15, float* %value, align 4, !dbg !8361
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8362
  %17 = load float*, float** %tmparray, align 8, !dbg !8363
  %18 = bitcast float* %17 to i8*, !dbg !8363
  call void %16(i8* %18), !dbg !8362
  %19 = load float, float* %value, align 4, !dbg !8364
  store float %19, float* %retval, align 4, !dbg !8365
  br label %return, !dbg !8365

return:                                           ; preds = %if.else, %if.then
  %20 = load float, float* %retval, align 4, !dbg !8366
  ret float %20, !dbg !8366
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_float_set_array(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, float* %values) #0 !dbg !8367 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca float*, align 8
  %fprop = alloca %struct.FloatPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %i = alloca i32, align 4
  %val45 = alloca %union.IDPropertyTemplate, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !8374, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.declare(metadata %struct.FloatPropertyRNA** %fprop, metadata !8376, metadata !DIExpression()), !dbg !8377
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8378
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.FloatPropertyRNA*, !dbg !8379
  store %struct.FloatPropertyRNA* %1, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8377
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !8380, metadata !DIExpression()), !dbg !8381
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8382, metadata !DIExpression()), !dbg !8383
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8384
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !8386
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !8387
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !8387
  br i1 %tobool, label %if.then, label %if.else28, !dbg !8388

if.then:                                          ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8389
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %3, i32 0, i32 12, !dbg !8392
  %4 = load i32, i32* %arraydimension, align 8, !dbg !8392
  %cmp = icmp eq i32 %4, 0, !dbg !8393
  br i1 %cmp, label %if.then1, label %if.else9, !dbg !8394

if.then1:                                         ; preds = %if.then
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8395
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 2, !dbg !8398
  %6 = load i8, i8* %type, align 8, !dbg !8398
  %conv = zext i8 %6 to i32, !dbg !8395
  %cmp2 = icmp eq i32 %conv, 2, !dbg !8399
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !8400

if.then4:                                         ; preds = %if.then1
  %7 = load float*, float** %values.addr, align 8, !dbg !8401
  %arrayidx = getelementptr inbounds float, float* %7, i64 0, !dbg !8401
  %8 = load float, float* %arrayidx, align 4, !dbg !8401
  %9 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8402
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %9, i32 0, i32 7, !dbg !8402
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !8402
  %10 = bitcast i32* %val to float*, !dbg !8402
  store float %8, float* %10, align 8, !dbg !8403
  br label %if.end, !dbg !8402

if.else:                                          ; preds = %if.then1
  %11 = load float*, float** %values.addr, align 8, !dbg !8404
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 0, !dbg !8404
  %12 = load float, float* %arrayidx5, align 4, !dbg !8404
  %conv6 = fpext float %12 to double, !dbg !8404
  %13 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8405
  %data7 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %13, i32 0, i32 7, !dbg !8405
  %val8 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data7, i32 0, i32 2, !dbg !8405
  %14 = bitcast i32* %val8 to double*, !dbg !8405
  store double %conv6, double* %14, align 8, !dbg !8406
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end27, !dbg !8407

if.else9:                                         ; preds = %if.then
  %15 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8408
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %15, i32 0, i32 3, !dbg !8410
  %16 = load i8, i8* %subtype, align 1, !dbg !8410
  %conv10 = zext i8 %16 to i32, !dbg !8408
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !8411
  br i1 %cmp11, label %if.then13, label %if.else16, !dbg !8412

if.then13:                                        ; preds = %if.else9
  %17 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8413
  %data14 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %17, i32 0, i32 7, !dbg !8413
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data14, i32 0, i32 0, !dbg !8413
  %18 = load i8*, i8** %pointer, align 8, !dbg !8413
  %19 = load float*, float** %values.addr, align 8, !dbg !8415
  %20 = bitcast float* %19 to i8*, !dbg !8416
  %21 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8417
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %21, i32 0, i32 8, !dbg !8418
  %22 = load i32, i32* %len, align 8, !dbg !8418
  %conv15 = sext i32 %22 to i64, !dbg !8417
  %mul = mul i64 4, %conv15, !dbg !8419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 4 %20, i64 %mul, i1 false), !dbg !8416
  br label %if.end26, !dbg !8420

if.else16:                                        ; preds = %if.else9
  store i32 0, i32* %i, align 4, !dbg !8421
  br label %for.cond, !dbg !8424

for.cond:                                         ; preds = %for.inc, %if.else16
  %23 = load i32, i32* %i, align 4, !dbg !8425
  %24 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8427
  %len17 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %24, i32 0, i32 8, !dbg !8428
  %25 = load i32, i32* %len17, align 8, !dbg !8428
  %cmp18 = icmp slt i32 %23, %25, !dbg !8429
  br i1 %cmp18, label %for.body, label %for.end, !dbg !8430

for.body:                                         ; preds = %for.cond
  %26 = load float*, float** %values.addr, align 8, !dbg !8431
  %27 = load i32, i32* %i, align 4, !dbg !8432
  %idxprom = sext i32 %27 to i64, !dbg !8431
  %arrayidx20 = getelementptr inbounds float, float* %26, i64 %idxprom, !dbg !8431
  %28 = load float, float* %arrayidx20, align 4, !dbg !8431
  %conv21 = fpext float %28 to double, !dbg !8431
  %29 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8433
  %data22 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %29, i32 0, i32 7, !dbg !8433
  %pointer23 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data22, i32 0, i32 0, !dbg !8433
  %30 = load i8*, i8** %pointer23, align 8, !dbg !8433
  %31 = bitcast i8* %30 to double*, !dbg !8434
  %32 = load i32, i32* %i, align 4, !dbg !8435
  %idxprom24 = sext i32 %32 to i64, !dbg !8436
  %arrayidx25 = getelementptr inbounds double, double* %31, i64 %idxprom24, !dbg !8436
  store double %conv21, double* %arrayidx25, align 8, !dbg !8437
  br label %for.inc, !dbg !8436

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !8438
  %inc = add nsw i32 %33, 1, !dbg !8438
  store i32 %inc, i32* %i, align 4, !dbg !8438
  br label %for.cond, !dbg !8439, !llvm.loop !8440

for.end:                                          ; preds = %for.cond
  br label %if.end26

if.end26:                                         ; preds = %for.end, %if.then13
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  %34 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8442
  call void @rna_idproperty_touch(%struct.IDProperty* %34), !dbg !8443
  br label %if.end65, !dbg !8444

if.else28:                                        ; preds = %entry
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8445
  %arraydimension29 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %35, i32 0, i32 12, !dbg !8447
  %36 = load i32, i32* %arraydimension29, align 8, !dbg !8447
  %cmp30 = icmp eq i32 %36, 0, !dbg !8448
  br i1 %cmp30, label %if.then32, label %if.else34, !dbg !8449

if.then32:                                        ; preds = %if.else28
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8450
  %38 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8451
  %39 = load float*, float** %values.addr, align 8, !dbg !8452
  %arrayidx33 = getelementptr inbounds float, float* %39, i64 0, !dbg !8452
  %40 = load float, float* %arrayidx33, align 4, !dbg !8452
  call void @RNA_property_float_set(%struct.PointerRNA* %37, %struct.PropertyRNA* %38, float %40), !dbg !8453
  br label %if.end64, !dbg !8453

if.else34:                                        ; preds = %if.else28
  %41 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8454
  %setarray = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %41, i32 0, i32 4, !dbg !8456
  %42 = load void (%struct.PointerRNA*, float*)*, void (%struct.PointerRNA*, float*)** %setarray, align 8, !dbg !8456
  %tobool35 = icmp ne void (%struct.PointerRNA*, float*)* %42, null, !dbg !8454
  br i1 %tobool35, label %if.then36, label %if.else38, !dbg !8457

if.then36:                                        ; preds = %if.else34
  %43 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8458
  %setarray37 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %43, i32 0, i32 4, !dbg !8460
  %44 = load void (%struct.PointerRNA*, float*)*, void (%struct.PointerRNA*, float*)** %setarray37, align 8, !dbg !8460
  %45 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8461
  %46 = load float*, float** %values.addr, align 8, !dbg !8462
  call void %44(%struct.PointerRNA* %45, float* %46), !dbg !8458
  br label %if.end63, !dbg !8463

if.else38:                                        ; preds = %if.else34
  %47 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8464
  %setarray_ex = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %47, i32 0, i32 9, !dbg !8466
  %48 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)** %setarray_ex, align 8, !dbg !8466
  %tobool39 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* %48, null, !dbg !8464
  br i1 %tobool39, label %if.then40, label %if.else42, !dbg !8467

if.then40:                                        ; preds = %if.else38
  %49 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8468
  %setarray_ex41 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %49, i32 0, i32 9, !dbg !8470
  %50 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)** %setarray_ex41, align 8, !dbg !8470
  %51 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8471
  %52 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8472
  %53 = load float*, float** %values.addr, align 8, !dbg !8473
  call void %50(%struct.PointerRNA* %51, %struct.PropertyRNA* %52, float* %53), !dbg !8468
  br label %if.end62, !dbg !8474

if.else42:                                        ; preds = %if.else38
  %54 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8475
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %54, i32 0, i32 4, !dbg !8477
  %55 = load i32, i32* %flag, align 8, !dbg !8477
  %and = and i32 %55, 1, !dbg !8478
  %tobool43 = icmp ne i32 %and, 0, !dbg !8478
  br i1 %tobool43, label %if.then44, label %if.end61, !dbg !8479

if.then44:                                        ; preds = %if.else42
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val45, metadata !8480, metadata !DIExpression()), !dbg !8482
  %56 = bitcast %union.IDPropertyTemplate* %val45 to i8*, !dbg !8482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_float_set_array.val to i8*), i64 16, i1 false), !dbg !8482
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !8483, metadata !DIExpression()), !dbg !8484
  %57 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8485
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %57, i32 0, i32 14, !dbg !8486
  %58 = load i32, i32* %totarraylength, align 8, !dbg !8486
  %conv46 = trunc i32 %58 to i16, !dbg !8485
  %array = bitcast %union.IDPropertyTemplate* %val45 to %struct.anon.1*, !dbg !8487
  %len47 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %array, i32 0, i32 1, !dbg !8488
  store i16 %conv46, i16* %len47, align 2, !dbg !8489
  %array48 = bitcast %union.IDPropertyTemplate* %val45 to %struct.anon.1*, !dbg !8490
  %type49 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %array48, i32 0, i32 0, !dbg !8491
  store i16 2, i16* %type49, align 8, !dbg !8492
  %59 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8493
  %call50 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %59, i8 zeroext 1), !dbg !8494
  store %struct.IDProperty* %call50, %struct.IDProperty** %group, align 8, !dbg !8495
  %60 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !8496
  %tobool51 = icmp ne %struct.IDProperty* %60, null, !dbg !8496
  br i1 %tobool51, label %if.then52, label %if.end60, !dbg !8498

if.then52:                                        ; preds = %if.then44
  %61 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8499
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %61, i32 0, i32 3, !dbg !8501
  %62 = load i8*, i8** %identifier, align 8, !dbg !8501
  %call53 = call %struct.IDProperty* @IDP_New(i32 5, %union.IDPropertyTemplate* %val45, i8* %62), !dbg !8502
  store %struct.IDProperty* %call53, %struct.IDProperty** %idprop, align 8, !dbg !8503
  %63 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !8504
  %64 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8505
  %call54 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %63, %struct.IDProperty* %64), !dbg !8506
  %65 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8507
  %data55 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %65, i32 0, i32 7, !dbg !8507
  %pointer56 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data55, i32 0, i32 0, !dbg !8507
  %66 = load i8*, i8** %pointer56, align 8, !dbg !8507
  %67 = load float*, float** %values.addr, align 8, !dbg !8508
  %68 = bitcast float* %67 to i8*, !dbg !8509
  %69 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8510
  %len57 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %69, i32 0, i32 8, !dbg !8511
  %70 = load i32, i32* %len57, align 8, !dbg !8511
  %conv58 = sext i32 %70 to i64, !dbg !8510
  %mul59 = mul i64 4, %conv58, !dbg !8512
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 4 %68, i64 %mul59, i1 false), !dbg !8509
  br label %if.end60, !dbg !8513

if.end60:                                         ; preds = %if.then52, %if.then44
  br label %if.end61, !dbg !8514

if.end61:                                         ; preds = %if.end60, %if.else42
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then40
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then36
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then32
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end27
  ret void, !dbg !8515
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_float_set_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, float %value) #0 !dbg !8516 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %value.addr = alloca float, align 4
  %tmp = alloca [32 x float], align 16
  %len = alloca i32, align 4
  %tmparray = alloca float*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8519, metadata !DIExpression()), !dbg !8520
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8523, metadata !DIExpression()), !dbg !8524
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.declare(metadata [32 x float]* %tmp, metadata !8527, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8529, metadata !DIExpression()), !dbg !8530
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8531
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8532
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !8533
  store i32 %call, i32* %len, align 4, !dbg !8530
  %2 = load i32, i32* %len, align 4, !dbg !8534
  %cmp = icmp sle i32 %2, 32, !dbg !8536
  br i1 %cmp, label %if.then, label %if.else, !dbg !8537

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8538
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8540
  %arraydecay = getelementptr inbounds [32 x float], [32 x float]* %tmp, i64 0, i64 0, !dbg !8541
  call void @RNA_property_float_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, float* %arraydecay), !dbg !8542
  %5 = load float, float* %value.addr, align 4, !dbg !8543
  %6 = load i32, i32* %index.addr, align 4, !dbg !8544
  %idxprom = sext i32 %6 to i64, !dbg !8545
  %arrayidx = getelementptr inbounds [32 x float], [32 x float]* %tmp, i64 0, i64 %idxprom, !dbg !8545
  store float %5, float* %arrayidx, align 4, !dbg !8546
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8547
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8548
  %arraydecay1 = getelementptr inbounds [32 x float], [32 x float]* %tmp, i64 0, i64 0, !dbg !8549
  call void @RNA_property_float_set_array(%struct.PointerRNA* %7, %struct.PropertyRNA* %8, float* %arraydecay1), !dbg !8550
  br label %if.end, !dbg !8551

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %tmparray, metadata !8552, metadata !DIExpression()), !dbg !8554
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8555
  %10 = load i32, i32* %len, align 4, !dbg !8556
  %conv = sext i32 %10 to i64, !dbg !8556
  %mul = mul i64 4, %conv, !dbg !8557
  %call2 = call i8* %9(i64 %mul, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)), !dbg !8555
  %11 = bitcast i8* %call2 to float*, !dbg !8555
  store float* %11, float** %tmparray, align 8, !dbg !8558
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8559
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8560
  %14 = load float*, float** %tmparray, align 8, !dbg !8561
  call void @RNA_property_float_get_array(%struct.PointerRNA* %12, %struct.PropertyRNA* %13, float* %14), !dbg !8562
  %15 = load float, float* %value.addr, align 4, !dbg !8563
  %16 = load float*, float** %tmparray, align 8, !dbg !8564
  %17 = load i32, i32* %index.addr, align 4, !dbg !8565
  %idxprom3 = sext i32 %17 to i64, !dbg !8564
  %arrayidx4 = getelementptr inbounds float, float* %16, i64 %idxprom3, !dbg !8564
  store float %15, float* %arrayidx4, align 4, !dbg !8566
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8567
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8568
  %20 = load float*, float** %tmparray, align 8, !dbg !8569
  call void @RNA_property_float_set_array(%struct.PointerRNA* %18, %struct.PropertyRNA* %19, float* %20), !dbg !8570
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8571
  %22 = load float*, float** %tmparray, align 8, !dbg !8572
  %23 = bitcast float* %22 to i8*, !dbg !8572
  call void %21(i8* %23), !dbg !8571
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8573
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @RNA_property_float_get_default(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop) #0 !dbg !8574 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %fprop = alloca %struct.FloatPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !8575, metadata !DIExpression()), !dbg !8576
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8577, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.declare(metadata %struct.FloatPropertyRNA** %fprop, metadata !8579, metadata !DIExpression()), !dbg !8580
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8581
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !8582
  %1 = bitcast %struct.PropertyRNA* %call to %struct.FloatPropertyRNA*, !dbg !8583
  store %struct.FloatPropertyRNA* %1, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8580
  %2 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8584
  %defaultvalue = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %2, i32 0, i32 17, !dbg !8585
  %3 = load float, float* %defaultvalue, align 8, !dbg !8585
  ret float %3, !dbg !8586
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_float_get_default_array(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop, float* %values) #0 !dbg !8587 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %values.addr = alloca float*, align 8
  %fprop = alloca %struct.FloatPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.declare(metadata %struct.FloatPropertyRNA** %fprop, metadata !8594, metadata !DIExpression()), !dbg !8595
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8596
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !8597
  %1 = bitcast %struct.PropertyRNA* %call to %struct.FloatPropertyRNA*, !dbg !8598
  store %struct.FloatPropertyRNA* %1, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8595
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8599
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 12, !dbg !8601
  %3 = load i32, i32* %arraydimension, align 8, !dbg !8601
  %cmp = icmp eq i32 %3, 0, !dbg !8602
  br i1 %cmp, label %if.then, label %if.else, !dbg !8603

if.then:                                          ; preds = %entry
  %4 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8604
  %defaultvalue = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %4, i32 0, i32 17, !dbg !8605
  %5 = load float, float* %defaultvalue, align 8, !dbg !8605
  %6 = load float*, float** %values.addr, align 8, !dbg !8606
  %arrayidx = getelementptr inbounds float, float* %6, i64 0, !dbg !8606
  store float %5, float* %arrayidx, align 4, !dbg !8607
  br label %if.end7, !dbg !8606

if.else:                                          ; preds = %entry
  %7 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8608
  %defaultarray = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %7, i32 0, i32 18, !dbg !8610
  %8 = load float*, float** %defaultarray, align 8, !dbg !8610
  %tobool = icmp ne float* %8, null, !dbg !8608
  br i1 %tobool, label %if.then1, label %if.else3, !dbg !8611

if.then1:                                         ; preds = %if.else
  %9 = load float*, float** %values.addr, align 8, !dbg !8612
  %10 = bitcast float* %9 to i8*, !dbg !8613
  %11 = load %struct.FloatPropertyRNA*, %struct.FloatPropertyRNA** %fprop, align 8, !dbg !8614
  %defaultarray2 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %11, i32 0, i32 18, !dbg !8615
  %12 = load float*, float** %defaultarray2, align 8, !dbg !8615
  %13 = bitcast float* %12 to i8*, !dbg !8613
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8616
  %totarraylength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 14, !dbg !8617
  %15 = load i32, i32* %totarraylength, align 8, !dbg !8617
  %conv = zext i32 %15 to i64, !dbg !8616
  %mul = mul i64 4, %conv, !dbg !8618
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %13, i64 %mul, i1 false), !dbg !8613
  br label %if.end, !dbg !8613

if.else3:                                         ; preds = %if.else
  %16 = load float*, float** %values.addr, align 8, !dbg !8619
  %17 = bitcast float* %16 to i8*, !dbg !8620
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8621
  %totarraylength4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %18, i32 0, i32 14, !dbg !8622
  %19 = load i32, i32* %totarraylength4, align 8, !dbg !8622
  %conv5 = zext i32 %19 to i64, !dbg !8621
  %mul6 = mul i64 4, %conv5, !dbg !8623
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %mul6, i1 false), !dbg !8620
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then1
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !8624
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @RNA_property_float_get_default_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !8625 {
entry:
  %retval = alloca float, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %tmp = alloca [32 x float], align 16
  %len = alloca i32, align 4
  %tmparray = alloca float*, align 8
  %value = alloca float, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8628, metadata !DIExpression()), !dbg !8629
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.declare(metadata [32 x float]* %tmp, metadata !8632, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8634, metadata !DIExpression()), !dbg !8635
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8636
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8637
  %call = call i32 @rna_ensure_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !8638
  store i32 %call, i32* %len, align 4, !dbg !8635
  %2 = load i32, i32* %len, align 4, !dbg !8639
  %cmp = icmp sle i32 %2, 32, !dbg !8641
  br i1 %cmp, label %if.then, label %if.else, !dbg !8642

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8643
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8645
  %arraydecay = getelementptr inbounds [32 x float], [32 x float]* %tmp, i64 0, i64 0, !dbg !8646
  call void @RNA_property_float_get_default_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, float* %arraydecay), !dbg !8647
  %5 = load i32, i32* %index.addr, align 4, !dbg !8648
  %idxprom = sext i32 %5 to i64, !dbg !8649
  %arrayidx = getelementptr inbounds [32 x float], [32 x float]* %tmp, i64 0, i64 %idxprom, !dbg !8649
  %6 = load float, float* %arrayidx, align 4, !dbg !8649
  store float %6, float* %retval, align 4, !dbg !8650
  br label %return, !dbg !8650

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %tmparray, metadata !8651, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.declare(metadata float* %value, metadata !8654, metadata !DIExpression()), !dbg !8655
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8656
  %8 = load i32, i32* %len, align 4, !dbg !8657
  %conv = sext i32 %8 to i64, !dbg !8657
  %mul = mul i64 4, %conv, !dbg !8658
  %call1 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23, i64 0, i64 0)), !dbg !8656
  %9 = bitcast i8* %call1 to float*, !dbg !8656
  store float* %9, float** %tmparray, align 8, !dbg !8659
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8660
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8661
  %12 = load float*, float** %tmparray, align 8, !dbg !8662
  call void @RNA_property_float_get_default_array(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, float* %12), !dbg !8663
  %13 = load float*, float** %tmparray, align 8, !dbg !8664
  %14 = load i32, i32* %index.addr, align 4, !dbg !8665
  %idxprom2 = sext i32 %14 to i64, !dbg !8664
  %arrayidx3 = getelementptr inbounds float, float* %13, i64 %idxprom2, !dbg !8664
  %15 = load float, float* %arrayidx3, align 4, !dbg !8664
  store float %15, float* %value, align 4, !dbg !8666
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8667
  %17 = load float*, float** %tmparray, align 8, !dbg !8668
  %18 = bitcast float* %17 to i8*, !dbg !8668
  call void %16(i8* %18), !dbg !8667
  %19 = load float, float* %value, align 4, !dbg !8669
  store float %19, float* %retval, align 4, !dbg !8670
  br label %return, !dbg !8670

return:                                           ; preds = %if.else, %if.then
  %20 = load float, float* %retval, align 4, !dbg !8671
  ret float %20, !dbg !8671
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_string_get(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %value) #0 !dbg !8672 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i8*, align 8
  %sprop = alloca %struct.StringPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8675, metadata !DIExpression()), !dbg !8676
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8677, metadata !DIExpression()), !dbg !8678
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !8679, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.declare(metadata %struct.StringPropertyRNA** %sprop, metadata !8681, metadata !DIExpression()), !dbg !8682
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8683
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.StringPropertyRNA*, !dbg !8684
  store %struct.StringPropertyRNA* %1, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8682
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !8685, metadata !DIExpression()), !dbg !8686
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8687
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !8689
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !8690
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !8690
  br i1 %tobool, label %if.then, label %if.else9, !dbg !8691

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8692
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 3, !dbg !8695
  %4 = load i8, i8* %subtype, align 1, !dbg !8695
  %conv = zext i8 %4 to i32, !dbg !8692
  %cmp = icmp eq i32 %conv, 1, !dbg !8696
  br i1 %cmp, label %if.then2, label %if.else, !dbg !8697

if.then2:                                         ; preds = %if.then
  %5 = load i8*, i8** %value.addr, align 8, !dbg !8698
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8700
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %6, i32 0, i32 7, !dbg !8700
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !8700
  %7 = load i8*, i8** %pointer, align 8, !dbg !8700
  %8 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8701
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 8, !dbg !8702
  %9 = load i32, i32* %len, align 8, !dbg !8702
  %conv3 = sext i32 %9 to i64, !dbg !8701
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %7, i64 %conv3, i1 false), !dbg !8703
  %10 = load i8*, i8** %value.addr, align 8, !dbg !8704
  %11 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8705
  %len4 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %11, i32 0, i32 8, !dbg !8706
  %12 = load i32, i32* %len4, align 8, !dbg !8706
  %idxprom = sext i32 %12 to i64, !dbg !8704
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %idxprom, !dbg !8704
  store i8 0, i8* %arrayidx, align 1, !dbg !8707
  br label %if.end, !dbg !8708

if.else:                                          ; preds = %if.then
  %13 = load i8*, i8** %value.addr, align 8, !dbg !8709
  %14 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8711
  %data5 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %14, i32 0, i32 7, !dbg !8711
  %pointer6 = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data5, i32 0, i32 0, !dbg !8711
  %15 = load i8*, i8** %pointer6, align 8, !dbg !8711
  %16 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8712
  %len7 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %16, i32 0, i32 8, !dbg !8713
  %17 = load i32, i32* %len7, align 8, !dbg !8713
  %conv8 = sext i32 %17 to i64, !dbg !8712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %15, i64 %conv8, i1 false), !dbg !8714
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end21, !dbg !8715

if.else9:                                         ; preds = %entry
  %18 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8716
  %get = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %18, i32 0, i32 1, !dbg !8718
  %19 = load void (%struct.PointerRNA*, i8*)*, void (%struct.PointerRNA*, i8*)** %get, align 8, !dbg !8718
  %tobool10 = icmp ne void (%struct.PointerRNA*, i8*)* %19, null, !dbg !8716
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !8719

if.then11:                                        ; preds = %if.else9
  %20 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8720
  %get12 = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %20, i32 0, i32 1, !dbg !8722
  %21 = load void (%struct.PointerRNA*, i8*)*, void (%struct.PointerRNA*, i8*)** %get12, align 8, !dbg !8722
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8723
  %23 = load i8*, i8** %value.addr, align 8, !dbg !8724
  call void %21(%struct.PointerRNA* %22, i8* %23), !dbg !8720
  br label %if.end20, !dbg !8725

if.else13:                                        ; preds = %if.else9
  %24 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8726
  %get_ex = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %24, i32 0, i32 4, !dbg !8728
  %25 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %get_ex, align 8, !dbg !8728
  %tobool14 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* %25, null, !dbg !8726
  br i1 %tobool14, label %if.then15, label %if.else17, !dbg !8729

if.then15:                                        ; preds = %if.else13
  %26 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8730
  %get_ex16 = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %26, i32 0, i32 4, !dbg !8732
  %27 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %get_ex16, align 8, !dbg !8732
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8733
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8734
  %30 = load i8*, i8** %value.addr, align 8, !dbg !8735
  call void %27(%struct.PointerRNA* %28, %struct.PropertyRNA* %29, i8* %30), !dbg !8730
  br label %if.end19, !dbg !8736

if.else17:                                        ; preds = %if.else13
  %31 = load i8*, i8** %value.addr, align 8, !dbg !8737
  %32 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8739
  %defaultvalue = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %32, i32 0, i32 8, !dbg !8740
  %33 = load i8*, i8** %defaultvalue, align 8, !dbg !8740
  %call18 = call i8* @strcpy(i8* %31, i8* %33) #6, !dbg !8741
  br label %if.end19

if.end19:                                         ; preds = %if.else17, %if.then15
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then11
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  ret void, !dbg !8742
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_string_length(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !8743 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %sprop = alloca %struct.StringPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8744, metadata !DIExpression()), !dbg !8745
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8746, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.declare(metadata %struct.StringPropertyRNA** %sprop, metadata !8748, metadata !DIExpression()), !dbg !8749
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8750
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.StringPropertyRNA*, !dbg !8751
  store %struct.StringPropertyRNA* %1, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8749
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !8752, metadata !DIExpression()), !dbg !8753
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8754
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !8756
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !8757
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !8757
  br i1 %tobool, label %if.then, label %if.else4, !dbg !8758

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8759
  %subtype = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 3, !dbg !8762
  %4 = load i8, i8* %subtype, align 1, !dbg !8762
  %conv = zext i8 %4 to i32, !dbg !8759
  %cmp = icmp eq i32 %conv, 1, !dbg !8763
  br i1 %cmp, label %if.then2, label %if.else, !dbg !8764

if.then2:                                         ; preds = %if.then
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8765
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 8, !dbg !8767
  %6 = load i32, i32* %len, align 8, !dbg !8767
  store i32 %6, i32* %retval, align 4, !dbg !8768
  br label %return, !dbg !8768

if.else:                                          ; preds = %if.then
  %7 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8769
  %len3 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %7, i32 0, i32 8, !dbg !8771
  %8 = load i32, i32* %len3, align 8, !dbg !8771
  %sub = sub nsw i32 %8, 1, !dbg !8772
  store i32 %sub, i32* %retval, align 4, !dbg !8773
  br label %return, !dbg !8773

if.else4:                                         ; preds = %entry
  %9 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8774
  %length = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %9, i32 0, i32 2, !dbg !8776
  %10 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %length, align 8, !dbg !8776
  %tobool5 = icmp ne i32 (%struct.PointerRNA*)* %10, null, !dbg !8774
  br i1 %tobool5, label %if.then6, label %if.else9, !dbg !8777

if.then6:                                         ; preds = %if.else4
  %11 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8778
  %length7 = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %11, i32 0, i32 2, !dbg !8779
  %12 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %length7, align 8, !dbg !8779
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8780
  %call8 = call i32 %12(%struct.PointerRNA* %13), !dbg !8778
  store i32 %call8, i32* %retval, align 4, !dbg !8781
  br label %return, !dbg !8781

if.else9:                                         ; preds = %if.else4
  %14 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8782
  %length_ex = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %14, i32 0, i32 5, !dbg !8784
  %15 = load i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)** %length_ex, align 8, !dbg !8784
  %tobool10 = icmp ne i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* %15, null, !dbg !8782
  br i1 %tobool10, label %if.then11, label %if.else14, !dbg !8785

if.then11:                                        ; preds = %if.else9
  %16 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8786
  %length_ex12 = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %16, i32 0, i32 5, !dbg !8787
  %17 = load i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)** %length_ex12, align 8, !dbg !8787
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8788
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8789
  %call13 = call i32 %17(%struct.PointerRNA* %18, %struct.PropertyRNA* %19), !dbg !8786
  store i32 %call13, i32* %retval, align 4, !dbg !8790
  br label %return, !dbg !8790

if.else14:                                        ; preds = %if.else9
  %20 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8791
  %defaultvalue = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %20, i32 0, i32 8, !dbg !8792
  %21 = load i8*, i8** %defaultvalue, align 8, !dbg !8792
  %call15 = call i64 @strlen(i8* %21) #7, !dbg !8793
  %conv16 = trunc i64 %call15 to i32, !dbg !8793
  store i32 %conv16, i32* %retval, align 4, !dbg !8794
  br label %return, !dbg !8794

return:                                           ; preds = %if.else14, %if.then11, %if.then6, %if.else, %if.then2
  %22 = load i32, i32* %retval, align 4, !dbg !8795
  ret i32 %22, !dbg !8795
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_string_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %value) #0 !dbg !8796 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i8*, align 8
  %sprop = alloca %struct.StringPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8799, metadata !DIExpression()), !dbg !8800
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8801, metadata !DIExpression()), !dbg !8802
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !8803, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.declare(metadata %struct.StringPropertyRNA** %sprop, metadata !8805, metadata !DIExpression()), !dbg !8806
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8807
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.StringPropertyRNA*, !dbg !8808
  store %struct.StringPropertyRNA* %1, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8806
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !8809, metadata !DIExpression()), !dbg !8810
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8811
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !8813
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !8814
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !8814
  br i1 %tobool, label %if.then, label %if.else, !dbg !8815

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8816
  %4 = load i8*, i8** %value.addr, align 8, !dbg !8818
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8819
  %call1 = call i32 @RNA_property_string_maxlength(%struct.PropertyRNA* %5), !dbg !8820
  %sub = sub nsw i32 %call1, 1, !dbg !8821
  call void @IDP_AssignString(%struct.IDProperty* %3, i8* %4, i32 %sub), !dbg !8822
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8823
  call void @rna_idproperty_touch(%struct.IDProperty* %6), !dbg !8824
  br label %if.end21, !dbg !8825

if.else:                                          ; preds = %entry
  %7 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8826
  %set = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %7, i32 0, i32 3, !dbg !8828
  %8 = load void (%struct.PointerRNA*, i8*)*, void (%struct.PointerRNA*, i8*)** %set, align 8, !dbg !8828
  %tobool2 = icmp ne void (%struct.PointerRNA*, i8*)* %8, null, !dbg !8826
  br i1 %tobool2, label %if.then3, label %if.else5, !dbg !8829

if.then3:                                         ; preds = %if.else
  %9 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8830
  %set4 = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %9, i32 0, i32 3, !dbg !8831
  %10 = load void (%struct.PointerRNA*, i8*)*, void (%struct.PointerRNA*, i8*)** %set4, align 8, !dbg !8831
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8832
  %12 = load i8*, i8** %value.addr, align 8, !dbg !8833
  call void %10(%struct.PointerRNA* %11, i8* %12), !dbg !8830
  br label %if.end20, !dbg !8830

if.else5:                                         ; preds = %if.else
  %13 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8834
  %set_ex = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %13, i32 0, i32 6, !dbg !8836
  %14 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %set_ex, align 8, !dbg !8836
  %tobool6 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* %14, null, !dbg !8834
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !8837

if.then7:                                         ; preds = %if.else5
  %15 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8838
  %set_ex8 = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %15, i32 0, i32 6, !dbg !8839
  %16 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)** %set_ex8, align 8, !dbg !8839
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8840
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8841
  %19 = load i8*, i8** %value.addr, align 8, !dbg !8842
  call void %16(%struct.PointerRNA* %17, %struct.PropertyRNA* %18, i8* %19), !dbg !8838
  br label %if.end19, !dbg !8838

if.else9:                                         ; preds = %if.else5
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8843
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %20, i32 0, i32 4, !dbg !8845
  %21 = load i32, i32* %flag, align 8, !dbg !8845
  %and = and i32 %21, 1, !dbg !8846
  %tobool10 = icmp ne i32 %and, 0, !dbg !8846
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !8847

if.then11:                                        ; preds = %if.else9
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !8848, metadata !DIExpression()), !dbg !8850
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8851
  %call12 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %22, i8 zeroext 1), !dbg !8852
  store %struct.IDProperty* %call12, %struct.IDProperty** %group, align 8, !dbg !8853
  %23 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !8854
  %tobool13 = icmp ne %struct.IDProperty* %23, null, !dbg !8854
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !8856

if.then14:                                        ; preds = %if.then11
  %24 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !8857
  %25 = load i8*, i8** %value.addr, align 8, !dbg !8858
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8859
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %26, i32 0, i32 3, !dbg !8860
  %27 = load i8*, i8** %identifier, align 8, !dbg !8860
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8861
  %call15 = call i32 @RNA_property_string_maxlength(%struct.PropertyRNA* %28), !dbg !8862
  %call16 = call %struct.IDProperty* @IDP_NewString(i8* %25, i8* %27, i32 %call15), !dbg !8863
  %call17 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %24, %struct.IDProperty* %call16), !dbg !8864
  br label %if.end, !dbg !8864

if.end:                                           ; preds = %if.then14, %if.then11
  br label %if.end18, !dbg !8865

if.end18:                                         ; preds = %if.end, %if.else9
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then7
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then3
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then
  ret void, !dbg !8866
}

declare dso_local void @IDP_AssignString(%struct.IDProperty*, i8*, i32) #2

declare dso_local %struct.IDProperty* @IDP_NewString(i8*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_string_get_default(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop, i8* %value) #0 !dbg !8867 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i8*, align 8
  %sprop = alloca %struct.StringPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8870, metadata !DIExpression()), !dbg !8871
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.declare(metadata %struct.StringPropertyRNA** %sprop, metadata !8874, metadata !DIExpression()), !dbg !8875
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8876
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !8877
  %1 = bitcast %struct.PropertyRNA* %call to %struct.StringPropertyRNA*, !dbg !8878
  store %struct.StringPropertyRNA* %1, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8875
  %2 = load i8*, i8** %value.addr, align 8, !dbg !8879
  %3 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8880
  %defaultvalue = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %3, i32 0, i32 8, !dbg !8881
  %4 = load i8*, i8** %defaultvalue, align 8, !dbg !8881
  %call1 = call i8* @strcpy(i8* %2, i8* %4) #6, !dbg !8882
  ret void, !dbg !8883
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_string_get_default_alloc(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %fixedbuf, i32 %fixedlen) #0 !dbg !8884 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %fixedbuf.addr = alloca i8*, align 8
  %fixedlen.addr = alloca i32, align 4
  %buf = alloca i8*, align 8
  %length = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8887, metadata !DIExpression()), !dbg !8888
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8889, metadata !DIExpression()), !dbg !8890
  store i8* %fixedbuf, i8** %fixedbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fixedbuf.addr, metadata !8891, metadata !DIExpression()), !dbg !8892
  store i32 %fixedlen, i32* %fixedlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fixedlen.addr, metadata !8893, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8895, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.declare(metadata i32* %length, metadata !8897, metadata !DIExpression()), !dbg !8898
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8899
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8900
  %call = call i32 @RNA_property_string_default_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !8901
  store i32 %call, i32* %length, align 4, !dbg !8902
  %2 = load i32, i32* %length, align 4, !dbg !8903
  %add = add nsw i32 %2, 1, !dbg !8905
  %3 = load i32, i32* %fixedlen.addr, align 4, !dbg !8906
  %cmp = icmp slt i32 %add, %3, !dbg !8907
  br i1 %cmp, label %if.then, label %if.else, !dbg !8908

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %fixedbuf.addr, align 8, !dbg !8909
  store i8* %4, i8** %buf, align 8, !dbg !8910
  br label %if.end, !dbg !8911

if.else:                                          ; preds = %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8912
  %6 = load i32, i32* %length, align 4, !dbg !8913
  %add1 = add nsw i32 %6, 1, !dbg !8914
  %conv = sext i32 %add1 to i64, !dbg !8915
  %mul = mul i64 1, %conv, !dbg !8916
  %call2 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0)), !dbg !8912
  store i8* %call2, i8** %buf, align 8, !dbg !8917
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8918
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8919
  %9 = load i8*, i8** %buf, align 8, !dbg !8920
  call void @RNA_property_string_get_default(%struct.PointerRNA* %7, %struct.PropertyRNA* %8, i8* %9), !dbg !8921
  %10 = load i8*, i8** %buf, align 8, !dbg !8922
  ret i8* %10, !dbg !8923
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_string_default_length(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop) #0 !dbg !8924 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %sprop = alloca %struct.StringPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !8925, metadata !DIExpression()), !dbg !8926
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8927, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.declare(metadata %struct.StringPropertyRNA** %sprop, metadata !8929, metadata !DIExpression()), !dbg !8930
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8931
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.StringPropertyRNA*, !dbg !8932
  store %struct.StringPropertyRNA* %1, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8930
  %2 = load %struct.StringPropertyRNA*, %struct.StringPropertyRNA** %sprop, align 8, !dbg !8933
  %defaultvalue = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %2, i32 0, i32 8, !dbg !8934
  %3 = load i8*, i8** %defaultvalue, align 8, !dbg !8934
  %call = call i64 @strlen(i8* %3) #7, !dbg !8935
  %conv = trunc i64 %call to i32, !dbg !8935
  ret i32 %conv, !dbg !8936
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_enum_get(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !8937 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %eprop = alloca %struct.EnumPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyRNA** %eprop, metadata !8942, metadata !DIExpression()), !dbg !8943
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8944
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.EnumPropertyRNA*, !dbg !8945
  store %struct.EnumPropertyRNA* %1, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !8943
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !8946, metadata !DIExpression()), !dbg !8947
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8948
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !8950
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !8951
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !8951
  br i1 %tobool, label %if.then, label %if.else, !dbg !8952

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8953
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 7, !dbg !8953
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !8953
  %4 = load i32, i32* %val, align 8, !dbg !8953
  store i32 %4, i32* %retval, align 4, !dbg !8954
  br label %return, !dbg !8954

if.else:                                          ; preds = %entry
  %5 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !8955
  %get = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %5, i32 0, i32 1, !dbg !8957
  %6 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %get, align 8, !dbg !8957
  %tobool1 = icmp ne i32 (%struct.PointerRNA*)* %6, null, !dbg !8955
  br i1 %tobool1, label %if.then2, label %if.else5, !dbg !8958

if.then2:                                         ; preds = %if.else
  %7 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !8959
  %get3 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %7, i32 0, i32 1, !dbg !8960
  %8 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %get3, align 8, !dbg !8960
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8961
  %call4 = call i32 %8(%struct.PointerRNA* %9), !dbg !8959
  store i32 %call4, i32* %retval, align 4, !dbg !8962
  br label %return, !dbg !8962

if.else5:                                         ; preds = %if.else
  %10 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !8963
  %get_ex = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %10, i32 0, i32 4, !dbg !8965
  %11 = load i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)** %get_ex, align 8, !dbg !8965
  %tobool6 = icmp ne i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* %11, null, !dbg !8963
  br i1 %tobool6, label %if.then7, label %if.else10, !dbg !8966

if.then7:                                         ; preds = %if.else5
  %12 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !8967
  %get_ex8 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %12, i32 0, i32 4, !dbg !8968
  %13 = load i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)** %get_ex8, align 8, !dbg !8968
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8969
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8970
  %call9 = call i32 %13(%struct.PointerRNA* %14, %struct.PropertyRNA* %15), !dbg !8967
  store i32 %call9, i32* %retval, align 4, !dbg !8971
  br label %return, !dbg !8971

if.else10:                                        ; preds = %if.else5
  %16 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !8972
  %defaultvalue = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %16, i32 0, i32 9, !dbg !8973
  %17 = load i32, i32* %defaultvalue, align 4, !dbg !8973
  store i32 %17, i32* %retval, align 4, !dbg !8974
  br label %return, !dbg !8974

return:                                           ; preds = %if.else10, %if.then7, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !8975
  ret i32 %18, !dbg !8975
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_enum_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %value) #0 !dbg !8976 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i32, align 4
  %eprop = alloca %struct.EnumPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %val11 = alloca %union.IDPropertyTemplate, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8977, metadata !DIExpression()), !dbg !8978
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !8979, metadata !DIExpression()), !dbg !8980
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8981, metadata !DIExpression()), !dbg !8982
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyRNA** %eprop, metadata !8983, metadata !DIExpression()), !dbg !8984
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !8985
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.EnumPropertyRNA*, !dbg !8986
  store %struct.EnumPropertyRNA* %1, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !8984
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !8987, metadata !DIExpression()), !dbg !8988
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8989
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !8991
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !8992
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !8992
  br i1 %tobool, label %if.then, label %if.else, !dbg !8993

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %value.addr, align 4, !dbg !8994
  %4 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8996
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %4, i32 0, i32 7, !dbg !8996
  %val = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 2, !dbg !8996
  store i32 %3, i32* %val, align 8, !dbg !8997
  %5 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !8998
  call void @rna_idproperty_touch(%struct.IDProperty* %5), !dbg !8999
  br label %if.end20, !dbg !9000

if.else:                                          ; preds = %entry
  %6 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !9001
  %set = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %6, i32 0, i32 2, !dbg !9003
  %7 = load void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32)** %set, align 8, !dbg !9003
  %tobool1 = icmp ne void (%struct.PointerRNA*, i32)* %7, null, !dbg !9001
  br i1 %tobool1, label %if.then2, label %if.else4, !dbg !9004

if.then2:                                         ; preds = %if.else
  %8 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !9005
  %set3 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %8, i32 0, i32 2, !dbg !9007
  %9 = load void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32)** %set3, align 8, !dbg !9007
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9008
  %11 = load i32, i32* %value.addr, align 4, !dbg !9009
  call void %9(%struct.PointerRNA* %10, i32 %11), !dbg !9005
  br label %if.end19, !dbg !9010

if.else4:                                         ; preds = %if.else
  %12 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !9011
  %set_ex = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %12, i32 0, i32 5, !dbg !9013
  %13 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)** %set_ex, align 8, !dbg !9013
  %tobool5 = icmp ne void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* %13, null, !dbg !9011
  br i1 %tobool5, label %if.then6, label %if.else8, !dbg !9014

if.then6:                                         ; preds = %if.else4
  %14 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !9015
  %set_ex7 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %14, i32 0, i32 5, !dbg !9017
  %15 = load void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)** %set_ex7, align 8, !dbg !9017
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9018
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9019
  %18 = load i32, i32* %value.addr, align 4, !dbg !9020
  call void %15(%struct.PointerRNA* %16, %struct.PropertyRNA* %17, i32 %18), !dbg !9015
  br label %if.end18, !dbg !9021

if.else8:                                         ; preds = %if.else4
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9022
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %19, i32 0, i32 4, !dbg !9024
  %20 = load i32, i32* %flag, align 8, !dbg !9024
  %and = and i32 %20, 1, !dbg !9025
  %tobool9 = icmp ne i32 %and, 0, !dbg !9025
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !9026

if.then10:                                        ; preds = %if.else8
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val11, metadata !9027, metadata !DIExpression()), !dbg !9029
  %21 = bitcast %union.IDPropertyTemplate* %val11 to i8*, !dbg !9029
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_enum_set.val to i8*), i64 16, i1 false), !dbg !9029
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !9030, metadata !DIExpression()), !dbg !9031
  %22 = load i32, i32* %value.addr, align 4, !dbg !9032
  %i = bitcast %union.IDPropertyTemplate* %val11 to i32*, !dbg !9033
  store i32 %22, i32* %i, align 8, !dbg !9034
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9035
  %call12 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %23, i8 zeroext 1), !dbg !9036
  store %struct.IDProperty* %call12, %struct.IDProperty** %group, align 8, !dbg !9037
  %24 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !9038
  %tobool13 = icmp ne %struct.IDProperty* %24, null, !dbg !9038
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !9040

if.then14:                                        ; preds = %if.then10
  %25 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !9041
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9042
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %26, i32 0, i32 3, !dbg !9043
  %27 = load i8*, i8** %identifier, align 8, !dbg !9043
  %call15 = call %struct.IDProperty* @IDP_New(i32 1, %union.IDPropertyTemplate* %val11, i8* %27), !dbg !9044
  %call16 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %25, %struct.IDProperty* %call15), !dbg !9045
  br label %if.end, !dbg !9045

if.end:                                           ; preds = %if.then14, %if.then10
  br label %if.end17, !dbg !9046

if.end17:                                         ; preds = %if.end, %if.else8
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then6
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then2
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then
  ret void, !dbg !9047
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_enum_get_default(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop) #0 !dbg !9048 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %eprop = alloca %struct.EnumPropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9051, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyRNA** %eprop, metadata !9053, metadata !DIExpression()), !dbg !9054
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9055
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !9056
  %1 = bitcast %struct.PropertyRNA* %call to %struct.EnumPropertyRNA*, !dbg !9057
  store %struct.EnumPropertyRNA* %1, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !9054
  %2 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !9058
  %defaultvalue = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %2, i32 0, i32 9, !dbg !9059
  %3 = load i32, i32* %defaultvalue, align 4, !dbg !9059
  ret i32 %3, !dbg !9060
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_enum_py_data_get(%struct.PropertyRNA* %prop) #0 !dbg !9061 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %eprop = alloca %struct.EnumPropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9062, metadata !DIExpression()), !dbg !9063
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyRNA** %eprop, metadata !9064, metadata !DIExpression()), !dbg !9065
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9066
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.EnumPropertyRNA*, !dbg !9067
  store %struct.EnumPropertyRNA* %1, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !9065
  %2 = load %struct.EnumPropertyRNA*, %struct.EnumPropertyRNA** %eprop, align 8, !dbg !9068
  %py_data = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %2, i32 0, i32 6, !dbg !9069
  %3 = load i8*, i8** %py_data, align 8, !dbg !9069
  ret i8* %3, !dbg !9070
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_pointer_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !9071 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %pprop = alloca %struct.PointerPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9074, metadata !DIExpression()), !dbg !9075
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9076, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.declare(metadata %struct.PointerPropertyRNA** %pprop, metadata !9078, metadata !DIExpression()), !dbg !9079
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9080
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.PointerPropertyRNA*, !dbg !9081
  store %struct.PointerPropertyRNA* %1, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9079
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !9082, metadata !DIExpression()), !dbg !9083
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9084
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !9086
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !9087
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9087
  br i1 %tobool, label %if.then, label %if.else5, !dbg !9088

if.then:                                          ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9089
  %4 = bitcast %struct.PropertyRNA* %3 to %struct.PointerPropertyRNA*, !dbg !9091
  store %struct.PointerPropertyRNA* %4, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9092
  %5 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9093
  %typef = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %5, i32 0, i32 3, !dbg !9095
  %6 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %typef, align 8, !dbg !9095
  %tobool1 = icmp ne %struct.StructRNA* (%struct.PointerRNA*)* %6, null, !dbg !9093
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !9096

if.then2:                                         ; preds = %if.then
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9097
  %8 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9098
  %typef3 = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %8, i32 0, i32 3, !dbg !9099
  %9 = load %struct.StructRNA* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)** %typef3, align 8, !dbg !9099
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9100
  %call4 = call %struct.StructRNA* %9(%struct.PointerRNA* %10), !dbg !9098
  %11 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9101
  %12 = bitcast %struct.IDProperty* %11 to i8*, !dbg !9101
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %7, %struct.StructRNA* %call4, i8* %12), !dbg !9102
  br label %return, !dbg !9103

if.else:                                          ; preds = %if.then
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9104
  %14 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9105
  %type = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %14, i32 0, i32 5, !dbg !9106
  %15 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !9106
  %16 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9107
  %17 = bitcast %struct.IDProperty* %16 to i8*, !dbg !9107
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %13, %struct.StructRNA* %15, i8* %17), !dbg !9108
  br label %return, !dbg !9109

if.else5:                                         ; preds = %entry
  %18 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9110
  %get = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %18, i32 0, i32 1, !dbg !9112
  %19 = load void (%struct.PointerRNA*, %struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.PointerRNA*)** %get, align 8, !dbg !9112
  %tobool6 = icmp ne void (%struct.PointerRNA*, %struct.PointerRNA*)* %19, null, !dbg !9110
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !9113

if.then7:                                         ; preds = %if.else5
  %20 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9114
  %get8 = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %20, i32 0, i32 1, !dbg !9116
  %21 = load void (%struct.PointerRNA*, %struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.PointerRNA*)** %get8, align 8, !dbg !9116
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9117
  call void %21(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %22), !dbg !9114
  br label %return, !dbg !9118

if.else9:                                         ; preds = %if.else5
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9119
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %23, i32 0, i32 4, !dbg !9121
  %24 = load i32, i32* %flag, align 8, !dbg !9121
  %and = and i32 %24, 1024, !dbg !9122
  %tobool10 = icmp ne i32 %and, 0, !dbg !9122
  br i1 %tobool10, label %if.then11, label %if.else12, !dbg !9123

if.then11:                                        ; preds = %if.else9
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9124
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9126
  call void @RNA_property_pointer_add(%struct.PointerRNA* %25, %struct.PropertyRNA* %26), !dbg !9127
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9128
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9129
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %27, %struct.PropertyRNA* %28), !dbg !9130
  br label %return, !dbg !9131

if.else12:                                        ; preds = %if.else9
  %29 = bitcast %struct.PointerRNA* %agg.result to i8*, !dbg !9132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 bitcast (%struct.PointerRNA* @PointerRNA_NULL to i8*), i64 24, i1 false), !dbg !9132
  br label %return, !dbg !9134

return:                                           ; preds = %if.else12, %if.then11, %if.then7, %if.else, %if.then2
  ret void, !dbg !9135
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_pointer_add(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !9136 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %val = alloca %union.IDPropertyTemplate, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9139, metadata !DIExpression()), !dbg !9140
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9141
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %0), !dbg !9143
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9143
  br i1 %tobool, label %if.then, label %if.else, !dbg !9144

if.then:                                          ; preds = %entry
  br label %if.end13, !dbg !9145

if.else:                                          ; preds = %entry
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9147
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 4, !dbg !9149
  %2 = load i32, i32* %flag, align 8, !dbg !9149
  %and = and i32 %2, 1024, !dbg !9150
  %tobool1 = icmp ne i32 %and, 0, !dbg !9150
  br i1 %tobool1, label %if.then2, label %if.else8, !dbg !9151

if.then2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !9152, metadata !DIExpression()), !dbg !9154
  %3 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !9154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_pointer_add.val to i8*), i64 16, i1 false), !dbg !9154
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !9155, metadata !DIExpression()), !dbg !9156
  %i = bitcast %union.IDPropertyTemplate* %val to i32*, !dbg !9157
  store i32 0, i32* %i, align 8, !dbg !9158
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9159
  %call3 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %4, i8 zeroext 1), !dbg !9160
  store %struct.IDProperty* %call3, %struct.IDProperty** %group, align 8, !dbg !9161
  %5 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !9162
  %tobool4 = icmp ne %struct.IDProperty* %5, null, !dbg !9162
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9164

if.then5:                                         ; preds = %if.then2
  %6 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !9165
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9166
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %7, i32 0, i32 3, !dbg !9167
  %8 = load i8*, i8** %identifier, align 8, !dbg !9167
  %call6 = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* %8), !dbg !9168
  %call7 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %6, %struct.IDProperty* %call6), !dbg !9169
  br label %if.end, !dbg !9169

if.end:                                           ; preds = %if.then5, %if.then2
  br label %if.end12, !dbg !9170

if.else8:                                         ; preds = %if.else
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9171
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %9, i32 0, i32 1, !dbg !9172
  %10 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !9172
  %identifier9 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %10, i32 0, i32 1, !dbg !9173
  %11 = load i8*, i8** %identifier9, align 8, !dbg !9173
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9174
  %identifier10 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %12, i32 0, i32 3, !dbg !9175
  %13 = load i8*, i8** %identifier10, align 8, !dbg !9175
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.RNA_property_pointer_add, i64 0, i64 0), i8* %11, i8* %13), !dbg !9176
  br label %if.end12

if.end12:                                         ; preds = %if.else8, %if.end
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  ret void, !dbg !9177
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_pointer_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %ptr_value) #0 !dbg !9178 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %pprop = alloca %struct.PointerPropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9181, metadata !DIExpression()), !dbg !9182
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9183, metadata !DIExpression()), !dbg !9184
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr_value, metadata !9185, metadata !DIExpression()), !dbg !9186
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9187
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %0), !dbg !9189
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9189
  br i1 %tobool, label %if.then, label %if.else, !dbg !9190

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !9191

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerPropertyRNA** %pprop, metadata !9193, metadata !DIExpression()), !dbg !9195
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9196
  %2 = bitcast %struct.PropertyRNA* %1 to %struct.PointerPropertyRNA*, !dbg !9197
  store %struct.PointerPropertyRNA* %2, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9195
  %3 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9198
  %set = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %3, i32 0, i32 2, !dbg !9200
  %4 = load void (%struct.PointerRNA*, %struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.PointerRNA*)** %set, align 8, !dbg !9200
  %tobool1 = icmp ne void (%struct.PointerRNA*, %struct.PointerRNA*)* %4, null, !dbg !9198
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !9201

land.lhs.true:                                    ; preds = %if.else
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9202
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %5, i32 0, i32 4, !dbg !9203
  %6 = load i32, i32* %flag, align 8, !dbg !9203
  %and = and i32 %6, 262144, !dbg !9204
  %tobool2 = icmp ne i32 %and, 0, !dbg !9204
  br i1 %tobool2, label %land.lhs.true3, label %land.lhs.true4, !dbg !9205

land.lhs.true3:                                   ; preds = %land.lhs.true
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr_value, i32 0, i32 2, !dbg !9206
  %7 = load i8*, i8** %data, align 8, !dbg !9206
  %cmp = icmp eq i8* %7, null, !dbg !9207
  br i1 %cmp, label %if.end, label %land.lhs.true4, !dbg !9208

land.lhs.true4:                                   ; preds = %land.lhs.true3, %land.lhs.true
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9209
  %flag5 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %8, i32 0, i32 4, !dbg !9210
  %9 = load i32, i32* %flag5, align 8, !dbg !9210
  %and6 = and i32 %9, 1048576, !dbg !9211
  %tobool7 = icmp ne i32 %and6, 0, !dbg !9211
  br i1 %tobool7, label %land.lhs.true8, label %if.then13, !dbg !9212

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9213
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %10, i32 0, i32 0, !dbg !9214
  %data9 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !9215
  %11 = load i8*, i8** %data9, align 8, !dbg !9215
  %id10 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr_value, i32 0, i32 0, !dbg !9216
  %data11 = getelementptr inbounds %struct.anon, %struct.anon* %id10, i32 0, i32 0, !dbg !9217
  %12 = load i8*, i8** %data11, align 8, !dbg !9217
  %cmp12 = icmp eq i8* %11, %12, !dbg !9218
  br i1 %cmp12, label %if.end, label %if.then13, !dbg !9219

if.then13:                                        ; preds = %land.lhs.true8, %land.lhs.true4
  %13 = load %struct.PointerPropertyRNA*, %struct.PointerPropertyRNA** %pprop, align 8, !dbg !9220
  %set14 = getelementptr inbounds %struct.PointerPropertyRNA, %struct.PointerPropertyRNA* %13, i32 0, i32 2, !dbg !9222
  %14 = load void (%struct.PointerRNA*, %struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.PointerRNA*)** %set14, align 8, !dbg !9222
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9223
  call void %14(%struct.PointerRNA* %15, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %ptr_value), !dbg !9220
  br label %if.end, !dbg !9224

if.end:                                           ; preds = %if.then13, %land.lhs.true8, %land.lhs.true3, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  ret void, !dbg !9225
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_pointer_get_default(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %UNUSED_prop) #0 !dbg !9226 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !9227, metadata !DIExpression()), !dbg !9228
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9229, metadata !DIExpression()), !dbg !9230
  %0 = bitcast %struct.PointerRNA* %agg.result to i8*, !dbg !9231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.PointerRNA* @PointerRNA_NULL to i8*), i64 24, i1 false), !dbg !9231
  ret void, !dbg !9232
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_pointer_remove(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !9233 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %group = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9234, metadata !DIExpression()), !dbg !9235
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9236, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !9238, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !9240, metadata !DIExpression()), !dbg !9241
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9242
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %0), !dbg !9244
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !9245
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9245
  br i1 %tobool, label %if.then, label %if.else, !dbg !9246

if.then:                                          ; preds = %entry
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9247
  %call1 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %1, i8 zeroext 0), !dbg !9249
  store %struct.IDProperty* %call1, %struct.IDProperty** %group, align 8, !dbg !9250
  %2 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !9251
  %tobool2 = icmp ne %struct.IDProperty* %2, null, !dbg !9251
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !9253

if.then3:                                         ; preds = %if.then
  %3 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !9254
  %4 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9256
  call void @IDP_FreeFromGroup(%struct.IDProperty* %3, %struct.IDProperty* %4), !dbg !9257
  br label %if.end, !dbg !9258

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !9259

if.else:                                          ; preds = %entry
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9260
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 1, !dbg !9261
  %6 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !9261
  %identifier = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %6, i32 0, i32 1, !dbg !9262
  %7 = load i8*, i8** %identifier, align 8, !dbg !9262
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9263
  %identifier4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %8, i32 0, i32 3, !dbg !9264
  %9 = load i8*, i8** %identifier4, align 8, !dbg !9264
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.RNA_property_pointer_remove, i64 0, i64 0), i8* %7, i8* %9), !dbg !9265
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void, !dbg !9266
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_iterator_array_begin(%struct.CollectionPropertyIterator* %iter, i8* %ptr, i32 %itemsize, i32 %length, i8 zeroext %free_ptr, i32 (%struct.CollectionPropertyIterator*, i8*)* %skip) #0 !dbg !9267 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca i8*, align 8
  %itemsize.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %free_ptr.addr = alloca i8, align 1
  %skip.addr = alloca i32 (%struct.CollectionPropertyIterator*, i8*)*, align 8
  %internal = alloca %struct.ArrayIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !9270, metadata !DIExpression()), !dbg !9271
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9272, metadata !DIExpression()), !dbg !9273
  store i32 %itemsize, i32* %itemsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %itemsize.addr, metadata !9274, metadata !DIExpression()), !dbg !9275
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !9276, metadata !DIExpression()), !dbg !9277
  store i8 %free_ptr, i8* %free_ptr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %free_ptr.addr, metadata !9278, metadata !DIExpression()), !dbg !9279
  store i32 (%struct.CollectionPropertyIterator*, i8*)* %skip, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, metadata !9280, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !9282, metadata !DIExpression()), !dbg !9284
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9285
  %cmp = icmp eq i8* %0, null, !dbg !9287
  br i1 %cmp, label %if.then, label %if.else, !dbg !9288

if.then:                                          ; preds = %entry
  store i32 0, i32* %length.addr, align 4, !dbg !9289
  br label %if.end3, !dbg !9290

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %length.addr, align 4, !dbg !9291
  %cmp1 = icmp eq i32 %1, 0, !dbg !9293
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !9294

if.then2:                                         ; preds = %if.else
  store i8* null, i8** %ptr.addr, align 8, !dbg !9295
  store i32 0, i32* %itemsize.addr, align 4, !dbg !9297
  br label %if.end, !dbg !9298

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9299
  %internal4 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 3, !dbg !9300
  %array = bitcast %union.anon* %internal4 to %struct.ArrayIterator*, !dbg !9301
  store %struct.ArrayIterator* %array, %struct.ArrayIterator** %internal, align 8, !dbg !9302
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !9303
  %4 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9304
  %ptr5 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %4, i32 0, i32 0, !dbg !9305
  store i8* %3, i8** %ptr5, align 8, !dbg !9306
  %5 = load i8, i8* %free_ptr.addr, align 1, !dbg !9307
  %conv = zext i8 %5 to i32, !dbg !9307
  %tobool = icmp ne i32 %conv, 0, !dbg !9307
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9307

cond.true:                                        ; preds = %if.end3
  %6 = load i8*, i8** %ptr.addr, align 8, !dbg !9308
  br label %cond.end, !dbg !9307

cond.false:                                       ; preds = %if.end3
  br label %cond.end, !dbg !9307

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9307
  %7 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9309
  %free_ptr6 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %7, i32 0, i32 2, !dbg !9310
  store i8* %cond, i8** %free_ptr6, align 8, !dbg !9311
  %8 = load i8*, i8** %ptr.addr, align 8, !dbg !9312
  %9 = load i32, i32* %length.addr, align 4, !dbg !9313
  %10 = load i32, i32* %itemsize.addr, align 4, !dbg !9314
  %mul = mul nsw i32 %9, %10, !dbg !9315
  %idx.ext = sext i32 %mul to i64, !dbg !9316
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !9316
  %11 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9317
  %endptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %11, i32 0, i32 1, !dbg !9318
  store i8* %add.ptr, i8** %endptr, align 8, !dbg !9319
  %12 = load i32, i32* %itemsize.addr, align 4, !dbg !9320
  %13 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9321
  %itemsize7 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %13, i32 0, i32 3, !dbg !9322
  store i32 %12, i32* %itemsize7, align 8, !dbg !9323
  %14 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, align 8, !dbg !9324
  %15 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9325
  %skip8 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %15, i32 0, i32 5, !dbg !9326
  store i32 (%struct.CollectionPropertyIterator*, i8*)* %14, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip8, align 8, !dbg !9327
  %16 = load i32, i32* %length.addr, align 4, !dbg !9328
  %17 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9329
  %length9 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %17, i32 0, i32 4, !dbg !9330
  store i32 %16, i32* %length9, align 4, !dbg !9331
  %18 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9332
  %ptr10 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %18, i32 0, i32 0, !dbg !9333
  %19 = load i8*, i8** %ptr10, align 8, !dbg !9333
  %20 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9334
  %endptr11 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %20, i32 0, i32 1, !dbg !9335
  %21 = load i8*, i8** %endptr11, align 8, !dbg !9335
  %cmp12 = icmp ne i8* %19, %21, !dbg !9336
  %conv13 = zext i1 %cmp12 to i32, !dbg !9336
  %22 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9337
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %22, i32 0, i32 7, !dbg !9338
  store i32 %conv13, i32* %valid, align 8, !dbg !9339
  %23 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, align 8, !dbg !9340
  %tobool14 = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %23, null, !dbg !9340
  br i1 %tobool14, label %land.lhs.true, label %if.end21, !dbg !9342

land.lhs.true:                                    ; preds = %cond.end
  %24 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9343
  %valid15 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %24, i32 0, i32 7, !dbg !9344
  %25 = load i32, i32* %valid15, align 8, !dbg !9344
  %tobool16 = icmp ne i32 %25, 0, !dbg !9343
  br i1 %tobool16, label %land.lhs.true17, label %if.end21, !dbg !9345

land.lhs.true17:                                  ; preds = %land.lhs.true
  %26 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, align 8, !dbg !9346
  %27 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9347
  %28 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9348
  %ptr18 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %28, i32 0, i32 0, !dbg !9349
  %29 = load i8*, i8** %ptr18, align 8, !dbg !9349
  %call = call i32 %26(%struct.CollectionPropertyIterator* %27, i8* %29), !dbg !9346
  %tobool19 = icmp ne i32 %call, 0, !dbg !9346
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !9350

if.then20:                                        ; preds = %land.lhs.true17
  %30 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9351
  call void @rna_iterator_array_next(%struct.CollectionPropertyIterator* %30), !dbg !9352
  br label %if.end21, !dbg !9352

if.end21:                                         ; preds = %if.then20, %land.lhs.true17, %land.lhs.true, %cond.end
  ret void, !dbg !9353
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_property_collection_get_idp(%struct.CollectionPropertyIterator* %iter) #0 !dbg !9354 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !9357, metadata !DIExpression()), !dbg !9358
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9359
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 2, !dbg !9360
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !9360
  %2 = bitcast %struct.PropertyRNA* %1 to %struct.CollectionPropertyRNA*, !dbg !9361
  store %struct.CollectionPropertyRNA* %2, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9358
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9362
  %call = call i8* @rna_iterator_array_get(%struct.CollectionPropertyIterator* %3), !dbg !9363
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9364
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %4, i32 0, i32 6, !dbg !9365
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !9366
  store i8* %call, i8** %data, align 8, !dbg !9367
  %5 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9368
  %item_type = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %5, i32 0, i32 9, !dbg !9369
  %6 = load %struct.StructRNA*, %struct.StructRNA** %item_type, align 8, !dbg !9369
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9370
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %7, i32 0, i32 6, !dbg !9371
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr1, i32 0, i32 1, !dbg !9372
  store %struct.StructRNA* %6, %struct.StructRNA** %type, align 8, !dbg !9373
  %8 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9374
  %item_type2 = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %8, i32 0, i32 9, !dbg !9375
  %9 = load %struct.StructRNA*, %struct.StructRNA** %item_type2, align 8, !dbg !9375
  %10 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9376
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %10, i32 0, i32 0, !dbg !9377
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9378
  %ptr3 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !9379
  call void @rna_pointer_inherit_id(%struct.StructRNA* %9, %struct.PointerRNA* %parent, %struct.PointerRNA* %ptr3), !dbg !9380
  ret void, !dbg !9381
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_iterator_array_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !9382 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %internal = alloca %struct.ArrayIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !9385, metadata !DIExpression()), !dbg !9386
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9387
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 3, !dbg !9388
  %array = bitcast %union.anon* %internal1 to %struct.ArrayIterator*, !dbg !9389
  store %struct.ArrayIterator* %array, %struct.ArrayIterator** %internal, align 8, !dbg !9386
  %1 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9390
  %skip = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %1, i32 0, i32 5, !dbg !9392
  %2 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip, align 8, !dbg !9392
  %tobool = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %2, null, !dbg !9390
  br i1 %tobool, label %if.then, label %if.else, !dbg !9393

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9394

do.body:                                          ; preds = %land.end, %if.then
  %3 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9396
  %itemsize = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %3, i32 0, i32 3, !dbg !9398
  %4 = load i32, i32* %itemsize, align 8, !dbg !9398
  %5 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9399
  %ptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %5, i32 0, i32 0, !dbg !9400
  %6 = load i8*, i8** %ptr, align 8, !dbg !9401
  %idx.ext = sext i32 %4 to i64, !dbg !9401
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !9401
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !9401
  %7 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9402
  %ptr2 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %7, i32 0, i32 0, !dbg !9403
  %8 = load i8*, i8** %ptr2, align 8, !dbg !9403
  %9 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9404
  %endptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %9, i32 0, i32 1, !dbg !9405
  %10 = load i8*, i8** %endptr, align 8, !dbg !9405
  %cmp = icmp ne i8* %8, %10, !dbg !9406
  %conv = zext i1 %cmp to i32, !dbg !9406
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9407
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 7, !dbg !9408
  store i32 %conv, i32* %valid, align 8, !dbg !9409
  br label %do.cond, !dbg !9410

do.cond:                                          ; preds = %do.body
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9411
  %valid3 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %12, i32 0, i32 7, !dbg !9412
  %13 = load i32, i32* %valid3, align 8, !dbg !9412
  %tobool4 = icmp ne i32 %13, 0, !dbg !9411
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !9413

land.rhs:                                         ; preds = %do.cond
  %14 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9414
  %skip5 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %14, i32 0, i32 5, !dbg !9415
  %15 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip5, align 8, !dbg !9415
  %16 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9416
  %17 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9417
  %ptr6 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %17, i32 0, i32 0, !dbg !9418
  %18 = load i8*, i8** %ptr6, align 8, !dbg !9418
  %call = call i32 %15(%struct.CollectionPropertyIterator* %16, i8* %18), !dbg !9414
  %tobool7 = icmp ne i32 %call, 0, !dbg !9413
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %19 = phi i1 [ false, %do.cond ], [ %tobool7, %land.rhs ], !dbg !9419
  br i1 %19, label %do.body, label %do.end, !dbg !9410, !llvm.loop !9420

do.end:                                           ; preds = %land.end
  br label %if.end, !dbg !9422

if.else:                                          ; preds = %entry
  %20 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9423
  %itemsize8 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %20, i32 0, i32 3, !dbg !9425
  %21 = load i32, i32* %itemsize8, align 8, !dbg !9425
  %22 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9426
  %ptr9 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %22, i32 0, i32 0, !dbg !9427
  %23 = load i8*, i8** %ptr9, align 8, !dbg !9428
  %idx.ext10 = sext i32 %21 to i64, !dbg !9428
  %add.ptr11 = getelementptr inbounds i8, i8* %23, i64 %idx.ext10, !dbg !9428
  store i8* %add.ptr11, i8** %ptr9, align 8, !dbg !9428
  %24 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9429
  %ptr12 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %24, i32 0, i32 0, !dbg !9430
  %25 = load i8*, i8** %ptr12, align 8, !dbg !9430
  %26 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9431
  %endptr13 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %26, i32 0, i32 1, !dbg !9432
  %27 = load i8*, i8** %endptr13, align 8, !dbg !9432
  %cmp14 = icmp ne i8* %25, %27, !dbg !9433
  %conv15 = zext i1 %cmp14 to i32, !dbg !9433
  %28 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9434
  %valid16 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %28, i32 0, i32 7, !dbg !9435
  store i32 %conv15, i32* %valid16, align 8, !dbg !9436
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  ret void, !dbg !9437
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_collection_skip(%struct.CollectionPropertyIterator* %iter, i32 %num) #0 !dbg !9438 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %num.addr = alloca i32, align 4
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  %i = alloca i32, align 4
  %internal = alloca %struct.ArrayIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !9441, metadata !DIExpression()), !dbg !9442
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !9443, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !9445, metadata !DIExpression()), !dbg !9446
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9447
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 2, !dbg !9448
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !9448
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %1), !dbg !9449
  %2 = bitcast %struct.PropertyRNA* %call to %struct.CollectionPropertyRNA*, !dbg !9450
  store %struct.CollectionPropertyRNA* %2, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9446
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9451, metadata !DIExpression()), !dbg !9452
  %3 = load i32, i32* %num.addr, align 4, !dbg !9453
  %cmp = icmp sgt i32 %3, 1, !dbg !9455
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !9456

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9457
  %idprop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %4, i32 0, i32 4, !dbg !9458
  %5 = load i32, i32* %idprop, align 8, !dbg !9458
  %tobool = icmp ne i32 %5, 0, !dbg !9457
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9459

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9460
  %property = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %6, i32 0, i32 0, !dbg !9461
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %property, i32 0, i32 4, !dbg !9462
  %7 = load i32, i32* %flag, align 8, !dbg !9462
  %and = and i32 %7, 16384, !dbg !9463
  %tobool1 = icmp ne i32 %and, 0, !dbg !9463
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !9464

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !9465, metadata !DIExpression()), !dbg !9467
  %8 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9468
  %internal2 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %8, i32 0, i32 3, !dbg !9469
  %array = bitcast %union.anon* %internal2 to %struct.ArrayIterator*, !dbg !9470
  store %struct.ArrayIterator* %array, %struct.ArrayIterator** %internal, align 8, !dbg !9467
  %9 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9471
  %skip = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %9, i32 0, i32 5, !dbg !9473
  %10 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip, align 8, !dbg !9473
  %tobool3 = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %10, null, !dbg !9471
  br i1 %tobool3, label %if.end10, label %if.then4, !dbg !9474

if.then4:                                         ; preds = %if.then
  %11 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9475
  %itemsize = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %11, i32 0, i32 3, !dbg !9477
  %12 = load i32, i32* %itemsize, align 8, !dbg !9477
  %13 = load i32, i32* %num.addr, align 4, !dbg !9478
  %sub = sub nsw i32 %13, 1, !dbg !9479
  %mul = mul nsw i32 %12, %sub, !dbg !9480
  %14 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9481
  %ptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %14, i32 0, i32 0, !dbg !9482
  %15 = load i8*, i8** %ptr, align 8, !dbg !9483
  %idx.ext = sext i32 %mul to i64, !dbg !9483
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !9483
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !9483
  %16 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9484
  %ptr5 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %16, i32 0, i32 0, !dbg !9485
  %17 = load i8*, i8** %ptr5, align 8, !dbg !9485
  %18 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9486
  %endptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %18, i32 0, i32 1, !dbg !9487
  %19 = load i8*, i8** %endptr, align 8, !dbg !9487
  %cmp6 = icmp ult i8* %17, %19, !dbg !9488
  %conv = zext i1 %cmp6 to i32, !dbg !9488
  %20 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9489
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %20, i32 0, i32 7, !dbg !9490
  store i32 %conv, i32* %valid, align 8, !dbg !9491
  %21 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9492
  %valid7 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %21, i32 0, i32 7, !dbg !9494
  %22 = load i32, i32* %valid7, align 8, !dbg !9494
  %tobool8 = icmp ne i32 %22, 0, !dbg !9492
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !9495

if.then9:                                         ; preds = %if.then4
  %23 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9496
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %23), !dbg !9497
  br label %if.end, !dbg !9497

if.end:                                           ; preds = %if.then9, %if.then4
  br label %for.end, !dbg !9498

if.end10:                                         ; preds = %if.then
  br label %if.end11, !dbg !9499

if.end11:                                         ; preds = %if.end10, %lor.lhs.false, %entry
  store i32 0, i32* %i, align 4, !dbg !9500
  br label %for.cond, !dbg !9502

for.cond:                                         ; preds = %for.inc, %if.end11
  %24 = load i32, i32* %i, align 4, !dbg !9503
  %25 = load i32, i32* %num.addr, align 4, !dbg !9505
  %cmp12 = icmp slt i32 %24, %25, !dbg !9506
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !9507

land.rhs:                                         ; preds = %for.cond
  %26 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9508
  %valid14 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %26, i32 0, i32 7, !dbg !9509
  %27 = load i32, i32* %valid14, align 8, !dbg !9509
  %tobool15 = icmp ne i32 %27, 0, !dbg !9507
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %28 = phi i1 [ false, %for.cond ], [ %tobool15, %land.rhs ], !dbg !9510
  br i1 %28, label %for.body, label %for.end, !dbg !9511

for.body:                                         ; preds = %land.end
  %29 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9512
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %29), !dbg !9513
  br label %for.inc, !dbg !9513

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !9514
  %inc = add nsw i32 %30, 1, !dbg !9514
  store i32 %inc, i32* %i, align 4, !dbg !9514
  br label %for.cond, !dbg !9515, !llvm.loop !9516

for.end:                                          ; preds = %if.end, %land.end
  ret void, !dbg !9518
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_iterator_array_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !9519 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %internal = alloca %struct.ArrayIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !9520, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !9522, metadata !DIExpression()), !dbg !9523
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !9524
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 3, !dbg !9525
  %array = bitcast %union.anon* %internal1 to %struct.ArrayIterator*, !dbg !9526
  store %struct.ArrayIterator* %array, %struct.ArrayIterator** %internal, align 8, !dbg !9523
  %1 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9527
  %free_ptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %1, i32 0, i32 2, !dbg !9529
  %2 = load i8*, i8** %free_ptr, align 8, !dbg !9529
  %tobool = icmp ne i8* %2, null, !dbg !9527
  br i1 %tobool, label %if.then, label %if.end, !dbg !9530

if.then:                                          ; preds = %entry
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9531
  %4 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9533
  %free_ptr2 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %4, i32 0, i32 2, !dbg !9534
  %5 = load i8*, i8** %free_ptr2, align 8, !dbg !9534
  call void %3(i8* %5), !dbg !9531
  %6 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !9535
  %free_ptr3 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %6, i32 0, i32 2, !dbg !9536
  store i8* null, i8** %free_ptr3, align 8, !dbg !9537
  br label %if.end, !dbg !9538

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9539
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_collection_length(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !9540 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %length6 = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9541, metadata !DIExpression()), !dbg !9542
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9543, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !9545, metadata !DIExpression()), !dbg !9546
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9547
  %1 = bitcast %struct.PropertyRNA* %0 to %struct.CollectionPropertyRNA*, !dbg !9548
  store %struct.CollectionPropertyRNA* %1, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9546
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !9549, metadata !DIExpression()), !dbg !9550
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9551
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %2), !dbg !9553
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !9554
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9554
  br i1 %tobool, label %if.then, label %if.else, !dbg !9555

if.then:                                          ; preds = %entry
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9556
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 8, !dbg !9558
  %4 = load i32, i32* %len, align 8, !dbg !9558
  store i32 %4, i32* %retval, align 4, !dbg !9559
  br label %return, !dbg !9559

if.else:                                          ; preds = %entry
  %5 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9560
  %length = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %5, i32 0, i32 5, !dbg !9562
  %6 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %length, align 8, !dbg !9562
  %tobool1 = icmp ne i32 (%struct.PointerRNA*)* %6, null, !dbg !9560
  br i1 %tobool1, label %if.then2, label %if.else5, !dbg !9563

if.then2:                                         ; preds = %if.else
  %7 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9564
  %length3 = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %7, i32 0, i32 5, !dbg !9566
  %8 = load i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*)** %length3, align 8, !dbg !9566
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9567
  %call4 = call i32 %8(%struct.PointerRNA* %9), !dbg !9564
  store i32 %call4, i32* %retval, align 4, !dbg !9568
  br label %return, !dbg !9568

if.else5:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !9569, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.declare(metadata i32* %length6, metadata !9572, metadata !DIExpression()), !dbg !9573
  store i32 0, i32* %length6, align 4, !dbg !9573
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9574
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9575
  call void @RNA_property_collection_begin(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, %struct.CollectionPropertyIterator* %iter), !dbg !9576
  br label %for.cond, !dbg !9577

for.cond:                                         ; preds = %for.inc, %if.else5
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !9578
  %12 = load i32, i32* %valid, align 8, !dbg !9578
  %tobool7 = icmp ne i32 %12, 0, !dbg !9581
  br i1 %tobool7, label %for.body, label %for.end, !dbg !9581

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %length6, align 4, !dbg !9582
  %inc = add nsw i32 %13, 1, !dbg !9582
  store i32 %inc, i32* %length6, align 4, !dbg !9582
  br label %for.inc, !dbg !9583

for.inc:                                          ; preds = %for.body
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %iter), !dbg !9584
  br label %for.cond, !dbg !9585, !llvm.loop !9586

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %iter), !dbg !9588
  %14 = load i32, i32* %length6, align 4, !dbg !9589
  store i32 %14, i32* %retval, align 4, !dbg !9590
  br label %return, !dbg !9590

return:                                           ; preds = %for.end, %if.then2, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !9591
  ret i32 %15, !dbg !9591
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_collection_add(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PointerRNA* %r_ptr) #0 !dbg !9592 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  %val = alloca %union.IDPropertyTemplate, align 8
  %item = alloca %struct.IDProperty*, align 8
  %group = alloca %struct.IDProperty*, align 8
  %item4 = alloca %struct.IDProperty*, align 8
  %val5 = alloca %union.IDPropertyTemplate, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9595, metadata !DIExpression()), !dbg !9596
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9597, metadata !DIExpression()), !dbg !9598
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !9599, metadata !DIExpression()), !dbg !9600
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !9601, metadata !DIExpression()), !dbg !9602
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9603
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %0), !dbg !9605
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !9606
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9606
  br i1 %tobool, label %if.then, label %if.else, !dbg !9607

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !9608, metadata !DIExpression()), !dbg !9610
  %1 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !9610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_collection_add.val to i8*), i64 16, i1 false), !dbg !9610
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %item, metadata !9611, metadata !DIExpression()), !dbg !9612
  %call1 = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0)), !dbg !9613
  store %struct.IDProperty* %call1, %struct.IDProperty** %item, align 8, !dbg !9614
  %2 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9615
  %3 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !9616
  call void @IDP_AppendArray(%struct.IDProperty* %2, %struct.IDProperty* %3), !dbg !9617
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9618
  %5 = load %struct.IDProperty*, %struct.IDProperty** %item, align 8, !dbg !9619
  %6 = bitcast %struct.IDProperty* %5 to i8*, !dbg !9619
  call void %4(i8* %6), !dbg !9618
  %7 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9620
  call void @rna_idproperty_touch(%struct.IDProperty* %7), !dbg !9621
  br label %if.end13, !dbg !9622

if.else:                                          ; preds = %entry
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9623
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %8, i32 0, i32 4, !dbg !9625
  %9 = load i32, i32* %flag, align 8, !dbg !9625
  %and = and i32 %9, 1024, !dbg !9626
  %tobool2 = icmp ne i32 %and, 0, !dbg !9626
  br i1 %tobool2, label %if.then3, label %if.end12, !dbg !9627

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !9628, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %item4, metadata !9631, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val5, metadata !9633, metadata !DIExpression()), !dbg !9634
  %10 = bitcast %union.IDPropertyTemplate* %val5 to i8*, !dbg !9634
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.RNA_property_collection_add.val.26 to i8*), i64 16, i1 false), !dbg !9634
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9635
  %call6 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %11, i8 zeroext 1), !dbg !9636
  store %struct.IDProperty* %call6, %struct.IDProperty** %group, align 8, !dbg !9637
  %12 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !9638
  %tobool7 = icmp ne %struct.IDProperty* %12, null, !dbg !9638
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !9640

if.then8:                                         ; preds = %if.then3
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9641
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %13, i32 0, i32 3, !dbg !9643
  %14 = load i8*, i8** %identifier, align 8, !dbg !9643
  %call9 = call %struct.IDProperty* @IDP_NewIDPArray(i8* %14), !dbg !9644
  store %struct.IDProperty* %call9, %struct.IDProperty** %idprop, align 8, !dbg !9645
  %15 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !9646
  %16 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9647
  %call10 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %15, %struct.IDProperty* %16), !dbg !9648
  %call11 = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0)), !dbg !9649
  store %struct.IDProperty* %call11, %struct.IDProperty** %item4, align 8, !dbg !9650
  %17 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9651
  %18 = load %struct.IDProperty*, %struct.IDProperty** %item4, align 8, !dbg !9652
  call void @IDP_AppendArray(%struct.IDProperty* %17, %struct.IDProperty* %18), !dbg !9653
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9654
  %20 = load %struct.IDProperty*, %struct.IDProperty** %item4, align 8, !dbg !9655
  %21 = bitcast %struct.IDProperty* %20 to i8*, !dbg !9655
  call void %19(i8* %21), !dbg !9654
  br label %if.end, !dbg !9656

if.end:                                           ; preds = %if.then8, %if.then3
  br label %if.end12, !dbg !9657

if.end12:                                         ; preds = %if.end, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !9658
  %tobool14 = icmp ne %struct.PointerRNA* %22, null, !dbg !9658
  br i1 %tobool14, label %if.then15, label %if.end21, !dbg !9660

if.then15:                                        ; preds = %if.end13
  %23 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9661
  %tobool16 = icmp ne %struct.IDProperty* %23, null, !dbg !9661
  br i1 %tobool16, label %if.then17, label %if.else19, !dbg !9664

if.then17:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !9665, metadata !DIExpression()), !dbg !9667
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9668
  %25 = bitcast %struct.PropertyRNA* %24 to %struct.CollectionPropertyRNA*, !dbg !9669
  store %struct.CollectionPropertyRNA* %25, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9667
  %26 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9670
  %27 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9671
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %27, i32 0, i32 8, !dbg !9672
  %28 = load i32, i32* %len, align 8, !dbg !9672
  %sub = sub nsw i32 %28, 1, !dbg !9673
  %call18 = call %struct.IDProperty* @IDP_GetIndexArray(%struct.IDProperty* %26, i32 %sub), !dbg !9674
  %29 = bitcast %struct.IDProperty* %call18 to i8*, !dbg !9674
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !9675
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %30, i32 0, i32 2, !dbg !9676
  store i8* %29, i8** %data, align 8, !dbg !9677
  %31 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9678
  %item_type = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %31, i32 0, i32 9, !dbg !9679
  %32 = load %struct.StructRNA*, %struct.StructRNA** %item_type, align 8, !dbg !9679
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !9680
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %33, i32 0, i32 1, !dbg !9681
  store %struct.StructRNA* %32, %struct.StructRNA** %type, align 8, !dbg !9682
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9683
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !9684
  call void @rna_pointer_inherit_id(%struct.StructRNA* null, %struct.PointerRNA* %34, %struct.PointerRNA* %35), !dbg !9685
  br label %if.end20, !dbg !9686

if.else19:                                        ; preds = %if.then15
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !9687
  %37 = bitcast %struct.PointerRNA* %36 to i8*, !dbg !9688
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false), !dbg !9688
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then17
  br label %if.end21, !dbg !9689

if.end21:                                         ; preds = %if.end20, %if.end13
  ret void, !dbg !9690
}

declare dso_local void @IDP_AppendArray(%struct.IDProperty*, %struct.IDProperty*) #2

declare dso_local %struct.IDProperty* @IDP_NewIDPArray(i8*) #2

declare dso_local %struct.IDProperty* @IDP_GetIndexArray(%struct.IDProperty*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_collection_remove(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %key) #0 !dbg !9691 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %key.addr = alloca i32, align 4
  %idprop = alloca %struct.IDProperty*, align 8
  %tmp = alloca %struct.IDProperty, align 8
  %array = alloca %struct.IDProperty*, align 8
  %len = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9692, metadata !DIExpression()), !dbg !9693
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9694, metadata !DIExpression()), !dbg !9695
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !9696, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !9698, metadata !DIExpression()), !dbg !9699
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9700
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %0), !dbg !9702
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !9703
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9703
  br i1 %tobool, label %if.then, label %if.else, !dbg !9704

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty* %tmp, metadata !9705, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %array, metadata !9708, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9710, metadata !DIExpression()), !dbg !9711
  %1 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9712
  %len1 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %1, i32 0, i32 8, !dbg !9713
  %2 = load i32, i32* %len1, align 8, !dbg !9713
  store i32 %2, i32* %len, align 4, !dbg !9714
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9715
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 7, !dbg !9715
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !9715
  %4 = load i8*, i8** %pointer, align 8, !dbg !9715
  %5 = bitcast i8* %4 to %struct.IDProperty*, !dbg !9715
  store %struct.IDProperty* %5, %struct.IDProperty** %array, align 8, !dbg !9716
  %6 = load i32, i32* %key.addr, align 4, !dbg !9717
  %cmp = icmp sge i32 %6, 0, !dbg !9719
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !9720

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %key.addr, align 4, !dbg !9721
  %8 = load i32, i32* %len, align 4, !dbg !9722
  %cmp2 = icmp slt i32 %7, %8, !dbg !9723
  br i1 %cmp2, label %if.then3, label %if.end14, !dbg !9724

if.then3:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* %key.addr, align 4, !dbg !9725
  %add = add nsw i32 %9, 1, !dbg !9728
  %10 = load i32, i32* %len, align 4, !dbg !9729
  %cmp4 = icmp slt i32 %add, %10, !dbg !9730
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !9731

if.then5:                                         ; preds = %if.then3
  %11 = bitcast %struct.IDProperty* %tmp to i8*, !dbg !9732
  %12 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9734
  %13 = load i32, i32* %key.addr, align 4, !dbg !9735
  %idxprom = sext i32 %13 to i64, !dbg !9734
  %arrayidx = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %12, i64 %idxprom, !dbg !9734
  %14 = bitcast %struct.IDProperty* %arrayidx to i8*, !dbg !9732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %14, i64 128, i1 false), !dbg !9732
  %15 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9736
  %16 = load i32, i32* %key.addr, align 4, !dbg !9737
  %idx.ext = sext i32 %16 to i64, !dbg !9738
  %add.ptr = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %15, i64 %idx.ext, !dbg !9738
  %17 = bitcast %struct.IDProperty* %add.ptr to i8*, !dbg !9739
  %18 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9740
  %19 = load i32, i32* %key.addr, align 4, !dbg !9741
  %idx.ext6 = sext i32 %19 to i64, !dbg !9742
  %add.ptr7 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %18, i64 %idx.ext6, !dbg !9742
  %add.ptr8 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %add.ptr7, i64 1, !dbg !9743
  %20 = bitcast %struct.IDProperty* %add.ptr8 to i8*, !dbg !9739
  %21 = load i32, i32* %len, align 4, !dbg !9744
  %22 = load i32, i32* %key.addr, align 4, !dbg !9745
  %add9 = add nsw i32 %22, 1, !dbg !9746
  %sub = sub nsw i32 %21, %add9, !dbg !9747
  %conv = sext i32 %sub to i64, !dbg !9748
  %mul = mul i64 128, %conv, !dbg !9749
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %20, i64 %mul, i1 false), !dbg !9739
  %23 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9750
  %24 = load i32, i32* %len, align 4, !dbg !9751
  %sub10 = sub nsw i32 %24, 1, !dbg !9752
  %idxprom11 = sext i32 %sub10 to i64, !dbg !9750
  %arrayidx12 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %23, i64 %idxprom11, !dbg !9750
  %25 = bitcast %struct.IDProperty* %arrayidx12 to i8*, !dbg !9753
  %26 = bitcast %struct.IDProperty* %tmp to i8*, !dbg !9753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 128, i1 false), !dbg !9753
  br label %if.end, !dbg !9754

if.end:                                           ; preds = %if.then5, %if.then3
  %27 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9755
  %28 = load i32, i32* %len, align 4, !dbg !9756
  %sub13 = sub nsw i32 %28, 1, !dbg !9757
  call void @IDP_ResizeIDPArray(%struct.IDProperty* %27, i32 %sub13), !dbg !9758
  br label %if.end14, !dbg !9759

if.end14:                                         ; preds = %if.end, %land.lhs.true, %if.then
  store i8 1, i8* %retval, align 1, !dbg !9760
  br label %return, !dbg !9760

if.else:                                          ; preds = %entry
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9761
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %29, i32 0, i32 4, !dbg !9763
  %30 = load i32, i32* %flag, align 8, !dbg !9763
  %and = and i32 %30, 1024, !dbg !9764
  %tobool15 = icmp ne i32 %and, 0, !dbg !9764
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !9765

if.then16:                                        ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !9766
  br label %return, !dbg !9766

if.end17:                                         ; preds = %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  store i8 0, i8* %retval, align 1, !dbg !9768
  br label %return, !dbg !9768

return:                                           ; preds = %if.end18, %if.then16, %if.end14
  %31 = load i8, i8* %retval, align 1, !dbg !9769
  ret i8 %31, !dbg !9769
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare dso_local void @IDP_ResizeIDPArray(%struct.IDProperty*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_collection_move(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %key, i32 %pos) #0 !dbg !9770 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %key.addr = alloca i32, align 4
  %pos.addr = alloca i32, align 4
  %idprop = alloca %struct.IDProperty*, align 8
  %tmp = alloca %struct.IDProperty, align 8
  %array = alloca %struct.IDProperty*, align 8
  %len = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9773, metadata !DIExpression()), !dbg !9774
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9775, metadata !DIExpression()), !dbg !9776
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !9777, metadata !DIExpression()), !dbg !9778
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !9779, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !9781, metadata !DIExpression()), !dbg !9782
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9783
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %0), !dbg !9785
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !9786
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9786
  br i1 %tobool, label %if.then, label %if.else26, !dbg !9787

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty* %tmp, metadata !9788, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %array, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9793, metadata !DIExpression()), !dbg !9794
  %1 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9795
  %len1 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %1, i32 0, i32 8, !dbg !9796
  %2 = load i32, i32* %len1, align 8, !dbg !9796
  store i32 %2, i32* %len, align 4, !dbg !9797
  %3 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9798
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %3, i32 0, i32 7, !dbg !9798
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 0, !dbg !9798
  %4 = load i8*, i8** %pointer, align 8, !dbg !9798
  %5 = bitcast i8* %4 to %struct.IDProperty*, !dbg !9798
  store %struct.IDProperty* %5, %struct.IDProperty** %array, align 8, !dbg !9799
  %6 = load i32, i32* %key.addr, align 4, !dbg !9800
  %cmp = icmp sge i32 %6, 0, !dbg !9802
  br i1 %cmp, label %land.lhs.true, label %if.end25, !dbg !9803

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %key.addr, align 4, !dbg !9804
  %8 = load i32, i32* %len, align 4, !dbg !9805
  %cmp2 = icmp slt i32 %7, %8, !dbg !9806
  br i1 %cmp2, label %land.lhs.true3, label %if.end25, !dbg !9807

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load i32, i32* %pos.addr, align 4, !dbg !9808
  %cmp4 = icmp sge i32 %9, 0, !dbg !9809
  br i1 %cmp4, label %land.lhs.true5, label %if.end25, !dbg !9810

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %10 = load i32, i32* %pos.addr, align 4, !dbg !9811
  %11 = load i32, i32* %len, align 4, !dbg !9812
  %cmp6 = icmp slt i32 %10, %11, !dbg !9813
  br i1 %cmp6, label %land.lhs.true7, label %if.end25, !dbg !9814

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load i32, i32* %key.addr, align 4, !dbg !9815
  %13 = load i32, i32* %pos.addr, align 4, !dbg !9816
  %cmp8 = icmp ne i32 %12, %13, !dbg !9817
  br i1 %cmp8, label %if.then9, label %if.end25, !dbg !9818

if.then9:                                         ; preds = %land.lhs.true7
  %14 = bitcast %struct.IDProperty* %tmp to i8*, !dbg !9819
  %15 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9821
  %16 = load i32, i32* %key.addr, align 4, !dbg !9822
  %idxprom = sext i32 %16 to i64, !dbg !9821
  %arrayidx = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %15, i64 %idxprom, !dbg !9821
  %17 = bitcast %struct.IDProperty* %arrayidx to i8*, !dbg !9819
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %17, i64 128, i1 false), !dbg !9819
  %18 = load i32, i32* %pos.addr, align 4, !dbg !9823
  %19 = load i32, i32* %key.addr, align 4, !dbg !9825
  %cmp10 = icmp slt i32 %18, %19, !dbg !9826
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !9827

if.then11:                                        ; preds = %if.then9
  %20 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9828
  %21 = load i32, i32* %pos.addr, align 4, !dbg !9829
  %idx.ext = sext i32 %21 to i64, !dbg !9830
  %add.ptr = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %20, i64 %idx.ext, !dbg !9830
  %add.ptr12 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %add.ptr, i64 1, !dbg !9831
  %22 = bitcast %struct.IDProperty* %add.ptr12 to i8*, !dbg !9832
  %23 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9833
  %24 = load i32, i32* %pos.addr, align 4, !dbg !9834
  %idx.ext13 = sext i32 %24 to i64, !dbg !9835
  %add.ptr14 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %23, i64 %idx.ext13, !dbg !9835
  %25 = bitcast %struct.IDProperty* %add.ptr14 to i8*, !dbg !9832
  %26 = load i32, i32* %key.addr, align 4, !dbg !9836
  %27 = load i32, i32* %pos.addr, align 4, !dbg !9837
  %sub = sub nsw i32 %26, %27, !dbg !9838
  %conv = sext i32 %sub to i64, !dbg !9839
  %mul = mul i64 128, %conv, !dbg !9840
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %25, i64 %mul, i1 false), !dbg !9832
  br label %if.end, !dbg !9832

if.else:                                          ; preds = %if.then9
  %28 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9841
  %29 = load i32, i32* %key.addr, align 4, !dbg !9842
  %idx.ext15 = sext i32 %29 to i64, !dbg !9843
  %add.ptr16 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %28, i64 %idx.ext15, !dbg !9843
  %30 = bitcast %struct.IDProperty* %add.ptr16 to i8*, !dbg !9844
  %31 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9845
  %32 = load i32, i32* %key.addr, align 4, !dbg !9846
  %idx.ext17 = sext i32 %32 to i64, !dbg !9847
  %add.ptr18 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %31, i64 %idx.ext17, !dbg !9847
  %add.ptr19 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %add.ptr18, i64 1, !dbg !9848
  %33 = bitcast %struct.IDProperty* %add.ptr19 to i8*, !dbg !9844
  %34 = load i32, i32* %pos.addr, align 4, !dbg !9849
  %35 = load i32, i32* %key.addr, align 4, !dbg !9850
  %sub20 = sub nsw i32 %34, %35, !dbg !9851
  %conv21 = sext i32 %sub20 to i64, !dbg !9852
  %mul22 = mul i64 128, %conv21, !dbg !9853
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %33, i64 %mul22, i1 false), !dbg !9844
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  %36 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !9854
  %37 = load i32, i32* %pos.addr, align 4, !dbg !9855
  %idxprom23 = sext i32 %37 to i64, !dbg !9854
  %arrayidx24 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %36, i64 %idxprom23, !dbg !9854
  %38 = bitcast %struct.IDProperty* %arrayidx24 to i8*, !dbg !9856
  %39 = bitcast %struct.IDProperty* %tmp to i8*, !dbg !9856
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 128, i1 false), !dbg !9856
  br label %if.end25, !dbg !9857

if.end25:                                         ; preds = %if.end, %land.lhs.true7, %land.lhs.true5, %land.lhs.true3, %land.lhs.true, %if.then
  store i8 1, i8* %retval, align 1, !dbg !9858
  br label %return, !dbg !9858

if.else26:                                        ; preds = %entry
  %40 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9859
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %40, i32 0, i32 4, !dbg !9861
  %41 = load i32, i32* %flag, align 8, !dbg !9861
  %and = and i32 %41, 1024, !dbg !9862
  %tobool27 = icmp ne i32 %and, 0, !dbg !9862
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !9863

if.then28:                                        ; preds = %if.else26
  store i8 1, i8* %retval, align 1, !dbg !9864
  br label %return, !dbg !9864

if.end29:                                         ; preds = %if.else26
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  store i8 0, i8* %retval, align 1, !dbg !9866
  br label %return, !dbg !9866

return:                                           ; preds = %if.end30, %if.then28, %if.end25
  %42 = load i8, i8* %retval, align 1, !dbg !9867
  ret i8 %42, !dbg !9867
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_collection_clear(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !9868 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9869, metadata !DIExpression()), !dbg !9870
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9871, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !9873, metadata !DIExpression()), !dbg !9874
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9875
  %call = call %struct.IDProperty* @rna_idproperty_check(%struct.PropertyRNA** %prop.addr, %struct.PointerRNA* %0), !dbg !9877
  store %struct.IDProperty* %call, %struct.IDProperty** %idprop, align 8, !dbg !9878
  %tobool = icmp ne %struct.IDProperty* %call, null, !dbg !9878
  br i1 %tobool, label %if.then, label %if.end, !dbg !9879

if.then:                                          ; preds = %entry
  %1 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9880
  call void @IDP_ResizeIDPArray(%struct.IDProperty* %1, i32 0), !dbg !9882
  %2 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !9883
  call void @rna_idproperty_touch(%struct.IDProperty* %2), !dbg !9884
  br label %if.end, !dbg !9885

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9886
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_collection_lookup_index(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PointerRNA* %t_ptr) #0 !dbg !9887 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %t_ptr.addr = alloca %struct.PointerRNA*, align 8
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %index = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9888, metadata !DIExpression()), !dbg !9889
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  store %struct.PointerRNA* %t_ptr, %struct.PointerRNA** %t_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %t_ptr.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !9894, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9896, metadata !DIExpression()), !dbg !9897
  store i32 0, i32* %index, align 4, !dbg !9897
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9898
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9899
  call void @RNA_property_collection_begin(%struct.PointerRNA* %0, %struct.PropertyRNA* %1, %struct.CollectionPropertyIterator* %iter), !dbg !9900
  store i32 0, i32* %index, align 4, !dbg !9901
  br label %for.cond, !dbg !9903

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !9904
  %2 = load i32, i32* %valid, align 8, !dbg !9904
  %tobool = icmp ne i32 %2, 0, !dbg !9906
  br i1 %tobool, label %for.body, label %for.end, !dbg !9906

for.body:                                         ; preds = %for.cond
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !9907
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr1, i32 0, i32 2, !dbg !9910
  %3 = load i8*, i8** %data, align 8, !dbg !9910
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %t_ptr.addr, align 8, !dbg !9911
  %data2 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 2, !dbg !9912
  %5 = load i8*, i8** %data2, align 8, !dbg !9912
  %cmp = icmp eq i8* %3, %5, !dbg !9913
  br i1 %cmp, label %if.then, label %if.end, !dbg !9914

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !9915

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9916

for.inc:                                          ; preds = %if.end
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %iter), !dbg !9917
  %6 = load i32, i32* %index, align 4, !dbg !9918
  %inc = add nsw i32 %6, 1, !dbg !9918
  store i32 %inc, i32* %index, align 4, !dbg !9918
  br label %for.cond, !dbg !9919, !llvm.loop !9920

for.end:                                          ; preds = %if.then, %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %iter), !dbg !9922
  %valid3 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !9923
  %7 = load i32, i32* %valid3, align 8, !dbg !9923
  %tobool4 = icmp ne i32 %7, 0, !dbg !9925
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !9926

if.then5:                                         ; preds = %for.end
  %8 = load i32, i32* %index, align 4, !dbg !9927
  store i32 %8, i32* %retval, align 4, !dbg !9928
  br label %return, !dbg !9928

if.else:                                          ; preds = %for.end
  store i32 -1, i32* %retval, align 4, !dbg !9929
  br label %return, !dbg !9929

return:                                           ; preds = %if.else, %if.then5
  %9 = load i32, i32* %retval, align 4, !dbg !9930
  ret i32 %9, !dbg !9930
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_collection_lookup_int(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %key, %struct.PointerRNA* %r_ptr) #0 !dbg !9931 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %key.addr = alloca i32, align 4
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %i = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !9940, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !9942, metadata !DIExpression()), !dbg !9943
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9944
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !9945
  %1 = bitcast %struct.PropertyRNA* %call to %struct.CollectionPropertyRNA*, !dbg !9946
  store %struct.CollectionPropertyRNA* %1, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9943
  %2 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9947
  %lookupint = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %2, i32 0, i32 6, !dbg !9949
  %3 = load i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)** %lookupint, align 8, !dbg !9949
  %tobool = icmp ne i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* %3, null, !dbg !9947
  br i1 %tobool, label %if.then, label %if.else, !dbg !9950

if.then:                                          ; preds = %entry
  %4 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !9951
  %lookupint1 = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %4, i32 0, i32 6, !dbg !9953
  %5 = load i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)** %lookupint1, align 8, !dbg !9953
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9954
  %7 = load i32, i32* %key.addr, align 4, !dbg !9955
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !9956
  %call2 = call i32 %5(%struct.PointerRNA* %6, i32 %7, %struct.PointerRNA* %8), !dbg !9951
  store i32 %call2, i32* %retval, align 4, !dbg !9957
  br label %return, !dbg !9957

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !9958, metadata !DIExpression()), !dbg !9960
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9961, metadata !DIExpression()), !dbg !9962
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9963
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !9964
  call void @RNA_property_collection_begin(%struct.PointerRNA* %9, %struct.PropertyRNA* %10, %struct.CollectionPropertyIterator* %iter), !dbg !9965
  store i32 0, i32* %i, align 4, !dbg !9966
  br label %for.cond, !dbg !9968

for.cond:                                         ; preds = %for.inc, %if.else
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !9969
  %11 = load i32, i32* %valid, align 8, !dbg !9969
  %tobool3 = icmp ne i32 %11, 0, !dbg !9971
  br i1 %tobool3, label %for.body, label %for.end, !dbg !9971

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !9972
  %13 = load i32, i32* %key.addr, align 4, !dbg !9975
  %cmp = icmp eq i32 %12, %13, !dbg !9976
  br i1 %cmp, label %if.then4, label %if.end, !dbg !9977

if.then4:                                         ; preds = %for.body
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !9978
  %ptr5 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !9980
  %15 = bitcast %struct.PointerRNA* %14 to i8*, !dbg !9980
  %16 = bitcast %struct.PointerRNA* %ptr5 to i8*, !dbg !9980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !9980
  br label %for.end, !dbg !9981

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9982

for.inc:                                          ; preds = %if.end
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %iter), !dbg !9983
  %17 = load i32, i32* %i, align 4, !dbg !9984
  %inc = add nsw i32 %17, 1, !dbg !9984
  store i32 %inc, i32* %i, align 4, !dbg !9984
  br label %for.cond, !dbg !9985, !llvm.loop !9986

for.end:                                          ; preds = %if.then4, %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %iter), !dbg !9988
  %valid6 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !9989
  %18 = load i32, i32* %valid6, align 8, !dbg !9989
  %tobool7 = icmp ne i32 %18, 0, !dbg !9991
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9992

if.then8:                                         ; preds = %for.end
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !9993
  %20 = bitcast %struct.PointerRNA* %19 to i8*, !dbg !9994
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false), !dbg !9994
  br label %if.end9, !dbg !9994

if.end9:                                          ; preds = %if.then8, %for.end
  %valid10 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !9995
  %21 = load i32, i32* %valid10, align 8, !dbg !9995
  store i32 %21, i32* %retval, align 4, !dbg !9996
  br label %return, !dbg !9996

return:                                           ; preds = %if.end9, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !9997
  ret i32 %22, !dbg !9997
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_collection_assign_int(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %key, %struct.PointerRNA* %assign_ptr) #0 !dbg !9998 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %key.addr = alloca i32, align 4
  %assign_ptr.addr = alloca %struct.PointerRNA*, align 8
  %cprop = alloca %struct.CollectionPropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !10002, metadata !DIExpression()), !dbg !10003
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !10004, metadata !DIExpression()), !dbg !10005
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !10006, metadata !DIExpression()), !dbg !10007
  store %struct.PointerRNA* %assign_ptr, %struct.PointerRNA** %assign_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %assign_ptr.addr, metadata !10008, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyRNA** %cprop, metadata !10010, metadata !DIExpression()), !dbg !10011
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10012
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !10013
  %1 = bitcast %struct.PropertyRNA* %call to %struct.CollectionPropertyRNA*, !dbg !10014
  store %struct.CollectionPropertyRNA* %1, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !10011
  %2 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !10015
  %assignint = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %2, i32 0, i32 8, !dbg !10017
  %3 = load i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)** %assignint, align 8, !dbg !10017
  %tobool = icmp ne i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* %3, null, !dbg !10015
  br i1 %tobool, label %if.then, label %if.end, !dbg !10018

if.then:                                          ; preds = %entry
  %4 = load %struct.CollectionPropertyRNA*, %struct.CollectionPropertyRNA** %cprop, align 8, !dbg !10019
  %assignint1 = getelementptr inbounds %struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* %4, i32 0, i32 8, !dbg !10021
  %5 = load i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)** %assignint1, align 8, !dbg !10021
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10022
  %7 = load i32, i32* %key.addr, align 4, !dbg !10023
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %assign_ptr.addr, align 8, !dbg !10024
  %call2 = call i32 %5(%struct.PointerRNA* %6, i32 %7, %struct.PointerRNA* %8), !dbg !10019
  store i32 %call2, i32* %retval, align 4, !dbg !10025
  br label %return, !dbg !10025

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10026
  br label %return, !dbg !10026

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !10027
  ret i32 %9, !dbg !10027
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_collection_type_get(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PointerRNA* %r_ptr) #0 !dbg !10028 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !10031, metadata !DIExpression()), !dbg !10032
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !10033, metadata !DIExpression()), !dbg !10034
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !10035, metadata !DIExpression()), !dbg !10036
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !10037
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10038
  %2 = bitcast %struct.PointerRNA* %0 to i8*, !dbg !10039
  %3 = bitcast %struct.PointerRNA* %1 to i8*, !dbg !10039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !10039
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10040
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %4), !dbg !10041
  %srna = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %call, i32 0, i32 21, !dbg !10042
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10042
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !10043
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 1, !dbg !10044
  store %struct.StructRNA* %5, %struct.StructRNA** %type, align 8, !dbg !10045
  %tobool = icmp ne %struct.StructRNA* %5, null, !dbg !10046
  %7 = zext i1 %tobool to i64, !dbg !10046
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !10046
  %conv = trunc i32 %cond to i8, !dbg !10047
  ret i8 %conv, !dbg !10048
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_collection_raw_array(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PropertyRNA* %itemprop, %struct.RawArray* %array) #0 !dbg !10049 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %itemprop.addr = alloca %struct.PropertyRNA*, align 8
  %array.addr = alloca %struct.RawArray*, align 8
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %internal = alloca %struct.ArrayIterator*, align 8
  %arrayp = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !10060, metadata !DIExpression()), !dbg !10061
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !10062, metadata !DIExpression()), !dbg !10063
  store %struct.PropertyRNA* %itemprop, %struct.PropertyRNA** %itemprop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %itemprop.addr, metadata !10064, metadata !DIExpression()), !dbg !10065
  store %struct.RawArray* %array, %struct.RawArray** %array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RawArray** %array.addr, metadata !10066, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !10068, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !10070, metadata !DIExpression()), !dbg !10071
  call void @llvm.dbg.declare(metadata i8** %arrayp, metadata !10072, metadata !DIExpression()), !dbg !10073
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10074
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 4, !dbg !10076
  %1 = load i32, i32* %flag, align 8, !dbg !10076
  %and = and i32 %1, 16384, !dbg !10077
  %tobool = icmp ne i32 %and, 0, !dbg !10077
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10078

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop.addr, align 8, !dbg !10079
  %flag1 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 4, !dbg !10080
  %3 = load i32, i32* %flag1, align 8, !dbg !10080
  %and2 = and i32 %3, 8192, !dbg !10081
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10081
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10082

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !10083
  br label %return, !dbg !10083

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10084
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10085
  call void @RNA_property_collection_begin(%struct.PointerRNA* %4, %struct.PropertyRNA* %5, %struct.CollectionPropertyIterator* %iter), !dbg !10086
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !10087
  %6 = load i32, i32* %valid, align 8, !dbg !10087
  %tobool4 = icmp ne i32 %6, 0, !dbg !10089
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10090

if.then5:                                         ; preds = %if.end
  %internal6 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 3, !dbg !10091
  %array7 = bitcast %union.anon* %internal6 to %struct.ArrayIterator*, !dbg !10093
  store %struct.ArrayIterator* %array7, %struct.ArrayIterator** %internal, align 8, !dbg !10094
  %valid8 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !10095
  %7 = load i32, i32* %valid8, align 8, !dbg !10095
  %tobool9 = icmp ne i32 %7, 0, !dbg !10096
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !10096

cond.true:                                        ; preds = %if.then5
  %ptr10 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !10097
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr10, i32 0, i32 2, !dbg !10098
  %8 = load i8*, i8** %data, align 8, !dbg !10098
  br label %cond.end, !dbg !10096

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !10096

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ null, %cond.false ], !dbg !10096
  store i8* %cond, i8** %arrayp, align 8, !dbg !10099
  %9 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !10100
  %skip = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %9, i32 0, i32 5, !dbg !10102
  %10 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip, align 8, !dbg !10102
  %tobool11 = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %10, null, !dbg !10100
  br i1 %tobool11, label %if.then15, label %lor.lhs.false12, !dbg !10103

lor.lhs.false12:                                  ; preds = %cond.end
  %ptr13 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !10104
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop.addr, align 8, !dbg !10105
  %call = call zeroext i8 @RNA_property_editable(%struct.PointerRNA* %ptr13, %struct.PropertyRNA* %11), !dbg !10106
  %tobool14 = icmp ne i8 %call, 0, !dbg !10106
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !10107

if.then15:                                        ; preds = %lor.lhs.false12, %cond.end
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %iter), !dbg !10108
  store i32 0, i32* %retval, align 4, !dbg !10110
  br label %return, !dbg !10110

if.end16:                                         ; preds = %lor.lhs.false12
  %12 = load i8*, i8** %arrayp, align 8, !dbg !10111
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop.addr, align 8, !dbg !10112
  %rawoffset = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %13, i32 0, i32 19, !dbg !10113
  %14 = load i32, i32* %rawoffset, align 8, !dbg !10113
  %idx.ext = sext i32 %14 to i64, !dbg !10114
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext, !dbg !10114
  %15 = load %struct.RawArray*, %struct.RawArray** %array.addr, align 8, !dbg !10115
  %array17 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %15, i32 0, i32 0, !dbg !10116
  store i8* %add.ptr, i8** %array17, align 8, !dbg !10117
  %16 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !10118
  %itemsize = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %16, i32 0, i32 3, !dbg !10119
  %17 = load i32, i32* %itemsize, align 8, !dbg !10119
  %18 = load %struct.RawArray*, %struct.RawArray** %array.addr, align 8, !dbg !10120
  %stride = getelementptr inbounds %struct.RawArray, %struct.RawArray* %18, i32 0, i32 3, !dbg !10121
  store i32 %17, i32* %stride, align 8, !dbg !10122
  %19 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !10123
  %endptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %19, i32 0, i32 1, !dbg !10124
  %20 = load i8*, i8** %endptr, align 8, !dbg !10124
  %21 = load i8*, i8** %arrayp, align 8, !dbg !10125
  %sub.ptr.lhs.cast = ptrtoint i8* %20 to i64, !dbg !10126
  %sub.ptr.rhs.cast = ptrtoint i8* %21 to i64, !dbg !10126
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10126
  %22 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !10127
  %itemsize18 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %22, i32 0, i32 3, !dbg !10128
  %23 = load i32, i32* %itemsize18, align 8, !dbg !10128
  %conv = sext i32 %23 to i64, !dbg !10127
  %div = sdiv i64 %sub.ptr.sub, %conv, !dbg !10129
  %conv19 = trunc i64 %div to i32, !dbg !10130
  %24 = load %struct.RawArray*, %struct.RawArray** %array.addr, align 8, !dbg !10131
  %len = getelementptr inbounds %struct.RawArray, %struct.RawArray* %24, i32 0, i32 2, !dbg !10132
  store i32 %conv19, i32* %len, align 4, !dbg !10133
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop.addr, align 8, !dbg !10134
  %rawtype = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %25, i32 0, i32 20, !dbg !10135
  %26 = load i32, i32* %rawtype, align 4, !dbg !10135
  %27 = load %struct.RawArray*, %struct.RawArray** %array.addr, align 8, !dbg !10136
  %type = getelementptr inbounds %struct.RawArray, %struct.RawArray* %27, i32 0, i32 1, !dbg !10137
  store i32 %26, i32* %type, align 8, !dbg !10138
  br label %if.end20, !dbg !10139

if.else:                                          ; preds = %if.end
  %28 = load %struct.RawArray*, %struct.RawArray** %array.addr, align 8, !dbg !10140
  %29 = bitcast %struct.RawArray* %28 to i8*, !dbg !10141
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false), !dbg !10141
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.end16
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %iter), !dbg !10142
  store i32 1, i32* %retval, align 4, !dbg !10143
  br label %return, !dbg !10143

return:                                           ; preds = %if.end20, %if.then15, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !10144
  ret i32 %30, !dbg !10144
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_raw_type_sizeof(i32 %type) #0 !dbg !10145 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10148, metadata !DIExpression()), !dbg !10149
  %0 = load i32, i32* %type.addr, align 4, !dbg !10150
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb1
    i32 0, label %sw.bb2
    i32 4, label %sw.bb3
    i32 3, label %sw.bb4
  ], !dbg !10151

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10152
  br label %return, !dbg !10152

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10154
  br label %return, !dbg !10154

sw.bb2:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !10155
  br label %return, !dbg !10155

sw.bb3:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !10156
  br label %return, !dbg !10156

sw.bb4:                                           ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !10157
  br label %return, !dbg !10157

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10158
  br label %return, !dbg !10158

return:                                           ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !10159
  ret i32 %1, !dbg !10159
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_raw_type(%struct.PropertyRNA* %prop) #0 !dbg !10160 {
entry:
  %retval = alloca i32, align 4
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !10163, metadata !DIExpression()), !dbg !10164
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10165
  %rawtype = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 20, !dbg !10167
  %1 = load i32, i32* %rawtype, align 4, !dbg !10167
  %cmp = icmp eq i32 %1, -1, !dbg !10168
  br i1 %cmp, label %if.then, label %if.end, !dbg !10169

if.then:                                          ; preds = %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10170
  %type = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %2, i32 0, i32 9, !dbg !10172
  %3 = load i32, i32* %type, align 8, !dbg !10172
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 4, label %sw.bb3
  ], !dbg !10173

sw.bb:                                            ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !10174
  br label %return, !dbg !10174

sw.bb1:                                           ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !10176
  br label %return, !dbg !10176

sw.bb2:                                           ; preds = %if.then
  store i32 4, i32* %retval, align 4, !dbg !10177
  br label %return, !dbg !10177

sw.bb3:                                           ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !10178
  br label %return, !dbg !10178

sw.default:                                       ; preds = %if.then
  br label %sw.epilog, !dbg !10179

sw.epilog:                                        ; preds = %sw.default
  br label %if.end, !dbg !10180

if.end:                                           ; preds = %sw.epilog, %entry
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10181
  %rawtype4 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 20, !dbg !10182
  %5 = load i32, i32* %rawtype4, align 4, !dbg !10182
  store i32 %5, i32* %retval, align 4, !dbg !10183
  br label %return, !dbg !10183

return:                                           ; preds = %if.end, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %6 = load i32, i32* %retval, align 4, !dbg !10184
  ret i32 %6, !dbg !10184
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_collection_raw_get(%struct.ReportList* %reports, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %propname, i8* %array, i32 %type, i32 %len) #0 !dbg !10185 {
entry:
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %array.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !10190, metadata !DIExpression()), !dbg !10191
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !10192, metadata !DIExpression()), !dbg !10193
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  store i8* %array, i8** %array.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %array.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10202, metadata !DIExpression()), !dbg !10203
  %0 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !10204
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10205
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10206
  %3 = load i8*, i8** %propname.addr, align 8, !dbg !10207
  %4 = load i8*, i8** %array.addr, align 8, !dbg !10208
  %5 = load i32, i32* %type.addr, align 4, !dbg !10209
  %6 = load i32, i32* %len.addr, align 4, !dbg !10210
  %call = call i32 @rna_raw_access(%struct.ReportList* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, i8* %3, i8* %4, i32 %5, i32 %6, i32 0), !dbg !10211
  ret i32 %call, !dbg !10212
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_raw_access(%struct.ReportList* %reports, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %propname, i8* %inarray, i32 %intype, i32 %inlen, i32 %set) #0 !dbg !10213 {
entry:
  %retval = alloca i32, align 4
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %inarray.addr = alloca i8*, align 8
  %intype.addr = alloca i32, align 4
  %inlen.addr = alloca i32, align 4
  %set.addr = alloca i32, align 4
  %ptype = alloca %struct.StructRNA*, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  %itemprop = alloca %struct.PropertyRNA*, align 8
  %iprop = alloca %struct.PropertyRNA*, align 8
  %itemtype = alloca i32, align 4
  %in = alloca %struct.RawArray, align 8
  %itemlen = alloca i32, align 4
  %out = alloca %struct.RawArray, align 8
  %arraylen = alloca i32, align 4
  %inp = alloca i8*, align 8
  %outp = alloca i8*, align 8
  %a = alloca i32, align 4
  %size = alloca i32, align 4
  %tmparray = alloca i8*, align 8
  %tmplen = alloca i32, align 4
  %err = alloca i32, align 4
  %j = alloca i32, align 4
  %a45 = alloca i32, align 4
  %needconv = alloca i32, align 4
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr66 = alloca %struct.PointerRNA, align 8
  %b = alloca i32, align 4
  %i = alloca i32, align 4
  %f = alloca float, align 4
  %b191 = alloca i32, align 4
  %i221 = alloca i32, align 4
  %f251 = alloca float, align 4
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !10216, metadata !DIExpression()), !dbg !10217
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !10218, metadata !DIExpression()), !dbg !10219
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !10220, metadata !DIExpression()), !dbg !10221
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !10222, metadata !DIExpression()), !dbg !10223
  store i8* %inarray, i8** %inarray.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %inarray.addr, metadata !10224, metadata !DIExpression()), !dbg !10225
  store i32 %intype, i32* %intype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intype.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  store i32 %inlen, i32* %inlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inlen.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %ptype, metadata !10232, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !10234, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %itemprop, metadata !10236, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iprop, metadata !10238, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.declare(metadata i32* %itemtype, metadata !10240, metadata !DIExpression()), !dbg !10241
  store i32 0, i32* %itemtype, align 4, !dbg !10241
  call void @llvm.dbg.declare(metadata %struct.RawArray* %in, metadata !10242, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.declare(metadata i32* %itemlen, metadata !10244, metadata !DIExpression()), !dbg !10245
  store i32 0, i32* %itemlen, align 4, !dbg !10245
  %0 = load i8*, i8** %inarray.addr, align 8, !dbg !10246
  %array = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10247
  store i8* %0, i8** %array, align 8, !dbg !10248
  %1 = load i32, i32* %intype.addr, align 4, !dbg !10249
  %type = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10250
  store i32 %1, i32* %type, align 8, !dbg !10251
  %2 = load i32, i32* %inlen.addr, align 4, !dbg !10252
  %len = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 2, !dbg !10253
  store i32 %2, i32* %len, align 4, !dbg !10254
  %stride = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 3, !dbg !10255
  store i32 0, i32* %stride, align 8, !dbg !10256
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10257
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10258
  %call = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !10259
  store %struct.StructRNA* %call, %struct.StructRNA** %ptype, align 8, !dbg !10260
  %5 = load %struct.StructRNA*, %struct.StructRNA** %ptype, align 8, !dbg !10261
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* %5, i8* null, %struct.PointerRNA* %itemptr), !dbg !10262
  %6 = load i8*, i8** %propname.addr, align 8, !dbg !10263
  %call1 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %itemptr, i8* %6), !dbg !10264
  store %struct.PropertyRNA* %call1, %struct.PropertyRNA** %itemprop, align 8, !dbg !10265
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop, align 8, !dbg !10266
  %tobool = icmp ne %struct.PropertyRNA* %7, null, !dbg !10266
  br i1 %tobool, label %if.then, label %if.end44, !dbg !10268

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RawArray* %out, metadata !10269, metadata !DIExpression()), !dbg !10271
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop, align 8, !dbg !10272
  %call2 = call i32 @RNA_property_type(%struct.PropertyRNA* %8), !dbg !10273
  store i32 %call2, i32* %itemtype, align 4, !dbg !10274
  %9 = load i32, i32* %itemtype, align 4, !dbg !10275
  %cmp = icmp eq i32 %9, 0, !dbg !10275
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !10275

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i32, i32* %itemtype, align 4, !dbg !10275
  %cmp3 = icmp eq i32 %10, 1, !dbg !10275
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !10275

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %11 = load i32, i32* %itemtype, align 4, !dbg !10275
  %cmp5 = icmp eq i32 %11, 2, !dbg !10275
  br i1 %cmp5, label %if.end, label %if.then6, !dbg !10277

if.then6:                                         ; preds = %lor.lhs.false4
  %12 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !10278
  call void @BKE_report(%struct.ReportList* %12, i32 32, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.78, i64 0, i64 0)), !dbg !10280
  store i32 0, i32* %retval, align 4, !dbg !10281
  br label %return, !dbg !10281

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %if.then
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop, align 8, !dbg !10282
  %call7 = call i32 @RNA_property_array_length(%struct.PointerRNA* %itemptr, %struct.PropertyRNA* %13), !dbg !10283
  store i32 %call7, i32* %itemlen, align 4, !dbg !10284
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop, align 8, !dbg !10285
  %getlength = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 11, !dbg !10287
  %15 = load i32 (%struct.PointerRNA*, i32*)*, i32 (%struct.PointerRNA*, i32*)** %getlength, align 8, !dbg !10287
  %tobool8 = icmp ne i32 (%struct.PointerRNA*, i32*)* %15, null, !dbg !10285
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !10288

if.then9:                                         ; preds = %if.end
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %itemprop, align 8, !dbg !10289
  br label %if.end43, !dbg !10291

if.else:                                          ; preds = %if.end
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10292
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10294
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop, align 8, !dbg !10295
  %call10 = call i32 @RNA_property_collection_raw_array(%struct.PointerRNA* %16, %struct.PropertyRNA* %17, %struct.PropertyRNA* %18, %struct.RawArray* %out), !dbg !10296
  %tobool11 = icmp ne i32 %call10, 0, !dbg !10296
  br i1 %tobool11, label %if.then12, label %if.end42, !dbg !10297

if.then12:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %arraylen, metadata !10298, metadata !DIExpression()), !dbg !10300
  %19 = load i32, i32* %itemlen, align 4, !dbg !10301
  %cmp13 = icmp eq i32 %19, 0, !dbg !10302
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !10303

cond.true:                                        ; preds = %if.then12
  br label %cond.end, !dbg !10303

cond.false:                                       ; preds = %if.then12
  %20 = load i32, i32* %itemlen, align 4, !dbg !10304
  br label %cond.end, !dbg !10303

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %20, %cond.false ], !dbg !10303
  store i32 %cond, i32* %arraylen, align 4, !dbg !10300
  %len14 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 2, !dbg !10305
  %21 = load i32, i32* %len14, align 4, !dbg !10305
  %22 = load i32, i32* %arraylen, align 4, !dbg !10307
  %len15 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %out, i32 0, i32 2, !dbg !10308
  %23 = load i32, i32* %len15, align 4, !dbg !10308
  %mul = mul nsw i32 %22, %23, !dbg !10309
  %cmp16 = icmp ne i32 %21, %mul, !dbg !10310
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !10311

if.then17:                                        ; preds = %cond.end
  %24 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !10312
  %len18 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %out, i32 0, i32 2, !dbg !10314
  %25 = load i32, i32* %len18, align 4, !dbg !10314
  %26 = load i32, i32* %arraylen, align 4, !dbg !10315
  %mul19 = mul nsw i32 %25, %26, !dbg !10316
  %len20 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 2, !dbg !10317
  %27 = load i32, i32* %len20, align 4, !dbg !10317
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %24, i32 32, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.79, i64 0, i64 0), i32 %mul19, i32 %27), !dbg !10318
  store i32 0, i32* %retval, align 4, !dbg !10319
  br label %return, !dbg !10319

if.end21:                                         ; preds = %cond.end
  %type22 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %out, i32 0, i32 1, !dbg !10320
  %28 = load i32, i32* %type22, align 8, !dbg !10320
  %type23 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10322
  %29 = load i32, i32* %type23, align 8, !dbg !10322
  %cmp24 = icmp eq i32 %28, %29, !dbg !10323
  br i1 %cmp24, label %if.then25, label %if.end41, !dbg !10324

if.then25:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i8** %inp, metadata !10325, metadata !DIExpression()), !dbg !10327
  %array26 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10328
  %30 = load i8*, i8** %array26, align 8, !dbg !10328
  store i8* %30, i8** %inp, align 8, !dbg !10327
  call void @llvm.dbg.declare(metadata i8** %outp, metadata !10329, metadata !DIExpression()), !dbg !10330
  %array27 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %out, i32 0, i32 0, !dbg !10331
  %31 = load i8*, i8** %array27, align 8, !dbg !10331
  store i8* %31, i8** %outp, align 8, !dbg !10330
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10332, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10334, metadata !DIExpression()), !dbg !10335
  %type28 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %out, i32 0, i32 1, !dbg !10336
  %32 = load i32, i32* %type28, align 8, !dbg !10336
  %call29 = call i32 @RNA_raw_type_sizeof(i32 %32), !dbg !10337
  %33 = load i32, i32* %arraylen, align 4, !dbg !10338
  %mul30 = mul nsw i32 %call29, %33, !dbg !10339
  store i32 %mul30, i32* %size, align 4, !dbg !10340
  store i32 0, i32* %a, align 4, !dbg !10341
  br label %for.cond, !dbg !10343

for.cond:                                         ; preds = %for.inc, %if.then25
  %34 = load i32, i32* %a, align 4, !dbg !10344
  %len31 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %out, i32 0, i32 2, !dbg !10346
  %35 = load i32, i32* %len31, align 4, !dbg !10346
  %cmp32 = icmp slt i32 %34, %35, !dbg !10347
  br i1 %cmp32, label %for.body, label %for.end, !dbg !10348

for.body:                                         ; preds = %for.cond
  %36 = load i32, i32* %set.addr, align 4, !dbg !10349
  %tobool33 = icmp ne i32 %36, 0, !dbg !10349
  br i1 %tobool33, label %if.then34, label %if.else35, !dbg !10352

if.then34:                                        ; preds = %for.body
  %37 = load i8*, i8** %outp, align 8, !dbg !10353
  %38 = load i8*, i8** %inp, align 8, !dbg !10354
  %39 = load i32, i32* %size, align 4, !dbg !10355
  %conv = sext i32 %39 to i64, !dbg !10355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %38, i64 %conv, i1 false), !dbg !10356
  br label %if.end37, !dbg !10356

if.else35:                                        ; preds = %for.body
  %40 = load i8*, i8** %inp, align 8, !dbg !10357
  %41 = load i8*, i8** %outp, align 8, !dbg !10358
  %42 = load i32, i32* %size, align 4, !dbg !10359
  %conv36 = sext i32 %42 to i64, !dbg !10359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %41, i64 %conv36, i1 false), !dbg !10360
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then34
  %43 = load i8*, i8** %inp, align 8, !dbg !10361
  %44 = load i32, i32* %size, align 4, !dbg !10362
  %idx.ext = sext i32 %44 to i64, !dbg !10363
  %add.ptr = getelementptr inbounds i8, i8* %43, i64 %idx.ext, !dbg !10363
  store i8* %add.ptr, i8** %inp, align 8, !dbg !10364
  %45 = load i8*, i8** %outp, align 8, !dbg !10365
  %stride38 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %out, i32 0, i32 3, !dbg !10366
  %46 = load i32, i32* %stride38, align 8, !dbg !10366
  %idx.ext39 = sext i32 %46 to i64, !dbg !10367
  %add.ptr40 = getelementptr inbounds i8, i8* %45, i64 %idx.ext39, !dbg !10367
  store i8* %add.ptr40, i8** %outp, align 8, !dbg !10368
  br label %for.inc, !dbg !10369

for.inc:                                          ; preds = %if.end37
  %47 = load i32, i32* %a, align 4, !dbg !10370
  %inc = add nsw i32 %47, 1, !dbg !10370
  store i32 %inc, i32* %a, align 4, !dbg !10370
  br label %for.cond, !dbg !10371, !llvm.loop !10372

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !10374
  br label %return, !dbg !10374

if.end41:                                         ; preds = %if.end21
  br label %if.end42, !dbg !10375

if.end42:                                         ; preds = %if.end41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then9
  br label %if.end44, !dbg !10376

if.end44:                                         ; preds = %if.end43, %entry
  call void @llvm.dbg.declare(metadata i8** %tmparray, metadata !10377, metadata !DIExpression()), !dbg !10379
  store i8* null, i8** %tmparray, align 8, !dbg !10379
  call void @llvm.dbg.declare(metadata i32* %tmplen, metadata !10380, metadata !DIExpression()), !dbg !10381
  store i32 0, i32* %tmplen, align 4, !dbg !10381
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10382, metadata !DIExpression()), !dbg !10383
  store i32 0, i32* %err, align 4, !dbg !10383
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10384, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.declare(metadata i32* %a45, metadata !10386, metadata !DIExpression()), !dbg !10387
  store i32 0, i32* %a45, align 4, !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %needconv, metadata !10388, metadata !DIExpression()), !dbg !10389
  store i32 1, i32* %needconv, align 4, !dbg !10389
  %48 = load i32, i32* %itemtype, align 4, !dbg !10390
  %cmp46 = icmp eq i32 %48, 0, !dbg !10392
  br i1 %cmp46, label %land.lhs.true, label %lor.lhs.false48, !dbg !10393

lor.lhs.false48:                                  ; preds = %if.end44
  %49 = load i32, i32* %itemtype, align 4, !dbg !10394
  %cmp49 = icmp eq i32 %49, 1, !dbg !10395
  br i1 %cmp49, label %land.lhs.true, label %lor.lhs.false54, !dbg !10396

land.lhs.true:                                    ; preds = %lor.lhs.false48, %if.end44
  %type51 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10397
  %50 = load i32, i32* %type51, align 8, !dbg !10397
  %cmp52 = icmp eq i32 %50, 0, !dbg !10398
  br i1 %cmp52, label %if.then61, label %lor.lhs.false54, !dbg !10399

lor.lhs.false54:                                  ; preds = %land.lhs.true, %lor.lhs.false48
  %51 = load i32, i32* %itemtype, align 4, !dbg !10400
  %cmp55 = icmp eq i32 %51, 2, !dbg !10401
  br i1 %cmp55, label %land.lhs.true57, label %if.end62, !dbg !10402

land.lhs.true57:                                  ; preds = %lor.lhs.false54
  %type58 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10403
  %52 = load i32, i32* %type58, align 8, !dbg !10403
  %cmp59 = icmp eq i32 %52, 4, !dbg !10404
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !10405

if.then61:                                        ; preds = %land.lhs.true57, %land.lhs.true
  store i32 0, i32* %needconv, align 4, !dbg !10406
  br label %if.end62, !dbg !10408

if.end62:                                         ; preds = %if.then61, %land.lhs.true57, %lor.lhs.false54
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !10409, metadata !DIExpression()), !dbg !10411
  %53 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10412
  %54 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10412
  call void @RNA_property_collection_begin(%struct.PointerRNA* %53, %struct.PropertyRNA* %54, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !10412
  br label %for.cond63, !dbg !10412

for.cond63:                                       ; preds = %for.inc633, %if.end62
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !10414
  %55 = load i32, i32* %valid, align 8, !dbg !10414
  %tobool64 = icmp ne i32 %55, 0, !dbg !10412
  br i1 %tobool64, label %for.body65, label %for.end634, !dbg !10412

for.body65:                                       ; preds = %for.cond63
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr66, metadata !10416, metadata !DIExpression()), !dbg !10418
  %ptr67 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !10418
  %56 = bitcast %struct.PointerRNA* %itemptr66 to i8*, !dbg !10418
  %57 = bitcast %struct.PointerRNA* %ptr67 to i8*, !dbg !10418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false), !dbg !10418
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %itemptr66, i32 0, i32 2, !dbg !10419
  %58 = load i8*, i8** %data, align 8, !dbg !10419
  %tobool68 = icmp ne i8* %58, null, !dbg !10422
  br i1 %tobool68, label %if.then69, label %if.end632, !dbg !10423

if.then69:                                        ; preds = %for.body65
  %59 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop, align 8, !dbg !10424
  %tobool70 = icmp ne %struct.PropertyRNA* %59, null, !dbg !10424
  br i1 %tobool70, label %if.then71, label %if.else72, !dbg !10427

if.then71:                                        ; preds = %if.then69
  %60 = load %struct.PropertyRNA*, %struct.PropertyRNA** %itemprop, align 8, !dbg !10428
  store %struct.PropertyRNA* %60, %struct.PropertyRNA** %iprop, align 8, !dbg !10430
  br label %if.end90, !dbg !10431

if.else72:                                        ; preds = %if.then69
  %61 = load i8*, i8** %propname.addr, align 8, !dbg !10432
  %call73 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %itemptr66, i8* %61), !dbg !10434
  store %struct.PropertyRNA* %call73, %struct.PropertyRNA** %iprop, align 8, !dbg !10435
  %62 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10436
  %tobool74 = icmp ne %struct.PropertyRNA* %62, null, !dbg !10436
  br i1 %tobool74, label %if.then75, label %if.else78, !dbg !10438

if.then75:                                        ; preds = %if.else72
  %63 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10439
  %call76 = call i32 @rna_property_array_length_all_dimensions(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %63), !dbg !10441
  store i32 %call76, i32* %itemlen, align 4, !dbg !10442
  %64 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10443
  %call77 = call i32 @RNA_property_type(%struct.PropertyRNA* %64), !dbg !10444
  store i32 %call77, i32* %itemtype, align 4, !dbg !10445
  br label %if.end79, !dbg !10446

if.else78:                                        ; preds = %if.else72
  %65 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !10447
  %66 = load i8*, i8** %propname.addr, align 8, !dbg !10449
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %65, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.80, i64 0, i64 0), i8* %66), !dbg !10450
  store i32 1, i32* %err, align 4, !dbg !10451
  br label %for.end634, !dbg !10452

if.end79:                                         ; preds = %if.then75
  %67 = load i32, i32* %itemtype, align 4, !dbg !10453
  %cmp80 = icmp eq i32 %67, 0, !dbg !10453
  br i1 %cmp80, label %if.end89, label %lor.lhs.false82, !dbg !10453

lor.lhs.false82:                                  ; preds = %if.end79
  %68 = load i32, i32* %itemtype, align 4, !dbg !10453
  %cmp83 = icmp eq i32 %68, 1, !dbg !10453
  br i1 %cmp83, label %if.end89, label %lor.lhs.false85, !dbg !10453

lor.lhs.false85:                                  ; preds = %lor.lhs.false82
  %69 = load i32, i32* %itemtype, align 4, !dbg !10453
  %cmp86 = icmp eq i32 %69, 2, !dbg !10453
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !10455

if.then88:                                        ; preds = %lor.lhs.false85
  %70 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !10456
  call void @BKE_report(%struct.ReportList* %70, i32 32, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.78, i64 0, i64 0)), !dbg !10458
  store i32 1, i32* %err, align 4, !dbg !10459
  br label %for.end634, !dbg !10460

if.end89:                                         ; preds = %lor.lhs.false85, %lor.lhs.false82, %if.end79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then71
  %71 = load i32, i32* %set.addr, align 4, !dbg !10461
  %tobool91 = icmp ne i32 %71, 0, !dbg !10461
  br i1 %tobool91, label %lor.lhs.false92, label %if.then96, !dbg !10463

lor.lhs.false92:                                  ; preds = %if.end90
  %72 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10464
  %call93 = call zeroext i8 @RNA_property_editable(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %72), !dbg !10465
  %conv94 = zext i8 %call93 to i32, !dbg !10465
  %tobool95 = icmp ne i32 %conv94, 0, !dbg !10465
  br i1 %tobool95, label %if.then96, label %if.end631, !dbg !10466

if.then96:                                        ; preds = %lor.lhs.false92, %if.end90
  %73 = load i32, i32* %a45, align 4, !dbg !10467
  %74 = load i32, i32* %itemlen, align 4, !dbg !10470
  %add = add nsw i32 %73, %74, !dbg !10471
  %len97 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 2, !dbg !10472
  %75 = load i32, i32* %len97, align 4, !dbg !10472
  %cmp98 = icmp sgt i32 %add, %75, !dbg !10473
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !10474

if.then100:                                       ; preds = %if.then96
  %76 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !10475
  %len101 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 2, !dbg !10477
  %77 = load i32, i32* %len101, align 4, !dbg !10477
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %76, i32 32, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.81, i64 0, i64 0), i32 %77), !dbg !10478
  store i32 1, i32* %err, align 4, !dbg !10479
  br label %for.end634, !dbg !10480

if.end102:                                        ; preds = %if.then96
  %78 = load i32, i32* %itemlen, align 4, !dbg !10481
  %cmp103 = icmp eq i32 %78, 0, !dbg !10483
  br i1 %cmp103, label %if.then105, label %if.else284, !dbg !10484

if.then105:                                       ; preds = %if.end102
  %79 = load i32, i32* %set.addr, align 4, !dbg !10485
  %tobool106 = icmp ne i32 %79, 0, !dbg !10485
  br i1 %tobool106, label %if.then107, label %if.else189, !dbg !10488

if.then107:                                       ; preds = %if.then105
  %80 = load i32, i32* %itemtype, align 4, !dbg !10489
  switch i32 %80, label %sw.default187 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb131
    i32 2, label %sw.bb159
  ], !dbg !10491

sw.bb:                                            ; preds = %if.then107
  call void @llvm.dbg.declare(metadata i32* %b, metadata !10492, metadata !DIExpression()), !dbg !10495
  %type108 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10496
  %81 = load i32, i32* %type108, align 8, !dbg !10496
  switch i32 %81, label %sw.default [
    i32 2, label %sw.bb109
    i32 1, label %sw.bb112
    i32 0, label %sw.bb117
    i32 4, label %sw.bb121
    i32 3, label %sw.bb126
  ], !dbg !10496

sw.bb109:                                         ; preds = %sw.bb
  %array110 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10498
  %82 = load i8*, i8** %array110, align 8, !dbg !10498
  %83 = load i32, i32* %a45, align 4, !dbg !10498
  %idxprom = sext i32 %83 to i64, !dbg !10498
  %arrayidx = getelementptr inbounds i8, i8* %82, i64 %idxprom, !dbg !10498
  %84 = load i8, i8* %arrayidx, align 1, !dbg !10498
  %conv111 = zext i8 %84 to i32, !dbg !10498
  store i32 %conv111, i32* %b, align 4, !dbg !10498
  br label %sw.epilog, !dbg !10498

sw.bb112:                                         ; preds = %sw.bb
  %array113 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10498
  %85 = load i8*, i8** %array113, align 8, !dbg !10498
  %86 = bitcast i8* %85 to i16*, !dbg !10498
  %87 = load i32, i32* %a45, align 4, !dbg !10498
  %idxprom114 = sext i32 %87 to i64, !dbg !10498
  %arrayidx115 = getelementptr inbounds i16, i16* %86, i64 %idxprom114, !dbg !10498
  %88 = load i16, i16* %arrayidx115, align 2, !dbg !10498
  %conv116 = sext i16 %88 to i32, !dbg !10498
  store i32 %conv116, i32* %b, align 4, !dbg !10498
  br label %sw.epilog, !dbg !10498

sw.bb117:                                         ; preds = %sw.bb
  %array118 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10498
  %89 = load i8*, i8** %array118, align 8, !dbg !10498
  %90 = bitcast i8* %89 to i32*, !dbg !10498
  %91 = load i32, i32* %a45, align 4, !dbg !10498
  %idxprom119 = sext i32 %91 to i64, !dbg !10498
  %arrayidx120 = getelementptr inbounds i32, i32* %90, i64 %idxprom119, !dbg !10498
  %92 = load i32, i32* %arrayidx120, align 4, !dbg !10498
  store i32 %92, i32* %b, align 4, !dbg !10498
  br label %sw.epilog, !dbg !10498

sw.bb121:                                         ; preds = %sw.bb
  %array122 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10498
  %93 = load i8*, i8** %array122, align 8, !dbg !10498
  %94 = bitcast i8* %93 to float*, !dbg !10498
  %95 = load i32, i32* %a45, align 4, !dbg !10498
  %idxprom123 = sext i32 %95 to i64, !dbg !10498
  %arrayidx124 = getelementptr inbounds float, float* %94, i64 %idxprom123, !dbg !10498
  %96 = load float, float* %arrayidx124, align 4, !dbg !10498
  %conv125 = fptosi float %96 to i32, !dbg !10498
  store i32 %conv125, i32* %b, align 4, !dbg !10498
  br label %sw.epilog, !dbg !10498

sw.bb126:                                         ; preds = %sw.bb
  %array127 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10498
  %97 = load i8*, i8** %array127, align 8, !dbg !10498
  %98 = bitcast i8* %97 to double*, !dbg !10498
  %99 = load i32, i32* %a45, align 4, !dbg !10498
  %idxprom128 = sext i32 %99 to i64, !dbg !10498
  %arrayidx129 = getelementptr inbounds double, double* %98, i64 %idxprom128, !dbg !10498
  %100 = load double, double* %arrayidx129, align 8, !dbg !10498
  %conv130 = fptosi double %100 to i32, !dbg !10498
  store i32 %conv130, i32* %b, align 4, !dbg !10498
  br label %sw.epilog, !dbg !10498

sw.default:                                       ; preds = %sw.bb
  store i32 0, i32* %b, align 4, !dbg !10498
  br label %sw.epilog, !dbg !10498

sw.epilog:                                        ; preds = %sw.default, %sw.bb126, %sw.bb121, %sw.bb117, %sw.bb112, %sw.bb109
  %101 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10500
  %102 = load i32, i32* %b, align 4, !dbg !10501
  call void @RNA_property_boolean_set(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %101, i32 %102), !dbg !10502
  br label %sw.epilog188, !dbg !10503

sw.bb131:                                         ; preds = %if.then107
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10504, metadata !DIExpression()), !dbg !10506
  %type132 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10507
  %103 = load i32, i32* %type132, align 8, !dbg !10507
  switch i32 %103, label %sw.default157 [
    i32 2, label %sw.bb133
    i32 1, label %sw.bb138
    i32 0, label %sw.bb143
    i32 4, label %sw.bb147
    i32 3, label %sw.bb152
  ], !dbg !10507

sw.bb133:                                         ; preds = %sw.bb131
  %array134 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10509
  %104 = load i8*, i8** %array134, align 8, !dbg !10509
  %105 = load i32, i32* %a45, align 4, !dbg !10509
  %idxprom135 = sext i32 %105 to i64, !dbg !10509
  %arrayidx136 = getelementptr inbounds i8, i8* %104, i64 %idxprom135, !dbg !10509
  %106 = load i8, i8* %arrayidx136, align 1, !dbg !10509
  %conv137 = zext i8 %106 to i32, !dbg !10509
  store i32 %conv137, i32* %i, align 4, !dbg !10509
  br label %sw.epilog158, !dbg !10509

sw.bb138:                                         ; preds = %sw.bb131
  %array139 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10509
  %107 = load i8*, i8** %array139, align 8, !dbg !10509
  %108 = bitcast i8* %107 to i16*, !dbg !10509
  %109 = load i32, i32* %a45, align 4, !dbg !10509
  %idxprom140 = sext i32 %109 to i64, !dbg !10509
  %arrayidx141 = getelementptr inbounds i16, i16* %108, i64 %idxprom140, !dbg !10509
  %110 = load i16, i16* %arrayidx141, align 2, !dbg !10509
  %conv142 = sext i16 %110 to i32, !dbg !10509
  store i32 %conv142, i32* %i, align 4, !dbg !10509
  br label %sw.epilog158, !dbg !10509

sw.bb143:                                         ; preds = %sw.bb131
  %array144 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10509
  %111 = load i8*, i8** %array144, align 8, !dbg !10509
  %112 = bitcast i8* %111 to i32*, !dbg !10509
  %113 = load i32, i32* %a45, align 4, !dbg !10509
  %idxprom145 = sext i32 %113 to i64, !dbg !10509
  %arrayidx146 = getelementptr inbounds i32, i32* %112, i64 %idxprom145, !dbg !10509
  %114 = load i32, i32* %arrayidx146, align 4, !dbg !10509
  store i32 %114, i32* %i, align 4, !dbg !10509
  br label %sw.epilog158, !dbg !10509

sw.bb147:                                         ; preds = %sw.bb131
  %array148 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10509
  %115 = load i8*, i8** %array148, align 8, !dbg !10509
  %116 = bitcast i8* %115 to float*, !dbg !10509
  %117 = load i32, i32* %a45, align 4, !dbg !10509
  %idxprom149 = sext i32 %117 to i64, !dbg !10509
  %arrayidx150 = getelementptr inbounds float, float* %116, i64 %idxprom149, !dbg !10509
  %118 = load float, float* %arrayidx150, align 4, !dbg !10509
  %conv151 = fptosi float %118 to i32, !dbg !10509
  store i32 %conv151, i32* %i, align 4, !dbg !10509
  br label %sw.epilog158, !dbg !10509

sw.bb152:                                         ; preds = %sw.bb131
  %array153 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10509
  %119 = load i8*, i8** %array153, align 8, !dbg !10509
  %120 = bitcast i8* %119 to double*, !dbg !10509
  %121 = load i32, i32* %a45, align 4, !dbg !10509
  %idxprom154 = sext i32 %121 to i64, !dbg !10509
  %arrayidx155 = getelementptr inbounds double, double* %120, i64 %idxprom154, !dbg !10509
  %122 = load double, double* %arrayidx155, align 8, !dbg !10509
  %conv156 = fptosi double %122 to i32, !dbg !10509
  store i32 %conv156, i32* %i, align 4, !dbg !10509
  br label %sw.epilog158, !dbg !10509

sw.default157:                                    ; preds = %sw.bb131
  store i32 0, i32* %i, align 4, !dbg !10509
  br label %sw.epilog158, !dbg !10509

sw.epilog158:                                     ; preds = %sw.default157, %sw.bb152, %sw.bb147, %sw.bb143, %sw.bb138, %sw.bb133
  %123 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10511
  %124 = load i32, i32* %i, align 4, !dbg !10512
  call void @RNA_property_int_set(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %123, i32 %124), !dbg !10513
  br label %sw.epilog188, !dbg !10514

sw.bb159:                                         ; preds = %if.then107
  call void @llvm.dbg.declare(metadata float* %f, metadata !10515, metadata !DIExpression()), !dbg !10517
  %type160 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10518
  %125 = load i32, i32* %type160, align 8, !dbg !10518
  switch i32 %125, label %sw.default185 [
    i32 2, label %sw.bb161
    i32 1, label %sw.bb166
    i32 0, label %sw.bb171
    i32 4, label %sw.bb176
    i32 3, label %sw.bb180
  ], !dbg !10518

sw.bb161:                                         ; preds = %sw.bb159
  %array162 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10520
  %126 = load i8*, i8** %array162, align 8, !dbg !10520
  %127 = load i32, i32* %a45, align 4, !dbg !10520
  %idxprom163 = sext i32 %127 to i64, !dbg !10520
  %arrayidx164 = getelementptr inbounds i8, i8* %126, i64 %idxprom163, !dbg !10520
  %128 = load i8, i8* %arrayidx164, align 1, !dbg !10520
  %conv165 = uitofp i8 %128 to float, !dbg !10520
  store float %conv165, float* %f, align 4, !dbg !10520
  br label %sw.epilog186, !dbg !10520

sw.bb166:                                         ; preds = %sw.bb159
  %array167 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10520
  %129 = load i8*, i8** %array167, align 8, !dbg !10520
  %130 = bitcast i8* %129 to i16*, !dbg !10520
  %131 = load i32, i32* %a45, align 4, !dbg !10520
  %idxprom168 = sext i32 %131 to i64, !dbg !10520
  %arrayidx169 = getelementptr inbounds i16, i16* %130, i64 %idxprom168, !dbg !10520
  %132 = load i16, i16* %arrayidx169, align 2, !dbg !10520
  %conv170 = sitofp i16 %132 to float, !dbg !10520
  store float %conv170, float* %f, align 4, !dbg !10520
  br label %sw.epilog186, !dbg !10520

sw.bb171:                                         ; preds = %sw.bb159
  %array172 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10520
  %133 = load i8*, i8** %array172, align 8, !dbg !10520
  %134 = bitcast i8* %133 to i32*, !dbg !10520
  %135 = load i32, i32* %a45, align 4, !dbg !10520
  %idxprom173 = sext i32 %135 to i64, !dbg !10520
  %arrayidx174 = getelementptr inbounds i32, i32* %134, i64 %idxprom173, !dbg !10520
  %136 = load i32, i32* %arrayidx174, align 4, !dbg !10520
  %conv175 = sitofp i32 %136 to float, !dbg !10520
  store float %conv175, float* %f, align 4, !dbg !10520
  br label %sw.epilog186, !dbg !10520

sw.bb176:                                         ; preds = %sw.bb159
  %array177 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10520
  %137 = load i8*, i8** %array177, align 8, !dbg !10520
  %138 = bitcast i8* %137 to float*, !dbg !10520
  %139 = load i32, i32* %a45, align 4, !dbg !10520
  %idxprom178 = sext i32 %139 to i64, !dbg !10520
  %arrayidx179 = getelementptr inbounds float, float* %138, i64 %idxprom178, !dbg !10520
  %140 = load float, float* %arrayidx179, align 4, !dbg !10520
  store float %140, float* %f, align 4, !dbg !10520
  br label %sw.epilog186, !dbg !10520

sw.bb180:                                         ; preds = %sw.bb159
  %array181 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10520
  %141 = load i8*, i8** %array181, align 8, !dbg !10520
  %142 = bitcast i8* %141 to double*, !dbg !10520
  %143 = load i32, i32* %a45, align 4, !dbg !10520
  %idxprom182 = sext i32 %143 to i64, !dbg !10520
  %arrayidx183 = getelementptr inbounds double, double* %142, i64 %idxprom182, !dbg !10520
  %144 = load double, double* %arrayidx183, align 8, !dbg !10520
  %conv184 = fptrunc double %144 to float, !dbg !10520
  store float %conv184, float* %f, align 4, !dbg !10520
  br label %sw.epilog186, !dbg !10520

sw.default185:                                    ; preds = %sw.bb159
  store float 0.000000e+00, float* %f, align 4, !dbg !10520
  br label %sw.epilog186, !dbg !10520

sw.epilog186:                                     ; preds = %sw.default185, %sw.bb180, %sw.bb176, %sw.bb171, %sw.bb166, %sw.bb161
  %145 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10522
  %146 = load float, float* %f, align 4, !dbg !10523
  call void @RNA_property_float_set(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %145, float %146), !dbg !10524
  br label %sw.epilog188, !dbg !10525

sw.default187:                                    ; preds = %if.then107
  br label %sw.epilog188, !dbg !10526

sw.epilog188:                                     ; preds = %sw.default187, %sw.epilog186, %sw.epilog158, %sw.epilog
  br label %if.end282, !dbg !10527

if.else189:                                       ; preds = %if.then105
  %147 = load i32, i32* %itemtype, align 4, !dbg !10528
  switch i32 %147, label %sw.default280 [
    i32 0, label %sw.bb190
    i32 1, label %sw.bb220
    i32 2, label %sw.bb250
  ], !dbg !10530

sw.bb190:                                         ; preds = %if.else189
  call void @llvm.dbg.declare(metadata i32* %b191, metadata !10531, metadata !DIExpression()), !dbg !10534
  %148 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10535
  %call192 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %148), !dbg !10536
  store i32 %call192, i32* %b191, align 4, !dbg !10534
  %type193 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10537
  %149 = load i32, i32* %type193, align 8, !dbg !10537
  switch i32 %149, label %sw.default218 [
    i32 2, label %sw.bb194
    i32 1, label %sw.bb199
    i32 0, label %sw.bb204
    i32 4, label %sw.bb208
    i32 3, label %sw.bb213
  ], !dbg !10537

sw.bb194:                                         ; preds = %sw.bb190
  %150 = load i32, i32* %b191, align 4, !dbg !10539
  %conv195 = trunc i32 %150 to i8, !dbg !10539
  %array196 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10539
  %151 = load i8*, i8** %array196, align 8, !dbg !10539
  %152 = load i32, i32* %a45, align 4, !dbg !10539
  %idxprom197 = sext i32 %152 to i64, !dbg !10539
  %arrayidx198 = getelementptr inbounds i8, i8* %151, i64 %idxprom197, !dbg !10539
  store i8 %conv195, i8* %arrayidx198, align 1, !dbg !10539
  br label %sw.epilog219, !dbg !10539

sw.bb199:                                         ; preds = %sw.bb190
  %153 = load i32, i32* %b191, align 4, !dbg !10539
  %conv200 = trunc i32 %153 to i16, !dbg !10539
  %array201 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10539
  %154 = load i8*, i8** %array201, align 8, !dbg !10539
  %155 = bitcast i8* %154 to i16*, !dbg !10539
  %156 = load i32, i32* %a45, align 4, !dbg !10539
  %idxprom202 = sext i32 %156 to i64, !dbg !10539
  %arrayidx203 = getelementptr inbounds i16, i16* %155, i64 %idxprom202, !dbg !10539
  store i16 %conv200, i16* %arrayidx203, align 2, !dbg !10539
  br label %sw.epilog219, !dbg !10539

sw.bb204:                                         ; preds = %sw.bb190
  %157 = load i32, i32* %b191, align 4, !dbg !10539
  %array205 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10539
  %158 = load i8*, i8** %array205, align 8, !dbg !10539
  %159 = bitcast i8* %158 to i32*, !dbg !10539
  %160 = load i32, i32* %a45, align 4, !dbg !10539
  %idxprom206 = sext i32 %160 to i64, !dbg !10539
  %arrayidx207 = getelementptr inbounds i32, i32* %159, i64 %idxprom206, !dbg !10539
  store i32 %157, i32* %arrayidx207, align 4, !dbg !10539
  br label %sw.epilog219, !dbg !10539

sw.bb208:                                         ; preds = %sw.bb190
  %161 = load i32, i32* %b191, align 4, !dbg !10539
  %conv209 = sitofp i32 %161 to float, !dbg !10539
  %array210 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10539
  %162 = load i8*, i8** %array210, align 8, !dbg !10539
  %163 = bitcast i8* %162 to float*, !dbg !10539
  %164 = load i32, i32* %a45, align 4, !dbg !10539
  %idxprom211 = sext i32 %164 to i64, !dbg !10539
  %arrayidx212 = getelementptr inbounds float, float* %163, i64 %idxprom211, !dbg !10539
  store float %conv209, float* %arrayidx212, align 4, !dbg !10539
  br label %sw.epilog219, !dbg !10539

sw.bb213:                                         ; preds = %sw.bb190
  %165 = load i32, i32* %b191, align 4, !dbg !10539
  %conv214 = sitofp i32 %165 to double, !dbg !10539
  %array215 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10539
  %166 = load i8*, i8** %array215, align 8, !dbg !10539
  %167 = bitcast i8* %166 to double*, !dbg !10539
  %168 = load i32, i32* %a45, align 4, !dbg !10539
  %idxprom216 = sext i32 %168 to i64, !dbg !10539
  %arrayidx217 = getelementptr inbounds double, double* %167, i64 %idxprom216, !dbg !10539
  store double %conv214, double* %arrayidx217, align 8, !dbg !10539
  br label %sw.epilog219, !dbg !10539

sw.default218:                                    ; preds = %sw.bb190
  br label %sw.epilog219, !dbg !10539

sw.epilog219:                                     ; preds = %sw.default218, %sw.bb213, %sw.bb208, %sw.bb204, %sw.bb199, %sw.bb194
  br label %sw.epilog281, !dbg !10541

sw.bb220:                                         ; preds = %if.else189
  call void @llvm.dbg.declare(metadata i32* %i221, metadata !10542, metadata !DIExpression()), !dbg !10544
  %169 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10545
  %call222 = call i32 @RNA_property_int_get(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %169), !dbg !10546
  store i32 %call222, i32* %i221, align 4, !dbg !10544
  %type223 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10547
  %170 = load i32, i32* %type223, align 8, !dbg !10547
  switch i32 %170, label %sw.default248 [
    i32 2, label %sw.bb224
    i32 1, label %sw.bb229
    i32 0, label %sw.bb234
    i32 4, label %sw.bb238
    i32 3, label %sw.bb243
  ], !dbg !10547

sw.bb224:                                         ; preds = %sw.bb220
  %171 = load i32, i32* %i221, align 4, !dbg !10549
  %conv225 = trunc i32 %171 to i8, !dbg !10549
  %array226 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10549
  %172 = load i8*, i8** %array226, align 8, !dbg !10549
  %173 = load i32, i32* %a45, align 4, !dbg !10549
  %idxprom227 = sext i32 %173 to i64, !dbg !10549
  %arrayidx228 = getelementptr inbounds i8, i8* %172, i64 %idxprom227, !dbg !10549
  store i8 %conv225, i8* %arrayidx228, align 1, !dbg !10549
  br label %sw.epilog249, !dbg !10549

sw.bb229:                                         ; preds = %sw.bb220
  %174 = load i32, i32* %i221, align 4, !dbg !10549
  %conv230 = trunc i32 %174 to i16, !dbg !10549
  %array231 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10549
  %175 = load i8*, i8** %array231, align 8, !dbg !10549
  %176 = bitcast i8* %175 to i16*, !dbg !10549
  %177 = load i32, i32* %a45, align 4, !dbg !10549
  %idxprom232 = sext i32 %177 to i64, !dbg !10549
  %arrayidx233 = getelementptr inbounds i16, i16* %176, i64 %idxprom232, !dbg !10549
  store i16 %conv230, i16* %arrayidx233, align 2, !dbg !10549
  br label %sw.epilog249, !dbg !10549

sw.bb234:                                         ; preds = %sw.bb220
  %178 = load i32, i32* %i221, align 4, !dbg !10549
  %array235 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10549
  %179 = load i8*, i8** %array235, align 8, !dbg !10549
  %180 = bitcast i8* %179 to i32*, !dbg !10549
  %181 = load i32, i32* %a45, align 4, !dbg !10549
  %idxprom236 = sext i32 %181 to i64, !dbg !10549
  %arrayidx237 = getelementptr inbounds i32, i32* %180, i64 %idxprom236, !dbg !10549
  store i32 %178, i32* %arrayidx237, align 4, !dbg !10549
  br label %sw.epilog249, !dbg !10549

sw.bb238:                                         ; preds = %sw.bb220
  %182 = load i32, i32* %i221, align 4, !dbg !10549
  %conv239 = sitofp i32 %182 to float, !dbg !10549
  %array240 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10549
  %183 = load i8*, i8** %array240, align 8, !dbg !10549
  %184 = bitcast i8* %183 to float*, !dbg !10549
  %185 = load i32, i32* %a45, align 4, !dbg !10549
  %idxprom241 = sext i32 %185 to i64, !dbg !10549
  %arrayidx242 = getelementptr inbounds float, float* %184, i64 %idxprom241, !dbg !10549
  store float %conv239, float* %arrayidx242, align 4, !dbg !10549
  br label %sw.epilog249, !dbg !10549

sw.bb243:                                         ; preds = %sw.bb220
  %186 = load i32, i32* %i221, align 4, !dbg !10549
  %conv244 = sitofp i32 %186 to double, !dbg !10549
  %array245 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10549
  %187 = load i8*, i8** %array245, align 8, !dbg !10549
  %188 = bitcast i8* %187 to double*, !dbg !10549
  %189 = load i32, i32* %a45, align 4, !dbg !10549
  %idxprom246 = sext i32 %189 to i64, !dbg !10549
  %arrayidx247 = getelementptr inbounds double, double* %188, i64 %idxprom246, !dbg !10549
  store double %conv244, double* %arrayidx247, align 8, !dbg !10549
  br label %sw.epilog249, !dbg !10549

sw.default248:                                    ; preds = %sw.bb220
  br label %sw.epilog249, !dbg !10549

sw.epilog249:                                     ; preds = %sw.default248, %sw.bb243, %sw.bb238, %sw.bb234, %sw.bb229, %sw.bb224
  br label %sw.epilog281, !dbg !10551

sw.bb250:                                         ; preds = %if.else189
  call void @llvm.dbg.declare(metadata float* %f251, metadata !10552, metadata !DIExpression()), !dbg !10554
  %190 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10555
  %call252 = call float @RNA_property_float_get(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %190), !dbg !10556
  store float %call252, float* %f251, align 4, !dbg !10554
  %type253 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10557
  %191 = load i32, i32* %type253, align 8, !dbg !10557
  switch i32 %191, label %sw.default278 [
    i32 2, label %sw.bb254
    i32 1, label %sw.bb259
    i32 0, label %sw.bb264
    i32 4, label %sw.bb269
    i32 3, label %sw.bb273
  ], !dbg !10557

sw.bb254:                                         ; preds = %sw.bb250
  %192 = load float, float* %f251, align 4, !dbg !10559
  %conv255 = fptoui float %192 to i8, !dbg !10559
  %array256 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10559
  %193 = load i8*, i8** %array256, align 8, !dbg !10559
  %194 = load i32, i32* %a45, align 4, !dbg !10559
  %idxprom257 = sext i32 %194 to i64, !dbg !10559
  %arrayidx258 = getelementptr inbounds i8, i8* %193, i64 %idxprom257, !dbg !10559
  store i8 %conv255, i8* %arrayidx258, align 1, !dbg !10559
  br label %sw.epilog279, !dbg !10559

sw.bb259:                                         ; preds = %sw.bb250
  %195 = load float, float* %f251, align 4, !dbg !10559
  %conv260 = fptosi float %195 to i16, !dbg !10559
  %array261 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10559
  %196 = load i8*, i8** %array261, align 8, !dbg !10559
  %197 = bitcast i8* %196 to i16*, !dbg !10559
  %198 = load i32, i32* %a45, align 4, !dbg !10559
  %idxprom262 = sext i32 %198 to i64, !dbg !10559
  %arrayidx263 = getelementptr inbounds i16, i16* %197, i64 %idxprom262, !dbg !10559
  store i16 %conv260, i16* %arrayidx263, align 2, !dbg !10559
  br label %sw.epilog279, !dbg !10559

sw.bb264:                                         ; preds = %sw.bb250
  %199 = load float, float* %f251, align 4, !dbg !10559
  %conv265 = fptosi float %199 to i32, !dbg !10559
  %array266 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10559
  %200 = load i8*, i8** %array266, align 8, !dbg !10559
  %201 = bitcast i8* %200 to i32*, !dbg !10559
  %202 = load i32, i32* %a45, align 4, !dbg !10559
  %idxprom267 = sext i32 %202 to i64, !dbg !10559
  %arrayidx268 = getelementptr inbounds i32, i32* %201, i64 %idxprom267, !dbg !10559
  store i32 %conv265, i32* %arrayidx268, align 4, !dbg !10559
  br label %sw.epilog279, !dbg !10559

sw.bb269:                                         ; preds = %sw.bb250
  %203 = load float, float* %f251, align 4, !dbg !10559
  %array270 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10559
  %204 = load i8*, i8** %array270, align 8, !dbg !10559
  %205 = bitcast i8* %204 to float*, !dbg !10559
  %206 = load i32, i32* %a45, align 4, !dbg !10559
  %idxprom271 = sext i32 %206 to i64, !dbg !10559
  %arrayidx272 = getelementptr inbounds float, float* %205, i64 %idxprom271, !dbg !10559
  store float %203, float* %arrayidx272, align 4, !dbg !10559
  br label %sw.epilog279, !dbg !10559

sw.bb273:                                         ; preds = %sw.bb250
  %207 = load float, float* %f251, align 4, !dbg !10559
  %conv274 = fpext float %207 to double, !dbg !10559
  %array275 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10559
  %208 = load i8*, i8** %array275, align 8, !dbg !10559
  %209 = bitcast i8* %208 to double*, !dbg !10559
  %210 = load i32, i32* %a45, align 4, !dbg !10559
  %idxprom276 = sext i32 %210 to i64, !dbg !10559
  %arrayidx277 = getelementptr inbounds double, double* %209, i64 %idxprom276, !dbg !10559
  store double %conv274, double* %arrayidx277, align 8, !dbg !10559
  br label %sw.epilog279, !dbg !10559

sw.default278:                                    ; preds = %sw.bb250
  br label %sw.epilog279, !dbg !10559

sw.epilog279:                                     ; preds = %sw.default278, %sw.bb273, %sw.bb269, %sw.bb264, %sw.bb259, %sw.bb254
  br label %sw.epilog281, !dbg !10561

sw.default280:                                    ; preds = %if.else189
  br label %sw.epilog281, !dbg !10562

sw.epilog281:                                     ; preds = %sw.default280, %sw.epilog279, %sw.epilog249, %sw.epilog219
  br label %if.end282

if.end282:                                        ; preds = %sw.epilog281, %sw.epilog188
  %211 = load i32, i32* %a45, align 4, !dbg !10563
  %inc283 = add nsw i32 %211, 1, !dbg !10563
  store i32 %inc283, i32* %a45, align 4, !dbg !10563
  br label %if.end630, !dbg !10564

if.else284:                                       ; preds = %if.end102
  %212 = load i32, i32* %needconv, align 4, !dbg !10565
  %cmp285 = icmp eq i32 %212, 1, !dbg !10567
  br i1 %cmp285, label %if.then287, label %if.else590, !dbg !10568

if.then287:                                       ; preds = %if.else284
  %213 = load i8*, i8** %tmparray, align 8, !dbg !10569
  %tobool288 = icmp ne i8* %213, null, !dbg !10569
  br i1 %tobool288, label %land.lhs.true289, label %if.end293, !dbg !10572

land.lhs.true289:                                 ; preds = %if.then287
  %214 = load i32, i32* %tmplen, align 4, !dbg !10573
  %215 = load i32, i32* %itemlen, align 4, !dbg !10574
  %cmp290 = icmp ne i32 %214, %215, !dbg !10575
  br i1 %cmp290, label %if.then292, label %if.end293, !dbg !10576

if.then292:                                       ; preds = %land.lhs.true289
  %216 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10577
  %217 = load i8*, i8** %tmparray, align 8, !dbg !10579
  call void %216(i8* %217), !dbg !10577
  store i8* null, i8** %tmparray, align 8, !dbg !10580
  br label %if.end293, !dbg !10581

if.end293:                                        ; preds = %if.then292, %land.lhs.true289, %if.then287
  %218 = load i8*, i8** %tmparray, align 8, !dbg !10582
  %tobool294 = icmp ne i8* %218, null, !dbg !10582
  br i1 %tobool294, label %if.end299, label %if.then295, !dbg !10584

if.then295:                                       ; preds = %if.end293
  %219 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10585
  %220 = load i32, i32* %itemlen, align 4, !dbg !10587
  %conv296 = sext i32 %220 to i64, !dbg !10587
  %mul297 = mul i64 4, %conv296, !dbg !10588
  %call298 = call i8* %219(i64 %mul297, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i64 0, i64 0)), !dbg !10585
  store i8* %call298, i8** %tmparray, align 8, !dbg !10589
  %221 = load i32, i32* %itemlen, align 4, !dbg !10590
  store i32 %221, i32* %tmplen, align 4, !dbg !10591
  br label %if.end299, !dbg !10592

if.end299:                                        ; preds = %if.then295, %if.end293
  %222 = load i32, i32* %set.addr, align 4, !dbg !10593
  %tobool300 = icmp ne i32 %222, 0, !dbg !10593
  br i1 %tobool300, label %if.then301, label %if.else448, !dbg !10595

if.then301:                                       ; preds = %if.end299
  %223 = load i32, i32* %itemtype, align 4, !dbg !10596
  switch i32 %223, label %sw.default446 [
    i32 0, label %sw.bb302
    i32 1, label %sw.bb350
    i32 2, label %sw.bb398
  ], !dbg !10598

sw.bb302:                                         ; preds = %if.then301
  store i32 0, i32* %j, align 4, !dbg !10599
  br label %for.cond303, !dbg !10603

for.cond303:                                      ; preds = %for.inc346, %sw.bb302
  %224 = load i32, i32* %j, align 4, !dbg !10604
  %225 = load i32, i32* %itemlen, align 4, !dbg !10606
  %cmp304 = icmp slt i32 %224, %225, !dbg !10607
  br i1 %cmp304, label %for.body306, label %for.end349, !dbg !10608

for.body306:                                      ; preds = %for.cond303
  %type307 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10609
  %226 = load i32, i32* %type307, align 8, !dbg !10609
  switch i32 %226, label %sw.default342 [
    i32 2, label %sw.bb308
    i32 1, label %sw.bb315
    i32 0, label %sw.bb322
    i32 4, label %sw.bb328
    i32 3, label %sw.bb335
  ], !dbg !10609

sw.bb308:                                         ; preds = %for.body306
  %array309 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10611
  %227 = load i8*, i8** %array309, align 8, !dbg !10611
  %228 = load i32, i32* %a45, align 4, !dbg !10611
  %idxprom310 = sext i32 %228 to i64, !dbg !10611
  %arrayidx311 = getelementptr inbounds i8, i8* %227, i64 %idxprom310, !dbg !10611
  %229 = load i8, i8* %arrayidx311, align 1, !dbg !10611
  %conv312 = zext i8 %229 to i32, !dbg !10611
  %230 = load i8*, i8** %tmparray, align 8, !dbg !10611
  %231 = bitcast i8* %230 to i32*, !dbg !10611
  %232 = load i32, i32* %j, align 4, !dbg !10611
  %idxprom313 = sext i32 %232 to i64, !dbg !10611
  %arrayidx314 = getelementptr inbounds i32, i32* %231, i64 %idxprom313, !dbg !10611
  store i32 %conv312, i32* %arrayidx314, align 4, !dbg !10611
  br label %sw.epilog345, !dbg !10611

sw.bb315:                                         ; preds = %for.body306
  %array316 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10611
  %233 = load i8*, i8** %array316, align 8, !dbg !10611
  %234 = bitcast i8* %233 to i16*, !dbg !10611
  %235 = load i32, i32* %a45, align 4, !dbg !10611
  %idxprom317 = sext i32 %235 to i64, !dbg !10611
  %arrayidx318 = getelementptr inbounds i16, i16* %234, i64 %idxprom317, !dbg !10611
  %236 = load i16, i16* %arrayidx318, align 2, !dbg !10611
  %conv319 = sext i16 %236 to i32, !dbg !10611
  %237 = load i8*, i8** %tmparray, align 8, !dbg !10611
  %238 = bitcast i8* %237 to i32*, !dbg !10611
  %239 = load i32, i32* %j, align 4, !dbg !10611
  %idxprom320 = sext i32 %239 to i64, !dbg !10611
  %arrayidx321 = getelementptr inbounds i32, i32* %238, i64 %idxprom320, !dbg !10611
  store i32 %conv319, i32* %arrayidx321, align 4, !dbg !10611
  br label %sw.epilog345, !dbg !10611

sw.bb322:                                         ; preds = %for.body306
  %array323 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10611
  %240 = load i8*, i8** %array323, align 8, !dbg !10611
  %241 = bitcast i8* %240 to i32*, !dbg !10611
  %242 = load i32, i32* %a45, align 4, !dbg !10611
  %idxprom324 = sext i32 %242 to i64, !dbg !10611
  %arrayidx325 = getelementptr inbounds i32, i32* %241, i64 %idxprom324, !dbg !10611
  %243 = load i32, i32* %arrayidx325, align 4, !dbg !10611
  %244 = load i8*, i8** %tmparray, align 8, !dbg !10611
  %245 = bitcast i8* %244 to i32*, !dbg !10611
  %246 = load i32, i32* %j, align 4, !dbg !10611
  %idxprom326 = sext i32 %246 to i64, !dbg !10611
  %arrayidx327 = getelementptr inbounds i32, i32* %245, i64 %idxprom326, !dbg !10611
  store i32 %243, i32* %arrayidx327, align 4, !dbg !10611
  br label %sw.epilog345, !dbg !10611

sw.bb328:                                         ; preds = %for.body306
  %array329 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10611
  %247 = load i8*, i8** %array329, align 8, !dbg !10611
  %248 = bitcast i8* %247 to float*, !dbg !10611
  %249 = load i32, i32* %a45, align 4, !dbg !10611
  %idxprom330 = sext i32 %249 to i64, !dbg !10611
  %arrayidx331 = getelementptr inbounds float, float* %248, i64 %idxprom330, !dbg !10611
  %250 = load float, float* %arrayidx331, align 4, !dbg !10611
  %conv332 = fptosi float %250 to i32, !dbg !10611
  %251 = load i8*, i8** %tmparray, align 8, !dbg !10611
  %252 = bitcast i8* %251 to i32*, !dbg !10611
  %253 = load i32, i32* %j, align 4, !dbg !10611
  %idxprom333 = sext i32 %253 to i64, !dbg !10611
  %arrayidx334 = getelementptr inbounds i32, i32* %252, i64 %idxprom333, !dbg !10611
  store i32 %conv332, i32* %arrayidx334, align 4, !dbg !10611
  br label %sw.epilog345, !dbg !10611

sw.bb335:                                         ; preds = %for.body306
  %array336 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10611
  %254 = load i8*, i8** %array336, align 8, !dbg !10611
  %255 = bitcast i8* %254 to double*, !dbg !10611
  %256 = load i32, i32* %a45, align 4, !dbg !10611
  %idxprom337 = sext i32 %256 to i64, !dbg !10611
  %arrayidx338 = getelementptr inbounds double, double* %255, i64 %idxprom337, !dbg !10611
  %257 = load double, double* %arrayidx338, align 8, !dbg !10611
  %conv339 = fptosi double %257 to i32, !dbg !10611
  %258 = load i8*, i8** %tmparray, align 8, !dbg !10611
  %259 = bitcast i8* %258 to i32*, !dbg !10611
  %260 = load i32, i32* %j, align 4, !dbg !10611
  %idxprom340 = sext i32 %260 to i64, !dbg !10611
  %arrayidx341 = getelementptr inbounds i32, i32* %259, i64 %idxprom340, !dbg !10611
  store i32 %conv339, i32* %arrayidx341, align 4, !dbg !10611
  br label %sw.epilog345, !dbg !10611

sw.default342:                                    ; preds = %for.body306
  %261 = load i8*, i8** %tmparray, align 8, !dbg !10611
  %262 = bitcast i8* %261 to i32*, !dbg !10611
  %263 = load i32, i32* %j, align 4, !dbg !10611
  %idxprom343 = sext i32 %263 to i64, !dbg !10611
  %arrayidx344 = getelementptr inbounds i32, i32* %262, i64 %idxprom343, !dbg !10611
  store i32 0, i32* %arrayidx344, align 4, !dbg !10611
  br label %sw.epilog345, !dbg !10611

sw.epilog345:                                     ; preds = %sw.default342, %sw.bb335, %sw.bb328, %sw.bb322, %sw.bb315, %sw.bb308
  br label %for.inc346, !dbg !10609

for.inc346:                                       ; preds = %sw.epilog345
  %264 = load i32, i32* %j, align 4, !dbg !10613
  %inc347 = add nsw i32 %264, 1, !dbg !10613
  store i32 %inc347, i32* %j, align 4, !dbg !10613
  %265 = load i32, i32* %a45, align 4, !dbg !10614
  %inc348 = add nsw i32 %265, 1, !dbg !10614
  store i32 %inc348, i32* %a45, align 4, !dbg !10614
  br label %for.cond303, !dbg !10615, !llvm.loop !10616

for.end349:                                       ; preds = %for.cond303
  %266 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10618
  %267 = load i8*, i8** %tmparray, align 8, !dbg !10619
  %268 = bitcast i8* %267 to i32*, !dbg !10619
  call void @RNA_property_boolean_set_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %266, i32* %268), !dbg !10620
  br label %sw.epilog447, !dbg !10621

sw.bb350:                                         ; preds = %if.then301
  store i32 0, i32* %j, align 4, !dbg !10622
  br label %for.cond351, !dbg !10625

for.cond351:                                      ; preds = %for.inc394, %sw.bb350
  %269 = load i32, i32* %j, align 4, !dbg !10626
  %270 = load i32, i32* %itemlen, align 4, !dbg !10628
  %cmp352 = icmp slt i32 %269, %270, !dbg !10629
  br i1 %cmp352, label %for.body354, label %for.end397, !dbg !10630

for.body354:                                      ; preds = %for.cond351
  %type355 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10631
  %271 = load i32, i32* %type355, align 8, !dbg !10631
  switch i32 %271, label %sw.default390 [
    i32 2, label %sw.bb356
    i32 1, label %sw.bb363
    i32 0, label %sw.bb370
    i32 4, label %sw.bb376
    i32 3, label %sw.bb383
  ], !dbg !10631

sw.bb356:                                         ; preds = %for.body354
  %array357 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10633
  %272 = load i8*, i8** %array357, align 8, !dbg !10633
  %273 = load i32, i32* %a45, align 4, !dbg !10633
  %idxprom358 = sext i32 %273 to i64, !dbg !10633
  %arrayidx359 = getelementptr inbounds i8, i8* %272, i64 %idxprom358, !dbg !10633
  %274 = load i8, i8* %arrayidx359, align 1, !dbg !10633
  %conv360 = zext i8 %274 to i32, !dbg !10633
  %275 = load i8*, i8** %tmparray, align 8, !dbg !10633
  %276 = bitcast i8* %275 to i32*, !dbg !10633
  %277 = load i32, i32* %j, align 4, !dbg !10633
  %idxprom361 = sext i32 %277 to i64, !dbg !10633
  %arrayidx362 = getelementptr inbounds i32, i32* %276, i64 %idxprom361, !dbg !10633
  store i32 %conv360, i32* %arrayidx362, align 4, !dbg !10633
  br label %sw.epilog393, !dbg !10633

sw.bb363:                                         ; preds = %for.body354
  %array364 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10633
  %278 = load i8*, i8** %array364, align 8, !dbg !10633
  %279 = bitcast i8* %278 to i16*, !dbg !10633
  %280 = load i32, i32* %a45, align 4, !dbg !10633
  %idxprom365 = sext i32 %280 to i64, !dbg !10633
  %arrayidx366 = getelementptr inbounds i16, i16* %279, i64 %idxprom365, !dbg !10633
  %281 = load i16, i16* %arrayidx366, align 2, !dbg !10633
  %conv367 = sext i16 %281 to i32, !dbg !10633
  %282 = load i8*, i8** %tmparray, align 8, !dbg !10633
  %283 = bitcast i8* %282 to i32*, !dbg !10633
  %284 = load i32, i32* %j, align 4, !dbg !10633
  %idxprom368 = sext i32 %284 to i64, !dbg !10633
  %arrayidx369 = getelementptr inbounds i32, i32* %283, i64 %idxprom368, !dbg !10633
  store i32 %conv367, i32* %arrayidx369, align 4, !dbg !10633
  br label %sw.epilog393, !dbg !10633

sw.bb370:                                         ; preds = %for.body354
  %array371 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10633
  %285 = load i8*, i8** %array371, align 8, !dbg !10633
  %286 = bitcast i8* %285 to i32*, !dbg !10633
  %287 = load i32, i32* %a45, align 4, !dbg !10633
  %idxprom372 = sext i32 %287 to i64, !dbg !10633
  %arrayidx373 = getelementptr inbounds i32, i32* %286, i64 %idxprom372, !dbg !10633
  %288 = load i32, i32* %arrayidx373, align 4, !dbg !10633
  %289 = load i8*, i8** %tmparray, align 8, !dbg !10633
  %290 = bitcast i8* %289 to i32*, !dbg !10633
  %291 = load i32, i32* %j, align 4, !dbg !10633
  %idxprom374 = sext i32 %291 to i64, !dbg !10633
  %arrayidx375 = getelementptr inbounds i32, i32* %290, i64 %idxprom374, !dbg !10633
  store i32 %288, i32* %arrayidx375, align 4, !dbg !10633
  br label %sw.epilog393, !dbg !10633

sw.bb376:                                         ; preds = %for.body354
  %array377 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10633
  %292 = load i8*, i8** %array377, align 8, !dbg !10633
  %293 = bitcast i8* %292 to float*, !dbg !10633
  %294 = load i32, i32* %a45, align 4, !dbg !10633
  %idxprom378 = sext i32 %294 to i64, !dbg !10633
  %arrayidx379 = getelementptr inbounds float, float* %293, i64 %idxprom378, !dbg !10633
  %295 = load float, float* %arrayidx379, align 4, !dbg !10633
  %conv380 = fptosi float %295 to i32, !dbg !10633
  %296 = load i8*, i8** %tmparray, align 8, !dbg !10633
  %297 = bitcast i8* %296 to i32*, !dbg !10633
  %298 = load i32, i32* %j, align 4, !dbg !10633
  %idxprom381 = sext i32 %298 to i64, !dbg !10633
  %arrayidx382 = getelementptr inbounds i32, i32* %297, i64 %idxprom381, !dbg !10633
  store i32 %conv380, i32* %arrayidx382, align 4, !dbg !10633
  br label %sw.epilog393, !dbg !10633

sw.bb383:                                         ; preds = %for.body354
  %array384 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10633
  %299 = load i8*, i8** %array384, align 8, !dbg !10633
  %300 = bitcast i8* %299 to double*, !dbg !10633
  %301 = load i32, i32* %a45, align 4, !dbg !10633
  %idxprom385 = sext i32 %301 to i64, !dbg !10633
  %arrayidx386 = getelementptr inbounds double, double* %300, i64 %idxprom385, !dbg !10633
  %302 = load double, double* %arrayidx386, align 8, !dbg !10633
  %conv387 = fptosi double %302 to i32, !dbg !10633
  %303 = load i8*, i8** %tmparray, align 8, !dbg !10633
  %304 = bitcast i8* %303 to i32*, !dbg !10633
  %305 = load i32, i32* %j, align 4, !dbg !10633
  %idxprom388 = sext i32 %305 to i64, !dbg !10633
  %arrayidx389 = getelementptr inbounds i32, i32* %304, i64 %idxprom388, !dbg !10633
  store i32 %conv387, i32* %arrayidx389, align 4, !dbg !10633
  br label %sw.epilog393, !dbg !10633

sw.default390:                                    ; preds = %for.body354
  %306 = load i8*, i8** %tmparray, align 8, !dbg !10633
  %307 = bitcast i8* %306 to i32*, !dbg !10633
  %308 = load i32, i32* %j, align 4, !dbg !10633
  %idxprom391 = sext i32 %308 to i64, !dbg !10633
  %arrayidx392 = getelementptr inbounds i32, i32* %307, i64 %idxprom391, !dbg !10633
  store i32 0, i32* %arrayidx392, align 4, !dbg !10633
  br label %sw.epilog393, !dbg !10633

sw.epilog393:                                     ; preds = %sw.default390, %sw.bb383, %sw.bb376, %sw.bb370, %sw.bb363, %sw.bb356
  br label %for.inc394, !dbg !10631

for.inc394:                                       ; preds = %sw.epilog393
  %309 = load i32, i32* %j, align 4, !dbg !10635
  %inc395 = add nsw i32 %309, 1, !dbg !10635
  store i32 %inc395, i32* %j, align 4, !dbg !10635
  %310 = load i32, i32* %a45, align 4, !dbg !10636
  %inc396 = add nsw i32 %310, 1, !dbg !10636
  store i32 %inc396, i32* %a45, align 4, !dbg !10636
  br label %for.cond351, !dbg !10637, !llvm.loop !10638

for.end397:                                       ; preds = %for.cond351
  %311 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10640
  %312 = load i8*, i8** %tmparray, align 8, !dbg !10641
  %313 = bitcast i8* %312 to i32*, !dbg !10641
  call void @RNA_property_int_set_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %311, i32* %313), !dbg !10642
  br label %sw.epilog447, !dbg !10643

sw.bb398:                                         ; preds = %if.then301
  store i32 0, i32* %j, align 4, !dbg !10644
  br label %for.cond399, !dbg !10647

for.cond399:                                      ; preds = %for.inc442, %sw.bb398
  %314 = load i32, i32* %j, align 4, !dbg !10648
  %315 = load i32, i32* %itemlen, align 4, !dbg !10650
  %cmp400 = icmp slt i32 %314, %315, !dbg !10651
  br i1 %cmp400, label %for.body402, label %for.end445, !dbg !10652

for.body402:                                      ; preds = %for.cond399
  %type403 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10653
  %316 = load i32, i32* %type403, align 8, !dbg !10653
  switch i32 %316, label %sw.default438 [
    i32 2, label %sw.bb404
    i32 1, label %sw.bb411
    i32 0, label %sw.bb418
    i32 4, label %sw.bb425
    i32 3, label %sw.bb431
  ], !dbg !10653

sw.bb404:                                         ; preds = %for.body402
  %array405 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10655
  %317 = load i8*, i8** %array405, align 8, !dbg !10655
  %318 = load i32, i32* %a45, align 4, !dbg !10655
  %idxprom406 = sext i32 %318 to i64, !dbg !10655
  %arrayidx407 = getelementptr inbounds i8, i8* %317, i64 %idxprom406, !dbg !10655
  %319 = load i8, i8* %arrayidx407, align 1, !dbg !10655
  %conv408 = uitofp i8 %319 to float, !dbg !10655
  %320 = load i8*, i8** %tmparray, align 8, !dbg !10655
  %321 = bitcast i8* %320 to float*, !dbg !10655
  %322 = load i32, i32* %j, align 4, !dbg !10655
  %idxprom409 = sext i32 %322 to i64, !dbg !10655
  %arrayidx410 = getelementptr inbounds float, float* %321, i64 %idxprom409, !dbg !10655
  store float %conv408, float* %arrayidx410, align 4, !dbg !10655
  br label %sw.epilog441, !dbg !10655

sw.bb411:                                         ; preds = %for.body402
  %array412 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10655
  %323 = load i8*, i8** %array412, align 8, !dbg !10655
  %324 = bitcast i8* %323 to i16*, !dbg !10655
  %325 = load i32, i32* %a45, align 4, !dbg !10655
  %idxprom413 = sext i32 %325 to i64, !dbg !10655
  %arrayidx414 = getelementptr inbounds i16, i16* %324, i64 %idxprom413, !dbg !10655
  %326 = load i16, i16* %arrayidx414, align 2, !dbg !10655
  %conv415 = sitofp i16 %326 to float, !dbg !10655
  %327 = load i8*, i8** %tmparray, align 8, !dbg !10655
  %328 = bitcast i8* %327 to float*, !dbg !10655
  %329 = load i32, i32* %j, align 4, !dbg !10655
  %idxprom416 = sext i32 %329 to i64, !dbg !10655
  %arrayidx417 = getelementptr inbounds float, float* %328, i64 %idxprom416, !dbg !10655
  store float %conv415, float* %arrayidx417, align 4, !dbg !10655
  br label %sw.epilog441, !dbg !10655

sw.bb418:                                         ; preds = %for.body402
  %array419 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10655
  %330 = load i8*, i8** %array419, align 8, !dbg !10655
  %331 = bitcast i8* %330 to i32*, !dbg !10655
  %332 = load i32, i32* %a45, align 4, !dbg !10655
  %idxprom420 = sext i32 %332 to i64, !dbg !10655
  %arrayidx421 = getelementptr inbounds i32, i32* %331, i64 %idxprom420, !dbg !10655
  %333 = load i32, i32* %arrayidx421, align 4, !dbg !10655
  %conv422 = sitofp i32 %333 to float, !dbg !10655
  %334 = load i8*, i8** %tmparray, align 8, !dbg !10655
  %335 = bitcast i8* %334 to float*, !dbg !10655
  %336 = load i32, i32* %j, align 4, !dbg !10655
  %idxprom423 = sext i32 %336 to i64, !dbg !10655
  %arrayidx424 = getelementptr inbounds float, float* %335, i64 %idxprom423, !dbg !10655
  store float %conv422, float* %arrayidx424, align 4, !dbg !10655
  br label %sw.epilog441, !dbg !10655

sw.bb425:                                         ; preds = %for.body402
  %array426 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10655
  %337 = load i8*, i8** %array426, align 8, !dbg !10655
  %338 = bitcast i8* %337 to float*, !dbg !10655
  %339 = load i32, i32* %a45, align 4, !dbg !10655
  %idxprom427 = sext i32 %339 to i64, !dbg !10655
  %arrayidx428 = getelementptr inbounds float, float* %338, i64 %idxprom427, !dbg !10655
  %340 = load float, float* %arrayidx428, align 4, !dbg !10655
  %341 = load i8*, i8** %tmparray, align 8, !dbg !10655
  %342 = bitcast i8* %341 to float*, !dbg !10655
  %343 = load i32, i32* %j, align 4, !dbg !10655
  %idxprom429 = sext i32 %343 to i64, !dbg !10655
  %arrayidx430 = getelementptr inbounds float, float* %342, i64 %idxprom429, !dbg !10655
  store float %340, float* %arrayidx430, align 4, !dbg !10655
  br label %sw.epilog441, !dbg !10655

sw.bb431:                                         ; preds = %for.body402
  %array432 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10655
  %344 = load i8*, i8** %array432, align 8, !dbg !10655
  %345 = bitcast i8* %344 to double*, !dbg !10655
  %346 = load i32, i32* %a45, align 4, !dbg !10655
  %idxprom433 = sext i32 %346 to i64, !dbg !10655
  %arrayidx434 = getelementptr inbounds double, double* %345, i64 %idxprom433, !dbg !10655
  %347 = load double, double* %arrayidx434, align 8, !dbg !10655
  %conv435 = fptrunc double %347 to float, !dbg !10655
  %348 = load i8*, i8** %tmparray, align 8, !dbg !10655
  %349 = bitcast i8* %348 to float*, !dbg !10655
  %350 = load i32, i32* %j, align 4, !dbg !10655
  %idxprom436 = sext i32 %350 to i64, !dbg !10655
  %arrayidx437 = getelementptr inbounds float, float* %349, i64 %idxprom436, !dbg !10655
  store float %conv435, float* %arrayidx437, align 4, !dbg !10655
  br label %sw.epilog441, !dbg !10655

sw.default438:                                    ; preds = %for.body402
  %351 = load i8*, i8** %tmparray, align 8, !dbg !10655
  %352 = bitcast i8* %351 to float*, !dbg !10655
  %353 = load i32, i32* %j, align 4, !dbg !10655
  %idxprom439 = sext i32 %353 to i64, !dbg !10655
  %arrayidx440 = getelementptr inbounds float, float* %352, i64 %idxprom439, !dbg !10655
  store float 0.000000e+00, float* %arrayidx440, align 4, !dbg !10655
  br label %sw.epilog441, !dbg !10655

sw.epilog441:                                     ; preds = %sw.default438, %sw.bb431, %sw.bb425, %sw.bb418, %sw.bb411, %sw.bb404
  br label %for.inc442, !dbg !10653

for.inc442:                                       ; preds = %sw.epilog441
  %354 = load i32, i32* %j, align 4, !dbg !10657
  %inc443 = add nsw i32 %354, 1, !dbg !10657
  store i32 %inc443, i32* %j, align 4, !dbg !10657
  %355 = load i32, i32* %a45, align 4, !dbg !10658
  %inc444 = add nsw i32 %355, 1, !dbg !10658
  store i32 %inc444, i32* %a45, align 4, !dbg !10658
  br label %for.cond399, !dbg !10659, !llvm.loop !10660

for.end445:                                       ; preds = %for.cond399
  %356 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10662
  %357 = load i8*, i8** %tmparray, align 8, !dbg !10663
  %358 = bitcast i8* %357 to float*, !dbg !10663
  call void @RNA_property_float_set_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %356, float* %358), !dbg !10664
  br label %sw.epilog447, !dbg !10665

sw.default446:                                    ; preds = %if.then301
  br label %sw.epilog447, !dbg !10666

sw.epilog447:                                     ; preds = %sw.default446, %for.end445, %for.end397, %for.end349
  br label %if.end589, !dbg !10667

if.else448:                                       ; preds = %if.end299
  %359 = load i32, i32* %itemtype, align 4, !dbg !10668
  switch i32 %359, label %sw.default587 [
    i32 0, label %sw.bb449
    i32 1, label %sw.bb495
    i32 2, label %sw.bb541
  ], !dbg !10670

sw.bb449:                                         ; preds = %if.else448
  %360 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10671
  %361 = load i8*, i8** %tmparray, align 8, !dbg !10674
  %362 = bitcast i8* %361 to i32*, !dbg !10674
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %360, i32* %362), !dbg !10675
  store i32 0, i32* %j, align 4, !dbg !10676
  br label %for.cond450, !dbg !10678

for.cond450:                                      ; preds = %for.inc491, %sw.bb449
  %363 = load i32, i32* %j, align 4, !dbg !10679
  %364 = load i32, i32* %itemlen, align 4, !dbg !10681
  %cmp451 = icmp slt i32 %363, %364, !dbg !10682
  br i1 %cmp451, label %for.body453, label %for.end494, !dbg !10683

for.body453:                                      ; preds = %for.cond450
  %type454 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10684
  %365 = load i32, i32* %type454, align 8, !dbg !10684
  switch i32 %365, label %sw.default489 [
    i32 2, label %sw.bb455
    i32 1, label %sw.bb462
    i32 0, label %sw.bb469
    i32 4, label %sw.bb475
    i32 3, label %sw.bb482
  ], !dbg !10684

sw.bb455:                                         ; preds = %for.body453
  %366 = load i8*, i8** %tmparray, align 8, !dbg !10686
  %367 = bitcast i8* %366 to i32*, !dbg !10686
  %368 = load i32, i32* %j, align 4, !dbg !10686
  %idxprom456 = sext i32 %368 to i64, !dbg !10686
  %arrayidx457 = getelementptr inbounds i32, i32* %367, i64 %idxprom456, !dbg !10686
  %369 = load i32, i32* %arrayidx457, align 4, !dbg !10686
  %conv458 = trunc i32 %369 to i8, !dbg !10686
  %array459 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10686
  %370 = load i8*, i8** %array459, align 8, !dbg !10686
  %371 = load i32, i32* %a45, align 4, !dbg !10686
  %idxprom460 = sext i32 %371 to i64, !dbg !10686
  %arrayidx461 = getelementptr inbounds i8, i8* %370, i64 %idxprom460, !dbg !10686
  store i8 %conv458, i8* %arrayidx461, align 1, !dbg !10686
  br label %sw.epilog490, !dbg !10686

sw.bb462:                                         ; preds = %for.body453
  %372 = load i8*, i8** %tmparray, align 8, !dbg !10686
  %373 = bitcast i8* %372 to i32*, !dbg !10686
  %374 = load i32, i32* %j, align 4, !dbg !10686
  %idxprom463 = sext i32 %374 to i64, !dbg !10686
  %arrayidx464 = getelementptr inbounds i32, i32* %373, i64 %idxprom463, !dbg !10686
  %375 = load i32, i32* %arrayidx464, align 4, !dbg !10686
  %conv465 = trunc i32 %375 to i16, !dbg !10686
  %array466 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10686
  %376 = load i8*, i8** %array466, align 8, !dbg !10686
  %377 = bitcast i8* %376 to i16*, !dbg !10686
  %378 = load i32, i32* %a45, align 4, !dbg !10686
  %idxprom467 = sext i32 %378 to i64, !dbg !10686
  %arrayidx468 = getelementptr inbounds i16, i16* %377, i64 %idxprom467, !dbg !10686
  store i16 %conv465, i16* %arrayidx468, align 2, !dbg !10686
  br label %sw.epilog490, !dbg !10686

sw.bb469:                                         ; preds = %for.body453
  %379 = load i8*, i8** %tmparray, align 8, !dbg !10686
  %380 = bitcast i8* %379 to i32*, !dbg !10686
  %381 = load i32, i32* %j, align 4, !dbg !10686
  %idxprom470 = sext i32 %381 to i64, !dbg !10686
  %arrayidx471 = getelementptr inbounds i32, i32* %380, i64 %idxprom470, !dbg !10686
  %382 = load i32, i32* %arrayidx471, align 4, !dbg !10686
  %array472 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10686
  %383 = load i8*, i8** %array472, align 8, !dbg !10686
  %384 = bitcast i8* %383 to i32*, !dbg !10686
  %385 = load i32, i32* %a45, align 4, !dbg !10686
  %idxprom473 = sext i32 %385 to i64, !dbg !10686
  %arrayidx474 = getelementptr inbounds i32, i32* %384, i64 %idxprom473, !dbg !10686
  store i32 %382, i32* %arrayidx474, align 4, !dbg !10686
  br label %sw.epilog490, !dbg !10686

sw.bb475:                                         ; preds = %for.body453
  %386 = load i8*, i8** %tmparray, align 8, !dbg !10686
  %387 = bitcast i8* %386 to i32*, !dbg !10686
  %388 = load i32, i32* %j, align 4, !dbg !10686
  %idxprom476 = sext i32 %388 to i64, !dbg !10686
  %arrayidx477 = getelementptr inbounds i32, i32* %387, i64 %idxprom476, !dbg !10686
  %389 = load i32, i32* %arrayidx477, align 4, !dbg !10686
  %conv478 = sitofp i32 %389 to float, !dbg !10686
  %array479 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10686
  %390 = load i8*, i8** %array479, align 8, !dbg !10686
  %391 = bitcast i8* %390 to float*, !dbg !10686
  %392 = load i32, i32* %a45, align 4, !dbg !10686
  %idxprom480 = sext i32 %392 to i64, !dbg !10686
  %arrayidx481 = getelementptr inbounds float, float* %391, i64 %idxprom480, !dbg !10686
  store float %conv478, float* %arrayidx481, align 4, !dbg !10686
  br label %sw.epilog490, !dbg !10686

sw.bb482:                                         ; preds = %for.body453
  %393 = load i8*, i8** %tmparray, align 8, !dbg !10686
  %394 = bitcast i8* %393 to i32*, !dbg !10686
  %395 = load i32, i32* %j, align 4, !dbg !10686
  %idxprom483 = sext i32 %395 to i64, !dbg !10686
  %arrayidx484 = getelementptr inbounds i32, i32* %394, i64 %idxprom483, !dbg !10686
  %396 = load i32, i32* %arrayidx484, align 4, !dbg !10686
  %conv485 = sitofp i32 %396 to double, !dbg !10686
  %array486 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10686
  %397 = load i8*, i8** %array486, align 8, !dbg !10686
  %398 = bitcast i8* %397 to double*, !dbg !10686
  %399 = load i32, i32* %a45, align 4, !dbg !10686
  %idxprom487 = sext i32 %399 to i64, !dbg !10686
  %arrayidx488 = getelementptr inbounds double, double* %398, i64 %idxprom487, !dbg !10686
  store double %conv485, double* %arrayidx488, align 8, !dbg !10686
  br label %sw.epilog490, !dbg !10686

sw.default489:                                    ; preds = %for.body453
  br label %sw.epilog490, !dbg !10686

sw.epilog490:                                     ; preds = %sw.default489, %sw.bb482, %sw.bb475, %sw.bb469, %sw.bb462, %sw.bb455
  br label %for.inc491, !dbg !10684

for.inc491:                                       ; preds = %sw.epilog490
  %400 = load i32, i32* %j, align 4, !dbg !10688
  %inc492 = add nsw i32 %400, 1, !dbg !10688
  store i32 %inc492, i32* %j, align 4, !dbg !10688
  %401 = load i32, i32* %a45, align 4, !dbg !10689
  %inc493 = add nsw i32 %401, 1, !dbg !10689
  store i32 %inc493, i32* %a45, align 4, !dbg !10689
  br label %for.cond450, !dbg !10690, !llvm.loop !10691

for.end494:                                       ; preds = %for.cond450
  br label %sw.epilog588, !dbg !10693

sw.bb495:                                         ; preds = %if.else448
  %402 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10694
  %403 = load i8*, i8** %tmparray, align 8, !dbg !10696
  %404 = bitcast i8* %403 to i32*, !dbg !10696
  call void @RNA_property_int_get_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %402, i32* %404), !dbg !10697
  store i32 0, i32* %j, align 4, !dbg !10698
  br label %for.cond496, !dbg !10700

for.cond496:                                      ; preds = %for.inc537, %sw.bb495
  %405 = load i32, i32* %j, align 4, !dbg !10701
  %406 = load i32, i32* %itemlen, align 4, !dbg !10703
  %cmp497 = icmp slt i32 %405, %406, !dbg !10704
  br i1 %cmp497, label %for.body499, label %for.end540, !dbg !10705

for.body499:                                      ; preds = %for.cond496
  %type500 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10706
  %407 = load i32, i32* %type500, align 8, !dbg !10706
  switch i32 %407, label %sw.default535 [
    i32 2, label %sw.bb501
    i32 1, label %sw.bb508
    i32 0, label %sw.bb515
    i32 4, label %sw.bb521
    i32 3, label %sw.bb528
  ], !dbg !10706

sw.bb501:                                         ; preds = %for.body499
  %408 = load i8*, i8** %tmparray, align 8, !dbg !10708
  %409 = bitcast i8* %408 to i32*, !dbg !10708
  %410 = load i32, i32* %j, align 4, !dbg !10708
  %idxprom502 = sext i32 %410 to i64, !dbg !10708
  %arrayidx503 = getelementptr inbounds i32, i32* %409, i64 %idxprom502, !dbg !10708
  %411 = load i32, i32* %arrayidx503, align 4, !dbg !10708
  %conv504 = trunc i32 %411 to i8, !dbg !10708
  %array505 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10708
  %412 = load i8*, i8** %array505, align 8, !dbg !10708
  %413 = load i32, i32* %a45, align 4, !dbg !10708
  %idxprom506 = sext i32 %413 to i64, !dbg !10708
  %arrayidx507 = getelementptr inbounds i8, i8* %412, i64 %idxprom506, !dbg !10708
  store i8 %conv504, i8* %arrayidx507, align 1, !dbg !10708
  br label %sw.epilog536, !dbg !10708

sw.bb508:                                         ; preds = %for.body499
  %414 = load i8*, i8** %tmparray, align 8, !dbg !10708
  %415 = bitcast i8* %414 to i32*, !dbg !10708
  %416 = load i32, i32* %j, align 4, !dbg !10708
  %idxprom509 = sext i32 %416 to i64, !dbg !10708
  %arrayidx510 = getelementptr inbounds i32, i32* %415, i64 %idxprom509, !dbg !10708
  %417 = load i32, i32* %arrayidx510, align 4, !dbg !10708
  %conv511 = trunc i32 %417 to i16, !dbg !10708
  %array512 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10708
  %418 = load i8*, i8** %array512, align 8, !dbg !10708
  %419 = bitcast i8* %418 to i16*, !dbg !10708
  %420 = load i32, i32* %a45, align 4, !dbg !10708
  %idxprom513 = sext i32 %420 to i64, !dbg !10708
  %arrayidx514 = getelementptr inbounds i16, i16* %419, i64 %idxprom513, !dbg !10708
  store i16 %conv511, i16* %arrayidx514, align 2, !dbg !10708
  br label %sw.epilog536, !dbg !10708

sw.bb515:                                         ; preds = %for.body499
  %421 = load i8*, i8** %tmparray, align 8, !dbg !10708
  %422 = bitcast i8* %421 to i32*, !dbg !10708
  %423 = load i32, i32* %j, align 4, !dbg !10708
  %idxprom516 = sext i32 %423 to i64, !dbg !10708
  %arrayidx517 = getelementptr inbounds i32, i32* %422, i64 %idxprom516, !dbg !10708
  %424 = load i32, i32* %arrayidx517, align 4, !dbg !10708
  %array518 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10708
  %425 = load i8*, i8** %array518, align 8, !dbg !10708
  %426 = bitcast i8* %425 to i32*, !dbg !10708
  %427 = load i32, i32* %a45, align 4, !dbg !10708
  %idxprom519 = sext i32 %427 to i64, !dbg !10708
  %arrayidx520 = getelementptr inbounds i32, i32* %426, i64 %idxprom519, !dbg !10708
  store i32 %424, i32* %arrayidx520, align 4, !dbg !10708
  br label %sw.epilog536, !dbg !10708

sw.bb521:                                         ; preds = %for.body499
  %428 = load i8*, i8** %tmparray, align 8, !dbg !10708
  %429 = bitcast i8* %428 to i32*, !dbg !10708
  %430 = load i32, i32* %j, align 4, !dbg !10708
  %idxprom522 = sext i32 %430 to i64, !dbg !10708
  %arrayidx523 = getelementptr inbounds i32, i32* %429, i64 %idxprom522, !dbg !10708
  %431 = load i32, i32* %arrayidx523, align 4, !dbg !10708
  %conv524 = sitofp i32 %431 to float, !dbg !10708
  %array525 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10708
  %432 = load i8*, i8** %array525, align 8, !dbg !10708
  %433 = bitcast i8* %432 to float*, !dbg !10708
  %434 = load i32, i32* %a45, align 4, !dbg !10708
  %idxprom526 = sext i32 %434 to i64, !dbg !10708
  %arrayidx527 = getelementptr inbounds float, float* %433, i64 %idxprom526, !dbg !10708
  store float %conv524, float* %arrayidx527, align 4, !dbg !10708
  br label %sw.epilog536, !dbg !10708

sw.bb528:                                         ; preds = %for.body499
  %435 = load i8*, i8** %tmparray, align 8, !dbg !10708
  %436 = bitcast i8* %435 to i32*, !dbg !10708
  %437 = load i32, i32* %j, align 4, !dbg !10708
  %idxprom529 = sext i32 %437 to i64, !dbg !10708
  %arrayidx530 = getelementptr inbounds i32, i32* %436, i64 %idxprom529, !dbg !10708
  %438 = load i32, i32* %arrayidx530, align 4, !dbg !10708
  %conv531 = sitofp i32 %438 to double, !dbg !10708
  %array532 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10708
  %439 = load i8*, i8** %array532, align 8, !dbg !10708
  %440 = bitcast i8* %439 to double*, !dbg !10708
  %441 = load i32, i32* %a45, align 4, !dbg !10708
  %idxprom533 = sext i32 %441 to i64, !dbg !10708
  %arrayidx534 = getelementptr inbounds double, double* %440, i64 %idxprom533, !dbg !10708
  store double %conv531, double* %arrayidx534, align 8, !dbg !10708
  br label %sw.epilog536, !dbg !10708

sw.default535:                                    ; preds = %for.body499
  br label %sw.epilog536, !dbg !10708

sw.epilog536:                                     ; preds = %sw.default535, %sw.bb528, %sw.bb521, %sw.bb515, %sw.bb508, %sw.bb501
  br label %for.inc537, !dbg !10706

for.inc537:                                       ; preds = %sw.epilog536
  %442 = load i32, i32* %j, align 4, !dbg !10710
  %inc538 = add nsw i32 %442, 1, !dbg !10710
  store i32 %inc538, i32* %j, align 4, !dbg !10710
  %443 = load i32, i32* %a45, align 4, !dbg !10711
  %inc539 = add nsw i32 %443, 1, !dbg !10711
  store i32 %inc539, i32* %a45, align 4, !dbg !10711
  br label %for.cond496, !dbg !10712, !llvm.loop !10713

for.end540:                                       ; preds = %for.cond496
  br label %sw.epilog588, !dbg !10715

sw.bb541:                                         ; preds = %if.else448
  %444 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10716
  %445 = load i8*, i8** %tmparray, align 8, !dbg !10718
  %446 = bitcast i8* %445 to float*, !dbg !10718
  call void @RNA_property_float_get_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %444, float* %446), !dbg !10719
  store i32 0, i32* %j, align 4, !dbg !10720
  br label %for.cond542, !dbg !10722

for.cond542:                                      ; preds = %for.inc583, %sw.bb541
  %447 = load i32, i32* %j, align 4, !dbg !10723
  %448 = load i32, i32* %itemlen, align 4, !dbg !10725
  %cmp543 = icmp slt i32 %447, %448, !dbg !10726
  br i1 %cmp543, label %for.body545, label %for.end586, !dbg !10727

for.body545:                                      ; preds = %for.cond542
  %type546 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 1, !dbg !10728
  %449 = load i32, i32* %type546, align 8, !dbg !10728
  switch i32 %449, label %sw.default581 [
    i32 2, label %sw.bb547
    i32 1, label %sw.bb554
    i32 0, label %sw.bb561
    i32 4, label %sw.bb568
    i32 3, label %sw.bb574
  ], !dbg !10728

sw.bb547:                                         ; preds = %for.body545
  %450 = load i8*, i8** %tmparray, align 8, !dbg !10730
  %451 = bitcast i8* %450 to float*, !dbg !10730
  %452 = load i32, i32* %j, align 4, !dbg !10730
  %idxprom548 = sext i32 %452 to i64, !dbg !10730
  %arrayidx549 = getelementptr inbounds float, float* %451, i64 %idxprom548, !dbg !10730
  %453 = load float, float* %arrayidx549, align 4, !dbg !10730
  %conv550 = fptoui float %453 to i8, !dbg !10730
  %array551 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10730
  %454 = load i8*, i8** %array551, align 8, !dbg !10730
  %455 = load i32, i32* %a45, align 4, !dbg !10730
  %idxprom552 = sext i32 %455 to i64, !dbg !10730
  %arrayidx553 = getelementptr inbounds i8, i8* %454, i64 %idxprom552, !dbg !10730
  store i8 %conv550, i8* %arrayidx553, align 1, !dbg !10730
  br label %sw.epilog582, !dbg !10730

sw.bb554:                                         ; preds = %for.body545
  %456 = load i8*, i8** %tmparray, align 8, !dbg !10730
  %457 = bitcast i8* %456 to float*, !dbg !10730
  %458 = load i32, i32* %j, align 4, !dbg !10730
  %idxprom555 = sext i32 %458 to i64, !dbg !10730
  %arrayidx556 = getelementptr inbounds float, float* %457, i64 %idxprom555, !dbg !10730
  %459 = load float, float* %arrayidx556, align 4, !dbg !10730
  %conv557 = fptosi float %459 to i16, !dbg !10730
  %array558 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10730
  %460 = load i8*, i8** %array558, align 8, !dbg !10730
  %461 = bitcast i8* %460 to i16*, !dbg !10730
  %462 = load i32, i32* %a45, align 4, !dbg !10730
  %idxprom559 = sext i32 %462 to i64, !dbg !10730
  %arrayidx560 = getelementptr inbounds i16, i16* %461, i64 %idxprom559, !dbg !10730
  store i16 %conv557, i16* %arrayidx560, align 2, !dbg !10730
  br label %sw.epilog582, !dbg !10730

sw.bb561:                                         ; preds = %for.body545
  %463 = load i8*, i8** %tmparray, align 8, !dbg !10730
  %464 = bitcast i8* %463 to float*, !dbg !10730
  %465 = load i32, i32* %j, align 4, !dbg !10730
  %idxprom562 = sext i32 %465 to i64, !dbg !10730
  %arrayidx563 = getelementptr inbounds float, float* %464, i64 %idxprom562, !dbg !10730
  %466 = load float, float* %arrayidx563, align 4, !dbg !10730
  %conv564 = fptosi float %466 to i32, !dbg !10730
  %array565 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10730
  %467 = load i8*, i8** %array565, align 8, !dbg !10730
  %468 = bitcast i8* %467 to i32*, !dbg !10730
  %469 = load i32, i32* %a45, align 4, !dbg !10730
  %idxprom566 = sext i32 %469 to i64, !dbg !10730
  %arrayidx567 = getelementptr inbounds i32, i32* %468, i64 %idxprom566, !dbg !10730
  store i32 %conv564, i32* %arrayidx567, align 4, !dbg !10730
  br label %sw.epilog582, !dbg !10730

sw.bb568:                                         ; preds = %for.body545
  %470 = load i8*, i8** %tmparray, align 8, !dbg !10730
  %471 = bitcast i8* %470 to float*, !dbg !10730
  %472 = load i32, i32* %j, align 4, !dbg !10730
  %idxprom569 = sext i32 %472 to i64, !dbg !10730
  %arrayidx570 = getelementptr inbounds float, float* %471, i64 %idxprom569, !dbg !10730
  %473 = load float, float* %arrayidx570, align 4, !dbg !10730
  %array571 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10730
  %474 = load i8*, i8** %array571, align 8, !dbg !10730
  %475 = bitcast i8* %474 to float*, !dbg !10730
  %476 = load i32, i32* %a45, align 4, !dbg !10730
  %idxprom572 = sext i32 %476 to i64, !dbg !10730
  %arrayidx573 = getelementptr inbounds float, float* %475, i64 %idxprom572, !dbg !10730
  store float %473, float* %arrayidx573, align 4, !dbg !10730
  br label %sw.epilog582, !dbg !10730

sw.bb574:                                         ; preds = %for.body545
  %477 = load i8*, i8** %tmparray, align 8, !dbg !10730
  %478 = bitcast i8* %477 to float*, !dbg !10730
  %479 = load i32, i32* %j, align 4, !dbg !10730
  %idxprom575 = sext i32 %479 to i64, !dbg !10730
  %arrayidx576 = getelementptr inbounds float, float* %478, i64 %idxprom575, !dbg !10730
  %480 = load float, float* %arrayidx576, align 4, !dbg !10730
  %conv577 = fpext float %480 to double, !dbg !10730
  %array578 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10730
  %481 = load i8*, i8** %array578, align 8, !dbg !10730
  %482 = bitcast i8* %481 to double*, !dbg !10730
  %483 = load i32, i32* %a45, align 4, !dbg !10730
  %idxprom579 = sext i32 %483 to i64, !dbg !10730
  %arrayidx580 = getelementptr inbounds double, double* %482, i64 %idxprom579, !dbg !10730
  store double %conv577, double* %arrayidx580, align 8, !dbg !10730
  br label %sw.epilog582, !dbg !10730

sw.default581:                                    ; preds = %for.body545
  br label %sw.epilog582, !dbg !10730

sw.epilog582:                                     ; preds = %sw.default581, %sw.bb574, %sw.bb568, %sw.bb561, %sw.bb554, %sw.bb547
  br label %for.inc583, !dbg !10728

for.inc583:                                       ; preds = %sw.epilog582
  %484 = load i32, i32* %j, align 4, !dbg !10732
  %inc584 = add nsw i32 %484, 1, !dbg !10732
  store i32 %inc584, i32* %j, align 4, !dbg !10732
  %485 = load i32, i32* %a45, align 4, !dbg !10733
  %inc585 = add nsw i32 %485, 1, !dbg !10733
  store i32 %inc585, i32* %a45, align 4, !dbg !10733
  br label %for.cond542, !dbg !10734, !llvm.loop !10735

for.end586:                                       ; preds = %for.cond542
  br label %sw.epilog588, !dbg !10737

sw.default587:                                    ; preds = %if.else448
  br label %sw.epilog588, !dbg !10738

sw.epilog588:                                     ; preds = %sw.default587, %for.end586, %for.end540, %for.end494
  br label %if.end589

if.end589:                                        ; preds = %sw.epilog588, %sw.epilog447
  br label %if.end629, !dbg !10739

if.else590:                                       ; preds = %if.else284
  %486 = load i32, i32* %set.addr, align 4, !dbg !10740
  %tobool591 = icmp ne i32 %486, 0, !dbg !10740
  br i1 %tobool591, label %if.then592, label %if.else610, !dbg !10743

if.then592:                                       ; preds = %if.else590
  %487 = load i32, i32* %itemtype, align 4, !dbg !10744
  switch i32 %487, label %sw.default608 [
    i32 0, label %sw.bb593
    i32 1, label %sw.bb598
    i32 2, label %sw.bb603
  ], !dbg !10746

sw.bb593:                                         ; preds = %if.then592
  %488 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10747
  %array594 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10750
  %489 = load i8*, i8** %array594, align 8, !dbg !10750
  %490 = bitcast i8* %489 to i32*, !dbg !10751
  %491 = load i32, i32* %a45, align 4, !dbg !10752
  %idxprom595 = sext i32 %491 to i64, !dbg !10753
  %arrayidx596 = getelementptr inbounds i32, i32* %490, i64 %idxprom595, !dbg !10753
  call void @RNA_property_boolean_set_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %488, i32* %arrayidx596), !dbg !10754
  %492 = load i32, i32* %itemlen, align 4, !dbg !10755
  %493 = load i32, i32* %a45, align 4, !dbg !10756
  %add597 = add nsw i32 %493, %492, !dbg !10756
  store i32 %add597, i32* %a45, align 4, !dbg !10756
  br label %sw.epilog609, !dbg !10757

sw.bb598:                                         ; preds = %if.then592
  %494 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10758
  %array599 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10760
  %495 = load i8*, i8** %array599, align 8, !dbg !10760
  %496 = bitcast i8* %495 to i32*, !dbg !10761
  %497 = load i32, i32* %a45, align 4, !dbg !10762
  %idxprom600 = sext i32 %497 to i64, !dbg !10763
  %arrayidx601 = getelementptr inbounds i32, i32* %496, i64 %idxprom600, !dbg !10763
  call void @RNA_property_int_set_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %494, i32* %arrayidx601), !dbg !10764
  %498 = load i32, i32* %itemlen, align 4, !dbg !10765
  %499 = load i32, i32* %a45, align 4, !dbg !10766
  %add602 = add nsw i32 %499, %498, !dbg !10766
  store i32 %add602, i32* %a45, align 4, !dbg !10766
  br label %sw.epilog609, !dbg !10767

sw.bb603:                                         ; preds = %if.then592
  %500 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10768
  %array604 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10770
  %501 = load i8*, i8** %array604, align 8, !dbg !10770
  %502 = bitcast i8* %501 to float*, !dbg !10771
  %503 = load i32, i32* %a45, align 4, !dbg !10772
  %idxprom605 = sext i32 %503 to i64, !dbg !10773
  %arrayidx606 = getelementptr inbounds float, float* %502, i64 %idxprom605, !dbg !10773
  call void @RNA_property_float_set_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %500, float* %arrayidx606), !dbg !10774
  %504 = load i32, i32* %itemlen, align 4, !dbg !10775
  %505 = load i32, i32* %a45, align 4, !dbg !10776
  %add607 = add nsw i32 %505, %504, !dbg !10776
  store i32 %add607, i32* %a45, align 4, !dbg !10776
  br label %sw.epilog609, !dbg !10777

sw.default608:                                    ; preds = %if.then592
  br label %sw.epilog609, !dbg !10778

sw.epilog609:                                     ; preds = %sw.default608, %sw.bb603, %sw.bb598, %sw.bb593
  br label %if.end628, !dbg !10779

if.else610:                                       ; preds = %if.else590
  %506 = load i32, i32* %itemtype, align 4, !dbg !10780
  switch i32 %506, label %sw.default626 [
    i32 0, label %sw.bb611
    i32 1, label %sw.bb616
    i32 2, label %sw.bb621
  ], !dbg !10782

sw.bb611:                                         ; preds = %if.else610
  %507 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10783
  %array612 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10786
  %508 = load i8*, i8** %array612, align 8, !dbg !10786
  %509 = bitcast i8* %508 to i32*, !dbg !10787
  %510 = load i32, i32* %a45, align 4, !dbg !10788
  %idxprom613 = sext i32 %510 to i64, !dbg !10789
  %arrayidx614 = getelementptr inbounds i32, i32* %509, i64 %idxprom613, !dbg !10789
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %507, i32* %arrayidx614), !dbg !10790
  %511 = load i32, i32* %itemlen, align 4, !dbg !10791
  %512 = load i32, i32* %a45, align 4, !dbg !10792
  %add615 = add nsw i32 %512, %511, !dbg !10792
  store i32 %add615, i32* %a45, align 4, !dbg !10792
  br label %sw.epilog627, !dbg !10793

sw.bb616:                                         ; preds = %if.else610
  %513 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10794
  %array617 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10796
  %514 = load i8*, i8** %array617, align 8, !dbg !10796
  %515 = bitcast i8* %514 to i32*, !dbg !10797
  %516 = load i32, i32* %a45, align 4, !dbg !10798
  %idxprom618 = sext i32 %516 to i64, !dbg !10799
  %arrayidx619 = getelementptr inbounds i32, i32* %515, i64 %idxprom618, !dbg !10799
  call void @RNA_property_int_get_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %513, i32* %arrayidx619), !dbg !10800
  %517 = load i32, i32* %itemlen, align 4, !dbg !10801
  %518 = load i32, i32* %a45, align 4, !dbg !10802
  %add620 = add nsw i32 %518, %517, !dbg !10802
  store i32 %add620, i32* %a45, align 4, !dbg !10802
  br label %sw.epilog627, !dbg !10803

sw.bb621:                                         ; preds = %if.else610
  %519 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !10804
  %array622 = getelementptr inbounds %struct.RawArray, %struct.RawArray* %in, i32 0, i32 0, !dbg !10806
  %520 = load i8*, i8** %array622, align 8, !dbg !10806
  %521 = bitcast i8* %520 to float*, !dbg !10807
  %522 = load i32, i32* %a45, align 4, !dbg !10808
  %idxprom623 = sext i32 %522 to i64, !dbg !10809
  %arrayidx624 = getelementptr inbounds float, float* %521, i64 %idxprom623, !dbg !10809
  call void @RNA_property_float_get_array(%struct.PointerRNA* %itemptr66, %struct.PropertyRNA* %519, float* %arrayidx624), !dbg !10810
  %523 = load i32, i32* %itemlen, align 4, !dbg !10811
  %524 = load i32, i32* %a45, align 4, !dbg !10812
  %add625 = add nsw i32 %524, %523, !dbg !10812
  store i32 %add625, i32* %a45, align 4, !dbg !10812
  br label %sw.epilog627, !dbg !10813

sw.default626:                                    ; preds = %if.else610
  br label %sw.epilog627, !dbg !10814

sw.epilog627:                                     ; preds = %sw.default626, %sw.bb621, %sw.bb616, %sw.bb611
  br label %if.end628

if.end628:                                        ; preds = %sw.epilog627, %sw.epilog609
  br label %if.end629

if.end629:                                        ; preds = %if.end628, %if.end589
  br label %if.end630

if.end630:                                        ; preds = %if.end629, %if.end282
  br label %if.end631, !dbg !10815

if.end631:                                        ; preds = %if.end630, %lor.lhs.false92
  br label %if.end632, !dbg !10816

if.end632:                                        ; preds = %if.end631, %for.body65
  br label %for.inc633, !dbg !10817

for.inc633:                                       ; preds = %if.end632
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !10414
  br label %for.cond63, !dbg !10414, !llvm.loop !10818

for.end634:                                       ; preds = %if.then100, %if.then88, %if.else78, %for.cond63
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !10820
  %525 = load i8*, i8** %tmparray, align 8, !dbg !10821
  %tobool635 = icmp ne i8* %525, null, !dbg !10821
  br i1 %tobool635, label %if.then636, label %if.end637, !dbg !10823

if.then636:                                       ; preds = %for.end634
  %526 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10824
  %527 = load i8*, i8** %tmparray, align 8, !dbg !10825
  call void %526(i8* %527), !dbg !10824
  br label %if.end637, !dbg !10824

if.end637:                                        ; preds = %if.then636, %for.end634
  %528 = load i32, i32* %err, align 4, !dbg !10826
  %tobool638 = icmp ne i32 %528, 0, !dbg !10827
  %lnot = xor i1 %tobool638, true, !dbg !10827
  %lnot.ext = zext i1 %lnot to i32, !dbg !10827
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !10828
  br label %return, !dbg !10828

return:                                           ; preds = %if.end637, %for.end, %if.then17, %if.then6
  %529 = load i32, i32* %retval, align 4, !dbg !10829
  ret i32 %529, !dbg !10829
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_property_collection_raw_set(%struct.ReportList* %reports, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %propname, i8* %array, i32 %type, i32 %len) #0 !dbg !10830 {
entry:
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %array.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !10831, metadata !DIExpression()), !dbg !10832
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !10833, metadata !DIExpression()), !dbg !10834
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !10835, metadata !DIExpression()), !dbg !10836
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !10837, metadata !DIExpression()), !dbg !10838
  store i8* %array, i8** %array.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %array.addr, metadata !10839, metadata !DIExpression()), !dbg !10840
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10841, metadata !DIExpression()), !dbg !10842
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10843, metadata !DIExpression()), !dbg !10844
  %0 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !10845
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10846
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !10847
  %3 = load i8*, i8** %propname.addr, align 8, !dbg !10848
  %4 = load i8*, i8** %array.addr, align 8, !dbg !10849
  %5 = load i32, i32* %type.addr, align 4, !dbg !10850
  %6 = load i32, i32* %len.addr, align 4, !dbg !10851
  %call = call i32 @rna_raw_access(%struct.ReportList* %0, %struct.PointerRNA* %1, %struct.PropertyRNA* %2, i8* %3, i8* %4, i32 %5, i32 %6, i32 1), !dbg !10852
  ret i32 %call, !dbg !10853
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_iterator_listbase_begin(%struct.CollectionPropertyIterator* %iter, %struct.ListBase* %lb, i32 (%struct.CollectionPropertyIterator*, i8*)* %skip) #0 !dbg !10854 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %skip.addr = alloca i32 (%struct.CollectionPropertyIterator*, i8*)*, align 8
  %internal = alloca %struct.ListBaseIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !10857, metadata !DIExpression()), !dbg !10858
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !10859, metadata !DIExpression()), !dbg !10860
  store i32 (%struct.CollectionPropertyIterator*, i8*)* %skip, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, metadata !10861, metadata !DIExpression()), !dbg !10862
  call void @llvm.dbg.declare(metadata %struct.ListBaseIterator** %internal, metadata !10863, metadata !DIExpression()), !dbg !10865
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10866
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 3, !dbg !10867
  %listbase = bitcast %union.anon* %internal1 to %struct.ListBaseIterator*, !dbg !10868
  store %struct.ListBaseIterator* %listbase, %struct.ListBaseIterator** %internal, align 8, !dbg !10865
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10869
  %tobool = icmp ne %struct.ListBase* %1, null, !dbg !10870
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10870

cond.true:                                        ; preds = %entry
  %2 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10871
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !10872
  %3 = load i8*, i8** %first, align 8, !dbg !10872
  br label %cond.end, !dbg !10870

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10870

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ null, %cond.false ], !dbg !10870
  %4 = bitcast i8* %cond to %struct.Link*, !dbg !10870
  %5 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10873
  %link = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %5, i32 0, i32 0, !dbg !10874
  store %struct.Link* %4, %struct.Link** %link, align 8, !dbg !10875
  %6 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, align 8, !dbg !10876
  %7 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10877
  %skip2 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %7, i32 0, i32 2, !dbg !10878
  store i32 (%struct.CollectionPropertyIterator*, i8*)* %6, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip2, align 8, !dbg !10879
  %8 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10880
  %link3 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %8, i32 0, i32 0, !dbg !10881
  %9 = load %struct.Link*, %struct.Link** %link3, align 8, !dbg !10881
  %cmp = icmp ne %struct.Link* %9, null, !dbg !10882
  %conv = zext i1 %cmp to i32, !dbg !10882
  %10 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10883
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %10, i32 0, i32 7, !dbg !10884
  store i32 %conv, i32* %valid, align 8, !dbg !10885
  %11 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, align 8, !dbg !10886
  %tobool4 = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %11, null, !dbg !10886
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !10888

land.lhs.true:                                    ; preds = %cond.end
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10889
  %valid5 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %12, i32 0, i32 7, !dbg !10890
  %13 = load i32, i32* %valid5, align 8, !dbg !10890
  %tobool6 = icmp ne i32 %13, 0, !dbg !10889
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !10891

land.lhs.true7:                                   ; preds = %land.lhs.true
  %14 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip.addr, align 8, !dbg !10892
  %15 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10893
  %16 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10894
  %link8 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %16, i32 0, i32 0, !dbg !10895
  %17 = load %struct.Link*, %struct.Link** %link8, align 8, !dbg !10895
  %18 = bitcast %struct.Link* %17 to i8*, !dbg !10894
  %call = call i32 %14(%struct.CollectionPropertyIterator* %15, i8* %18), !dbg !10892
  %tobool9 = icmp ne i32 %call, 0, !dbg !10892
  br i1 %tobool9, label %if.then, label %if.end, !dbg !10896

if.then:                                          ; preds = %land.lhs.true7
  %19 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10897
  call void @rna_iterator_listbase_next(%struct.CollectionPropertyIterator* %19), !dbg !10898
  br label %if.end, !dbg !10898

if.end:                                           ; preds = %if.then, %land.lhs.true7, %land.lhs.true, %cond.end
  ret void, !dbg !10899
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_iterator_listbase_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !10900 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %internal = alloca %struct.ListBaseIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !10901, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.declare(metadata %struct.ListBaseIterator** %internal, metadata !10903, metadata !DIExpression()), !dbg !10904
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10905
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 3, !dbg !10906
  %listbase = bitcast %union.anon* %internal1 to %struct.ListBaseIterator*, !dbg !10907
  store %struct.ListBaseIterator* %listbase, %struct.ListBaseIterator** %internal, align 8, !dbg !10904
  %1 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10908
  %skip = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %1, i32 0, i32 2, !dbg !10910
  %2 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip, align 8, !dbg !10910
  %tobool = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %2, null, !dbg !10908
  br i1 %tobool, label %if.then, label %if.else, !dbg !10911

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10912

do.body:                                          ; preds = %land.end, %if.then
  %3 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10914
  %link = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %3, i32 0, i32 0, !dbg !10916
  %4 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !10916
  %next = getelementptr inbounds %struct.Link, %struct.Link* %4, i32 0, i32 0, !dbg !10917
  %5 = load %struct.Link*, %struct.Link** %next, align 8, !dbg !10917
  %6 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10918
  %link2 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %6, i32 0, i32 0, !dbg !10919
  store %struct.Link* %5, %struct.Link** %link2, align 8, !dbg !10920
  %7 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10921
  %link3 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %7, i32 0, i32 0, !dbg !10922
  %8 = load %struct.Link*, %struct.Link** %link3, align 8, !dbg !10922
  %cmp = icmp ne %struct.Link* %8, null, !dbg !10923
  %conv = zext i1 %cmp to i32, !dbg !10923
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10924
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !10925
  store i32 %conv, i32* %valid, align 8, !dbg !10926
  br label %do.cond, !dbg !10927

do.cond:                                          ; preds = %do.body
  %10 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10928
  %valid4 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %10, i32 0, i32 7, !dbg !10929
  %11 = load i32, i32* %valid4, align 8, !dbg !10929
  %tobool5 = icmp ne i32 %11, 0, !dbg !10928
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !10930

land.rhs:                                         ; preds = %do.cond
  %12 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10931
  %skip6 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %12, i32 0, i32 2, !dbg !10932
  %13 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip6, align 8, !dbg !10932
  %14 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10933
  %15 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10934
  %link7 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %15, i32 0, i32 0, !dbg !10935
  %16 = load %struct.Link*, %struct.Link** %link7, align 8, !dbg !10935
  %17 = bitcast %struct.Link* %16 to i8*, !dbg !10934
  %call = call i32 %13(%struct.CollectionPropertyIterator* %14, i8* %17), !dbg !10931
  %tobool8 = icmp ne i32 %call, 0, !dbg !10930
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %18 = phi i1 [ false, %do.cond ], [ %tobool8, %land.rhs ], !dbg !10936
  br i1 %18, label %do.body, label %do.end, !dbg !10927, !llvm.loop !10937

do.end:                                           ; preds = %land.end
  br label %if.end, !dbg !10939

if.else:                                          ; preds = %entry
  %19 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10940
  %link9 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %19, i32 0, i32 0, !dbg !10942
  %20 = load %struct.Link*, %struct.Link** %link9, align 8, !dbg !10942
  %next10 = getelementptr inbounds %struct.Link, %struct.Link* %20, i32 0, i32 0, !dbg !10943
  %21 = load %struct.Link*, %struct.Link** %next10, align 8, !dbg !10943
  %22 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10944
  %link11 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %22, i32 0, i32 0, !dbg !10945
  store %struct.Link* %21, %struct.Link** %link11, align 8, !dbg !10946
  %23 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10947
  %link12 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %23, i32 0, i32 0, !dbg !10948
  %24 = load %struct.Link*, %struct.Link** %link12, align 8, !dbg !10948
  %cmp13 = icmp ne %struct.Link* %24, null, !dbg !10949
  %conv14 = zext i1 %cmp13 to i32, !dbg !10949
  %25 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10950
  %valid15 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %25, i32 0, i32 7, !dbg !10951
  store i32 %conv14, i32* %valid15, align 8, !dbg !10952
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  ret void, !dbg !10953
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @rna_iterator_listbase_get(%struct.CollectionPropertyIterator* %iter) #0 !dbg !10954 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %internal = alloca %struct.ListBaseIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !10957, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.declare(metadata %struct.ListBaseIterator** %internal, metadata !10959, metadata !DIExpression()), !dbg !10960
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10961
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 3, !dbg !10962
  %listbase = bitcast %union.anon* %internal1 to %struct.ListBaseIterator*, !dbg !10963
  store %struct.ListBaseIterator* %listbase, %struct.ListBaseIterator** %internal, align 8, !dbg !10960
  %1 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !10964
  %link = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %1, i32 0, i32 0, !dbg !10965
  %2 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !10965
  %3 = bitcast %struct.Link* %2 to i8*, !dbg !10964
  ret i8* %3, !dbg !10966
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %UNUSED_iter) #0 !dbg !10967 {
entry:
  %UNUSED_iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %UNUSED_iter, %struct.CollectionPropertyIterator** %UNUSED_iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %UNUSED_iter.addr, metadata !10968, metadata !DIExpression()), !dbg !10969
  ret void, !dbg !10970
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_listbase_lookup_int(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr, %struct.StructRNA* %type, %struct.ListBase* %lb, i32 %index) #0 !dbg !10971 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %type.addr = alloca %struct.StructRNA*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %index.addr = alloca i32, align 4
  %data = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !10975, metadata !DIExpression()), !dbg !10976
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !10977, metadata !DIExpression()), !dbg !10978
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !10979, metadata !DIExpression()), !dbg !10980
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10981, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.declare(metadata i8** %data, metadata !10983, metadata !DIExpression()), !dbg !10984
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !10985
  %1 = load i32, i32* %index.addr, align 4, !dbg !10986
  %call = call i8* @BLI_findlink(%struct.ListBase* %0, i32 %1), !dbg !10987
  store i8* %call, i8** %data, align 8, !dbg !10984
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !10988
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !10989
  %4 = load i8*, i8** %data, align 8, !dbg !10990
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %2, %struct.StructRNA* %3, i8* %4), !dbg !10991
  ret void, !dbg !10992
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @rna_iterator_array_get(%struct.CollectionPropertyIterator* %iter) #0 !dbg !10993 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %internal = alloca %struct.ArrayIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !10994, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !10996, metadata !DIExpression()), !dbg !10997
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !10998
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 3, !dbg !10999
  %array = bitcast %union.anon* %internal1 to %struct.ArrayIterator*, !dbg !11000
  store %struct.ArrayIterator* %array, %struct.ArrayIterator** %internal, align 8, !dbg !10997
  %1 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !11001
  %ptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %1, i32 0, i32 0, !dbg !11002
  %2 = load i8*, i8** %ptr, align 8, !dbg !11002
  ret i8* %2, !dbg !11003
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @rna_iterator_array_dereference_get(%struct.CollectionPropertyIterator* %iter) #0 !dbg !11004 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %internal = alloca %struct.ArrayIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !11007, metadata !DIExpression()), !dbg !11008
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !11009
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 3, !dbg !11010
  %array = bitcast %union.anon* %internal1 to %struct.ArrayIterator*, !dbg !11011
  store %struct.ArrayIterator* %array, %struct.ArrayIterator** %internal, align 8, !dbg !11008
  %1 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !11012
  %ptr = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %1, i32 0, i32 0, !dbg !11013
  %2 = load i8*, i8** %ptr, align 8, !dbg !11013
  %3 = bitcast i8* %2 to i8**, !dbg !11014
  %4 = load i8*, i8** %3, align 8, !dbg !11014
  ret i8* %4, !dbg !11015
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rna_array_lookup_int(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr, %struct.StructRNA* %type, i8* %data, i32 %itemsize, i32 %length, i32 %index) #0 !dbg !11016 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %type.addr = alloca %struct.StructRNA*, align 8
  %data.addr = alloca i8*, align 8
  %itemsize.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11019, metadata !DIExpression()), !dbg !11020
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !11021, metadata !DIExpression()), !dbg !11022
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  store i32 %itemsize, i32* %itemsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %itemsize.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !11027, metadata !DIExpression()), !dbg !11028
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11029, metadata !DIExpression()), !dbg !11030
  %0 = load i32, i32* %index.addr, align 4, !dbg !11031
  %cmp = icmp slt i32 %0, 0, !dbg !11033
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11034

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %index.addr, align 4, !dbg !11035
  %2 = load i32, i32* %length.addr, align 4, !dbg !11036
  %cmp1 = icmp sge i32 %1, %2, !dbg !11037
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11038

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = bitcast %struct.PointerRNA* %agg.result to i8*, !dbg !11039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast (%struct.PointerRNA* @PointerRNA_NULL to i8*), i64 24, i1 false), !dbg !11039
  br label %return, !dbg !11040

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11041
  %5 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !11042
  %6 = load i8*, i8** %data.addr, align 8, !dbg !11043
  %7 = load i32, i32* %index.addr, align 4, !dbg !11044
  %8 = load i32, i32* %itemsize.addr, align 4, !dbg !11045
  %mul = mul nsw i32 %7, %8, !dbg !11046
  %idx.ext = sext i32 %mul to i64, !dbg !11047
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !11047
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %4, %struct.StructRNA* %5, i8* %add.ptr), !dbg !11048
  br label %return, !dbg !11049

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11050
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rna_path_parse(%struct.PointerRNA* %ptr, i8* %path, %struct.PointerRNA* %r_ptr, %struct.PropertyRNA** %r_prop, i32* %r_index, %struct.ListBase* %r_elements, i8 zeroext %eval_pointer) #0 !dbg !11051 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %path.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %r_prop.addr = alloca %struct.PropertyRNA**, align 8
  %r_index.addr = alloca i32*, align 8
  %r_elements.addr = alloca %struct.ListBase*, align 8
  %eval_pointer.addr = alloca i8, align 1
  %prop = alloca %struct.PropertyRNA*, align 8
  %curptr = alloca %struct.PointerRNA, align 8
  %prop_elem = alloca %struct.PropertyElemRNA*, align 8
  %index = alloca i32, align 4
  %fixedbuf = alloca [256 x i8], align 16
  %type = alloca i32, align 4
  %use_id_prop = alloca i32, align 4
  %token = alloca i8*, align 8
  %group = alloca %struct.IDProperty*, align 8
  %nextptr = alloca %struct.PointerRNA, align 8
  %nextptr49 = alloca %struct.PointerRNA, align 8
  %prop_elem93 = alloca %struct.PropertyElemRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11054, metadata !DIExpression()), !dbg !11055
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !11058, metadata !DIExpression()), !dbg !11059
  store %struct.PropertyRNA** %r_prop, %struct.PropertyRNA*** %r_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %r_prop.addr, metadata !11060, metadata !DIExpression()), !dbg !11061
  store i32* %r_index, i32** %r_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_index.addr, metadata !11062, metadata !DIExpression()), !dbg !11063
  store %struct.ListBase* %r_elements, %struct.ListBase** %r_elements.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %r_elements.addr, metadata !11064, metadata !DIExpression()), !dbg !11065
  store i8 %eval_pointer, i8* %eval_pointer.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %eval_pointer.addr, metadata !11066, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !11068, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %curptr, metadata !11070, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.declare(metadata %struct.PropertyElemRNA** %prop_elem, metadata !11072, metadata !DIExpression()), !dbg !11082
  store %struct.PropertyElemRNA* null, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11082
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11083, metadata !DIExpression()), !dbg !11084
  store i32 -1, i32* %index, align 4, !dbg !11084
  call void @llvm.dbg.declare(metadata [256 x i8]* %fixedbuf, metadata !11085, metadata !DIExpression()), !dbg !11086
  call void @llvm.dbg.declare(metadata i32* %type, metadata !11087, metadata !DIExpression()), !dbg !11088
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %prop, align 8, !dbg !11089
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11090
  %1 = bitcast %struct.PointerRNA* %curptr to i8*, !dbg !11091
  %2 = bitcast %struct.PointerRNA* %0 to i8*, !dbg !11091
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !11091
  %3 = load i8*, i8** %path.addr, align 8, !dbg !11092
  %cmp = icmp eq i8* %3, null, !dbg !11094
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11095

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8*, i8** %path.addr, align 8, !dbg !11096
  %5 = load i8, i8* %4, align 1, !dbg !11097
  %conv = zext i8 %5 to i32, !dbg !11097
  %cmp1 = icmp eq i32 %conv, 0, !dbg !11098
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11099

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !11100
  br label %return, !dbg !11100

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !11101

while.cond:                                       ; preds = %sw.epilog, %if.end
  %6 = load i8*, i8** %path.addr, align 8, !dbg !11102
  %7 = load i8, i8* %6, align 1, !dbg !11103
  %tobool = icmp ne i8 %7, 0, !dbg !11101
  br i1 %tobool, label %while.body, label %while.end, !dbg !11101

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %use_id_prop, metadata !11104, metadata !DIExpression()), !dbg !11106
  %8 = load i8*, i8** %path.addr, align 8, !dbg !11107
  %9 = load i8, i8* %8, align 1, !dbg !11108
  %conv3 = zext i8 %9 to i32, !dbg !11108
  %cmp4 = icmp eq i32 %conv3, 91, !dbg !11109
  %10 = zext i1 %cmp4 to i64, !dbg !11110
  %cond = select i1 %cmp4, i32 1, i32 0, !dbg !11110
  store i32 %cond, i32* %use_id_prop, align 4, !dbg !11106
  call void @llvm.dbg.declare(metadata i8** %token, metadata !11111, metadata !DIExpression()), !dbg !11112
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %curptr, i32 0, i32 2, !dbg !11113
  %11 = load i8*, i8** %data, align 8, !dbg !11113
  %tobool6 = icmp ne i8* %11, null, !dbg !11115
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !11116

if.then7:                                         ; preds = %while.body
  store i8 0, i8* %retval, align 1, !dbg !11117
  br label %return, !dbg !11117

if.end8:                                          ; preds = %while.body
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !11118
  %12 = load i32, i32* %use_id_prop, align 4, !dbg !11119
  %call = call i8* @rna_path_token(i8** %path.addr, i8* %arraydecay, i32 256, i32 %12), !dbg !11120
  store i8* %call, i8** %token, align 8, !dbg !11121
  %13 = load i8*, i8** %token, align 8, !dbg !11122
  %tobool9 = icmp ne i8* %13, null, !dbg !11122
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11124

if.then10:                                        ; preds = %if.end8
  store i8 0, i8* %retval, align 1, !dbg !11125
  br label %return, !dbg !11125

if.end11:                                         ; preds = %if.end8
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %prop, align 8, !dbg !11126
  %14 = load i32, i32* %use_id_prop, align 4, !dbg !11127
  %tobool12 = icmp ne i32 %14, 0, !dbg !11127
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !11129

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !11130, metadata !DIExpression()), !dbg !11132
  %call14 = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %curptr, i8 zeroext 0), !dbg !11133
  store %struct.IDProperty* %call14, %struct.IDProperty** %group, align 8, !dbg !11132
  %15 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !11134
  %tobool15 = icmp ne %struct.IDProperty* %15, null, !dbg !11134
  br i1 %tobool15, label %land.lhs.true, label %if.end20, !dbg !11136

land.lhs.true:                                    ; preds = %if.then13
  %16 = load i8*, i8** %token, align 8, !dbg !11137
  %call16 = call i32 @rna_token_strip_quotes(i8* %16), !dbg !11138
  %tobool17 = icmp ne i32 %call16, 0, !dbg !11138
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !11139

if.then18:                                        ; preds = %land.lhs.true
  %17 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !11140
  %18 = load i8*, i8** %token, align 8, !dbg !11141
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 1, !dbg !11142
  %call19 = call %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty* %17, i8* %add.ptr), !dbg !11143
  %19 = bitcast %struct.IDProperty* %call19 to %struct.PropertyRNA*, !dbg !11144
  store %struct.PropertyRNA* %19, %struct.PropertyRNA** %prop, align 8, !dbg !11145
  br label %if.end20, !dbg !11146

if.end20:                                         ; preds = %if.then18, %land.lhs.true, %if.then13
  br label %if.end22, !dbg !11147

if.else:                                          ; preds = %if.end11
  %20 = load i8*, i8** %token, align 8, !dbg !11148
  %call21 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %curptr, i8* %20), !dbg !11150
  store %struct.PropertyRNA* %call21, %struct.PropertyRNA** %prop, align 8, !dbg !11151
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.end20
  %21 = load i8*, i8** %token, align 8, !dbg !11152
  %arraydecay23 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !11154
  %cmp24 = icmp ne i8* %21, %arraydecay23, !dbg !11155
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !11156

if.then26:                                        ; preds = %if.end22
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11157
  %23 = load i8*, i8** %token, align 8, !dbg !11158
  call void %22(i8* %23), !dbg !11157
  br label %if.end27, !dbg !11157

if.end27:                                         ; preds = %if.then26, %if.end22
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11159
  %tobool28 = icmp ne %struct.PropertyRNA* %24, null, !dbg !11159
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !11161

if.then29:                                        ; preds = %if.end27
  store i8 0, i8* %retval, align 1, !dbg !11162
  br label %return, !dbg !11162

if.end30:                                         ; preds = %if.end27
  %25 = load %struct.ListBase*, %struct.ListBase** %r_elements.addr, align 8, !dbg !11163
  %tobool31 = icmp ne %struct.ListBase* %25, null, !dbg !11163
  br i1 %tobool31, label %if.then32, label %if.end37, !dbg !11165

if.then32:                                        ; preds = %if.end30
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11166
  %call33 = call i8* %26(i64 56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.rna_path_parse, i64 0, i64 0)), !dbg !11166
  %27 = bitcast i8* %call33 to %struct.PropertyElemRNA*, !dbg !11166
  store %struct.PropertyElemRNA* %27, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11168
  %28 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11169
  %ptr34 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %28, i32 0, i32 2, !dbg !11170
  %29 = bitcast %struct.PointerRNA* %ptr34 to i8*, !dbg !11171
  %30 = bitcast %struct.PointerRNA* %curptr to i8*, !dbg !11171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false), !dbg !11171
  %31 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11172
  %32 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11173
  %prop35 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %32, i32 0, i32 3, !dbg !11174
  store %struct.PropertyRNA* %31, %struct.PropertyRNA** %prop35, align 8, !dbg !11175
  %33 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11176
  %index36 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %33, i32 0, i32 4, !dbg !11177
  store i32 -1, i32* %index36, align 8, !dbg !11178
  %34 = load %struct.ListBase*, %struct.ListBase** %r_elements.addr, align 8, !dbg !11179
  %35 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11180
  %36 = bitcast %struct.PropertyElemRNA* %35 to i8*, !dbg !11180
  call void @BLI_addtail(%struct.ListBase* %34, i8* %36), !dbg !11181
  br label %if.end37, !dbg !11182

if.end37:                                         ; preds = %if.then32, %if.end30
  %37 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11183
  %call38 = call i32 @RNA_property_type(%struct.PropertyRNA* %37), !dbg !11184
  store i32 %call38, i32* %type, align 4, !dbg !11185
  %38 = load i32, i32* %type, align 4, !dbg !11186
  switch i32 %38, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb46
  ], !dbg !11187

sw.bb:                                            ; preds = %if.end37
  %39 = load i8, i8* %eval_pointer.addr, align 1, !dbg !11188
  %conv39 = zext i8 %39 to i32, !dbg !11188
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !11188
  br i1 %tobool40, label %if.then44, label %lor.lhs.false41, !dbg !11192

lor.lhs.false41:                                  ; preds = %sw.bb
  %40 = load i8*, i8** %path.addr, align 8, !dbg !11193
  %41 = load i8, i8* %40, align 1, !dbg !11194
  %conv42 = zext i8 %41 to i32, !dbg !11194
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !11194
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !11195

if.then44:                                        ; preds = %lor.lhs.false41, %sw.bb
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %nextptr, metadata !11196, metadata !DIExpression()), !dbg !11198
  %42 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11199
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %nextptr, %struct.PointerRNA* %curptr, %struct.PropertyRNA* %42), !dbg !11200
  %43 = bitcast %struct.PointerRNA* %curptr to i8*, !dbg !11201
  %44 = bitcast %struct.PointerRNA* %nextptr to i8*, !dbg !11201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false), !dbg !11201
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %prop, align 8, !dbg !11202
  store i32 -1, i32* %index, align 4, !dbg !11203
  br label %if.end45, !dbg !11204

if.end45:                                         ; preds = %if.then44, %lor.lhs.false41
  br label %sw.epilog, !dbg !11205

sw.bb46:                                          ; preds = %if.end37
  %45 = load i8*, i8** %path.addr, align 8, !dbg !11206
  %46 = load i8, i8* %45, align 1, !dbg !11209
  %tobool47 = icmp ne i8 %46, 0, !dbg !11209
  br i1 %tobool47, label %if.then48, label %if.end54, !dbg !11210

if.then48:                                        ; preds = %sw.bb46
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %nextptr49, metadata !11211, metadata !DIExpression()), !dbg !11213
  %47 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11214
  %call50 = call zeroext i8 @rna_path_parse_collection_key(i8** %path.addr, %struct.PointerRNA* %curptr, %struct.PropertyRNA* %47, %struct.PointerRNA* %nextptr49), !dbg !11216
  %tobool51 = icmp ne i8 %call50, 0, !dbg !11216
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !11217

if.then52:                                        ; preds = %if.then48
  store i8 0, i8* %retval, align 1, !dbg !11218
  br label %return, !dbg !11218

if.end53:                                         ; preds = %if.then48
  %48 = bitcast %struct.PointerRNA* %curptr to i8*, !dbg !11219
  %49 = bitcast %struct.PointerRNA* %nextptr49 to i8*, !dbg !11219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false), !dbg !11219
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %prop, align 8, !dbg !11220
  store i32 -1, i32* %index, align 4, !dbg !11221
  br label %if.end54, !dbg !11222

if.end54:                                         ; preds = %if.end53, %sw.bb46
  br label %sw.epilog, !dbg !11223

sw.default:                                       ; preds = %if.end37
  %50 = load i32*, i32** %r_index.addr, align 8, !dbg !11224
  %tobool55 = icmp ne i32* %50, null, !dbg !11224
  br i1 %tobool55, label %if.then58, label %lor.lhs.false56, !dbg !11226

lor.lhs.false56:                                  ; preds = %sw.default
  %51 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11227
  %tobool57 = icmp ne %struct.PropertyElemRNA* %51, null, !dbg !11227
  br i1 %tobool57, label %if.then58, label %if.end67, !dbg !11228

if.then58:                                        ; preds = %lor.lhs.false56, %sw.default
  %52 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11229
  %call59 = call zeroext i8 @rna_path_parse_array_index(i8** %path.addr, %struct.PointerRNA* %curptr, %struct.PropertyRNA* %52, i32* %index), !dbg !11232
  %tobool60 = icmp ne i8 %call59, 0, !dbg !11232
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !11233

if.then61:                                        ; preds = %if.then58
  store i8 0, i8* %retval, align 1, !dbg !11234
  br label %return, !dbg !11234

if.end62:                                         ; preds = %if.then58
  %53 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11236
  %tobool63 = icmp ne %struct.PropertyElemRNA* %53, null, !dbg !11236
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !11238

if.then64:                                        ; preds = %if.end62
  %54 = load i32, i32* %index, align 4, !dbg !11239
  %55 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11241
  %index65 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %55, i32 0, i32 4, !dbg !11242
  store i32 %54, i32* %index65, align 8, !dbg !11243
  br label %if.end66, !dbg !11244

if.end66:                                         ; preds = %if.then64, %if.end62
  br label %if.end67, !dbg !11245

if.end67:                                         ; preds = %if.end66, %lor.lhs.false56
  br label %sw.epilog, !dbg !11246

sw.epilog:                                        ; preds = %if.end67, %if.end54, %if.end45
  br label %while.cond, !dbg !11101, !llvm.loop !11247

while.end:                                        ; preds = %while.cond
  %56 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !11249
  %tobool68 = icmp ne %struct.PointerRNA* %56, null, !dbg !11249
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !11251

if.then69:                                        ; preds = %while.end
  %57 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !11252
  %58 = bitcast %struct.PointerRNA* %57 to i8*, !dbg !11253
  %59 = bitcast %struct.PointerRNA* %curptr to i8*, !dbg !11253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false), !dbg !11253
  br label %if.end70, !dbg !11254

if.end70:                                         ; preds = %if.then69, %while.end
  %60 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !11255
  %tobool71 = icmp ne %struct.PropertyRNA** %60, null, !dbg !11255
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !11257

if.then72:                                        ; preds = %if.end70
  %61 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11258
  %62 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !11259
  store %struct.PropertyRNA* %61, %struct.PropertyRNA** %62, align 8, !dbg !11260
  br label %if.end73, !dbg !11261

if.end73:                                         ; preds = %if.then72, %if.end70
  %63 = load i32*, i32** %r_index.addr, align 8, !dbg !11262
  %tobool74 = icmp ne i32* %63, null, !dbg !11262
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !11264

if.then75:                                        ; preds = %if.end73
  %64 = load i32, i32* %index, align 4, !dbg !11265
  %65 = load i32*, i32** %r_index.addr, align 8, !dbg !11266
  store i32 %64, i32* %65, align 4, !dbg !11267
  br label %if.end76, !dbg !11268

if.end76:                                         ; preds = %if.then75, %if.end73
  %66 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11269
  %tobool77 = icmp ne %struct.PropertyElemRNA* %66, null, !dbg !11269
  br i1 %tobool77, label %land.lhs.true78, label %if.end98, !dbg !11271

land.lhs.true78:                                  ; preds = %if.end76
  %67 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11272
  %ptr79 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %67, i32 0, i32 2, !dbg !11273
  %data80 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr79, i32 0, i32 2, !dbg !11274
  %68 = load i8*, i8** %data80, align 8, !dbg !11274
  %data81 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %curptr, i32 0, i32 2, !dbg !11275
  %69 = load i8*, i8** %data81, align 8, !dbg !11275
  %cmp82 = icmp ne i8* %68, %69, !dbg !11276
  br i1 %cmp82, label %if.then92, label %lor.lhs.false84, !dbg !11277

lor.lhs.false84:                                  ; preds = %land.lhs.true78
  %70 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11278
  %prop85 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %70, i32 0, i32 3, !dbg !11279
  %71 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop85, align 8, !dbg !11279
  %72 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11280
  %cmp86 = icmp ne %struct.PropertyRNA* %71, %72, !dbg !11281
  br i1 %cmp86, label %if.then92, label %lor.lhs.false88, !dbg !11282

lor.lhs.false88:                                  ; preds = %lor.lhs.false84
  %73 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !11283
  %index89 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %73, i32 0, i32 4, !dbg !11284
  %74 = load i32, i32* %index89, align 8, !dbg !11284
  %75 = load i32, i32* %index, align 4, !dbg !11285
  %cmp90 = icmp ne i32 %74, %75, !dbg !11286
  br i1 %cmp90, label %if.then92, label %if.end98, !dbg !11287

if.then92:                                        ; preds = %lor.lhs.false88, %lor.lhs.false84, %land.lhs.true78
  call void @llvm.dbg.declare(metadata %struct.PropertyElemRNA** %prop_elem93, metadata !11288, metadata !DIExpression()), !dbg !11290
  %76 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11291
  %call94 = call i8* %76(i64 56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.rna_path_parse, i64 0, i64 0)), !dbg !11291
  %77 = bitcast i8* %call94 to %struct.PropertyElemRNA*, !dbg !11291
  store %struct.PropertyElemRNA* %77, %struct.PropertyElemRNA** %prop_elem93, align 8, !dbg !11290
  %78 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem93, align 8, !dbg !11292
  %ptr95 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %78, i32 0, i32 2, !dbg !11293
  %79 = bitcast %struct.PointerRNA* %ptr95 to i8*, !dbg !11294
  %80 = bitcast %struct.PointerRNA* %curptr to i8*, !dbg !11294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false), !dbg !11294
  %81 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11295
  %82 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem93, align 8, !dbg !11296
  %prop96 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %82, i32 0, i32 3, !dbg !11297
  store %struct.PropertyRNA* %81, %struct.PropertyRNA** %prop96, align 8, !dbg !11298
  %83 = load i32, i32* %index, align 4, !dbg !11299
  %84 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem93, align 8, !dbg !11300
  %index97 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %84, i32 0, i32 4, !dbg !11301
  store i32 %83, i32* %index97, align 8, !dbg !11302
  %85 = load %struct.ListBase*, %struct.ListBase** %r_elements.addr, align 8, !dbg !11303
  %86 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem93, align 8, !dbg !11304
  %87 = bitcast %struct.PropertyElemRNA* %86 to i8*, !dbg !11304
  call void @BLI_addtail(%struct.ListBase* %85, i8* %87), !dbg !11305
  br label %if.end98, !dbg !11306

if.end98:                                         ; preds = %if.then92, %lor.lhs.false88, %if.end76
  store i8 1, i8* %retval, align 1, !dbg !11307
  br label %return, !dbg !11307

return:                                           ; preds = %if.end98, %if.then61, %if.then52, %if.then29, %if.then10, %if.then7, %if.then
  %88 = load i8, i8* %retval, align 1, !dbg !11308
  ret i8 %88, !dbg !11308
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_path_resolve_full(%struct.PointerRNA* %ptr, i8* %path, %struct.PointerRNA* %r_ptr, %struct.PropertyRNA** %r_prop, i32* %r_index) #0 !dbg !11309 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %path.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %r_prop.addr = alloca %struct.PropertyRNA**, align 8
  %r_index.addr = alloca i32*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11312, metadata !DIExpression()), !dbg !11313
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !11314, metadata !DIExpression()), !dbg !11315
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !11316, metadata !DIExpression()), !dbg !11317
  store %struct.PropertyRNA** %r_prop, %struct.PropertyRNA*** %r_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %r_prop.addr, metadata !11318, metadata !DIExpression()), !dbg !11319
  store i32* %r_index, i32** %r_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_index.addr, metadata !11320, metadata !DIExpression()), !dbg !11321
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11322
  %1 = load i8*, i8** %path.addr, align 8, !dbg !11324
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !11325
  %3 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !11326
  %4 = load i32*, i32** %r_index.addr, align 8, !dbg !11327
  %call = call zeroext i8 @rna_path_parse(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2, %struct.PropertyRNA** %3, i32* %4, %struct.ListBase* null, i8 zeroext 1), !dbg !11328
  %tobool = icmp ne i8 %call, 0, !dbg !11328
  br i1 %tobool, label %if.end, label %if.then, !dbg !11329

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !11330
  br label %return, !dbg !11330

if.end:                                           ; preds = %entry
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !11331
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 2, !dbg !11332
  %6 = load i8*, i8** %data, align 8, !dbg !11332
  %cmp = icmp ne i8* %6, null, !dbg !11333
  %conv = zext i1 %cmp to i32, !dbg !11333
  %conv1 = trunc i32 %conv to i8, !dbg !11331
  store i8 %conv1, i8* %retval, align 1, !dbg !11334
  br label %return, !dbg !11334

return:                                           ; preds = %if.end, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11335
  ret i8 %7, !dbg !11335
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_path_resolve_property(%struct.PointerRNA* %ptr, i8* %path, %struct.PointerRNA* %r_ptr, %struct.PropertyRNA** %r_prop) #0 !dbg !11336 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %path.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %r_prop.addr = alloca %struct.PropertyRNA**, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11337, metadata !DIExpression()), !dbg !11338
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !11339, metadata !DIExpression()), !dbg !11340
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !11341, metadata !DIExpression()), !dbg !11342
  store %struct.PropertyRNA** %r_prop, %struct.PropertyRNA*** %r_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %r_prop.addr, metadata !11343, metadata !DIExpression()), !dbg !11344
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11345
  %1 = load i8*, i8** %path.addr, align 8, !dbg !11347
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !11348
  %3 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !11349
  %call = call zeroext i8 @rna_path_parse(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2, %struct.PropertyRNA** %3, i32* null, %struct.ListBase* null, i8 zeroext 0), !dbg !11350
  %tobool = icmp ne i8 %call, 0, !dbg !11350
  br i1 %tobool, label %if.end, label %if.then, !dbg !11351

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !11352
  br label %return, !dbg !11352

if.end:                                           ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !11353
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 2, !dbg !11354
  %5 = load i8*, i8** %data, align 8, !dbg !11354
  %cmp = icmp ne i8* %5, null, !dbg !11355
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11356

land.rhs:                                         ; preds = %if.end
  %6 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !11357
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %6, align 8, !dbg !11358
  %cmp1 = icmp ne %struct.PropertyRNA* %7, null, !dbg !11359
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %8 = phi i1 [ false, %if.end ], [ %cmp1, %land.rhs ], !dbg !11360
  %land.ext = zext i1 %8 to i32, !dbg !11356
  %conv = trunc i32 %land.ext to i8, !dbg !11353
  store i8 %conv, i8* %retval, align 1, !dbg !11361
  br label %return, !dbg !11361

return:                                           ; preds = %land.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !11362
  ret i8 %9, !dbg !11362
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_path_resolve_property_full(%struct.PointerRNA* %ptr, i8* %path, %struct.PointerRNA* %r_ptr, %struct.PropertyRNA** %r_prop, i32* %r_index) #0 !dbg !11363 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %path.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %r_prop.addr = alloca %struct.PropertyRNA**, align 8
  %r_index.addr = alloca i32*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11364, metadata !DIExpression()), !dbg !11365
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !11366, metadata !DIExpression()), !dbg !11367
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !11368, metadata !DIExpression()), !dbg !11369
  store %struct.PropertyRNA** %r_prop, %struct.PropertyRNA*** %r_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %r_prop.addr, metadata !11370, metadata !DIExpression()), !dbg !11371
  store i32* %r_index, i32** %r_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_index.addr, metadata !11372, metadata !DIExpression()), !dbg !11373
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11374
  %1 = load i8*, i8** %path.addr, align 8, !dbg !11376
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !11377
  %3 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !11378
  %4 = load i32*, i32** %r_index.addr, align 8, !dbg !11379
  %call = call zeroext i8 @rna_path_parse(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2, %struct.PropertyRNA** %3, i32* %4, %struct.ListBase* null, i8 zeroext 0), !dbg !11380
  %tobool = icmp ne i8 %call, 0, !dbg !11380
  br i1 %tobool, label %if.end, label %if.then, !dbg !11381

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !11382
  br label %return, !dbg !11382

if.end:                                           ; preds = %entry
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !11383
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 2, !dbg !11384
  %6 = load i8*, i8** %data, align 8, !dbg !11384
  %cmp = icmp ne i8* %6, null, !dbg !11385
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11386

land.rhs:                                         ; preds = %if.end
  %7 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !11387
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %7, align 8, !dbg !11388
  %cmp1 = icmp ne %struct.PropertyRNA* %8, null, !dbg !11389
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %9 = phi i1 [ false, %if.end ], [ %cmp1, %land.rhs ], !dbg !11390
  %land.ext = zext i1 %9 to i32, !dbg !11386
  %conv = trunc i32 %land.ext to i8, !dbg !11383
  store i8 %conv, i8* %retval, align 1, !dbg !11391
  br label %return, !dbg !11391

return:                                           ; preds = %land.end, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !11392
  ret i8 %10, !dbg !11392
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_path_resolve_elements(%struct.PointerRNA* %ptr, i8* %path, %struct.ListBase* %r_elements) #0 !dbg !11393 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %path.addr = alloca i8*, align 8
  %r_elements.addr = alloca %struct.ListBase*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11396, metadata !DIExpression()), !dbg !11397
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !11398, metadata !DIExpression()), !dbg !11399
  store %struct.ListBase* %r_elements, %struct.ListBase** %r_elements.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %r_elements.addr, metadata !11400, metadata !DIExpression()), !dbg !11401
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11402
  %1 = load i8*, i8** %path.addr, align 8, !dbg !11403
  %2 = load %struct.ListBase*, %struct.ListBase** %r_elements.addr, align 8, !dbg !11404
  %call = call zeroext i8 @rna_path_parse(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* null, %struct.PropertyRNA** null, i32* null, %struct.ListBase* %2, i8 zeroext 0), !dbg !11405
  ret i8 %call, !dbg !11406
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_append(i8* %path, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop, i32 %intkey, i8* %strkey) #0 !dbg !11407 {
entry:
  %path.addr = alloca i8*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %intkey.addr = alloca i32, align 4
  %strkey.addr = alloca i8*, align 8
  %dynstr = alloca %struct.DynStr*, align 8
  %s = alloca i8*, align 8
  %appendstr = alloca [128 x i8], align 16
  %result = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !11410, metadata !DIExpression()), !dbg !11411
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !11414, metadata !DIExpression()), !dbg !11415
  store i32 %intkey, i32* %intkey.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intkey.addr, metadata !11416, metadata !DIExpression()), !dbg !11417
  store i8* %strkey, i8** %strkey.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %strkey.addr, metadata !11418, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.declare(metadata %struct.DynStr** %dynstr, metadata !11420, metadata !DIExpression()), !dbg !11425
  call void @llvm.dbg.declare(metadata i8** %s, metadata !11426, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.declare(metadata [128 x i8]* %appendstr, metadata !11428, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.declare(metadata i8** %result, metadata !11430, metadata !DIExpression()), !dbg !11431
  %call = call %struct.DynStr* @BLI_dynstr_new(), !dbg !11432
  store %struct.DynStr* %call, %struct.DynStr** %dynstr, align 8, !dbg !11433
  %0 = load i8*, i8** %path.addr, align 8, !dbg !11434
  %tobool = icmp ne i8* %0, null, !dbg !11434
  br i1 %tobool, label %if.then, label %if.end3, !dbg !11436

if.then:                                          ; preds = %entry
  %1 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11437
  %2 = load i8*, i8** %path.addr, align 8, !dbg !11439
  call void @BLI_dynstr_append(%struct.DynStr* %1, i8* %2), !dbg !11440
  %3 = load i8*, i8** %path.addr, align 8, !dbg !11441
  %4 = load i8, i8* %3, align 1, !dbg !11443
  %tobool1 = icmp ne i8 %4, 0, !dbg !11443
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !11444

if.then2:                                         ; preds = %if.then
  %5 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11445
  call void @BLI_dynstr_append(%struct.DynStr* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)), !dbg !11446
  br label %if.end, !dbg !11446

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !11447

if.end3:                                          ; preds = %if.end, %entry
  %6 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11448
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11449
  %call4 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %7), !dbg !11450
  call void @BLI_dynstr_append(%struct.DynStr* %6, i8* %call4), !dbg !11451
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11452
  %call5 = call i32 @RNA_property_type(%struct.PropertyRNA* %8), !dbg !11454
  %cmp = icmp eq i32 %call5, 6, !dbg !11455
  br i1 %cmp, label %if.then6, label %if.end23, !dbg !11456

if.then6:                                         ; preds = %if.end3
  %9 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11457
  call void @BLI_dynstr_append(%struct.DynStr* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)), !dbg !11459
  %10 = load i8*, i8** %strkey.addr, align 8, !dbg !11460
  %tobool7 = icmp ne i8* %10, null, !dbg !11460
  br i1 %tobool7, label %if.then8, label %if.else18, !dbg !11462

if.then8:                                         ; preds = %if.then6
  %11 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11463
  call void @BLI_dynstr_append(%struct.DynStr* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)), !dbg !11465
  %12 = load i8*, i8** %strkey.addr, align 8, !dbg !11466
  store i8* %12, i8** %s, align 8, !dbg !11468
  br label %for.cond, !dbg !11469

for.cond:                                         ; preds = %for.inc, %if.then8
  %13 = load i8*, i8** %s, align 8, !dbg !11470
  %14 = load i8, i8* %13, align 1, !dbg !11472
  %tobool9 = icmp ne i8 %14, 0, !dbg !11473
  br i1 %tobool9, label %for.body, label %for.end, !dbg !11473

for.body:                                         ; preds = %for.cond
  %15 = load i8*, i8** %s, align 8, !dbg !11474
  %16 = load i8, i8* %15, align 1, !dbg !11477
  %conv = zext i8 %16 to i32, !dbg !11477
  %cmp10 = icmp eq i32 %conv, 91, !dbg !11478
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !11479

if.then12:                                        ; preds = %for.body
  %arrayidx = getelementptr inbounds [128 x i8], [128 x i8]* %appendstr, i64 0, i64 0, !dbg !11480
  store i8 92, i8* %arrayidx, align 16, !dbg !11482
  %17 = load i8*, i8** %s, align 8, !dbg !11483
  %18 = load i8, i8* %17, align 1, !dbg !11484
  %arrayidx13 = getelementptr inbounds [128 x i8], [128 x i8]* %appendstr, i64 0, i64 1, !dbg !11485
  store i8 %18, i8* %arrayidx13, align 1, !dbg !11486
  %arrayidx14 = getelementptr inbounds [128 x i8], [128 x i8]* %appendstr, i64 0, i64 2, !dbg !11487
  store i8 0, i8* %arrayidx14, align 2, !dbg !11488
  br label %if.end17, !dbg !11489

if.else:                                          ; preds = %for.body
  %19 = load i8*, i8** %s, align 8, !dbg !11490
  %20 = load i8, i8* %19, align 1, !dbg !11492
  %arrayidx15 = getelementptr inbounds [128 x i8], [128 x i8]* %appendstr, i64 0, i64 0, !dbg !11493
  store i8 %20, i8* %arrayidx15, align 16, !dbg !11494
  %arrayidx16 = getelementptr inbounds [128 x i8], [128 x i8]* %appendstr, i64 0, i64 1, !dbg !11495
  store i8 0, i8* %arrayidx16, align 1, !dbg !11496
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then12
  %21 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11497
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %appendstr, i64 0, i64 0, !dbg !11498
  call void @BLI_dynstr_append(%struct.DynStr* %21, i8* %arraydecay), !dbg !11499
  br label %for.inc, !dbg !11500

for.inc:                                          ; preds = %if.end17
  %22 = load i8*, i8** %s, align 8, !dbg !11501
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !11501
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !11501
  br label %for.cond, !dbg !11502, !llvm.loop !11503

for.end:                                          ; preds = %for.cond
  %23 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11505
  call void @BLI_dynstr_append(%struct.DynStr* %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0)), !dbg !11506
  br label %if.end22, !dbg !11507

if.else18:                                        ; preds = %if.then6
  %arraydecay19 = getelementptr inbounds [128 x i8], [128 x i8]* %appendstr, i64 0, i64 0, !dbg !11508
  %24 = load i32, i32* %intkey.addr, align 4, !dbg !11510
  %call20 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay19, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i32 %24), !dbg !11511
  %25 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11512
  %arraydecay21 = getelementptr inbounds [128 x i8], [128 x i8]* %appendstr, i64 0, i64 0, !dbg !11513
  call void @BLI_dynstr_append(%struct.DynStr* %25, i8* %arraydecay21), !dbg !11514
  br label %if.end22

if.end22:                                         ; preds = %if.else18, %for.end
  %26 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11515
  call void @BLI_dynstr_append(%struct.DynStr* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)), !dbg !11516
  br label %if.end23, !dbg !11517

if.end23:                                         ; preds = %if.end22, %if.end3
  %27 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11518
  %call24 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %27), !dbg !11519
  store i8* %call24, i8** %result, align 8, !dbg !11520
  %28 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !11521
  call void @BLI_dynstr_free(%struct.DynStr* %28), !dbg !11522
  %29 = load i8*, i8** %result, align 8, !dbg !11523
  ret i8* %29, !dbg !11524
}

declare dso_local %struct.DynStr* @BLI_dynstr_new() #2

declare dso_local void @BLI_dynstr_append(%struct.DynStr*, i8*) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local i8* @BLI_dynstr_get_cstring(%struct.DynStr*) #2

declare dso_local void @BLI_dynstr_free(%struct.DynStr*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_back(i8* %path) #0 !dbg !11525 {
entry:
  %retval = alloca i8*, align 8
  %path.addr = alloca i8*, align 8
  %fixedbuf = alloca [256 x i8], align 16
  %previous = alloca i8*, align 8
  %current = alloca i8*, align 8
  %result = alloca i8*, align 8
  %i = alloca i32, align 4
  %token = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !11528, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.declare(metadata [256 x i8]* %fixedbuf, metadata !11530, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.declare(metadata i8** %previous, metadata !11532, metadata !DIExpression()), !dbg !11533
  call void @llvm.dbg.declare(metadata i8** %current, metadata !11534, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.declare(metadata i8** %result, metadata !11536, metadata !DIExpression()), !dbg !11537
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11538, metadata !DIExpression()), !dbg !11539
  %0 = load i8*, i8** %path.addr, align 8, !dbg !11540
  %tobool = icmp ne i8* %0, null, !dbg !11540
  br i1 %tobool, label %if.end, label %if.then, !dbg !11542

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11543
  br label %return, !dbg !11543

if.end:                                           ; preds = %entry
  store i8* null, i8** %previous, align 8, !dbg !11544
  %1 = load i8*, i8** %path.addr, align 8, !dbg !11545
  store i8* %1, i8** %current, align 8, !dbg !11546
  br label %while.cond, !dbg !11547

while.cond:                                       ; preds = %if.end17, %if.end
  %2 = load i8*, i8** %current, align 8, !dbg !11548
  %3 = load i8, i8* %2, align 1, !dbg !11549
  %tobool1 = icmp ne i8 %3, 0, !dbg !11547
  br i1 %tobool1, label %while.body, label %while.end, !dbg !11547

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %token, metadata !11550, metadata !DIExpression()), !dbg !11552
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !11553
  %call = call i8* @rna_path_token(i8** %current, i8* %arraydecay, i32 256, i32 0), !dbg !11554
  store i8* %call, i8** %token, align 8, !dbg !11555
  %4 = load i8*, i8** %token, align 8, !dbg !11556
  %tobool2 = icmp ne i8* %4, null, !dbg !11556
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !11558

if.then3:                                         ; preds = %while.body
  store i8* null, i8** %retval, align 8, !dbg !11559
  br label %return, !dbg !11559

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %token, align 8, !dbg !11560
  %arraydecay5 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !11562
  %cmp = icmp ne i8* %5, %arraydecay5, !dbg !11563
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !11564

if.then6:                                         ; preds = %if.end4
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11565
  %7 = load i8*, i8** %token, align 8, !dbg !11566
  call void %6(i8* %7), !dbg !11565
  br label %if.end7, !dbg !11565

if.end7:                                          ; preds = %if.then6, %if.end4
  %arraydecay8 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !11567
  %call9 = call i8* @rna_path_token(i8** %current, i8* %arraydecay8, i32 256, i32 1), !dbg !11568
  store i8* %call9, i8** %token, align 8, !dbg !11569
  %8 = load i8*, i8** %token, align 8, !dbg !11570
  %tobool10 = icmp ne i8* %8, null, !dbg !11570
  br i1 %tobool10, label %land.lhs.true, label %if.end14, !dbg !11572

land.lhs.true:                                    ; preds = %if.end7
  %9 = load i8*, i8** %token, align 8, !dbg !11573
  %arraydecay11 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !11574
  %cmp12 = icmp ne i8* %9, %arraydecay11, !dbg !11575
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !11576

if.then13:                                        ; preds = %land.lhs.true
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11577
  %11 = load i8*, i8** %token, align 8, !dbg !11578
  call void %10(i8* %11), !dbg !11577
  br label %if.end14, !dbg !11577

if.end14:                                         ; preds = %if.then13, %land.lhs.true, %if.end7
  %12 = load i8*, i8** %current, align 8, !dbg !11579
  %13 = load i8, i8* %12, align 1, !dbg !11581
  %tobool15 = icmp ne i8 %13, 0, !dbg !11581
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11582

if.then16:                                        ; preds = %if.end14
  br label %while.end, !dbg !11583

if.end17:                                         ; preds = %if.end14
  %14 = load i8*, i8** %current, align 8, !dbg !11584
  store i8* %14, i8** %previous, align 8, !dbg !11585
  br label %while.cond, !dbg !11547, !llvm.loop !11586

while.end:                                        ; preds = %if.then16, %while.cond
  %15 = load i8*, i8** %previous, align 8, !dbg !11588
  %tobool18 = icmp ne i8* %15, null, !dbg !11588
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !11590

if.then19:                                        ; preds = %while.end
  store i8* null, i8** %retval, align 8, !dbg !11591
  br label %return, !dbg !11591

if.end20:                                         ; preds = %while.end
  %16 = load i8*, i8** %previous, align 8, !dbg !11592
  %17 = load i8*, i8** %path.addr, align 8, !dbg !11593
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !11594
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64, !dbg !11594
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11594
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !11592
  store i32 %conv, i32* %i, align 4, !dbg !11595
  %18 = load i8*, i8** %path.addr, align 8, !dbg !11596
  %call21 = call i8* @BLI_strdup(i8* %18), !dbg !11597
  store i8* %call21, i8** %result, align 8, !dbg !11598
  %19 = load i32, i32* %i, align 4, !dbg !11599
  %cmp22 = icmp sgt i32 %19, 0, !dbg !11601
  br i1 %cmp22, label %land.lhs.true24, label %if.end29, !dbg !11602

land.lhs.true24:                                  ; preds = %if.end20
  %20 = load i8*, i8** %result, align 8, !dbg !11603
  %21 = load i32, i32* %i, align 4, !dbg !11604
  %sub = sub nsw i32 %21, 1, !dbg !11605
  %idxprom = sext i32 %sub to i64, !dbg !11603
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 %idxprom, !dbg !11603
  %22 = load i8, i8* %arrayidx, align 1, !dbg !11603
  %conv25 = zext i8 %22 to i32, !dbg !11603
  %cmp26 = icmp eq i32 %conv25, 46, !dbg !11606
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !11607

if.then28:                                        ; preds = %land.lhs.true24
  %23 = load i32, i32* %i, align 4, !dbg !11608
  %dec = add nsw i32 %23, -1, !dbg !11608
  store i32 %dec, i32* %i, align 4, !dbg !11608
  br label %if.end29, !dbg !11609

if.end29:                                         ; preds = %if.then28, %land.lhs.true24, %if.end20
  %24 = load i8*, i8** %result, align 8, !dbg !11610
  %25 = load i32, i32* %i, align 4, !dbg !11611
  %idxprom30 = sext i32 %25 to i64, !dbg !11610
  %arrayidx31 = getelementptr inbounds i8, i8* %24, i64 %idxprom30, !dbg !11610
  store i8 0, i8* %arrayidx31, align 1, !dbg !11612
  %26 = load i8*, i8** %result, align 8, !dbg !11613
  store i8* %26, i8** %retval, align 8, !dbg !11614
  br label %return, !dbg !11614

return:                                           ; preds = %if.end29, %if.then19, %if.then3, %if.then
  %27 = load i8*, i8** %retval, align 8, !dbg !11615
  ret i8* %27, !dbg !11615
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_path_token(i8** %path, i8* %fixedbuf, i32 %fixedlen, i32 %bracket) #0 !dbg !11616 {
entry:
  %retval = alloca i8*, align 8
  %path.addr = alloca i8**, align 8
  %fixedbuf.addr = alloca i8*, align 8
  %fixedlen.addr = alloca i32, align 4
  %bracket.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %quote = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %len = alloca i32, align 4
  %escape = alloca i32, align 4
  store i8** %path, i8*** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %path.addr, metadata !11619, metadata !DIExpression()), !dbg !11620
  store i8* %fixedbuf, i8** %fixedbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fixedbuf.addr, metadata !11621, metadata !DIExpression()), !dbg !11622
  store i32 %fixedlen, i32* %fixedlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fixedlen.addr, metadata !11623, metadata !DIExpression()), !dbg !11624
  store i32 %bracket, i32* %bracket.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bracket.addr, metadata !11625, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11627, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !11629, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.declare(metadata i8* %quote, metadata !11631, metadata !DIExpression()), !dbg !11632
  store i8 0, i8* %quote, align 1, !dbg !11632
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11633, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11635, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11637, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.declare(metadata i32* %escape, metadata !11639, metadata !DIExpression()), !dbg !11640
  store i32 0, i32* %len, align 4, !dbg !11641
  %0 = load i32, i32* %bracket.addr, align 4, !dbg !11642
  %tobool = icmp ne i32 %0, 0, !dbg !11642
  br i1 %tobool, label %if.then, label %if.else46, !dbg !11644

if.then:                                          ; preds = %entry
  %1 = load i8**, i8*** %path.addr, align 8, !dbg !11645
  %2 = load i8*, i8** %1, align 8, !dbg !11648
  %3 = load i8, i8* %2, align 1, !dbg !11649
  %conv = zext i8 %3 to i32, !dbg !11649
  %cmp = icmp eq i32 %conv, 91, !dbg !11650
  br i1 %cmp, label %if.then2, label %if.else, !dbg !11651

if.then2:                                         ; preds = %if.then
  %4 = load i8**, i8*** %path.addr, align 8, !dbg !11652
  %5 = load i8*, i8** %4, align 8, !dbg !11653
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11653
  store i8* %incdec.ptr, i8** %4, align 8, !dbg !11653
  br label %if.end, !dbg !11654

if.else:                                          ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !11655
  br label %return, !dbg !11655

if.end:                                           ; preds = %if.then2
  %6 = load i8**, i8*** %path.addr, align 8, !dbg !11656
  %7 = load i8*, i8** %6, align 8, !dbg !11657
  store i8* %7, i8** %p, align 8, !dbg !11658
  %8 = load i8*, i8** %p, align 8, !dbg !11659
  %9 = load i8, i8* %8, align 1, !dbg !11660
  store i8 %9, i8* %quote, align 1, !dbg !11661
  %10 = load i8, i8* %quote, align 1, !dbg !11662
  %conv3 = zext i8 %10 to i32, !dbg !11662
  %cmp4 = icmp ne i32 %conv3, 34, !dbg !11664
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !11665

if.then6:                                         ; preds = %if.end
  store i8 0, i8* %quote, align 1, !dbg !11666
  br label %if.end7, !dbg !11667

if.end7:                                          ; preds = %if.then6, %if.end
  %11 = load i8, i8* %quote, align 1, !dbg !11668
  %conv8 = zext i8 %11 to i32, !dbg !11668
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !11670
  br i1 %cmp9, label %if.then11, label %if.else18, !dbg !11671

if.then11:                                        ; preds = %if.end7
  br label %while.cond, !dbg !11672

while.cond:                                       ; preds = %while.body, %if.then11
  %12 = load i8*, i8** %p, align 8, !dbg !11674
  %13 = load i8, i8* %12, align 1, !dbg !11675
  %conv12 = zext i8 %13 to i32, !dbg !11675
  %tobool13 = icmp ne i32 %conv12, 0, !dbg !11675
  br i1 %tobool13, label %land.rhs, label %land.end, !dbg !11676

land.rhs:                                         ; preds = %while.cond
  %14 = load i8*, i8** %p, align 8, !dbg !11677
  %15 = load i8, i8* %14, align 1, !dbg !11678
  %conv14 = zext i8 %15 to i32, !dbg !11678
  %cmp15 = icmp ne i32 %conv14, 93, !dbg !11679
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %cmp15, %land.rhs ], !dbg !11680
  br i1 %16, label %while.body, label %while.end, !dbg !11672

while.body:                                       ; preds = %land.end
  %17 = load i32, i32* %len, align 4, !dbg !11681
  %inc = add nsw i32 %17, 1, !dbg !11681
  store i32 %inc, i32* %len, align 4, !dbg !11681
  %18 = load i8*, i8** %p, align 8, !dbg !11683
  %incdec.ptr17 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !11683
  store i8* %incdec.ptr17, i8** %p, align 8, !dbg !11683
  br label %while.cond, !dbg !11672, !llvm.loop !11684

while.end:                                        ; preds = %land.end
  br label %if.end40, !dbg !11686

if.else18:                                        ; preds = %if.end7
  store i32 0, i32* %escape, align 4, !dbg !11687
  %19 = load i32, i32* %len, align 4, !dbg !11689
  %inc19 = add nsw i32 %19, 1, !dbg !11689
  store i32 %inc19, i32* %len, align 4, !dbg !11689
  %20 = load i8*, i8** %p, align 8, !dbg !11690
  %incdec.ptr20 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !11690
  store i8* %incdec.ptr20, i8** %p, align 8, !dbg !11690
  br label %while.cond21, !dbg !11691

while.cond21:                                     ; preds = %while.body31, %if.else18
  %21 = load i8*, i8** %p, align 8, !dbg !11692
  %22 = load i8, i8* %21, align 1, !dbg !11693
  %conv22 = zext i8 %22 to i32, !dbg !11693
  %tobool23 = icmp ne i32 %conv22, 0, !dbg !11693
  br i1 %tobool23, label %land.rhs24, label %land.end30, !dbg !11694

land.rhs24:                                       ; preds = %while.cond21
  %23 = load i8*, i8** %p, align 8, !dbg !11695
  %24 = load i8, i8* %23, align 1, !dbg !11696
  %conv25 = zext i8 %24 to i32, !dbg !11696
  %25 = load i8, i8* %quote, align 1, !dbg !11697
  %conv26 = zext i8 %25 to i32, !dbg !11697
  %cmp27 = icmp ne i32 %conv25, %conv26, !dbg !11698
  br i1 %cmp27, label %lor.end, label %lor.rhs, !dbg !11699

lor.rhs:                                          ; preds = %land.rhs24
  %26 = load i32, i32* %escape, align 4, !dbg !11700
  %tobool29 = icmp ne i32 %26, 0, !dbg !11699
  br label %lor.end, !dbg !11699

lor.end:                                          ; preds = %lor.rhs, %land.rhs24
  %27 = phi i1 [ true, %land.rhs24 ], [ %tobool29, %lor.rhs ]
  br label %land.end30

land.end30:                                       ; preds = %lor.end, %while.cond21
  %28 = phi i1 [ false, %while.cond21 ], [ %27, %lor.end ], !dbg !11701
  br i1 %28, label %while.body31, label %while.end37, !dbg !11691

while.body31:                                     ; preds = %land.end30
  %29 = load i8*, i8** %p, align 8, !dbg !11702
  %30 = load i8, i8* %29, align 1, !dbg !11704
  %conv32 = zext i8 %30 to i32, !dbg !11704
  %cmp33 = icmp eq i32 %conv32, 92, !dbg !11705
  %conv34 = zext i1 %cmp33 to i32, !dbg !11705
  store i32 %conv34, i32* %escape, align 4, !dbg !11706
  %31 = load i32, i32* %len, align 4, !dbg !11707
  %inc35 = add nsw i32 %31, 1, !dbg !11707
  store i32 %inc35, i32* %len, align 4, !dbg !11707
  %32 = load i8*, i8** %p, align 8, !dbg !11708
  %incdec.ptr36 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !11708
  store i8* %incdec.ptr36, i8** %p, align 8, !dbg !11708
  br label %while.cond21, !dbg !11691, !llvm.loop !11709

while.end37:                                      ; preds = %land.end30
  %33 = load i32, i32* %len, align 4, !dbg !11711
  %inc38 = add nsw i32 %33, 1, !dbg !11711
  store i32 %inc38, i32* %len, align 4, !dbg !11711
  %34 = load i8*, i8** %p, align 8, !dbg !11712
  %incdec.ptr39 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !11712
  store i8* %incdec.ptr39, i8** %p, align 8, !dbg !11712
  br label %if.end40

if.end40:                                         ; preds = %while.end37, %while.end
  %35 = load i8*, i8** %p, align 8, !dbg !11713
  %36 = load i8, i8* %35, align 1, !dbg !11715
  %conv41 = zext i8 %36 to i32, !dbg !11715
  %cmp42 = icmp ne i32 %conv41, 93, !dbg !11716
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !11717

if.then44:                                        ; preds = %if.end40
  store i8* null, i8** %retval, align 8, !dbg !11718
  br label %return, !dbg !11718

if.end45:                                         ; preds = %if.end40
  br label %if.end62, !dbg !11719

if.else46:                                        ; preds = %entry
  %37 = load i8**, i8*** %path.addr, align 8, !dbg !11720
  %38 = load i8*, i8** %37, align 8, !dbg !11722
  store i8* %38, i8** %p, align 8, !dbg !11723
  br label %while.cond47, !dbg !11724

while.cond47:                                     ; preds = %while.body58, %if.else46
  %39 = load i8*, i8** %p, align 8, !dbg !11725
  %40 = load i8, i8* %39, align 1, !dbg !11726
  %conv48 = zext i8 %40 to i32, !dbg !11726
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !11726
  br i1 %tobool49, label %land.lhs.true, label %land.end57, !dbg !11727

land.lhs.true:                                    ; preds = %while.cond47
  %41 = load i8*, i8** %p, align 8, !dbg !11728
  %42 = load i8, i8* %41, align 1, !dbg !11729
  %conv50 = zext i8 %42 to i32, !dbg !11729
  %cmp51 = icmp ne i32 %conv50, 46, !dbg !11730
  br i1 %cmp51, label %land.rhs53, label %land.end57, !dbg !11731

land.rhs53:                                       ; preds = %land.lhs.true
  %43 = load i8*, i8** %p, align 8, !dbg !11732
  %44 = load i8, i8* %43, align 1, !dbg !11733
  %conv54 = zext i8 %44 to i32, !dbg !11733
  %cmp55 = icmp ne i32 %conv54, 91, !dbg !11734
  br label %land.end57

land.end57:                                       ; preds = %land.rhs53, %land.lhs.true, %while.cond47
  %45 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond47 ], [ %cmp55, %land.rhs53 ], !dbg !11735
  br i1 %45, label %while.body58, label %while.end61, !dbg !11724

while.body58:                                     ; preds = %land.end57
  %46 = load i32, i32* %len, align 4, !dbg !11736
  %inc59 = add nsw i32 %46, 1, !dbg !11736
  store i32 %inc59, i32* %len, align 4, !dbg !11736
  %47 = load i8*, i8** %p, align 8, !dbg !11738
  %incdec.ptr60 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !11738
  store i8* %incdec.ptr60, i8** %p, align 8, !dbg !11738
  br label %while.cond47, !dbg !11724, !llvm.loop !11739

while.end61:                                      ; preds = %land.end57
  br label %if.end62

if.end62:                                         ; preds = %while.end61, %if.end45
  %48 = load i32, i32* %len, align 4, !dbg !11741
  %cmp63 = icmp eq i32 %48, 0, !dbg !11743
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !11744

if.then65:                                        ; preds = %if.end62
  store i8* null, i8** %retval, align 8, !dbg !11745
  br label %return, !dbg !11745

if.end66:                                         ; preds = %if.end62
  %49 = load i32, i32* %len, align 4, !dbg !11746
  %add = add nsw i32 %49, 1, !dbg !11748
  %50 = load i32, i32* %fixedlen.addr, align 4, !dbg !11749
  %cmp67 = icmp slt i32 %add, %50, !dbg !11750
  br i1 %cmp67, label %if.then69, label %if.else70, !dbg !11751

if.then69:                                        ; preds = %if.end66
  %51 = load i8*, i8** %fixedbuf.addr, align 8, !dbg !11752
  store i8* %51, i8** %buf, align 8, !dbg !11753
  br label %if.end73, !dbg !11754

if.else70:                                        ; preds = %if.end66
  %52 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11755
  %53 = load i32, i32* %len, align 4, !dbg !11756
  %add71 = add nsw i32 %53, 1, !dbg !11757
  %conv72 = sext i32 %add71 to i64, !dbg !11758
  %mul = mul i64 1, %conv72, !dbg !11759
  %call = call i8* %52(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.83, i64 0, i64 0)), !dbg !11755
  store i8* %call, i8** %buf, align 8, !dbg !11760
  br label %if.end73

if.end73:                                         ; preds = %if.else70, %if.then69
  %54 = load i32, i32* %bracket.addr, align 4, !dbg !11761
  %tobool74 = icmp ne i32 %54, 0, !dbg !11761
  br i1 %tobool74, label %if.then75, label %if.else94, !dbg !11763

if.then75:                                        ; preds = %if.end73
  %55 = load i8**, i8*** %path.addr, align 8, !dbg !11764
  %56 = load i8*, i8** %55, align 8, !dbg !11767
  store i8* %56, i8** %p, align 8, !dbg !11768
  store i32 0, i32* %i, align 4, !dbg !11769
  store i32 0, i32* %j, align 4, !dbg !11770
  br label %for.cond, !dbg !11771

for.cond:                                         ; preds = %for.inc, %if.then75
  %57 = load i32, i32* %i, align 4, !dbg !11772
  %58 = load i32, i32* %len, align 4, !dbg !11774
  %cmp76 = icmp slt i32 %57, %58, !dbg !11775
  br i1 %cmp76, label %for.body, label %for.end, !dbg !11776

for.body:                                         ; preds = %for.cond
  %59 = load i8*, i8** %p, align 8, !dbg !11777
  %60 = load i8, i8* %59, align 1, !dbg !11780
  %conv78 = zext i8 %60 to i32, !dbg !11780
  %cmp79 = icmp eq i32 %conv78, 92, !dbg !11781
  br i1 %cmp79, label %land.lhs.true81, label %if.else87, !dbg !11782

land.lhs.true81:                                  ; preds = %for.body
  %61 = load i8*, i8** %p, align 8, !dbg !11783
  %add.ptr = getelementptr inbounds i8, i8* %61, i64 1, !dbg !11784
  %62 = load i8, i8* %add.ptr, align 1, !dbg !11785
  %conv82 = zext i8 %62 to i32, !dbg !11785
  %63 = load i8, i8* %quote, align 1, !dbg !11786
  %conv83 = zext i8 %63 to i32, !dbg !11786
  %cmp84 = icmp eq i32 %conv82, %conv83, !dbg !11787
  br i1 %cmp84, label %if.then86, label %if.else87, !dbg !11788

if.then86:                                        ; preds = %land.lhs.true81
  br label %if.end89, !dbg !11789

if.else87:                                        ; preds = %land.lhs.true81, %for.body
  %64 = load i8*, i8** %p, align 8, !dbg !11791
  %65 = load i8, i8* %64, align 1, !dbg !11792
  %66 = load i8*, i8** %buf, align 8, !dbg !11793
  %67 = load i32, i32* %j, align 4, !dbg !11794
  %inc88 = add nsw i32 %67, 1, !dbg !11794
  store i32 %inc88, i32* %j, align 4, !dbg !11794
  %idxprom = sext i32 %67 to i64, !dbg !11793
  %arrayidx = getelementptr inbounds i8, i8* %66, i64 %idxprom, !dbg !11793
  store i8 %65, i8* %arrayidx, align 1, !dbg !11795
  br label %if.end89

if.end89:                                         ; preds = %if.else87, %if.then86
  br label %for.inc, !dbg !11796

for.inc:                                          ; preds = %if.end89
  %68 = load i32, i32* %i, align 4, !dbg !11797
  %inc90 = add nsw i32 %68, 1, !dbg !11797
  store i32 %inc90, i32* %i, align 4, !dbg !11797
  %69 = load i8*, i8** %p, align 8, !dbg !11798
  %incdec.ptr91 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !11798
  store i8* %incdec.ptr91, i8** %p, align 8, !dbg !11798
  br label %for.cond, !dbg !11799, !llvm.loop !11800

for.end:                                          ; preds = %for.cond
  %70 = load i8*, i8** %buf, align 8, !dbg !11802
  %71 = load i32, i32* %j, align 4, !dbg !11803
  %idxprom92 = sext i32 %71 to i64, !dbg !11802
  %arrayidx93 = getelementptr inbounds i8, i8* %70, i64 %idxprom92, !dbg !11802
  store i8 0, i8* %arrayidx93, align 1, !dbg !11804
  br label %if.end99, !dbg !11805

if.else94:                                        ; preds = %if.end73
  %72 = load i8*, i8** %buf, align 8, !dbg !11806
  %73 = load i8**, i8*** %path.addr, align 8, !dbg !11808
  %74 = load i8*, i8** %73, align 8, !dbg !11809
  %75 = load i32, i32* %len, align 4, !dbg !11810
  %conv95 = sext i32 %75 to i64, !dbg !11810
  %mul96 = mul i64 1, %conv95, !dbg !11811
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %74, i64 %mul96, i1 false), !dbg !11812
  %76 = load i8*, i8** %buf, align 8, !dbg !11813
  %77 = load i32, i32* %len, align 4, !dbg !11814
  %idxprom97 = sext i32 %77 to i64, !dbg !11813
  %arrayidx98 = getelementptr inbounds i8, i8* %76, i64 %idxprom97, !dbg !11813
  store i8 0, i8* %arrayidx98, align 1, !dbg !11815
  br label %if.end99

if.end99:                                         ; preds = %if.else94, %for.end
  %78 = load i8*, i8** %p, align 8, !dbg !11816
  %79 = load i8, i8* %78, align 1, !dbg !11818
  %conv100 = zext i8 %79 to i32, !dbg !11818
  %cmp101 = icmp eq i32 %conv100, 93, !dbg !11819
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !11820

if.then103:                                       ; preds = %if.end99
  %80 = load i8*, i8** %p, align 8, !dbg !11821
  %incdec.ptr104 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !11821
  store i8* %incdec.ptr104, i8** %p, align 8, !dbg !11821
  br label %if.end105, !dbg !11822

if.end105:                                        ; preds = %if.then103, %if.end99
  %81 = load i8*, i8** %p, align 8, !dbg !11823
  %82 = load i8, i8* %81, align 1, !dbg !11825
  %conv106 = zext i8 %82 to i32, !dbg !11825
  %cmp107 = icmp eq i32 %conv106, 46, !dbg !11826
  br i1 %cmp107, label %if.then109, label %if.end111, !dbg !11827

if.then109:                                       ; preds = %if.end105
  %83 = load i8*, i8** %p, align 8, !dbg !11828
  %incdec.ptr110 = getelementptr inbounds i8, i8* %83, i32 1, !dbg !11828
  store i8* %incdec.ptr110, i8** %p, align 8, !dbg !11828
  br label %if.end111, !dbg !11829

if.end111:                                        ; preds = %if.then109, %if.end105
  %84 = load i8*, i8** %p, align 8, !dbg !11830
  %85 = load i8**, i8*** %path.addr, align 8, !dbg !11831
  store i8* %84, i8** %85, align 8, !dbg !11832
  %86 = load i8*, i8** %buf, align 8, !dbg !11833
  store i8* %86, i8** %retval, align 8, !dbg !11834
  br label %return, !dbg !11834

return:                                           ; preds = %if.end111, %if.then65, %if.then44, %if.else
  %87 = load i8*, i8** %retval, align 8, !dbg !11835
  ret i8* %87, !dbg !11835
}

declare dso_local i8* @BLI_strdup(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_from_ID_to_struct(%struct.PointerRNA* %ptr) #0 !dbg !11836 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ptrpath = alloca i8*, align 8
  %parentptr = alloca %struct.PointerRNA, align 8
  %userprop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11839, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.declare(metadata i8** %ptrpath, metadata !11841, metadata !DIExpression()), !dbg !11842
  store i8* null, i8** %ptrpath, align 8, !dbg !11842
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11843
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !11845
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !11846
  %1 = load i8*, i8** %data, align 8, !dbg !11846
  %tobool = icmp ne i8* %1, null, !dbg !11843
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11847

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11848
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 2, !dbg !11849
  %3 = load i8*, i8** %data1, align 8, !dbg !11849
  %tobool2 = icmp ne i8* %3, null, !dbg !11848
  br i1 %tobool2, label %if.end, label %if.then, !dbg !11850

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !11851
  br label %return, !dbg !11851

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11852
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 1, !dbg !11854
  %5 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !11854
  %call = call zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %5), !dbg !11855
  %tobool3 = icmp ne i8 %call, 0, !dbg !11855
  br i1 %tobool3, label %if.end37, label %if.then4, !dbg !11856

if.then4:                                         ; preds = %if.end
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11857
  %type5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 1, !dbg !11860
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type5, align 8, !dbg !11860
  %path = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %7, i32 0, i32 14, !dbg !11861
  %8 = load i8* (%struct.PointerRNA*)*, i8* (%struct.PointerRNA*)** %path, align 8, !dbg !11861
  %tobool6 = icmp ne i8* (%struct.PointerRNA*)* %8, null, !dbg !11857
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !11862

if.then7:                                         ; preds = %if.then4
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11863
  %type8 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %9, i32 0, i32 1, !dbg !11865
  %10 = load %struct.StructRNA*, %struct.StructRNA** %type8, align 8, !dbg !11865
  %path9 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %10, i32 0, i32 14, !dbg !11866
  %11 = load i8* (%struct.PointerRNA*)*, i8* (%struct.PointerRNA*)** %path9, align 8, !dbg !11866
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11867
  %call10 = call i8* %11(%struct.PointerRNA* %12), !dbg !11863
  store i8* %call10, i8** %ptrpath, align 8, !dbg !11868
  br label %if.end36, !dbg !11869

if.else:                                          ; preds = %if.then4
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11870
  %type11 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %13, i32 0, i32 1, !dbg !11872
  %14 = load %struct.StructRNA*, %struct.StructRNA** %type11, align 8, !dbg !11872
  %nested = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %14, i32 0, i32 12, !dbg !11873
  %15 = load %struct.StructRNA*, %struct.StructRNA** %nested, align 8, !dbg !11873
  %tobool12 = icmp ne %struct.StructRNA* %15, null, !dbg !11870
  br i1 %tobool12, label %land.lhs.true, label %if.else28, !dbg !11874

land.lhs.true:                                    ; preds = %if.else
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11875
  %type13 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %16, i32 0, i32 1, !dbg !11876
  %17 = load %struct.StructRNA*, %struct.StructRNA** %type13, align 8, !dbg !11876
  %nested14 = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %17, i32 0, i32 12, !dbg !11877
  %18 = load %struct.StructRNA*, %struct.StructRNA** %nested14, align 8, !dbg !11877
  %call15 = call zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %18), !dbg !11878
  %conv = zext i8 %call15 to i32, !dbg !11878
  %tobool16 = icmp ne i32 %conv, 0, !dbg !11878
  br i1 %tobool16, label %if.then17, label %if.else28, !dbg !11879

if.then17:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %parentptr, metadata !11880, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %userprop, metadata !11883, metadata !DIExpression()), !dbg !11884
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11885
  %id18 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %19, i32 0, i32 0, !dbg !11886
  %data19 = getelementptr inbounds %struct.anon, %struct.anon* %id18, i32 0, i32 0, !dbg !11887
  %20 = load i8*, i8** %data19, align 8, !dbg !11887
  %21 = bitcast i8* %20 to %struct.ID*, !dbg !11885
  call void @RNA_id_pointer_create(%struct.ID* %21, %struct.PointerRNA* %parentptr), !dbg !11888
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11889
  %type20 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %22, i32 0, i32 1, !dbg !11890
  %23 = load %struct.StructRNA*, %struct.StructRNA** %type20, align 8, !dbg !11890
  %call21 = call %struct.PropertyRNA* @RNA_struct_find_nested(%struct.PointerRNA* %parentptr, %struct.StructRNA* %23), !dbg !11891
  store %struct.PropertyRNA* %call21, %struct.PropertyRNA** %userprop, align 8, !dbg !11892
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %userprop, align 8, !dbg !11893
  %tobool22 = icmp ne %struct.PropertyRNA* %24, null, !dbg !11893
  br i1 %tobool22, label %if.then23, label %if.else26, !dbg !11895

if.then23:                                        ; preds = %if.then17
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %userprop, align 8, !dbg !11896
  %call24 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %25), !dbg !11897
  %call25 = call i8* @BLI_strdup(i8* %call24), !dbg !11898
  store i8* %call25, i8** %ptrpath, align 8, !dbg !11899
  br label %if.end27, !dbg !11900

if.else26:                                        ; preds = %if.then17
  store i8* null, i8** %retval, align 8, !dbg !11901
  br label %return, !dbg !11901

if.end27:                                         ; preds = %if.then23
  br label %if.end35, !dbg !11902

if.else28:                                        ; preds = %land.lhs.true, %if.else
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11903
  %type29 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %26, i32 0, i32 1, !dbg !11905
  %27 = load %struct.StructRNA*, %struct.StructRNA** %type29, align 8, !dbg !11905
  %call30 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %27, %struct.StructRNA* @RNA_PropertyGroup), !dbg !11906
  %tobool31 = icmp ne i8 %call30, 0, !dbg !11906
  br i1 %tobool31, label %if.then32, label %if.else34, !dbg !11907

if.then32:                                        ; preds = %if.else28
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11908
  %call33 = call i8* @rna_path_from_ID_to_idpgroup(%struct.PointerRNA* %28), !dbg !11910
  store i8* %call33, i8** %retval, align 8, !dbg !11911
  br label %return, !dbg !11911

if.else34:                                        ; preds = %if.else28
  store i8* null, i8** %retval, align 8, !dbg !11912
  br label %return, !dbg !11912

if.end35:                                         ; preds = %if.end27
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then7
  br label %if.end37, !dbg !11913

if.end37:                                         ; preds = %if.end36, %if.end
  %29 = load i8*, i8** %ptrpath, align 8, !dbg !11914
  store i8* %29, i8** %retval, align 8, !dbg !11915
  br label %return, !dbg !11915

return:                                           ; preds = %if.end37, %if.else34, %if.then32, %if.else26, %if.then
  %30 = load i8*, i8** %retval, align 8, !dbg !11916
  ret i8* %30, !dbg !11916
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.PropertyRNA* @RNA_struct_find_nested(%struct.PointerRNA* %ptr, %struct.StructRNA* %srna) #0 !dbg !11917 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %srna.addr = alloca %struct.StructRNA*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %iprop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11920, metadata !DIExpression()), !dbg !11921
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !11922, metadata !DIExpression()), !dbg !11923
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !11924, metadata !DIExpression()), !dbg !11925
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %prop, align 8, !dbg !11925
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !11926, metadata !DIExpression()), !dbg !11928
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11929
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11929
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %1, i32 0, i32 1, !dbg !11929
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !11929
  %call = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %2), !dbg !11929
  call void @RNA_property_collection_begin(%struct.PointerRNA* %0, %struct.PropertyRNA* %call, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !11929
  br label %for.cond, !dbg !11929

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !11931
  %3 = load i32, i32* %valid, align 8, !dbg !11931
  %tobool = icmp ne i32 %3, 0, !dbg !11929
  br i1 %tobool, label %for.body, label %for.end, !dbg !11929

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iprop, metadata !11933, metadata !DIExpression()), !dbg !11935
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !11935
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr1, i32 0, i32 2, !dbg !11935
  %4 = load i8*, i8** %data, align 8, !dbg !11935
  %5 = bitcast i8* %4 to %struct.PropertyRNA*, !dbg !11935
  store %struct.PropertyRNA* %5, %struct.PropertyRNA** %iprop, align 8, !dbg !11935
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11936
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !11939
  %call2 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %6, %struct.PropertyRNA* %7), !dbg !11940
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !11941
  %cmp = icmp eq %struct.StructRNA* %call2, %8, !dbg !11942
  br i1 %cmp, label %if.then, label %if.end, !dbg !11943

if.then:                                          ; preds = %for.body
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !11944
  store %struct.PropertyRNA* %9, %struct.PropertyRNA** %prop, align 8, !dbg !11946
  br label %for.end, !dbg !11947

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11948

for.inc:                                          ; preds = %if.end
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !11931
  br label %for.cond, !dbg !11931, !llvm.loop !11949

for.end:                                          ; preds = %if.then, %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !11951
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11952
  ret %struct.PropertyRNA* %10, !dbg !11953
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_path_from_ID_to_idpgroup(%struct.PointerRNA* %ptr) #0 !dbg !11954 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %id_ptr = alloca %struct.PointerRNA, align 8
  %haystack = alloca %struct.IDProperty*, align 8
  %needle = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11955, metadata !DIExpression()), !dbg !11956
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %id_ptr, metadata !11957, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %haystack, metadata !11959, metadata !DIExpression()), !dbg !11960
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %needle, metadata !11961, metadata !DIExpression()), !dbg !11962
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11963
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !11964
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !11965
  %1 = load i8*, i8** %data, align 8, !dbg !11965
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !11963
  call void @RNA_id_pointer_create(%struct.ID* %2, %struct.PointerRNA* %id_ptr), !dbg !11966
  %call = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %id_ptr, i8 zeroext 0), !dbg !11967
  store %struct.IDProperty* %call, %struct.IDProperty** %haystack, align 8, !dbg !11968
  %3 = load %struct.IDProperty*, %struct.IDProperty** %haystack, align 8, !dbg !11969
  %tobool = icmp ne %struct.IDProperty* %3, null, !dbg !11969
  br i1 %tobool, label %if.then, label %if.else, !dbg !11971

if.then:                                          ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11972
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 2, !dbg !11974
  %5 = load i8*, i8** %data1, align 8, !dbg !11974
  %6 = bitcast i8* %5 to %struct.IDProperty*, !dbg !11972
  store %struct.IDProperty* %6, %struct.IDProperty** %needle, align 8, !dbg !11975
  %7 = load %struct.IDProperty*, %struct.IDProperty** %haystack, align 8, !dbg !11976
  %8 = load %struct.IDProperty*, %struct.IDProperty** %needle, align 8, !dbg !11977
  %call2 = call i8* @rna_idp_path(%struct.PointerRNA* %id_ptr, %struct.IDProperty* %7, %struct.IDProperty* %8, %struct.IDP_Chain* null), !dbg !11978
  store i8* %call2, i8** %retval, align 8, !dbg !11979
  br label %return, !dbg !11979

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11980
  br label %return, !dbg !11980

return:                                           ; preds = %if.else, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !11982
  ret i8* %9, !dbg !11982
}

declare dso_local i8* @BLI_sprintfN(i8*, ...) #2

declare dso_local i64 @BLI_strescape(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_resolve_from_type_to_property(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.StructRNA* %type) #0 !dbg !11983 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %type.addr = alloca %struct.StructRNA*, align 8
  %idptr = alloca %struct.PointerRNA, align 8
  %path_elems = alloca %struct.ListBase, align 8
  %path = alloca i8*, align 8
  %full_path = alloca i8*, align 8
  %prop_elem = alloca %struct.PropertyElemRNA*, align 8
  %ref_path = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11986, metadata !DIExpression()), !dbg !11987
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !11988, metadata !DIExpression()), !dbg !11989
  store %struct.StructRNA* %type, %struct.StructRNA** %type.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %type.addr, metadata !11990, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %idptr, metadata !11992, metadata !DIExpression()), !dbg !11993
  call void @llvm.dbg.declare(metadata %struct.ListBase* %path_elems, metadata !11994, metadata !DIExpression()), !dbg !11995
  %0 = bitcast %struct.ListBase* %path_elems to i8*, !dbg !11995
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !11995
  call void @llvm.dbg.declare(metadata i8** %path, metadata !11996, metadata !DIExpression()), !dbg !11997
  store i8* null, i8** %path, align 8, !dbg !11997
  call void @llvm.dbg.declare(metadata i8** %full_path, metadata !11998, metadata !DIExpression()), !dbg !11999
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12000
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12001
  %call = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %1, %struct.PropertyRNA* %2), !dbg !12002
  store i8* %call, i8** %full_path, align 8, !dbg !11999
  %3 = load i8*, i8** %full_path, align 8, !dbg !12003
  %cmp = icmp eq i8* %3, null, !dbg !12005
  br i1 %cmp, label %if.then, label %if.end, !dbg !12006

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12007
  br label %return, !dbg !12007

if.end:                                           ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12009
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 0, !dbg !12010
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !12011
  %5 = load i8*, i8** %data, align 8, !dbg !12011
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !12009
  call void @RNA_id_pointer_create(%struct.ID* %6, %struct.PointerRNA* %idptr), !dbg !12012
  %7 = load i8*, i8** %full_path, align 8, !dbg !12013
  %call1 = call zeroext i8 @RNA_path_resolve_elements(%struct.PointerRNA* %idptr, i8* %7, %struct.ListBase* %path_elems), !dbg !12015
  %tobool = icmp ne i8 %call1, 0, !dbg !12015
  br i1 %tobool, label %if.then2, label %if.end18, !dbg !12016

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.PropertyElemRNA** %prop_elem, metadata !12017, metadata !DIExpression()), !dbg !12019
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %path_elems, i32 0, i32 1, !dbg !12020
  %8 = load i8*, i8** %last, align 8, !dbg !12020
  %9 = bitcast i8* %8 to %struct.PropertyElemRNA*, !dbg !12022
  store %struct.PropertyElemRNA* %9, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !12023
  br label %for.cond, !dbg !12024

for.cond:                                         ; preds = %for.inc, %if.then2
  %10 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !12025
  %tobool3 = icmp ne %struct.PropertyElemRNA* %10, null, !dbg !12027
  br i1 %tobool3, label %for.body, label %for.end, !dbg !12027

for.body:                                         ; preds = %for.cond
  %11 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !12028
  %ptr4 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %11, i32 0, i32 2, !dbg !12031
  %type5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr4, i32 0, i32 1, !dbg !12032
  %12 = load %struct.StructRNA*, %struct.StructRNA** %type5, align 8, !dbg !12032
  %13 = load %struct.StructRNA*, %struct.StructRNA** %type.addr, align 8, !dbg !12033
  %call6 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %12, %struct.StructRNA* %13), !dbg !12034
  %tobool7 = icmp ne i8 %call6, 0, !dbg !12034
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !12035

if.then8:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %ref_path, metadata !12036, metadata !DIExpression()), !dbg !12038
  %14 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !12039
  %ptr9 = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %14, i32 0, i32 2, !dbg !12040
  %call10 = call i8* @RNA_path_from_ID_to_struct(%struct.PointerRNA* %ptr9), !dbg !12041
  store i8* %call10, i8** %ref_path, align 8, !dbg !12038
  %15 = load i8*, i8** %ref_path, align 8, !dbg !12042
  %tobool11 = icmp ne i8* %15, null, !dbg !12042
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !12044

if.then12:                                        ; preds = %if.then8
  %16 = load i8*, i8** %full_path, align 8, !dbg !12045
  %17 = load i8*, i8** %ref_path, align 8, !dbg !12047
  %call13 = call i64 @strlen(i8* %17) #7, !dbg !12048
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %call13, !dbg !12049
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !12050
  %call15 = call i8* @BLI_strdup(i8* %add.ptr14), !dbg !12051
  store i8* %call15, i8** %path, align 8, !dbg !12052
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12053
  %19 = load i8*, i8** %ref_path, align 8, !dbg !12054
  call void %18(i8* %19), !dbg !12053
  br label %if.end16, !dbg !12055

if.end16:                                         ; preds = %if.then12, %if.then8
  br label %for.end, !dbg !12056

if.end17:                                         ; preds = %for.body
  br label %for.inc, !dbg !12057

for.inc:                                          ; preds = %if.end17
  %20 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !12058
  %prev = getelementptr inbounds %struct.PropertyElemRNA, %struct.PropertyElemRNA* %20, i32 0, i32 1, !dbg !12059
  %21 = load %struct.PropertyElemRNA*, %struct.PropertyElemRNA** %prev, align 8, !dbg !12059
  store %struct.PropertyElemRNA* %21, %struct.PropertyElemRNA** %prop_elem, align 8, !dbg !12060
  br label %for.cond, !dbg !12061, !llvm.loop !12062

for.end:                                          ; preds = %if.end16, %for.cond
  call void @BLI_freelistN(%struct.ListBase* %path_elems), !dbg !12064
  br label %if.end18, !dbg !12065

if.end18:                                         ; preds = %for.end, %if.end
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12066
  %23 = load i8*, i8** %full_path, align 8, !dbg !12067
  call void %22(i8* %23), !dbg !12066
  %24 = load i8*, i8** %path, align 8, !dbg !12068
  store i8* %24, i8** %retval, align 8, !dbg !12069
  br label %return, !dbg !12069

return:                                           ; preds = %if.end18, %if.then
  %25 = load i8*, i8** %retval, align 8, !dbg !12070
  ret i8* %25, !dbg !12070
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_full_ID_py(%struct.ID* %id) #0 !dbg !12071 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %id_esc = alloca [128 x i8], align 16
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !12074, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.declare(metadata [128 x i8]* %id_esc, metadata !12076, metadata !DIExpression()), !dbg !12077
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %id_esc, i64 0, i64 0, !dbg !12078
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !12079
  %name = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 4, !dbg !12080
  %arraydecay1 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !12079
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay1, i64 2, !dbg !12081
  %call = call i64 @BLI_strescape(i8* %arraydecay, i8* %add.ptr, i64 128), !dbg !12082
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !12083
  %name2 = getelementptr inbounds %struct.ID, %struct.ID* %1, i32 0, i32 4, !dbg !12083
  %arraydecay3 = getelementptr inbounds [66 x i8], [66 x i8]* %name2, i64 0, i64 0, !dbg !12083
  %2 = bitcast i8* %arraydecay3 to i16*, !dbg !12083
  %3 = load i16, i16* %2, align 8, !dbg !12083
  %conv = sext i16 %3 to i32, !dbg !12083
  %call4 = call i8* @BKE_idcode_to_name_plural(i32 %conv), !dbg !12084
  %arraydecay5 = getelementptr inbounds [128 x i8], [128 x i8]* %id_esc, i64 0, i64 0, !dbg !12085
  %call6 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0), i8* %call4, i8* %arraydecay5), !dbg !12086
  ret i8* %call6, !dbg !12087
}

declare dso_local i8* @BKE_idcode_to_name_plural(i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_full_struct_py(%struct.PointerRNA* %ptr) #0 !dbg !12088 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %id_path = alloca i8*, align 8
  %data_path = alloca i8*, align 8
  %ret = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12089, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.declare(metadata i8** %id_path, metadata !12091, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.declare(metadata i8** %data_path, metadata !12093, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !12095, metadata !DIExpression()), !dbg !12096
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12097
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !12099
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !12100
  %1 = load i8*, i8** %data, align 8, !dbg !12100
  %tobool = icmp ne i8* %1, null, !dbg !12097
  br i1 %tobool, label %if.end, label %if.then, !dbg !12101

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12102
  br label %return, !dbg !12102

if.end:                                           ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12104
  %id1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 0, !dbg !12105
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id1, i32 0, i32 0, !dbg !12106
  %3 = load i8*, i8** %data2, align 8, !dbg !12106
  %4 = bitcast i8* %3 to %struct.ID*, !dbg !12104
  %call = call i8* @RNA_path_full_ID_py(%struct.ID* %4), !dbg !12107
  store i8* %call, i8** %id_path, align 8, !dbg !12108
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12109
  %call3 = call i8* @RNA_path_from_ID_to_struct(%struct.PointerRNA* %5), !dbg !12110
  store i8* %call3, i8** %data_path, align 8, !dbg !12111
  %6 = load i8*, i8** %id_path, align 8, !dbg !12112
  %7 = load i8*, i8** %data_path, align 8, !dbg !12113
  %call4 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i8* %6, i8* %7), !dbg !12114
  store i8* %call4, i8** %ret, align 8, !dbg !12115
  %8 = load i8*, i8** %data_path, align 8, !dbg !12116
  %tobool5 = icmp ne i8* %8, null, !dbg !12116
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !12118

if.then6:                                         ; preds = %if.end
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12119
  %10 = load i8*, i8** %data_path, align 8, !dbg !12121
  call void %9(i8* %10), !dbg !12119
  br label %if.end7, !dbg !12122

if.end7:                                          ; preds = %if.then6, %if.end
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12123
  %12 = load i8*, i8** %id_path, align 8, !dbg !12124
  call void %11(i8* %12), !dbg !12123
  %13 = load i8*, i8** %ret, align 8, !dbg !12125
  store i8* %13, i8** %retval, align 8, !dbg !12126
  br label %return, !dbg !12126

return:                                           ; preds = %if.end7, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !12127
  ret i8* %14, !dbg !12127
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_full_property_py(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !12128 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %id_path = alloca i8*, align 8
  %data_path = alloca i8*, align 8
  %ret = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12131, metadata !DIExpression()), !dbg !12132
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !12133, metadata !DIExpression()), !dbg !12134
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12135, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.declare(metadata i8** %id_path, metadata !12137, metadata !DIExpression()), !dbg !12138
  call void @llvm.dbg.declare(metadata i8** %data_path, metadata !12139, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !12141, metadata !DIExpression()), !dbg !12142
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12143
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !12145
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !12146
  %1 = load i8*, i8** %data, align 8, !dbg !12146
  %tobool = icmp ne i8* %1, null, !dbg !12143
  br i1 %tobool, label %if.end, label %if.then, !dbg !12147

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12148
  br label %return, !dbg !12148

if.end:                                           ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12150
  %id1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 0, !dbg !12151
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id1, i32 0, i32 0, !dbg !12152
  %3 = load i8*, i8** %data2, align 8, !dbg !12152
  %4 = bitcast i8* %3 to %struct.ID*, !dbg !12150
  %call = call i8* @RNA_path_full_ID_py(%struct.ID* %4), !dbg !12153
  store i8* %call, i8** %id_path, align 8, !dbg !12154
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12155
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12156
  %call3 = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %5, %struct.PropertyRNA* %6), !dbg !12157
  store i8* %call3, i8** %data_path, align 8, !dbg !12158
  %7 = load i32, i32* %index.addr, align 4, !dbg !12159
  %cmp = icmp eq i32 %7, -1, !dbg !12161
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !12162

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12163
  %call4 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %8), !dbg !12164
  %conv = zext i8 %call4 to i32, !dbg !12164
  %cmp5 = icmp eq i32 %conv, 0, !dbg !12165
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !12166

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i8*, i8** %id_path, align 8, !dbg !12167
  %10 = load i8*, i8** %data_path, align 8, !dbg !12169
  %call8 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i8* %9, i8* %10), !dbg !12170
  store i8* %call8, i8** %ret, align 8, !dbg !12171
  br label %if.end10, !dbg !12172

if.else:                                          ; preds = %lor.lhs.false
  %11 = load i8*, i8** %id_path, align 8, !dbg !12173
  %12 = load i8*, i8** %data_path, align 8, !dbg !12175
  %13 = load i32, i32* %index.addr, align 4, !dbg !12176
  %call9 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8* %11, i8* %12, i32 %13), !dbg !12177
  store i8* %call9, i8** %ret, align 8, !dbg !12178
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12179
  %15 = load i8*, i8** %id_path, align 8, !dbg !12180
  call void %14(i8* %15), !dbg !12179
  %16 = load i8*, i8** %data_path, align 8, !dbg !12181
  %tobool11 = icmp ne i8* %16, null, !dbg !12181
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !12183

if.then12:                                        ; preds = %if.end10
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12184
  %18 = load i8*, i8** %data_path, align 8, !dbg !12186
  call void %17(i8* %18), !dbg !12184
  br label %if.end13, !dbg !12187

if.end13:                                         ; preds = %if.then12, %if.end10
  %19 = load i8*, i8** %ret, align 8, !dbg !12188
  store i8* %19, i8** %retval, align 8, !dbg !12189
  br label %return, !dbg !12189

return:                                           ; preds = %if.end13, %if.then
  %20 = load i8*, i8** %retval, align 8, !dbg !12190
  ret i8* %20, !dbg !12190
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_struct_property_py(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !12191 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %data_path = alloca i8*, align 8
  %ret = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12192, metadata !DIExpression()), !dbg !12193
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !12194, metadata !DIExpression()), !dbg !12195
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12196, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.declare(metadata i8** %data_path, metadata !12198, metadata !DIExpression()), !dbg !12199
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !12200, metadata !DIExpression()), !dbg !12201
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12202
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !12204
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !12205
  %1 = load i8*, i8** %data, align 8, !dbg !12205
  %tobool = icmp ne i8* %1, null, !dbg !12202
  br i1 %tobool, label %if.end, label %if.then, !dbg !12206

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12207
  br label %return, !dbg !12207

if.end:                                           ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12209
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12210
  %call = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %2, %struct.PropertyRNA* %3), !dbg !12211
  store i8* %call, i8** %data_path, align 8, !dbg !12212
  %4 = load i8*, i8** %data_path, align 8, !dbg !12213
  %cmp = icmp eq i8* %4, null, !dbg !12215
  br i1 %cmp, label %if.then1, label %if.end13, !dbg !12216

if.then1:                                         ; preds = %if.end
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12217
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 1, !dbg !12220
  %6 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !12220
  %call2 = call zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %6), !dbg !12221
  %tobool3 = icmp ne i8 %call2, 0, !dbg !12221
  br i1 %tobool3, label %if.end12, label %if.then4, !dbg !12222

if.then4:                                         ; preds = %if.then1
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12223
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12226
  %call5 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %8), !dbg !12227
  %call6 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %7, i8* %call5), !dbg !12228
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12229
  %cmp7 = icmp eq %struct.PropertyRNA* %call6, %9, !dbg !12230
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !12231

if.then8:                                         ; preds = %if.then4
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12232
  %call9 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %10), !dbg !12234
  %call10 = call i8* @BLI_strdup(i8* %call9), !dbg !12235
  store i8* %call10, i8** %data_path, align 8, !dbg !12236
  br label %if.end11, !dbg !12237

if.end11:                                         ; preds = %if.then8, %if.then4
  br label %if.end12, !dbg !12238

if.end12:                                         ; preds = %if.end11, %if.then1
  br label %if.end13, !dbg !12239

if.end13:                                         ; preds = %if.end12, %if.end
  %11 = load i32, i32* %index.addr, align 4, !dbg !12240
  %cmp14 = icmp eq i32 %11, -1, !dbg !12242
  br i1 %cmp14, label %if.then18, label %lor.lhs.false, !dbg !12243

lor.lhs.false:                                    ; preds = %if.end13
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12244
  %call15 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %12), !dbg !12245
  %conv = zext i8 %call15 to i32, !dbg !12245
  %cmp16 = icmp eq i32 %conv, 0, !dbg !12246
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !12247

if.then18:                                        ; preds = %lor.lhs.false, %if.end13
  %13 = load i8*, i8** %data_path, align 8, !dbg !12248
  %call19 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0), i8* %13), !dbg !12250
  store i8* %call19, i8** %ret, align 8, !dbg !12251
  br label %if.end21, !dbg !12252

if.else:                                          ; preds = %lor.lhs.false
  %14 = load i8*, i8** %data_path, align 8, !dbg !12253
  %15 = load i32, i32* %index.addr, align 4, !dbg !12255
  %call20 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* %14, i32 %15), !dbg !12256
  store i8* %call20, i8** %ret, align 8, !dbg !12257
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  %16 = load i8*, i8** %data_path, align 8, !dbg !12258
  %tobool22 = icmp ne i8* %16, null, !dbg !12258
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !12260

if.then23:                                        ; preds = %if.end21
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12261
  %18 = load i8*, i8** %data_path, align 8, !dbg !12263
  call void %17(i8* %18), !dbg !12261
  br label %if.end24, !dbg !12264

if.end24:                                         ; preds = %if.then23, %if.end21
  %19 = load i8*, i8** %ret, align 8, !dbg !12265
  store i8* %19, i8** %retval, align 8, !dbg !12266
  br label %return, !dbg !12266

return:                                           ; preds = %if.end24, %if.then
  %20 = load i8*, i8** %retval, align 8, !dbg !12267
  ret i8* %20, !dbg !12267
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_path_property_py(%struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !12268 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %ret = alloca i8*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !12269, metadata !DIExpression()), !dbg !12270
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !12271, metadata !DIExpression()), !dbg !12272
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12273, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !12275, metadata !DIExpression()), !dbg !12276
  %0 = load i32, i32* %index.addr, align 4, !dbg !12277
  %cmp = icmp eq i32 %0, -1, !dbg !12279
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12280

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12281
  %call = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %1), !dbg !12282
  %conv = zext i8 %call to i32, !dbg !12282
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12283
  br i1 %cmp1, label %if.then, label %if.else, !dbg !12284

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12285
  %call3 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %2), !dbg !12287
  %call4 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0), i8* %call3), !dbg !12288
  store i8* %call4, i8** %ret, align 8, !dbg !12289
  br label %if.end, !dbg !12290

if.else:                                          ; preds = %lor.lhs.false
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12291
  %call5 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %3), !dbg !12293
  %4 = load i32, i32* %index.addr, align 4, !dbg !12294
  %call6 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* %call5, i32 %4), !dbg !12295
  store i8* %call6, i8** %ret, align 8, !dbg !12296
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %ret, align 8, !dbg !12297
  ret i8* %5, !dbg !12298
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_boolean_get(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !12299 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12302, metadata !DIExpression()), !dbg !12303
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12304, metadata !DIExpression()), !dbg !12305
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12306, metadata !DIExpression()), !dbg !12307
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12308
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12309
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12310
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12307
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12311
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12311
  br i1 %tobool, label %if.then, label %if.else, !dbg !12313

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12314
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12316
  %call1 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !12317
  store i32 %call1, i32* %retval, align 4, !dbg !12318
  br label %return, !dbg !12318

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12319
  br label %return, !dbg !12319

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12321
  ret i32 %5, !dbg !12321
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_boolean_set(%struct.PointerRNA* %ptr, i8* %name, i32 %value) #0 !dbg !12322 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !12329, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12331, metadata !DIExpression()), !dbg !12332
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12333
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12334
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12335
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12332
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12336
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12336
  br i1 %tobool, label %if.then, label %if.end, !dbg !12338

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12339
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12340
  %5 = load i32, i32* %value.addr, align 4, !dbg !12341
  call void @RNA_property_boolean_set(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32 %5), !dbg !12342
  br label %if.end, !dbg !12342

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12343
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_boolean_get_array(%struct.PointerRNA* %ptr, i8* %name, i32* %values) #0 !dbg !12344 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %values.addr = alloca i32*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12347, metadata !DIExpression()), !dbg !12348
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12349, metadata !DIExpression()), !dbg !12350
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !12351, metadata !DIExpression()), !dbg !12352
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12353, metadata !DIExpression()), !dbg !12354
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12355
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12356
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12357
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12354
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12358
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12358
  br i1 %tobool, label %if.then, label %if.end, !dbg !12360

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12361
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12362
  %5 = load i32*, i32** %values.addr, align 8, !dbg !12363
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %5), !dbg !12364
  br label %if.end, !dbg !12364

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12365
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_boolean_set_array(%struct.PointerRNA* %ptr, i8* %name, i32* %values) #0 !dbg !12366 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %values.addr = alloca i32*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12369, metadata !DIExpression()), !dbg !12370
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12371, metadata !DIExpression()), !dbg !12372
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !12373, metadata !DIExpression()), !dbg !12374
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12375, metadata !DIExpression()), !dbg !12376
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12377
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12378
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12379
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12376
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12380
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12380
  br i1 %tobool, label %if.then, label %if.end, !dbg !12382

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12383
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12384
  %5 = load i32*, i32** %values.addr, align 8, !dbg !12385
  call void @RNA_property_boolean_set_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %5), !dbg !12386
  br label %if.end, !dbg !12386

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12387
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_int_get(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !12388 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12389, metadata !DIExpression()), !dbg !12390
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12391, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12393, metadata !DIExpression()), !dbg !12394
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12395
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12396
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12397
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12394
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12398
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12398
  br i1 %tobool, label %if.then, label %if.else, !dbg !12400

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12401
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12403
  %call1 = call i32 @RNA_property_int_get(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !12404
  store i32 %call1, i32* %retval, align 4, !dbg !12405
  br label %return, !dbg !12405

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12406
  br label %return, !dbg !12406

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12408
  ret i32 %5, !dbg !12408
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_int_set(%struct.PointerRNA* %ptr, i8* %name, i32 %value) #0 !dbg !12409 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12410, metadata !DIExpression()), !dbg !12411
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12412, metadata !DIExpression()), !dbg !12413
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !12414, metadata !DIExpression()), !dbg !12415
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12416, metadata !DIExpression()), !dbg !12417
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12418
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12419
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12420
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12417
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12421
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12421
  br i1 %tobool, label %if.then, label %if.end, !dbg !12423

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12424
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12425
  %5 = load i32, i32* %value.addr, align 4, !dbg !12426
  call void @RNA_property_int_set(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32 %5), !dbg !12427
  br label %if.end, !dbg !12427

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12428
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_int_get_array(%struct.PointerRNA* %ptr, i8* %name, i32* %values) #0 !dbg !12429 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %values.addr = alloca i32*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12430, metadata !DIExpression()), !dbg !12431
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12432, metadata !DIExpression()), !dbg !12433
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !12434, metadata !DIExpression()), !dbg !12435
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12436, metadata !DIExpression()), !dbg !12437
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12438
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12439
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12440
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12437
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12441
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12441
  br i1 %tobool, label %if.then, label %if.end, !dbg !12443

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12444
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12445
  %5 = load i32*, i32** %values.addr, align 8, !dbg !12446
  call void @RNA_property_int_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %5), !dbg !12447
  br label %if.end, !dbg !12447

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12448
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_int_set_array(%struct.PointerRNA* %ptr, i8* %name, i32* %values) #0 !dbg !12449 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %values.addr = alloca i32*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12450, metadata !DIExpression()), !dbg !12451
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12452, metadata !DIExpression()), !dbg !12453
  store i32* %values, i32** %values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %values.addr, metadata !12454, metadata !DIExpression()), !dbg !12455
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12456, metadata !DIExpression()), !dbg !12457
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12458
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12459
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12460
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12457
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12461
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12461
  br i1 %tobool, label %if.then, label %if.end, !dbg !12463

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12464
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12465
  %5 = load i32*, i32** %values.addr, align 8, !dbg !12466
  call void @RNA_property_int_set_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32* %5), !dbg !12467
  br label %if.end, !dbg !12467

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12468
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @RNA_float_get(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !12469 {
entry:
  %retval = alloca float, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12472, metadata !DIExpression()), !dbg !12473
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12474, metadata !DIExpression()), !dbg !12475
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12476, metadata !DIExpression()), !dbg !12477
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12478
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12479
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12480
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12477
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12481
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12481
  br i1 %tobool, label %if.then, label %if.else, !dbg !12483

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12484
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12486
  %call1 = call float @RNA_property_float_get(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !12487
  store float %call1, float* %retval, align 4, !dbg !12488
  br label %return, !dbg !12488

if.else:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !12489
  br label %return, !dbg !12489

return:                                           ; preds = %if.else, %if.then
  %5 = load float, float* %retval, align 4, !dbg !12491
  ret float %5, !dbg !12491
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_float_set(%struct.PointerRNA* %ptr, i8* %name, float %value) #0 !dbg !12492 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca float, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12495, metadata !DIExpression()), !dbg !12496
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !12499, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12501, metadata !DIExpression()), !dbg !12502
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12503
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12504
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12505
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12502
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12506
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12506
  br i1 %tobool, label %if.then, label %if.end, !dbg !12508

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12509
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12510
  %5 = load float, float* %value.addr, align 4, !dbg !12511
  call void @RNA_property_float_set(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, float %5), !dbg !12512
  br label %if.end, !dbg !12512

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12513
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_float_get_array(%struct.PointerRNA* %ptr, i8* %name, float* %values) #0 !dbg !12514 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %values.addr = alloca float*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12517, metadata !DIExpression()), !dbg !12518
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12519, metadata !DIExpression()), !dbg !12520
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !12521, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12523, metadata !DIExpression()), !dbg !12524
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12525
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12526
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12527
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12524
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12528
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12528
  br i1 %tobool, label %if.then, label %if.end, !dbg !12530

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12531
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12532
  %5 = load float*, float** %values.addr, align 8, !dbg !12533
  call void @RNA_property_float_get_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, float* %5), !dbg !12534
  br label %if.end, !dbg !12534

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12535
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_float_set_array(%struct.PointerRNA* %ptr, i8* %name, float* %values) #0 !dbg !12536 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %values.addr = alloca float*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12539, metadata !DIExpression()), !dbg !12540
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12541, metadata !DIExpression()), !dbg !12542
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !12543, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12545, metadata !DIExpression()), !dbg !12546
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12547
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12548
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12549
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12546
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12550
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12550
  br i1 %tobool, label %if.then, label %if.end, !dbg !12552

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12553
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12554
  %5 = load float*, float** %values.addr, align 8, !dbg !12555
  call void @RNA_property_float_set_array(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, float* %5), !dbg !12556
  br label %if.end, !dbg !12556

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12557
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_enum_get(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !12558 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12559, metadata !DIExpression()), !dbg !12560
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12561, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12563, metadata !DIExpression()), !dbg !12564
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12565
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12566
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12567
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12564
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12568
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12568
  br i1 %tobool, label %if.then, label %if.else, !dbg !12570

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12571
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12573
  %call1 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !12574
  store i32 %call1, i32* %retval, align 4, !dbg !12575
  br label %return, !dbg !12575

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12576
  br label %return, !dbg !12576

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12578
  ret i32 %5, !dbg !12578
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_enum_set(%struct.PointerRNA* %ptr, i8* %name, i32 %value) #0 !dbg !12579 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12580, metadata !DIExpression()), !dbg !12581
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12582, metadata !DIExpression()), !dbg !12583
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !12584, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12586, metadata !DIExpression()), !dbg !12587
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12588
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12589
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12590
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12587
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12591
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12591
  br i1 %tobool, label %if.then, label %if.end, !dbg !12593

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12594
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12595
  %5 = load i32, i32* %value.addr, align 4, !dbg !12596
  call void @RNA_property_enum_set(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i32 %5), !dbg !12597
  br label %if.end, !dbg !12597

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12598
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_enum_set_identifier(%struct.PointerRNA* %ptr, i8* %name, i8* %id) #0 !dbg !12599 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %value = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12602, metadata !DIExpression()), !dbg !12603
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12604, metadata !DIExpression()), !dbg !12605
  store i8* %id, i8** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %id.addr, metadata !12606, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12608, metadata !DIExpression()), !dbg !12609
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12610
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12611
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12612
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12609
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12613
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12613
  br i1 %tobool, label %if.then, label %if.end5, !dbg !12615

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value, metadata !12616, metadata !DIExpression()), !dbg !12618
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12619
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12621
  %5 = load i8*, i8** %id.addr, align 8, !dbg !12622
  %call1 = call zeroext i8 @RNA_property_enum_value(%struct.bContext* null, %struct.PointerRNA* %3, %struct.PropertyRNA* %4, i8* %5, i32* %value), !dbg !12623
  %tobool2 = icmp ne i8 %call1, 0, !dbg !12623
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !12624

if.then3:                                         ; preds = %if.then
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12625
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12626
  %8 = load i32, i32* %value, align 4, !dbg !12627
  call void @RNA_property_enum_set(%struct.PointerRNA* %6, %struct.PropertyRNA* %7, i32 %8), !dbg !12628
  br label %if.end, !dbg !12628

if.else:                                          ; preds = %if.then
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12629
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %9, i32 0, i32 1, !dbg !12630
  %10 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !12630
  %identifier = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %10, i32 0, i32 1, !dbg !12631
  %11 = load i8*, i8** %identifier, align 8, !dbg !12631
  %12 = load i8*, i8** %name.addr, align 8, !dbg !12632
  %13 = load i8*, i8** %id.addr, align 8, !dbg !12633
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.RNA_enum_set_identifier, i64 0, i64 0), i8* %11, i8* %12, i8* %13), !dbg !12634
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end5, !dbg !12635

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !12636
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_enum_is_equal(%struct.bContext* %C, %struct.PointerRNA* %ptr, i8* %name, i8* %enumname) #0 !dbg !12637 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %enumname.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %i = alloca i32, align 4
  %cmp = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12640, metadata !DIExpression()), !dbg !12641
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12642, metadata !DIExpression()), !dbg !12643
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12644, metadata !DIExpression()), !dbg !12645
  store i8* %enumname, i8** %enumname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %enumname.addr, metadata !12646, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12648, metadata !DIExpression()), !dbg !12649
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12650
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12651
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12652
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12649
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !12653, metadata !DIExpression()), !dbg !12654
  call void @llvm.dbg.declare(metadata i8* %free, metadata !12655, metadata !DIExpression()), !dbg !12656
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12657
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12657
  br i1 %tobool, label %if.then, label %if.else, !dbg !12659

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12660, metadata !DIExpression()), !dbg !12662
  call void @llvm.dbg.declare(metadata i8* %cmp, metadata !12663, metadata !DIExpression()), !dbg !12664
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12665
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12666
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12667
  call void @RNA_property_enum_items(%struct.bContext* %3, %struct.PointerRNA* %4, %struct.PropertyRNA* %5, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !12668
  %6 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !12669
  %7 = load i8*, i8** %enumname.addr, align 8, !dbg !12670
  %call1 = call i32 @RNA_enum_from_identifier(%struct.EnumPropertyItem* %6, i8* %7), !dbg !12671
  store i32 %call1, i32* %i, align 4, !dbg !12672
  %8 = load i32, i32* %i, align 4, !dbg !12673
  %cmp2 = icmp ne i32 %8, -1, !dbg !12675
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !12676

if.then3:                                         ; preds = %if.then
  %9 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !12677
  %10 = load i32, i32* %i, align 4, !dbg !12679
  %idxprom = sext i32 %10 to i64, !dbg !12677
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %9, i64 %idxprom, !dbg !12677
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 0, !dbg !12680
  %11 = load i32, i32* %value, align 8, !dbg !12680
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12681
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12682
  %call4 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %12, %struct.PropertyRNA* %13), !dbg !12683
  %cmp5 = icmp eq i32 %11, %call4, !dbg !12684
  %conv = zext i1 %cmp5 to i32, !dbg !12684
  %conv6 = trunc i32 %conv to i8, !dbg !12685
  store i8 %conv6, i8* %cmp, align 1, !dbg !12686
  br label %if.end, !dbg !12687

if.end:                                           ; preds = %if.then3, %if.then
  %14 = load i8, i8* %free, align 1, !dbg !12688
  %tobool7 = icmp ne i8 %14, 0, !dbg !12688
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !12690

if.then8:                                         ; preds = %if.end
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12691
  %16 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !12693
  %17 = bitcast %struct.EnumPropertyItem* %16 to i8*, !dbg !12693
  call void %15(i8* %17), !dbg !12691
  br label %if.end9, !dbg !12694

if.end9:                                          ; preds = %if.then8, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !12695
  %cmp10 = icmp ne i32 %18, -1, !dbg !12697
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !12698

if.then12:                                        ; preds = %if.end9
  %19 = load i8, i8* %cmp, align 1, !dbg !12699
  store i8 %19, i8* %retval, align 1, !dbg !12701
  br label %return, !dbg !12701

if.end13:                                         ; preds = %if.end9
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12702
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %20, i32 0, i32 1, !dbg !12703
  %21 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !12703
  %identifier = getelementptr inbounds %struct.StructRNA, %struct.StructRNA* %21, i32 0, i32 1, !dbg !12704
  %22 = load i8*, i8** %identifier, align 8, !dbg !12704
  %23 = load i8*, i8** %name.addr, align 8, !dbg !12705
  %24 = load i8*, i8** %enumname.addr, align 8, !dbg !12706
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.RNA_enum_is_equal, i64 0, i64 0), i8* %22, i8* %23, i8* %24), !dbg !12707
  store i8 0, i8* %retval, align 1, !dbg !12708
  br label %return, !dbg !12708

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12709
  br label %return, !dbg !12709

return:                                           ; preds = %if.else, %if.end13, %if.then12
  %25 = load i8, i8* %retval, align 1, !dbg !12711
  ret i8 %25, !dbg !12711
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_enum_value_from_id(%struct.EnumPropertyItem* %item, i8* %identifier, i32* %r_value) #0 !dbg !12712 {
entry:
  %retval = alloca i8, align 1
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %identifier.addr = alloca i8*, align 8
  %r_value.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !12715, metadata !DIExpression()), !dbg !12716
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !12717, metadata !DIExpression()), !dbg !12718
  store i32* %r_value, i32** %r_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_value.addr, metadata !12719, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12721, metadata !DIExpression()), !dbg !12722
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !12723
  %1 = load i8*, i8** %identifier.addr, align 8, !dbg !12724
  %call = call i32 @RNA_enum_from_identifier(%struct.EnumPropertyItem* %0, i8* %1), !dbg !12725
  store i32 %call, i32* %i, align 4, !dbg !12722
  %2 = load i32, i32* %i, align 4, !dbg !12726
  %cmp = icmp ne i32 %2, -1, !dbg !12728
  br i1 %cmp, label %if.then, label %if.else, !dbg !12729

if.then:                                          ; preds = %entry
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !12730
  %4 = load i32, i32* %i, align 4, !dbg !12732
  %idxprom = sext i32 %4 to i64, !dbg !12730
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %3, i64 %idxprom, !dbg !12730
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 0, !dbg !12733
  %5 = load i32, i32* %value, align 8, !dbg !12733
  %6 = load i32*, i32** %r_value.addr, align 8, !dbg !12734
  store i32 %5, i32* %6, align 4, !dbg !12735
  store i8 1, i8* %retval, align 1, !dbg !12736
  br label %return, !dbg !12736

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12737
  br label %return, !dbg !12737

return:                                           ; preds = %if.else, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !12739
  ret i8 %7, !dbg !12739
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_enum_id_from_value(%struct.EnumPropertyItem* %item, i32 %value, i8** %r_identifier) #0 !dbg !12740 {
entry:
  %retval = alloca i8, align 1
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %value.addr = alloca i32, align 4
  %r_identifier.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !12743, metadata !DIExpression()), !dbg !12744
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !12745, metadata !DIExpression()), !dbg !12746
  store i8** %r_identifier, i8*** %r_identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %r_identifier.addr, metadata !12747, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12749, metadata !DIExpression()), !dbg !12750
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !12751
  %1 = load i32, i32* %value.addr, align 4, !dbg !12752
  %call = call i32 @RNA_enum_from_value(%struct.EnumPropertyItem* %0, i32 %1), !dbg !12753
  store i32 %call, i32* %i, align 4, !dbg !12750
  %2 = load i32, i32* %i, align 4, !dbg !12754
  %cmp = icmp ne i32 %2, -1, !dbg !12756
  br i1 %cmp, label %if.then, label %if.else, !dbg !12757

if.then:                                          ; preds = %entry
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !12758
  %4 = load i32, i32* %i, align 4, !dbg !12760
  %idxprom = sext i32 %4 to i64, !dbg !12758
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %3, i64 %idxprom, !dbg !12758
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 1, !dbg !12761
  %5 = load i8*, i8** %identifier, align 8, !dbg !12761
  %6 = load i8**, i8*** %r_identifier.addr, align 8, !dbg !12762
  store i8* %5, i8** %6, align 8, !dbg !12763
  store i8 1, i8* %retval, align 1, !dbg !12764
  br label %return, !dbg !12764

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12765
  br label %return, !dbg !12765

return:                                           ; preds = %if.else, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !12767
  ret i8 %7, !dbg !12767
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_enum_icon_from_value(%struct.EnumPropertyItem* %item, i32 %value, i32* %r_icon) #0 !dbg !12768 {
entry:
  %retval = alloca i8, align 1
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %value.addr = alloca i32, align 4
  %r_icon.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !12771, metadata !DIExpression()), !dbg !12772
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !12773, metadata !DIExpression()), !dbg !12774
  store i32* %r_icon, i32** %r_icon.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_icon.addr, metadata !12775, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12777, metadata !DIExpression()), !dbg !12778
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !12779
  %1 = load i32, i32* %value.addr, align 4, !dbg !12780
  %call = call i32 @RNA_enum_from_value(%struct.EnumPropertyItem* %0, i32 %1), !dbg !12781
  store i32 %call, i32* %i, align 4, !dbg !12778
  %2 = load i32, i32* %i, align 4, !dbg !12782
  %cmp = icmp ne i32 %2, -1, !dbg !12784
  br i1 %cmp, label %if.then, label %if.else, !dbg !12785

if.then:                                          ; preds = %entry
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !12786
  %4 = load i32, i32* %i, align 4, !dbg !12788
  %idxprom = sext i32 %4 to i64, !dbg !12786
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %3, i64 %idxprom, !dbg !12786
  %icon = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 2, !dbg !12789
  %5 = load i32, i32* %icon, align 8, !dbg !12789
  %6 = load i32*, i32** %r_icon.addr, align 8, !dbg !12790
  store i32 %5, i32* %6, align 4, !dbg !12791
  store i8 1, i8* %retval, align 1, !dbg !12792
  br label %return, !dbg !12792

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12793
  br label %return, !dbg !12793

return:                                           ; preds = %if.else, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !12795
  ret i8 %7, !dbg !12795
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_enum_name_from_value(%struct.EnumPropertyItem* %item, i32 %value, i8** %r_name) #0 !dbg !12796 {
entry:
  %retval = alloca i8, align 1
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  %value.addr = alloca i32, align 4
  %r_name.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !12797, metadata !DIExpression()), !dbg !12798
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !12799, metadata !DIExpression()), !dbg !12800
  store i8** %r_name, i8*** %r_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %r_name.addr, metadata !12801, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12803, metadata !DIExpression()), !dbg !12804
  %0 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !12805
  %1 = load i32, i32* %value.addr, align 4, !dbg !12806
  %call = call i32 @RNA_enum_from_value(%struct.EnumPropertyItem* %0, i32 %1), !dbg !12807
  store i32 %call, i32* %i, align 4, !dbg !12804
  %2 = load i32, i32* %i, align 4, !dbg !12808
  %cmp = icmp ne i32 %2, -1, !dbg !12810
  br i1 %cmp, label %if.then, label %if.else, !dbg !12811

if.then:                                          ; preds = %entry
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !12812
  %4 = load i32, i32* %i, align 4, !dbg !12814
  %idxprom = sext i32 %4 to i64, !dbg !12812
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %3, i64 %idxprom, !dbg !12812
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 3, !dbg !12815
  %5 = load i8*, i8** %name, align 8, !dbg !12815
  %6 = load i8**, i8*** %r_name.addr, align 8, !dbg !12816
  store i8* %5, i8** %6, align 8, !dbg !12817
  store i8 1, i8* %retval, align 1, !dbg !12818
  br label %return, !dbg !12818

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12819
  br label %return, !dbg !12819

return:                                           ; preds = %if.else, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !12821
  ret i8 %7, !dbg !12821
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_string_get(%struct.PointerRNA* %ptr, i8* %name, i8* %value) #0 !dbg !12822 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12825, metadata !DIExpression()), !dbg !12826
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12827, metadata !DIExpression()), !dbg !12828
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !12829, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12831, metadata !DIExpression()), !dbg !12832
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12833
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12834
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12835
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12832
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12836
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12836
  br i1 %tobool, label %if.then, label %if.else, !dbg !12838

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12839
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12841
  %5 = load i8*, i8** %value.addr, align 8, !dbg !12842
  call void @RNA_property_string_get(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i8* %5), !dbg !12843
  br label %if.end, !dbg !12844

if.else:                                          ; preds = %entry
  %6 = load i8*, i8** %value.addr, align 8, !dbg !12845
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !12845
  store i8 0, i8* %arrayidx, align 1, !dbg !12847
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !12848
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_string_get_alloc(%struct.PointerRNA* %ptr, i8* %name, i8* %fixedbuf, i32 %fixedlen) #0 !dbg !12849 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %fixedbuf.addr = alloca i8*, align 8
  %fixedlen.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12852, metadata !DIExpression()), !dbg !12853
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12854, metadata !DIExpression()), !dbg !12855
  store i8* %fixedbuf, i8** %fixedbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fixedbuf.addr, metadata !12856, metadata !DIExpression()), !dbg !12857
  store i32 %fixedlen, i32* %fixedlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fixedlen.addr, metadata !12858, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12860, metadata !DIExpression()), !dbg !12861
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12862
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12863
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12864
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12861
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12865
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12865
  br i1 %tobool, label %if.then, label %if.else, !dbg !12867

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12868
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12870
  %5 = load i8*, i8** %fixedbuf.addr, align 8, !dbg !12871
  %6 = load i32, i32* %fixedlen.addr, align 4, !dbg !12872
  %call1 = call i8* @RNA_property_string_get_alloc(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i8* %5, i32 %6, i32* null), !dbg !12873
  store i8* %call1, i8** %retval, align 8, !dbg !12874
  br label %return, !dbg !12874

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12875
  br label %return, !dbg !12875

return:                                           ; preds = %if.else, %if.then
  %7 = load i8*, i8** %retval, align 8, !dbg !12877
  ret i8* %7, !dbg !12877
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_string_length(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !12878 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12879, metadata !DIExpression()), !dbg !12880
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12881, metadata !DIExpression()), !dbg !12882
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12883, metadata !DIExpression()), !dbg !12884
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12885
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12886
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12887
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12884
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12888
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12888
  br i1 %tobool, label %if.then, label %if.else, !dbg !12890

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12891
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12893
  %call1 = call i32 @RNA_property_string_length(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !12894
  store i32 %call1, i32* %retval, align 4, !dbg !12895
  br label %return, !dbg !12895

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12896
  br label %return, !dbg !12896

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12898
  ret i32 %5, !dbg !12898
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_string_set(%struct.PointerRNA* %ptr, i8* %name, i8* %value) #0 !dbg !12899 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12902, metadata !DIExpression()), !dbg !12903
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12906, metadata !DIExpression()), !dbg !12907
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12908
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12909
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12910
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12907
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12911
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12911
  br i1 %tobool, label %if.then, label %if.end, !dbg !12913

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12914
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12915
  %5 = load i8*, i8** %value.addr, align 8, !dbg !12916
  call void @RNA_property_string_set(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i8* %5), !dbg !12917
  br label %if.end, !dbg !12917

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12918
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_pointer_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr, i8* %name) #0 !dbg !12919 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12922, metadata !DIExpression()), !dbg !12923
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12924, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12926, metadata !DIExpression()), !dbg !12927
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12928
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12929
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12930
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12927
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12931
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12931
  br i1 %tobool, label %if.then, label %if.else, !dbg !12933

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12934
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12936
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !12937
  br label %return, !dbg !12938

if.else:                                          ; preds = %entry
  %5 = bitcast %struct.PointerRNA* %agg.result to i8*, !dbg !12939
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 bitcast (%struct.PointerRNA* @PointerRNA_NULL to i8*), i64 24, i1 false), !dbg !12939
  br label %return, !dbg !12941

return:                                           ; preds = %if.else, %if.then
  ret void, !dbg !12942
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_pointer_set(%struct.PointerRNA* %ptr, i8* %name, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %ptr_value) #0 !dbg !12943 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12946, metadata !DIExpression()), !dbg !12947
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12948, metadata !DIExpression()), !dbg !12949
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr_value, metadata !12950, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12952, metadata !DIExpression()), !dbg !12953
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12954
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12955
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12956
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12953
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12957
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12957
  br i1 %tobool, label %if.then, label %if.end, !dbg !12959

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12960
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12962
  call void @RNA_property_pointer_set(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %ptr_value), !dbg !12963
  br label %if.end, !dbg !12964

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12965
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_pointer_add(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !12966 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12969, metadata !DIExpression()), !dbg !12970
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12971, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12973, metadata !DIExpression()), !dbg !12974
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12975
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12976
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12977
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12974
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12978
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12978
  br i1 %tobool, label %if.then, label %if.end, !dbg !12980

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12981
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12982
  call void @RNA_property_pointer_add(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !12983
  br label %if.end, !dbg !12983

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12984
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_collection_begin(%struct.PointerRNA* %ptr, i8* %name, %struct.CollectionPropertyIterator* %iter) #0 !dbg !12985 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12988, metadata !DIExpression()), !dbg !12989
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12990, metadata !DIExpression()), !dbg !12991
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !12994, metadata !DIExpression()), !dbg !12995
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12996
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12997
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !12998
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !12995
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12999
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !12999
  br i1 %tobool, label %if.then, label %if.end, !dbg !13001

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13002
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13003
  %5 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !13004
  call void @RNA_property_collection_begin(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, %struct.CollectionPropertyIterator* %5), !dbg !13005
  br label %if.end, !dbg !13005

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13006
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_collection_add(%struct.PointerRNA* %ptr, i8* %name, %struct.PointerRNA* %r_value) #0 !dbg !13007 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %r_value.addr = alloca %struct.PointerRNA*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13010, metadata !DIExpression()), !dbg !13011
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13012, metadata !DIExpression()), !dbg !13013
  store %struct.PointerRNA* %r_value, %struct.PointerRNA** %r_value.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_value.addr, metadata !13014, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !13016, metadata !DIExpression()), !dbg !13017
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13018
  %1 = load i8*, i8** %name.addr, align 8, !dbg !13019
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !13020
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !13017
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13021
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !13021
  br i1 %tobool, label %if.then, label %if.end, !dbg !13023

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13024
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13025
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %r_value.addr, align 8, !dbg !13026
  call void @RNA_property_collection_add(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, %struct.PointerRNA* %5), !dbg !13027
  br label %if.end, !dbg !13027

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13028
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_collection_clear(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !13029 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13030, metadata !DIExpression()), !dbg !13031
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13032, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !13034, metadata !DIExpression()), !dbg !13035
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13036
  %1 = load i8*, i8** %name.addr, align 8, !dbg !13037
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !13038
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !13035
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13039
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !13039
  br i1 %tobool, label %if.then, label %if.end, !dbg !13041

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13042
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13043
  call void @RNA_property_collection_clear(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !13044
  br label %if.end, !dbg !13044

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13045
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_collection_length(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !13046 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13047, metadata !DIExpression()), !dbg !13048
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13049, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !13051, metadata !DIExpression()), !dbg !13052
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13053
  %1 = load i8*, i8** %name.addr, align 8, !dbg !13054
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !13055
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !13052
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13056
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !13056
  br i1 %tobool, label %if.then, label %if.else, !dbg !13058

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13059
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13061
  %call1 = call i32 @RNA_property_collection_length(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !13062
  store i32 %call1, i32* %retval, align 4, !dbg !13063
  br label %return, !dbg !13063

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13064
  br label %return, !dbg !13064

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !13066
  ret i32 %5, !dbg !13066
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_is_set_ex(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8 zeroext %use_ghost) #0 !dbg !13067 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %use_ghost.addr = alloca i8, align 1
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13070, metadata !DIExpression()), !dbg !13071
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !13072, metadata !DIExpression()), !dbg !13073
  store i8 %use_ghost, i8* %use_ghost.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_ghost.addr, metadata !13074, metadata !DIExpression()), !dbg !13075
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13076
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !13077
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13078
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13079
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 4, !dbg !13081
  %2 = load i32, i32* %flag, align 8, !dbg !13081
  %and = and i32 %2, 1024, !dbg !13082
  %tobool = icmp ne i32 %and, 0, !dbg !13082
  br i1 %tobool, label %if.then, label %if.else, !dbg !13083

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !13084, metadata !DIExpression()), !dbg !13086
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13087
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13088
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 3, !dbg !13089
  %5 = load i8*, i8** %identifier, align 8, !dbg !13089
  %call1 = call %struct.IDProperty* @rna_idproperty_find(%struct.PointerRNA* %3, i8* %5), !dbg !13090
  store %struct.IDProperty* %call1, %struct.IDProperty** %idprop, align 8, !dbg !13086
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !13091
  %cmp = icmp ne %struct.IDProperty* %6, null, !dbg !13092
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13093

land.rhs:                                         ; preds = %if.then
  %7 = load i8, i8* %use_ghost.addr, align 1, !dbg !13094
  %conv = zext i8 %7 to i32, !dbg !13094
  %cmp2 = icmp eq i32 %conv, 0, !dbg !13095
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !13096

lor.rhs:                                          ; preds = %land.rhs
  %8 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !13097
  %flag4 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 4, !dbg !13098
  %9 = load i16, i16* %flag4, align 2, !dbg !13098
  %conv5 = sext i16 %9 to i32, !dbg !13097
  %and6 = and i32 %conv5, 128, !dbg !13099
  %tobool7 = icmp ne i32 %and6, 0, !dbg !13100
  %lnot = xor i1 %tobool7, true, !dbg !13100
  br label %lor.end, !dbg !13096

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.rhs ], [ %lnot, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.then
  %11 = phi i1 [ false, %if.then ], [ %10, %lor.end ], !dbg !13101
  %land.ext = zext i1 %11 to i32, !dbg !13093
  %conv8 = trunc i32 %land.ext to i8, !dbg !13102
  store i8 %conv8, i8* %retval, align 1, !dbg !13103
  br label %return, !dbg !13103

if.else:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !13104
  br label %return, !dbg !13104

return:                                           ; preds = %if.else, %land.end
  %12 = load i8, i8* %retval, align 1, !dbg !13106
  ret i8 %12, !dbg !13106
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !13107 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13108, metadata !DIExpression()), !dbg !13109
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !13110, metadata !DIExpression()), !dbg !13111
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13112
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !13113
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13114
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13115
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 4, !dbg !13117
  %2 = load i32, i32* %flag, align 8, !dbg !13117
  %and = and i32 %2, 1024, !dbg !13118
  %tobool = icmp ne i32 %and, 0, !dbg !13118
  br i1 %tobool, label %if.then, label %if.else, !dbg !13119

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !13120, metadata !DIExpression()), !dbg !13122
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13123
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13124
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 3, !dbg !13125
  %5 = load i8*, i8** %identifier, align 8, !dbg !13125
  %call1 = call %struct.IDProperty* @rna_idproperty_find(%struct.PointerRNA* %3, i8* %5), !dbg !13126
  store %struct.IDProperty* %call1, %struct.IDProperty** %idprop, align 8, !dbg !13122
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !13127
  %cmp = icmp ne %struct.IDProperty* %6, null, !dbg !13128
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13129

land.rhs:                                         ; preds = %if.then
  %7 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !13130
  %flag2 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %7, i32 0, i32 4, !dbg !13131
  %8 = load i16, i16* %flag2, align 2, !dbg !13131
  %conv = sext i16 %8 to i32, !dbg !13130
  %and3 = and i32 %conv, 128, !dbg !13132
  %tobool4 = icmp ne i32 %and3, 0, !dbg !13133
  %lnot = xor i1 %tobool4, true, !dbg !13133
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %9 = phi i1 [ false, %if.then ], [ %lnot, %land.rhs ], !dbg !13134
  %land.ext = zext i1 %9 to i32, !dbg !13129
  %conv5 = trunc i32 %land.ext to i8, !dbg !13135
  store i8 %conv5, i8* %retval, align 1, !dbg !13136
  br label %return, !dbg !13136

if.else:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !13137
  br label %return, !dbg !13137

return:                                           ; preds = %if.else, %land.end
  %10 = load i8, i8* %retval, align 1, !dbg !13139
  ret i8 %10, !dbg !13139
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_property_unset(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !13140 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13141, metadata !DIExpression()), !dbg !13142
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !13143, metadata !DIExpression()), !dbg !13144
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13145
  %call = call %struct.PropertyRNA* @rna_ensure_property(%struct.PropertyRNA* %0), !dbg !13146
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13147
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13148
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 4, !dbg !13150
  %2 = load i32, i32* %flag, align 8, !dbg !13150
  %and = and i32 %2, 1024, !dbg !13151
  %tobool = icmp ne i32 %and, 0, !dbg !13151
  br i1 %tobool, label %if.then, label %if.end, !dbg !13152

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13153
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13155
  %identifier = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %4, i32 0, i32 3, !dbg !13156
  %5 = load i8*, i8** %identifier, align 8, !dbg !13156
  call void @rna_idproperty_free(%struct.PointerRNA* %3, i8* %5), !dbg !13157
  br label %if.end, !dbg !13158

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13159
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_idproperty_free(%struct.PointerRNA* %ptr, i8* %name) #0 !dbg !13160 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %group = alloca %struct.IDProperty*, align 8
  %idprop = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13161, metadata !DIExpression()), !dbg !13162
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13163, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %group, metadata !13165, metadata !DIExpression()), !dbg !13166
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13167
  %call = call %struct.IDProperty* @RNA_struct_idprops(%struct.PointerRNA* %0, i8 zeroext 0), !dbg !13168
  store %struct.IDProperty* %call, %struct.IDProperty** %group, align 8, !dbg !13166
  %1 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !13169
  %tobool = icmp ne %struct.IDProperty* %1, null, !dbg !13169
  br i1 %tobool, label %if.then, label %if.end4, !dbg !13171

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idprop, metadata !13172, metadata !DIExpression()), !dbg !13174
  %2 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !13175
  %3 = load i8*, i8** %name.addr, align 8, !dbg !13176
  %call1 = call %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty* %2, i8* %3), !dbg !13177
  store %struct.IDProperty* %call1, %struct.IDProperty** %idprop, align 8, !dbg !13174
  %4 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !13178
  %tobool2 = icmp ne %struct.IDProperty* %4, null, !dbg !13178
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !13180

if.then3:                                         ; preds = %if.then
  %5 = load %struct.IDProperty*, %struct.IDProperty** %group, align 8, !dbg !13181
  %6 = load %struct.IDProperty*, %struct.IDProperty** %idprop, align 8, !dbg !13183
  call void @IDP_FreeFromGroup(%struct.IDProperty* %5, %struct.IDProperty* %6), !dbg !13184
  br label %if.end, !dbg !13185

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end4, !dbg !13186

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !13187
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_property_is_set_ex(%struct.PointerRNA* %ptr, i8* %identifier, i8 zeroext %use_ghost) #0 !dbg !13188 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %use_ghost.addr = alloca i8, align 1
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13191, metadata !DIExpression()), !dbg !13192
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !13193, metadata !DIExpression()), !dbg !13194
  store i8 %use_ghost, i8* %use_ghost.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_ghost.addr, metadata !13195, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !13197, metadata !DIExpression()), !dbg !13198
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13199
  %1 = load i8*, i8** %identifier.addr, align 8, !dbg !13200
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !13201
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !13198
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13202
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !13202
  br i1 %tobool, label %if.then, label %if.else, !dbg !13204

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13205
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13207
  %5 = load i8, i8* %use_ghost.addr, align 1, !dbg !13208
  %call1 = call zeroext i8 @RNA_property_is_set_ex(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i8 zeroext %5), !dbg !13209
  store i8 %call1, i8* %retval, align 1, !dbg !13210
  br label %return, !dbg !13210

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !13211
  br label %return, !dbg !13211

return:                                           ; preds = %if.else, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !13213
  ret i8 %6, !dbg !13213
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %ptr, i8* %identifier) #0 !dbg !13214 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13215, metadata !DIExpression()), !dbg !13216
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !13217, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !13219, metadata !DIExpression()), !dbg !13220
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13221
  %1 = load i8*, i8** %identifier.addr, align 8, !dbg !13222
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !13223
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !13220
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13224
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !13224
  br i1 %tobool, label %if.then, label %if.else, !dbg !13226

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13227
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13229
  %call1 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !13230
  store i8 %call1, i8* %retval, align 1, !dbg !13231
  br label %return, !dbg !13231

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !13232
  br label %return, !dbg !13232

return:                                           ; preds = %if.else, %if.then
  %5 = load i8, i8* %retval, align 1, !dbg !13234
  ret i8 %5, !dbg !13234
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_struct_property_unset(%struct.PointerRNA* %ptr, i8* %identifier) #0 !dbg !13235 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13236, metadata !DIExpression()), !dbg !13237
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !13238, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !13240, metadata !DIExpression()), !dbg !13241
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13242
  %1 = load i8*, i8** %identifier.addr, align 8, !dbg !13243
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !13244
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !13241
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13245
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !13245
  br i1 %tobool, label %if.then, label %if.end, !dbg !13247

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13248
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13250
  call void @RNA_property_unset(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !13251
  br label %if.end, !dbg !13252

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13253
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_is_idprop(%struct.PropertyRNA* %prop) #0 !dbg !13254 {
entry:
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !13255, metadata !DIExpression()), !dbg !13256
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13257
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 2, !dbg !13258
  %1 = load i32, i32* %magic, align 8, !dbg !13258
  %cmp = icmp ne i32 %1, -1, !dbg !13259
  %conv = zext i1 %cmp to i32, !dbg !13259
  %conv1 = trunc i32 %conv to i8, !dbg !13260
  ret i8 %conv1, !dbg !13261
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_is_unlink(%struct.PropertyRNA* %prop) #0 !dbg !13262 {
entry:
  %retval = alloca i8, align 1
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %flag = alloca i32, align 4
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !13263, metadata !DIExpression()), !dbg !13264
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !13265, metadata !DIExpression()), !dbg !13266
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13267
  %call = call i32 @RNA_property_flag(%struct.PropertyRNA* %0), !dbg !13268
  store i32 %call, i32* %flag, align 4, !dbg !13266
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13269
  %call1 = call i32 @RNA_property_type(%struct.PropertyRNA* %1), !dbg !13271
  %cmp = icmp eq i32 %call1, 3, !dbg !13272
  br i1 %cmp, label %if.then, label %if.else, !dbg !13273

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %flag, align 4, !dbg !13274
  %and = and i32 %2, 33554432, !dbg !13276
  %cmp2 = icmp eq i32 %and, 0, !dbg !13277
  %conv = zext i1 %cmp2 to i32, !dbg !13277
  %conv3 = trunc i32 %conv to i8, !dbg !13278
  store i8 %conv3, i8* %retval, align 1, !dbg !13279
  br label %return, !dbg !13279

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %flag, align 4, !dbg !13280
  %and4 = and i32 %3, 33816576, !dbg !13282
  %cmp5 = icmp eq i32 %and4, 0, !dbg !13283
  %conv6 = zext i1 %cmp5 to i32, !dbg !13283
  %conv7 = trunc i32 %conv6 to i8, !dbg !13284
  store i8 %conv7, i8* %retval, align 1, !dbg !13285
  br label %return, !dbg !13285

return:                                           ; preds = %if.else, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !13286
  ret i8 %4, !dbg !13286
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_pointer_as_string_id(%struct.bContext* %C, %struct.PointerRNA* %ptr) #0 !dbg !13287 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %dynstr = alloca %struct.DynStr*, align 8
  %cstring = alloca i8*, align 8
  %propname = alloca i8*, align 8
  %first_time = alloca i32, align 4
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13290, metadata !DIExpression()), !dbg !13291
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13292, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.declare(metadata %struct.DynStr** %dynstr, metadata !13294, metadata !DIExpression()), !dbg !13295
  %call = call %struct.DynStr* @BLI_dynstr_new(), !dbg !13296
  store %struct.DynStr* %call, %struct.DynStr** %dynstr, align 8, !dbg !13295
  call void @llvm.dbg.declare(metadata i8** %cstring, metadata !13297, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.declare(metadata i8** %propname, metadata !13299, metadata !DIExpression()), !dbg !13300
  call void @llvm.dbg.declare(metadata i32* %first_time, metadata !13301, metadata !DIExpression()), !dbg !13302
  store i32 1, i32* %first_time, align 4, !dbg !13302
  %0 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13303
  call void @BLI_dynstr_append(%struct.DynStr* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)), !dbg !13304
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !13305, metadata !DIExpression()), !dbg !13307
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13308
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13308
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 1, !dbg !13308
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !13308
  %call1 = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %3), !dbg !13308
  call void @RNA_property_collection_begin(%struct.PointerRNA* %1, %struct.PropertyRNA* %call1, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !13308
  br label %for.cond, !dbg !13308

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !13310
  %4 = load i32, i32* %valid, align 8, !dbg !13310
  %tobool = icmp ne i32 %4, 0, !dbg !13308
  br i1 %tobool, label %for.body, label %for.end, !dbg !13308

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !13312, metadata !DIExpression()), !dbg !13314
  %ptr2 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !13314
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr2, i32 0, i32 2, !dbg !13314
  %5 = load i8*, i8** %data, align 8, !dbg !13314
  %6 = bitcast i8* %5 to %struct.PropertyRNA*, !dbg !13314
  store %struct.PropertyRNA* %6, %struct.PropertyRNA** %prop, align 8, !dbg !13314
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13315
  %call3 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %7), !dbg !13317
  store i8* %call3, i8** %propname, align 8, !dbg !13318
  %8 = load i8*, i8** %propname, align 8, !dbg !13319
  %call4 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)) #7, !dbg !13321
  %cmp = icmp eq i32 %call4, 0, !dbg !13322
  br i1 %cmp, label %if.then, label %if.end, !dbg !13323

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !13324

if.end:                                           ; preds = %for.body
  %9 = load i32, i32* %first_time, align 4, !dbg !13325
  %cmp5 = icmp eq i32 %9, 0, !dbg !13327
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !13328

if.then6:                                         ; preds = %if.end
  %10 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13329
  call void @BLI_dynstr_append(%struct.DynStr* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0)), !dbg !13330
  br label %if.end7, !dbg !13330

if.end7:                                          ; preds = %if.then6, %if.end
  store i32 0, i32* %first_time, align 4, !dbg !13331
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13332
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13333
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13334
  %call8 = call i8* @RNA_property_as_string(%struct.bContext* %11, %struct.PointerRNA* %12, %struct.PropertyRNA* %13, i32 -1, i32 2147483647), !dbg !13335
  store i8* %call8, i8** %cstring, align 8, !dbg !13336
  %14 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13337
  %15 = load i8*, i8** %propname, align 8, !dbg !13338
  %16 = load i8*, i8** %cstring, align 8, !dbg !13339
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), i8* %15, i8* %16), !dbg !13340
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13341
  %18 = load i8*, i8** %cstring, align 8, !dbg !13342
  call void %17(i8* %18), !dbg !13341
  br label %for.inc, !dbg !13343

for.inc:                                          ; preds = %if.end7, %if.then
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !13310
  br label %for.cond, !dbg !13310, !llvm.loop !13344

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !13346
  %19 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13347
  call void @BLI_dynstr_append(%struct.DynStr* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)), !dbg !13348
  %20 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13349
  %call9 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %20), !dbg !13350
  store i8* %call9, i8** %cstring, align 8, !dbg !13351
  %21 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13352
  call void @BLI_dynstr_free(%struct.DynStr* %21), !dbg !13353
  %22 = load i8*, i8** %cstring, align 8, !dbg !13354
  ret i8* %22, !dbg !13355
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_property_as_string(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, i32 %max_prop_length) #0 !dbg !13356 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %max_prop_length.addr = alloca i32, align 4
  %type = alloca i32, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %dynstr = alloca %struct.DynStr*, align 8
  %cstring = alloca i8*, align 8
  %buf_esc = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %length = alloca i32, align 4
  %identifier = alloca i8*, align 8
  %val = alloca i32, align 4
  %item_array = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %item = alloca %struct.EnumPropertyItem*, align 8
  %is_first = alloca i8, align 1
  %tptr = alloca %struct.PointerRNA, align 8
  %i123 = alloca i32, align 4
  %collect_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13359, metadata !DIExpression()), !dbg !13360
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13361, metadata !DIExpression()), !dbg !13362
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !13363, metadata !DIExpression()), !dbg !13364
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13365, metadata !DIExpression()), !dbg !13366
  store i32 %max_prop_length, i32* %max_prop_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_prop_length.addr, metadata !13367, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.declare(metadata i32* %type, metadata !13369, metadata !DIExpression()), !dbg !13370
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13371
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %0), !dbg !13372
  store i32 %call, i32* %type, align 4, !dbg !13370
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13373, metadata !DIExpression()), !dbg !13374
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13375
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13376
  %call1 = call i32 @RNA_property_array_length(%struct.PointerRNA* %1, %struct.PropertyRNA* %2), !dbg !13377
  store i32 %call1, i32* %len, align 4, !dbg !13374
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13378, metadata !DIExpression()), !dbg !13379
  call void @llvm.dbg.declare(metadata %struct.DynStr** %dynstr, metadata !13380, metadata !DIExpression()), !dbg !13381
  %call2 = call %struct.DynStr* @BLI_dynstr_new(), !dbg !13382
  store %struct.DynStr* %call2, %struct.DynStr** %dynstr, align 8, !dbg !13381
  call void @llvm.dbg.declare(metadata i8** %cstring, metadata !13383, metadata !DIExpression()), !dbg !13384
  %3 = load i32, i32* %type, align 4, !dbg !13385
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb17
    i32 2, label %sw.bb40
    i32 3, label %sw.bb68
    i32 4, label %sw.bb81
    i32 5, label %sw.bb120
    i32 6, label %sw.bb122
  ], !dbg !13386

sw.bb:                                            ; preds = %entry
  %4 = load i32, i32* %len, align 4, !dbg !13387
  %cmp = icmp eq i32 %4, 0, !dbg !13390
  br i1 %cmp, label %if.then, label %if.else, !dbg !13391

if.then:                                          ; preds = %sw.bb
  %5 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13392
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13394
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13395
  %call3 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %6, %struct.PropertyRNA* %7), !dbg !13396
  %call4 = call i8* @bool_as_py_string(i32 %call3), !dbg !13397
  call void @BLI_dynstr_append(%struct.DynStr* %5, i8* %call4), !dbg !13398
  br label %if.end16, !dbg !13399

if.else:                                          ; preds = %sw.bb
  %8 = load i32, i32* %index.addr, align 4, !dbg !13400
  %cmp5 = icmp ne i32 %8, -1, !dbg !13403
  br i1 %cmp5, label %if.then6, label %if.else9, !dbg !13404

if.then6:                                         ; preds = %if.else
  %9 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13405
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13407
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13408
  %12 = load i32, i32* %index.addr, align 4, !dbg !13409
  %call7 = call i32 @RNA_property_boolean_get_index(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, i32 %12), !dbg !13410
  %call8 = call i8* @bool_as_py_string(i32 %call7), !dbg !13411
  call void @BLI_dynstr_append(%struct.DynStr* %9, i8* %call8), !dbg !13412
  br label %if.end15, !dbg !13413

if.else9:                                         ; preds = %if.else
  %13 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13414
  call void @BLI_dynstr_append(%struct.DynStr* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0)), !dbg !13416
  store i32 0, i32* %i, align 4, !dbg !13417
  br label %for.cond, !dbg !13419

for.cond:                                         ; preds = %for.inc, %if.else9
  %14 = load i32, i32* %i, align 4, !dbg !13420
  %15 = load i32, i32* %len, align 4, !dbg !13422
  %cmp10 = icmp slt i32 %14, %15, !dbg !13423
  br i1 %cmp10, label %for.body, label %for.end, !dbg !13424

for.body:                                         ; preds = %for.cond
  %16 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13425
  %17 = load i32, i32* %i, align 4, !dbg !13427
  %tobool = icmp ne i32 %17, 0, !dbg !13427
  %18 = zext i1 %tobool to i64, !dbg !13427
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0), !dbg !13427
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13428
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13429
  %21 = load i32, i32* %i, align 4, !dbg !13430
  %call11 = call i32 @RNA_property_boolean_get_index(%struct.PointerRNA* %19, %struct.PropertyRNA* %20, i32 %21), !dbg !13431
  %call12 = call i8* @bool_as_py_string(i32 %call11), !dbg !13432
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %16, i8* %cond, i8* %call12), !dbg !13433
  br label %for.inc, !dbg !13434

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !13435
  %inc = add nsw i32 %22, 1, !dbg !13435
  store i32 %inc, i32* %i, align 4, !dbg !13435
  br label %for.cond, !dbg !13436, !llvm.loop !13437

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %len, align 4, !dbg !13439
  %cmp13 = icmp eq i32 %23, 1, !dbg !13441
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !13442

if.then14:                                        ; preds = %for.end
  %24 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13443
  call void @BLI_dynstr_append(%struct.DynStr* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !13444
  br label %if.end, !dbg !13444

if.end:                                           ; preds = %if.then14, %for.end
  %25 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13445
  call void @BLI_dynstr_append(%struct.DynStr* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0)), !dbg !13446
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then6
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  br label %sw.epilog, !dbg !13447

sw.bb17:                                          ; preds = %entry
  %26 = load i32, i32* %len, align 4, !dbg !13448
  %cmp18 = icmp eq i32 %26, 0, !dbg !13450
  br i1 %cmp18, label %if.then19, label %if.else21, !dbg !13451

if.then19:                                        ; preds = %sw.bb17
  %27 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13452
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13454
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13455
  %call20 = call i32 @RNA_property_int_get(%struct.PointerRNA* %28, %struct.PropertyRNA* %29), !dbg !13456
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i32 %call20), !dbg !13457
  br label %if.end39, !dbg !13458

if.else21:                                        ; preds = %sw.bb17
  %30 = load i32, i32* %index.addr, align 4, !dbg !13459
  %cmp22 = icmp ne i32 %30, -1, !dbg !13462
  br i1 %cmp22, label %if.then23, label %if.else25, !dbg !13463

if.then23:                                        ; preds = %if.else21
  %31 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13464
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13466
  %33 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13467
  %34 = load i32, i32* %index.addr, align 4, !dbg !13468
  %call24 = call i32 @RNA_property_int_get_index(%struct.PointerRNA* %32, %struct.PropertyRNA* %33, i32 %34), !dbg !13469
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i32 %call24), !dbg !13470
  br label %if.end38, !dbg !13471

if.else25:                                        ; preds = %if.else21
  %35 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13472
  call void @BLI_dynstr_append(%struct.DynStr* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0)), !dbg !13474
  store i32 0, i32* %i, align 4, !dbg !13475
  br label %for.cond26, !dbg !13477

for.cond26:                                       ; preds = %for.inc32, %if.else25
  %36 = load i32, i32* %i, align 4, !dbg !13478
  %37 = load i32, i32* %len, align 4, !dbg !13480
  %cmp27 = icmp slt i32 %36, %37, !dbg !13481
  br i1 %cmp27, label %for.body28, label %for.end34, !dbg !13482

for.body28:                                       ; preds = %for.cond26
  %38 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13483
  %39 = load i32, i32* %i, align 4, !dbg !13485
  %tobool29 = icmp ne i32 %39, 0, !dbg !13485
  %40 = zext i1 %tobool29 to i64, !dbg !13485
  %cond30 = select i1 %tobool29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), !dbg !13485
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13486
  %42 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13487
  %43 = load i32, i32* %i, align 4, !dbg !13488
  %call31 = call i32 @RNA_property_int_get_index(%struct.PointerRNA* %41, %struct.PropertyRNA* %42, i32 %43), !dbg !13489
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %38, i8* %cond30, i32 %call31), !dbg !13490
  br label %for.inc32, !dbg !13491

for.inc32:                                        ; preds = %for.body28
  %44 = load i32, i32* %i, align 4, !dbg !13492
  %inc33 = add nsw i32 %44, 1, !dbg !13492
  store i32 %inc33, i32* %i, align 4, !dbg !13492
  br label %for.cond26, !dbg !13493, !llvm.loop !13494

for.end34:                                        ; preds = %for.cond26
  %45 = load i32, i32* %len, align 4, !dbg !13496
  %cmp35 = icmp eq i32 %45, 1, !dbg !13498
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !13499

if.then36:                                        ; preds = %for.end34
  %46 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13500
  call void @BLI_dynstr_append(%struct.DynStr* %46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !13501
  br label %if.end37, !dbg !13501

if.end37:                                         ; preds = %if.then36, %for.end34
  %47 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13502
  call void @BLI_dynstr_append(%struct.DynStr* %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0)), !dbg !13503
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then23
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then19
  br label %sw.epilog, !dbg !13504

sw.bb40:                                          ; preds = %entry
  %48 = load i32, i32* %len, align 4, !dbg !13505
  %cmp41 = icmp eq i32 %48, 0, !dbg !13507
  br i1 %cmp41, label %if.then42, label %if.else44, !dbg !13508

if.then42:                                        ; preds = %sw.bb40
  %49 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13509
  %50 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13511
  %51 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13512
  %call43 = call float @RNA_property_float_get(%struct.PointerRNA* %50, %struct.PropertyRNA* %51), !dbg !13513
  %conv = fpext float %call43 to double, !dbg !13513
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), double %conv), !dbg !13514
  br label %if.end67, !dbg !13515

if.else44:                                        ; preds = %sw.bb40
  %52 = load i32, i32* %index.addr, align 4, !dbg !13516
  %cmp45 = icmp ne i32 %52, -1, !dbg !13519
  br i1 %cmp45, label %if.then47, label %if.else50, !dbg !13520

if.then47:                                        ; preds = %if.else44
  %53 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13521
  %54 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13523
  %55 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13524
  %56 = load i32, i32* %index.addr, align 4, !dbg !13525
  %call48 = call float @RNA_property_float_get_index(%struct.PointerRNA* %54, %struct.PropertyRNA* %55, i32 %56), !dbg !13526
  %conv49 = fpext float %call48 to double, !dbg !13526
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), double %conv49), !dbg !13527
  br label %if.end66, !dbg !13528

if.else50:                                        ; preds = %if.else44
  %57 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13529
  call void @BLI_dynstr_append(%struct.DynStr* %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0)), !dbg !13531
  store i32 0, i32* %i, align 4, !dbg !13532
  br label %for.cond51, !dbg !13534

for.cond51:                                       ; preds = %for.inc59, %if.else50
  %58 = load i32, i32* %i, align 4, !dbg !13535
  %59 = load i32, i32* %len, align 4, !dbg !13537
  %cmp52 = icmp slt i32 %58, %59, !dbg !13538
  br i1 %cmp52, label %for.body54, label %for.end61, !dbg !13539

for.body54:                                       ; preds = %for.cond51
  %60 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13540
  %61 = load i32, i32* %i, align 4, !dbg !13542
  %tobool55 = icmp ne i32 %61, 0, !dbg !13542
  %62 = zext i1 %tobool55 to i64, !dbg !13542
  %cond56 = select i1 %tobool55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), !dbg !13542
  %63 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13543
  %64 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13544
  %65 = load i32, i32* %i, align 4, !dbg !13545
  %call57 = call float @RNA_property_float_get_index(%struct.PointerRNA* %63, %struct.PropertyRNA* %64, i32 %65), !dbg !13546
  %conv58 = fpext float %call57 to double, !dbg !13546
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %60, i8* %cond56, double %conv58), !dbg !13547
  br label %for.inc59, !dbg !13548

for.inc59:                                        ; preds = %for.body54
  %66 = load i32, i32* %i, align 4, !dbg !13549
  %inc60 = add nsw i32 %66, 1, !dbg !13549
  store i32 %inc60, i32* %i, align 4, !dbg !13549
  br label %for.cond51, !dbg !13550, !llvm.loop !13551

for.end61:                                        ; preds = %for.cond51
  %67 = load i32, i32* %len, align 4, !dbg !13553
  %cmp62 = icmp eq i32 %67, 1, !dbg !13555
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !13556

if.then64:                                        ; preds = %for.end61
  %68 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13557
  call void @BLI_dynstr_append(%struct.DynStr* %68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)), !dbg !13558
  br label %if.end65, !dbg !13558

if.end65:                                         ; preds = %if.then64, %for.end61
  %69 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13559
  call void @BLI_dynstr_append(%struct.DynStr* %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0)), !dbg !13560
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then47
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then42
  br label %sw.epilog, !dbg !13561

sw.bb68:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %buf_esc, metadata !13562, metadata !DIExpression()), !dbg !13564
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !13565, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.declare(metadata i32* %length, metadata !13567, metadata !DIExpression()), !dbg !13568
  %70 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13569
  %71 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13570
  %call69 = call i32 @RNA_property_string_length(%struct.PointerRNA* %70, %struct.PropertyRNA* %71), !dbg !13571
  store i32 %call69, i32* %length, align 4, !dbg !13572
  %72 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13573
  %73 = load i32, i32* %length, align 4, !dbg !13574
  %add = add nsw i32 %73, 1, !dbg !13575
  %conv70 = sext i32 %add to i64, !dbg !13576
  %mul = mul i64 1, %conv70, !dbg !13577
  %call71 = call i8* %72(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.57, i64 0, i64 0)), !dbg !13573
  store i8* %call71, i8** %buf, align 8, !dbg !13578
  %74 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13579
  %75 = load i32, i32* %length, align 4, !dbg !13580
  %mul72 = mul nsw i32 %75, 2, !dbg !13581
  %add73 = add nsw i32 %mul72, 1, !dbg !13582
  %conv74 = sext i32 %add73 to i64, !dbg !13583
  %mul75 = mul i64 1, %conv74, !dbg !13584
  %call76 = call i8* %74(i64 %mul75, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0)), !dbg !13579
  store i8* %call76, i8** %buf_esc, align 8, !dbg !13585
  %76 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13586
  %77 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13587
  %78 = load i8*, i8** %buf, align 8, !dbg !13588
  call void @RNA_property_string_get(%struct.PointerRNA* %76, %struct.PropertyRNA* %77, i8* %78), !dbg !13589
  %79 = load i8*, i8** %buf_esc, align 8, !dbg !13590
  %80 = load i8*, i8** %buf, align 8, !dbg !13591
  %81 = load i32, i32* %length, align 4, !dbg !13592
  %mul77 = mul nsw i32 %81, 2, !dbg !13593
  %add78 = add nsw i32 %mul77, 1, !dbg !13594
  %conv79 = sext i32 %add78 to i64, !dbg !13592
  %call80 = call i64 @BLI_strescape(i8* %79, i8* %80, i64 %conv79), !dbg !13595
  %82 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13596
  %83 = load i8*, i8** %buf, align 8, !dbg !13597
  call void %82(i8* %83), !dbg !13596
  %84 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13598
  %85 = load i8*, i8** %buf_esc, align 8, !dbg !13599
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i8* %85), !dbg !13600
  %86 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13601
  %87 = load i8*, i8** %buf_esc, align 8, !dbg !13602
  call void %86(i8* %87), !dbg !13601
  br label %sw.epilog, !dbg !13603

sw.bb81:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %identifier, metadata !13604, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.declare(metadata i32* %val, metadata !13607, metadata !DIExpression()), !dbg !13608
  %88 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13609
  %89 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13610
  %call82 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %88, %struct.PropertyRNA* %89), !dbg !13611
  store i32 %call82, i32* %val, align 4, !dbg !13608
  %90 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13612
  %call83 = call i32 @RNA_property_flag(%struct.PropertyRNA* %90), !dbg !13614
  %and = and i32 %call83, 2097152, !dbg !13615
  %tobool84 = icmp ne i32 %and, 0, !dbg !13615
  br i1 %tobool84, label %if.then85, label %if.else113, !dbg !13616

if.then85:                                        ; preds = %sw.bb81
  %91 = load i32, i32* %val, align 4, !dbg !13617
  %tobool86 = icmp ne i32 %91, 0, !dbg !13617
  br i1 %tobool86, label %if.then87, label %if.else111, !dbg !13620

if.then87:                                        ; preds = %if.then85
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item_array, metadata !13621, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.declare(metadata i8* %free, metadata !13624, metadata !DIExpression()), !dbg !13625
  %92 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13626
  call void @BLI_dynstr_append(%struct.DynStr* %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)), !dbg !13627
  %93 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13628
  %94 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13629
  %95 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13630
  call void @RNA_property_enum_items(%struct.bContext* %93, %struct.PointerRNA* %94, %struct.PropertyRNA* %95, %struct.EnumPropertyItem** %item_array, i32* null, i8* %free), !dbg !13631
  %96 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !13632
  %tobool88 = icmp ne %struct.EnumPropertyItem* %96, null, !dbg !13632
  br i1 %tobool88, label %if.then89, label %if.end110, !dbg !13634

if.then89:                                        ; preds = %if.then87
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !13635, metadata !DIExpression()), !dbg !13637
  %97 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !13638
  store %struct.EnumPropertyItem* %97, %struct.EnumPropertyItem** %item, align 8, !dbg !13637
  call void @llvm.dbg.declare(metadata i8* %is_first, metadata !13639, metadata !DIExpression()), !dbg !13640
  store i8 1, i8* %is_first, align 1, !dbg !13640
  br label %for.cond90, !dbg !13641

for.cond90:                                       ; preds = %for.inc105, %if.then89
  %98 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !13642
  %identifier91 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %98, i32 0, i32 1, !dbg !13645
  %99 = load i8*, i8** %identifier91, align 8, !dbg !13645
  %tobool92 = icmp ne i8* %99, null, !dbg !13646
  br i1 %tobool92, label %for.body93, label %for.end106, !dbg !13646

for.body93:                                       ; preds = %for.cond90
  %100 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !13647
  %identifier94 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %100, i32 0, i32 1, !dbg !13650
  %101 = load i8*, i8** %identifier94, align 8, !dbg !13650
  %arrayidx = getelementptr inbounds i8, i8* %101, i64 0, !dbg !13647
  %102 = load i8, i8* %arrayidx, align 1, !dbg !13647
  %conv95 = zext i8 %102 to i32, !dbg !13647
  %tobool96 = icmp ne i32 %conv95, 0, !dbg !13647
  br i1 %tobool96, label %land.lhs.true, label %if.end104, !dbg !13651

land.lhs.true:                                    ; preds = %for.body93
  %103 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !13652
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %103, i32 0, i32 0, !dbg !13653
  %104 = load i32, i32* %value, align 8, !dbg !13653
  %105 = load i32, i32* %val, align 4, !dbg !13654
  %and97 = and i32 %104, %105, !dbg !13655
  %tobool98 = icmp ne i32 %and97, 0, !dbg !13655
  br i1 %tobool98, label %if.then99, label %if.end104, !dbg !13656

if.then99:                                        ; preds = %land.lhs.true
  %106 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13657
  %107 = load i8, i8* %is_first, align 1, !dbg !13659
  %conv100 = zext i8 %107 to i32, !dbg !13659
  %tobool101 = icmp ne i32 %conv100, 0, !dbg !13659
  %108 = zext i1 %tobool101 to i64, !dbg !13659
  %cond102 = select i1 %tobool101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0), !dbg !13659
  %109 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !13660
  %identifier103 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %109, i32 0, i32 1, !dbg !13661
  %110 = load i8*, i8** %identifier103, align 8, !dbg !13661
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %106, i8* %cond102, i8* %110), !dbg !13662
  store i8 0, i8* %is_first, align 1, !dbg !13663
  br label %if.end104, !dbg !13664

if.end104:                                        ; preds = %if.then99, %land.lhs.true, %for.body93
  br label %for.inc105, !dbg !13665

for.inc105:                                       ; preds = %if.end104
  %111 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !13666
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %111, i32 1, !dbg !13666
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item, align 8, !dbg !13666
  br label %for.cond90, !dbg !13667, !llvm.loop !13668

for.end106:                                       ; preds = %for.cond90
  %112 = load i8, i8* %free, align 1, !dbg !13670
  %tobool107 = icmp ne i8 %112, 0, !dbg !13670
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !13672

if.then108:                                       ; preds = %for.end106
  %113 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13673
  %114 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !13675
  %115 = bitcast %struct.EnumPropertyItem* %114 to i8*, !dbg !13675
  call void %113(i8* %115), !dbg !13673
  br label %if.end109, !dbg !13676

if.end109:                                        ; preds = %if.then108, %for.end106
  br label %if.end110, !dbg !13677

if.end110:                                        ; preds = %if.end109, %if.then87
  %116 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13678
  call void @BLI_dynstr_append(%struct.DynStr* %116, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0)), !dbg !13679
  br label %if.end112, !dbg !13680

if.else111:                                       ; preds = %if.then85
  %117 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13681
  call void @BLI_dynstr_append(%struct.DynStr* %117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0)), !dbg !13683
  br label %if.end112

if.end112:                                        ; preds = %if.else111, %if.end110
  br label %if.end119, !dbg !13684

if.else113:                                       ; preds = %sw.bb81
  %118 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13685
  %119 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13687
  %120 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13688
  %121 = load i32, i32* %val, align 4, !dbg !13689
  %call114 = call zeroext i8 @RNA_property_enum_identifier(%struct.bContext* %118, %struct.PointerRNA* %119, %struct.PropertyRNA* %120, i32 %121, i8** %identifier), !dbg !13690
  %tobool115 = icmp ne i8 %call114, 0, !dbg !13690
  br i1 %tobool115, label %if.then116, label %if.else117, !dbg !13691

if.then116:                                       ; preds = %if.else113
  %122 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13692
  %123 = load i8*, i8** %identifier, align 8, !dbg !13694
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %122, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* %123), !dbg !13695
  br label %if.end118, !dbg !13696

if.else117:                                       ; preds = %if.else113
  %124 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13697
  call void @BLI_dynstr_append(%struct.DynStr* %124, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i64 0, i64 0)), !dbg !13699
  br label %if.end118

if.end118:                                        ; preds = %if.else117, %if.then116
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end112
  br label %sw.epilog, !dbg !13700

sw.bb120:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %tptr, metadata !13701, metadata !DIExpression()), !dbg !13703
  %125 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13704
  %126 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13705
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %tptr, %struct.PointerRNA* %125, %struct.PropertyRNA* %126), !dbg !13706
  %127 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13707
  %128 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13708
  %129 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13709
  %call121 = call i8* @RNA_pointer_as_string(%struct.bContext* %127, %struct.PointerRNA* %128, %struct.PropertyRNA* %129, %struct.PointerRNA* %tptr), !dbg !13710
  store i8* %call121, i8** %cstring, align 8, !dbg !13711
  %130 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13712
  %131 = load i8*, i8** %cstring, align 8, !dbg !13713
  call void @BLI_dynstr_append(%struct.DynStr* %130, i8* %131), !dbg !13714
  %132 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13715
  %133 = load i8*, i8** %cstring, align 8, !dbg !13716
  call void %132(i8* %133), !dbg !13715
  br label %sw.epilog, !dbg !13717

sw.bb122:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i123, metadata !13718, metadata !DIExpression()), !dbg !13720
  store i32 0, i32* %i123, align 4, !dbg !13720
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %collect_iter, metadata !13721, metadata !DIExpression()), !dbg !13722
  %134 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13723
  call void @BLI_dynstr_append(%struct.DynStr* %134, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)), !dbg !13724
  %135 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13725
  %136 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13727
  call void @RNA_property_collection_begin(%struct.PointerRNA* %135, %struct.PropertyRNA* %136, %struct.CollectionPropertyIterator* %collect_iter), !dbg !13728
  br label %for.cond124, !dbg !13728

for.cond124:                                      ; preds = %for.inc135, %sw.bb122
  %137 = load i32, i32* %i123, align 4, !dbg !13729
  %138 = load i32, i32* %max_prop_length.addr, align 4, !dbg !13731
  %cmp125 = icmp slt i32 %137, %138, !dbg !13732
  br i1 %cmp125, label %land.rhs, label %land.end, !dbg !13733

land.rhs:                                         ; preds = %for.cond124
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %collect_iter, i32 0, i32 7, !dbg !13734
  %139 = load i32, i32* %valid, align 8, !dbg !13734
  %tobool127 = icmp ne i32 %139, 0, !dbg !13733
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond124
  %140 = phi i1 [ false, %for.cond124 ], [ %tobool127, %land.rhs ], !dbg !13735
  br i1 %140, label %for.body128, label %for.end137, !dbg !13736

for.body128:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !13737, metadata !DIExpression()), !dbg !13739
  %ptr129 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %collect_iter, i32 0, i32 6, !dbg !13740
  %141 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !13740
  %142 = bitcast %struct.PointerRNA* %ptr129 to i8*, !dbg !13740
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 24, i1 false), !dbg !13740
  %143 = load i32, i32* %i123, align 4, !dbg !13741
  %cmp130 = icmp ne i32 %143, 0, !dbg !13743
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !13744

if.then132:                                       ; preds = %for.body128
  %144 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13745
  call void @BLI_dynstr_append(%struct.DynStr* %144, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0)), !dbg !13746
  br label %if.end133, !dbg !13746

if.end133:                                        ; preds = %if.then132, %for.body128
  %145 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13747
  %146 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13748
  %147 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13749
  %call134 = call i8* @RNA_pointer_as_string(%struct.bContext* %145, %struct.PointerRNA* %146, %struct.PropertyRNA* %147, %struct.PointerRNA* %itemptr), !dbg !13750
  store i8* %call134, i8** %cstring, align 8, !dbg !13751
  %148 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13752
  %149 = load i8*, i8** %cstring, align 8, !dbg !13753
  call void @BLI_dynstr_append(%struct.DynStr* %148, i8* %149), !dbg !13754
  %150 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13755
  %151 = load i8*, i8** %cstring, align 8, !dbg !13756
  call void %150(i8* %151), !dbg !13755
  br label %for.inc135, !dbg !13757

for.inc135:                                       ; preds = %if.end133
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %collect_iter), !dbg !13758
  %152 = load i32, i32* %i123, align 4, !dbg !13759
  %inc136 = add nsw i32 %152, 1, !dbg !13759
  store i32 %inc136, i32* %i123, align 4, !dbg !13759
  br label %for.cond124, !dbg !13760, !llvm.loop !13761

for.end137:                                       ; preds = %land.end
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %collect_iter), !dbg !13763
  %153 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13764
  call void @BLI_dynstr_append(%struct.DynStr* %153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)), !dbg !13765
  br label %sw.epilog, !dbg !13766

sw.default:                                       ; preds = %entry
  %154 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13767
  call void @BLI_dynstr_append(%struct.DynStr* %154, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.64, i64 0, i64 0)), !dbg !13768
  br label %sw.epilog, !dbg !13769

sw.epilog:                                        ; preds = %sw.default, %for.end137, %sw.bb120, %if.end119, %sw.bb68, %if.end67, %if.end39, %if.end16
  %155 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13770
  %call138 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %155), !dbg !13771
  store i8* %call138, i8** %cstring, align 8, !dbg !13772
  %156 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13773
  call void @BLI_dynstr_free(%struct.DynStr* %156), !dbg !13774
  %157 = load i8*, i8** %cstring, align 8, !dbg !13775
  ret i8* %157, !dbg !13776
}

declare dso_local void @BLI_dynstr_appendf(%struct.DynStr*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_pointer_as_string(%struct.bContext* %C, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %prop_ptr, %struct.PointerRNA* %ptr_prop) #0 !dbg !13777 {
entry:
  %retval = alloca i8*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop_ptr.addr = alloca %struct.PropertyRNA*, align 8
  %ptr_prop.addr = alloca %struct.PointerRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13780, metadata !DIExpression()), !dbg !13781
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !13782, metadata !DIExpression()), !dbg !13783
  store %struct.PropertyRNA* %prop_ptr, %struct.PropertyRNA** %prop_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop_ptr.addr, metadata !13784, metadata !DIExpression()), !dbg !13785
  store %struct.PointerRNA* %ptr_prop, %struct.PointerRNA** %ptr_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr_prop.addr, metadata !13786, metadata !DIExpression()), !dbg !13787
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop_ptr.addr, align 8, !dbg !13788
  %call = call i32 @RNA_property_flag(%struct.PropertyRNA* %0), !dbg !13790
  %and = and i32 %call, 1024, !dbg !13791
  %tobool = icmp ne i32 %and, 0, !dbg !13791
  br i1 %tobool, label %if.then, label %if.else, !dbg !13792

if.then:                                          ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13793
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr_prop.addr, align 8, !dbg !13795
  %call1 = call i8* @RNA_pointer_as_string_id(%struct.bContext* %1, %struct.PointerRNA* %2), !dbg !13796
  store i8* %call1, i8** %retval, align 8, !dbg !13797
  br label %return, !dbg !13797

if.else:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr_prop.addr, align 8, !dbg !13798
  %call2 = call i8* @rna_pointer_as_string__bldata(%struct.PointerRNA* %3), !dbg !13800
  store i8* %call2, i8** %retval, align 8, !dbg !13801
  br label %return, !dbg !13801

return:                                           ; preds = %if.else, %if.then
  %4 = load i8*, i8** %retval, align 8, !dbg !13802
  ret i8* %4, !dbg !13802
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_pointer_as_string__bldata(%struct.PointerRNA* %ptr) #0 !dbg !13803 {
entry:
  %retval = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13804, metadata !DIExpression()), !dbg !13805
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13806
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 1, !dbg !13808
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !13808
  %cmp = icmp eq %struct.StructRNA* %1, null, !dbg !13809
  br i1 %cmp, label %if.then, label %if.else, !dbg !13810

if.then:                                          ; preds = %entry
  %call = call i8* @BLI_strdup(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0)), !dbg !13811
  store i8* %call, i8** %retval, align 8, !dbg !13813
  br label %return, !dbg !13813

if.else:                                          ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13814
  %type1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 1, !dbg !13816
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type1, align 8, !dbg !13816
  %call2 = call zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %3), !dbg !13817
  %tobool = icmp ne i8 %call2, 0, !dbg !13817
  br i1 %tobool, label %if.then3, label %if.else5, !dbg !13818

if.then3:                                         ; preds = %if.else
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13819
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 0, !dbg !13821
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !13822
  %5 = load i8*, i8** %data, align 8, !dbg !13822
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !13819
  %call4 = call i8* @RNA_path_full_ID_py(%struct.ID* %6), !dbg !13823
  store i8* %call4, i8** %retval, align 8, !dbg !13824
  br label %return, !dbg !13824

if.else5:                                         ; preds = %if.else
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13825
  %call6 = call i8* @RNA_path_full_struct_py(%struct.PointerRNA* %7), !dbg !13827
  store i8* %call6, i8** %retval, align 8, !dbg !13828
  br label %return, !dbg !13828

return:                                           ; preds = %if.else5, %if.then3, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !13829
  ret i8* %8, !dbg !13829
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_pointer_as_string_keywords_ex(%struct.bContext* %C, %struct.PointerRNA* %ptr, i8 zeroext %as_function, i8 zeroext %all_args, i8 zeroext %nested_args, i32 %max_prop_length, %struct.PropertyRNA* %iterprop) #0 !dbg !13830 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %as_function.addr = alloca i8, align 1
  %all_args.addr = alloca i8, align 1
  %nested_args.addr = alloca i8, align 1
  %max_prop_length.addr = alloca i32, align 4
  %iterprop.addr = alloca %struct.PropertyRNA*, align 8
  %arg_name = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %dynstr = alloca %struct.DynStr*, align 8
  %cstring = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %first_iter = alloca i8, align 1
  %flag = alloca i32, align 4
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %propptr = alloca %struct.PointerRNA, align 8
  %ok = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13833, metadata !DIExpression()), !dbg !13834
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13835, metadata !DIExpression()), !dbg !13836
  store i8 %as_function, i8* %as_function.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %as_function.addr, metadata !13837, metadata !DIExpression()), !dbg !13838
  store i8 %all_args, i8* %all_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all_args.addr, metadata !13839, metadata !DIExpression()), !dbg !13840
  store i8 %nested_args, i8* %nested_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nested_args.addr, metadata !13841, metadata !DIExpression()), !dbg !13842
  store i32 %max_prop_length, i32* %max_prop_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_prop_length.addr, metadata !13843, metadata !DIExpression()), !dbg !13844
  store %struct.PropertyRNA* %iterprop, %struct.PropertyRNA** %iterprop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iterprop.addr, metadata !13845, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.declare(metadata i8** %arg_name, metadata !13847, metadata !DIExpression()), !dbg !13848
  store i8* null, i8** %arg_name, align 8, !dbg !13848
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !13849, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.declare(metadata %struct.DynStr** %dynstr, metadata !13851, metadata !DIExpression()), !dbg !13852
  %call = call %struct.DynStr* @BLI_dynstr_new(), !dbg !13853
  store %struct.DynStr* %call, %struct.DynStr** %dynstr, align 8, !dbg !13852
  call void @llvm.dbg.declare(metadata i8** %cstring, metadata !13854, metadata !DIExpression()), !dbg !13855
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !13856, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.declare(metadata i8* %first_iter, metadata !13858, metadata !DIExpression()), !dbg !13859
  store i8 1, i8* %first_iter, align 1, !dbg !13859
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !13860, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !13862, metadata !DIExpression()), !dbg !13864
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13865
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iterprop.addr, align 8, !dbg !13865
  call void @RNA_property_collection_begin(%struct.PointerRNA* %0, %struct.PropertyRNA* %1, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !13865
  br label %for.cond, !dbg !13865

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !13867
  %2 = load i32, i32* %valid, align 8, !dbg !13867
  %tobool = icmp ne i32 %2, 0, !dbg !13865
  br i1 %tobool, label %for.body, label %for.end, !dbg !13865

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %propptr, metadata !13869, metadata !DIExpression()), !dbg !13871
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !13871
  %3 = bitcast %struct.PointerRNA* %propptr to i8*, !dbg !13871
  %4 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !13871
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false), !dbg !13871
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %propptr, i32 0, i32 2, !dbg !13872
  %5 = load i8*, i8** %data, align 8, !dbg !13872
  %6 = bitcast i8* %5 to %struct.PropertyRNA*, !dbg !13874
  store %struct.PropertyRNA* %6, %struct.PropertyRNA** %prop, align 8, !dbg !13875
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13876
  %call2 = call i32 @RNA_property_flag(%struct.PropertyRNA* %7), !dbg !13877
  store i32 %call2, i32* %flag, align 4, !dbg !13878
  %8 = load i8, i8* %as_function.addr, align 1, !dbg !13879
  %conv = zext i8 %8 to i32, !dbg !13879
  %tobool3 = icmp ne i32 %conv, 0, !dbg !13879
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !13881

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32, i32* %flag, align 4, !dbg !13882
  %and = and i32 %9, 8, !dbg !13883
  %tobool4 = icmp ne i32 %and, 0, !dbg !13883
  br i1 %tobool4, label %if.then, label %if.end, !dbg !13884

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !13885

if.end:                                           ; preds = %land.lhs.true, %for.body
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13887
  %call5 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %10), !dbg !13888
  store i8* %call5, i8** %arg_name, align 8, !dbg !13889
  %11 = load i8*, i8** %arg_name, align 8, !dbg !13890
  %call6 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)) #7, !dbg !13892
  %cmp = icmp eq i32 %call6, 0, !dbg !13893
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !13894

if.then8:                                         ; preds = %if.end
  br label %for.inc, !dbg !13895

if.end9:                                          ; preds = %if.end
  %12 = load i8, i8* %nested_args.addr, align 1, !dbg !13897
  %conv10 = zext i8 %12 to i32, !dbg !13897
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !13899
  br i1 %cmp11, label %land.lhs.true13, label %if.end18, !dbg !13900

land.lhs.true13:                                  ; preds = %if.end9
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13901
  %call14 = call i32 @RNA_property_type(%struct.PropertyRNA* %13), !dbg !13902
  %cmp15 = icmp eq i32 %call14, 5, !dbg !13903
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !13904

if.then17:                                        ; preds = %land.lhs.true13
  br label %for.inc, !dbg !13905

if.end18:                                         ; preds = %land.lhs.true13, %if.end9
  %14 = load i8, i8* %as_function.addr, align 1, !dbg !13907
  %conv19 = zext i8 %14 to i32, !dbg !13907
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !13907
  br i1 %tobool20, label %land.lhs.true21, label %if.else, !dbg !13909

land.lhs.true21:                                  ; preds = %if.end18
  %15 = load i32, i32* %flag, align 4, !dbg !13910
  %and22 = and i32 %15, 4, !dbg !13911
  %tobool23 = icmp ne i32 %and22, 0, !dbg !13911
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !13912

if.then24:                                        ; preds = %land.lhs.true21
  %16 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13913
  %17 = load i8, i8* %first_iter, align 1, !dbg !13915
  %conv25 = zext i8 %17 to i32, !dbg !13915
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !13915
  %18 = zext i1 %tobool26 to i64, !dbg !13915
  %cond = select i1 %tobool26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), !dbg !13915
  %19 = load i8*, i8** %arg_name, align 8, !dbg !13916
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %16, i8* %cond, i8* %19), !dbg !13917
  store i8 0, i8* %first_iter, align 1, !dbg !13918
  br label %if.end61, !dbg !13919

if.else:                                          ; preds = %land.lhs.true21, %if.end18
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !13920, metadata !DIExpression()), !dbg !13922
  store i8 1, i8* %ok, align 1, !dbg !13922
  %20 = load i8, i8* %all_args.addr, align 1, !dbg !13923
  %conv27 = zext i8 %20 to i32, !dbg !13923
  %cmp28 = icmp eq i32 %conv27, 1, !dbg !13925
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !13926

if.then30:                                        ; preds = %if.else
  br label %if.end37, !dbg !13927

if.else31:                                        ; preds = %if.else
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13929
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %21, i32 0, i32 1, !dbg !13931
  %22 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !13931
  %call32 = call zeroext i8 @RNA_struct_idprops_check(%struct.StructRNA* %22), !dbg !13932
  %tobool33 = icmp ne i8 %call32, 0, !dbg !13932
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !13933

if.then34:                                        ; preds = %if.else31
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13934
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13936
  %call35 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %23, %struct.PropertyRNA* %24), !dbg !13937
  store i8 %call35, i8* %ok, align 1, !dbg !13938
  br label %if.end36, !dbg !13939

if.end36:                                         ; preds = %if.then34, %if.else31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then30
  %25 = load i8, i8* %ok, align 1, !dbg !13940
  %tobool38 = icmp ne i8 %25, 0, !dbg !13940
  br i1 %tobool38, label %if.then39, label %if.end60, !dbg !13942

if.then39:                                        ; preds = %if.end37
  %26 = load i8, i8* %as_function.addr, align 1, !dbg !13943
  %conv40 = zext i8 %26 to i32, !dbg !13943
  %tobool41 = icmp ne i32 %conv40, 0, !dbg !13943
  br i1 %tobool41, label %land.lhs.true42, label %if.else54, !dbg !13946

land.lhs.true42:                                  ; preds = %if.then39
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13947
  %call43 = call i32 @RNA_property_type(%struct.PropertyRNA* %27), !dbg !13948
  %cmp44 = icmp eq i32 %call43, 5, !dbg !13949
  br i1 %cmp44, label %if.then46, label %if.else54, !dbg !13950

if.then46:                                        ; preds = %land.lhs.true42
  %28 = load i32, i32* %flag, align 4, !dbg !13951
  %and47 = and i32 %28, 262144, !dbg !13954
  %tobool48 = icmp ne i32 %and47, 0, !dbg !13954
  br i1 %tobool48, label %if.then49, label %if.else51, !dbg !13955

if.then49:                                        ; preds = %if.then46
  %29 = load i8*, i8** %arg_name, align 8, !dbg !13956
  %call50 = call i8* @BLI_strdup(i8* %29), !dbg !13958
  store i8* %call50, i8** %buf, align 8, !dbg !13959
  br label %if.end53, !dbg !13960

if.else51:                                        ; preds = %if.then46
  %call52 = call i8* @BLI_strdup(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0)), !dbg !13961
  store i8* %call52, i8** %buf, align 8, !dbg !13963
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then49
  br label %if.end56, !dbg !13964

if.else54:                                        ; preds = %land.lhs.true42, %if.then39
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13965
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13967
  %32 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13968
  %33 = load i32, i32* %max_prop_length.addr, align 4, !dbg !13969
  %call55 = call i8* @RNA_property_as_string(%struct.bContext* %30, %struct.PointerRNA* %31, %struct.PropertyRNA* %32, i32 -1, i32 %33), !dbg !13970
  store i8* %call55, i8** %buf, align 8, !dbg !13971
  br label %if.end56

if.end56:                                         ; preds = %if.else54, %if.end53
  %34 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13972
  %35 = load i8, i8* %first_iter, align 1, !dbg !13973
  %conv57 = zext i8 %35 to i32, !dbg !13973
  %tobool58 = icmp ne i32 %conv57, 0, !dbg !13973
  %36 = zext i1 %tobool58 to i64, !dbg !13973
  %cond59 = select i1 %tobool58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), !dbg !13973
  %37 = load i8*, i8** %arg_name, align 8, !dbg !13974
  %38 = load i8*, i8** %buf, align 8, !dbg !13975
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %34, i8* %cond59, i8* %37, i8* %38), !dbg !13976
  store i8 0, i8* %first_iter, align 1, !dbg !13977
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13978
  %40 = load i8*, i8** %buf, align 8, !dbg !13979
  call void %39(i8* %40), !dbg !13978
  br label %if.end60, !dbg !13980

if.end60:                                         ; preds = %if.end56, %if.end37
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then24
  br label %for.inc, !dbg !13981

for.inc:                                          ; preds = %if.end61, %if.then17, %if.then8, %if.then
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !13867
  br label %for.cond, !dbg !13867, !llvm.loop !13982

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !13984
  %41 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13985
  %call62 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %41), !dbg !13986
  store i8* %call62, i8** %cstring, align 8, !dbg !13987
  %42 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !13988
  call void @BLI_dynstr_free(%struct.DynStr* %42), !dbg !13989
  %43 = load i8*, i8** %cstring, align 8, !dbg !13990
  ret i8* %43, !dbg !13991
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_pointer_as_string_keywords(%struct.bContext* %C, %struct.PointerRNA* %ptr, i8 zeroext %as_function, i8 zeroext %all_args, i8 zeroext %nested_args, i32 %max_prop_length) #0 !dbg !13992 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %as_function.addr = alloca i8, align 1
  %all_args.addr = alloca i8, align 1
  %nested_args.addr = alloca i8, align 1
  %max_prop_length.addr = alloca i32, align 4
  %iterprop = alloca %struct.PropertyRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13995, metadata !DIExpression()), !dbg !13996
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13997, metadata !DIExpression()), !dbg !13998
  store i8 %as_function, i8* %as_function.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %as_function.addr, metadata !13999, metadata !DIExpression()), !dbg !14000
  store i8 %all_args, i8* %all_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all_args.addr, metadata !14001, metadata !DIExpression()), !dbg !14002
  store i8 %nested_args, i8* %nested_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nested_args.addr, metadata !14003, metadata !DIExpression()), !dbg !14004
  store i32 %max_prop_length, i32* %max_prop_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_prop_length.addr, metadata !14005, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iterprop, metadata !14007, metadata !DIExpression()), !dbg !14008
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !14009
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 1, !dbg !14010
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !14010
  %call = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %1), !dbg !14011
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %iterprop, align 8, !dbg !14012
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !14013
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !14014
  %4 = load i8, i8* %as_function.addr, align 1, !dbg !14015
  %5 = load i8, i8* %all_args.addr, align 1, !dbg !14016
  %6 = load i8, i8* %nested_args.addr, align 1, !dbg !14017
  %7 = load i32, i32* %max_prop_length.addr, align 4, !dbg !14018
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iterprop, align 8, !dbg !14019
  %call1 = call i8* @RNA_pointer_as_string_keywords_ex(%struct.bContext* %2, %struct.PointerRNA* %3, i8 zeroext %4, i8 zeroext %5, i8 zeroext %6, i32 %7, %struct.PropertyRNA* %8), !dbg !14020
  ret i8* %call1, !dbg !14021
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_function_as_string_keywords(%struct.bContext* %C, %struct.FunctionRNA* %func, i8 zeroext %as_function, i8 zeroext %all_args, i32 %max_prop_length) #0 !dbg !14022 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %func.addr = alloca %struct.FunctionRNA*, align 8
  %as_function.addr = alloca i8, align 1
  %all_args.addr = alloca i8, align 1
  %max_prop_length.addr = alloca i32, align 4
  %funcptr = alloca %struct.PointerRNA, align 8
  %iterprop = alloca %struct.PropertyRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !14025, metadata !DIExpression()), !dbg !14026
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  store i8 %as_function, i8* %as_function.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %as_function.addr, metadata !14029, metadata !DIExpression()), !dbg !14030
  store i8 %all_args, i8* %all_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all_args.addr, metadata !14031, metadata !DIExpression()), !dbg !14032
  store i32 %max_prop_length, i32* %max_prop_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_prop_length.addr, metadata !14033, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %funcptr, metadata !14035, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iterprop, metadata !14037, metadata !DIExpression()), !dbg !14038
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14039
  %1 = bitcast %struct.FunctionRNA* %0 to i8*, !dbg !14039
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* @RNA_Function, i8* %1, %struct.PointerRNA* %funcptr), !dbg !14040
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %funcptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i64 0, i64 0)), !dbg !14041
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %iterprop, align 8, !dbg !14042
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %funcptr, i32 0, i32 1, !dbg !14043
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !14043
  %call1 = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %2), !dbg !14044
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !14045
  %4 = load i8, i8* %as_function.addr, align 1, !dbg !14046
  %5 = load i8, i8* %all_args.addr, align 1, !dbg !14047
  %6 = load i32, i32* %max_prop_length.addr, align 4, !dbg !14048
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iterprop, align 8, !dbg !14049
  %call2 = call i8* @RNA_pointer_as_string_keywords_ex(%struct.bContext* %3, %struct.PointerRNA* %funcptr, i8 zeroext %4, i8 zeroext %5, i8 zeroext 1, i32 %6, %struct.PropertyRNA* %7), !dbg !14050
  ret i8* %call2, !dbg !14051
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @bool_as_py_string(i32 %var) #0 !dbg !14052 {
entry:
  %var.addr = alloca i32, align 4
  store i32 %var, i32* %var.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %var.addr, metadata !14055, metadata !DIExpression()), !dbg !14056
  %0 = load i32, i32* %var.addr, align 4, !dbg !14057
  %tobool = icmp ne i32 %0, 0, !dbg !14057
  %1 = zext i1 %tobool to i64, !dbg !14057
  %cond = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i64 0, i64 0), !dbg !14057
  ret i8* %cond, !dbg !14058
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_function_identifier(%struct.FunctionRNA* %func) #0 !dbg !14059 {
entry:
  %func.addr = alloca %struct.FunctionRNA*, align 8
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14062, metadata !DIExpression()), !dbg !14063
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14064
  %identifier = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 1, !dbg !14065
  %1 = load i8*, i8** %identifier, align 8, !dbg !14065
  ret i8* %1, !dbg !14066
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_function_ui_description(%struct.FunctionRNA* %func) #0 !dbg !14067 {
entry:
  %func.addr = alloca %struct.FunctionRNA*, align 8
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14068, metadata !DIExpression()), !dbg !14069
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14070
  %description = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 3, !dbg !14070
  %1 = load i8*, i8** %description, align 8, !dbg !14070
  ret i8* %1, !dbg !14071
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @RNA_function_ui_description_raw(%struct.FunctionRNA* %func) #0 !dbg !14072 {
entry:
  %func.addr = alloca %struct.FunctionRNA*, align 8
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14073, metadata !DIExpression()), !dbg !14074
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14075
  %description = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 3, !dbg !14076
  %1 = load i8*, i8** %description, align 8, !dbg !14076
  ret i8* %1, !dbg !14077
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_function_flag(%struct.FunctionRNA* %func) #0 !dbg !14078 {
entry:
  %func.addr = alloca %struct.FunctionRNA*, align 8
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14081, metadata !DIExpression()), !dbg !14082
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14083
  %flag = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 2, !dbg !14084
  %1 = load i32, i32* %flag, align 8, !dbg !14084
  ret i32 %1, !dbg !14085
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_function_defined(%struct.FunctionRNA* %func) #0 !dbg !14086 {
entry:
  %func.addr = alloca %struct.FunctionRNA*, align 8
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14087, metadata !DIExpression()), !dbg !14088
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14089
  %call = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 4, !dbg !14090
  %1 = load void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)*, void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)** %call, align 8, !dbg !14090
  %cmp = icmp ne void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* %1, null, !dbg !14091
  %conv = zext i1 %cmp to i32, !dbg !14091
  ret i32 %conv, !dbg !14092
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PropertyRNA* @RNA_function_get_parameter(%struct.PointerRNA* %UNUSED_ptr, %struct.FunctionRNA* %func, i32 %index) #0 !dbg !14093 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %func.addr = alloca %struct.FunctionRNA*, align 8
  %index.addr = alloca i32, align 4
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !14096, metadata !DIExpression()), !dbg !14097
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14098, metadata !DIExpression()), !dbg !14099
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14100, metadata !DIExpression()), !dbg !14101
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14102
  %cont = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 0, !dbg !14103
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !14104
  %1 = load i32, i32* %index.addr, align 4, !dbg !14105
  %call = call i8* @BLI_findlink(%struct.ListBase* %properties, i32 %1), !dbg !14106
  %2 = bitcast i8* %call to %struct.PropertyRNA*, !dbg !14106
  ret %struct.PropertyRNA* %2, !dbg !14107
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PropertyRNA* @RNA_function_find_parameter(%struct.PointerRNA* %UNUSED_ptr, %struct.FunctionRNA* %func, i8* %identifier) #0 !dbg !14108 {
entry:
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %func.addr = alloca %struct.FunctionRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %parm = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !14111, metadata !DIExpression()), !dbg !14112
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14113, metadata !DIExpression()), !dbg !14114
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !14115, metadata !DIExpression()), !dbg !14116
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm, metadata !14117, metadata !DIExpression()), !dbg !14118
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14119
  %cont = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 0, !dbg !14120
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !14121
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %properties, i32 0, i32 0, !dbg !14122
  %1 = load i8*, i8** %first, align 8, !dbg !14122
  %2 = bitcast i8* %1 to %struct.PropertyRNA*, !dbg !14119
  store %struct.PropertyRNA* %2, %struct.PropertyRNA** %parm, align 8, !dbg !14123
  br label %for.cond, !dbg !14124

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14125
  %tobool = icmp ne %struct.PropertyRNA* %3, null, !dbg !14128
  br i1 %tobool, label %for.body, label %for.end, !dbg !14128

for.body:                                         ; preds = %for.cond
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14129
  %call = call i8* @RNA_property_identifier(%struct.PropertyRNA* %4), !dbg !14131
  %5 = load i8*, i8** %identifier.addr, align 8, !dbg !14132
  %call1 = call i32 @strcmp(i8* %call, i8* %5) #7, !dbg !14133
  %cmp = icmp eq i32 %call1, 0, !dbg !14134
  br i1 %cmp, label %if.then, label %if.end, !dbg !14135

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14136

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14137

for.inc:                                          ; preds = %if.end
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14138
  %next = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %6, i32 0, i32 0, !dbg !14139
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %next, align 8, !dbg !14139
  store %struct.PropertyRNA* %7, %struct.PropertyRNA** %parm, align 8, !dbg !14140
  br label %for.cond, !dbg !14141, !llvm.loop !14142

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14144
  ret %struct.PropertyRNA* %8, !dbg !14145
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @RNA_function_defined_parameters(%struct.FunctionRNA* %func) #0 !dbg !14146 {
entry:
  %func.addr = alloca %struct.FunctionRNA*, align 8
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14149, metadata !DIExpression()), !dbg !14150
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14151
  %cont = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 0, !dbg !14152
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !14153
  ret %struct.ListBase* %properties, !dbg !14154
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ParameterList* @RNA_parameter_list_create(%struct.ParameterList* %parms, %struct.PointerRNA* %UNUSED_ptr, %struct.FunctionRNA* %func) #0 !dbg !14155 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %func.addr = alloca %struct.FunctionRNA*, align 8
  %parm = alloca %struct.PropertyRNA*, align 8
  %data = alloca i8*, align 8
  %alloc_size = alloca i32, align 4
  %size = alloca i32, align 4
  %data_alloc = alloca %struct.ParameterDynAlloc*, align 8
  %defvalue = alloca i8*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14158, metadata !DIExpression()), !dbg !14159
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !14160, metadata !DIExpression()), !dbg !14161
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14162, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm, metadata !14164, metadata !DIExpression()), !dbg !14165
  call void @llvm.dbg.declare(metadata i8** %data, metadata !14166, metadata !DIExpression()), !dbg !14167
  call void @llvm.dbg.declare(metadata i32* %alloc_size, metadata !14168, metadata !DIExpression()), !dbg !14169
  store i32 0, i32* %alloc_size, align 4, !dbg !14169
  call void @llvm.dbg.declare(metadata i32* %size, metadata !14170, metadata !DIExpression()), !dbg !14171
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14172
  %arg_count = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %0, i32 0, i32 3, !dbg !14173
  store i32 0, i32* %arg_count, align 4, !dbg !14174
  %1 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14175
  %ret_count = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %1, i32 0, i32 4, !dbg !14176
  store i32 0, i32* %ret_count, align 8, !dbg !14177
  %2 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14178
  %cont = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %2, i32 0, i32 0, !dbg !14180
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !14181
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %properties, i32 0, i32 0, !dbg !14182
  %3 = load i8*, i8** %first, align 8, !dbg !14182
  %4 = bitcast i8* %3 to %struct.PropertyRNA*, !dbg !14178
  store %struct.PropertyRNA* %4, %struct.PropertyRNA** %parm, align 8, !dbg !14183
  br label %for.cond, !dbg !14184

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14185
  %tobool = icmp ne %struct.PropertyRNA* %5, null, !dbg !14187
  br i1 %tobool, label %for.body, label %for.end, !dbg !14187

for.body:                                         ; preds = %for.cond
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14188
  %call = call i32 @rna_parameter_size(%struct.PropertyRNA* %6), !dbg !14190
  %7 = load i32, i32* %alloc_size, align 4, !dbg !14191
  %add = add nsw i32 %7, %call, !dbg !14191
  store i32 %add, i32* %alloc_size, align 4, !dbg !14191
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14192
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %8, i32 0, i32 4, !dbg !14194
  %9 = load i32, i32* %flag, align 8, !dbg !14194
  %and = and i32 %9, 8, !dbg !14195
  %tobool1 = icmp ne i32 %and, 0, !dbg !14195
  br i1 %tobool1, label %if.then, label %if.else, !dbg !14196

if.then:                                          ; preds = %for.body
  %10 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14197
  %ret_count2 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %10, i32 0, i32 4, !dbg !14198
  %11 = load i32, i32* %ret_count2, align 8, !dbg !14199
  %inc = add nsw i32 %11, 1, !dbg !14199
  store i32 %inc, i32* %ret_count2, align 8, !dbg !14199
  br label %if.end, !dbg !14197

if.else:                                          ; preds = %for.body
  %12 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14200
  %arg_count3 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %12, i32 0, i32 3, !dbg !14201
  %13 = load i32, i32* %arg_count3, align 4, !dbg !14202
  %inc4 = add nsw i32 %13, 1, !dbg !14202
  store i32 %inc4, i32* %arg_count3, align 4, !dbg !14202
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !14203

for.inc:                                          ; preds = %if.end
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14204
  %next = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %14, i32 0, i32 0, !dbg !14205
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %next, align 8, !dbg !14205
  store %struct.PropertyRNA* %15, %struct.PropertyRNA** %parm, align 8, !dbg !14206
  br label %for.cond, !dbg !14207, !llvm.loop !14208

for.end:                                          ; preds = %for.cond
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14210
  %17 = load i32, i32* %alloc_size, align 4, !dbg !14211
  %conv = sext i32 %17 to i64, !dbg !14211
  %call5 = call i8* %16(i64 %conv, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i64 0, i64 0)), !dbg !14210
  %18 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14212
  %data6 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %18, i32 0, i32 0, !dbg !14213
  store i8* %call5, i8** %data6, align 8, !dbg !14214
  %19 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14215
  %20 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14216
  %func7 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %20, i32 0, i32 1, !dbg !14217
  store %struct.FunctionRNA* %19, %struct.FunctionRNA** %func7, align 8, !dbg !14218
  %21 = load i32, i32* %alloc_size, align 4, !dbg !14219
  %22 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14220
  %alloc_size8 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %22, i32 0, i32 2, !dbg !14221
  store i32 %21, i32* %alloc_size8, align 8, !dbg !14222
  %23 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14223
  %data9 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %23, i32 0, i32 0, !dbg !14224
  %24 = load i8*, i8** %data9, align 8, !dbg !14224
  store i8* %24, i8** %data, align 8, !dbg !14225
  %25 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14226
  %cont10 = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %25, i32 0, i32 0, !dbg !14228
  %properties11 = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont10, i32 0, i32 3, !dbg !14229
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %properties11, i32 0, i32 0, !dbg !14230
  %26 = load i8*, i8** %first12, align 8, !dbg !14230
  %27 = bitcast i8* %26 to %struct.PropertyRNA*, !dbg !14226
  store %struct.PropertyRNA* %27, %struct.PropertyRNA** %parm, align 8, !dbg !14231
  br label %for.cond13, !dbg !14232

for.cond13:                                       ; preds = %for.inc70, %for.end
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14233
  %tobool14 = icmp ne %struct.PropertyRNA* %28, null, !dbg !14235
  br i1 %tobool14, label %for.body15, label %for.end72, !dbg !14235

for.body15:                                       ; preds = %for.cond13
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14236
  %call16 = call i32 @rna_parameter_size(%struct.PropertyRNA* %29), !dbg !14238
  store i32 %call16, i32* %size, align 4, !dbg !14239
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14240
  %flag17 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %30, i32 0, i32 4, !dbg !14242
  %31 = load i32, i32* %flag17, align 8, !dbg !14242
  %and18 = and i32 %31, 131072, !dbg !14243
  %tobool19 = icmp ne i32 %and18, 0, !dbg !14243
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !14244

if.then20:                                        ; preds = %for.body15
  call void @llvm.dbg.declare(metadata %struct.ParameterDynAlloc** %data_alloc, metadata !14245, metadata !DIExpression()), !dbg !14247
  %32 = load i8*, i8** %data, align 8, !dbg !14248
  %33 = bitcast i8* %32 to %struct.ParameterDynAlloc*, !dbg !14248
  store %struct.ParameterDynAlloc* %33, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14247
  %34 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14249
  %array_tot = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %34, i32 0, i32 0, !dbg !14250
  store i64 0, i64* %array_tot, align 8, !dbg !14251
  %35 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14252
  %array = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %35, i32 0, i32 1, !dbg !14253
  store i8* null, i8** %array, align 8, !dbg !14254
  br label %if.end21, !dbg !14255

if.end21:                                         ; preds = %if.then20, %for.body15
  %36 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14256
  %flag22 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %36, i32 0, i32 4, !dbg !14258
  %37 = load i32, i32* %flag22, align 8, !dbg !14258
  %and23 = and i32 %37, 4, !dbg !14259
  %tobool24 = icmp ne i32 %and23, 0, !dbg !14259
  br i1 %tobool24, label %if.end68, label %land.lhs.true, !dbg !14260

land.lhs.true:                                    ; preds = %if.end21
  %38 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14261
  %flag25 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %38, i32 0, i32 4, !dbg !14262
  %39 = load i32, i32* %flag25, align 8, !dbg !14262
  %and26 = and i32 %39, 131072, !dbg !14263
  %tobool27 = icmp ne i32 %and26, 0, !dbg !14263
  br i1 %tobool27, label %if.end68, label %if.then28, !dbg !14264

if.then28:                                        ; preds = %land.lhs.true
  %40 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14265
  %type = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %40, i32 0, i32 9, !dbg !14267
  %41 = load i32, i32* %type, align 8, !dbg !14267
  switch i32 %41, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb35
    i32 2, label %sw.bb45
    i32 4, label %sw.bb55
    i32 3, label %sw.bb58
    i32 5, label %sw.bb67
    i32 6, label %sw.bb67
  ], !dbg !14268

sw.bb:                                            ; preds = %if.then28
  %42 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14269
  %arraydimension = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %42, i32 0, i32 12, !dbg !14272
  %43 = load i32, i32* %arraydimension, align 8, !dbg !14272
  %tobool29 = icmp ne i32 %43, 0, !dbg !14269
  br i1 %tobool29, label %if.then30, label %if.else32, !dbg !14273

if.then30:                                        ; preds = %sw.bb
  %44 = load i8*, i8** %data, align 8, !dbg !14274
  %45 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14275
  %46 = bitcast %struct.PropertyRNA* %45 to %struct.BoolPropertyRNA*, !dbg !14276
  %defaultarray = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %46, i32 0, i32 10, !dbg !14276
  %47 = load i32*, i32** %defaultarray, align 8, !dbg !14276
  %48 = bitcast i32* %47 to i8*, !dbg !14277
  %49 = load i32, i32* %size, align 4, !dbg !14278
  %conv31 = sext i32 %49 to i64, !dbg !14278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 4 %48, i64 %conv31, i1 false), !dbg !14277
  br label %if.end34, !dbg !14277

if.else32:                                        ; preds = %sw.bb
  %50 = load i8*, i8** %data, align 8, !dbg !14279
  %51 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14280
  %52 = bitcast %struct.PropertyRNA* %51 to %struct.BoolPropertyRNA*, !dbg !14281
  %defaultvalue = getelementptr inbounds %struct.BoolPropertyRNA, %struct.BoolPropertyRNA* %52, i32 0, i32 9, !dbg !14281
  %53 = bitcast i32* %defaultvalue to i8*, !dbg !14282
  %54 = load i32, i32* %size, align 4, !dbg !14283
  %conv33 = sext i32 %54 to i64, !dbg !14283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 8 %53, i64 %conv33, i1 false), !dbg !14282
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then30
  br label %sw.epilog, !dbg !14284

sw.bb35:                                          ; preds = %if.then28
  %55 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14285
  %arraydimension36 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %55, i32 0, i32 12, !dbg !14287
  %56 = load i32, i32* %arraydimension36, align 8, !dbg !14287
  %tobool37 = icmp ne i32 %56, 0, !dbg !14285
  br i1 %tobool37, label %if.then38, label %if.else41, !dbg !14288

if.then38:                                        ; preds = %sw.bb35
  %57 = load i8*, i8** %data, align 8, !dbg !14289
  %58 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14290
  %59 = bitcast %struct.PropertyRNA* %58 to %struct.IntPropertyRNA*, !dbg !14291
  %defaultarray39 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %59, i32 0, i32 17, !dbg !14291
  %60 = load i32*, i32** %defaultarray39, align 8, !dbg !14291
  %61 = bitcast i32* %60 to i8*, !dbg !14292
  %62 = load i32, i32* %size, align 4, !dbg !14293
  %conv40 = sext i32 %62 to i64, !dbg !14293
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* align 4 %61, i64 %conv40, i1 false), !dbg !14292
  br label %if.end44, !dbg !14292

if.else41:                                        ; preds = %sw.bb35
  %63 = load i8*, i8** %data, align 8, !dbg !14294
  %64 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14295
  %65 = bitcast %struct.PropertyRNA* %64 to %struct.IntPropertyRNA*, !dbg !14296
  %defaultvalue42 = getelementptr inbounds %struct.IntPropertyRNA, %struct.IntPropertyRNA* %65, i32 0, i32 16, !dbg !14296
  %66 = bitcast i32* %defaultvalue42 to i8*, !dbg !14297
  %67 = load i32, i32* %size, align 4, !dbg !14298
  %conv43 = sext i32 %67 to i64, !dbg !14298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 4 %66, i64 %conv43, i1 false), !dbg !14297
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then38
  br label %sw.epilog, !dbg !14299

sw.bb45:                                          ; preds = %if.then28
  %68 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14300
  %arraydimension46 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %68, i32 0, i32 12, !dbg !14302
  %69 = load i32, i32* %arraydimension46, align 8, !dbg !14302
  %tobool47 = icmp ne i32 %69, 0, !dbg !14300
  br i1 %tobool47, label %if.then48, label %if.else51, !dbg !14303

if.then48:                                        ; preds = %sw.bb45
  %70 = load i8*, i8** %data, align 8, !dbg !14304
  %71 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14305
  %72 = bitcast %struct.PropertyRNA* %71 to %struct.FloatPropertyRNA*, !dbg !14306
  %defaultarray49 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %72, i32 0, i32 18, !dbg !14306
  %73 = load float*, float** %defaultarray49, align 8, !dbg !14306
  %74 = bitcast float* %73 to i8*, !dbg !14307
  %75 = load i32, i32* %size, align 4, !dbg !14308
  %conv50 = sext i32 %75 to i64, !dbg !14308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 4 %74, i64 %conv50, i1 false), !dbg !14307
  br label %if.end54, !dbg !14307

if.else51:                                        ; preds = %sw.bb45
  %76 = load i8*, i8** %data, align 8, !dbg !14309
  %77 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14310
  %78 = bitcast %struct.PropertyRNA* %77 to %struct.FloatPropertyRNA*, !dbg !14311
  %defaultvalue52 = getelementptr inbounds %struct.FloatPropertyRNA, %struct.FloatPropertyRNA* %78, i32 0, i32 17, !dbg !14311
  %79 = bitcast float* %defaultvalue52 to i8*, !dbg !14312
  %80 = load i32, i32* %size, align 4, !dbg !14313
  %conv53 = sext i32 %80 to i64, !dbg !14313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 8 %79, i64 %conv53, i1 false), !dbg !14312
  br label %if.end54

if.end54:                                         ; preds = %if.else51, %if.then48
  br label %sw.epilog, !dbg !14314

sw.bb55:                                          ; preds = %if.then28
  %81 = load i8*, i8** %data, align 8, !dbg !14315
  %82 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14316
  %83 = bitcast %struct.PropertyRNA* %82 to %struct.EnumPropertyRNA*, !dbg !14317
  %defaultvalue56 = getelementptr inbounds %struct.EnumPropertyRNA, %struct.EnumPropertyRNA* %83, i32 0, i32 9, !dbg !14317
  %84 = bitcast i32* %defaultvalue56 to i8*, !dbg !14318
  %85 = load i32, i32* %size, align 4, !dbg !14319
  %conv57 = sext i32 %85 to i64, !dbg !14319
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 4 %84, i64 %conv57, i1 false), !dbg !14318
  br label %sw.epilog, !dbg !14320

sw.bb58:                                          ; preds = %if.then28
  call void @llvm.dbg.declare(metadata i8** %defvalue, metadata !14321, metadata !DIExpression()), !dbg !14323
  %86 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14324
  %87 = bitcast %struct.PropertyRNA* %86 to %struct.StringPropertyRNA*, !dbg !14325
  %defaultvalue59 = getelementptr inbounds %struct.StringPropertyRNA, %struct.StringPropertyRNA* %87, i32 0, i32 8, !dbg !14325
  %88 = load i8*, i8** %defaultvalue59, align 8, !dbg !14325
  store i8* %88, i8** %defvalue, align 8, !dbg !14323
  %89 = load i8*, i8** %defvalue, align 8, !dbg !14326
  %tobool60 = icmp ne i8* %89, null, !dbg !14326
  br i1 %tobool60, label %land.lhs.true61, label %if.end66, !dbg !14328

land.lhs.true61:                                  ; preds = %sw.bb58
  %90 = load i8*, i8** %defvalue, align 8, !dbg !14329
  %arrayidx = getelementptr inbounds i8, i8* %90, i64 0, !dbg !14329
  %91 = load i8, i8* %arrayidx, align 1, !dbg !14329
  %conv62 = zext i8 %91 to i32, !dbg !14329
  %tobool63 = icmp ne i32 %conv62, 0, !dbg !14329
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !14330

if.then64:                                        ; preds = %land.lhs.true61
  %92 = load i8*, i8** %data, align 8, !dbg !14331
  %93 = bitcast i8** %defvalue to i8*, !dbg !14333
  %94 = load i32, i32* %size, align 4, !dbg !14334
  %conv65 = sext i32 %94 to i64, !dbg !14334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %92, i8* align 8 %93, i64 %conv65, i1 false), !dbg !14333
  br label %if.end66, !dbg !14335

if.end66:                                         ; preds = %if.then64, %land.lhs.true61, %sw.bb58
  br label %sw.epilog, !dbg !14336

sw.bb67:                                          ; preds = %if.then28, %if.then28
  br label %sw.epilog, !dbg !14337

sw.epilog:                                        ; preds = %if.then28, %sw.bb67, %if.end66, %sw.bb55, %if.end54, %if.end44, %if.end34
  br label %if.end68, !dbg !14338

if.end68:                                         ; preds = %sw.epilog, %land.lhs.true, %if.end21
  %95 = load i8*, i8** %data, align 8, !dbg !14339
  %96 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14340
  %call69 = call i32 @rna_parameter_size(%struct.PropertyRNA* %96), !dbg !14341
  %idx.ext = sext i32 %call69 to i64, !dbg !14342
  %add.ptr = getelementptr inbounds i8, i8* %95, i64 %idx.ext, !dbg !14342
  store i8* %add.ptr, i8** %data, align 8, !dbg !14343
  br label %for.inc70, !dbg !14344

for.inc70:                                        ; preds = %if.end68
  %97 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14345
  %next71 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %97, i32 0, i32 0, !dbg !14346
  %98 = load %struct.PropertyRNA*, %struct.PropertyRNA** %next71, align 8, !dbg !14346
  store %struct.PropertyRNA* %98, %struct.PropertyRNA** %parm, align 8, !dbg !14347
  br label %for.cond13, !dbg !14348, !llvm.loop !14349

for.end72:                                        ; preds = %for.cond13
  %99 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14351
  ret %struct.ParameterList* %99, !dbg !14352
}

declare dso_local i32 @rna_parameter_size(%struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_list_free(%struct.ParameterList* %parms) #0 !dbg !14353 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %parm = alloca %struct.PropertyRNA*, align 8
  %tot = alloca i32, align 4
  %data_alloc = alloca %struct.ParameterDynAlloc*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14356, metadata !DIExpression()), !dbg !14357
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm, metadata !14358, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !14360, metadata !DIExpression()), !dbg !14361
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14362
  %func = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %0, i32 0, i32 1, !dbg !14363
  %1 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !14363
  %cont = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %1, i32 0, i32 0, !dbg !14364
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !14365
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %properties, i32 0, i32 0, !dbg !14366
  %2 = load i8*, i8** %first, align 8, !dbg !14366
  %3 = bitcast i8* %2 to %struct.PropertyRNA*, !dbg !14362
  store %struct.PropertyRNA* %3, %struct.PropertyRNA** %parm, align 8, !dbg !14367
  store i32 0, i32* %tot, align 4, !dbg !14368
  br label %for.cond, !dbg !14370

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14371
  %tobool = icmp ne %struct.PropertyRNA* %4, null, !dbg !14373
  br i1 %tobool, label %for.body, label %for.end, !dbg !14373

for.body:                                         ; preds = %for.cond
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14374
  %type = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %5, i32 0, i32 9, !dbg !14377
  %6 = load i32, i32* %type, align 8, !dbg !14377
  %cmp = icmp eq i32 %6, 6, !dbg !14378
  br i1 %cmp, label %if.then, label %if.else, !dbg !14379

if.then:                                          ; preds = %for.body
  %7 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14380
  %data = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %7, i32 0, i32 0, !dbg !14381
  %8 = load i8*, i8** %data, align 8, !dbg !14381
  %9 = load i32, i32* %tot, align 4, !dbg !14382
  %idx.ext = sext i32 %9 to i64, !dbg !14383
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !14383
  %10 = bitcast i8* %add.ptr to %struct.ListBase*, !dbg !14384
  call void @BLI_freelistN(%struct.ListBase* %10), !dbg !14385
  br label %if.end10, !dbg !14385

if.else:                                          ; preds = %for.body
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14386
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %11, i32 0, i32 4, !dbg !14388
  %12 = load i32, i32* %flag, align 8, !dbg !14388
  %and = and i32 %12, 131072, !dbg !14389
  %tobool1 = icmp ne i32 %and, 0, !dbg !14389
  br i1 %tobool1, label %if.then2, label %if.end9, !dbg !14390

if.then2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ParameterDynAlloc** %data_alloc, metadata !14391, metadata !DIExpression()), !dbg !14393
  %13 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14394
  %data3 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %13, i32 0, i32 0, !dbg !14395
  %14 = load i8*, i8** %data3, align 8, !dbg !14395
  %15 = load i32, i32* %tot, align 4, !dbg !14396
  %idx.ext4 = sext i32 %15 to i64, !dbg !14397
  %add.ptr5 = getelementptr inbounds i8, i8* %14, i64 %idx.ext4, !dbg !14397
  %16 = bitcast i8* %add.ptr5 to %struct.ParameterDynAlloc*, !dbg !14398
  store %struct.ParameterDynAlloc* %16, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14393
  %17 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14399
  %array = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %17, i32 0, i32 1, !dbg !14401
  %18 = load i8*, i8** %array, align 8, !dbg !14401
  %tobool6 = icmp ne i8* %18, null, !dbg !14399
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !14402

if.then7:                                         ; preds = %if.then2
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14403
  %20 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14404
  %array8 = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %20, i32 0, i32 1, !dbg !14405
  %21 = load i8*, i8** %array8, align 8, !dbg !14405
  call void %19(i8* %21), !dbg !14403
  br label %if.end, !dbg !14403

if.end:                                           ; preds = %if.then7, %if.then2
  br label %if.end9, !dbg !14406

if.end9:                                          ; preds = %if.end, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14407
  %call = call i32 @rna_parameter_size(%struct.PropertyRNA* %22), !dbg !14408
  %23 = load i32, i32* %tot, align 4, !dbg !14409
  %add = add nsw i32 %23, %call, !dbg !14409
  store i32 %add, i32* %tot, align 4, !dbg !14409
  br label %for.inc, !dbg !14410

for.inc:                                          ; preds = %if.end10
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14411
  %next = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %24, i32 0, i32 0, !dbg !14412
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %next, align 8, !dbg !14412
  store %struct.PropertyRNA* %25, %struct.PropertyRNA** %parm, align 8, !dbg !14413
  br label %for.cond, !dbg !14414, !llvm.loop !14415

for.end:                                          ; preds = %for.cond
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14417
  %27 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14418
  %data11 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %27, i32 0, i32 0, !dbg !14419
  %28 = load i8*, i8** %data11, align 8, !dbg !14419
  call void %26(i8* %28), !dbg !14417
  %29 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14420
  %data12 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %29, i32 0, i32 0, !dbg !14421
  store i8* null, i8** %data12, align 8, !dbg !14422
  %30 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14423
  %func13 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %30, i32 0, i32 1, !dbg !14424
  store %struct.FunctionRNA* null, %struct.FunctionRNA** %func13, align 8, !dbg !14425
  ret void, !dbg !14426
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_parameter_list_size(%struct.ParameterList* %parms) #0 !dbg !14427 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14430, metadata !DIExpression()), !dbg !14431
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14432
  %alloc_size = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %0, i32 0, i32 2, !dbg !14433
  %1 = load i32, i32* %alloc_size, align 8, !dbg !14433
  ret i32 %1, !dbg !14434
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_parameter_list_arg_count(%struct.ParameterList* %parms) #0 !dbg !14435 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14436, metadata !DIExpression()), !dbg !14437
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14438
  %arg_count = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %0, i32 0, i32 3, !dbg !14439
  %1 = load i32, i32* %arg_count, align 4, !dbg !14439
  ret i32 %1, !dbg !14440
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_parameter_list_ret_count(%struct.ParameterList* %parms) #0 !dbg !14441 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14442, metadata !DIExpression()), !dbg !14443
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14444
  %ret_count = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %0, i32 0, i32 4, !dbg !14445
  %1 = load i32, i32* %ret_count, align 8, !dbg !14445
  ret i32 %1, !dbg !14446
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_list_begin(%struct.ParameterList* %parms, %struct.ParameterIterator* %iter) #0 !dbg !14447 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %iter.addr = alloca %struct.ParameterIterator*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14461, metadata !DIExpression()), !dbg !14462
  store %struct.ParameterIterator* %iter, %struct.ParameterIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterIterator** %iter.addr, metadata !14463, metadata !DIExpression()), !dbg !14464
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14465
  %1 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14466
  %parms1 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %1, i32 0, i32 0, !dbg !14467
  store %struct.ParameterList* %0, %struct.ParameterList** %parms1, align 8, !dbg !14468
  %2 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14469
  %func = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %2, i32 0, i32 1, !dbg !14470
  %3 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !14470
  %cont = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %3, i32 0, i32 0, !dbg !14471
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !14472
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %properties, i32 0, i32 0, !dbg !14473
  %4 = load i8*, i8** %first, align 8, !dbg !14473
  %5 = bitcast i8* %4 to %struct.PropertyRNA*, !dbg !14469
  %6 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14474
  %parm = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %6, i32 0, i32 4, !dbg !14475
  store %struct.PropertyRNA* %5, %struct.PropertyRNA** %parm, align 8, !dbg !14476
  %7 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14477
  %parm2 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %7, i32 0, i32 4, !dbg !14478
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm2, align 8, !dbg !14478
  %cmp = icmp ne %struct.PropertyRNA* %8, null, !dbg !14479
  %conv = zext i1 %cmp to i32, !dbg !14479
  %9 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14480
  %valid = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %9, i32 0, i32 5, !dbg !14481
  store i32 %conv, i32* %valid, align 8, !dbg !14482
  %10 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14483
  %offset = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %10, i32 0, i32 3, !dbg !14484
  store i32 0, i32* %offset, align 4, !dbg !14485
  %11 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14486
  %valid3 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %11, i32 0, i32 5, !dbg !14488
  %12 = load i32, i32* %valid3, align 8, !dbg !14488
  %tobool = icmp ne i32 %12, 0, !dbg !14486
  br i1 %tobool, label %if.then, label %if.end, !dbg !14489

if.then:                                          ; preds = %entry
  %13 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14490
  %parm4 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %13, i32 0, i32 4, !dbg !14492
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm4, align 8, !dbg !14492
  %call = call i32 @rna_parameter_size(%struct.PropertyRNA* %14), !dbg !14493
  %15 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14494
  %size = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %15, i32 0, i32 2, !dbg !14495
  store i32 %call, i32* %size, align 8, !dbg !14496
  %16 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14497
  %parms5 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %16, i32 0, i32 0, !dbg !14498
  %17 = load %struct.ParameterList*, %struct.ParameterList** %parms5, align 8, !dbg !14498
  %data = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %17, i32 0, i32 0, !dbg !14499
  %18 = load i8*, i8** %data, align 8, !dbg !14499
  %19 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14500
  %data6 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %19, i32 0, i32 1, !dbg !14501
  store i8* %18, i8** %data6, align 8, !dbg !14502
  br label %if.end, !dbg !14503

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14504
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_list_next(%struct.ParameterIterator* %iter) #0 !dbg !14505 {
entry:
  %iter.addr = alloca %struct.ParameterIterator*, align 8
  store %struct.ParameterIterator* %iter, %struct.ParameterIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterIterator** %iter.addr, metadata !14508, metadata !DIExpression()), !dbg !14509
  %0 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14510
  %size = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %0, i32 0, i32 2, !dbg !14511
  %1 = load i32, i32* %size, align 8, !dbg !14511
  %2 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14512
  %offset = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %2, i32 0, i32 3, !dbg !14513
  %3 = load i32, i32* %offset, align 4, !dbg !14514
  %add = add nsw i32 %3, %1, !dbg !14514
  store i32 %add, i32* %offset, align 4, !dbg !14514
  %4 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14515
  %parm = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %4, i32 0, i32 4, !dbg !14516
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14516
  %next = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %5, i32 0, i32 0, !dbg !14517
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %next, align 8, !dbg !14517
  %7 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14518
  %parm1 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %7, i32 0, i32 4, !dbg !14519
  store %struct.PropertyRNA* %6, %struct.PropertyRNA** %parm1, align 8, !dbg !14520
  %8 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14521
  %parm2 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %8, i32 0, i32 4, !dbg !14522
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm2, align 8, !dbg !14522
  %cmp = icmp ne %struct.PropertyRNA* %9, null, !dbg !14523
  %conv = zext i1 %cmp to i32, !dbg !14523
  %10 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14524
  %valid = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %10, i32 0, i32 5, !dbg !14525
  store i32 %conv, i32* %valid, align 8, !dbg !14526
  %11 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14527
  %valid3 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %11, i32 0, i32 5, !dbg !14529
  %12 = load i32, i32* %valid3, align 8, !dbg !14529
  %tobool = icmp ne i32 %12, 0, !dbg !14527
  br i1 %tobool, label %if.then, label %if.end, !dbg !14530

if.then:                                          ; preds = %entry
  %13 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14531
  %parm4 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %13, i32 0, i32 4, !dbg !14533
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm4, align 8, !dbg !14533
  %call = call i32 @rna_parameter_size(%struct.PropertyRNA* %14), !dbg !14534
  %15 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14535
  %size5 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %15, i32 0, i32 2, !dbg !14536
  store i32 %call, i32* %size5, align 8, !dbg !14537
  %16 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14538
  %parms = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %16, i32 0, i32 0, !dbg !14539
  %17 = load %struct.ParameterList*, %struct.ParameterList** %parms, align 8, !dbg !14539
  %data = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %17, i32 0, i32 0, !dbg !14540
  %18 = load i8*, i8** %data, align 8, !dbg !14540
  %19 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14541
  %offset6 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %19, i32 0, i32 3, !dbg !14542
  %20 = load i32, i32* %offset6, align 4, !dbg !14542
  %idx.ext = sext i32 %20 to i64, !dbg !14543
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext, !dbg !14543
  %21 = load %struct.ParameterIterator*, %struct.ParameterIterator** %iter.addr, align 8, !dbg !14544
  %data7 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %21, i32 0, i32 1, !dbg !14545
  store i8* %add.ptr, i8** %data7, align 8, !dbg !14546
  br label %if.end, !dbg !14547

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14548
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_list_end(%struct.ParameterIterator* %UNUSED_iter) #0 !dbg !14549 {
entry:
  %UNUSED_iter.addr = alloca %struct.ParameterIterator*, align 8
  store %struct.ParameterIterator* %UNUSED_iter, %struct.ParameterIterator** %UNUSED_iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterIterator** %UNUSED_iter.addr, metadata !14550, metadata !DIExpression()), !dbg !14551
  ret void, !dbg !14552
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_get(%struct.ParameterList* %parms, %struct.PropertyRNA* %parm, i8** %value) #0 !dbg !14553 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %parm.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i8**, align 8
  %iter = alloca %struct.ParameterIterator, align 8
  %data_alloc = alloca %struct.ParameterDynAlloc*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14556, metadata !DIExpression()), !dbg !14557
  store %struct.PropertyRNA* %parm, %struct.PropertyRNA** %parm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm.addr, metadata !14558, metadata !DIExpression()), !dbg !14559
  store i8** %value, i8*** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %value.addr, metadata !14560, metadata !DIExpression()), !dbg !14561
  call void @llvm.dbg.declare(metadata %struct.ParameterIterator* %iter, metadata !14562, metadata !DIExpression()), !dbg !14563
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14564
  call void @RNA_parameter_list_begin(%struct.ParameterList* %0, %struct.ParameterIterator* %iter), !dbg !14565
  br label %for.cond, !dbg !14566

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !14567
  %1 = load i32, i32* %valid, align 8, !dbg !14567
  %tobool = icmp ne i32 %1, 0, !dbg !14570
  br i1 %tobool, label %for.body, label %for.end, !dbg !14570

for.body:                                         ; preds = %for.cond
  %parm1 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 4, !dbg !14571
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm1, align 8, !dbg !14571
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14573
  %cmp = icmp eq %struct.PropertyRNA* %2, %3, !dbg !14574
  br i1 %cmp, label %if.then, label %if.end, !dbg !14575

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14576

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14573

for.inc:                                          ; preds = %if.end
  call void @RNA_parameter_list_next(%struct.ParameterIterator* %iter), !dbg !14577
  br label %for.cond, !dbg !14578, !llvm.loop !14579

for.end:                                          ; preds = %if.then, %for.cond
  %valid2 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !14581
  %4 = load i32, i32* %valid2, align 8, !dbg !14581
  %tobool3 = icmp ne i32 %4, 0, !dbg !14583
  br i1 %tobool3, label %if.then4, label %if.else9, !dbg !14584

if.then4:                                         ; preds = %for.end
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14585
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %5, i32 0, i32 4, !dbg !14588
  %6 = load i32, i32* %flag, align 8, !dbg !14588
  %and = and i32 %6, 131072, !dbg !14589
  %tobool5 = icmp ne i32 %and, 0, !dbg !14589
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !14590

if.then6:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.ParameterDynAlloc** %data_alloc, metadata !14591, metadata !DIExpression()), !dbg !14593
  %data = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !14594
  %7 = load i8*, i8** %data, align 8, !dbg !14594
  %8 = bitcast i8* %7 to %struct.ParameterDynAlloc*, !dbg !14595
  store %struct.ParameterDynAlloc* %8, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14593
  %9 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14596
  %array = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %9, i32 0, i32 1, !dbg !14597
  %10 = load i8*, i8** %array, align 8, !dbg !14597
  %11 = load i8**, i8*** %value.addr, align 8, !dbg !14598
  store i8* %10, i8** %11, align 8, !dbg !14599
  br label %if.end8, !dbg !14600

if.else:                                          ; preds = %if.then4
  %data7 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !14601
  %12 = load i8*, i8** %data7, align 8, !dbg !14601
  %13 = load i8**, i8*** %value.addr, align 8, !dbg !14603
  store i8* %12, i8** %13, align 8, !dbg !14604
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then6
  br label %if.end10, !dbg !14605

if.else9:                                         ; preds = %for.end
  %14 = load i8**, i8*** %value.addr, align 8, !dbg !14606
  store i8* null, i8** %14, align 8, !dbg !14608
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end8
  call void @RNA_parameter_list_end(%struct.ParameterIterator* %iter), !dbg !14609
  ret void, !dbg !14610
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_get_lookup(%struct.ParameterList* %parms, i8* %identifier, i8** %value) #0 !dbg !14611 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %identifier.addr = alloca i8*, align 8
  %value.addr = alloca i8**, align 8
  %parm = alloca %struct.PropertyRNA*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14614, metadata !DIExpression()), !dbg !14615
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !14616, metadata !DIExpression()), !dbg !14617
  store i8** %value, i8*** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %value.addr, metadata !14618, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm, metadata !14620, metadata !DIExpression()), !dbg !14621
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14622
  %func = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %0, i32 0, i32 1, !dbg !14623
  %1 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !14623
  %cont = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %1, i32 0, i32 0, !dbg !14624
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !14625
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %properties, i32 0, i32 0, !dbg !14626
  %2 = load i8*, i8** %first, align 8, !dbg !14626
  %3 = bitcast i8* %2 to %struct.PropertyRNA*, !dbg !14622
  store %struct.PropertyRNA* %3, %struct.PropertyRNA** %parm, align 8, !dbg !14627
  br label %for.cond, !dbg !14628

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14629
  %tobool = icmp ne %struct.PropertyRNA* %4, null, !dbg !14632
  br i1 %tobool, label %for.body, label %for.end, !dbg !14632

for.body:                                         ; preds = %for.cond
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14633
  %call = call i8* @RNA_property_identifier(%struct.PropertyRNA* %5), !dbg !14635
  %6 = load i8*, i8** %identifier.addr, align 8, !dbg !14636
  %call1 = call i32 @strcmp(i8* %call, i8* %6) #7, !dbg !14637
  %cmp = icmp eq i32 %call1, 0, !dbg !14638
  br i1 %cmp, label %if.then, label %if.end, !dbg !14639

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14640

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14641

for.inc:                                          ; preds = %if.end
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14642
  %next = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %7, i32 0, i32 0, !dbg !14643
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %next, align 8, !dbg !14643
  store %struct.PropertyRNA* %8, %struct.PropertyRNA** %parm, align 8, !dbg !14644
  br label %for.cond, !dbg !14645, !llvm.loop !14646

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14648
  %tobool2 = icmp ne %struct.PropertyRNA* %9, null, !dbg !14648
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !14650

if.then3:                                         ; preds = %for.end
  %10 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14651
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14652
  %12 = load i8**, i8*** %value.addr, align 8, !dbg !14653
  call void @RNA_parameter_get(%struct.ParameterList* %10, %struct.PropertyRNA* %11, i8** %12), !dbg !14654
  br label %if.end4, !dbg !14654

if.end4:                                          ; preds = %if.then3, %for.end
  ret void, !dbg !14655
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_set(%struct.ParameterList* %parms, %struct.PropertyRNA* %parm, i8* %value) #0 !dbg !14656 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %parm.addr = alloca %struct.PropertyRNA*, align 8
  %value.addr = alloca i8*, align 8
  %iter = alloca %struct.ParameterIterator, align 8
  %data_alloc = alloca %struct.ParameterDynAlloc*, align 8
  %size = alloca i64, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14661, metadata !DIExpression()), !dbg !14662
  store %struct.PropertyRNA* %parm, %struct.PropertyRNA** %parm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm.addr, metadata !14663, metadata !DIExpression()), !dbg !14664
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !14665, metadata !DIExpression()), !dbg !14666
  call void @llvm.dbg.declare(metadata %struct.ParameterIterator* %iter, metadata !14667, metadata !DIExpression()), !dbg !14668
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14669
  call void @RNA_parameter_list_begin(%struct.ParameterList* %0, %struct.ParameterIterator* %iter), !dbg !14670
  br label %for.cond, !dbg !14671

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !14672
  %1 = load i32, i32* %valid, align 8, !dbg !14672
  %tobool = icmp ne i32 %1, 0, !dbg !14675
  br i1 %tobool, label %for.body, label %for.end, !dbg !14675

for.body:                                         ; preds = %for.cond
  %parm1 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 4, !dbg !14676
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm1, align 8, !dbg !14676
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14678
  %cmp = icmp eq %struct.PropertyRNA* %2, %3, !dbg !14679
  br i1 %cmp, label %if.then, label %if.end, !dbg !14680

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14681

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14678

for.inc:                                          ; preds = %if.end
  call void @RNA_parameter_list_next(%struct.ParameterIterator* %iter), !dbg !14682
  br label %for.cond, !dbg !14683, !llvm.loop !14684

for.end:                                          ; preds = %if.then, %for.cond
  %valid2 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !14686
  %4 = load i32, i32* %valid2, align 8, !dbg !14686
  %tobool3 = icmp ne i32 %4, 0, !dbg !14688
  br i1 %tobool3, label %if.then4, label %if.end18, !dbg !14689

if.then4:                                         ; preds = %for.end
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14690
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %5, i32 0, i32 4, !dbg !14693
  %6 = load i32, i32* %flag, align 8, !dbg !14693
  %and = and i32 %6, 131072, !dbg !14694
  %tobool5 = icmp ne i32 %and, 0, !dbg !14694
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !14695

if.then6:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.ParameterDynAlloc** %data_alloc, metadata !14696, metadata !DIExpression()), !dbg !14698
  %data = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !14699
  %7 = load i8*, i8** %data, align 8, !dbg !14699
  %8 = bitcast i8* %7 to %struct.ParameterDynAlloc*, !dbg !14700
  store %struct.ParameterDynAlloc* %8, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14698
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14701, metadata !DIExpression()), !dbg !14704
  store i64 0, i64* %size, align 8, !dbg !14704
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14705
  %type = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %9, i32 0, i32 9, !dbg !14706
  %10 = load i32, i32* %type, align 8, !dbg !14706
  switch i32 %10, label %sw.default [
    i32 3, label %sw.bb
    i32 1, label %sw.bb7
    i32 0, label %sw.bb7
    i32 2, label %sw.bb8
  ], !dbg !14707

sw.bb:                                            ; preds = %if.then6
  store i64 1, i64* %size, align 8, !dbg !14708
  br label %sw.epilog, !dbg !14710

sw.bb7:                                           ; preds = %if.then6, %if.then6
  store i64 4, i64* %size, align 8, !dbg !14711
  br label %sw.epilog, !dbg !14712

sw.bb8:                                           ; preds = %if.then6
  store i64 4, i64* %size, align 8, !dbg !14713
  br label %sw.epilog, !dbg !14714

sw.default:                                       ; preds = %if.then6
  br label %sw.epilog, !dbg !14715

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb7, %sw.bb
  %11 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14716
  %array_tot = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %11, i32 0, i32 0, !dbg !14717
  %12 = load i64, i64* %array_tot, align 8, !dbg !14717
  %13 = load i64, i64* %size, align 8, !dbg !14718
  %mul = mul i64 %13, %12, !dbg !14718
  store i64 %mul, i64* %size, align 8, !dbg !14718
  %14 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14719
  %array = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %14, i32 0, i32 1, !dbg !14721
  %15 = load i8*, i8** %array, align 8, !dbg !14721
  %tobool9 = icmp ne i8* %15, null, !dbg !14719
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !14722

if.then10:                                        ; preds = %sw.epilog
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14723
  %17 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14724
  %array11 = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %17, i32 0, i32 1, !dbg !14725
  %18 = load i8*, i8** %array11, align 8, !dbg !14725
  call void %16(i8* %18), !dbg !14723
  br label %if.end12, !dbg !14723

if.end12:                                         ; preds = %if.then10, %sw.epilog
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !14726
  %20 = load i64, i64* %size, align 8, !dbg !14727
  %call = call i8* %19(i64 %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.RNA_parameter_set, i64 0, i64 0)), !dbg !14726
  %21 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14728
  %array13 = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %21, i32 0, i32 1, !dbg !14729
  store i8* %call, i8** %array13, align 8, !dbg !14730
  %22 = load %struct.ParameterDynAlloc*, %struct.ParameterDynAlloc** %data_alloc, align 8, !dbg !14731
  %array14 = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %22, i32 0, i32 1, !dbg !14732
  %23 = load i8*, i8** %array14, align 8, !dbg !14732
  %24 = load i8*, i8** %value.addr, align 8, !dbg !14733
  %25 = load i64, i64* %size, align 8, !dbg !14734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %24, i64 %25, i1 false), !dbg !14735
  br label %if.end17, !dbg !14736

if.else:                                          ; preds = %if.then4
  %data15 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !14737
  %26 = load i8*, i8** %data15, align 8, !dbg !14737
  %27 = load i8*, i8** %value.addr, align 8, !dbg !14739
  %size16 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 2, !dbg !14740
  %28 = load i32, i32* %size16, align 8, !dbg !14740
  %conv = sext i32 %28 to i64, !dbg !14741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 %conv, i1 false), !dbg !14742
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end12
  br label %if.end18, !dbg !14743

if.end18:                                         ; preds = %if.end17, %for.end
  call void @RNA_parameter_list_end(%struct.ParameterIterator* %iter), !dbg !14744
  ret void, !dbg !14745
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_set_lookup(%struct.ParameterList* %parms, i8* %identifier, i8* %value) #0 !dbg !14746 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %identifier.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %parm = alloca %struct.PropertyRNA*, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14749, metadata !DIExpression()), !dbg !14750
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !14751, metadata !DIExpression()), !dbg !14752
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !14753, metadata !DIExpression()), !dbg !14754
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm, metadata !14755, metadata !DIExpression()), !dbg !14756
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14757
  %func = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %0, i32 0, i32 1, !dbg !14758
  %1 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !14758
  %cont = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %1, i32 0, i32 0, !dbg !14759
  %properties = getelementptr inbounds %struct.ContainerRNA, %struct.ContainerRNA* %cont, i32 0, i32 3, !dbg !14760
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %properties, i32 0, i32 0, !dbg !14761
  %2 = load i8*, i8** %first, align 8, !dbg !14761
  %3 = bitcast i8* %2 to %struct.PropertyRNA*, !dbg !14757
  store %struct.PropertyRNA* %3, %struct.PropertyRNA** %parm, align 8, !dbg !14762
  br label %for.cond, !dbg !14763

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14764
  %tobool = icmp ne %struct.PropertyRNA* %4, null, !dbg !14767
  br i1 %tobool, label %for.body, label %for.end, !dbg !14767

for.body:                                         ; preds = %for.cond
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14768
  %call = call i8* @RNA_property_identifier(%struct.PropertyRNA* %5), !dbg !14770
  %6 = load i8*, i8** %identifier.addr, align 8, !dbg !14771
  %call1 = call i32 @strcmp(i8* %call, i8* %6) #7, !dbg !14772
  %cmp = icmp eq i32 %call1, 0, !dbg !14773
  br i1 %cmp, label %if.then, label %if.end, !dbg !14774

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14775

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14776

for.inc:                                          ; preds = %if.end
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14777
  %next = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %7, i32 0, i32 0, !dbg !14778
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %next, align 8, !dbg !14778
  store %struct.PropertyRNA* %8, %struct.PropertyRNA** %parm, align 8, !dbg !14779
  br label %for.cond, !dbg !14780, !llvm.loop !14781

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14783
  %tobool2 = icmp ne %struct.PropertyRNA* %9, null, !dbg !14783
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !14785

if.then3:                                         ; preds = %for.end
  %10 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14786
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !14787
  %12 = load i8*, i8** %value.addr, align 8, !dbg !14788
  call void @RNA_parameter_set(%struct.ParameterList* %10, %struct.PropertyRNA* %11, i8* %12), !dbg !14789
  br label %if.end4, !dbg !14789

if.end4:                                          ; preds = %if.then3, %for.end
  ret void, !dbg !14790
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_parameter_dynamic_length_get(%struct.ParameterList* %parms, %struct.PropertyRNA* %parm) #0 !dbg !14791 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %parm.addr = alloca %struct.PropertyRNA*, align 8
  %iter = alloca %struct.ParameterIterator, align 8
  %len = alloca i32, align 4
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14794, metadata !DIExpression()), !dbg !14795
  store %struct.PropertyRNA* %parm, %struct.PropertyRNA** %parm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm.addr, metadata !14796, metadata !DIExpression()), !dbg !14797
  call void @llvm.dbg.declare(metadata %struct.ParameterIterator* %iter, metadata !14798, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14800, metadata !DIExpression()), !dbg !14801
  store i32 0, i32* %len, align 4, !dbg !14801
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14802
  call void @RNA_parameter_list_begin(%struct.ParameterList* %0, %struct.ParameterIterator* %iter), !dbg !14803
  br label %for.cond, !dbg !14804

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !14805
  %1 = load i32, i32* %valid, align 8, !dbg !14805
  %tobool = icmp ne i32 %1, 0, !dbg !14808
  br i1 %tobool, label %for.body, label %for.end, !dbg !14808

for.body:                                         ; preds = %for.cond
  %parm1 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 4, !dbg !14809
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm1, align 8, !dbg !14809
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14811
  %cmp = icmp eq %struct.PropertyRNA* %2, %3, !dbg !14812
  br i1 %cmp, label %if.then, label %if.end, !dbg !14813

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14814

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14811

for.inc:                                          ; preds = %if.end
  call void @RNA_parameter_list_next(%struct.ParameterIterator* %iter), !dbg !14815
  br label %for.cond, !dbg !14816, !llvm.loop !14817

for.end:                                          ; preds = %if.then, %for.cond
  %valid2 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !14819
  %4 = load i32, i32* %valid2, align 8, !dbg !14819
  %tobool3 = icmp ne i32 %4, 0, !dbg !14821
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !14822

if.then4:                                         ; preds = %for.end
  %5 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14823
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14824
  %data = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !14825
  %7 = load i8*, i8** %data, align 8, !dbg !14825
  %call = call i32 @RNA_parameter_dynamic_length_get_data(%struct.ParameterList* %5, %struct.PropertyRNA* %6, i8* %7), !dbg !14826
  store i32 %call, i32* %len, align 4, !dbg !14827
  br label %if.end5, !dbg !14828

if.end5:                                          ; preds = %if.then4, %for.end
  call void @RNA_parameter_list_end(%struct.ParameterIterator* %iter), !dbg !14829
  %8 = load i32, i32* %len, align 4, !dbg !14830
  ret i32 %8, !dbg !14831
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_parameter_dynamic_length_get_data(%struct.ParameterList* %UNUSED_parms, %struct.PropertyRNA* %parm, i8* %data) #0 !dbg !14832 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_parms.addr = alloca %struct.ParameterList*, align 8
  %parm.addr = alloca %struct.PropertyRNA*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.ParameterList* %UNUSED_parms, %struct.ParameterList** %UNUSED_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %UNUSED_parms.addr, metadata !14835, metadata !DIExpression()), !dbg !14836
  store %struct.PropertyRNA* %parm, %struct.PropertyRNA** %parm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm.addr, metadata !14837, metadata !DIExpression()), !dbg !14838
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14839, metadata !DIExpression()), !dbg !14840
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14841
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 4, !dbg !14843
  %1 = load i32, i32* %flag, align 8, !dbg !14843
  %and = and i32 %1, 131072, !dbg !14844
  %tobool = icmp ne i32 %and, 0, !dbg !14844
  br i1 %tobool, label %if.then, label %if.end, !dbg !14845

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %data.addr, align 8, !dbg !14846
  %3 = bitcast i8* %2 to %struct.ParameterDynAlloc*, !dbg !14848
  %array_tot = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %3, i32 0, i32 0, !dbg !14849
  %4 = load i64, i64* %array_tot, align 8, !dbg !14849
  %conv = trunc i64 %4 to i32, !dbg !14850
  store i32 %conv, i32* %retval, align 4, !dbg !14851
  br label %return, !dbg !14851

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14852
  br label %return, !dbg !14852

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !14853
  ret i32 %5, !dbg !14853
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_dynamic_length_set(%struct.ParameterList* %parms, %struct.PropertyRNA* %parm, i32 %length) #0 !dbg !14854 {
entry:
  %parms.addr = alloca %struct.ParameterList*, align 8
  %parm.addr = alloca %struct.PropertyRNA*, align 8
  %length.addr = alloca i32, align 4
  %iter = alloca %struct.ParameterIterator, align 8
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14857, metadata !DIExpression()), !dbg !14858
  store %struct.PropertyRNA* %parm, %struct.PropertyRNA** %parm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm.addr, metadata !14859, metadata !DIExpression()), !dbg !14860
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !14861, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.declare(metadata %struct.ParameterIterator* %iter, metadata !14863, metadata !DIExpression()), !dbg !14864
  %0 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14865
  call void @RNA_parameter_list_begin(%struct.ParameterList* %0, %struct.ParameterIterator* %iter), !dbg !14866
  br label %for.cond, !dbg !14867

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !14868
  %1 = load i32, i32* %valid, align 8, !dbg !14868
  %tobool = icmp ne i32 %1, 0, !dbg !14871
  br i1 %tobool, label %for.body, label %for.end, !dbg !14871

for.body:                                         ; preds = %for.cond
  %parm1 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 4, !dbg !14872
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm1, align 8, !dbg !14872
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14874
  %cmp = icmp eq %struct.PropertyRNA* %2, %3, !dbg !14875
  br i1 %cmp, label %if.then, label %if.end, !dbg !14876

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14877

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14874

for.inc:                                          ; preds = %if.end
  call void @RNA_parameter_list_next(%struct.ParameterIterator* %iter), !dbg !14878
  br label %for.cond, !dbg !14879, !llvm.loop !14880

for.end:                                          ; preds = %if.then, %for.cond
  %valid2 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !14882
  %4 = load i32, i32* %valid2, align 8, !dbg !14882
  %tobool3 = icmp ne i32 %4, 0, !dbg !14884
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !14885

if.then4:                                         ; preds = %for.end
  %5 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14886
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14887
  %data = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !14888
  %7 = load i8*, i8** %data, align 8, !dbg !14888
  %8 = load i32, i32* %length.addr, align 4, !dbg !14889
  call void @RNA_parameter_dynamic_length_set_data(%struct.ParameterList* %5, %struct.PropertyRNA* %6, i8* %7, i32 %8), !dbg !14890
  br label %if.end5, !dbg !14890

if.end5:                                          ; preds = %if.then4, %for.end
  call void @RNA_parameter_list_end(%struct.ParameterIterator* %iter), !dbg !14891
  ret void, !dbg !14892
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RNA_parameter_dynamic_length_set_data(%struct.ParameterList* %UNUSED_parms, %struct.PropertyRNA* %parm, i8* %data, i32 %length) #0 !dbg !14893 {
entry:
  %UNUSED_parms.addr = alloca %struct.ParameterList*, align 8
  %parm.addr = alloca %struct.PropertyRNA*, align 8
  %data.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  store %struct.ParameterList* %UNUSED_parms, %struct.ParameterList** %UNUSED_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %UNUSED_parms.addr, metadata !14896, metadata !DIExpression()), !dbg !14897
  store %struct.PropertyRNA* %parm, %struct.PropertyRNA** %parm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm.addr, metadata !14898, metadata !DIExpression()), !dbg !14899
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14900, metadata !DIExpression()), !dbg !14901
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !14902, metadata !DIExpression()), !dbg !14903
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm.addr, align 8, !dbg !14904
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %0, i32 0, i32 4, !dbg !14906
  %1 = load i32, i32* %flag, align 8, !dbg !14906
  %and = and i32 %1, 131072, !dbg !14907
  %tobool = icmp ne i32 %and, 0, !dbg !14907
  br i1 %tobool, label %if.then, label %if.end, !dbg !14908

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %length.addr, align 4, !dbg !14909
  %conv = sext i32 %2 to i64, !dbg !14911
  %3 = load i8*, i8** %data.addr, align 8, !dbg !14912
  %4 = bitcast i8* %3 to %struct.ParameterDynAlloc*, !dbg !14913
  %array_tot = getelementptr inbounds %struct.ParameterDynAlloc, %struct.ParameterDynAlloc* %4, i32 0, i32 0, !dbg !14914
  store i64 %conv, i64* %array_tot, align 8, !dbg !14915
  br label %if.end, !dbg !14916

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14917
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_function_call(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %ptr, %struct.FunctionRNA* %func, %struct.ParameterList* %parms) #0 !dbg !14918 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %func.addr = alloca %struct.FunctionRNA*, align 8
  %parms.addr = alloca %struct.ParameterList*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !14921, metadata !DIExpression()), !dbg !14922
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !14923, metadata !DIExpression()), !dbg !14924
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !14925, metadata !DIExpression()), !dbg !14926
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14927, metadata !DIExpression()), !dbg !14928
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14929, metadata !DIExpression()), !dbg !14930
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14931
  %call = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %0, i32 0, i32 4, !dbg !14933
  %1 = load void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)*, void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)** %call, align 8, !dbg !14933
  %tobool = icmp ne void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* %1, null, !dbg !14931
  br i1 %tobool, label %if.then, label %if.end, !dbg !14934

if.then:                                          ; preds = %entry
  %2 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !14935
  %call1 = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %2, i32 0, i32 4, !dbg !14937
  %3 = load void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)*, void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)** %call1, align 8, !dbg !14937
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !14938
  %5 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !14939
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !14940
  %7 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14941
  call void %3(%struct.bContext* %4, %struct.ReportList* %5, %struct.PointerRNA* %6, %struct.ParameterList* %7), !dbg !14935
  store i32 0, i32* %retval, align 4, !dbg !14942
  br label %return, !dbg !14942

if.end:                                           ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !14943
  br label %return, !dbg !14943

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !14944
  ret i32 %8, !dbg !14944
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_function_call_lookup(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %ptr, i8* %identifier, %struct.ParameterList* %parms) #0 !dbg !14945 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %parms.addr = alloca %struct.ParameterList*, align 8
  %func = alloca %struct.FunctionRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !14948, metadata !DIExpression()), !dbg !14949
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !14950, metadata !DIExpression()), !dbg !14951
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !14952, metadata !DIExpression()), !dbg !14953
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !14954, metadata !DIExpression()), !dbg !14955
  store %struct.ParameterList* %parms, %struct.ParameterList** %parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %parms.addr, metadata !14956, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func, metadata !14958, metadata !DIExpression()), !dbg !14959
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !14960
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 1, !dbg !14961
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !14961
  %2 = load i8*, i8** %identifier.addr, align 8, !dbg !14962
  %call = call %struct.FunctionRNA* @RNA_struct_find_function(%struct.StructRNA* %1, i8* %2), !dbg !14963
  store %struct.FunctionRNA* %call, %struct.FunctionRNA** %func, align 8, !dbg !14964
  %3 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !14965
  %tobool = icmp ne %struct.FunctionRNA* %3, null, !dbg !14965
  br i1 %tobool, label %if.then, label %if.end, !dbg !14967

if.then:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !14968
  %5 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !14969
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !14970
  %7 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !14971
  %8 = load %struct.ParameterList*, %struct.ParameterList** %parms.addr, align 8, !dbg !14972
  %call1 = call i32 @RNA_function_call(%struct.bContext* %4, %struct.ReportList* %5, %struct.PointerRNA* %6, %struct.FunctionRNA* %7, %struct.ParameterList* %8), !dbg !14973
  store i32 %call1, i32* %retval, align 4, !dbg !14974
  br label %return, !dbg !14974

if.end:                                           ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !14975
  br label %return, !dbg !14975

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !14976
  ret i32 %9, !dbg !14976
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_function_call_direct(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %ptr, %struct.FunctionRNA* %func, i8* %format, ...) #0 !dbg !14977 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %func.addr = alloca %struct.FunctionRNA*, align 8
  %format.addr = alloca i8*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %ret = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !14980, metadata !DIExpression()), !dbg !14981
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !14982, metadata !DIExpression()), !dbg !14983
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !14984, metadata !DIExpression()), !dbg !14985
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !14986, metadata !DIExpression()), !dbg !14987
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !14988, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14990, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15004, metadata !DIExpression()), !dbg !15005
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !15006
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !15006
  call void @llvm.va_start(i8* %arraydecay1), !dbg !15006
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15007
  %1 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !15008
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15009
  %3 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !15010
  %4 = load i8*, i8** %format.addr, align 8, !dbg !15011
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !15012
  %call = call i32 @RNA_function_call_direct_va(%struct.bContext* %0, %struct.ReportList* %1, %struct.PointerRNA* %2, %struct.FunctionRNA* %3, i8* %4, %struct.__va_list_tag* %arraydecay2), !dbg !15013
  store i32 %call, i32* %ret, align 4, !dbg !15014
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !15015
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !15015
  call void @llvm.va_end(i8* %arraydecay34), !dbg !15015
  %5 = load i32, i32* %ret, align 4, !dbg !15016
  ret i32 %5, !dbg !15017
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_function_call_direct_va(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %ptr, %struct.FunctionRNA* %func, i8* %format, %struct.__va_list_tag* %args) #0 !dbg !15018 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %func.addr = alloca %struct.FunctionRNA*, align 8
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %funcptr = alloca %struct.PointerRNA, align 8
  %parms = alloca %struct.ParameterList, align 8
  %iter = alloca %struct.ParameterIterator, align 8
  %pret = alloca %struct.PropertyRNA*, align 8
  %parm = alloca %struct.PropertyRNA*, align 8
  %type = alloca i32, align 4
  %i = alloca i32, align 4
  %ofs = alloca i32, align 4
  %flen = alloca i32, align 4
  %flag = alloca i32, align 4
  %len = alloca i32, align 4
  %alen = alloca i32, align 4
  %err = alloca i32, align 4
  %tid = alloca i8*, align 8
  %fid = alloca i8*, align 8
  %pid = alloca i8*, align 8
  %ftype = alloca i8, align 1
  %retdata = alloca i8**, align 8
  %arg = alloca i32, align 4
  %arg38 = alloca double, align 8
  %arg50 = alloca i8*, align 8
  %srna = alloca %struct.StructRNA*, align 8
  %arg76 = alloca i8*, align 8
  %srna91 = alloca %struct.StructRNA*, align 8
  %arg103 = alloca %struct.ListBase*, align 8
  %arg155 = alloca i32*, align 8
  %arg169 = alloca float*, align 8
  %arg183 = alloca i8**, align 8
  %srna197 = alloca %struct.StructRNA*, align 8
  %arg209 = alloca i8**, align 8
  %srna223 = alloca %struct.StructRNA*, align 8
  %arg235 = alloca %struct.ListBase**, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !15022, metadata !DIExpression()), !dbg !15023
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !15024, metadata !DIExpression()), !dbg !15025
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !15026, metadata !DIExpression()), !dbg !15027
  store %struct.FunctionRNA* %func, %struct.FunctionRNA** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func.addr, metadata !15028, metadata !DIExpression()), !dbg !15029
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15030, metadata !DIExpression()), !dbg !15031
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !15032, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %funcptr, metadata !15034, metadata !DIExpression()), !dbg !15035
  call void @llvm.dbg.declare(metadata %struct.ParameterList* %parms, metadata !15036, metadata !DIExpression()), !dbg !15037
  call void @llvm.dbg.declare(metadata %struct.ParameterIterator* %iter, metadata !15038, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %pret, metadata !15040, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %parm, metadata !15042, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.declare(metadata i32* %type, metadata !15044, metadata !DIExpression()), !dbg !15045
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15046, metadata !DIExpression()), !dbg !15047
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !15048, metadata !DIExpression()), !dbg !15049
  call void @llvm.dbg.declare(metadata i32* %flen, metadata !15050, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !15052, metadata !DIExpression()), !dbg !15053
  call void @llvm.dbg.declare(metadata i32* %len, metadata !15054, metadata !DIExpression()), !dbg !15055
  call void @llvm.dbg.declare(metadata i32* %alen, metadata !15056, metadata !DIExpression()), !dbg !15057
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15058, metadata !DIExpression()), !dbg !15059
  store i32 0, i32* %err, align 4, !dbg !15059
  call void @llvm.dbg.declare(metadata i8** %tid, metadata !15060, metadata !DIExpression()), !dbg !15061
  call void @llvm.dbg.declare(metadata i8** %fid, metadata !15062, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.declare(metadata i8** %pid, metadata !15064, metadata !DIExpression()), !dbg !15065
  store i8* null, i8** %pid, align 8, !dbg !15065
  call void @llvm.dbg.declare(metadata i8* %ftype, metadata !15066, metadata !DIExpression()), !dbg !15067
  call void @llvm.dbg.declare(metadata i8*** %retdata, metadata !15068, metadata !DIExpression()), !dbg !15069
  store i8** null, i8*** %retdata, align 8, !dbg !15069
  %0 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !15070
  %1 = bitcast %struct.FunctionRNA* %0 to i8*, !dbg !15070
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* @RNA_Function, i8* %1, %struct.PointerRNA* %funcptr), !dbg !15071
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15072
  %type1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 1, !dbg !15073
  %3 = load %struct.StructRNA*, %struct.StructRNA** %type1, align 8, !dbg !15073
  %call = call i8* @RNA_struct_identifier(%struct.StructRNA* %3), !dbg !15074
  store i8* %call, i8** %tid, align 8, !dbg !15075
  %4 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !15076
  %call2 = call i8* @RNA_function_identifier(%struct.FunctionRNA* %4), !dbg !15077
  store i8* %call2, i8** %fid, align 8, !dbg !15078
  %5 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !15079
  %c_ret = getelementptr inbounds %struct.FunctionRNA, %struct.FunctionRNA* %5, i32 0, i32 5, !dbg !15080
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %c_ret, align 8, !dbg !15080
  store %struct.PropertyRNA* %6, %struct.PropertyRNA** %pret, align 8, !dbg !15081
  %7 = load i8*, i8** %format.addr, align 8, !dbg !15082
  %call3 = call i64 @strlen(i8* %7) #7, !dbg !15083
  %conv = trunc i64 %call3 to i32, !dbg !15083
  store i32 %conv, i32* %flen, align 4, !dbg !15084
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15085
  %9 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !15086
  %call4 = call %struct.ParameterList* @RNA_parameter_list_create(%struct.ParameterList* %parms, %struct.PointerRNA* %8, %struct.FunctionRNA* %9), !dbg !15087
  call void @RNA_parameter_list_begin(%struct.ParameterList* %parms, %struct.ParameterIterator* %iter), !dbg !15088
  store i32 0, i32* %i, align 4, !dbg !15089
  store i32 0, i32* %ofs, align 4, !dbg !15091
  br label %for.cond, !dbg !15092

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 5, !dbg !15093
  %10 = load i32, i32* %valid, align 8, !dbg !15093
  %tobool = icmp ne i32 %10, 0, !dbg !15095
  br i1 %tobool, label %for.body, label %for.end, !dbg !15095

for.body:                                         ; preds = %for.cond
  %parm5 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 4, !dbg !15096
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm5, align 8, !dbg !15096
  store %struct.PropertyRNA* %11, %struct.PropertyRNA** %parm, align 8, !dbg !15098
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15099
  %call6 = call i32 @RNA_property_flag(%struct.PropertyRNA* %12), !dbg !15100
  store i32 %call6, i32* %flag, align 4, !dbg !15101
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15102
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %pret, align 8, !dbg !15104
  %cmp = icmp eq %struct.PropertyRNA* %13, %14, !dbg !15105
  br i1 %cmp, label %if.then, label %if.else, !dbg !15106

if.then:                                          ; preds = %for.body
  %data = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !15107
  %15 = load i8*, i8** %data, align 8, !dbg !15107
  %16 = bitcast i8* %15 to i8**, !dbg !15109
  store i8** %16, i8*** %retdata, align 8, !dbg !15110
  br label %for.inc, !dbg !15111

if.else:                                          ; preds = %for.body
  %17 = load i32, i32* %flag, align 4, !dbg !15112
  %and = and i32 %17, 8, !dbg !15114
  %tobool8 = icmp ne i32 %and, 0, !dbg !15114
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !15115

if.then9:                                         ; preds = %if.else
  br label %for.inc, !dbg !15116

if.end:                                           ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15118
  %call11 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %18), !dbg !15119
  store i8* %call11, i8** %pid, align 8, !dbg !15120
  %19 = load i32, i32* %ofs, align 4, !dbg !15121
  %20 = load i32, i32* %flen, align 4, !dbg !15123
  %cmp12 = icmp sge i32 %19, %20, !dbg !15124
  br i1 %cmp12, label %if.then17, label %lor.lhs.false, !dbg !15125

lor.lhs.false:                                    ; preds = %if.end10
  %21 = load i8*, i8** %format.addr, align 8, !dbg !15126
  %22 = load i32, i32* %ofs, align 4, !dbg !15127
  %idxprom = sext i32 %22 to i64, !dbg !15126
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %idxprom, !dbg !15126
  %23 = load i8, i8* %arrayidx, align 1, !dbg !15126
  %conv14 = zext i8 %23 to i32, !dbg !15126
  %cmp15 = icmp eq i32 %conv14, 78, !dbg !15128
  br i1 %cmp15, label %if.then17, label %if.end23, !dbg !15129

if.then17:                                        ; preds = %lor.lhs.false, %if.end10
  %24 = load i32, i32* %flag, align 4, !dbg !15130
  %and18 = and i32 %24, 4, !dbg !15133
  %tobool19 = icmp ne i32 %and18, 0, !dbg !15133
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !15134

if.then20:                                        ; preds = %if.then17
  store i32 -1, i32* %err, align 4, !dbg !15135
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15137
  %26 = load i8*, i8** %tid, align 8, !dbg !15138
  %27 = load i8*, i8** %fid, align 8, !dbg !15139
  %28 = load i8*, i8** %pid, align 8, !dbg !15140
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.66, i64 0, i64 0), i8* %26, i8* %27, i8* %28), !dbg !15141
  br label %for.end, !dbg !15142

if.end22:                                         ; preds = %if.then17
  %29 = load i32, i32* %ofs, align 4, !dbg !15143
  %inc = add nsw i32 %29, 1, !dbg !15143
  store i32 %inc, i32* %ofs, align 4, !dbg !15143
  br label %for.inc, !dbg !15144

if.end23:                                         ; preds = %lor.lhs.false
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15145
  %call24 = call i32 @RNA_property_type(%struct.PropertyRNA* %30), !dbg !15146
  store i32 %call24, i32* %type, align 4, !dbg !15147
  %31 = load i8*, i8** %format.addr, align 8, !dbg !15148
  %32 = load i32, i32* %ofs, align 4, !dbg !15149
  %inc25 = add nsw i32 %32, 1, !dbg !15149
  store i32 %inc25, i32* %ofs, align 4, !dbg !15149
  %idxprom26 = sext i32 %32 to i64, !dbg !15148
  %arrayidx27 = getelementptr inbounds i8, i8* %31, i64 %idxprom26, !dbg !15148
  %33 = load i8, i8* %arrayidx27, align 1, !dbg !15148
  store i8 %33, i8* %ftype, align 1, !dbg !15150
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15151
  %call28 = call i32 @RNA_property_array_length(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %34), !dbg !15152
  store i32 %call28, i32* %len, align 4, !dbg !15153
  %35 = load i8*, i8** %format.addr, align 8, !dbg !15154
  %36 = load i32, i32* %ofs, align 4, !dbg !15155
  %37 = load i32, i32* %flen, align 4, !dbg !15156
  %call29 = call i32 @rna_function_format_array_length(i8* %35, i32 %36, i32 %37), !dbg !15157
  store i32 %call29, i32* %alen, align 4, !dbg !15158
  %38 = load i32, i32* %len, align 4, !dbg !15159
  %39 = load i32, i32* %alen, align 4, !dbg !15161
  %cmp30 = icmp ne i32 %38, %39, !dbg !15162
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !15163

if.then32:                                        ; preds = %if.end23
  store i32 -1, i32* %err, align 4, !dbg !15164
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15166
  %41 = load i8*, i8** %tid, align 8, !dbg !15167
  %42 = load i8*, i8** %fid, align 8, !dbg !15168
  %43 = load i8*, i8** %pid, align 8, !dbg !15169
  %44 = load i32, i32* %len, align 4, !dbg !15170
  %45 = load i32, i32* %alen, align 4, !dbg !15171
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.67, i64 0, i64 0), i8* %41, i8* %42, i8* %43, i32 %44, i32 %45), !dbg !15172
  br label %for.end, !dbg !15173

if.end34:                                         ; preds = %if.end23
  %46 = load i32, i32* %type, align 4, !dbg !15174
  switch i32 %46, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 4, label %sw.bb
    i32 2, label %sw.bb37
    i32 3, label %sw.bb49
    i32 5, label %sw.bb64
    i32 6, label %sw.bb90
  ], !dbg !15175

sw.bb:                                            ; preds = %if.end34, %if.end34, %if.end34
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !15176, metadata !DIExpression()), !dbg !15179
  %47 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15180
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %47, i32 0, i32 0, !dbg !15180
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !15180
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !15180
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !15180

vaarg.in_reg:                                     ; preds = %sw.bb
  %48 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %47, i32 0, i32 3, !dbg !15180
  %reg_save_area = load i8*, i8** %48, align 8, !dbg !15180
  %49 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !15180
  %50 = bitcast i8* %49 to i32*, !dbg !15180
  %51 = add i32 %gp_offset, 8, !dbg !15180
  store i32 %51, i32* %gp_offset_p, align 8, !dbg !15180
  br label %vaarg.end, !dbg !15180

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %47, i32 0, i32 2, !dbg !15180
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !15180
  %52 = bitcast i8* %overflow_arg_area to i32*, !dbg !15180
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !15180
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !15180
  br label %vaarg.end, !dbg !15180

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %50, %vaarg.in_reg ], [ %52, %vaarg.in_mem ], !dbg !15180
  %53 = load i32, i32* %vaarg.addr, align 4, !dbg !15180
  store i32 %53, i32* %arg, align 4, !dbg !15179
  %54 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15181
  %55 = load i32, i32* %type, align 4, !dbg !15182
  %56 = load i8, i8* %ftype, align 1, !dbg !15183
  %57 = load i32, i32* %len, align 4, !dbg !15184
  %data35 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !15185
  %58 = load i8*, i8** %data35, align 8, !dbg !15185
  %59 = bitcast i32* %arg to i8*, !dbg !15186
  %60 = load i8*, i8** %tid, align 8, !dbg !15187
  %61 = load i8*, i8** %fid, align 8, !dbg !15188
  %62 = load i8*, i8** %pid, align 8, !dbg !15189
  %call36 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %54, i32 %55, i8 zeroext %56, i32 %57, i8* %58, i8* %59, %struct.StructRNA* null, i8* %60, i8* %61, i8* %62), !dbg !15190
  store i32 %call36, i32* %err, align 4, !dbg !15191
  br label %sw.epilog, !dbg !15192

sw.bb37:                                          ; preds = %if.end34
  call void @llvm.dbg.declare(metadata double* %arg38, metadata !15193, metadata !DIExpression()), !dbg !15195
  %63 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15196
  %fp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %63, i32 0, i32 1, !dbg !15196
  %fp_offset = load i32, i32* %fp_offset_p, align 4, !dbg !15196
  %fits_in_fp = icmp ule i32 %fp_offset, 160, !dbg !15196
  br i1 %fits_in_fp, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !15196

vaarg.in_reg39:                                   ; preds = %sw.bb37
  %64 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %63, i32 0, i32 3, !dbg !15196
  %reg_save_area40 = load i8*, i8** %64, align 8, !dbg !15196
  %65 = getelementptr i8, i8* %reg_save_area40, i32 %fp_offset, !dbg !15196
  %66 = bitcast i8* %65 to double*, !dbg !15196
  %67 = add i32 %fp_offset, 16, !dbg !15196
  store i32 %67, i32* %fp_offset_p, align 4, !dbg !15196
  br label %vaarg.end45, !dbg !15196

vaarg.in_mem41:                                   ; preds = %sw.bb37
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %63, i32 0, i32 2, !dbg !15196
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !15196
  %68 = bitcast i8* %overflow_arg_area43 to double*, !dbg !15196
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !15196
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !15196
  br label %vaarg.end45, !dbg !15196

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi double* [ %66, %vaarg.in_reg39 ], [ %68, %vaarg.in_mem41 ], !dbg !15196
  %69 = load double, double* %vaarg.addr46, align 8, !dbg !15196
  store double %69, double* %arg38, align 8, !dbg !15195
  %70 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15197
  %71 = load i32, i32* %type, align 4, !dbg !15198
  %72 = load i8, i8* %ftype, align 1, !dbg !15199
  %73 = load i32, i32* %len, align 4, !dbg !15200
  %data47 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !15201
  %74 = load i8*, i8** %data47, align 8, !dbg !15201
  %75 = bitcast double* %arg38 to i8*, !dbg !15202
  %76 = load i8*, i8** %tid, align 8, !dbg !15203
  %77 = load i8*, i8** %fid, align 8, !dbg !15204
  %78 = load i8*, i8** %pid, align 8, !dbg !15205
  %call48 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %70, i32 %71, i8 zeroext %72, i32 %73, i8* %74, i8* %75, %struct.StructRNA* null, i8* %76, i8* %77, i8* %78), !dbg !15206
  store i32 %call48, i32* %err, align 4, !dbg !15207
  br label %sw.epilog, !dbg !15208

sw.bb49:                                          ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i8** %arg50, metadata !15209, metadata !DIExpression()), !dbg !15211
  %79 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15212
  %gp_offset_p51 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %79, i32 0, i32 0, !dbg !15212
  %gp_offset52 = load i32, i32* %gp_offset_p51, align 8, !dbg !15212
  %fits_in_gp53 = icmp ule i32 %gp_offset52, 40, !dbg !15212
  br i1 %fits_in_gp53, label %vaarg.in_reg54, label %vaarg.in_mem56, !dbg !15212

vaarg.in_reg54:                                   ; preds = %sw.bb49
  %80 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %79, i32 0, i32 3, !dbg !15212
  %reg_save_area55 = load i8*, i8** %80, align 8, !dbg !15212
  %81 = getelementptr i8, i8* %reg_save_area55, i32 %gp_offset52, !dbg !15212
  %82 = bitcast i8* %81 to i8**, !dbg !15212
  %83 = add i32 %gp_offset52, 8, !dbg !15212
  store i32 %83, i32* %gp_offset_p51, align 8, !dbg !15212
  br label %vaarg.end60, !dbg !15212

vaarg.in_mem56:                                   ; preds = %sw.bb49
  %overflow_arg_area_p57 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %79, i32 0, i32 2, !dbg !15212
  %overflow_arg_area58 = load i8*, i8** %overflow_arg_area_p57, align 8, !dbg !15212
  %84 = bitcast i8* %overflow_arg_area58 to i8**, !dbg !15212
  %overflow_arg_area.next59 = getelementptr i8, i8* %overflow_arg_area58, i32 8, !dbg !15212
  store i8* %overflow_arg_area.next59, i8** %overflow_arg_area_p57, align 8, !dbg !15212
  br label %vaarg.end60, !dbg !15212

vaarg.end60:                                      ; preds = %vaarg.in_mem56, %vaarg.in_reg54
  %vaarg.addr61 = phi i8** [ %82, %vaarg.in_reg54 ], [ %84, %vaarg.in_mem56 ], !dbg !15212
  %85 = load i8*, i8** %vaarg.addr61, align 8, !dbg !15212
  store i8* %85, i8** %arg50, align 8, !dbg !15211
  %86 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15213
  %87 = load i32, i32* %type, align 4, !dbg !15214
  %88 = load i8, i8* %ftype, align 1, !dbg !15215
  %89 = load i32, i32* %len, align 4, !dbg !15216
  %data62 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !15217
  %90 = load i8*, i8** %data62, align 8, !dbg !15217
  %91 = bitcast i8** %arg50 to i8*, !dbg !15218
  %92 = load i8*, i8** %tid, align 8, !dbg !15219
  %93 = load i8*, i8** %fid, align 8, !dbg !15220
  %94 = load i8*, i8** %pid, align 8, !dbg !15221
  %call63 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %86, i32 %87, i8 zeroext %88, i32 %89, i8* %90, i8* %91, %struct.StructRNA* null, i8* %92, i8* %93, i8* %94), !dbg !15222
  store i32 %call63, i32* %err, align 4, !dbg !15223
  br label %sw.epilog, !dbg !15224

sw.bb64:                                          ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna, metadata !15225, metadata !DIExpression()), !dbg !15227
  %95 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15228
  %gp_offset_p65 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %95, i32 0, i32 0, !dbg !15228
  %gp_offset66 = load i32, i32* %gp_offset_p65, align 8, !dbg !15228
  %fits_in_gp67 = icmp ule i32 %gp_offset66, 40, !dbg !15228
  br i1 %fits_in_gp67, label %vaarg.in_reg68, label %vaarg.in_mem70, !dbg !15228

vaarg.in_reg68:                                   ; preds = %sw.bb64
  %96 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %95, i32 0, i32 3, !dbg !15228
  %reg_save_area69 = load i8*, i8** %96, align 8, !dbg !15228
  %97 = getelementptr i8, i8* %reg_save_area69, i32 %gp_offset66, !dbg !15228
  %98 = bitcast i8* %97 to %struct.StructRNA**, !dbg !15228
  %99 = add i32 %gp_offset66, 8, !dbg !15228
  store i32 %99, i32* %gp_offset_p65, align 8, !dbg !15228
  br label %vaarg.end74, !dbg !15228

vaarg.in_mem70:                                   ; preds = %sw.bb64
  %overflow_arg_area_p71 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %95, i32 0, i32 2, !dbg !15228
  %overflow_arg_area72 = load i8*, i8** %overflow_arg_area_p71, align 8, !dbg !15228
  %100 = bitcast i8* %overflow_arg_area72 to %struct.StructRNA**, !dbg !15228
  %overflow_arg_area.next73 = getelementptr i8, i8* %overflow_arg_area72, i32 8, !dbg !15228
  store i8* %overflow_arg_area.next73, i8** %overflow_arg_area_p71, align 8, !dbg !15228
  br label %vaarg.end74, !dbg !15228

vaarg.end74:                                      ; preds = %vaarg.in_mem70, %vaarg.in_reg68
  %vaarg.addr75 = phi %struct.StructRNA** [ %98, %vaarg.in_reg68 ], [ %100, %vaarg.in_mem70 ], !dbg !15228
  %101 = load %struct.StructRNA*, %struct.StructRNA** %vaarg.addr75, align 8, !dbg !15228
  store %struct.StructRNA* %101, %struct.StructRNA** %srna, align 8, !dbg !15227
  call void @llvm.dbg.declare(metadata i8** %arg76, metadata !15229, metadata !DIExpression()), !dbg !15230
  %102 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15231
  %gp_offset_p77 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %102, i32 0, i32 0, !dbg !15231
  %gp_offset78 = load i32, i32* %gp_offset_p77, align 8, !dbg !15231
  %fits_in_gp79 = icmp ule i32 %gp_offset78, 40, !dbg !15231
  br i1 %fits_in_gp79, label %vaarg.in_reg80, label %vaarg.in_mem82, !dbg !15231

vaarg.in_reg80:                                   ; preds = %vaarg.end74
  %103 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %102, i32 0, i32 3, !dbg !15231
  %reg_save_area81 = load i8*, i8** %103, align 8, !dbg !15231
  %104 = getelementptr i8, i8* %reg_save_area81, i32 %gp_offset78, !dbg !15231
  %105 = bitcast i8* %104 to i8**, !dbg !15231
  %106 = add i32 %gp_offset78, 8, !dbg !15231
  store i32 %106, i32* %gp_offset_p77, align 8, !dbg !15231
  br label %vaarg.end86, !dbg !15231

vaarg.in_mem82:                                   ; preds = %vaarg.end74
  %overflow_arg_area_p83 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %102, i32 0, i32 2, !dbg !15231
  %overflow_arg_area84 = load i8*, i8** %overflow_arg_area_p83, align 8, !dbg !15231
  %107 = bitcast i8* %overflow_arg_area84 to i8**, !dbg !15231
  %overflow_arg_area.next85 = getelementptr i8, i8* %overflow_arg_area84, i32 8, !dbg !15231
  store i8* %overflow_arg_area.next85, i8** %overflow_arg_area_p83, align 8, !dbg !15231
  br label %vaarg.end86, !dbg !15231

vaarg.end86:                                      ; preds = %vaarg.in_mem82, %vaarg.in_reg80
  %vaarg.addr87 = phi i8** [ %105, %vaarg.in_reg80 ], [ %107, %vaarg.in_mem82 ], !dbg !15231
  %108 = load i8*, i8** %vaarg.addr87, align 8, !dbg !15231
  store i8* %108, i8** %arg76, align 8, !dbg !15230
  %109 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15232
  %110 = load i32, i32* %type, align 4, !dbg !15233
  %111 = load i8, i8* %ftype, align 1, !dbg !15234
  %112 = load i32, i32* %len, align 4, !dbg !15235
  %data88 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !15236
  %113 = load i8*, i8** %data88, align 8, !dbg !15236
  %114 = bitcast i8** %arg76 to i8*, !dbg !15237
  %115 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !15238
  %116 = load i8*, i8** %tid, align 8, !dbg !15239
  %117 = load i8*, i8** %fid, align 8, !dbg !15240
  %118 = load i8*, i8** %pid, align 8, !dbg !15241
  %call89 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %109, i32 %110, i8 zeroext %111, i32 %112, i8* %113, i8* %114, %struct.StructRNA* %115, i8* %116, i8* %117, i8* %118), !dbg !15242
  store i32 %call89, i32* %err, align 4, !dbg !15243
  br label %sw.epilog, !dbg !15244

sw.bb90:                                          ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna91, metadata !15245, metadata !DIExpression()), !dbg !15247
  %119 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15248
  %gp_offset_p92 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %119, i32 0, i32 0, !dbg !15248
  %gp_offset93 = load i32, i32* %gp_offset_p92, align 8, !dbg !15248
  %fits_in_gp94 = icmp ule i32 %gp_offset93, 40, !dbg !15248
  br i1 %fits_in_gp94, label %vaarg.in_reg95, label %vaarg.in_mem97, !dbg !15248

vaarg.in_reg95:                                   ; preds = %sw.bb90
  %120 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %119, i32 0, i32 3, !dbg !15248
  %reg_save_area96 = load i8*, i8** %120, align 8, !dbg !15248
  %121 = getelementptr i8, i8* %reg_save_area96, i32 %gp_offset93, !dbg !15248
  %122 = bitcast i8* %121 to %struct.StructRNA**, !dbg !15248
  %123 = add i32 %gp_offset93, 8, !dbg !15248
  store i32 %123, i32* %gp_offset_p92, align 8, !dbg !15248
  br label %vaarg.end101, !dbg !15248

vaarg.in_mem97:                                   ; preds = %sw.bb90
  %overflow_arg_area_p98 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %119, i32 0, i32 2, !dbg !15248
  %overflow_arg_area99 = load i8*, i8** %overflow_arg_area_p98, align 8, !dbg !15248
  %124 = bitcast i8* %overflow_arg_area99 to %struct.StructRNA**, !dbg !15248
  %overflow_arg_area.next100 = getelementptr i8, i8* %overflow_arg_area99, i32 8, !dbg !15248
  store i8* %overflow_arg_area.next100, i8** %overflow_arg_area_p98, align 8, !dbg !15248
  br label %vaarg.end101, !dbg !15248

vaarg.end101:                                     ; preds = %vaarg.in_mem97, %vaarg.in_reg95
  %vaarg.addr102 = phi %struct.StructRNA** [ %122, %vaarg.in_reg95 ], [ %124, %vaarg.in_mem97 ], !dbg !15248
  %125 = load %struct.StructRNA*, %struct.StructRNA** %vaarg.addr102, align 8, !dbg !15248
  store %struct.StructRNA* %125, %struct.StructRNA** %srna91, align 8, !dbg !15247
  call void @llvm.dbg.declare(metadata %struct.ListBase** %arg103, metadata !15249, metadata !DIExpression()), !dbg !15250
  %126 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15251
  %gp_offset_p104 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %126, i32 0, i32 0, !dbg !15251
  %gp_offset105 = load i32, i32* %gp_offset_p104, align 8, !dbg !15251
  %fits_in_gp106 = icmp ule i32 %gp_offset105, 40, !dbg !15251
  br i1 %fits_in_gp106, label %vaarg.in_reg107, label %vaarg.in_mem109, !dbg !15251

vaarg.in_reg107:                                  ; preds = %vaarg.end101
  %127 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %126, i32 0, i32 3, !dbg !15251
  %reg_save_area108 = load i8*, i8** %127, align 8, !dbg !15251
  %128 = getelementptr i8, i8* %reg_save_area108, i32 %gp_offset105, !dbg !15251
  %129 = bitcast i8* %128 to %struct.ListBase**, !dbg !15251
  %130 = add i32 %gp_offset105, 8, !dbg !15251
  store i32 %130, i32* %gp_offset_p104, align 8, !dbg !15251
  br label %vaarg.end113, !dbg !15251

vaarg.in_mem109:                                  ; preds = %vaarg.end101
  %overflow_arg_area_p110 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %126, i32 0, i32 2, !dbg !15251
  %overflow_arg_area111 = load i8*, i8** %overflow_arg_area_p110, align 8, !dbg !15251
  %131 = bitcast i8* %overflow_arg_area111 to %struct.ListBase**, !dbg !15251
  %overflow_arg_area.next112 = getelementptr i8, i8* %overflow_arg_area111, i32 8, !dbg !15251
  store i8* %overflow_arg_area.next112, i8** %overflow_arg_area_p110, align 8, !dbg !15251
  br label %vaarg.end113, !dbg !15251

vaarg.end113:                                     ; preds = %vaarg.in_mem109, %vaarg.in_reg107
  %vaarg.addr114 = phi %struct.ListBase** [ %129, %vaarg.in_reg107 ], [ %131, %vaarg.in_mem109 ], !dbg !15251
  %132 = load %struct.ListBase*, %struct.ListBase** %vaarg.addr114, align 8, !dbg !15251
  store %struct.ListBase* %132, %struct.ListBase** %arg103, align 8, !dbg !15250
  %133 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15252
  %134 = load i32, i32* %type, align 4, !dbg !15253
  %135 = load i8, i8* %ftype, align 1, !dbg !15254
  %136 = load i32, i32* %len, align 4, !dbg !15255
  %data115 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !15256
  %137 = load i8*, i8** %data115, align 8, !dbg !15256
  %138 = bitcast %struct.ListBase** %arg103 to i8*, !dbg !15257
  %139 = load %struct.StructRNA*, %struct.StructRNA** %srna91, align 8, !dbg !15258
  %140 = load i8*, i8** %tid, align 8, !dbg !15259
  %141 = load i8*, i8** %fid, align 8, !dbg !15260
  %142 = load i8*, i8** %pid, align 8, !dbg !15261
  %call116 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %133, i32 %134, i8 zeroext %135, i32 %136, i8* %137, i8* %138, %struct.StructRNA* %139, i8* %140, i8* %141, i8* %142), !dbg !15262
  store i32 %call116, i32* %err, align 4, !dbg !15263
  br label %sw.epilog, !dbg !15264

sw.default:                                       ; preds = %if.end34
  %143 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15265
  %144 = load i32, i32* %type, align 4, !dbg !15267
  %145 = load i8, i8* %ftype, align 1, !dbg !15268
  %146 = load i32, i32* %len, align 4, !dbg !15269
  %data117 = getelementptr inbounds %struct.ParameterIterator, %struct.ParameterIterator* %iter, i32 0, i32 1, !dbg !15270
  %147 = load i8*, i8** %data117, align 8, !dbg !15270
  %148 = load i8*, i8** %tid, align 8, !dbg !15271
  %149 = load i8*, i8** %fid, align 8, !dbg !15272
  %150 = load i8*, i8** %pid, align 8, !dbg !15273
  %call118 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %143, i32 %144, i8 zeroext %145, i32 %146, i8* %147, i8* null, %struct.StructRNA* null, i8* %148, i8* %149, i8* %150), !dbg !15274
  store i32 %call118, i32* %err, align 4, !dbg !15275
  br label %sw.epilog, !dbg !15276

sw.epilog:                                        ; preds = %sw.default, %vaarg.end113, %vaarg.end86, %vaarg.end60, %vaarg.end45, %vaarg.end
  %151 = load i32, i32* %err, align 4, !dbg !15277
  %cmp119 = icmp ne i32 %151, 0, !dbg !15279
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !15280

if.then121:                                       ; preds = %sw.epilog
  br label %for.end, !dbg !15281

if.end122:                                        ; preds = %sw.epilog
  br label %for.inc, !dbg !15282

for.inc:                                          ; preds = %if.end122, %if.end22, %if.then9, %if.then
  call void @RNA_parameter_list_next(%struct.ParameterIterator* %iter), !dbg !15283
  %152 = load i32, i32* %i, align 4, !dbg !15284
  %inc123 = add nsw i32 %152, 1, !dbg !15284
  store i32 %inc123, i32* %i, align 4, !dbg !15284
  br label %for.cond, !dbg !15285, !llvm.loop !15286

for.end:                                          ; preds = %if.then121, %if.then32, %if.then20, %for.cond
  %153 = load i32, i32* %err, align 4, !dbg !15288
  %cmp124 = icmp eq i32 %153, 0, !dbg !15290
  br i1 %cmp124, label %if.then126, label %if.end128, !dbg !15291

if.then126:                                       ; preds = %for.end
  %154 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15292
  %155 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !15293
  %156 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15294
  %157 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func.addr, align 8, !dbg !15295
  %call127 = call i32 @RNA_function_call(%struct.bContext* %154, %struct.ReportList* %155, %struct.PointerRNA* %156, %struct.FunctionRNA* %157, %struct.ParameterList* %parms), !dbg !15296
  store i32 %call127, i32* %err, align 4, !dbg !15297
  br label %if.end128, !dbg !15298

if.end128:                                        ; preds = %if.then126, %for.end
  %158 = load i32, i32* %err, align 4, !dbg !15299
  %cmp129 = icmp eq i32 %158, 0, !dbg !15301
  br i1 %cmp129, label %land.lhs.true, label %if.end252, !dbg !15302

land.lhs.true:                                    ; preds = %if.end128
  %159 = load %struct.PropertyRNA*, %struct.PropertyRNA** %pret, align 8, !dbg !15303
  %tobool131 = icmp ne %struct.PropertyRNA* %159, null, !dbg !15303
  br i1 %tobool131, label %land.lhs.true132, label %if.end252, !dbg !15304

land.lhs.true132:                                 ; preds = %land.lhs.true
  %160 = load i32, i32* %ofs, align 4, !dbg !15305
  %161 = load i32, i32* %flen, align 4, !dbg !15306
  %cmp133 = icmp slt i32 %160, %161, !dbg !15307
  br i1 %cmp133, label %land.lhs.true135, label %if.end252, !dbg !15308

land.lhs.true135:                                 ; preds = %land.lhs.true132
  %162 = load i8*, i8** %format.addr, align 8, !dbg !15309
  %163 = load i32, i32* %ofs, align 4, !dbg !15310
  %inc136 = add nsw i32 %163, 1, !dbg !15310
  store i32 %inc136, i32* %ofs, align 4, !dbg !15310
  %idxprom137 = sext i32 %163 to i64, !dbg !15309
  %arrayidx138 = getelementptr inbounds i8, i8* %162, i64 %idxprom137, !dbg !15309
  %164 = load i8, i8* %arrayidx138, align 1, !dbg !15309
  %conv139 = zext i8 %164 to i32, !dbg !15309
  %cmp140 = icmp eq i32 %conv139, 82, !dbg !15311
  br i1 %cmp140, label %if.then142, label %if.end252, !dbg !15312

if.then142:                                       ; preds = %land.lhs.true135
  %165 = load %struct.PropertyRNA*, %struct.PropertyRNA** %pret, align 8, !dbg !15313
  store %struct.PropertyRNA* %165, %struct.PropertyRNA** %parm, align 8, !dbg !15315
  %166 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15316
  %call143 = call i32 @RNA_property_type(%struct.PropertyRNA* %166), !dbg !15317
  store i32 %call143, i32* %type, align 4, !dbg !15318
  %167 = load i8*, i8** %format.addr, align 8, !dbg !15319
  %168 = load i32, i32* %ofs, align 4, !dbg !15320
  %inc144 = add nsw i32 %168, 1, !dbg !15320
  store i32 %inc144, i32* %ofs, align 4, !dbg !15320
  %idxprom145 = sext i32 %168 to i64, !dbg !15319
  %arrayidx146 = getelementptr inbounds i8, i8* %167, i64 %idxprom145, !dbg !15319
  %169 = load i8, i8* %arrayidx146, align 1, !dbg !15319
  store i8 %169, i8* %ftype, align 1, !dbg !15321
  %170 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15322
  %call147 = call i32 @RNA_property_array_length(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %170), !dbg !15323
  store i32 %call147, i32* %len, align 4, !dbg !15324
  %171 = load i8*, i8** %format.addr, align 8, !dbg !15325
  %172 = load i32, i32* %ofs, align 4, !dbg !15326
  %173 = load i32, i32* %flen, align 4, !dbg !15327
  %call148 = call i32 @rna_function_format_array_length(i8* %171, i32 %172, i32 %173), !dbg !15328
  store i32 %call148, i32* %alen, align 4, !dbg !15329
  %174 = load i32, i32* %len, align 4, !dbg !15330
  %175 = load i32, i32* %alen, align 4, !dbg !15332
  %cmp149 = icmp ne i32 %174, %175, !dbg !15333
  br i1 %cmp149, label %if.then151, label %if.else153, !dbg !15334

if.then151:                                       ; preds = %if.then142
  store i32 -1, i32* %err, align 4, !dbg !15335
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15337
  %177 = load i8*, i8** %tid, align 8, !dbg !15338
  %178 = load i8*, i8** %fid, align 8, !dbg !15339
  %179 = load i8*, i8** %pid, align 8, !dbg !15340
  %180 = load i32, i32* %len, align 4, !dbg !15341
  %181 = load i32, i32* %alen, align 4, !dbg !15342
  %call152 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %176, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.68, i64 0, i64 0), i8* %177, i8* %178, i8* %179, i32 %180, i32 %181), !dbg !15343
  br label %if.end251, !dbg !15344

if.else153:                                       ; preds = %if.then142
  %182 = load i32, i32* %type, align 4, !dbg !15345
  switch i32 %182, label %sw.default248 [
    i32 0, label %sw.bb154
    i32 1, label %sw.bb154
    i32 4, label %sw.bb154
    i32 2, label %sw.bb168
    i32 3, label %sw.bb182
    i32 5, label %sw.bb196
    i32 6, label %sw.bb222
  ], !dbg !15347

sw.bb154:                                         ; preds = %if.else153, %if.else153, %if.else153
  call void @llvm.dbg.declare(metadata i32** %arg155, metadata !15348, metadata !DIExpression()), !dbg !15351
  %183 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15352
  %gp_offset_p156 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %183, i32 0, i32 0, !dbg !15352
  %gp_offset157 = load i32, i32* %gp_offset_p156, align 8, !dbg !15352
  %fits_in_gp158 = icmp ule i32 %gp_offset157, 40, !dbg !15352
  br i1 %fits_in_gp158, label %vaarg.in_reg159, label %vaarg.in_mem161, !dbg !15352

vaarg.in_reg159:                                  ; preds = %sw.bb154
  %184 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %183, i32 0, i32 3, !dbg !15352
  %reg_save_area160 = load i8*, i8** %184, align 8, !dbg !15352
  %185 = getelementptr i8, i8* %reg_save_area160, i32 %gp_offset157, !dbg !15352
  %186 = bitcast i8* %185 to i32**, !dbg !15352
  %187 = add i32 %gp_offset157, 8, !dbg !15352
  store i32 %187, i32* %gp_offset_p156, align 8, !dbg !15352
  br label %vaarg.end165, !dbg !15352

vaarg.in_mem161:                                  ; preds = %sw.bb154
  %overflow_arg_area_p162 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %183, i32 0, i32 2, !dbg !15352
  %overflow_arg_area163 = load i8*, i8** %overflow_arg_area_p162, align 8, !dbg !15352
  %188 = bitcast i8* %overflow_arg_area163 to i32**, !dbg !15352
  %overflow_arg_area.next164 = getelementptr i8, i8* %overflow_arg_area163, i32 8, !dbg !15352
  store i8* %overflow_arg_area.next164, i8** %overflow_arg_area_p162, align 8, !dbg !15352
  br label %vaarg.end165, !dbg !15352

vaarg.end165:                                     ; preds = %vaarg.in_mem161, %vaarg.in_reg159
  %vaarg.addr166 = phi i32** [ %186, %vaarg.in_reg159 ], [ %188, %vaarg.in_mem161 ], !dbg !15352
  %189 = load i32*, i32** %vaarg.addr166, align 8, !dbg !15352
  store i32* %189, i32** %arg155, align 8, !dbg !15351
  %190 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15353
  %191 = load i32, i32* %type, align 4, !dbg !15354
  %192 = load i8, i8* %ftype, align 1, !dbg !15355
  %193 = load i32, i32* %len, align 4, !dbg !15356
  %194 = load i32*, i32** %arg155, align 8, !dbg !15357
  %195 = bitcast i32* %194 to i8*, !dbg !15357
  %196 = load i8**, i8*** %retdata, align 8, !dbg !15358
  %197 = bitcast i8** %196 to i8*, !dbg !15358
  %198 = load i8*, i8** %tid, align 8, !dbg !15359
  %199 = load i8*, i8** %fid, align 8, !dbg !15360
  %200 = load i8*, i8** %pid, align 8, !dbg !15361
  %call167 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %190, i32 %191, i8 zeroext %192, i32 %193, i8* %195, i8* %197, %struct.StructRNA* null, i8* %198, i8* %199, i8* %200), !dbg !15362
  store i32 %call167, i32* %err, align 4, !dbg !15363
  br label %sw.epilog250, !dbg !15364

sw.bb168:                                         ; preds = %if.else153
  call void @llvm.dbg.declare(metadata float** %arg169, metadata !15365, metadata !DIExpression()), !dbg !15367
  %201 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15368
  %gp_offset_p170 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %201, i32 0, i32 0, !dbg !15368
  %gp_offset171 = load i32, i32* %gp_offset_p170, align 8, !dbg !15368
  %fits_in_gp172 = icmp ule i32 %gp_offset171, 40, !dbg !15368
  br i1 %fits_in_gp172, label %vaarg.in_reg173, label %vaarg.in_mem175, !dbg !15368

vaarg.in_reg173:                                  ; preds = %sw.bb168
  %202 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %201, i32 0, i32 3, !dbg !15368
  %reg_save_area174 = load i8*, i8** %202, align 8, !dbg !15368
  %203 = getelementptr i8, i8* %reg_save_area174, i32 %gp_offset171, !dbg !15368
  %204 = bitcast i8* %203 to float**, !dbg !15368
  %205 = add i32 %gp_offset171, 8, !dbg !15368
  store i32 %205, i32* %gp_offset_p170, align 8, !dbg !15368
  br label %vaarg.end179, !dbg !15368

vaarg.in_mem175:                                  ; preds = %sw.bb168
  %overflow_arg_area_p176 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %201, i32 0, i32 2, !dbg !15368
  %overflow_arg_area177 = load i8*, i8** %overflow_arg_area_p176, align 8, !dbg !15368
  %206 = bitcast i8* %overflow_arg_area177 to float**, !dbg !15368
  %overflow_arg_area.next178 = getelementptr i8, i8* %overflow_arg_area177, i32 8, !dbg !15368
  store i8* %overflow_arg_area.next178, i8** %overflow_arg_area_p176, align 8, !dbg !15368
  br label %vaarg.end179, !dbg !15368

vaarg.end179:                                     ; preds = %vaarg.in_mem175, %vaarg.in_reg173
  %vaarg.addr180 = phi float** [ %204, %vaarg.in_reg173 ], [ %206, %vaarg.in_mem175 ], !dbg !15368
  %207 = load float*, float** %vaarg.addr180, align 8, !dbg !15368
  store float* %207, float** %arg169, align 8, !dbg !15367
  %208 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15369
  %209 = load i32, i32* %type, align 4, !dbg !15370
  %210 = load i8, i8* %ftype, align 1, !dbg !15371
  %211 = load i32, i32* %len, align 4, !dbg !15372
  %212 = load float*, float** %arg169, align 8, !dbg !15373
  %213 = bitcast float* %212 to i8*, !dbg !15373
  %214 = load i8**, i8*** %retdata, align 8, !dbg !15374
  %215 = bitcast i8** %214 to i8*, !dbg !15374
  %216 = load i8*, i8** %tid, align 8, !dbg !15375
  %217 = load i8*, i8** %fid, align 8, !dbg !15376
  %218 = load i8*, i8** %pid, align 8, !dbg !15377
  %call181 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %208, i32 %209, i8 zeroext %210, i32 %211, i8* %213, i8* %215, %struct.StructRNA* null, i8* %216, i8* %217, i8* %218), !dbg !15378
  store i32 %call181, i32* %err, align 4, !dbg !15379
  br label %sw.epilog250, !dbg !15380

sw.bb182:                                         ; preds = %if.else153
  call void @llvm.dbg.declare(metadata i8*** %arg183, metadata !15381, metadata !DIExpression()), !dbg !15383
  %219 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15384
  %gp_offset_p184 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %219, i32 0, i32 0, !dbg !15384
  %gp_offset185 = load i32, i32* %gp_offset_p184, align 8, !dbg !15384
  %fits_in_gp186 = icmp ule i32 %gp_offset185, 40, !dbg !15384
  br i1 %fits_in_gp186, label %vaarg.in_reg187, label %vaarg.in_mem189, !dbg !15384

vaarg.in_reg187:                                  ; preds = %sw.bb182
  %220 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %219, i32 0, i32 3, !dbg !15384
  %reg_save_area188 = load i8*, i8** %220, align 8, !dbg !15384
  %221 = getelementptr i8, i8* %reg_save_area188, i32 %gp_offset185, !dbg !15384
  %222 = bitcast i8* %221 to i8***, !dbg !15384
  %223 = add i32 %gp_offset185, 8, !dbg !15384
  store i32 %223, i32* %gp_offset_p184, align 8, !dbg !15384
  br label %vaarg.end193, !dbg !15384

vaarg.in_mem189:                                  ; preds = %sw.bb182
  %overflow_arg_area_p190 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %219, i32 0, i32 2, !dbg !15384
  %overflow_arg_area191 = load i8*, i8** %overflow_arg_area_p190, align 8, !dbg !15384
  %224 = bitcast i8* %overflow_arg_area191 to i8***, !dbg !15384
  %overflow_arg_area.next192 = getelementptr i8, i8* %overflow_arg_area191, i32 8, !dbg !15384
  store i8* %overflow_arg_area.next192, i8** %overflow_arg_area_p190, align 8, !dbg !15384
  br label %vaarg.end193, !dbg !15384

vaarg.end193:                                     ; preds = %vaarg.in_mem189, %vaarg.in_reg187
  %vaarg.addr194 = phi i8*** [ %222, %vaarg.in_reg187 ], [ %224, %vaarg.in_mem189 ], !dbg !15384
  %225 = load i8**, i8*** %vaarg.addr194, align 8, !dbg !15384
  store i8** %225, i8*** %arg183, align 8, !dbg !15383
  %226 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15385
  %227 = load i32, i32* %type, align 4, !dbg !15386
  %228 = load i8, i8* %ftype, align 1, !dbg !15387
  %229 = load i32, i32* %len, align 4, !dbg !15388
  %230 = load i8**, i8*** %arg183, align 8, !dbg !15389
  %231 = bitcast i8** %230 to i8*, !dbg !15389
  %232 = load i8**, i8*** %retdata, align 8, !dbg !15390
  %233 = bitcast i8** %232 to i8*, !dbg !15390
  %234 = load i8*, i8** %tid, align 8, !dbg !15391
  %235 = load i8*, i8** %fid, align 8, !dbg !15392
  %236 = load i8*, i8** %pid, align 8, !dbg !15393
  %call195 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %226, i32 %227, i8 zeroext %228, i32 %229, i8* %231, i8* %233, %struct.StructRNA* null, i8* %234, i8* %235, i8* %236), !dbg !15394
  store i32 %call195, i32* %err, align 4, !dbg !15395
  br label %sw.epilog250, !dbg !15396

sw.bb196:                                         ; preds = %if.else153
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna197, metadata !15397, metadata !DIExpression()), !dbg !15399
  %237 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15400
  %gp_offset_p198 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %237, i32 0, i32 0, !dbg !15400
  %gp_offset199 = load i32, i32* %gp_offset_p198, align 8, !dbg !15400
  %fits_in_gp200 = icmp ule i32 %gp_offset199, 40, !dbg !15400
  br i1 %fits_in_gp200, label %vaarg.in_reg201, label %vaarg.in_mem203, !dbg !15400

vaarg.in_reg201:                                  ; preds = %sw.bb196
  %238 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %237, i32 0, i32 3, !dbg !15400
  %reg_save_area202 = load i8*, i8** %238, align 8, !dbg !15400
  %239 = getelementptr i8, i8* %reg_save_area202, i32 %gp_offset199, !dbg !15400
  %240 = bitcast i8* %239 to %struct.StructRNA**, !dbg !15400
  %241 = add i32 %gp_offset199, 8, !dbg !15400
  store i32 %241, i32* %gp_offset_p198, align 8, !dbg !15400
  br label %vaarg.end207, !dbg !15400

vaarg.in_mem203:                                  ; preds = %sw.bb196
  %overflow_arg_area_p204 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %237, i32 0, i32 2, !dbg !15400
  %overflow_arg_area205 = load i8*, i8** %overflow_arg_area_p204, align 8, !dbg !15400
  %242 = bitcast i8* %overflow_arg_area205 to %struct.StructRNA**, !dbg !15400
  %overflow_arg_area.next206 = getelementptr i8, i8* %overflow_arg_area205, i32 8, !dbg !15400
  store i8* %overflow_arg_area.next206, i8** %overflow_arg_area_p204, align 8, !dbg !15400
  br label %vaarg.end207, !dbg !15400

vaarg.end207:                                     ; preds = %vaarg.in_mem203, %vaarg.in_reg201
  %vaarg.addr208 = phi %struct.StructRNA** [ %240, %vaarg.in_reg201 ], [ %242, %vaarg.in_mem203 ], !dbg !15400
  %243 = load %struct.StructRNA*, %struct.StructRNA** %vaarg.addr208, align 8, !dbg !15400
  store %struct.StructRNA* %243, %struct.StructRNA** %srna197, align 8, !dbg !15399
  call void @llvm.dbg.declare(metadata i8*** %arg209, metadata !15401, metadata !DIExpression()), !dbg !15402
  %244 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15403
  %gp_offset_p210 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %244, i32 0, i32 0, !dbg !15403
  %gp_offset211 = load i32, i32* %gp_offset_p210, align 8, !dbg !15403
  %fits_in_gp212 = icmp ule i32 %gp_offset211, 40, !dbg !15403
  br i1 %fits_in_gp212, label %vaarg.in_reg213, label %vaarg.in_mem215, !dbg !15403

vaarg.in_reg213:                                  ; preds = %vaarg.end207
  %245 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %244, i32 0, i32 3, !dbg !15403
  %reg_save_area214 = load i8*, i8** %245, align 8, !dbg !15403
  %246 = getelementptr i8, i8* %reg_save_area214, i32 %gp_offset211, !dbg !15403
  %247 = bitcast i8* %246 to i8***, !dbg !15403
  %248 = add i32 %gp_offset211, 8, !dbg !15403
  store i32 %248, i32* %gp_offset_p210, align 8, !dbg !15403
  br label %vaarg.end219, !dbg !15403

vaarg.in_mem215:                                  ; preds = %vaarg.end207
  %overflow_arg_area_p216 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %244, i32 0, i32 2, !dbg !15403
  %overflow_arg_area217 = load i8*, i8** %overflow_arg_area_p216, align 8, !dbg !15403
  %249 = bitcast i8* %overflow_arg_area217 to i8***, !dbg !15403
  %overflow_arg_area.next218 = getelementptr i8, i8* %overflow_arg_area217, i32 8, !dbg !15403
  store i8* %overflow_arg_area.next218, i8** %overflow_arg_area_p216, align 8, !dbg !15403
  br label %vaarg.end219, !dbg !15403

vaarg.end219:                                     ; preds = %vaarg.in_mem215, %vaarg.in_reg213
  %vaarg.addr220 = phi i8*** [ %247, %vaarg.in_reg213 ], [ %249, %vaarg.in_mem215 ], !dbg !15403
  %250 = load i8**, i8*** %vaarg.addr220, align 8, !dbg !15403
  store i8** %250, i8*** %arg209, align 8, !dbg !15402
  %251 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15404
  %252 = load i32, i32* %type, align 4, !dbg !15405
  %253 = load i8, i8* %ftype, align 1, !dbg !15406
  %254 = load i32, i32* %len, align 4, !dbg !15407
  %255 = load i8**, i8*** %arg209, align 8, !dbg !15408
  %256 = bitcast i8** %255 to i8*, !dbg !15408
  %257 = load i8**, i8*** %retdata, align 8, !dbg !15409
  %258 = bitcast i8** %257 to i8*, !dbg !15409
  %259 = load %struct.StructRNA*, %struct.StructRNA** %srna197, align 8, !dbg !15410
  %260 = load i8*, i8** %tid, align 8, !dbg !15411
  %261 = load i8*, i8** %fid, align 8, !dbg !15412
  %262 = load i8*, i8** %pid, align 8, !dbg !15413
  %call221 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %251, i32 %252, i8 zeroext %253, i32 %254, i8* %256, i8* %258, %struct.StructRNA* %259, i8* %260, i8* %261, i8* %262), !dbg !15414
  store i32 %call221, i32* %err, align 4, !dbg !15415
  br label %sw.epilog250, !dbg !15416

sw.bb222:                                         ; preds = %if.else153
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna223, metadata !15417, metadata !DIExpression()), !dbg !15419
  %263 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15420
  %gp_offset_p224 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %263, i32 0, i32 0, !dbg !15420
  %gp_offset225 = load i32, i32* %gp_offset_p224, align 8, !dbg !15420
  %fits_in_gp226 = icmp ule i32 %gp_offset225, 40, !dbg !15420
  br i1 %fits_in_gp226, label %vaarg.in_reg227, label %vaarg.in_mem229, !dbg !15420

vaarg.in_reg227:                                  ; preds = %sw.bb222
  %264 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %263, i32 0, i32 3, !dbg !15420
  %reg_save_area228 = load i8*, i8** %264, align 8, !dbg !15420
  %265 = getelementptr i8, i8* %reg_save_area228, i32 %gp_offset225, !dbg !15420
  %266 = bitcast i8* %265 to %struct.StructRNA**, !dbg !15420
  %267 = add i32 %gp_offset225, 8, !dbg !15420
  store i32 %267, i32* %gp_offset_p224, align 8, !dbg !15420
  br label %vaarg.end233, !dbg !15420

vaarg.in_mem229:                                  ; preds = %sw.bb222
  %overflow_arg_area_p230 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %263, i32 0, i32 2, !dbg !15420
  %overflow_arg_area231 = load i8*, i8** %overflow_arg_area_p230, align 8, !dbg !15420
  %268 = bitcast i8* %overflow_arg_area231 to %struct.StructRNA**, !dbg !15420
  %overflow_arg_area.next232 = getelementptr i8, i8* %overflow_arg_area231, i32 8, !dbg !15420
  store i8* %overflow_arg_area.next232, i8** %overflow_arg_area_p230, align 8, !dbg !15420
  br label %vaarg.end233, !dbg !15420

vaarg.end233:                                     ; preds = %vaarg.in_mem229, %vaarg.in_reg227
  %vaarg.addr234 = phi %struct.StructRNA** [ %266, %vaarg.in_reg227 ], [ %268, %vaarg.in_mem229 ], !dbg !15420
  %269 = load %struct.StructRNA*, %struct.StructRNA** %vaarg.addr234, align 8, !dbg !15420
  store %struct.StructRNA* %269, %struct.StructRNA** %srna223, align 8, !dbg !15419
  call void @llvm.dbg.declare(metadata %struct.ListBase*** %arg235, metadata !15421, metadata !DIExpression()), !dbg !15423
  %270 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15424
  %gp_offset_p236 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %270, i32 0, i32 0, !dbg !15424
  %gp_offset237 = load i32, i32* %gp_offset_p236, align 8, !dbg !15424
  %fits_in_gp238 = icmp ule i32 %gp_offset237, 40, !dbg !15424
  br i1 %fits_in_gp238, label %vaarg.in_reg239, label %vaarg.in_mem241, !dbg !15424

vaarg.in_reg239:                                  ; preds = %vaarg.end233
  %271 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %270, i32 0, i32 3, !dbg !15424
  %reg_save_area240 = load i8*, i8** %271, align 8, !dbg !15424
  %272 = getelementptr i8, i8* %reg_save_area240, i32 %gp_offset237, !dbg !15424
  %273 = bitcast i8* %272 to %struct.ListBase***, !dbg !15424
  %274 = add i32 %gp_offset237, 8, !dbg !15424
  store i32 %274, i32* %gp_offset_p236, align 8, !dbg !15424
  br label %vaarg.end245, !dbg !15424

vaarg.in_mem241:                                  ; preds = %vaarg.end233
  %overflow_arg_area_p242 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %270, i32 0, i32 2, !dbg !15424
  %overflow_arg_area243 = load i8*, i8** %overflow_arg_area_p242, align 8, !dbg !15424
  %275 = bitcast i8* %overflow_arg_area243 to %struct.ListBase***, !dbg !15424
  %overflow_arg_area.next244 = getelementptr i8, i8* %overflow_arg_area243, i32 8, !dbg !15424
  store i8* %overflow_arg_area.next244, i8** %overflow_arg_area_p242, align 8, !dbg !15424
  br label %vaarg.end245, !dbg !15424

vaarg.end245:                                     ; preds = %vaarg.in_mem241, %vaarg.in_reg239
  %vaarg.addr246 = phi %struct.ListBase*** [ %273, %vaarg.in_reg239 ], [ %275, %vaarg.in_mem241 ], !dbg !15424
  %276 = load %struct.ListBase**, %struct.ListBase*** %vaarg.addr246, align 8, !dbg !15424
  store %struct.ListBase** %276, %struct.ListBase*** %arg235, align 8, !dbg !15423
  %277 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15425
  %278 = load i32, i32* %type, align 4, !dbg !15426
  %279 = load i8, i8* %ftype, align 1, !dbg !15427
  %280 = load i32, i32* %len, align 4, !dbg !15428
  %281 = load %struct.ListBase**, %struct.ListBase*** %arg235, align 8, !dbg !15429
  %282 = bitcast %struct.ListBase** %281 to i8*, !dbg !15429
  %283 = load i8**, i8*** %retdata, align 8, !dbg !15430
  %284 = bitcast i8** %283 to i8*, !dbg !15430
  %285 = load %struct.StructRNA*, %struct.StructRNA** %srna223, align 8, !dbg !15431
  %286 = load i8*, i8** %tid, align 8, !dbg !15432
  %287 = load i8*, i8** %fid, align 8, !dbg !15433
  %288 = load i8*, i8** %pid, align 8, !dbg !15434
  %call247 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %277, i32 %278, i8 zeroext %279, i32 %280, i8* %282, i8* %284, %struct.StructRNA* %285, i8* %286, i8* %287, i8* %288), !dbg !15435
  store i32 %call247, i32* %err, align 4, !dbg !15436
  br label %sw.epilog250, !dbg !15437

sw.default248:                                    ; preds = %if.else153
  %289 = load %struct.PropertyRNA*, %struct.PropertyRNA** %parm, align 8, !dbg !15438
  %290 = load i32, i32* %type, align 4, !dbg !15440
  %291 = load i8, i8* %ftype, align 1, !dbg !15441
  %292 = load i32, i32* %len, align 4, !dbg !15442
  %293 = load i8*, i8** %tid, align 8, !dbg !15443
  %294 = load i8*, i8** %fid, align 8, !dbg !15444
  %295 = load i8*, i8** %pid, align 8, !dbg !15445
  %call249 = call i32 @rna_function_parameter_parse(%struct.PointerRNA* %funcptr, %struct.PropertyRNA* %289, i32 %290, i8 zeroext %291, i32 %292, i8* null, i8* null, %struct.StructRNA* null, i8* %293, i8* %294, i8* %295), !dbg !15446
  store i32 %call249, i32* %err, align 4, !dbg !15447
  br label %sw.epilog250, !dbg !15448

sw.epilog250:                                     ; preds = %sw.default248, %vaarg.end245, %vaarg.end219, %vaarg.end193, %vaarg.end179, %vaarg.end165
  br label %if.end251

if.end251:                                        ; preds = %sw.epilog250, %if.then151
  br label %if.end252, !dbg !15449

if.end252:                                        ; preds = %if.end251, %land.lhs.true135, %land.lhs.true132, %land.lhs.true, %if.end128
  call void @RNA_parameter_list_end(%struct.ParameterIterator* %iter), !dbg !15450
  call void @RNA_parameter_list_free(%struct.ParameterList* %parms), !dbg !15451
  %296 = load i32, i32* %err, align 4, !dbg !15452
  ret i32 %296, !dbg !15453
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_function_call_direct_lookup(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %ptr, i8* %identifier, i8* %format, ...) #0 !dbg !15454 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %func = alloca %struct.FunctionRNA*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %ret = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !15457, metadata !DIExpression()), !dbg !15458
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !15459, metadata !DIExpression()), !dbg !15460
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !15461, metadata !DIExpression()), !dbg !15462
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !15463, metadata !DIExpression()), !dbg !15464
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15465, metadata !DIExpression()), !dbg !15466
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func, metadata !15467, metadata !DIExpression()), !dbg !15468
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15469
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 1, !dbg !15470
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !15470
  %2 = load i8*, i8** %identifier.addr, align 8, !dbg !15471
  %call = call %struct.FunctionRNA* @RNA_struct_find_function(%struct.StructRNA* %1, i8* %2), !dbg !15472
  store %struct.FunctionRNA* %call, %struct.FunctionRNA** %func, align 8, !dbg !15473
  %3 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !15474
  %tobool = icmp ne %struct.FunctionRNA* %3, null, !dbg !15474
  br i1 %tobool, label %if.then, label %if.end, !dbg !15476

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !15477, metadata !DIExpression()), !dbg !15479
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15480, metadata !DIExpression()), !dbg !15481
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !15482
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !15482
  call void @llvm.va_start(i8* %arraydecay1), !dbg !15482
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15483
  %5 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !15484
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15485
  %7 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !15486
  %8 = load i8*, i8** %format.addr, align 8, !dbg !15487
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !15488
  %call3 = call i32 @RNA_function_call_direct_va(%struct.bContext* %4, %struct.ReportList* %5, %struct.PointerRNA* %6, %struct.FunctionRNA* %7, i8* %8, %struct.__va_list_tag* %arraydecay2), !dbg !15489
  store i32 %call3, i32* %ret, align 4, !dbg !15490
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !15491
  %arraydecay45 = bitcast %struct.__va_list_tag* %arraydecay4 to i8*, !dbg !15491
  call void @llvm.va_end(i8* %arraydecay45), !dbg !15491
  %9 = load i32, i32* %ret, align 4, !dbg !15492
  store i32 %9, i32* %retval, align 4, !dbg !15493
  br label %return, !dbg !15493

if.end:                                           ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !15494
  br label %return, !dbg !15494

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !15495
  ret i32 %10, !dbg !15495
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_function_format_array_length(i8* %format, i32 %ofs, i32 %flen) #0 !dbg !15496 {
entry:
  %retval = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %ofs.addr = alloca i32, align 4
  %flen.addr = alloca i32, align 4
  %lenbuf = alloca [16 x i8], align 16
  %idx = alloca i32, align 4
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15499, metadata !DIExpression()), !dbg !15500
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !15501, metadata !DIExpression()), !dbg !15502
  store i32 %flen, i32* %flen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flen.addr, metadata !15503, metadata !DIExpression()), !dbg !15504
  call void @llvm.dbg.declare(metadata [16 x i8]* %lenbuf, metadata !15505, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15507, metadata !DIExpression()), !dbg !15508
  store i32 0, i32* %idx, align 4, !dbg !15508
  %0 = load i8*, i8** %format.addr, align 8, !dbg !15509
  %1 = load i32, i32* %ofs.addr, align 4, !dbg !15511
  %inc = add nsw i32 %1, 1, !dbg !15511
  store i32 %inc, i32* %ofs.addr, align 4, !dbg !15511
  %idxprom = sext i32 %1 to i64, !dbg !15509
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !15509
  %2 = load i8, i8* %arrayidx, align 1, !dbg !15509
  %conv = zext i8 %2 to i32, !dbg !15509
  %cmp = icmp eq i32 %conv, 91, !dbg !15512
  br i1 %cmp, label %if.then, label %if.end, !dbg !15513

if.then:                                          ; preds = %entry
  br label %for.cond, !dbg !15514

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %ofs.addr, align 4, !dbg !15515
  %4 = load i32, i32* %flen.addr, align 4, !dbg !15518
  %cmp2 = icmp slt i32 %3, %4, !dbg !15519
  br i1 %cmp2, label %land.lhs.true, label %land.end, !dbg !15520

land.lhs.true:                                    ; preds = %for.cond
  %5 = load i8*, i8** %format.addr, align 8, !dbg !15521
  %6 = load i32, i32* %ofs.addr, align 4, !dbg !15522
  %idxprom4 = sext i32 %6 to i64, !dbg !15521
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %idxprom4, !dbg !15521
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !15521
  %conv6 = zext i8 %7 to i32, !dbg !15521
  %cmp7 = icmp ne i32 %conv6, 93, !dbg !15523
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !15524

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %idx, align 4, !dbg !15525
  %conv9 = sext i32 %8 to i64, !dbg !15525
  %cmp10 = icmp ult i64 %conv9, 15, !dbg !15526
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond
  %9 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %cmp10, %land.rhs ], !dbg !15527
  br i1 %9, label %for.body, label %for.end, !dbg !15528

for.body:                                         ; preds = %land.end
  %10 = load i8*, i8** %format.addr, align 8, !dbg !15529
  %11 = load i32, i32* %ofs.addr, align 4, !dbg !15530
  %idxprom12 = sext i32 %11 to i64, !dbg !15529
  %arrayidx13 = getelementptr inbounds i8, i8* %10, i64 %idxprom12, !dbg !15529
  %12 = load i8, i8* %arrayidx13, align 1, !dbg !15529
  %13 = load i32, i32* %idx, align 4, !dbg !15531
  %idxprom14 = sext i32 %13 to i64, !dbg !15532
  %arrayidx15 = getelementptr inbounds [16 x i8], [16 x i8]* %lenbuf, i64 0, i64 %idxprom14, !dbg !15532
  store i8 %12, i8* %arrayidx15, align 1, !dbg !15533
  br label %for.inc, !dbg !15532

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %idx, align 4, !dbg !15534
  %inc16 = add nsw i32 %14, 1, !dbg !15534
  store i32 %inc16, i32* %idx, align 4, !dbg !15534
  %15 = load i32, i32* %ofs.addr, align 4, !dbg !15535
  %inc17 = add nsw i32 %15, 1, !dbg !15535
  store i32 %inc17, i32* %ofs.addr, align 4, !dbg !15535
  br label %for.cond, !dbg !15536, !llvm.loop !15537

for.end:                                          ; preds = %land.end
  br label %if.end, !dbg !15538

if.end:                                           ; preds = %for.end, %entry
  %16 = load i32, i32* %ofs.addr, align 4, !dbg !15539
  %17 = load i32, i32* %flen.addr, align 4, !dbg !15541
  %cmp18 = icmp slt i32 %16, %17, !dbg !15542
  br i1 %cmp18, label %land.lhs.true20, label %if.end29, !dbg !15543

land.lhs.true20:                                  ; preds = %if.end
  %18 = load i8*, i8** %format.addr, align 8, !dbg !15544
  %19 = load i32, i32* %ofs.addr, align 4, !dbg !15545
  %add = add nsw i32 %19, 1, !dbg !15546
  %idxprom21 = sext i32 %add to i64, !dbg !15544
  %arrayidx22 = getelementptr inbounds i8, i8* %18, i64 %idxprom21, !dbg !15544
  %20 = load i8, i8* %arrayidx22, align 1, !dbg !15544
  %conv23 = zext i8 %20 to i32, !dbg !15544
  %cmp24 = icmp eq i32 %conv23, 93, !dbg !15547
  br i1 %cmp24, label %if.then26, label %if.end29, !dbg !15548

if.then26:                                        ; preds = %land.lhs.true20
  %21 = load i32, i32* %idx, align 4, !dbg !15549
  %idxprom27 = sext i32 %21 to i64, !dbg !15551
  %arrayidx28 = getelementptr inbounds [16 x i8], [16 x i8]* %lenbuf, i64 0, i64 %idxprom27, !dbg !15551
  store i8 0, i8* %arrayidx28, align 1, !dbg !15552
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %lenbuf, i64 0, i64 0, !dbg !15553
  %call = call i32 @atoi(i8* %arraydecay) #7, !dbg !15554
  store i32 %call, i32* %retval, align 4, !dbg !15555
  br label %return, !dbg !15555

if.end29:                                         ; preds = %land.lhs.true20, %if.end
  store i32 0, i32* %retval, align 4, !dbg !15556
  br label %return, !dbg !15556

return:                                           ; preds = %if.end29, %if.then26
  %22 = load i32, i32* %retval, align 4, !dbg !15557
  ret i32 %22, !dbg !15557
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_function_parameter_parse(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %type, i8 zeroext %ftype, i32 %len, i8* %dest, i8* %src, %struct.StructRNA* %srna, i8* %tid, i8* %fid, i8* %pid) #0 !dbg !15558 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %type.addr = alloca i32, align 4
  %ftype.addr = alloca i8, align 1
  %len.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %srna.addr = alloca %struct.StructRNA*, align 8
  %tid.addr = alloca i8*, align 8
  %fid.addr = alloca i8*, align 8
  %pid.addr = alloca i8*, align 8
  %ptype = alloca %struct.StructRNA*, align 8
  %ptype69 = alloca %struct.StructRNA*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %clb = alloca %struct.ListBase*, align 8
  %link = alloca %struct.Link*, align 8
  %clink = alloca %struct.CollectionPointerLink*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !15561, metadata !DIExpression()), !dbg !15562
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !15563, metadata !DIExpression()), !dbg !15564
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !15565, metadata !DIExpression()), !dbg !15566
  store i8 %ftype, i8* %ftype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ftype.addr, metadata !15567, metadata !DIExpression()), !dbg !15568
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15571, metadata !DIExpression()), !dbg !15572
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15573, metadata !DIExpression()), !dbg !15574
  store %struct.StructRNA* %srna, %struct.StructRNA** %srna.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna.addr, metadata !15575, metadata !DIExpression()), !dbg !15576
  store i8* %tid, i8** %tid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tid.addr, metadata !15577, metadata !DIExpression()), !dbg !15578
  store i8* %fid, i8** %fid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fid.addr, metadata !15579, metadata !DIExpression()), !dbg !15580
  store i8* %pid, i8** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pid.addr, metadata !15581, metadata !DIExpression()), !dbg !15582
  %0 = load i32, i32* %type.addr, align 4, !dbg !15583
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
    i32 2, label %sw.bb21
    i32 3, label %sw.bb35
    i32 4, label %sw.bb42
    i32 5, label %sw.bb49
    i32 6, label %sw.bb68
  ], !dbg !15584

sw.bb:                                            ; preds = %entry
  %1 = load i8, i8* %ftype.addr, align 1, !dbg !15585
  %conv = zext i8 %1 to i32, !dbg !15585
  %cmp = icmp ne i32 %conv, 98, !dbg !15589
  br i1 %cmp, label %if.then, label %if.end, !dbg !15590

if.then:                                          ; preds = %sw.bb
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15591
  %3 = load i8*, i8** %tid.addr, align 8, !dbg !15593
  %4 = load i8*, i8** %fid.addr, align 8, !dbg !15594
  %5 = load i8*, i8** %pid.addr, align 8, !dbg !15595
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.88, i64 0, i64 0), i8* %3, i8* %4, i8* %5), !dbg !15596
  store i32 -1, i32* %retval, align 4, !dbg !15597
  br label %return, !dbg !15597

if.end:                                           ; preds = %sw.bb
  %6 = load i32, i32* %len.addr, align 4, !dbg !15598
  %cmp2 = icmp eq i32 %6, 0, !dbg !15600
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !15601

if.then4:                                         ; preds = %if.end
  %7 = load i8*, i8** %src.addr, align 8, !dbg !15602
  %8 = bitcast i8* %7 to i32*, !dbg !15603
  %9 = load i32, i32* %8, align 4, !dbg !15604
  %10 = load i8*, i8** %dest.addr, align 8, !dbg !15605
  %11 = bitcast i8* %10 to i32*, !dbg !15606
  store i32 %9, i32* %11, align 4, !dbg !15607
  br label %if.end6, !dbg !15608

if.else:                                          ; preds = %if.end
  %12 = load i8*, i8** %dest.addr, align 8, !dbg !15609
  %13 = load i8*, i8** %src.addr, align 8, !dbg !15610
  %14 = load i32, i32* %len.addr, align 4, !dbg !15611
  %conv5 = sext i32 %14 to i64, !dbg !15611
  %mul = mul i64 %conv5, 4, !dbg !15612
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 %mul, i1 false), !dbg !15613
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then4
  br label %sw.epilog, !dbg !15614

sw.bb7:                                           ; preds = %entry
  %15 = load i8, i8* %ftype.addr, align 1, !dbg !15615
  %conv8 = zext i8 %15 to i32, !dbg !15615
  %cmp9 = icmp ne i32 %conv8, 105, !dbg !15618
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !15619

if.then11:                                        ; preds = %sw.bb7
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15620
  %17 = load i8*, i8** %tid.addr, align 8, !dbg !15622
  %18 = load i8*, i8** %fid.addr, align 8, !dbg !15623
  %19 = load i8*, i8** %pid.addr, align 8, !dbg !15624
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.89, i64 0, i64 0), i8* %17, i8* %18, i8* %19), !dbg !15625
  store i32 -1, i32* %retval, align 4, !dbg !15626
  br label %return, !dbg !15626

if.end13:                                         ; preds = %sw.bb7
  %20 = load i32, i32* %len.addr, align 4, !dbg !15627
  %cmp14 = icmp eq i32 %20, 0, !dbg !15629
  br i1 %cmp14, label %if.then16, label %if.else17, !dbg !15630

if.then16:                                        ; preds = %if.end13
  %21 = load i8*, i8** %src.addr, align 8, !dbg !15631
  %22 = bitcast i8* %21 to i32*, !dbg !15632
  %23 = load i32, i32* %22, align 4, !dbg !15633
  %24 = load i8*, i8** %dest.addr, align 8, !dbg !15634
  %25 = bitcast i8* %24 to i32*, !dbg !15635
  store i32 %23, i32* %25, align 4, !dbg !15636
  br label %if.end20, !dbg !15637

if.else17:                                        ; preds = %if.end13
  %26 = load i8*, i8** %dest.addr, align 8, !dbg !15638
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15639
  %28 = load i32, i32* %len.addr, align 4, !dbg !15640
  %conv18 = sext i32 %28 to i64, !dbg !15640
  %mul19 = mul i64 %conv18, 4, !dbg !15641
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 %mul19, i1 false), !dbg !15642
  br label %if.end20

if.end20:                                         ; preds = %if.else17, %if.then16
  br label %sw.epilog, !dbg !15643

sw.bb21:                                          ; preds = %entry
  %29 = load i8, i8* %ftype.addr, align 1, !dbg !15644
  %conv22 = zext i8 %29 to i32, !dbg !15644
  %cmp23 = icmp ne i32 %conv22, 102, !dbg !15647
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !15648

if.then25:                                        ; preds = %sw.bb21
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15649
  %31 = load i8*, i8** %tid.addr, align 8, !dbg !15651
  %32 = load i8*, i8** %fid.addr, align 8, !dbg !15652
  %33 = load i8*, i8** %pid.addr, align 8, !dbg !15653
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.90, i64 0, i64 0), i8* %31, i8* %32, i8* %33), !dbg !15654
  store i32 -1, i32* %retval, align 4, !dbg !15655
  br label %return, !dbg !15655

if.end27:                                         ; preds = %sw.bb21
  %34 = load i32, i32* %len.addr, align 4, !dbg !15656
  %cmp28 = icmp eq i32 %34, 0, !dbg !15658
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !15659

if.then30:                                        ; preds = %if.end27
  %35 = load i8*, i8** %src.addr, align 8, !dbg !15660
  %36 = bitcast i8* %35 to float*, !dbg !15661
  %37 = load float, float* %36, align 4, !dbg !15662
  %38 = load i8*, i8** %dest.addr, align 8, !dbg !15663
  %39 = bitcast i8* %38 to float*, !dbg !15664
  store float %37, float* %39, align 4, !dbg !15665
  br label %if.end34, !dbg !15666

if.else31:                                        ; preds = %if.end27
  %40 = load i8*, i8** %dest.addr, align 8, !dbg !15667
  %41 = load i8*, i8** %src.addr, align 8, !dbg !15668
  %42 = load i32, i32* %len.addr, align 4, !dbg !15669
  %conv32 = sext i32 %42 to i64, !dbg !15669
  %mul33 = mul i64 %conv32, 4, !dbg !15670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %41, i64 %mul33, i1 false), !dbg !15671
  br label %if.end34

if.end34:                                         ; preds = %if.else31, %if.then30
  br label %sw.epilog, !dbg !15672

sw.bb35:                                          ; preds = %entry
  %43 = load i8, i8* %ftype.addr, align 1, !dbg !15673
  %conv36 = zext i8 %43 to i32, !dbg !15673
  %cmp37 = icmp ne i32 %conv36, 115, !dbg !15676
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !15677

if.then39:                                        ; preds = %sw.bb35
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15678
  %45 = load i8*, i8** %tid.addr, align 8, !dbg !15680
  %46 = load i8*, i8** %fid.addr, align 8, !dbg !15681
  %47 = load i8*, i8** %pid.addr, align 8, !dbg !15682
  %call40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.91, i64 0, i64 0), i8* %45, i8* %46, i8* %47), !dbg !15683
  store i32 -1, i32* %retval, align 4, !dbg !15684
  br label %return, !dbg !15684

if.end41:                                         ; preds = %sw.bb35
  %48 = load i8*, i8** %src.addr, align 8, !dbg !15685
  %49 = bitcast i8* %48 to i8**, !dbg !15686
  %50 = load i8*, i8** %49, align 8, !dbg !15687
  %51 = load i8*, i8** %dest.addr, align 8, !dbg !15688
  %52 = bitcast i8* %51 to i8**, !dbg !15689
  store i8* %50, i8** %52, align 8, !dbg !15690
  br label %sw.epilog, !dbg !15691

sw.bb42:                                          ; preds = %entry
  %53 = load i8, i8* %ftype.addr, align 1, !dbg !15692
  %conv43 = zext i8 %53 to i32, !dbg !15692
  %cmp44 = icmp ne i32 %conv43, 101, !dbg !15695
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !15696

if.then46:                                        ; preds = %sw.bb42
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15697
  %55 = load i8*, i8** %tid.addr, align 8, !dbg !15699
  %56 = load i8*, i8** %fid.addr, align 8, !dbg !15700
  %57 = load i8*, i8** %pid.addr, align 8, !dbg !15701
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.92, i64 0, i64 0), i8* %55, i8* %56, i8* %57), !dbg !15702
  store i32 -1, i32* %retval, align 4, !dbg !15703
  br label %return, !dbg !15703

if.end48:                                         ; preds = %sw.bb42
  %58 = load i8*, i8** %src.addr, align 8, !dbg !15704
  %59 = bitcast i8* %58 to i32*, !dbg !15705
  %60 = load i32, i32* %59, align 4, !dbg !15706
  %61 = load i8*, i8** %dest.addr, align 8, !dbg !15707
  %62 = bitcast i8* %61 to i32*, !dbg !15708
  store i32 %60, i32* %62, align 4, !dbg !15709
  br label %sw.epilog, !dbg !15710

sw.bb49:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %ptype, metadata !15711, metadata !DIExpression()), !dbg !15713
  %63 = load i8, i8* %ftype.addr, align 1, !dbg !15714
  %conv50 = zext i8 %63 to i32, !dbg !15714
  %cmp51 = icmp ne i32 %conv50, 79, !dbg !15716
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !15717

if.then53:                                        ; preds = %sw.bb49
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15718
  %65 = load i8*, i8** %tid.addr, align 8, !dbg !15720
  %66 = load i8*, i8** %fid.addr, align 8, !dbg !15721
  %67 = load i8*, i8** %pid.addr, align 8, !dbg !15722
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.93, i64 0, i64 0), i8* %65, i8* %66, i8* %67), !dbg !15723
  store i32 -1, i32* %retval, align 4, !dbg !15724
  br label %return, !dbg !15724

if.end55:                                         ; preds = %sw.bb49
  %68 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15725
  %69 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15726
  %call56 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %68, %struct.PropertyRNA* %69), !dbg !15727
  store %struct.StructRNA* %call56, %struct.StructRNA** %ptype, align 8, !dbg !15728
  %70 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15729
  %flag = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %70, i32 0, i32 4, !dbg !15731
  %71 = load i32, i32* %flag, align 8, !dbg !15731
  %and = and i32 %71, 2048, !dbg !15732
  %tobool = icmp ne i32 %and, 0, !dbg !15732
  br i1 %tobool, label %if.then57, label %if.end58, !dbg !15733

if.then57:                                        ; preds = %if.end55
  %72 = load i8*, i8** %dest.addr, align 8, !dbg !15734
  %73 = bitcast i8* %72 to %struct.PointerRNA*, !dbg !15736
  %74 = load i8*, i8** %src.addr, align 8, !dbg !15737
  %75 = bitcast i8* %74 to %struct.PointerRNA*, !dbg !15738
  %76 = bitcast %struct.PointerRNA* %73 to i8*, !dbg !15739
  %77 = bitcast %struct.PointerRNA* %75 to i8*, !dbg !15739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false), !dbg !15739
  br label %sw.epilog, !dbg !15740

if.end58:                                         ; preds = %if.end55
  %78 = load %struct.StructRNA*, %struct.StructRNA** %ptype, align 8, !dbg !15741
  %79 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !15743
  %cmp59 = icmp ne %struct.StructRNA* %78, %79, !dbg !15744
  br i1 %cmp59, label %land.lhs.true, label %if.end67, !dbg !15745

land.lhs.true:                                    ; preds = %if.end58
  %80 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !15746
  %81 = load %struct.StructRNA*, %struct.StructRNA** %ptype, align 8, !dbg !15747
  %call61 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %80, %struct.StructRNA* %81), !dbg !15748
  %tobool62 = icmp ne i8 %call61, 0, !dbg !15748
  br i1 %tobool62, label %if.end67, label %if.then63, !dbg !15749

if.then63:                                        ; preds = %land.lhs.true
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15750
  %83 = load i8*, i8** %tid.addr, align 8, !dbg !15752
  %84 = load i8*, i8** %fid.addr, align 8, !dbg !15753
  %85 = load i8*, i8** %pid.addr, align 8, !dbg !15754
  %86 = load %struct.StructRNA*, %struct.StructRNA** %ptype, align 8, !dbg !15755
  %call64 = call i8* @RNA_struct_identifier(%struct.StructRNA* %86), !dbg !15756
  %87 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !15757
  %call65 = call i8* @RNA_struct_identifier(%struct.StructRNA* %87), !dbg !15758
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.94, i64 0, i64 0), i8* %83, i8* %84, i8* %85, i8* %call64, i8* %call65), !dbg !15759
  store i32 -1, i32* %retval, align 4, !dbg !15760
  br label %return, !dbg !15760

if.end67:                                         ; preds = %land.lhs.true, %if.end58
  %88 = load i8*, i8** %src.addr, align 8, !dbg !15761
  %89 = bitcast i8* %88 to i8**, !dbg !15762
  %90 = load i8*, i8** %89, align 8, !dbg !15763
  %91 = load i8*, i8** %dest.addr, align 8, !dbg !15764
  %92 = bitcast i8* %91 to i8**, !dbg !15765
  store i8* %90, i8** %92, align 8, !dbg !15766
  br label %sw.epilog, !dbg !15767

sw.bb68:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %ptype69, metadata !15768, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !15771, metadata !DIExpression()), !dbg !15772
  call void @llvm.dbg.declare(metadata %struct.ListBase** %clb, metadata !15773, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.declare(metadata %struct.Link** %link, metadata !15775, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %clink, metadata !15779, metadata !DIExpression()), !dbg !15788
  %93 = load i8, i8* %ftype.addr, align 1, !dbg !15789
  %conv70 = zext i8 %93 to i32, !dbg !15789
  %cmp71 = icmp ne i32 %conv70, 67, !dbg !15791
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !15792

if.then73:                                        ; preds = %sw.bb68
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15793
  %95 = load i8*, i8** %tid.addr, align 8, !dbg !15795
  %96 = load i8*, i8** %fid.addr, align 8, !dbg !15796
  %97 = load i8*, i8** %pid.addr, align 8, !dbg !15797
  %call74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.95, i64 0, i64 0), i8* %95, i8* %96, i8* %97), !dbg !15798
  store i32 -1, i32* %retval, align 4, !dbg !15799
  br label %return, !dbg !15799

if.end75:                                         ; preds = %sw.bb68
  %98 = load i8*, i8** %src.addr, align 8, !dbg !15800
  %99 = bitcast i8* %98 to %struct.ListBase*, !dbg !15801
  store %struct.ListBase* %99, %struct.ListBase** %lb, align 8, !dbg !15802
  %100 = load i8*, i8** %dest.addr, align 8, !dbg !15803
  %101 = bitcast i8* %100 to %struct.ListBase*, !dbg !15804
  store %struct.ListBase* %101, %struct.ListBase** %clb, align 8, !dbg !15805
  %102 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15806
  %103 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15807
  %call76 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %102, %struct.PropertyRNA* %103), !dbg !15808
  store %struct.StructRNA* %call76, %struct.StructRNA** %ptype69, align 8, !dbg !15809
  %104 = load %struct.StructRNA*, %struct.StructRNA** %ptype69, align 8, !dbg !15810
  %105 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !15812
  %cmp77 = icmp ne %struct.StructRNA* %104, %105, !dbg !15813
  br i1 %cmp77, label %land.lhs.true79, label %if.end86, !dbg !15814

land.lhs.true79:                                  ; preds = %if.end75
  %106 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !15815
  %107 = load %struct.StructRNA*, %struct.StructRNA** %ptype69, align 8, !dbg !15816
  %call80 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %106, %struct.StructRNA* %107), !dbg !15817
  %tobool81 = icmp ne i8 %call80, 0, !dbg !15817
  br i1 %tobool81, label %if.end86, label %if.then82, !dbg !15818

if.then82:                                        ; preds = %land.lhs.true79
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15819
  %109 = load i8*, i8** %tid.addr, align 8, !dbg !15821
  %110 = load i8*, i8** %fid.addr, align 8, !dbg !15822
  %111 = load i8*, i8** %pid.addr, align 8, !dbg !15823
  %112 = load %struct.StructRNA*, %struct.StructRNA** %ptype69, align 8, !dbg !15824
  %call83 = call i8* @RNA_struct_identifier(%struct.StructRNA* %112), !dbg !15825
  %113 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !15826
  %call84 = call i8* @RNA_struct_identifier(%struct.StructRNA* %113), !dbg !15827
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %108, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.96, i64 0, i64 0), i8* %109, i8* %110, i8* %111, i8* %call83, i8* %call84), !dbg !15828
  store i32 -1, i32* %retval, align 4, !dbg !15829
  br label %return, !dbg !15829

if.end86:                                         ; preds = %land.lhs.true79, %if.end75
  %114 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !15830
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %114, i32 0, i32 0, !dbg !15832
  %115 = load i8*, i8** %first, align 8, !dbg !15832
  %116 = bitcast i8* %115 to %struct.Link*, !dbg !15830
  store %struct.Link* %116, %struct.Link** %link, align 8, !dbg !15833
  br label %for.cond, !dbg !15834

for.cond:                                         ; preds = %for.inc, %if.end86
  %117 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !15835
  %tobool87 = icmp ne %struct.Link* %117, null, !dbg !15837
  br i1 %tobool87, label %for.body, label %for.end, !dbg !15837

for.body:                                         ; preds = %for.cond
  %118 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15838
  %call88 = call i8* %118(i64 40, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.97, i64 0, i64 0)), !dbg !15838
  %119 = bitcast i8* %call88 to %struct.CollectionPointerLink*, !dbg !15838
  store %struct.CollectionPointerLink* %119, %struct.CollectionPointerLink** %clink, align 8, !dbg !15840
  %120 = load %struct.StructRNA*, %struct.StructRNA** %srna.addr, align 8, !dbg !15841
  %121 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !15842
  %122 = bitcast %struct.Link* %121 to i8*, !dbg !15842
  %123 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %clink, align 8, !dbg !15843
  %ptr89 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %123, i32 0, i32 2, !dbg !15844
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* %120, i8* %122, %struct.PointerRNA* %ptr89), !dbg !15845
  %124 = load %struct.ListBase*, %struct.ListBase** %clb, align 8, !dbg !15846
  %125 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %clink, align 8, !dbg !15847
  %126 = bitcast %struct.CollectionPointerLink* %125 to i8*, !dbg !15847
  call void @BLI_addtail(%struct.ListBase* %124, i8* %126), !dbg !15848
  br label %for.inc, !dbg !15849

for.inc:                                          ; preds = %for.body
  %127 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !15850
  %next = getelementptr inbounds %struct.Link, %struct.Link* %127, i32 0, i32 0, !dbg !15851
  %128 = load %struct.Link*, %struct.Link** %next, align 8, !dbg !15851
  store %struct.Link* %128, %struct.Link** %link, align 8, !dbg !15852
  br label %for.cond, !dbg !15853, !llvm.loop !15854

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !15856

sw.default:                                       ; preds = %entry
  %129 = load i32, i32* %len.addr, align 4, !dbg !15857
  %cmp90 = icmp eq i32 %129, 0, !dbg !15860
  br i1 %cmp90, label %if.then92, label %if.else94, !dbg !15861

if.then92:                                        ; preds = %sw.default
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15862
  %131 = load i8*, i8** %tid.addr, align 8, !dbg !15863
  %132 = load i8*, i8** %fid.addr, align 8, !dbg !15864
  %133 = load i8*, i8** %pid.addr, align 8, !dbg !15865
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %130, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.98, i64 0, i64 0), i8* %131, i8* %132, i8* %133), !dbg !15866
  br label %if.end96, !dbg !15866

if.else94:                                        ; preds = %sw.default
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15867
  %135 = load i8*, i8** %tid.addr, align 8, !dbg !15868
  %136 = load i8*, i8** %fid.addr, align 8, !dbg !15869
  %137 = load i8*, i8** %pid.addr, align 8, !dbg !15870
  %call95 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %134, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.99, i64 0, i64 0), i8* %135, i8* %136, i8* %137), !dbg !15871
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %if.then92
  store i32 -1, i32* %retval, align 4, !dbg !15872
  br label %return, !dbg !15872

sw.epilog:                                        ; preds = %for.end, %if.end67, %if.then57, %if.end48, %if.end41, %if.end34, %if.end20, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !15873
  br label %return, !dbg !15873

return:                                           ; preds = %sw.epilog, %if.end96, %if.then82, %if.then73, %if.then63, %if.then53, %if.then46, %if.then39, %if.then25, %if.then11, %if.then
  %138 = load i32, i32* %retval, align 4, !dbg !15874
  ret i32 %138, !dbg !15874
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RNA_function_call_direct_va_lookup(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %ptr, i8* %identifier, i8* %format, %struct.__va_list_tag* %args) #0 !dbg !15875 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %identifier.addr = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %func = alloca %struct.FunctionRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !15878, metadata !DIExpression()), !dbg !15879
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !15880, metadata !DIExpression()), !dbg !15881
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !15882, metadata !DIExpression()), !dbg !15883
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !15884, metadata !DIExpression()), !dbg !15885
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !15886, metadata !DIExpression()), !dbg !15887
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !15888, metadata !DIExpression()), !dbg !15889
  call void @llvm.dbg.declare(metadata %struct.FunctionRNA** %func, metadata !15890, metadata !DIExpression()), !dbg !15891
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15892
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 1, !dbg !15893
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !15893
  %2 = load i8*, i8** %identifier.addr, align 8, !dbg !15894
  %call = call %struct.FunctionRNA* @RNA_struct_find_function(%struct.StructRNA* %1, i8* %2), !dbg !15895
  store %struct.FunctionRNA* %call, %struct.FunctionRNA** %func, align 8, !dbg !15896
  %3 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !15897
  %tobool = icmp ne %struct.FunctionRNA* %3, null, !dbg !15897
  br i1 %tobool, label %if.then, label %if.end, !dbg !15899

if.then:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15900
  %5 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !15901
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15902
  %7 = load %struct.FunctionRNA*, %struct.FunctionRNA** %func, align 8, !dbg !15903
  %8 = load i8*, i8** %format.addr, align 8, !dbg !15904
  %9 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !15905
  %call1 = call i32 @RNA_function_call_direct_va(%struct.bContext* %4, %struct.ReportList* %5, %struct.PointerRNA* %6, %struct.FunctionRNA* %7, i8* %8, %struct.__va_list_tag* %9), !dbg !15906
  store i32 %call1, i32* %retval, align 4, !dbg !15907
  br label %return, !dbg !15907

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15908
  br label %return, !dbg !15908

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !15909
  ret i32 %10, !dbg !15909
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_reset(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !15910 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %tmparray = alloca i32*, align 8
  %value = alloca i32, align 4
  %value6 = alloca i32, align 4
  %tmparray15 = alloca i32*, align 8
  %value20 = alloca i32, align 4
  %value24 = alloca i32, align 4
  %tmparray33 = alloca float*, align 8
  %value38 = alloca float, align 4
  %value42 = alloca float, align 4
  %value46 = alloca i32, align 4
  %value49 = alloca i8*, align 8
  %value52 = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !15911, metadata !DIExpression()), !dbg !15912
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !15913, metadata !DIExpression()), !dbg !15914
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !15915, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.declare(metadata i32* %len, metadata !15917, metadata !DIExpression()), !dbg !15918
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15919
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15920
  %call = call i32 @RNA_property_array_length(%struct.PointerRNA* %0, %struct.PropertyRNA* %1), !dbg !15921
  store i32 %call, i32* %len, align 4, !dbg !15922
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15923
  %call1 = call i32 @RNA_property_type(%struct.PropertyRNA* %2), !dbg !15924
  switch i32 %call1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb27
    i32 4, label %sw.bb45
    i32 3, label %sw.bb48
    i32 5, label %sw.bb51
  ], !dbg !15925

sw.bb:                                            ; preds = %entry
  %3 = load i32, i32* %len, align 4, !dbg !15926
  %tobool = icmp ne i32 %3, 0, !dbg !15926
  br i1 %tobool, label %if.then, label %if.else5, !dbg !15929

if.then:                                          ; preds = %sw.bb
  %4 = load i32, i32* %index.addr, align 4, !dbg !15930
  %cmp = icmp eq i32 %4, -1, !dbg !15933
  br i1 %cmp, label %if.then2, label %if.else, !dbg !15934

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32** %tmparray, metadata !15935, metadata !DIExpression()), !dbg !15937
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15938
  %6 = load i32, i32* %len, align 4, !dbg !15939
  %conv = sext i32 %6 to i64, !dbg !15939
  %mul = mul i64 4, %conv, !dbg !15940
  %call3 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.69, i64 0, i64 0)), !dbg !15938
  %7 = bitcast i8* %call3 to i32*, !dbg !15938
  store i32* %7, i32** %tmparray, align 8, !dbg !15937
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15941
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15942
  %10 = load i32*, i32** %tmparray, align 8, !dbg !15943
  call void @RNA_property_boolean_get_default_array(%struct.PointerRNA* %8, %struct.PropertyRNA* %9, i32* %10), !dbg !15944
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15945
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15946
  %13 = load i32*, i32** %tmparray, align 8, !dbg !15947
  call void @RNA_property_boolean_set_array(%struct.PointerRNA* %11, %struct.PropertyRNA* %12, i32* %13), !dbg !15948
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15949
  %15 = load i32*, i32** %tmparray, align 8, !dbg !15950
  %16 = bitcast i32* %15 to i8*, !dbg !15950
  call void %14(i8* %16), !dbg !15949
  br label %if.end, !dbg !15951

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %value, metadata !15952, metadata !DIExpression()), !dbg !15954
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15955
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15956
  %19 = load i32, i32* %index.addr, align 4, !dbg !15957
  %call4 = call i32 @RNA_property_boolean_get_default_index(%struct.PointerRNA* %17, %struct.PropertyRNA* %18, i32 %19), !dbg !15958
  store i32 %call4, i32* %value, align 4, !dbg !15954
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15959
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15960
  %22 = load i32, i32* %index.addr, align 4, !dbg !15961
  %23 = load i32, i32* %value, align 4, !dbg !15962
  call void @RNA_property_boolean_set_index(%struct.PointerRNA* %20, %struct.PropertyRNA* %21, i32 %22, i32 %23), !dbg !15963
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end8, !dbg !15964

if.else5:                                         ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %value6, metadata !15965, metadata !DIExpression()), !dbg !15967
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15968
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15969
  %call7 = call i32 @RNA_property_boolean_get_default(%struct.PointerRNA* %24, %struct.PropertyRNA* %25), !dbg !15970
  store i32 %call7, i32* %value6, align 4, !dbg !15967
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15971
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15972
  %28 = load i32, i32* %value6, align 4, !dbg !15973
  call void @RNA_property_boolean_set(%struct.PointerRNA* %26, %struct.PropertyRNA* %27, i32 %28), !dbg !15974
  br label %if.end8

if.end8:                                          ; preds = %if.else5, %if.end
  store i8 1, i8* %retval, align 1, !dbg !15975
  br label %return, !dbg !15975

sw.bb9:                                           ; preds = %entry
  %29 = load i32, i32* %len, align 4, !dbg !15976
  %tobool10 = icmp ne i32 %29, 0, !dbg !15976
  br i1 %tobool10, label %if.then11, label %if.else23, !dbg !15978

if.then11:                                        ; preds = %sw.bb9
  %30 = load i32, i32* %index.addr, align 4, !dbg !15979
  %cmp12 = icmp eq i32 %30, -1, !dbg !15982
  br i1 %cmp12, label %if.then14, label %if.else19, !dbg !15983

if.then14:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32** %tmparray15, metadata !15984, metadata !DIExpression()), !dbg !15986
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15987
  %32 = load i32, i32* %len, align 4, !dbg !15988
  %conv16 = sext i32 %32 to i64, !dbg !15988
  %mul17 = mul i64 4, %conv16, !dbg !15989
  %call18 = call i8* %31(i64 %mul17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.70, i64 0, i64 0)), !dbg !15987
  %33 = bitcast i8* %call18 to i32*, !dbg !15987
  store i32* %33, i32** %tmparray15, align 8, !dbg !15986
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15990
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15991
  %36 = load i32*, i32** %tmparray15, align 8, !dbg !15992
  call void @RNA_property_int_get_default_array(%struct.PointerRNA* %34, %struct.PropertyRNA* %35, i32* %36), !dbg !15993
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15994
  %38 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15995
  %39 = load i32*, i32** %tmparray15, align 8, !dbg !15996
  call void @RNA_property_int_set_array(%struct.PointerRNA* %37, %struct.PropertyRNA* %38, i32* %39), !dbg !15997
  %40 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15998
  %41 = load i32*, i32** %tmparray15, align 8, !dbg !15999
  %42 = bitcast i32* %41 to i8*, !dbg !15999
  call void %40(i8* %42), !dbg !15998
  br label %if.end22, !dbg !16000

if.else19:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32* %value20, metadata !16001, metadata !DIExpression()), !dbg !16003
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16004
  %44 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16005
  %45 = load i32, i32* %index.addr, align 4, !dbg !16006
  %call21 = call i32 @RNA_property_int_get_default_index(%struct.PointerRNA* %43, %struct.PropertyRNA* %44, i32 %45), !dbg !16007
  store i32 %call21, i32* %value20, align 4, !dbg !16003
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16008
  %47 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16009
  %48 = load i32, i32* %index.addr, align 4, !dbg !16010
  %49 = load i32, i32* %value20, align 4, !dbg !16011
  call void @RNA_property_int_set_index(%struct.PointerRNA* %46, %struct.PropertyRNA* %47, i32 %48, i32 %49), !dbg !16012
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then14
  br label %if.end26, !dbg !16013

if.else23:                                        ; preds = %sw.bb9
  call void @llvm.dbg.declare(metadata i32* %value24, metadata !16014, metadata !DIExpression()), !dbg !16016
  %50 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16017
  %51 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16018
  %call25 = call i32 @RNA_property_int_get_default(%struct.PointerRNA* %50, %struct.PropertyRNA* %51), !dbg !16019
  store i32 %call25, i32* %value24, align 4, !dbg !16016
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16020
  %53 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16021
  %54 = load i32, i32* %value24, align 4, !dbg !16022
  call void @RNA_property_int_set(%struct.PointerRNA* %52, %struct.PropertyRNA* %53, i32 %54), !dbg !16023
  br label %if.end26

if.end26:                                         ; preds = %if.else23, %if.end22
  store i8 1, i8* %retval, align 1, !dbg !16024
  br label %return, !dbg !16024

sw.bb27:                                          ; preds = %entry
  %55 = load i32, i32* %len, align 4, !dbg !16025
  %tobool28 = icmp ne i32 %55, 0, !dbg !16025
  br i1 %tobool28, label %if.then29, label %if.else41, !dbg !16027

if.then29:                                        ; preds = %sw.bb27
  %56 = load i32, i32* %index.addr, align 4, !dbg !16028
  %cmp30 = icmp eq i32 %56, -1, !dbg !16031
  br i1 %cmp30, label %if.then32, label %if.else37, !dbg !16032

if.then32:                                        ; preds = %if.then29
  call void @llvm.dbg.declare(metadata float** %tmparray33, metadata !16033, metadata !DIExpression()), !dbg !16035
  %57 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16036
  %58 = load i32, i32* %len, align 4, !dbg !16037
  %conv34 = sext i32 %58 to i64, !dbg !16037
  %mul35 = mul i64 4, %conv34, !dbg !16038
  %call36 = call i8* %57(i64 %mul35, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.71, i64 0, i64 0)), !dbg !16036
  %59 = bitcast i8* %call36 to float*, !dbg !16036
  store float* %59, float** %tmparray33, align 8, !dbg !16035
  %60 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16039
  %61 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16040
  %62 = load float*, float** %tmparray33, align 8, !dbg !16041
  call void @RNA_property_float_get_default_array(%struct.PointerRNA* %60, %struct.PropertyRNA* %61, float* %62), !dbg !16042
  %63 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16043
  %64 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16044
  %65 = load float*, float** %tmparray33, align 8, !dbg !16045
  call void @RNA_property_float_set_array(%struct.PointerRNA* %63, %struct.PropertyRNA* %64, float* %65), !dbg !16046
  %66 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16047
  %67 = load float*, float** %tmparray33, align 8, !dbg !16048
  %68 = bitcast float* %67 to i8*, !dbg !16048
  call void %66(i8* %68), !dbg !16047
  br label %if.end40, !dbg !16049

if.else37:                                        ; preds = %if.then29
  call void @llvm.dbg.declare(metadata float* %value38, metadata !16050, metadata !DIExpression()), !dbg !16052
  %69 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16053
  %70 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16054
  %71 = load i32, i32* %index.addr, align 4, !dbg !16055
  %call39 = call float @RNA_property_float_get_default_index(%struct.PointerRNA* %69, %struct.PropertyRNA* %70, i32 %71), !dbg !16056
  store float %call39, float* %value38, align 4, !dbg !16052
  %72 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16057
  %73 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16058
  %74 = load i32, i32* %index.addr, align 4, !dbg !16059
  %75 = load float, float* %value38, align 4, !dbg !16060
  call void @RNA_property_float_set_index(%struct.PointerRNA* %72, %struct.PropertyRNA* %73, i32 %74, float %75), !dbg !16061
  br label %if.end40

if.end40:                                         ; preds = %if.else37, %if.then32
  br label %if.end44, !dbg !16062

if.else41:                                        ; preds = %sw.bb27
  call void @llvm.dbg.declare(metadata float* %value42, metadata !16063, metadata !DIExpression()), !dbg !16065
  %76 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16066
  %77 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16067
  %call43 = call float @RNA_property_float_get_default(%struct.PointerRNA* %76, %struct.PropertyRNA* %77), !dbg !16068
  store float %call43, float* %value42, align 4, !dbg !16065
  %78 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16069
  %79 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16070
  %80 = load float, float* %value42, align 4, !dbg !16071
  call void @RNA_property_float_set(%struct.PointerRNA* %78, %struct.PropertyRNA* %79, float %80), !dbg !16072
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.end40
  store i8 1, i8* %retval, align 1, !dbg !16073
  br label %return, !dbg !16073

sw.bb45:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %value46, metadata !16074, metadata !DIExpression()), !dbg !16076
  %81 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16077
  %82 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16078
  %call47 = call i32 @RNA_property_enum_get_default(%struct.PointerRNA* %81, %struct.PropertyRNA* %82), !dbg !16079
  store i32 %call47, i32* %value46, align 4, !dbg !16076
  %83 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16080
  %84 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16081
  %85 = load i32, i32* %value46, align 4, !dbg !16082
  call void @RNA_property_enum_set(%struct.PointerRNA* %83, %struct.PropertyRNA* %84, i32 %85), !dbg !16083
  store i8 1, i8* %retval, align 1, !dbg !16084
  br label %return, !dbg !16084

sw.bb48:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %value49, metadata !16085, metadata !DIExpression()), !dbg !16087
  %86 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16088
  %87 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16089
  %call50 = call i8* @RNA_property_string_get_default_alloc(%struct.PointerRNA* %86, %struct.PropertyRNA* %87, i8* null, i32 0), !dbg !16090
  store i8* %call50, i8** %value49, align 8, !dbg !16087
  %88 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16091
  %89 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16092
  %90 = load i8*, i8** %value49, align 8, !dbg !16093
  call void @RNA_property_string_set(%struct.PointerRNA* %88, %struct.PropertyRNA* %89, i8* %90), !dbg !16094
  %91 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16095
  %92 = load i8*, i8** %value49, align 8, !dbg !16096
  call void %91(i8* %92), !dbg !16095
  store i8 1, i8* %retval, align 1, !dbg !16097
  br label %return, !dbg !16097

sw.bb51:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value52, metadata !16098, metadata !DIExpression()), !dbg !16100
  %93 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16101
  %94 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16102
  call void @RNA_property_pointer_get_default(%struct.PointerRNA* sret %value52, %struct.PointerRNA* %93, %struct.PropertyRNA* %94), !dbg !16103
  %95 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16104
  %96 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16105
  call void @RNA_property_pointer_set(%struct.PointerRNA* %95, %struct.PropertyRNA* %96, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value52), !dbg !16106
  store i8 1, i8* %retval, align 1, !dbg !16107
  br label %return, !dbg !16107

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !16108
  br label %return, !dbg !16108

return:                                           ; preds = %sw.default, %sw.bb51, %sw.bb48, %sw.bb45, %if.end44, %if.end26, %if.end8
  %97 = load i8, i8* %retval, align 1, !dbg !16109
  ret i8 %97, !dbg !16109
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_copy(%struct.PointerRNA* %ptr, %struct.PointerRNA* %fromptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !16110 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %fromptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %fromlen = alloca i32, align 4
  %fromprop = alloca %struct.PropertyRNA*, align 8
  %tmparray = alloca i32*, align 8
  %value = alloca i32, align 4
  %value20 = alloca i32, align 4
  %tmparray29 = alloca i32*, align 8
  %value34 = alloca i32, align 4
  %value38 = alloca i32, align 4
  %tmparray47 = alloca float*, align 8
  %value52 = alloca float, align 4
  %value56 = alloca float, align 4
  %value60 = alloca i32, align 4
  %value63 = alloca %struct.PointerRNA, align 8
  %value65 = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !16113, metadata !DIExpression()), !dbg !16114
  store %struct.PointerRNA* %fromptr, %struct.PointerRNA** %fromptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %fromptr.addr, metadata !16115, metadata !DIExpression()), !dbg !16116
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !16117, metadata !DIExpression()), !dbg !16118
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !16119, metadata !DIExpression()), !dbg !16120
  call void @llvm.dbg.declare(metadata i32* %len, metadata !16121, metadata !DIExpression()), !dbg !16122
  call void @llvm.dbg.declare(metadata i32* %fromlen, metadata !16123, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %fromprop, metadata !16125, metadata !DIExpression()), !dbg !16126
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16127
  store %struct.PropertyRNA* %0, %struct.PropertyRNA** %fromprop, align 8, !dbg !16126
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16128
  %magic = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %1, i32 0, i32 2, !dbg !16130
  %2 = load i32, i32* %magic, align 8, !dbg !16130
  %cmp = icmp ne i32 %2, -1, !dbg !16131
  br i1 %cmp, label %if.then, label %if.end6, !dbg !16132

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16133
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16135
  %5 = bitcast %struct.PropertyRNA* %4 to %struct.IDProperty*, !dbg !16136
  %name = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 5, !dbg !16136
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !16137
  %call = call %struct.IDProperty* @rna_idproperty_find(%struct.PointerRNA* %3, i8* %arraydecay), !dbg !16138
  %6 = bitcast %struct.IDProperty* %call to %struct.PropertyRNA*, !dbg !16139
  store %struct.PropertyRNA* %6, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16140
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16141
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16143
  %cmp1 = icmp eq %struct.PropertyRNA* %7, %8, !dbg !16144
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !16145

if.then2:                                         ; preds = %if.then
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16146
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16148
  %11 = bitcast %struct.PropertyRNA* %10 to %struct.IDProperty*, !dbg !16149
  %name3 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %11, i32 0, i32 5, !dbg !16149
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %name3, i64 0, i64 0, !dbg !16150
  %call5 = call %struct.IDProperty* @rna_idproperty_find(%struct.PointerRNA* %9, i8* %arraydecay4), !dbg !16151
  %12 = bitcast %struct.IDProperty* %call5 to %struct.PropertyRNA*, !dbg !16152
  store %struct.PropertyRNA* %12, %struct.PropertyRNA** %fromprop, align 8, !dbg !16153
  br label %if.end, !dbg !16154

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !16155

if.end6:                                          ; preds = %if.end, %entry
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16156
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16157
  %call7 = call i32 @RNA_property_array_length(%struct.PointerRNA* %13, %struct.PropertyRNA* %14), !dbg !16158
  store i32 %call7, i32* %len, align 4, !dbg !16159
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16160
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16161
  %call8 = call i32 @RNA_property_array_length(%struct.PointerRNA* %15, %struct.PropertyRNA* %16), !dbg !16162
  store i32 %call8, i32* %fromlen, align 4, !dbg !16163
  %17 = load i32, i32* %len, align 4, !dbg !16164
  %18 = load i32, i32* %fromlen, align 4, !dbg !16166
  %cmp9 = icmp ne i32 %17, %18, !dbg !16167
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !16168

if.then10:                                        ; preds = %if.end6
  store i8 0, i8* %retval, align 1, !dbg !16169
  br label %return, !dbg !16169

if.end11:                                         ; preds = %if.end6
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16170
  %call12 = call i32 @RNA_property_type(%struct.PropertyRNA* %19), !dbg !16171
  switch i32 %call12, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
    i32 2, label %sw.bb41
    i32 4, label %sw.bb59
    i32 5, label %sw.bb62
    i32 3, label %sw.bb64
  ], !dbg !16172

sw.bb:                                            ; preds = %if.end11
  %20 = load i32, i32* %len, align 4, !dbg !16173
  %tobool = icmp ne i32 %20, 0, !dbg !16173
  br i1 %tobool, label %if.then13, label %if.else19, !dbg !16176

if.then13:                                        ; preds = %sw.bb
  %21 = load i32, i32* %index.addr, align 4, !dbg !16177
  %cmp14 = icmp eq i32 %21, -1, !dbg !16180
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !16181

if.then15:                                        ; preds = %if.then13
  call void @llvm.dbg.declare(metadata i32** %tmparray, metadata !16182, metadata !DIExpression()), !dbg !16184
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16185
  %23 = load i32, i32* %len, align 4, !dbg !16186
  %conv = sext i32 %23 to i64, !dbg !16186
  %mul = mul i64 4, %conv, !dbg !16187
  %call16 = call i8* %22(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i64 0, i64 0)), !dbg !16185
  %24 = bitcast i8* %call16 to i32*, !dbg !16185
  store i32* %24, i32** %tmparray, align 8, !dbg !16184
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16188
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16189
  %27 = load i32*, i32** %tmparray, align 8, !dbg !16190
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %25, %struct.PropertyRNA* %26, i32* %27), !dbg !16191
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16192
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16193
  %30 = load i32*, i32** %tmparray, align 8, !dbg !16194
  call void @RNA_property_boolean_set_array(%struct.PointerRNA* %28, %struct.PropertyRNA* %29, i32* %30), !dbg !16195
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16196
  %32 = load i32*, i32** %tmparray, align 8, !dbg !16197
  %33 = bitcast i32* %32 to i8*, !dbg !16197
  call void %31(i8* %33), !dbg !16196
  br label %if.end18, !dbg !16198

if.else:                                          ; preds = %if.then13
  call void @llvm.dbg.declare(metadata i32* %value, metadata !16199, metadata !DIExpression()), !dbg !16201
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16202
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16203
  %36 = load i32, i32* %index.addr, align 4, !dbg !16204
  %call17 = call i32 @RNA_property_boolean_get_index(%struct.PointerRNA* %34, %struct.PropertyRNA* %35, i32 %36), !dbg !16205
  store i32 %call17, i32* %value, align 4, !dbg !16201
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16206
  %38 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16207
  %39 = load i32, i32* %index.addr, align 4, !dbg !16208
  %40 = load i32, i32* %value, align 4, !dbg !16209
  call void @RNA_property_boolean_set_index(%struct.PointerRNA* %37, %struct.PropertyRNA* %38, i32 %39, i32 %40), !dbg !16210
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then15
  br label %if.end22, !dbg !16211

if.else19:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %value20, metadata !16212, metadata !DIExpression()), !dbg !16214
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16215
  %42 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16216
  %call21 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %41, %struct.PropertyRNA* %42), !dbg !16217
  store i32 %call21, i32* %value20, align 4, !dbg !16214
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16218
  %44 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16219
  %45 = load i32, i32* %value20, align 4, !dbg !16220
  call void @RNA_property_boolean_set(%struct.PointerRNA* %43, %struct.PropertyRNA* %44, i32 %45), !dbg !16221
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.end18
  store i8 1, i8* %retval, align 1, !dbg !16222
  br label %return, !dbg !16222

sw.bb23:                                          ; preds = %if.end11
  %46 = load i32, i32* %len, align 4, !dbg !16223
  %tobool24 = icmp ne i32 %46, 0, !dbg !16223
  br i1 %tobool24, label %if.then25, label %if.else37, !dbg !16225

if.then25:                                        ; preds = %sw.bb23
  %47 = load i32, i32* %index.addr, align 4, !dbg !16226
  %cmp26 = icmp eq i32 %47, -1, !dbg !16229
  br i1 %cmp26, label %if.then28, label %if.else33, !dbg !16230

if.then28:                                        ; preds = %if.then25
  call void @llvm.dbg.declare(metadata i32** %tmparray29, metadata !16231, metadata !DIExpression()), !dbg !16233
  %48 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16234
  %49 = load i32, i32* %len, align 4, !dbg !16235
  %conv30 = sext i32 %49 to i64, !dbg !16235
  %mul31 = mul i64 4, %conv30, !dbg !16236
  %call32 = call i8* %48(i64 %mul31, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0)), !dbg !16234
  %50 = bitcast i8* %call32 to i32*, !dbg !16234
  store i32* %50, i32** %tmparray29, align 8, !dbg !16233
  %51 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16237
  %52 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16238
  %53 = load i32*, i32** %tmparray29, align 8, !dbg !16239
  call void @RNA_property_int_get_array(%struct.PointerRNA* %51, %struct.PropertyRNA* %52, i32* %53), !dbg !16240
  %54 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16241
  %55 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16242
  %56 = load i32*, i32** %tmparray29, align 8, !dbg !16243
  call void @RNA_property_int_set_array(%struct.PointerRNA* %54, %struct.PropertyRNA* %55, i32* %56), !dbg !16244
  %57 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16245
  %58 = load i32*, i32** %tmparray29, align 8, !dbg !16246
  %59 = bitcast i32* %58 to i8*, !dbg !16246
  call void %57(i8* %59), !dbg !16245
  br label %if.end36, !dbg !16247

if.else33:                                        ; preds = %if.then25
  call void @llvm.dbg.declare(metadata i32* %value34, metadata !16248, metadata !DIExpression()), !dbg !16250
  %60 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16251
  %61 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16252
  %62 = load i32, i32* %index.addr, align 4, !dbg !16253
  %call35 = call i32 @RNA_property_int_get_index(%struct.PointerRNA* %60, %struct.PropertyRNA* %61, i32 %62), !dbg !16254
  store i32 %call35, i32* %value34, align 4, !dbg !16250
  %63 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16255
  %64 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16256
  %65 = load i32, i32* %index.addr, align 4, !dbg !16257
  %66 = load i32, i32* %value34, align 4, !dbg !16258
  call void @RNA_property_int_set_index(%struct.PointerRNA* %63, %struct.PropertyRNA* %64, i32 %65, i32 %66), !dbg !16259
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then28
  br label %if.end40, !dbg !16260

if.else37:                                        ; preds = %sw.bb23
  call void @llvm.dbg.declare(metadata i32* %value38, metadata !16261, metadata !DIExpression()), !dbg !16263
  %67 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16264
  %68 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16265
  %call39 = call i32 @RNA_property_int_get(%struct.PointerRNA* %67, %struct.PropertyRNA* %68), !dbg !16266
  store i32 %call39, i32* %value38, align 4, !dbg !16263
  %69 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16267
  %70 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16268
  %71 = load i32, i32* %value38, align 4, !dbg !16269
  call void @RNA_property_int_set(%struct.PointerRNA* %69, %struct.PropertyRNA* %70, i32 %71), !dbg !16270
  br label %if.end40

if.end40:                                         ; preds = %if.else37, %if.end36
  store i8 1, i8* %retval, align 1, !dbg !16271
  br label %return, !dbg !16271

sw.bb41:                                          ; preds = %if.end11
  %72 = load i32, i32* %len, align 4, !dbg !16272
  %tobool42 = icmp ne i32 %72, 0, !dbg !16272
  br i1 %tobool42, label %if.then43, label %if.else55, !dbg !16274

if.then43:                                        ; preds = %sw.bb41
  %73 = load i32, i32* %index.addr, align 4, !dbg !16275
  %cmp44 = icmp eq i32 %73, -1, !dbg !16278
  br i1 %cmp44, label %if.then46, label %if.else51, !dbg !16279

if.then46:                                        ; preds = %if.then43
  call void @llvm.dbg.declare(metadata float** %tmparray47, metadata !16280, metadata !DIExpression()), !dbg !16282
  %74 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16283
  %75 = load i32, i32* %len, align 4, !dbg !16284
  %conv48 = sext i32 %75 to i64, !dbg !16284
  %mul49 = mul i64 4, %conv48, !dbg !16285
  %call50 = call i8* %74(i64 %mul49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i64 0, i64 0)), !dbg !16283
  %76 = bitcast i8* %call50 to float*, !dbg !16283
  store float* %76, float** %tmparray47, align 8, !dbg !16282
  %77 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16286
  %78 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16287
  %79 = load float*, float** %tmparray47, align 8, !dbg !16288
  call void @RNA_property_float_get_array(%struct.PointerRNA* %77, %struct.PropertyRNA* %78, float* %79), !dbg !16289
  %80 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16290
  %81 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16291
  %82 = load float*, float** %tmparray47, align 8, !dbg !16292
  call void @RNA_property_float_set_array(%struct.PointerRNA* %80, %struct.PropertyRNA* %81, float* %82), !dbg !16293
  %83 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16294
  %84 = load float*, float** %tmparray47, align 8, !dbg !16295
  %85 = bitcast float* %84 to i8*, !dbg !16295
  call void %83(i8* %85), !dbg !16294
  br label %if.end54, !dbg !16296

if.else51:                                        ; preds = %if.then43
  call void @llvm.dbg.declare(metadata float* %value52, metadata !16297, metadata !DIExpression()), !dbg !16299
  %86 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16300
  %87 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16301
  %88 = load i32, i32* %index.addr, align 4, !dbg !16302
  %call53 = call float @RNA_property_float_get_index(%struct.PointerRNA* %86, %struct.PropertyRNA* %87, i32 %88), !dbg !16303
  store float %call53, float* %value52, align 4, !dbg !16299
  %89 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16304
  %90 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16305
  %91 = load i32, i32* %index.addr, align 4, !dbg !16306
  %92 = load float, float* %value52, align 4, !dbg !16307
  call void @RNA_property_float_set_index(%struct.PointerRNA* %89, %struct.PropertyRNA* %90, i32 %91, float %92), !dbg !16308
  br label %if.end54

if.end54:                                         ; preds = %if.else51, %if.then46
  br label %if.end58, !dbg !16309

if.else55:                                        ; preds = %sw.bb41
  call void @llvm.dbg.declare(metadata float* %value56, metadata !16310, metadata !DIExpression()), !dbg !16312
  %93 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16313
  %94 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16314
  %call57 = call float @RNA_property_float_get(%struct.PointerRNA* %93, %struct.PropertyRNA* %94), !dbg !16315
  store float %call57, float* %value56, align 4, !dbg !16312
  %95 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16316
  %96 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16317
  %97 = load float, float* %value56, align 4, !dbg !16318
  call void @RNA_property_float_set(%struct.PointerRNA* %95, %struct.PropertyRNA* %96, float %97), !dbg !16319
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.end54
  store i8 1, i8* %retval, align 1, !dbg !16320
  br label %return, !dbg !16320

sw.bb59:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %value60, metadata !16321, metadata !DIExpression()), !dbg !16323
  %98 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16324
  %99 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16325
  %call61 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %98, %struct.PropertyRNA* %99), !dbg !16326
  store i32 %call61, i32* %value60, align 4, !dbg !16323
  %100 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16327
  %101 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16328
  %102 = load i32, i32* %value60, align 4, !dbg !16329
  call void @RNA_property_enum_set(%struct.PointerRNA* %100, %struct.PropertyRNA* %101, i32 %102), !dbg !16330
  store i8 1, i8* %retval, align 1, !dbg !16331
  br label %return, !dbg !16331

sw.bb62:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value63, metadata !16332, metadata !DIExpression()), !dbg !16334
  %103 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16335
  %104 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16336
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %value63, %struct.PointerRNA* %103, %struct.PropertyRNA* %104), !dbg !16337
  %105 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16338
  %106 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16339
  call void @RNA_property_pointer_set(%struct.PointerRNA* %105, %struct.PropertyRNA* %106, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value63), !dbg !16340
  store i8 1, i8* %retval, align 1, !dbg !16341
  br label %return, !dbg !16341

sw.bb64:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i8** %value65, metadata !16342, metadata !DIExpression()), !dbg !16344
  %107 = load %struct.PointerRNA*, %struct.PointerRNA** %fromptr.addr, align 8, !dbg !16345
  %108 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fromprop, align 8, !dbg !16346
  %call66 = call i8* @RNA_property_string_get_alloc(%struct.PointerRNA* %107, %struct.PropertyRNA* %108, i8* null, i32 0, i32* null), !dbg !16347
  store i8* %call66, i8** %value65, align 8, !dbg !16344
  %109 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16348
  %110 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16349
  %111 = load i8*, i8** %value65, align 8, !dbg !16350
  call void @RNA_property_string_set(%struct.PointerRNA* %109, %struct.PropertyRNA* %110, i8* %111), !dbg !16351
  %112 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16352
  %113 = load i8*, i8** %value65, align 8, !dbg !16353
  call void %112(i8* %113), !dbg !16352
  store i8 1, i8* %retval, align 1, !dbg !16354
  br label %return, !dbg !16354

sw.default:                                       ; preds = %if.end11
  store i8 0, i8* %retval, align 1, !dbg !16355
  br label %return, !dbg !16355

return:                                           ; preds = %sw.default, %sw.bb64, %sw.bb62, %sw.bb59, %if.end58, %if.end40, %if.end22, %if.then10
  %114 = load i8, i8* %retval, align 1, !dbg !16356
  ret i8 %114, !dbg !16356
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @_RNA_warning(i8* %format, ...) #0 !dbg !16357 {
entry:
  %format.addr = alloca i8*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !16360, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !16362, metadata !DIExpression()), !dbg !16363
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !16364
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !16364
  call void @llvm.va_start(i8* %arraydecay1), !dbg !16364
  %0 = load i8*, i8** %format.addr, align 8, !dbg !16365
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !16366
  %call = call i32 @vprintf(i8* %0, %struct.__va_list_tag* %arraydecay2), !dbg !16367
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !16368
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !16368
  call void @llvm.va_end(i8* %arraydecay34), !dbg !16368
  ret void, !dbg !16369
}

declare dso_local i32 @vprintf(i8*, %struct.__va_list_tag*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_property_equals(%struct.PointerRNA* %a, %struct.PointerRNA* %b, %struct.PropertyRNA* %prop, i32 %mode) #0 !dbg !16370 {
entry:
  %retval = alloca i8, align 1
  %a.addr = alloca %struct.PointerRNA*, align 8
  %b.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %mode.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %fromlen = alloca i32, align 4
  %fixed_a = alloca [16 x i32], align 16
  %fixed_b = alloca [16 x i32], align 16
  %array_a = alloca i32*, align 8
  %array_b = alloca i32*, align 8
  %equals = alloca i8, align 1
  %value = alloca i32, align 4
  %fixed_a63 = alloca [16 x i32], align 16
  %fixed_b64 = alloca [16 x i32], align 16
  %array_a65 = alloca i32*, align 8
  %array_b66 = alloca i32*, align 8
  %equals67 = alloca i8, align 1
  %value105 = alloca i32, align 4
  %fixed_a114 = alloca [16 x float], align 16
  %fixed_b115 = alloca [16 x float], align 16
  %array_a116 = alloca float*, align 8
  %array_b117 = alloca float*, align 8
  %equals118 = alloca i8, align 1
  %value156 = alloca float, align 4
  %value163 = alloca i32, align 4
  %fixed_a170 = alloca [128 x i8], align 16
  %fixed_b171 = alloca [128 x i8], align 16
  %len_a = alloca i32, align 4
  %len_b = alloca i32, align 4
  %value_a = alloca i8*, align 8
  %value_b = alloca i8*, align 8
  %equals176 = alloca i8, align 1
  %propptr_a = alloca %struct.PointerRNA, align 8
  %propptr_b = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %a, %struct.PointerRNA** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %a.addr, metadata !16374, metadata !DIExpression()), !dbg !16375
  store %struct.PointerRNA* %b, %struct.PointerRNA** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %b.addr, metadata !16376, metadata !DIExpression()), !dbg !16377
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !16378, metadata !DIExpression()), !dbg !16379
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !16380, metadata !DIExpression()), !dbg !16381
  call void @llvm.dbg.declare(metadata i32* %len, metadata !16382, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.declare(metadata i32* %fromlen, metadata !16384, metadata !DIExpression()), !dbg !16385
  %0 = load i32, i32* %mode.addr, align 4, !dbg !16386
  %cmp = icmp eq i32 %0, 1, !dbg !16388
  br i1 %cmp, label %if.then, label %if.else, !dbg !16389

if.then:                                          ; preds = %entry
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16390
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16393
  %call = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %1, %struct.PropertyRNA* %2), !dbg !16394
  %tobool = icmp ne i8 %call, 0, !dbg !16394
  br i1 %tobool, label %lor.lhs.false, label %if.then3, !dbg !16395

lor.lhs.false:                                    ; preds = %if.then
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16396
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16397
  %call1 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %3, %struct.PropertyRNA* %4), !dbg !16398
  %tobool2 = icmp ne i8 %call1, 0, !dbg !16398
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !16399

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  store i8 1, i8* %retval, align 1, !dbg !16400
  br label %return, !dbg !16400

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end14, !dbg !16401

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %mode.addr, align 4, !dbg !16402
  %cmp4 = icmp eq i32 %5, 2, !dbg !16404
  br i1 %cmp4, label %if.then5, label %if.end13, !dbg !16405

if.then5:                                         ; preds = %if.else
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16406
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16409
  %call6 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %6, %struct.PropertyRNA* %7), !dbg !16410
  %conv = zext i8 %call6 to i32, !dbg !16410
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16411
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16412
  %call7 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %8, %struct.PropertyRNA* %9), !dbg !16413
  %conv8 = zext i8 %call7 to i32, !dbg !16413
  %cmp9 = icmp ne i32 %conv, %conv8, !dbg !16414
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !16415

if.then11:                                        ; preds = %if.then5
  store i8 0, i8* %retval, align 1, !dbg !16416
  br label %return, !dbg !16416

if.end12:                                         ; preds = %if.then5
  br label %if.end13, !dbg !16417

if.end13:                                         ; preds = %if.end12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16418
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16419
  %call15 = call i32 @RNA_property_array_length(%struct.PointerRNA* %10, %struct.PropertyRNA* %11), !dbg !16420
  store i32 %call15, i32* %len, align 4, !dbg !16421
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16422
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16423
  %call16 = call i32 @RNA_property_array_length(%struct.PointerRNA* %12, %struct.PropertyRNA* %13), !dbg !16424
  store i32 %call16, i32* %fromlen, align 4, !dbg !16425
  %14 = load i32, i32* %len, align 4, !dbg !16426
  %15 = load i32, i32* %fromlen, align 4, !dbg !16428
  %cmp17 = icmp ne i32 %14, %15, !dbg !16429
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !16430

if.then19:                                        ; preds = %if.end14
  store i8 0, i8* %retval, align 1, !dbg !16431
  br label %return, !dbg !16431

if.end20:                                         ; preds = %if.end14
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16432
  %call21 = call i32 @RNA_property_type(%struct.PropertyRNA* %16), !dbg !16433
  switch i32 %call21, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb60
    i32 2, label %sw.bb111
    i32 4, label %sw.bb162
    i32 3, label %sw.bb169
    i32 5, label %sw.bb191
  ], !dbg !16434

sw.bb:                                            ; preds = %if.end20
  %17 = load i32, i32* %len, align 4, !dbg !16435
  %tobool22 = icmp ne i32 %17, 0, !dbg !16435
  br i1 %tobool22, label %if.then23, label %if.else54, !dbg !16439

if.then23:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata [16 x i32]* %fixed_a, metadata !16440, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.declare(metadata [16 x i32]* %fixed_b, metadata !16444, metadata !DIExpression()), !dbg !16445
  call void @llvm.dbg.declare(metadata i32** %array_a, metadata !16446, metadata !DIExpression()), !dbg !16447
  call void @llvm.dbg.declare(metadata i32** %array_b, metadata !16448, metadata !DIExpression()), !dbg !16449
  call void @llvm.dbg.declare(metadata i8* %equals, metadata !16450, metadata !DIExpression()), !dbg !16451
  %18 = load i32, i32* %len, align 4, !dbg !16452
  %cmp24 = icmp sgt i32 %18, 16, !dbg !16453
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !16454

cond.true:                                        ; preds = %if.then23
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16455
  %20 = load i32, i32* %len, align 4, !dbg !16456
  %conv26 = sext i32 %20 to i64, !dbg !16456
  %mul = mul i64 4, %conv26, !dbg !16457
  %call27 = call i8* %19(i64 %mul, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0)), !dbg !16455
  br label %cond.end, !dbg !16454

cond.false:                                       ; preds = %if.then23
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %fixed_a, i64 0, i64 0, !dbg !16458
  %21 = bitcast i32* %arraydecay to i8*, !dbg !16458
  br label %cond.end, !dbg !16454

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call27, %cond.true ], [ %21, %cond.false ], !dbg !16454
  %22 = bitcast i8* %cond to i32*, !dbg !16454
  store i32* %22, i32** %array_a, align 8, !dbg !16459
  %23 = load i32, i32* %len, align 4, !dbg !16460
  %cmp28 = icmp sgt i32 %23, 16, !dbg !16461
  br i1 %cmp28, label %cond.true30, label %cond.false34, !dbg !16462

cond.true30:                                      ; preds = %cond.end
  %24 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16463
  %25 = load i32, i32* %len, align 4, !dbg !16464
  %conv31 = sext i32 %25 to i64, !dbg !16464
  %mul32 = mul i64 4, %conv31, !dbg !16465
  %call33 = call i8* %24(i64 %mul32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0)), !dbg !16463
  br label %cond.end36, !dbg !16462

cond.false34:                                     ; preds = %cond.end
  %arraydecay35 = getelementptr inbounds [16 x i32], [16 x i32]* %fixed_b, i64 0, i64 0, !dbg !16466
  %26 = bitcast i32* %arraydecay35 to i8*, !dbg !16466
  br label %cond.end36, !dbg !16462

cond.end36:                                       ; preds = %cond.false34, %cond.true30
  %cond37 = phi i8* [ %call33, %cond.true30 ], [ %26, %cond.false34 ], !dbg !16462
  %27 = bitcast i8* %cond37 to i32*, !dbg !16462
  store i32* %27, i32** %array_b, align 8, !dbg !16467
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16468
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16469
  %30 = load i32*, i32** %array_a, align 8, !dbg !16470
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %28, %struct.PropertyRNA* %29, i32* %30), !dbg !16471
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16472
  %32 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16473
  %33 = load i32*, i32** %array_b, align 8, !dbg !16474
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %31, %struct.PropertyRNA* %32, i32* %33), !dbg !16475
  %34 = load i32*, i32** %array_a, align 8, !dbg !16476
  %35 = bitcast i32* %34 to i8*, !dbg !16476
  %36 = load i32*, i32** %array_b, align 8, !dbg !16477
  %37 = bitcast i32* %36 to i8*, !dbg !16477
  %38 = load i32, i32* %len, align 4, !dbg !16478
  %conv38 = sext i32 %38 to i64, !dbg !16478
  %mul39 = mul i64 4, %conv38, !dbg !16479
  %call40 = call i32 @memcmp(i8* %35, i8* %37, i64 %mul39) #7, !dbg !16480
  %cmp41 = icmp eq i32 %call40, 0, !dbg !16481
  %conv42 = zext i1 %cmp41 to i32, !dbg !16481
  %conv43 = trunc i32 %conv42 to i8, !dbg !16480
  store i8 %conv43, i8* %equals, align 1, !dbg !16482
  %39 = load i32*, i32** %array_a, align 8, !dbg !16483
  %arraydecay44 = getelementptr inbounds [16 x i32], [16 x i32]* %fixed_a, i64 0, i64 0, !dbg !16485
  %cmp45 = icmp ne i32* %39, %arraydecay44, !dbg !16486
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !16487

if.then47:                                        ; preds = %cond.end36
  %40 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16488
  %41 = load i32*, i32** %array_a, align 8, !dbg !16489
  %42 = bitcast i32* %41 to i8*, !dbg !16489
  call void %40(i8* %42), !dbg !16488
  br label %if.end48, !dbg !16488

if.end48:                                         ; preds = %if.then47, %cond.end36
  %43 = load i32*, i32** %array_b, align 8, !dbg !16490
  %arraydecay49 = getelementptr inbounds [16 x i32], [16 x i32]* %fixed_b, i64 0, i64 0, !dbg !16492
  %cmp50 = icmp ne i32* %43, %arraydecay49, !dbg !16493
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !16494

if.then52:                                        ; preds = %if.end48
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16495
  %45 = load i32*, i32** %array_b, align 8, !dbg !16496
  %46 = bitcast i32* %45 to i8*, !dbg !16496
  call void %44(i8* %46), !dbg !16495
  br label %if.end53, !dbg !16495

if.end53:                                         ; preds = %if.then52, %if.end48
  %47 = load i8, i8* %equals, align 1, !dbg !16497
  store i8 %47, i8* %retval, align 1, !dbg !16498
  br label %return, !dbg !16498

if.else54:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %value, metadata !16499, metadata !DIExpression()), !dbg !16501
  %48 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16502
  %49 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16503
  %call55 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %48, %struct.PropertyRNA* %49), !dbg !16504
  store i32 %call55, i32* %value, align 4, !dbg !16501
  %50 = load i32, i32* %value, align 4, !dbg !16505
  %51 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16506
  %52 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16507
  %call56 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %51, %struct.PropertyRNA* %52), !dbg !16508
  %cmp57 = icmp eq i32 %50, %call56, !dbg !16509
  %conv58 = zext i1 %cmp57 to i32, !dbg !16509
  %conv59 = trunc i32 %conv58 to i8, !dbg !16505
  store i8 %conv59, i8* %retval, align 1, !dbg !16510
  br label %return, !dbg !16510

sw.bb60:                                          ; preds = %if.end20
  %53 = load i32, i32* %len, align 4, !dbg !16511
  %tobool61 = icmp ne i32 %53, 0, !dbg !16511
  br i1 %tobool61, label %if.then62, label %if.else104, !dbg !16514

if.then62:                                        ; preds = %sw.bb60
  call void @llvm.dbg.declare(metadata [16 x i32]* %fixed_a63, metadata !16515, metadata !DIExpression()), !dbg !16517
  call void @llvm.dbg.declare(metadata [16 x i32]* %fixed_b64, metadata !16518, metadata !DIExpression()), !dbg !16519
  call void @llvm.dbg.declare(metadata i32** %array_a65, metadata !16520, metadata !DIExpression()), !dbg !16521
  call void @llvm.dbg.declare(metadata i32** %array_b66, metadata !16522, metadata !DIExpression()), !dbg !16523
  call void @llvm.dbg.declare(metadata i8* %equals67, metadata !16524, metadata !DIExpression()), !dbg !16525
  %54 = load i32, i32* %len, align 4, !dbg !16526
  %cmp68 = icmp sgt i32 %54, 16, !dbg !16527
  br i1 %cmp68, label %cond.true70, label %cond.false74, !dbg !16528

cond.true70:                                      ; preds = %if.then62
  %55 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16529
  %56 = load i32, i32* %len, align 4, !dbg !16530
  %conv71 = sext i32 %56 to i64, !dbg !16530
  %mul72 = mul i64 4, %conv71, !dbg !16531
  %call73 = call i8* %55(i64 %mul72, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0)), !dbg !16529
  br label %cond.end76, !dbg !16528

cond.false74:                                     ; preds = %if.then62
  %arraydecay75 = getelementptr inbounds [16 x i32], [16 x i32]* %fixed_a63, i64 0, i64 0, !dbg !16532
  %57 = bitcast i32* %arraydecay75 to i8*, !dbg !16532
  br label %cond.end76, !dbg !16528

cond.end76:                                       ; preds = %cond.false74, %cond.true70
  %cond77 = phi i8* [ %call73, %cond.true70 ], [ %57, %cond.false74 ], !dbg !16528
  %58 = bitcast i8* %cond77 to i32*, !dbg !16528
  store i32* %58, i32** %array_a65, align 8, !dbg !16533
  %59 = load i32, i32* %len, align 4, !dbg !16534
  %cmp78 = icmp sgt i32 %59, 16, !dbg !16535
  br i1 %cmp78, label %cond.true80, label %cond.false84, !dbg !16536

cond.true80:                                      ; preds = %cond.end76
  %60 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16537
  %61 = load i32, i32* %len, align 4, !dbg !16538
  %conv81 = sext i32 %61 to i64, !dbg !16538
  %mul82 = mul i64 4, %conv81, !dbg !16539
  %call83 = call i8* %60(i64 %mul82, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0)), !dbg !16537
  br label %cond.end86, !dbg !16536

cond.false84:                                     ; preds = %cond.end76
  %arraydecay85 = getelementptr inbounds [16 x i32], [16 x i32]* %fixed_b64, i64 0, i64 0, !dbg !16540
  %62 = bitcast i32* %arraydecay85 to i8*, !dbg !16540
  br label %cond.end86, !dbg !16536

cond.end86:                                       ; preds = %cond.false84, %cond.true80
  %cond87 = phi i8* [ %call83, %cond.true80 ], [ %62, %cond.false84 ], !dbg !16536
  %63 = bitcast i8* %cond87 to i32*, !dbg !16536
  store i32* %63, i32** %array_b66, align 8, !dbg !16541
  %64 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16542
  %65 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16543
  %66 = load i32*, i32** %array_a65, align 8, !dbg !16544
  call void @RNA_property_int_get_array(%struct.PointerRNA* %64, %struct.PropertyRNA* %65, i32* %66), !dbg !16545
  %67 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16546
  %68 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16547
  %69 = load i32*, i32** %array_b66, align 8, !dbg !16548
  call void @RNA_property_int_get_array(%struct.PointerRNA* %67, %struct.PropertyRNA* %68, i32* %69), !dbg !16549
  %70 = load i32*, i32** %array_a65, align 8, !dbg !16550
  %71 = bitcast i32* %70 to i8*, !dbg !16550
  %72 = load i32*, i32** %array_b66, align 8, !dbg !16551
  %73 = bitcast i32* %72 to i8*, !dbg !16551
  %74 = load i32, i32* %len, align 4, !dbg !16552
  %conv88 = sext i32 %74 to i64, !dbg !16552
  %mul89 = mul i64 4, %conv88, !dbg !16553
  %call90 = call i32 @memcmp(i8* %71, i8* %73, i64 %mul89) #7, !dbg !16554
  %cmp91 = icmp eq i32 %call90, 0, !dbg !16555
  %conv92 = zext i1 %cmp91 to i32, !dbg !16555
  %conv93 = trunc i32 %conv92 to i8, !dbg !16554
  store i8 %conv93, i8* %equals67, align 1, !dbg !16556
  %75 = load i32*, i32** %array_a65, align 8, !dbg !16557
  %arraydecay94 = getelementptr inbounds [16 x i32], [16 x i32]* %fixed_a63, i64 0, i64 0, !dbg !16559
  %cmp95 = icmp ne i32* %75, %arraydecay94, !dbg !16560
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !16561

if.then97:                                        ; preds = %cond.end86
  %76 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16562
  %77 = load i32*, i32** %array_a65, align 8, !dbg !16563
  %78 = bitcast i32* %77 to i8*, !dbg !16563
  call void %76(i8* %78), !dbg !16562
  br label %if.end98, !dbg !16562

if.end98:                                         ; preds = %if.then97, %cond.end86
  %79 = load i32*, i32** %array_b66, align 8, !dbg !16564
  %arraydecay99 = getelementptr inbounds [16 x i32], [16 x i32]* %fixed_b64, i64 0, i64 0, !dbg !16566
  %cmp100 = icmp ne i32* %79, %arraydecay99, !dbg !16567
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !16568

if.then102:                                       ; preds = %if.end98
  %80 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16569
  %81 = load i32*, i32** %array_b66, align 8, !dbg !16570
  %82 = bitcast i32* %81 to i8*, !dbg !16570
  call void %80(i8* %82), !dbg !16569
  br label %if.end103, !dbg !16569

if.end103:                                        ; preds = %if.then102, %if.end98
  %83 = load i8, i8* %equals67, align 1, !dbg !16571
  store i8 %83, i8* %retval, align 1, !dbg !16572
  br label %return, !dbg !16572

if.else104:                                       ; preds = %sw.bb60
  call void @llvm.dbg.declare(metadata i32* %value105, metadata !16573, metadata !DIExpression()), !dbg !16575
  %84 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16576
  %85 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16577
  %call106 = call i32 @RNA_property_int_get(%struct.PointerRNA* %84, %struct.PropertyRNA* %85), !dbg !16578
  store i32 %call106, i32* %value105, align 4, !dbg !16575
  %86 = load i32, i32* %value105, align 4, !dbg !16579
  %87 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16580
  %88 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16581
  %call107 = call i32 @RNA_property_int_get(%struct.PointerRNA* %87, %struct.PropertyRNA* %88), !dbg !16582
  %cmp108 = icmp eq i32 %86, %call107, !dbg !16583
  %conv109 = zext i1 %cmp108 to i32, !dbg !16583
  %conv110 = trunc i32 %conv109 to i8, !dbg !16579
  store i8 %conv110, i8* %retval, align 1, !dbg !16584
  br label %return, !dbg !16584

sw.bb111:                                         ; preds = %if.end20
  %89 = load i32, i32* %len, align 4, !dbg !16585
  %tobool112 = icmp ne i32 %89, 0, !dbg !16585
  br i1 %tobool112, label %if.then113, label %if.else155, !dbg !16588

if.then113:                                       ; preds = %sw.bb111
  call void @llvm.dbg.declare(metadata [16 x float]* %fixed_a114, metadata !16589, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.declare(metadata [16 x float]* %fixed_b115, metadata !16593, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.declare(metadata float** %array_a116, metadata !16595, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.declare(metadata float** %array_b117, metadata !16597, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.declare(metadata i8* %equals118, metadata !16599, metadata !DIExpression()), !dbg !16600
  %90 = load i32, i32* %len, align 4, !dbg !16601
  %cmp119 = icmp sgt i32 %90, 16, !dbg !16602
  br i1 %cmp119, label %cond.true121, label %cond.false125, !dbg !16603

cond.true121:                                     ; preds = %if.then113
  %91 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16604
  %92 = load i32, i32* %len, align 4, !dbg !16605
  %conv122 = sext i32 %92 to i64, !dbg !16605
  %mul123 = mul i64 4, %conv122, !dbg !16606
  %call124 = call i8* %91(i64 %mul123, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0)), !dbg !16604
  br label %cond.end127, !dbg !16603

cond.false125:                                    ; preds = %if.then113
  %arraydecay126 = getelementptr inbounds [16 x float], [16 x float]* %fixed_a114, i64 0, i64 0, !dbg !16607
  %93 = bitcast float* %arraydecay126 to i8*, !dbg !16607
  br label %cond.end127, !dbg !16603

cond.end127:                                      ; preds = %cond.false125, %cond.true121
  %cond128 = phi i8* [ %call124, %cond.true121 ], [ %93, %cond.false125 ], !dbg !16603
  %94 = bitcast i8* %cond128 to float*, !dbg !16603
  store float* %94, float** %array_a116, align 8, !dbg !16608
  %95 = load i32, i32* %len, align 4, !dbg !16609
  %cmp129 = icmp sgt i32 %95, 16, !dbg !16610
  br i1 %cmp129, label %cond.true131, label %cond.false135, !dbg !16611

cond.true131:                                     ; preds = %cond.end127
  %96 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16612
  %97 = load i32, i32* %len, align 4, !dbg !16613
  %conv132 = sext i32 %97 to i64, !dbg !16613
  %mul133 = mul i64 4, %conv132, !dbg !16614
  %call134 = call i8* %96(i64 %mul133, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0)), !dbg !16612
  br label %cond.end137, !dbg !16611

cond.false135:                                    ; preds = %cond.end127
  %arraydecay136 = getelementptr inbounds [16 x float], [16 x float]* %fixed_b115, i64 0, i64 0, !dbg !16615
  %98 = bitcast float* %arraydecay136 to i8*, !dbg !16615
  br label %cond.end137, !dbg !16611

cond.end137:                                      ; preds = %cond.false135, %cond.true131
  %cond138 = phi i8* [ %call134, %cond.true131 ], [ %98, %cond.false135 ], !dbg !16611
  %99 = bitcast i8* %cond138 to float*, !dbg !16611
  store float* %99, float** %array_b117, align 8, !dbg !16616
  %100 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16617
  %101 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16618
  %102 = load float*, float** %array_a116, align 8, !dbg !16619
  call void @RNA_property_float_get_array(%struct.PointerRNA* %100, %struct.PropertyRNA* %101, float* %102), !dbg !16620
  %103 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16621
  %104 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16622
  %105 = load float*, float** %array_b117, align 8, !dbg !16623
  call void @RNA_property_float_get_array(%struct.PointerRNA* %103, %struct.PropertyRNA* %104, float* %105), !dbg !16624
  %106 = load float*, float** %array_a116, align 8, !dbg !16625
  %107 = bitcast float* %106 to i8*, !dbg !16625
  %108 = load float*, float** %array_b117, align 8, !dbg !16626
  %109 = bitcast float* %108 to i8*, !dbg !16626
  %110 = load i32, i32* %len, align 4, !dbg !16627
  %conv139 = sext i32 %110 to i64, !dbg !16627
  %mul140 = mul i64 4, %conv139, !dbg !16628
  %call141 = call i32 @memcmp(i8* %107, i8* %109, i64 %mul140) #7, !dbg !16629
  %cmp142 = icmp eq i32 %call141, 0, !dbg !16630
  %conv143 = zext i1 %cmp142 to i32, !dbg !16630
  %conv144 = trunc i32 %conv143 to i8, !dbg !16629
  store i8 %conv144, i8* %equals118, align 1, !dbg !16631
  %111 = load float*, float** %array_a116, align 8, !dbg !16632
  %arraydecay145 = getelementptr inbounds [16 x float], [16 x float]* %fixed_a114, i64 0, i64 0, !dbg !16634
  %cmp146 = icmp ne float* %111, %arraydecay145, !dbg !16635
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !16636

if.then148:                                       ; preds = %cond.end137
  %112 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16637
  %113 = load float*, float** %array_a116, align 8, !dbg !16638
  %114 = bitcast float* %113 to i8*, !dbg !16638
  call void %112(i8* %114), !dbg !16637
  br label %if.end149, !dbg !16637

if.end149:                                        ; preds = %if.then148, %cond.end137
  %115 = load float*, float** %array_b117, align 8, !dbg !16639
  %arraydecay150 = getelementptr inbounds [16 x float], [16 x float]* %fixed_b115, i64 0, i64 0, !dbg !16641
  %cmp151 = icmp ne float* %115, %arraydecay150, !dbg !16642
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !16643

if.then153:                                       ; preds = %if.end149
  %116 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16644
  %117 = load float*, float** %array_b117, align 8, !dbg !16645
  %118 = bitcast float* %117 to i8*, !dbg !16645
  call void %116(i8* %118), !dbg !16644
  br label %if.end154, !dbg !16644

if.end154:                                        ; preds = %if.then153, %if.end149
  %119 = load i8, i8* %equals118, align 1, !dbg !16646
  store i8 %119, i8* %retval, align 1, !dbg !16647
  br label %return, !dbg !16647

if.else155:                                       ; preds = %sw.bb111
  call void @llvm.dbg.declare(metadata float* %value156, metadata !16648, metadata !DIExpression()), !dbg !16650
  %120 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16651
  %121 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16652
  %call157 = call float @RNA_property_float_get(%struct.PointerRNA* %120, %struct.PropertyRNA* %121), !dbg !16653
  store float %call157, float* %value156, align 4, !dbg !16650
  %122 = load float, float* %value156, align 4, !dbg !16654
  %123 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16655
  %124 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16656
  %call158 = call float @RNA_property_float_get(%struct.PointerRNA* %123, %struct.PropertyRNA* %124), !dbg !16657
  %cmp159 = fcmp oeq float %122, %call158, !dbg !16658
  %conv160 = zext i1 %cmp159 to i32, !dbg !16658
  %conv161 = trunc i32 %conv160 to i8, !dbg !16654
  store i8 %conv161, i8* %retval, align 1, !dbg !16659
  br label %return, !dbg !16659

sw.bb162:                                         ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %value163, metadata !16660, metadata !DIExpression()), !dbg !16662
  %125 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16663
  %126 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16664
  %call164 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %125, %struct.PropertyRNA* %126), !dbg !16665
  store i32 %call164, i32* %value163, align 4, !dbg !16662
  %127 = load i32, i32* %value163, align 4, !dbg !16666
  %128 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16667
  %129 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16668
  %call165 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %128, %struct.PropertyRNA* %129), !dbg !16669
  %cmp166 = icmp eq i32 %127, %call165, !dbg !16670
  %conv167 = zext i1 %cmp166 to i32, !dbg !16670
  %conv168 = trunc i32 %conv167 to i8, !dbg !16666
  store i8 %conv168, i8* %retval, align 1, !dbg !16671
  br label %return, !dbg !16671

sw.bb169:                                         ; preds = %if.end20
  call void @llvm.dbg.declare(metadata [128 x i8]* %fixed_a170, metadata !16672, metadata !DIExpression()), !dbg !16674
  call void @llvm.dbg.declare(metadata [128 x i8]* %fixed_b171, metadata !16675, metadata !DIExpression()), !dbg !16676
  call void @llvm.dbg.declare(metadata i32* %len_a, metadata !16677, metadata !DIExpression()), !dbg !16678
  call void @llvm.dbg.declare(metadata i32* %len_b, metadata !16679, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.declare(metadata i8** %value_a, metadata !16681, metadata !DIExpression()), !dbg !16682
  %130 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16683
  %131 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16684
  %arraydecay172 = getelementptr inbounds [128 x i8], [128 x i8]* %fixed_a170, i64 0, i64 0, !dbg !16685
  %call173 = call i8* @RNA_property_string_get_alloc(%struct.PointerRNA* %130, %struct.PropertyRNA* %131, i8* %arraydecay172, i32 128, i32* %len_a), !dbg !16686
  store i8* %call173, i8** %value_a, align 8, !dbg !16682
  call void @llvm.dbg.declare(metadata i8** %value_b, metadata !16687, metadata !DIExpression()), !dbg !16688
  %132 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16689
  %133 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16690
  %arraydecay174 = getelementptr inbounds [128 x i8], [128 x i8]* %fixed_b171, i64 0, i64 0, !dbg !16691
  %call175 = call i8* @RNA_property_string_get_alloc(%struct.PointerRNA* %132, %struct.PropertyRNA* %133, i8* %arraydecay174, i32 128, i32* %len_b), !dbg !16692
  store i8* %call175, i8** %value_b, align 8, !dbg !16688
  call void @llvm.dbg.declare(metadata i8* %equals176, metadata !16693, metadata !DIExpression()), !dbg !16694
  %134 = load i8*, i8** %value_a, align 8, !dbg !16695
  %135 = load i8*, i8** %value_b, align 8, !dbg !16696
  %call177 = call i32 @strcmp(i8* %134, i8* %135) #7, !dbg !16697
  %cmp178 = icmp eq i32 %call177, 0, !dbg !16698
  %conv179 = zext i1 %cmp178 to i32, !dbg !16698
  %conv180 = trunc i32 %conv179 to i8, !dbg !16697
  store i8 %conv180, i8* %equals176, align 1, !dbg !16694
  %136 = load i8*, i8** %value_a, align 8, !dbg !16699
  %arraydecay181 = getelementptr inbounds [128 x i8], [128 x i8]* %fixed_a170, i64 0, i64 0, !dbg !16701
  %cmp182 = icmp ne i8* %136, %arraydecay181, !dbg !16702
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !16703

if.then184:                                       ; preds = %sw.bb169
  %137 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16704
  %138 = load i8*, i8** %value_a, align 8, !dbg !16705
  call void %137(i8* %138), !dbg !16704
  br label %if.end185, !dbg !16704

if.end185:                                        ; preds = %if.then184, %sw.bb169
  %139 = load i8*, i8** %value_b, align 8, !dbg !16706
  %arraydecay186 = getelementptr inbounds [128 x i8], [128 x i8]* %fixed_b171, i64 0, i64 0, !dbg !16708
  %cmp187 = icmp ne i8* %139, %arraydecay186, !dbg !16709
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !16710

if.then189:                                       ; preds = %if.end185
  %140 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16711
  %141 = load i8*, i8** %value_b, align 8, !dbg !16712
  call void %140(i8* %141), !dbg !16711
  br label %if.end190, !dbg !16711

if.end190:                                        ; preds = %if.then189, %if.end185
  %142 = load i8, i8* %equals176, align 1, !dbg !16713
  store i8 %142, i8* %retval, align 1, !dbg !16714
  br label %return, !dbg !16714

sw.bb191:                                         ; preds = %if.end20
  %143 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16715
  %call192 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %143), !dbg !16715
  %call193 = call i32 @strcmp(i8* %call192, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)) #7, !dbg !16715
  %cmp194 = icmp eq i32 %call193, 0, !dbg !16715
  br i1 %cmp194, label %if.end198, label %if.then196, !dbg !16718

if.then196:                                       ; preds = %sw.bb191
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %propptr_a, metadata !16719, metadata !DIExpression()), !dbg !16721
  %144 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16722
  %145 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16723
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %propptr_a, %struct.PointerRNA* %144, %struct.PropertyRNA* %145), !dbg !16724
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %propptr_b, metadata !16725, metadata !DIExpression()), !dbg !16726
  %146 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16727
  %147 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16728
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %propptr_b, %struct.PointerRNA* %146, %struct.PropertyRNA* %147), !dbg !16729
  %148 = load i32, i32* %mode.addr, align 4, !dbg !16730
  %call197 = call zeroext i8 @RNA_struct_equals(%struct.PointerRNA* %propptr_a, %struct.PointerRNA* %propptr_b, i32 %148), !dbg !16731
  store i8 %call197, i8* %retval, align 1, !dbg !16732
  br label %return, !dbg !16732

if.end198:                                        ; preds = %sw.bb191
  br label %sw.epilog, !dbg !16733

sw.default:                                       ; preds = %if.end20
  br label %sw.epilog, !dbg !16734

sw.epilog:                                        ; preds = %sw.default, %if.end198
  store i8 1, i8* %retval, align 1, !dbg !16735
  br label %return, !dbg !16735

return:                                           ; preds = %sw.epilog, %if.then196, %if.end190, %sw.bb162, %if.else155, %if.end154, %if.else104, %if.end103, %if.else54, %if.end53, %if.then19, %if.then11, %if.then3
  %149 = load i8, i8* %retval, align 1, !dbg !16736
  ret i8 %149, !dbg !16736
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RNA_struct_equals(%struct.PointerRNA* %a, %struct.PointerRNA* %b, i32 %mode) #0 !dbg !16737 {
entry:
  %retval = alloca i8, align 1
  %a.addr = alloca %struct.PointerRNA*, align 8
  %b.addr = alloca %struct.PointerRNA*, align 8
  %mode.addr = alloca i32, align 4
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %iterprop = alloca %struct.PropertyRNA*, align 8
  %equals = alloca i8, align 1
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.PointerRNA* %a, %struct.PointerRNA** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %a.addr, metadata !16740, metadata !DIExpression()), !dbg !16741
  store %struct.PointerRNA* %b, %struct.PointerRNA** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %b.addr, metadata !16742, metadata !DIExpression()), !dbg !16743
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !16744, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !16746, metadata !DIExpression()), !dbg !16747
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iterprop, metadata !16748, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.declare(metadata i8* %equals, metadata !16750, metadata !DIExpression()), !dbg !16751
  store i8 1, i8* %equals, align 1, !dbg !16751
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16752
  %cmp = icmp eq %struct.PointerRNA* %0, null, !dbg !16754
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !16755

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16756
  %cmp1 = icmp eq %struct.PointerRNA* %1, null, !dbg !16757
  br i1 %cmp1, label %if.then, label %if.else, !dbg !16758

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !16759
  br label %return, !dbg !16759

if.else:                                          ; preds = %land.lhs.true, %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16760
  %cmp2 = icmp eq %struct.PointerRNA* %2, null, !dbg !16762
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !16763

lor.lhs.false:                                    ; preds = %if.else
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16764
  %cmp3 = icmp eq %struct.PointerRNA* %3, null, !dbg !16765
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !16766

if.then4:                                         ; preds = %lor.lhs.false, %if.else
  store i8 0, i8* %retval, align 1, !dbg !16767
  br label %return, !dbg !16767

if.else5:                                         ; preds = %lor.lhs.false
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16768
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 1, !dbg !16770
  %5 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !16770
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16771
  %type6 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 1, !dbg !16772
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type6, align 8, !dbg !16772
  %cmp7 = icmp ne %struct.StructRNA* %5, %7, !dbg !16773
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !16774

if.then8:                                         ; preds = %if.else5
  store i8 0, i8* %retval, align 1, !dbg !16775
  br label %return, !dbg !16775

if.end:                                           ; preds = %if.else5
  br label %if.end9

if.end9:                                          ; preds = %if.end
  br label %if.end10

if.end10:                                         ; preds = %if.end9
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16776
  %type11 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %8, i32 0, i32 1, !dbg !16777
  %9 = load %struct.StructRNA*, %struct.StructRNA** %type11, align 8, !dbg !16777
  %call = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %9), !dbg !16778
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %iterprop, align 8, !dbg !16779
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16780
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iterprop, align 8, !dbg !16781
  call void @RNA_property_collection_begin(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, %struct.CollectionPropertyIterator* %iter), !dbg !16782
  br label %for.cond, !dbg !16783

for.cond:                                         ; preds = %for.inc, %if.end10
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !16784
  %12 = load i32, i32* %valid, align 8, !dbg !16784
  %tobool = icmp ne i32 %12, 0, !dbg !16787
  br i1 %tobool, label %for.body, label %for.end, !dbg !16787

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !16788, metadata !DIExpression()), !dbg !16790
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 6, !dbg !16791
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !16792
  %13 = load i8*, i8** %data, align 8, !dbg !16792
  %14 = bitcast i8* %13 to %struct.PropertyRNA*, !dbg !16793
  store %struct.PropertyRNA* %14, %struct.PropertyRNA** %prop, align 8, !dbg !16790
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %a.addr, align 8, !dbg !16794
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %b.addr, align 8, !dbg !16796
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !16797
  %18 = load i32, i32* %mode.addr, align 4, !dbg !16798
  %call12 = call zeroext i8 @RNA_property_equals(%struct.PointerRNA* %15, %struct.PointerRNA* %16, %struct.PropertyRNA* %17, i32 %18), !dbg !16799
  %tobool13 = icmp ne i8 %call12, 0, !dbg !16799
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !16800

if.then14:                                        ; preds = %for.body
  store i8 0, i8* %equals, align 1, !dbg !16801
  br label %for.end, !dbg !16803

if.end15:                                         ; preds = %for.body
  br label %for.inc, !dbg !16804

for.inc:                                          ; preds = %if.end15
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %iter), !dbg !16805
  br label %for.cond, !dbg !16806, !llvm.loop !16807

for.end:                                          ; preds = %if.then14, %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %iter), !dbg !16809
  %19 = load i8, i8* %equals, align 1, !dbg !16810
  store i8 %19, i8* %retval, align 1, !dbg !16811
  br label %return, !dbg !16811

return:                                           ; preds = %for.end, %if.then8, %if.then4, %if.then
  %20 = load i8, i8* %retval, align 1, !dbg !16812
  ret i8 %20, !dbg !16812
}

declare dso_local void @WM_main_add_notifier(i32, i8*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_property_array_length_all_dimensions(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !16813 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %i = alloca i32, align 4
  %len = alloca [3 x i32], align 4
  %dim = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !16814, metadata !DIExpression()), !dbg !16815
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !16816, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16818, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.declare(metadata [3 x i32]* %len, metadata !16820, metadata !DIExpression()), !dbg !16821
  call void @llvm.dbg.declare(metadata i32* %dim, metadata !16822, metadata !DIExpression()), !dbg !16823
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16824
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16825
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %len, i64 0, i64 0, !dbg !16826
  %call = call i32 @RNA_property_array_dimension(%struct.PointerRNA* %0, %struct.PropertyRNA* %1, i32* %arraydecay), !dbg !16827
  store i32 %call, i32* %dim, align 4, !dbg !16823
  call void @llvm.dbg.declare(metadata i32* %size, metadata !16828, metadata !DIExpression()), !dbg !16829
  %2 = load i32, i32* %dim, align 4, !dbg !16830
  %cmp = icmp eq i32 %2, 0, !dbg !16832
  br i1 %cmp, label %if.then, label %if.end, !dbg !16833

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16834
  br label %return, !dbg !16834

if.end:                                           ; preds = %entry
  store i32 1, i32* %size, align 4, !dbg !16835
  store i32 0, i32* %i, align 4, !dbg !16837
  br label %for.cond, !dbg !16838

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !16839
  %4 = load i32, i32* %dim, align 4, !dbg !16841
  %cmp1 = icmp slt i32 %3, %4, !dbg !16842
  br i1 %cmp1, label %for.body, label %for.end, !dbg !16843

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !16844
  %idxprom = sext i32 %5 to i64, !dbg !16845
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %len, i64 0, i64 %idxprom, !dbg !16845
  %6 = load i32, i32* %arrayidx, align 4, !dbg !16845
  %7 = load i32, i32* %size, align 4, !dbg !16846
  %mul = mul nsw i32 %7, %6, !dbg !16846
  store i32 %mul, i32* %size, align 4, !dbg !16846
  br label %for.inc, !dbg !16847

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !16848
  %inc = add nsw i32 %8, 1, !dbg !16848
  store i32 %inc, i32* %i, align 4, !dbg !16848
  br label %for.cond, !dbg !16849, !llvm.loop !16850

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %size, align 4, !dbg !16852
  store i32 %9, i32* %retval, align 4, !dbg !16853
  br label %return, !dbg !16853

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !16854
  ret i32 %10, !dbg !16854
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_token_strip_quotes(i8* %token) #0 !dbg !16855 {
entry:
  %retval = alloca i32, align 4
  %token.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  store i8* %token, i8** %token.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %token.addr, metadata !16858, metadata !DIExpression()), !dbg !16859
  %0 = load i8*, i8** %token.addr, align 8, !dbg !16860
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !16860
  %1 = load i8, i8* %arrayidx, align 1, !dbg !16860
  %conv = zext i8 %1 to i32, !dbg !16860
  %cmp = icmp eq i32 %conv, 34, !dbg !16862
  br i1 %cmp, label %if.then, label %if.end13, !dbg !16863

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !16864, metadata !DIExpression()), !dbg !16866
  %2 = load i8*, i8** %token.addr, align 8, !dbg !16867
  %call = call i64 @strlen(i8* %2) #7, !dbg !16868
  %conv2 = trunc i64 %call to i32, !dbg !16868
  store i32 %conv2, i32* %len, align 4, !dbg !16866
  %3 = load i32, i32* %len, align 4, !dbg !16869
  %cmp3 = icmp sge i32 %3, 2, !dbg !16871
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !16872

land.lhs.true:                                    ; preds = %if.then
  %4 = load i8*, i8** %token.addr, align 8, !dbg !16873
  %5 = load i32, i32* %len, align 4, !dbg !16874
  %sub = sub nsw i32 %5, 1, !dbg !16875
  %idxprom = sext i32 %sub to i64, !dbg !16873
  %arrayidx5 = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !16873
  %6 = load i8, i8* %arrayidx5, align 1, !dbg !16873
  %conv6 = zext i8 %6 to i32, !dbg !16873
  %cmp7 = icmp eq i32 %conv6, 34, !dbg !16876
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !16877

if.then9:                                         ; preds = %land.lhs.true
  %7 = load i8*, i8** %token.addr, align 8, !dbg !16878
  %8 = load i32, i32* %len, align 4, !dbg !16880
  %sub10 = sub nsw i32 %8, 1, !dbg !16881
  %idxprom11 = sext i32 %sub10 to i64, !dbg !16878
  %arrayidx12 = getelementptr inbounds i8, i8* %7, i64 %idxprom11, !dbg !16878
  store i8 0, i8* %arrayidx12, align 1, !dbg !16882
  store i32 1, i32* %retval, align 4, !dbg !16883
  br label %return, !dbg !16883

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end13, !dbg !16884

if.end13:                                         ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !16885
  br label %return, !dbg !16885

return:                                           ; preds = %if.end13, %if.then9
  %9 = load i32, i32* %retval, align 4, !dbg !16886
  ret i32 %9, !dbg !16886
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rna_path_parse_collection_key(i8** %path, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PointerRNA* %r_nextptr) #0 !dbg !16887 {
entry:
  %retval = alloca i8, align 1
  %path.addr = alloca i8**, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_nextptr.addr = alloca %struct.PointerRNA*, align 8
  %fixedbuf = alloca [256 x i8], align 16
  %intkey = alloca i32, align 4
  %token = alloca i8*, align 8
  store i8** %path, i8*** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %path.addr, metadata !16890, metadata !DIExpression()), !dbg !16891
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !16892, metadata !DIExpression()), !dbg !16893
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !16894, metadata !DIExpression()), !dbg !16895
  store %struct.PointerRNA* %r_nextptr, %struct.PointerRNA** %r_nextptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_nextptr.addr, metadata !16896, metadata !DIExpression()), !dbg !16897
  call void @llvm.dbg.declare(metadata [256 x i8]* %fixedbuf, metadata !16898, metadata !DIExpression()), !dbg !16899
  call void @llvm.dbg.declare(metadata i32* %intkey, metadata !16900, metadata !DIExpression()), !dbg !16901
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %r_nextptr.addr, align 8, !dbg !16902
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16903
  %2 = bitcast %struct.PointerRNA* %0 to i8*, !dbg !16904
  %3 = bitcast %struct.PointerRNA* %1 to i8*, !dbg !16904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false), !dbg !16904
  %4 = load i8**, i8*** %path.addr, align 8, !dbg !16905
  %5 = load i8*, i8** %4, align 8, !dbg !16907
  %6 = load i8, i8* %5, align 1, !dbg !16908
  %tobool = icmp ne i8 %6, 0, !dbg !16909
  br i1 %tobool, label %if.end, label %if.then, !dbg !16910

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !16911
  br label %return, !dbg !16911

if.end:                                           ; preds = %entry
  %7 = load i8**, i8*** %path.addr, align 8, !dbg !16912
  %8 = load i8*, i8** %7, align 8, !dbg !16914
  %9 = load i8, i8* %8, align 1, !dbg !16915
  %conv = zext i8 %9 to i32, !dbg !16915
  %cmp = icmp eq i32 %conv, 91, !dbg !16916
  br i1 %cmp, label %if.then2, label %if.else38, !dbg !16917

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %token, metadata !16918, metadata !DIExpression()), !dbg !16920
  %10 = load i8**, i8*** %path.addr, align 8, !dbg !16921
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !16922
  %call = call i8* @rna_path_token(i8** %10, i8* %arraydecay, i32 256, i32 1), !dbg !16923
  store i8* %call, i8** %token, align 8, !dbg !16924
  %11 = load i8*, i8** %token, align 8, !dbg !16925
  %tobool3 = icmp ne i8* %11, null, !dbg !16925
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !16927

if.then4:                                         ; preds = %if.then2
  store i8 0, i8* %retval, align 1, !dbg !16928
  br label %return, !dbg !16928

if.end5:                                          ; preds = %if.then2
  %12 = load i8*, i8** %token, align 8, !dbg !16929
  %call6 = call i32 @rna_token_strip_quotes(i8* %12), !dbg !16931
  %tobool7 = icmp ne i32 %call6, 0, !dbg !16931
  br i1 %tobool7, label %if.then8, label %if.else13, !dbg !16932

if.then8:                                         ; preds = %if.end5
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16933
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16936
  %15 = load i8*, i8** %token, align 8, !dbg !16937
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 1, !dbg !16938
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %r_nextptr.addr, align 8, !dbg !16939
  %call9 = call i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %13, %struct.PropertyRNA* %14, i8* %add.ptr, %struct.PointerRNA* %16), !dbg !16940
  %tobool10 = icmp ne i32 %call9, 0, !dbg !16940
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !16941

if.then11:                                        ; preds = %if.then8
  br label %if.end12, !dbg !16942

if.else:                                          ; preds = %if.then8
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %r_nextptr.addr, align 8, !dbg !16944
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %17, i32 0, i32 2, !dbg !16946
  store i8* null, i8** %data, align 8, !dbg !16947
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then11
  br label %if.end32, !dbg !16948

if.else13:                                        ; preds = %if.end5
  %18 = load i8*, i8** %token, align 8, !dbg !16949
  %call14 = call i32 @atoi(i8* %18) #7, !dbg !16951
  store i32 %call14, i32* %intkey, align 4, !dbg !16952
  %19 = load i32, i32* %intkey, align 4, !dbg !16953
  %cmp15 = icmp eq i32 %19, 0, !dbg !16955
  br i1 %cmp15, label %land.lhs.true, label %if.end25, !dbg !16956

land.lhs.true:                                    ; preds = %if.else13
  %20 = load i8*, i8** %token, align 8, !dbg !16957
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 0, !dbg !16957
  %21 = load i8, i8* %arrayidx, align 1, !dbg !16957
  %conv17 = zext i8 %21 to i32, !dbg !16957
  %cmp18 = icmp ne i32 %conv17, 48, !dbg !16958
  br i1 %cmp18, label %if.then24, label %lor.lhs.false, !dbg !16959

lor.lhs.false:                                    ; preds = %land.lhs.true
  %22 = load i8*, i8** %token, align 8, !dbg !16960
  %arrayidx20 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !16960
  %23 = load i8, i8* %arrayidx20, align 1, !dbg !16960
  %conv21 = zext i8 %23 to i32, !dbg !16960
  %cmp22 = icmp ne i32 %conv21, 0, !dbg !16961
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !16962

if.then24:                                        ; preds = %lor.lhs.false, %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !16963
  br label %return, !dbg !16963

if.end25:                                         ; preds = %lor.lhs.false, %if.else13
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16965
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16967
  %26 = load i32, i32* %intkey, align 4, !dbg !16968
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %r_nextptr.addr, align 8, !dbg !16969
  %call26 = call i32 @RNA_property_collection_lookup_int(%struct.PointerRNA* %24, %struct.PropertyRNA* %25, i32 %26, %struct.PointerRNA* %27), !dbg !16970
  %tobool27 = icmp ne i32 %call26, 0, !dbg !16970
  br i1 %tobool27, label %if.then28, label %if.else29, !dbg !16971

if.then28:                                        ; preds = %if.end25
  br label %if.end31, !dbg !16972

if.else29:                                        ; preds = %if.end25
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %r_nextptr.addr, align 8, !dbg !16974
  %data30 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %28, i32 0, i32 2, !dbg !16976
  store i8* null, i8** %data30, align 8, !dbg !16977
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.then28
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end12
  %29 = load i8*, i8** %token, align 8, !dbg !16978
  %arraydecay33 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !16980
  %cmp34 = icmp ne i8* %29, %arraydecay33, !dbg !16981
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !16982

if.then36:                                        ; preds = %if.end32
  %30 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16983
  %31 = load i8*, i8** %token, align 8, !dbg !16985
  call void %30(i8* %31), !dbg !16983
  br label %if.end37, !dbg !16986

if.end37:                                         ; preds = %if.then36, %if.end32
  br label %if.end45, !dbg !16987

if.else38:                                        ; preds = %if.end
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !16988
  %33 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !16991
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %r_nextptr.addr, align 8, !dbg !16992
  %call39 = call zeroext i8 @RNA_property_collection_type_get(%struct.PointerRNA* %32, %struct.PropertyRNA* %33, %struct.PointerRNA* %34), !dbg !16993
  %tobool40 = icmp ne i8 %call39, 0, !dbg !16993
  br i1 %tobool40, label %if.then41, label %if.else42, !dbg !16994

if.then41:                                        ; preds = %if.else38
  br label %if.end44, !dbg !16995

if.else42:                                        ; preds = %if.else38
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %r_nextptr.addr, align 8, !dbg !16997
  %data43 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %35, i32 0, i32 2, !dbg !16999
  store i8* null, i8** %data43, align 8, !dbg !17000
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then41
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end37
  store i8 1, i8* %retval, align 1, !dbg !17001
  br label %return, !dbg !17001

return:                                           ; preds = %if.end45, %if.then24, %if.then4, %if.then
  %36 = load i8, i8* %retval, align 1, !dbg !17002
  ret i8 %36, !dbg !17002
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rna_path_parse_array_index(i8** %path, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32* %r_index) #0 !dbg !17003 {
entry:
  %retval = alloca i8, align 1
  %path.addr = alloca i8**, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_index.addr = alloca i32*, align 8
  %fixedbuf = alloca [256 x i8], align 16
  %index_arr = alloca [3 x i32], align 4
  %len = alloca [3 x i32], align 4
  %dim = alloca i32, align 4
  %i = alloca i32, align 4
  %temp_index = alloca i32, align 4
  %token = alloca i8*, align 8
  %totdim = alloca i32, align 4
  %flat_index = alloca i32, align 4
  store i8** %path, i8*** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %path.addr, metadata !17006, metadata !DIExpression()), !dbg !17007
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !17008, metadata !DIExpression()), !dbg !17009
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !17010, metadata !DIExpression()), !dbg !17011
  store i32* %r_index, i32** %r_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_index.addr, metadata !17012, metadata !DIExpression()), !dbg !17013
  call void @llvm.dbg.declare(metadata [256 x i8]* %fixedbuf, metadata !17014, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.declare(metadata [3 x i32]* %index_arr, metadata !17016, metadata !DIExpression()), !dbg !17017
  %0 = bitcast [3 x i32]* %index_arr to i8*, !dbg !17017
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !17017
  call void @llvm.dbg.declare(metadata [3 x i32]* %len, metadata !17018, metadata !DIExpression()), !dbg !17019
  call void @llvm.dbg.declare(metadata i32* %dim, metadata !17020, metadata !DIExpression()), !dbg !17021
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !17022
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !17023
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %len, i64 0, i64 0, !dbg !17024
  %call = call i32 @RNA_property_array_dimension(%struct.PointerRNA* %1, %struct.PropertyRNA* %2, i32* %arraydecay), !dbg !17025
  store i32 %call, i32* %dim, align 4, !dbg !17021
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17026, metadata !DIExpression()), !dbg !17027
  %3 = load i32*, i32** %r_index.addr, align 8, !dbg !17028
  store i32 -1, i32* %3, align 4, !dbg !17029
  %4 = load i8**, i8*** %path.addr, align 8, !dbg !17030
  %5 = load i8*, i8** %4, align 8, !dbg !17032
  %6 = load i8, i8* %5, align 1, !dbg !17033
  %tobool = icmp ne i8 %6, 0, !dbg !17034
  br i1 %tobool, label %if.end, label %if.then, !dbg !17035

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !17036
  br label %return, !dbg !17036

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !17037
  br label %for.cond, !dbg !17039

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !17040
  %8 = load i32, i32* %dim, align 4, !dbg !17042
  %cmp = icmp slt i32 %7, %8, !dbg !17043
  br i1 %cmp, label %for.body, label %for.end, !dbg !17044

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %temp_index, metadata !17045, metadata !DIExpression()), !dbg !17047
  store i32 -1, i32* %temp_index, align 4, !dbg !17047
  call void @llvm.dbg.declare(metadata i8** %token, metadata !17048, metadata !DIExpression()), !dbg !17049
  %9 = load i8**, i8*** %path.addr, align 8, !dbg !17050
  %10 = load i8*, i8** %9, align 8, !dbg !17052
  %11 = load i8, i8* %10, align 1, !dbg !17053
  %conv = zext i8 %11 to i32, !dbg !17053
  %cmp1 = icmp eq i32 %conv, 91, !dbg !17054
  br i1 %cmp1, label %if.then3, label %if.else33, !dbg !17055

if.then3:                                         ; preds = %for.body
  %12 = load i8**, i8*** %path.addr, align 8, !dbg !17056
  %arraydecay4 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !17058
  %call5 = call i8* @rna_path_token(i8** %12, i8* %arraydecay4, i32 256, i32 1), !dbg !17059
  store i8* %call5, i8** %token, align 8, !dbg !17060
  %13 = load i8*, i8** %token, align 8, !dbg !17061
  %cmp6 = icmp eq i8* %13, null, !dbg !17063
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !17064

if.then8:                                         ; preds = %if.then3
  store i8 0, i8* %retval, align 1, !dbg !17065
  br label %return, !dbg !17065

if.else:                                          ; preds = %if.then3
  %14 = load i8*, i8** %token, align 8, !dbg !17067
  %call9 = call i32 @rna_token_strip_quotes(i8* %14), !dbg !17069
  %tobool10 = icmp ne i32 %call9, 0, !dbg !17069
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !17070

if.then11:                                        ; preds = %if.else
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !17071
  %16 = load i8*, i8** %token, align 8, !dbg !17073
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 1, !dbg !17074
  %17 = load i8, i8* %add.ptr, align 1, !dbg !17075
  %call12 = call i32 @RNA_property_array_item_index(%struct.PropertyRNA* %15, i8 zeroext %17), !dbg !17076
  store i32 %call12, i32* %temp_index, align 4, !dbg !17077
  br label %if.end31, !dbg !17078

if.else13:                                        ; preds = %if.else
  %18 = load i8*, i8** %token, align 8, !dbg !17079
  %call14 = call i32 @atoi(i8* %18) #7, !dbg !17081
  store i32 %call14, i32* %temp_index, align 4, !dbg !17082
  %19 = load i32, i32* %temp_index, align 4, !dbg !17083
  %cmp15 = icmp eq i32 %19, 0, !dbg !17085
  br i1 %cmp15, label %land.lhs.true, label %if.end30, !dbg !17086

land.lhs.true:                                    ; preds = %if.else13
  %20 = load i8*, i8** %token, align 8, !dbg !17087
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 0, !dbg !17087
  %21 = load i8, i8* %arrayidx, align 1, !dbg !17087
  %conv17 = zext i8 %21 to i32, !dbg !17087
  %cmp18 = icmp ne i32 %conv17, 48, !dbg !17088
  br i1 %cmp18, label %if.then24, label %lor.lhs.false, !dbg !17089

lor.lhs.false:                                    ; preds = %land.lhs.true
  %22 = load i8*, i8** %token, align 8, !dbg !17090
  %arrayidx20 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !17090
  %23 = load i8, i8* %arrayidx20, align 1, !dbg !17090
  %conv21 = zext i8 %23 to i32, !dbg !17090
  %cmp22 = icmp ne i32 %conv21, 0, !dbg !17091
  br i1 %cmp22, label %if.then24, label %if.end30, !dbg !17092

if.then24:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %24 = load i8*, i8** %token, align 8, !dbg !17093
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !17096
  %cmp26 = icmp ne i8* %24, %arraydecay25, !dbg !17097
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !17098

if.then28:                                        ; preds = %if.then24
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !17099
  %26 = load i8*, i8** %token, align 8, !dbg !17101
  call void %25(i8* %26), !dbg !17099
  br label %if.end29, !dbg !17102

if.end29:                                         ; preds = %if.then28, %if.then24
  store i8 0, i8* %retval, align 1, !dbg !17103
  br label %return, !dbg !17103

if.end30:                                         ; preds = %lor.lhs.false, %if.else13
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then11
  br label %if.end32

if.end32:                                         ; preds = %if.end31
  br label %if.end47, !dbg !17104

if.else33:                                        ; preds = %for.body
  %27 = load i32, i32* %dim, align 4, !dbg !17105
  %cmp34 = icmp eq i32 %27, 1, !dbg !17107
  br i1 %cmp34, label %if.then36, label %if.else44, !dbg !17108

if.then36:                                        ; preds = %if.else33
  %28 = load i8**, i8*** %path.addr, align 8, !dbg !17109
  %arraydecay37 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !17111
  %call38 = call i8* @rna_path_token(i8** %28, i8* %arraydecay37, i32 256, i32 0), !dbg !17112
  store i8* %call38, i8** %token, align 8, !dbg !17113
  %29 = load i8*, i8** %token, align 8, !dbg !17114
  %cmp39 = icmp eq i8* %29, null, !dbg !17116
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !17117

if.then41:                                        ; preds = %if.then36
  store i8 0, i8* %retval, align 1, !dbg !17118
  br label %return, !dbg !17118

if.end42:                                         ; preds = %if.then36
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !17120
  %31 = load i8*, i8** %token, align 8, !dbg !17121
  %32 = load i8, i8* %31, align 1, !dbg !17122
  %call43 = call i32 @RNA_property_array_item_index(%struct.PropertyRNA* %30, i8 zeroext %32), !dbg !17123
  store i32 %call43, i32* %temp_index, align 4, !dbg !17124
  br label %if.end46, !dbg !17125

if.else44:                                        ; preds = %if.else33
  %arraydecay45 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !17126
  store i8* %arraydecay45, i8** %token, align 8, !dbg !17128
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.end42
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end32
  %33 = load i8*, i8** %token, align 8, !dbg !17129
  %arraydecay48 = getelementptr inbounds [256 x i8], [256 x i8]* %fixedbuf, i64 0, i64 0, !dbg !17131
  %cmp49 = icmp ne i8* %33, %arraydecay48, !dbg !17132
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !17133

if.then51:                                        ; preds = %if.end47
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !17134
  %35 = load i8*, i8** %token, align 8, !dbg !17136
  call void %34(i8* %35), !dbg !17134
  br label %if.end52, !dbg !17137

if.end52:                                         ; preds = %if.then51, %if.end47
  %36 = load i32, i32* %temp_index, align 4, !dbg !17138
  %cmp53 = icmp slt i32 %36, 0, !dbg !17140
  br i1 %cmp53, label %if.then59, label %lor.lhs.false55, !dbg !17141

lor.lhs.false55:                                  ; preds = %if.end52
  %37 = load i32, i32* %temp_index, align 4, !dbg !17142
  %38 = load i32, i32* %i, align 4, !dbg !17143
  %idxprom = sext i32 %38 to i64, !dbg !17144
  %arrayidx56 = getelementptr inbounds [3 x i32], [3 x i32]* %len, i64 0, i64 %idxprom, !dbg !17144
  %39 = load i32, i32* %arrayidx56, align 4, !dbg !17144
  %cmp57 = icmp sge i32 %37, %39, !dbg !17145
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !17146

if.then59:                                        ; preds = %lor.lhs.false55, %if.end52
  store i8 0, i8* %retval, align 1, !dbg !17147
  br label %return, !dbg !17147

if.end60:                                         ; preds = %lor.lhs.false55
  %40 = load i32, i32* %temp_index, align 4, !dbg !17148
  %41 = load i32, i32* %i, align 4, !dbg !17149
  %idxprom61 = sext i32 %41 to i64, !dbg !17150
  %arrayidx62 = getelementptr inbounds [3 x i32], [3 x i32]* %index_arr, i64 0, i64 %idxprom61, !dbg !17150
  store i32 %40, i32* %arrayidx62, align 4, !dbg !17151
  br label %for.inc, !dbg !17152

for.inc:                                          ; preds = %if.end60
  %42 = load i32, i32* %i, align 4, !dbg !17153
  %inc = add nsw i32 %42, 1, !dbg !17153
  store i32 %inc, i32* %i, align 4, !dbg !17153
  br label %for.cond, !dbg !17154, !llvm.loop !17155

for.end:                                          ; preds = %for.cond
  %43 = load i8**, i8*** %path.addr, align 8, !dbg !17157
  %44 = load i8*, i8** %43, align 8, !dbg !17159
  %45 = load i8, i8* %44, align 1, !dbg !17160
  %tobool63 = icmp ne i8 %45, 0, !dbg !17160
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !17161

if.then64:                                        ; preds = %for.end
  store i8 0, i8* %retval, align 1, !dbg !17162
  br label %return, !dbg !17162

if.end65:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %totdim, metadata !17163, metadata !DIExpression()), !dbg !17165
  store i32 1, i32* %totdim, align 4, !dbg !17165
  call void @llvm.dbg.declare(metadata i32* %flat_index, metadata !17166, metadata !DIExpression()), !dbg !17167
  store i32 0, i32* %flat_index, align 4, !dbg !17167
  %46 = load i32, i32* %dim, align 4, !dbg !17168
  %sub = sub nsw i32 %46, 1, !dbg !17170
  store i32 %sub, i32* %i, align 4, !dbg !17171
  br label %for.cond66, !dbg !17172

for.cond66:                                       ; preds = %for.inc75, %if.end65
  %47 = load i32, i32* %i, align 4, !dbg !17173
  %cmp67 = icmp sge i32 %47, 0, !dbg !17175
  br i1 %cmp67, label %for.body69, label %for.end76, !dbg !17176

for.body69:                                       ; preds = %for.cond66
  %48 = load i32, i32* %i, align 4, !dbg !17177
  %idxprom70 = sext i32 %48 to i64, !dbg !17179
  %arrayidx71 = getelementptr inbounds [3 x i32], [3 x i32]* %index_arr, i64 0, i64 %idxprom70, !dbg !17179
  %49 = load i32, i32* %arrayidx71, align 4, !dbg !17179
  %50 = load i32, i32* %totdim, align 4, !dbg !17180
  %mul = mul nsw i32 %49, %50, !dbg !17181
  %51 = load i32, i32* %flat_index, align 4, !dbg !17182
  %add = add nsw i32 %51, %mul, !dbg !17182
  store i32 %add, i32* %flat_index, align 4, !dbg !17182
  %52 = load i32, i32* %i, align 4, !dbg !17183
  %idxprom72 = sext i32 %52 to i64, !dbg !17184
  %arrayidx73 = getelementptr inbounds [3 x i32], [3 x i32]* %len, i64 0, i64 %idxprom72, !dbg !17184
  %53 = load i32, i32* %arrayidx73, align 4, !dbg !17184
  %54 = load i32, i32* %totdim, align 4, !dbg !17185
  %mul74 = mul nsw i32 %54, %53, !dbg !17185
  store i32 %mul74, i32* %totdim, align 4, !dbg !17185
  br label %for.inc75, !dbg !17186

for.inc75:                                        ; preds = %for.body69
  %55 = load i32, i32* %i, align 4, !dbg !17187
  %dec = add nsw i32 %55, -1, !dbg !17187
  store i32 %dec, i32* %i, align 4, !dbg !17187
  br label %for.cond66, !dbg !17188, !llvm.loop !17189

for.end76:                                        ; preds = %for.cond66
  %56 = load i32, i32* %flat_index, align 4, !dbg !17191
  %57 = load i32*, i32** %r_index.addr, align 8, !dbg !17192
  store i32 %56, i32* %57, align 4, !dbg !17193
  store i8 1, i8* %retval, align 1, !dbg !17194
  br label %return, !dbg !17194

return:                                           ; preds = %for.end76, %if.then64, %if.then59, %if.then41, %if.end29, %if.then8, %if.then
  %58 = load i8, i8* %retval, align 1, !dbg !17195
  ret i8 %58, !dbg !17195
}

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_idp_path(%struct.PointerRNA* %ptr, %struct.IDProperty* %haystack, %struct.IDProperty* %needle, %struct.IDP_Chain* %parent_link) #0 !dbg !17196 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %haystack.addr = alloca %struct.IDProperty*, align 8
  %needle.addr = alloca %struct.IDProperty*, align 8
  %parent_link.addr = alloca %struct.IDP_Chain*, align 8
  %path = alloca i8*, align 8
  %link = alloca %struct.IDP_Chain, align 8
  %iter = alloca %struct.IDProperty*, align 8
  %i = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  %child_ptr = alloca %struct.PointerRNA, align 8
  %prop29 = alloca %struct.PropertyRNA*, align 8
  %array = alloca %struct.IDProperty*, align 8
  %i53 = alloca i32, align 4
  %child_ptr62 = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !17207, metadata !DIExpression()), !dbg !17208
  store %struct.IDProperty* %haystack, %struct.IDProperty** %haystack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %haystack.addr, metadata !17209, metadata !DIExpression()), !dbg !17210
  store %struct.IDProperty* %needle, %struct.IDProperty** %needle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %needle.addr, metadata !17211, metadata !DIExpression()), !dbg !17212
  store %struct.IDP_Chain* %parent_link, %struct.IDP_Chain** %parent_link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDP_Chain** %parent_link.addr, metadata !17213, metadata !DIExpression()), !dbg !17214
  call void @llvm.dbg.declare(metadata i8** %path, metadata !17215, metadata !DIExpression()), !dbg !17216
  store i8* null, i8** %path, align 8, !dbg !17216
  call void @llvm.dbg.declare(metadata %struct.IDP_Chain* %link, metadata !17217, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %iter, metadata !17219, metadata !DIExpression()), !dbg !17220
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17221, metadata !DIExpression()), !dbg !17222
  %0 = load %struct.IDP_Chain*, %struct.IDP_Chain** %parent_link.addr, align 8, !dbg !17223
  %up = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 0, !dbg !17224
  store %struct.IDP_Chain* %0, %struct.IDP_Chain** %up, align 8, !dbg !17225
  %name = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 1, !dbg !17226
  store i8* null, i8** %name, align 8, !dbg !17227
  %index = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 2, !dbg !17228
  store i32 -1, i32* %index, align 8, !dbg !17229
  store i32 0, i32* %i, align 4, !dbg !17230
  %1 = load %struct.IDProperty*, %struct.IDProperty** %haystack.addr, align 8, !dbg !17232
  %data = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %1, i32 0, i32 7, !dbg !17233
  %group = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data, i32 0, i32 1, !dbg !17234
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group, i32 0, i32 0, !dbg !17235
  %2 = load i8*, i8** %first, align 8, !dbg !17235
  %3 = bitcast i8* %2 to %struct.IDProperty*, !dbg !17232
  store %struct.IDProperty* %3, %struct.IDProperty** %iter, align 8, !dbg !17236
  br label %for.cond, !dbg !17237

for.cond:                                         ; preds = %for.inc80, %entry
  %4 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17238
  %tobool = icmp ne %struct.IDProperty* %4, null, !dbg !17240
  br i1 %tobool, label %for.body, label %for.end82, !dbg !17240

for.body:                                         ; preds = %for.cond
  %5 = load %struct.IDProperty*, %struct.IDProperty** %needle.addr, align 8, !dbg !17241
  %6 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17244
  %cmp = icmp eq %struct.IDProperty* %5, %6, !dbg !17245
  br i1 %cmp, label %if.then, label %if.else, !dbg !17246

if.then:                                          ; preds = %for.body
  %7 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17247
  %name1 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %7, i32 0, i32 5, !dbg !17249
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name1, i64 0, i64 0, !dbg !17247
  %name2 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 1, !dbg !17250
  store i8* %arraydecay, i8** %name2, align 8, !dbg !17251
  %index3 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 2, !dbg !17252
  store i32 -1, i32* %index3, align 8, !dbg !17253
  %call = call i8* @rna_idp_path_create(%struct.IDP_Chain* %link), !dbg !17254
  store i8* %call, i8** %path, align 8, !dbg !17255
  br label %for.end82, !dbg !17256

if.else:                                          ; preds = %for.body
  %8 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17257
  %type = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %8, i32 0, i32 2, !dbg !17260
  %9 = load i8, i8* %type, align 8, !dbg !17260
  %conv = zext i8 %9 to i32, !dbg !17257
  %cmp4 = icmp eq i32 %conv, 6, !dbg !17261
  br i1 %cmp4, label %if.then6, label %if.else23, !dbg !17262

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !17263, metadata !DIExpression()), !dbg !17265
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !17266
  %11 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17267
  %name7 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %11, i32 0, i32 5, !dbg !17268
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %name7, i64 0, i64 0, !dbg !17267
  %call9 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %10, i8* %arraydecay8), !dbg !17269
  store %struct.PropertyRNA* %call9, %struct.PropertyRNA** %prop, align 8, !dbg !17265
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !17270
  %tobool10 = icmp ne %struct.PropertyRNA* %12, null, !dbg !17270
  br i1 %tobool10, label %land.lhs.true, label %if.end22, !dbg !17272

land.lhs.true:                                    ; preds = %if.then6
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !17273
  %type11 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %13, i32 0, i32 9, !dbg !17274
  %14 = load i32, i32* %type11, align 8, !dbg !17274
  %cmp12 = icmp eq i32 %14, 5, !dbg !17275
  br i1 %cmp12, label %if.then14, label %if.end22, !dbg !17276

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %child_ptr, metadata !17277, metadata !DIExpression()), !dbg !17279
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !17280
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !17281
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %child_ptr, %struct.PointerRNA* %15, %struct.PropertyRNA* %16), !dbg !17282
  %17 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17283
  %name15 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %17, i32 0, i32 5, !dbg !17284
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %name15, i64 0, i64 0, !dbg !17283
  %name17 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 1, !dbg !17285
  store i8* %arraydecay16, i8** %name17, align 8, !dbg !17286
  %index18 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 2, !dbg !17287
  store i32 -1, i32* %index18, align 8, !dbg !17288
  %18 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17289
  %19 = load %struct.IDProperty*, %struct.IDProperty** %needle.addr, align 8, !dbg !17291
  %call19 = call i8* @rna_idp_path(%struct.PointerRNA* %child_ptr, %struct.IDProperty* %18, %struct.IDProperty* %19, %struct.IDP_Chain* %link), !dbg !17292
  store i8* %call19, i8** %path, align 8, !dbg !17293
  %tobool20 = icmp ne i8* %call19, null, !dbg !17293
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !17294

if.then21:                                        ; preds = %if.then14
  br label %for.end82, !dbg !17295

if.end:                                           ; preds = %if.then14
  br label %if.end22, !dbg !17297

if.end22:                                         ; preds = %if.end, %land.lhs.true, %if.then6
  br label %if.end78, !dbg !17298

if.else23:                                        ; preds = %if.else
  %20 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17299
  %type24 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %20, i32 0, i32 2, !dbg !17301
  %21 = load i8, i8* %type24, align 8, !dbg !17301
  %conv25 = zext i8 %21 to i32, !dbg !17299
  %cmp26 = icmp eq i32 %conv25, 9, !dbg !17302
  br i1 %cmp26, label %if.then28, label %if.end77, !dbg !17303

if.then28:                                        ; preds = %if.else23
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop29, metadata !17304, metadata !DIExpression()), !dbg !17306
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !17307
  %23 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17308
  %name30 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %23, i32 0, i32 5, !dbg !17309
  %arraydecay31 = getelementptr inbounds [64 x i8], [64 x i8]* %name30, i64 0, i64 0, !dbg !17308
  %call32 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %22, i8* %arraydecay31), !dbg !17310
  store %struct.PropertyRNA* %call32, %struct.PropertyRNA** %prop29, align 8, !dbg !17306
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop29, align 8, !dbg !17311
  %tobool33 = icmp ne %struct.PropertyRNA* %24, null, !dbg !17311
  br i1 %tobool33, label %land.lhs.true34, label %if.end76, !dbg !17313

land.lhs.true34:                                  ; preds = %if.then28
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop29, align 8, !dbg !17314
  %type35 = getelementptr inbounds %struct.PropertyRNA, %struct.PropertyRNA* %25, i32 0, i32 9, !dbg !17315
  %26 = load i32, i32* %type35, align 8, !dbg !17315
  %cmp36 = icmp eq i32 %26, 6, !dbg !17316
  br i1 %cmp36, label %if.then38, label %if.end76, !dbg !17317

if.then38:                                        ; preds = %land.lhs.true34
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %array, metadata !17318, metadata !DIExpression()), !dbg !17320
  %27 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17321
  %data39 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %27, i32 0, i32 7, !dbg !17321
  %pointer = getelementptr inbounds %struct.IDPropertyData, %struct.IDPropertyData* %data39, i32 0, i32 0, !dbg !17321
  %28 = load i8*, i8** %pointer, align 8, !dbg !17321
  %29 = bitcast i8* %28 to %struct.IDProperty*, !dbg !17321
  store %struct.IDProperty* %29, %struct.IDProperty** %array, align 8, !dbg !17320
  %30 = load %struct.IDProperty*, %struct.IDProperty** %needle.addr, align 8, !dbg !17322
  %31 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !17324
  %cmp40 = icmp uge %struct.IDProperty* %30, %31, !dbg !17325
  br i1 %cmp40, label %land.lhs.true42, label %if.else52, !dbg !17326

land.lhs.true42:                                  ; preds = %if.then38
  %32 = load %struct.IDProperty*, %struct.IDProperty** %needle.addr, align 8, !dbg !17327
  %33 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17328
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %33, i32 0, i32 8, !dbg !17329
  %34 = load i32, i32* %len, align 8, !dbg !17329
  %35 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !17330
  %idx.ext = sext i32 %34 to i64, !dbg !17331
  %add.ptr = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %35, i64 %idx.ext, !dbg !17331
  %cmp43 = icmp ult %struct.IDProperty* %32, %add.ptr, !dbg !17332
  br i1 %cmp43, label %if.then45, label %if.else52, !dbg !17333

if.then45:                                        ; preds = %land.lhs.true42
  %36 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17334
  %name46 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %36, i32 0, i32 5, !dbg !17336
  %arraydecay47 = getelementptr inbounds [64 x i8], [64 x i8]* %name46, i64 0, i64 0, !dbg !17334
  %name48 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 1, !dbg !17337
  store i8* %arraydecay47, i8** %name48, align 8, !dbg !17338
  %37 = load %struct.IDProperty*, %struct.IDProperty** %needle.addr, align 8, !dbg !17339
  %38 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !17340
  %sub.ptr.lhs.cast = ptrtoint %struct.IDProperty* %37 to i64, !dbg !17341
  %sub.ptr.rhs.cast = ptrtoint %struct.IDProperty* %38 to i64, !dbg !17341
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17341
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 128, !dbg !17341
  %conv49 = trunc i64 %sub.ptr.div to i32, !dbg !17342
  %index50 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 2, !dbg !17343
  store i32 %conv49, i32* %index50, align 8, !dbg !17344
  %call51 = call i8* @rna_idp_path_create(%struct.IDP_Chain* %link), !dbg !17345
  store i8* %call51, i8** %path, align 8, !dbg !17346
  br label %for.end82, !dbg !17347

if.else52:                                        ; preds = %land.lhs.true42, %if.then38
  call void @llvm.dbg.declare(metadata i32* %i53, metadata !17348, metadata !DIExpression()), !dbg !17350
  %39 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17351
  %name54 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %39, i32 0, i32 5, !dbg !17352
  %arraydecay55 = getelementptr inbounds [64 x i8], [64 x i8]* %name54, i64 0, i64 0, !dbg !17351
  %name56 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 1, !dbg !17353
  store i8* %arraydecay55, i8** %name56, align 8, !dbg !17354
  store i32 0, i32* %i53, align 4, !dbg !17355
  br label %for.cond57, !dbg !17357

for.cond57:                                       ; preds = %for.inc, %if.else52
  %40 = load i32, i32* %i53, align 4, !dbg !17358
  %41 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17360
  %len58 = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %41, i32 0, i32 8, !dbg !17361
  %42 = load i32, i32* %len58, align 8, !dbg !17361
  %cmp59 = icmp slt i32 %40, %42, !dbg !17362
  br i1 %cmp59, label %for.body61, label %for.end, !dbg !17363

for.body61:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %child_ptr62, metadata !17364, metadata !DIExpression()), !dbg !17366
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !17367
  %44 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop29, align 8, !dbg !17369
  %45 = load i32, i32* %i53, align 4, !dbg !17370
  %call63 = call i32 @RNA_property_collection_lookup_int(%struct.PointerRNA* %43, %struct.PropertyRNA* %44, i32 %45, %struct.PointerRNA* %child_ptr62), !dbg !17371
  %tobool64 = icmp ne i32 %call63, 0, !dbg !17371
  br i1 %tobool64, label %if.then65, label %if.end71, !dbg !17372

if.then65:                                        ; preds = %for.body61
  %46 = load i32, i32* %i53, align 4, !dbg !17373
  %index66 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %link, i32 0, i32 2, !dbg !17375
  store i32 %46, i32* %index66, align 8, !dbg !17376
  %47 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !17377
  %48 = load %struct.IDProperty*, %struct.IDProperty** %needle.addr, align 8, !dbg !17379
  %call67 = call i8* @rna_idp_path(%struct.PointerRNA* %child_ptr62, %struct.IDProperty* %47, %struct.IDProperty* %48, %struct.IDP_Chain* %link), !dbg !17380
  store i8* %call67, i8** %path, align 8, !dbg !17381
  %tobool68 = icmp ne i8* %call67, null, !dbg !17381
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !17382

if.then69:                                        ; preds = %if.then65
  br label %for.end, !dbg !17383

if.end70:                                         ; preds = %if.then65
  br label %if.end71, !dbg !17385

if.end71:                                         ; preds = %if.end70, %for.body61
  br label %for.inc, !dbg !17386

for.inc:                                          ; preds = %if.end71
  %49 = load i32, i32* %i53, align 4, !dbg !17387
  %inc = add nsw i32 %49, 1, !dbg !17387
  store i32 %inc, i32* %i53, align 4, !dbg !17387
  %50 = load %struct.IDProperty*, %struct.IDProperty** %array, align 8, !dbg !17388
  %incdec.ptr = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %50, i32 1, !dbg !17388
  store %struct.IDProperty* %incdec.ptr, %struct.IDProperty** %array, align 8, !dbg !17388
  br label %for.cond57, !dbg !17389, !llvm.loop !17390

for.end:                                          ; preds = %if.then69, %for.cond57
  %51 = load i8*, i8** %path, align 8, !dbg !17392
  %tobool72 = icmp ne i8* %51, null, !dbg !17392
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !17394

if.then73:                                        ; preds = %for.end
  br label %for.end82, !dbg !17395

if.end74:                                         ; preds = %for.end
  br label %if.end75

if.end75:                                         ; preds = %if.end74
  br label %if.end76, !dbg !17396

if.end76:                                         ; preds = %if.end75, %land.lhs.true34, %if.then28
  br label %if.end77, !dbg !17397

if.end77:                                         ; preds = %if.end76, %if.else23
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end22
  br label %if.end79

if.end79:                                         ; preds = %if.end78
  br label %for.inc80, !dbg !17398

for.inc80:                                        ; preds = %if.end79
  %52 = load %struct.IDProperty*, %struct.IDProperty** %iter, align 8, !dbg !17399
  %next = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %52, i32 0, i32 0, !dbg !17400
  %53 = load %struct.IDProperty*, %struct.IDProperty** %next, align 8, !dbg !17400
  store %struct.IDProperty* %53, %struct.IDProperty** %iter, align 8, !dbg !17401
  %54 = load i32, i32* %i, align 4, !dbg !17402
  %inc81 = add nsw i32 %54, 1, !dbg !17402
  store i32 %inc81, i32* %i, align 4, !dbg !17402
  br label %for.cond, !dbg !17403, !llvm.loop !17404

for.end82:                                        ; preds = %if.then73, %if.then45, %if.then21, %if.then, %for.cond
  %55 = load i8*, i8** %path, align 8, !dbg !17406
  ret i8* %55, !dbg !17407
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_idp_path_create(%struct.IDP_Chain* %child_link) #0 !dbg !17408 {
entry:
  %child_link.addr = alloca %struct.IDP_Chain*, align 8
  %dynstr = alloca %struct.DynStr*, align 8
  %path = alloca i8*, align 8
  %is_first = alloca i8, align 1
  %tot = alloca i32, align 4
  %link = alloca %struct.IDP_Chain*, align 8
  %link_prev = alloca %struct.IDP_Chain*, align 8
  %link_next = alloca %struct.IDP_Chain*, align 8
  store %struct.IDP_Chain* %child_link, %struct.IDP_Chain** %child_link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDP_Chain** %child_link.addr, metadata !17411, metadata !DIExpression()), !dbg !17412
  call void @llvm.dbg.declare(metadata %struct.DynStr** %dynstr, metadata !17413, metadata !DIExpression()), !dbg !17414
  %call = call %struct.DynStr* @BLI_dynstr_new(), !dbg !17415
  store %struct.DynStr* %call, %struct.DynStr** %dynstr, align 8, !dbg !17414
  call void @llvm.dbg.declare(metadata i8** %path, metadata !17416, metadata !DIExpression()), !dbg !17417
  call void @llvm.dbg.declare(metadata i8* %is_first, metadata !17418, metadata !DIExpression()), !dbg !17419
  store i8 1, i8* %is_first, align 1, !dbg !17419
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !17420, metadata !DIExpression()), !dbg !17421
  store i32 0, i32* %tot, align 4, !dbg !17421
  call void @llvm.dbg.declare(metadata %struct.IDP_Chain** %link, metadata !17422, metadata !DIExpression()), !dbg !17423
  %0 = load %struct.IDP_Chain*, %struct.IDP_Chain** %child_link.addr, align 8, !dbg !17424
  store %struct.IDP_Chain* %0, %struct.IDP_Chain** %link, align 8, !dbg !17423
  call void @llvm.dbg.declare(metadata %struct.IDP_Chain** %link_prev, metadata !17425, metadata !DIExpression()), !dbg !17426
  store %struct.IDP_Chain* null, %struct.IDP_Chain** %link_prev, align 8, !dbg !17427
  br label %while.cond, !dbg !17428

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17429
  %tobool = icmp ne %struct.IDP_Chain* %1, null, !dbg !17428
  br i1 %tobool, label %while.body, label %while.end, !dbg !17428

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.IDP_Chain** %link_next, metadata !17430, metadata !DIExpression()), !dbg !17432
  %2 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17433
  %up = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %2, i32 0, i32 0, !dbg !17434
  %3 = load %struct.IDP_Chain*, %struct.IDP_Chain** %up, align 8, !dbg !17434
  store %struct.IDP_Chain* %3, %struct.IDP_Chain** %link_next, align 8, !dbg !17432
  %4 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link_prev, align 8, !dbg !17435
  %5 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17436
  %up1 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %5, i32 0, i32 0, !dbg !17437
  store %struct.IDP_Chain* %4, %struct.IDP_Chain** %up1, align 8, !dbg !17438
  %6 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17439
  store %struct.IDP_Chain* %6, %struct.IDP_Chain** %link_prev, align 8, !dbg !17440
  %7 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link_next, align 8, !dbg !17441
  store %struct.IDP_Chain* %7, %struct.IDP_Chain** %link, align 8, !dbg !17442
  %8 = load i32, i32* %tot, align 4, !dbg !17443
  %inc = add nsw i32 %8, 1, !dbg !17443
  store i32 %inc, i32* %tot, align 4, !dbg !17443
  br label %while.cond, !dbg !17428, !llvm.loop !17444

while.end:                                        ; preds = %while.cond
  %9 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link_prev, align 8, !dbg !17446
  store %struct.IDP_Chain* %9, %struct.IDP_Chain** %link, align 8, !dbg !17448
  br label %for.cond, !dbg !17449

for.cond:                                         ; preds = %for.inc, %while.end
  %10 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17450
  %tobool2 = icmp ne %struct.IDP_Chain* %10, null, !dbg !17452
  br i1 %tobool2, label %for.body, label %for.end, !dbg !17452

for.body:                                         ; preds = %for.cond
  %11 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17453
  %index = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %11, i32 0, i32 2, !dbg !17456
  %12 = load i32, i32* %index, align 8, !dbg !17456
  %cmp = icmp sge i32 %12, 0, !dbg !17457
  br i1 %cmp, label %if.then, label %if.else, !dbg !17458

if.then:                                          ; preds = %for.body
  %13 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !17459
  %14 = load i8, i8* %is_first, align 1, !dbg !17461
  %conv = zext i8 %14 to i32, !dbg !17461
  %tobool3 = icmp ne i32 %conv, 0, !dbg !17461
  %15 = zext i1 %tobool3 to i64, !dbg !17461
  %cond = select i1 %tobool3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0), !dbg !17461
  %16 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17462
  %name = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %16, i32 0, i32 1, !dbg !17463
  %17 = load i8*, i8** %name, align 8, !dbg !17463
  %18 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17464
  %index4 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %18, i32 0, i32 2, !dbg !17465
  %19 = load i32, i32* %index4, align 8, !dbg !17465
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %13, i8* %cond, i8* %17, i32 %19), !dbg !17466
  br label %if.end, !dbg !17467

if.else:                                          ; preds = %for.body
  %20 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !17468
  %21 = load i8, i8* %is_first, align 1, !dbg !17470
  %conv5 = zext i8 %21 to i32, !dbg !17470
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !17470
  %22 = zext i1 %tobool6 to i64, !dbg !17470
  %cond7 = select i1 %tobool6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i64 0, i64 0), !dbg !17470
  %23 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17471
  %name8 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %23, i32 0, i32 1, !dbg !17472
  %24 = load i8*, i8** %name8, align 8, !dbg !17472
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %20, i8* %cond7, i8* %24), !dbg !17473
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i8 0, i8* %is_first, align 1, !dbg !17474
  br label %for.inc, !dbg !17475

for.inc:                                          ; preds = %if.end
  %25 = load %struct.IDP_Chain*, %struct.IDP_Chain** %link, align 8, !dbg !17476
  %up9 = getelementptr inbounds %struct.IDP_Chain, %struct.IDP_Chain* %25, i32 0, i32 0, !dbg !17477
  %26 = load %struct.IDP_Chain*, %struct.IDP_Chain** %up9, align 8, !dbg !17477
  store %struct.IDP_Chain* %26, %struct.IDP_Chain** %link, align 8, !dbg !17478
  br label %for.cond, !dbg !17479, !llvm.loop !17480

for.end:                                          ; preds = %for.cond
  %27 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !17482
  %call10 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %27), !dbg !17483
  store i8* %call10, i8** %path, align 8, !dbg !17484
  %28 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !17485
  call void @BLI_dynstr_free(%struct.DynStr* %28), !dbg !17486
  %29 = load i8*, i8** %path, align 8, !dbg !17487
  %30 = load i8, i8* %29, align 1, !dbg !17489
  %conv11 = zext i8 %30 to i32, !dbg !17489
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !17490
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !17491

if.then14:                                        ; preds = %for.end
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !17492
  %32 = load i8*, i8** %path, align 8, !dbg !17494
  call void %31(i8* %32), !dbg !17492
  store i8* null, i8** %path, align 8, !dbg !17495
  br label %if.end15, !dbg !17496

if.end15:                                         ; preds = %if.then14, %for.end
  %33 = load i8*, i8** %path, align 8, !dbg !17497
  ret i8* %33, !dbg !17498
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2818, !2819, !2820}
!llvm.ident = !{!2821}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "PointerRNA_NULL", scope: !2, file: !3, line: 69, type: !2633, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !985, globals: !2802, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/makesrna/intern/rna_access.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !16, !47, !56, !89, !939, !948, !960, !966, !973}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyType", file: !6, line: 71, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15}
!9 = !DIEnumerator(name: "PROP_BOOLEAN", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "PROP_INT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "PROP_FLOAT", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "PROP_STRING", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "PROP_ENUM", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "PROP_POINTER", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "PROP_COLLECTION", value: 6, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !6, line: 107, baseType: !7, size: 32, elements: !17)
!17 = !{!18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!18 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!19 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!22 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!23 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!25 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!26 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!27 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!28 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!29 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!30 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!31 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!32 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!33 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!34 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!35 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!36 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!37 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!38 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!39 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!40 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!41 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!42 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!43 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!44 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!45 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!46 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawPropertyType", file: !6, line: 286, baseType: !48, size: 32, elements: !49)
!48 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!49 = !{!50, !51, !52, !53, !54, !55}
!50 = !DIEnumerator(name: "PROP_RAW_UNSET", value: -1)
!51 = !DIEnumerator(name: "PROP_RAW_INT", value: 0)
!52 = !DIEnumerator(name: "PROP_RAW_SHORT", value: 1)
!53 = !DIEnumerator(name: "PROP_RAW_CHAR", value: 2)
!54 = !DIEnumerator(name: "PROP_RAW_DOUBLE", value: 3)
!55 = !DIEnumerator(name: "PROP_RAW_FLOAT", value: 4)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !6, line: 151, baseType: !7, size: 32, elements: !57)
!57 = !{!58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88}
!58 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!60 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!61 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!62 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!63 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!64 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!65 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!66 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!67 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!68 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!69 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!70 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!71 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!72 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!73 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!74 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!75 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!76 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!77 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!78 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!79 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!80 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!81 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!82 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!83 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!84 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!85 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!86 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!87 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!88 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 40, baseType: !7, size: 32, elements: !91)
!90 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!91 = !{!92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938}
!92 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!95 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!96 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!97 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!98 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!99 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!100 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!101 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!102 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!103 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!104 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!105 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!106 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!107 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!108 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!109 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!110 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!111 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!112 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!113 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!114 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!115 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!116 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!117 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!118 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!119 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!120 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!121 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!122 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!123 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!124 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!125 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!126 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!127 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!128 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!129 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!130 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!131 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!132 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!133 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!134 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!135 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!136 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!137 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!138 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!139 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!140 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!141 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!142 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!143 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!144 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!145 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!146 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!147 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!148 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!149 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!150 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!151 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!152 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!153 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!154 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!155 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!156 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!157 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!158 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!159 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!160 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!161 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!162 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!163 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!164 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!165 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!166 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!167 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!168 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!169 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!170 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!171 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!172 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!173 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!174 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!175 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!176 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!177 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!178 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!179 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!180 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!181 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!182 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!183 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!184 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!185 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!186 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!187 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!188 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!189 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!190 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!191 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!192 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!193 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!194 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!195 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!196 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!197 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!198 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!199 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!200 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!201 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!202 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!203 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!204 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!205 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!206 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!207 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!208 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!209 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!210 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!211 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!212 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!213 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!214 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!215 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!216 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!217 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!218 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!219 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!220 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!221 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!222 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!223 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!224 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!225 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!226 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!227 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!228 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!924 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!925 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!926 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!927 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!928 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!929 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!930 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!931 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!932 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!933 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!934 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!935 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!936 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!937 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!938 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!939 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "StructFlag", file: !6, line: 394, baseType: !7, size: 32, elements: !940)
!940 = !{!941, !942, !943, !944, !945, !946, !947}
!941 = !DIEnumerator(name: "STRUCT_ID", value: 1, isUnsigned: true)
!942 = !DIEnumerator(name: "STRUCT_ID_REFCOUNT", value: 2, isUnsigned: true)
!943 = !DIEnumerator(name: "STRUCT_UNDO", value: 4, isUnsigned: true)
!944 = !DIEnumerator(name: "STRUCT_RUNTIME", value: 8, isUnsigned: true)
!945 = !DIEnumerator(name: "STRUCT_GENERATED", value: 16, isUnsigned: true)
!946 = !DIEnumerator(name: "STRUCT_FREE_POINTERS", value: 32, isUnsigned: true)
!947 = !DIEnumerator(name: "STRUCT_NO_IDPROPERTIES", value: 64, isUnsigned: true)
!948 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyUnit", file: !6, line: 82, baseType: !7, size: 32, elements: !949)
!949 = !{!950, !951, !952, !953, !954, !955, !956, !957, !958, !959}
!950 = !DIEnumerator(name: "PROP_UNIT_NONE", value: 0, isUnsigned: true)
!951 = !DIEnumerator(name: "PROP_UNIT_LENGTH", value: 65536, isUnsigned: true)
!952 = !DIEnumerator(name: "PROP_UNIT_AREA", value: 131072, isUnsigned: true)
!953 = !DIEnumerator(name: "PROP_UNIT_VOLUME", value: 196608, isUnsigned: true)
!954 = !DIEnumerator(name: "PROP_UNIT_MASS", value: 262144, isUnsigned: true)
!955 = !DIEnumerator(name: "PROP_UNIT_ROTATION", value: 327680, isUnsigned: true)
!956 = !DIEnumerator(name: "PROP_UNIT_TIME", value: 393216, isUnsigned: true)
!957 = !DIEnumerator(name: "PROP_UNIT_VELOCITY", value: 458752, isUnsigned: true)
!958 = !DIEnumerator(name: "PROP_UNIT_ACCELERATION", value: 524288, isUnsigned: true)
!959 = !DIEnumerator(name: "PROP_UNIT_CAMERA", value: 589824, isUnsigned: true)
!960 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRNAEqualsMode", file: !961, line: 1156, baseType: !7, size: 32, elements: !962)
!961 = !DIFile(filename: "blender/source/blender/makesrna/RNA_access.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!962 = !{!963, !964, !965}
!963 = !DIEnumerator(name: "RNA_EQ_STRICT", value: 0, isUnsigned: true)
!964 = !DIEnumerator(name: "RNA_EQ_UNSET_MATCH_ANY", value: 1, isUnsigned: true)
!965 = !DIEnumerator(name: "RNA_EQ_UNSET_MATCH_NONE", value: 2, isUnsigned: true)
!966 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !967, line: 519, baseType: !7, size: 32, elements: !968)
!967 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!968 = !{!969, !970, !971, !972}
!969 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!970 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!971 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!972 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !974, line: 67, baseType: !7, size: 32, elements: !975)
!974 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!975 = !{!976, !977, !978, !979, !980, !981, !982, !983, !984}
!976 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!977 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!978 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!979 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!980 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!981 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!982 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!983 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!984 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!985 = !{!986, !48, !987, !1021, !2457, !2459, !2520, !1285, !2586, !2587, !2618, !2647, !2728, !1391, !2760, !2540, !1091, !1375, !2783, !1642, !2784, !2789, !2793, !2797, !1330, !996, !999, !1269, !2801, !1349}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !989, line: 75, baseType: !990)
!989 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !989, line: 62, size: 1024, elements: !991)
!991 = !{!992, !994, !995, !997, !998, !1000, !1004, !1005, !1019, !1020}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !990, file: !989, line: 63, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !990, file: !989, line: 63, baseType: !993, size: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !990, file: !989, line: 64, baseType: !996, size: 8, offset: 128)
!996 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !990, file: !989, line: 64, baseType: !996, size: 8, offset: 136)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !990, file: !989, line: 65, baseType: !999, size: 16, offset: 144)
!999 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !990, file: !989, line: 66, baseType: !1001, size: 512, offset: 160)
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 512, elements: !1002)
!1002 = !{!1003}
!1003 = !DISubrange(count: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !990, file: !989, line: 67, baseType: !48, size: 32, offset: 672)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !990, file: !989, line: 69, baseType: !1006, size: 256, offset: 704)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !989, line: 60, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !989, line: 48, size: 256, elements: !1008)
!1008 = !{!1009, !1010, !1017, !1018}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1007, file: !989, line: 49, baseType: !986, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1007, file: !989, line: 58, baseType: !1011, size: 128, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1012, line: 71, baseType: !1013)
!1012 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1012, line: 69, size: 128, elements: !1014)
!1014 = !{!1015, !1016}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1013, file: !1012, line: 70, baseType: !986, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1013, file: !1012, line: 70, baseType: !986, size: 64, offset: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1007, file: !989, line: 59, baseType: !48, size: 32, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1007, file: !989, line: 59, baseType: !48, size: 32, offset: 224)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !990, file: !989, line: 70, baseType: !48, size: 32, offset: 960)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !990, file: !989, line: 74, baseType: !48, size: 32, offset: 992)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !6, line: 333, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !1024, line: 157, size: 1344, elements: !1025)
!1024 = !DIFile(filename: "blender/source/blender/makesrna/intern/rna_internal_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1025 = !{!1026, !1028, !1029, !1030, !1033, !1034, !1035, !1036, !1037, !1038, !1040, !1042, !1384, !1385, !1389, !1390, !2441, !2442, !2447, !2452, !2453, !2455, !2456}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1023, file: !1024, line: 158, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1023, file: !1024, line: 158, baseType: !1027, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1023, file: !1024, line: 161, baseType: !48, size: 32, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1023, file: !1024, line: 164, baseType: !1031, size: 64, offset: 192)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1023, file: !1024, line: 166, baseType: !48, size: 32, offset: 256)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1023, file: !1024, line: 169, baseType: !1031, size: 64, offset: 320)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1023, file: !1024, line: 171, baseType: !1031, size: 64, offset: 384)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !1023, file: !1024, line: 173, baseType: !48, size: 32, offset: 448)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !1023, file: !1024, line: 175, baseType: !1031, size: 64, offset: 512)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1023, file: !1024, line: 178, baseType: !1039, size: 32, offset: 576)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyType", file: !6, line: 79, baseType: !5)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1023, file: !1024, line: 180, baseType: !1041, size: 32, offset: 608)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertySubType", file: !6, line: 147, baseType: !16)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "getlength", scope: !1023, file: !1024, line: 182, baseType: !1043, size: 64, offset: 640)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropArrayLengthGetFunc", file: !1024, line: 73, baseType: !1044)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!48, !1047, !1330}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !6, line: 55, size: 192, elements: !1049)
!1049 = !{!1050, !1054, !1383}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1048, file: !6, line: 58, baseType: !1051, size: 64)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1048, file: !6, line: 56, size: 64, elements: !1052)
!1052 = !{!1053}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1051, file: !6, line: 57, baseType: !986, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1048, file: !6, line: 60, baseType: !1055, size: 64, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1024, line: 339, size: 1600, elements: !1057)
!1057 = !{!1058, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1086, !1092, !1365, !1370, !1376, !1382}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !1056, file: !1024, line: 341, baseType: !1059, size: 320)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContainerRNA", file: !1024, line: 135, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ContainerRNA", file: !1024, line: 130, size: 320, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1068}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1060, file: !1024, line: 131, baseType: !986, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1060, file: !1024, line: 131, baseType: !986, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "prophash", scope: !1060, file: !1024, line: 133, baseType: !1065, size: 64, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1067, line: 48, flags: DIFlagFwdDecl)
!1067 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1060, file: !1024, line: 134, baseType: !1011, size: 128, offset: 192)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1056, file: !1024, line: 344, baseType: !1031, size: 64, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "py_type", scope: !1056, file: !1024, line: 348, baseType: !986, size: 64, offset: 384)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "blender_type", scope: !1056, file: !1024, line: 349, baseType: !986, size: 64, offset: 448)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1056, file: !1024, line: 352, baseType: !48, size: 32, offset: 512)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1056, file: !1024, line: 355, baseType: !1031, size: 64, offset: 576)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1056, file: !1024, line: 357, baseType: !1031, size: 64, offset: 640)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !1056, file: !1024, line: 359, baseType: !1031, size: 64, offset: 704)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !1056, file: !1024, line: 361, baseType: !48, size: 32, offset: 768)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "nameproperty", scope: !1056, file: !1024, line: 364, baseType: !1021, size: 64, offset: 832)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "iteratorproperty", scope: !1056, file: !1024, line: 367, baseType: !1021, size: 64, offset: 896)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1056, file: !1024, line: 370, baseType: !1055, size: 64, offset: 960)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1056, file: !1024, line: 376, baseType: !1055, size: 64, offset: 1024)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "refine", scope: !1056, file: !1024, line: 379, baseType: !1082, size: 64, offset: 1088)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRefineFunc", file: !1024, line: 70, baseType: !1083)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!1055, !1047}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1056, file: !1024, line: 382, baseType: !1087, size: 64, offset: 1152)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructPathFunc", file: !1024, line: 71, baseType: !1088)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!1091, !1047}
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1056, file: !1024, line: 385, baseType: !1093, size: 64, offset: 1216)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRegisterFunc", file: !6, line: 410, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!1055, !1097, !1202, !986, !1031, !1326, !1331, !1361}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !1099, line: 53, size: 15232, elements: !1100)
!1099 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1100 = !{!1101, !1102, !1103, !1107, !1108, !1109, !1110, !1111, !1117, !1121, !1122, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1193, !1199}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1098, file: !1099, line: 54, baseType: !1097, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1098, file: !1099, line: 54, baseType: !1097, size: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1098, file: !1099, line: 55, baseType: !1104, size: 8192, offset: 128)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 8192, elements: !1105)
!1105 = !{!1106}
!1106 = !DISubrange(count: 1024)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !1098, file: !1099, line: 56, baseType: !999, size: 16, offset: 8320)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !1098, file: !1099, line: 56, baseType: !999, size: 16, offset: 8336)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !1098, file: !1099, line: 57, baseType: !999, size: 16, offset: 8352)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !1098, file: !1099, line: 57, baseType: !999, size: 16, offset: 8368)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !1098, file: !1099, line: 58, baseType: !1112, size: 64, offset: 8384)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1113, line: 27, baseType: !1114)
!1113 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1115, line: 45, baseType: !1116)
!1115 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1116 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !1098, file: !1099, line: 59, baseType: !1118, size: 128, offset: 8448)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 128, elements: !1119)
!1119 = !{!1120}
!1120 = !DISubrange(count: 16)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !1098, file: !1099, line: 60, baseType: !999, size: 16, offset: 8576)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !1098, file: !1099, line: 62, baseType: !1123, size: 64, offset: 8640)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !989, line: 136, size: 17600, elements: !1125)
!1125 = !{!1126, !1144, !1146, !1149, !1150, !1151, !1152}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1124, file: !989, line: 137, baseType: !1127, size: 960)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !989, line: 130, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !989, line: 117, size: 960, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1134, !1135, !1139, !1140, !1141, !1142, !1143}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1128, file: !989, line: 118, baseType: !986, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1128, file: !989, line: 118, baseType: !986, size: 64, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1128, file: !989, line: 119, baseType: !1133, size: 64, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1128, file: !989, line: 120, baseType: !1123, size: 64, offset: 192)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1128, file: !989, line: 121, baseType: !1136, size: 528, offset: 256)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 528, elements: !1137)
!1137 = !{!1138}
!1138 = !DISubrange(count: 66)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1128, file: !989, line: 126, baseType: !999, size: 16, offset: 784)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1128, file: !989, line: 127, baseType: !48, size: 32, offset: 800)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1128, file: !989, line: 128, baseType: !48, size: 32, offset: 832)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1128, file: !989, line: 128, baseType: !48, size: 32, offset: 864)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1128, file: !989, line: 129, baseType: !987, size: 64, offset: 896)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1124, file: !989, line: 138, baseType: !1145, size: 64, offset: 960)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1124, file: !989, line: 139, baseType: !1147, size: 64, offset: 1024)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !989, line: 43, flags: DIFlagFwdDecl)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1124, file: !989, line: 140, baseType: !1104, size: 8192, offset: 1088)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1124, file: !989, line: 141, baseType: !1104, size: 8192, offset: 9280)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1124, file: !989, line: 148, baseType: !1123, size: 64, offset: 17472)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1124, file: !989, line: 150, baseType: !1153, size: 64, offset: 17536)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !989, line: 45, flags: DIFlagFwdDecl)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1098, file: !1099, line: 63, baseType: !1011, size: 128, offset: 8704)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !1098, file: !1099, line: 64, baseType: !1011, size: 128, offset: 8832)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1098, file: !1099, line: 65, baseType: !1011, size: 128, offset: 8960)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !1098, file: !1099, line: 66, baseType: !1011, size: 128, offset: 9088)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1098, file: !1099, line: 67, baseType: !1011, size: 128, offset: 9216)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !1098, file: !1099, line: 68, baseType: !1011, size: 128, offset: 9344)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1098, file: !1099, line: 69, baseType: !1011, size: 128, offset: 9472)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1098, file: !1099, line: 70, baseType: !1011, size: 128, offset: 9600)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1098, file: !1099, line: 71, baseType: !1011, size: 128, offset: 9728)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !1098, file: !1099, line: 72, baseType: !1011, size: 128, offset: 9856)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !1098, file: !1099, line: 73, baseType: !1011, size: 128, offset: 9984)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1098, file: !1099, line: 74, baseType: !1011, size: 128, offset: 10112)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1098, file: !1099, line: 75, baseType: !1011, size: 128, offset: 10240)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1098, file: !1099, line: 76, baseType: !1011, size: 128, offset: 10368)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1098, file: !1099, line: 77, baseType: !1011, size: 128, offset: 10496)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1098, file: !1099, line: 78, baseType: !1011, size: 128, offset: 10624)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !1098, file: !1099, line: 79, baseType: !1011, size: 128, offset: 10752)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !1098, file: !1099, line: 80, baseType: !1011, size: 128, offset: 10880)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1098, file: !1099, line: 81, baseType: !1011, size: 128, offset: 11008)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !1098, file: !1099, line: 82, baseType: !1011, size: 128, offset: 11136)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1098, file: !1099, line: 83, baseType: !1011, size: 128, offset: 11264)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1098, file: !1099, line: 84, baseType: !1011, size: 128, offset: 11392)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !1098, file: !1099, line: 85, baseType: !1011, size: 128, offset: 11520)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1098, file: !1099, line: 86, baseType: !1011, size: 128, offset: 11648)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1098, file: !1099, line: 87, baseType: !1011, size: 128, offset: 11776)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1098, file: !1099, line: 88, baseType: !1011, size: 128, offset: 11904)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1098, file: !1099, line: 89, baseType: !1011, size: 128, offset: 12032)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !1098, file: !1099, line: 90, baseType: !1011, size: 128, offset: 12160)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !1098, file: !1099, line: 91, baseType: !1011, size: 128, offset: 12288)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !1098, file: !1099, line: 92, baseType: !1011, size: 128, offset: 12416)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !1098, file: !1099, line: 93, baseType: !1011, size: 128, offset: 12544)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !1098, file: !1099, line: 94, baseType: !1011, size: 128, offset: 12672)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1098, file: !1099, line: 95, baseType: !1011, size: 128, offset: 12800)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !1098, file: !1099, line: 96, baseType: !1011, size: 128, offset: 12928)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !1098, file: !1099, line: 98, baseType: !1190, size: 2048, offset: 13056)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 2048, elements: !1191)
!1191 = !{!1192}
!1192 = !DISubrange(count: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !1098, file: !1099, line: 101, baseType: !1194, size: 64, offset: 15104)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !1196, line: 58, size: 32, elements: !1197)
!1196 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1197 = !{!1198}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1195, file: !1196, line: 59, baseType: !48, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1098, file: !1099, line: 103, baseType: !1200, size: 64, offset: 15168)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !1099, line: 51, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !974, line: 106, size: 320, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1208, !1209, !1210}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1203, file: !974, line: 107, baseType: !1011, size: 128)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !1203, file: !974, line: 108, baseType: !48, size: 32, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !1203, file: !974, line: 109, baseType: !48, size: 32, offset: 160)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1203, file: !974, line: 110, baseType: !48, size: 32, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1203, file: !974, line: 110, baseType: !48, size: 32, offset: 224)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !1203, file: !974, line: 111, baseType: !1211, size: 64, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1213, line: 490, size: 768, elements: !1214)
!1213 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1214 = !{!1215, !1216, !1217, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1212, file: !1213, line: 491, baseType: !1211, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1212, file: !1213, line: 491, baseType: !1211, size: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1212, file: !1213, line: 493, baseType: !1218, size: 64, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !974, line: 169, size: 2048, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1292, !1295, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1219, file: !974, line: 170, baseType: !1218, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1219, file: !974, line: 170, baseType: !1218, size: 64, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !1219, file: !974, line: 172, baseType: !986, size: 64, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1219, file: !974, line: 174, baseType: !1225, size: 64, offset: 192)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !974, line: 53, flags: DIFlagFwdDecl)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !1219, file: !974, line: 175, baseType: !1225, size: 64, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !1219, file: !974, line: 176, baseType: !1001, size: 512, offset: 320)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !1219, file: !974, line: 178, baseType: !999, size: 16, offset: 832)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !1219, file: !974, line: 178, baseType: !999, size: 16, offset: 848)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1219, file: !974, line: 178, baseType: !999, size: 16, offset: 864)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1219, file: !974, line: 178, baseType: !999, size: 16, offset: 880)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !1219, file: !974, line: 179, baseType: !999, size: 16, offset: 896)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !1219, file: !974, line: 180, baseType: !999, size: 16, offset: 912)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1219, file: !974, line: 181, baseType: !999, size: 16, offset: 928)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1219, file: !974, line: 182, baseType: !999, size: 16, offset: 944)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !1219, file: !974, line: 183, baseType: !999, size: 16, offset: 960)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !1219, file: !974, line: 184, baseType: !999, size: 16, offset: 976)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !1219, file: !974, line: 185, baseType: !999, size: 16, offset: 992)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !1219, file: !974, line: 186, baseType: !999, size: 16, offset: 1008)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1219, file: !974, line: 188, baseType: !48, size: 32, offset: 1024)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !1219, file: !974, line: 190, baseType: !999, size: 16, offset: 1056)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !1219, file: !974, line: 191, baseType: !999, size: 16, offset: 1072)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !1219, file: !974, line: 194, baseType: !1245, size: 64, offset: 1088)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !1213, line: 421, size: 960, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252, !1253, !1254, !1258, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1288, !1289, !1290, !1291}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !1213, line: 422, baseType: !1245, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1246, file: !1213, line: 422, baseType: !1245, size: 64, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1246, file: !1213, line: 424, baseType: !999, size: 16, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1246, file: !1213, line: 425, baseType: !999, size: 16, offset: 144)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1246, file: !1213, line: 426, baseType: !48, size: 32, offset: 160)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1246, file: !1213, line: 426, baseType: !48, size: 32, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !1246, file: !1213, line: 427, baseType: !1255, size: 64, offset: 224)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 64, elements: !1256)
!1256 = !{!1257}
!1257 = !DISubrange(count: 2)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !1246, file: !1213, line: 428, baseType: !1259, size: 48, offset: 288)
!1259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 48, elements: !1260)
!1260 = !{!1261}
!1261 = !DISubrange(count: 6)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !1246, file: !1213, line: 431, baseType: !996, size: 8, offset: 336)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1246, file: !1213, line: 432, baseType: !996, size: 8, offset: 344)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !1246, file: !1213, line: 435, baseType: !999, size: 16, offset: 352)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !1246, file: !1213, line: 436, baseType: !999, size: 16, offset: 368)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !1246, file: !1213, line: 437, baseType: !48, size: 32, offset: 384)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !1246, file: !1213, line: 437, baseType: !48, size: 32, offset: 416)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !1246, file: !1213, line: 438, baseType: !1269, size: 64, offset: 448)
!1269 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !1246, file: !1213, line: 439, baseType: !48, size: 32, offset: 512)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !1246, file: !1213, line: 439, baseType: !48, size: 32, offset: 544)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1246, file: !1213, line: 442, baseType: !999, size: 16, offset: 576)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1246, file: !1213, line: 442, baseType: !999, size: 16, offset: 592)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1246, file: !1213, line: 442, baseType: !999, size: 16, offset: 608)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !1246, file: !1213, line: 442, baseType: !999, size: 16, offset: 624)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !1246, file: !1213, line: 443, baseType: !999, size: 16, offset: 640)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !1246, file: !1213, line: 446, baseType: !999, size: 16, offset: 656)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !1246, file: !1213, line: 449, baseType: !1031, size: 64, offset: 704)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !1246, file: !1213, line: 452, baseType: !1280, size: 64, offset: 768)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !1213, line: 463, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1286, !1287}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !1281, file: !1213, line: 464, baseType: !48, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !1281, file: !1213, line: 465, baseType: !1285, size: 32, offset: 32)
!1285 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !1281, file: !1213, line: 466, baseType: !1285, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !1281, file: !1213, line: 467, baseType: !1285, size: 32, offset: 96)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1246, file: !1213, line: 455, baseType: !999, size: 16, offset: 832)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !1246, file: !1213, line: 456, baseType: !999, size: 16, offset: 848)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1246, file: !1213, line: 457, baseType: !48, size: 32, offset: 864)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1246, file: !1213, line: 458, baseType: !986, size: 64, offset: 896)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !1219, file: !974, line: 196, baseType: !1293, size: 64, offset: 1152)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !974, line: 55, flags: DIFlagFwdDecl)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !1219, file: !974, line: 198, baseType: !1296, size: 64, offset: 1216)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !1213, line: 398, size: 448, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1297, file: !1213, line: 399, baseType: !1296, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1297, file: !1213, line: 399, baseType: !1296, size: 64, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1297, file: !1213, line: 400, baseType: !48, size: 32, offset: 128)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1297, file: !1213, line: 401, baseType: !48, size: 32, offset: 160)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1297, file: !1213, line: 402, baseType: !48, size: 32, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1297, file: !1213, line: 403, baseType: !48, size: 32, offset: 224)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1297, file: !1213, line: 404, baseType: !48, size: 32, offset: 256)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1297, file: !1213, line: 405, baseType: !48, size: 32, offset: 288)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1297, file: !1213, line: 407, baseType: !986, size: 64, offset: 320)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1297, file: !1213, line: 414, baseType: !986, size: 64, offset: 384)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !1219, file: !974, line: 200, baseType: !48, size: 32, offset: 1280)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !1219, file: !974, line: 200, baseType: !48, size: 32, offset: 1312)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !1219, file: !974, line: 201, baseType: !986, size: 64, offset: 1344)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1219, file: !974, line: 203, baseType: !1011, size: 128, offset: 1408)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1219, file: !974, line: 204, baseType: !1011, size: 128, offset: 1536)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !1219, file: !974, line: 205, baseType: !1011, size: 128, offset: 1664)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !1219, file: !974, line: 207, baseType: !1011, size: 128, offset: 1792)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !1219, file: !974, line: 208, baseType: !1011, size: 128, offset: 1920)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !1212, file: !1213, line: 495, baseType: !1269, size: 64, offset: 192)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1212, file: !1213, line: 496, baseType: !48, size: 32, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1212, file: !1213, line: 497, baseType: !986, size: 64, offset: 320)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1212, file: !1213, line: 499, baseType: !1269, size: 64, offset: 384)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1212, file: !1213, line: 500, baseType: !1269, size: 64, offset: 448)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !1212, file: !1213, line: 502, baseType: !1269, size: 64, offset: 512)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !1212, file: !1213, line: 503, baseType: !1269, size: 64, offset: 576)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1212, file: !1213, line: 504, baseType: !1269, size: 64, offset: 640)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !1212, file: !1213, line: 505, baseType: !48, size: 32, offset: 704)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructValidateFunc", file: !6, line: 407, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!48, !1047, !986, !1330}
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !6, line: 408, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!48, !1335, !1047, !1337, !1351}
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !974, line: 51, flags: DIFlagFwdDecl)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !1024, line: 137, size: 640, elements: !1339)
!1339 = !{!1340, !1341, !1342, !1343, !1344, !1360}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !1338, file: !1024, line: 139, baseType: !1059, size: 320)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1338, file: !1024, line: 142, baseType: !1031, size: 64, offset: 320)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1338, file: !1024, line: 144, baseType: !48, size: 32, offset: 384)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1338, file: !1024, line: 147, baseType: !1031, size: 64, offset: 448)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1338, file: !1024, line: 150, baseType: !1345, size: 64, offset: 512)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "CallFunc", file: !6, line: 388, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{null, !1335, !1202, !1349, !1351}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !6, line: 62, baseType: !1048)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !6, line: 348, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !6, line: 337, size: 256, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1353, file: !6, line: 339, baseType: !986, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1353, file: !6, line: 342, baseType: !1337, size: 64, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1353, file: !6, line: 345, baseType: !48, size: 32, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1353, file: !6, line: 347, baseType: !48, size: 32, offset: 160)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1353, file: !6, line: 347, baseType: !48, size: 32, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "c_ret", scope: !1338, file: !1024, line: 154, baseType: !1021, size: 64, offset: 576)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !6, line: 409, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{null, !986}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "unreg", scope: !1056, file: !1024, line: 386, baseType: !1366, size: 64, offset: 1280)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructUnregisterFunc", file: !6, line: 414, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{null, !1097, !1055}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !1056, file: !1024, line: 387, baseType: !1371, size: 64, offset: 1344)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructInstanceFunc", file: !6, line: 415, baseType: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{!1375, !1349}
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "idproperties", scope: !1056, file: !1024, line: 390, baseType: !1377, size: 64, offset: 1408)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertiesFunc", file: !1024, line: 69, baseType: !1378)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!993, !1047, !1381}
!1381 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "functions", scope: !1056, file: !1024, line: 393, baseType: !1011, size: 128, offset: 1472)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1048, file: !6, line: 61, baseType: !986, size: 64, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "arraydimension", scope: !1023, file: !1024, line: 184, baseType: !7, size: 32, offset: 704)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "arraylength", scope: !1023, file: !1024, line: 186, baseType: !1386, size: 96, offset: 736)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !1387)
!1387 = !{!1388}
!1388 = !DISubrange(count: 3)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "totarraylength", scope: !1023, file: !1024, line: 187, baseType: !7, size: 32, offset: 832)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1023, file: !1024, line: 190, baseType: !1391, size: 64, offset: 896)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "UpdateFunc", file: !1024, line: 64, baseType: !1392)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{null, !1097, !1395, !1047}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1397, line: 1216, size: 39680, elements: !1398)
!1397 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1398 = !{!1399, !1400, !1403, !1683, !1686, !1687, !1688, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1714, !1717, !1720, !2015, !2018, !2314, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2336, !2337, !2338, !2339, !2340, !2348, !2415, !2422, !2423, !2430, !2433, !2434, !2435, !2436, !2437, !2438}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1396, file: !1397, line: 1217, baseType: !1127, size: 960)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1396, file: !1397, line: 1218, baseType: !1401, size: 64, offset: 960)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1397, line: 58, flags: DIFlagFwdDecl)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1396, file: !1397, line: 1220, baseType: !1404, size: 64, offset: 1024)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !967, line: 115, size: 11392, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1427, !1437, !1451, !1452, !1492, !1493, !1496, !1497, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1538, !1539, !1540, !1541, !1542, !1543, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1614, !1617, !1621, !1622, !1623, !1624, !1625, !1628, !1631, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1643, !1646, !1649, !1651, !1671, !1672}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1405, file: !967, line: 116, baseType: !1127, size: 960)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1405, file: !967, line: 117, baseType: !1401, size: 64, offset: 960)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1405, file: !967, line: 119, baseType: !1410, size: 64, offset: 1024)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !967, line: 57, flags: DIFlagFwdDecl)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1405, file: !967, line: 121, baseType: !999, size: 16, offset: 1088)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1405, file: !967, line: 121, baseType: !999, size: 16, offset: 1104)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1405, file: !967, line: 122, baseType: !48, size: 32, offset: 1120)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1405, file: !967, line: 122, baseType: !48, size: 32, offset: 1152)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1405, file: !967, line: 122, baseType: !48, size: 32, offset: 1184)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1405, file: !967, line: 123, baseType: !1001, size: 512, offset: 1216)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1405, file: !967, line: 124, baseType: !1404, size: 64, offset: 1728)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1405, file: !967, line: 124, baseType: !1404, size: 64, offset: 1792)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1405, file: !967, line: 127, baseType: !1404, size: 64, offset: 1856)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1405, file: !967, line: 127, baseType: !1404, size: 64, offset: 1920)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1405, file: !967, line: 127, baseType: !1404, size: 64, offset: 1984)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1405, file: !967, line: 128, baseType: !1424, size: 64, offset: 2048)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1426, line: 44, flags: DIFlagFwdDecl)
!1426 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1405, file: !967, line: 130, baseType: !1428, size: 64, offset: 2112)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !967, line: 97, size: 832, elements: !1430)
!1430 = !{!1431, !1435, !1436}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1429, file: !967, line: 98, baseType: !1432, size: 768)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1285, size: 768, elements: !1433)
!1433 = !{!1434, !1388}
!1434 = !DISubrange(count: 8)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1429, file: !967, line: 99, baseType: !48, size: 32, offset: 768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1429, file: !967, line: 99, baseType: !48, size: 32, offset: 800)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1405, file: !967, line: 131, baseType: !1438, size: 64, offset: 2176)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1440, line: 486, size: 1600, elements: !1441)
!1440 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1441 = !{!1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1439, file: !1440, line: 487, baseType: !1127, size: 960)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1439, file: !1440, line: 489, baseType: !1011, size: 128, offset: 960)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1439, file: !1440, line: 490, baseType: !1011, size: 128, offset: 1088)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1439, file: !1440, line: 491, baseType: !1011, size: 128, offset: 1216)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1439, file: !1440, line: 492, baseType: !1011, size: 128, offset: 1344)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1439, file: !1440, line: 494, baseType: !48, size: 32, offset: 1472)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1439, file: !1440, line: 495, baseType: !48, size: 32, offset: 1504)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1439, file: !1440, line: 497, baseType: !48, size: 32, offset: 1536)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1439, file: !1440, line: 498, baseType: !48, size: 32, offset: 1568)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1405, file: !967, line: 132, baseType: !1438, size: 64, offset: 2240)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1405, file: !967, line: 133, baseType: !1453, size: 64, offset: 2304)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1440, line: 334, size: 1728, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1491}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1454, file: !1440, line: 335, baseType: !1011, size: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1454, file: !1440, line: 336, baseType: !1065, size: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1454, file: !1440, line: 338, baseType: !999, size: 16, offset: 192)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1454, file: !1440, line: 338, baseType: !999, size: 16, offset: 208)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1454, file: !1440, line: 339, baseType: !7, size: 32, offset: 224)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1454, file: !1440, line: 340, baseType: !48, size: 32, offset: 256)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1454, file: !1440, line: 342, baseType: !1285, size: 32, offset: 288)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1454, file: !1440, line: 343, baseType: !1464, size: 96, offset: 320)
!1464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1285, size: 96, elements: !1387)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1454, file: !1440, line: 344, baseType: !1464, size: 96, offset: 416)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1454, file: !1440, line: 347, baseType: !1011, size: 128, offset: 512)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1454, file: !1440, line: 349, baseType: !48, size: 32, offset: 640)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1454, file: !1440, line: 350, baseType: !48, size: 32, offset: 672)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1454, file: !1440, line: 351, baseType: !986, size: 64, offset: 704)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1454, file: !1440, line: 352, baseType: !986, size: 64, offset: 768)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1454, file: !1440, line: 354, baseType: !1472, size: 384, offset: 832)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1440, line: 116, baseType: !1473)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1440, line: 94, size: 384, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1473, file: !1440, line: 96, baseType: !48, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1473, file: !1440, line: 96, baseType: !48, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1473, file: !1440, line: 97, baseType: !48, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1473, file: !1440, line: 97, baseType: !48, size: 32, offset: 96)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1473, file: !1440, line: 99, baseType: !999, size: 16, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1473, file: !1440, line: 100, baseType: !999, size: 16, offset: 144)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1473, file: !1440, line: 102, baseType: !999, size: 16, offset: 160)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1473, file: !1440, line: 105, baseType: !999, size: 16, offset: 176)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1473, file: !1440, line: 108, baseType: !999, size: 16, offset: 192)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1473, file: !1440, line: 109, baseType: !999, size: 16, offset: 208)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1473, file: !1440, line: 111, baseType: !999, size: 16, offset: 224)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1473, file: !1440, line: 112, baseType: !999, size: 16, offset: 240)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1473, file: !1440, line: 114, baseType: !48, size: 32, offset: 256)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1473, file: !1440, line: 114, baseType: !48, size: 32, offset: 288)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1473, file: !1440, line: 115, baseType: !48, size: 32, offset: 320)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1473, file: !1440, line: 115, baseType: !48, size: 32, offset: 352)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1454, file: !1440, line: 355, baseType: !1001, size: 512, offset: 1216)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1405, file: !967, line: 134, baseType: !986, size: 64, offset: 2368)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1405, file: !967, line: 136, baseType: !1494, size: 64, offset: 2432)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1397, line: 61, flags: DIFlagFwdDecl)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1405, file: !967, line: 138, baseType: !1472, size: 384, offset: 2496)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1405, file: !967, line: 139, baseType: !1498, size: 64, offset: 2880)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1440, line: 80, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1440, line: 72, size: 192, elements: !1501)
!1501 = !{!1502, !1509, !1510, !1511, !1512}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1500, file: !1440, line: 73, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1440, line: 59, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1440, line: 56, size: 128, elements: !1506)
!1506 = !{!1507, !1508}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1505, file: !1440, line: 57, baseType: !1464, size: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1505, file: !1440, line: 58, baseType: !48, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1500, file: !1440, line: 74, baseType: !48, size: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1500, file: !1440, line: 76, baseType: !48, size: 32, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1500, file: !1440, line: 77, baseType: !48, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1500, file: !1440, line: 79, baseType: !48, size: 32, offset: 160)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1405, file: !967, line: 141, baseType: !1011, size: 128, offset: 2944)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1405, file: !967, line: 142, baseType: !1011, size: 128, offset: 3072)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1405, file: !967, line: 143, baseType: !1011, size: 128, offset: 3200)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1405, file: !967, line: 144, baseType: !1011, size: 128, offset: 3328)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1405, file: !967, line: 146, baseType: !48, size: 32, offset: 3456)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1405, file: !967, line: 147, baseType: !48, size: 32, offset: 3488)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1405, file: !967, line: 150, baseType: !1520, size: 64, offset: 3520)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !1397, line: 179, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1405, file: !967, line: 151, baseType: !1091, size: 64, offset: 3584)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1405, file: !967, line: 152, baseType: !48, size: 32, offset: 3648)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1405, file: !967, line: 153, baseType: !48, size: 32, offset: 3680)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1405, file: !967, line: 156, baseType: !1464, size: 96, offset: 3712)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1405, file: !967, line: 156, baseType: !1464, size: 96, offset: 3808)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1405, file: !967, line: 156, baseType: !1464, size: 96, offset: 3904)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1405, file: !967, line: 157, baseType: !1464, size: 96, offset: 4000)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1405, file: !967, line: 158, baseType: !1464, size: 96, offset: 4096)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1405, file: !967, line: 159, baseType: !1464, size: 96, offset: 4192)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1405, file: !967, line: 160, baseType: !1464, size: 96, offset: 4288)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1405, file: !967, line: 160, baseType: !1464, size: 96, offset: 4384)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1405, file: !967, line: 161, baseType: !1535, size: 128, offset: 4480)
!1535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1285, size: 128, elements: !1536)
!1536 = !{!1537}
!1537 = !DISubrange(count: 4)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1405, file: !967, line: 161, baseType: !1535, size: 128, offset: 4608)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1405, file: !967, line: 162, baseType: !1464, size: 96, offset: 4736)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1405, file: !967, line: 162, baseType: !1464, size: 96, offset: 4832)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1405, file: !967, line: 163, baseType: !1285, size: 32, offset: 4928)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1405, file: !967, line: 163, baseType: !1285, size: 32, offset: 4960)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1405, file: !967, line: 164, baseType: !1544, size: 512, offset: 4992)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1285, size: 512, elements: !1545)
!1545 = !{!1537, !1537}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1405, file: !967, line: 165, baseType: !1544, size: 512, offset: 5504)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1405, file: !967, line: 166, baseType: !1544, size: 512, offset: 6016)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1405, file: !967, line: 167, baseType: !1544, size: 512, offset: 6528)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1405, file: !967, line: 176, baseType: !1544, size: 512, offset: 7040)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1405, file: !967, line: 178, baseType: !7, size: 32, offset: 7552)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1405, file: !967, line: 180, baseType: !999, size: 16, offset: 7584)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1405, file: !967, line: 181, baseType: !999, size: 16, offset: 7600)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1405, file: !967, line: 183, baseType: !999, size: 16, offset: 7616)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1405, file: !967, line: 183, baseType: !999, size: 16, offset: 7632)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1405, file: !967, line: 184, baseType: !999, size: 16, offset: 7648)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1405, file: !967, line: 184, baseType: !999, size: 16, offset: 7664)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1405, file: !967, line: 185, baseType: !999, size: 16, offset: 7680)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1405, file: !967, line: 186, baseType: !999, size: 16, offset: 7696)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1405, file: !967, line: 187, baseType: !999, size: 16, offset: 7712)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1405, file: !967, line: 188, baseType: !996, size: 8, offset: 7728)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1405, file: !967, line: 189, baseType: !996, size: 8, offset: 7736)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1405, file: !967, line: 192, baseType: !48, size: 32, offset: 7744)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1405, file: !967, line: 192, baseType: !48, size: 32, offset: 7776)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1405, file: !967, line: 192, baseType: !48, size: 32, offset: 7808)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1405, file: !967, line: 192, baseType: !48, size: 32, offset: 7840)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1405, file: !967, line: 194, baseType: !48, size: 32, offset: 7872)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1405, file: !967, line: 202, baseType: !1285, size: 32, offset: 7904)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1405, file: !967, line: 202, baseType: !1285, size: 32, offset: 7936)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1405, file: !967, line: 202, baseType: !1285, size: 32, offset: 7968)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1405, file: !967, line: 211, baseType: !1285, size: 32, offset: 8000)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1405, file: !967, line: 212, baseType: !1285, size: 32, offset: 8032)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1405, file: !967, line: 213, baseType: !1285, size: 32, offset: 8064)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1405, file: !967, line: 214, baseType: !1285, size: 32, offset: 8096)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1405, file: !967, line: 215, baseType: !1285, size: 32, offset: 8128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1405, file: !967, line: 216, baseType: !1285, size: 32, offset: 8160)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1405, file: !967, line: 219, baseType: !1285, size: 32, offset: 8192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1405, file: !967, line: 220, baseType: !1285, size: 32, offset: 8224)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1405, file: !967, line: 221, baseType: !1285, size: 32, offset: 8256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1405, file: !967, line: 224, baseType: !1580, size: 16, offset: 8288)
!1580 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1405, file: !967, line: 224, baseType: !1580, size: 16, offset: 8304)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1405, file: !967, line: 226, baseType: !999, size: 16, offset: 8320)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1405, file: !967, line: 228, baseType: !996, size: 8, offset: 8336)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1405, file: !967, line: 229, baseType: !996, size: 8, offset: 8344)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1405, file: !967, line: 231, baseType: !999, size: 16, offset: 8352)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1405, file: !967, line: 232, baseType: !996, size: 8, offset: 8368)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1405, file: !967, line: 233, baseType: !996, size: 8, offset: 8376)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1405, file: !967, line: 234, baseType: !1285, size: 32, offset: 8384)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1405, file: !967, line: 235, baseType: !1285, size: 32, offset: 8416)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1405, file: !967, line: 237, baseType: !1011, size: 128, offset: 8448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1405, file: !967, line: 238, baseType: !1011, size: 128, offset: 8576)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1405, file: !967, line: 239, baseType: !1011, size: 128, offset: 8704)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1405, file: !967, line: 240, baseType: !1011, size: 128, offset: 8832)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1405, file: !967, line: 242, baseType: !1285, size: 32, offset: 8960)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1405, file: !967, line: 244, baseType: !999, size: 16, offset: 8992)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1405, file: !967, line: 245, baseType: !1580, size: 16, offset: 9008)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1405, file: !967, line: 246, baseType: !1535, size: 128, offset: 9024)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1405, file: !967, line: 248, baseType: !48, size: 32, offset: 9152)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1405, file: !967, line: 249, baseType: !48, size: 32, offset: 9184)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1405, file: !967, line: 251, baseType: !1601, size: 64, offset: 9216)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !967, line: 251, flags: DIFlagFwdDecl)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1405, file: !967, line: 253, baseType: !996, size: 8, offset: 9280)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1405, file: !967, line: 254, baseType: !996, size: 8, offset: 9288)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1405, file: !967, line: 255, baseType: !999, size: 16, offset: 9296)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1405, file: !967, line: 256, baseType: !1464, size: 96, offset: 9312)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1405, file: !967, line: 258, baseType: !1011, size: 128, offset: 9408)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1405, file: !967, line: 259, baseType: !1011, size: 128, offset: 9536)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1405, file: !967, line: 260, baseType: !1011, size: 128, offset: 9664)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1405, file: !967, line: 261, baseType: !1011, size: 128, offset: 9792)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1405, file: !967, line: 263, baseType: !1612, size: 64, offset: 9920)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !967, line: 52, flags: DIFlagFwdDecl)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1405, file: !967, line: 264, baseType: !1615, size: 64, offset: 9984)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !967, line: 53, flags: DIFlagFwdDecl)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1405, file: !967, line: 265, baseType: !1618, size: 64, offset: 10048)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1620, line: 43, flags: DIFlagFwdDecl)
!1620 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1405, file: !967, line: 267, baseType: !996, size: 8, offset: 10112)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1405, file: !967, line: 268, baseType: !996, size: 8, offset: 10120)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1405, file: !967, line: 269, baseType: !999, size: 16, offset: 10128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1405, file: !967, line: 270, baseType: !1285, size: 32, offset: 10144)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1405, file: !967, line: 272, baseType: !1626, size: 64, offset: 10176)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !967, line: 54, flags: DIFlagFwdDecl)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1405, file: !967, line: 275, baseType: !1629, size: 64, offset: 10240)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !967, line: 275, flags: DIFlagFwdDecl)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1405, file: !967, line: 277, baseType: !1632, size: 64, offset: 10304)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !967, line: 56, flags: DIFlagFwdDecl)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1405, file: !967, line: 277, baseType: !1632, size: 64, offset: 10368)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1405, file: !967, line: 278, baseType: !1112, size: 64, offset: 10432)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1405, file: !967, line: 279, baseType: !1112, size: 64, offset: 10496)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1405, file: !967, line: 280, baseType: !7, size: 32, offset: 10560)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1405, file: !967, line: 281, baseType: !7, size: 32, offset: 10592)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1405, file: !967, line: 283, baseType: !1011, size: 128, offset: 10624)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1405, file: !967, line: 284, baseType: !1011, size: 128, offset: 10752)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1405, file: !967, line: 285, baseType: !1642, size: 64, offset: 10880)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1405, file: !967, line: 287, baseType: !1644, size: 64, offset: 10944)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !967, line: 59, flags: DIFlagFwdDecl)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1405, file: !967, line: 288, baseType: !1647, size: 64, offset: 11008)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !967, line: 288, flags: DIFlagFwdDecl)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1405, file: !967, line: 290, baseType: !1650, size: 64, offset: 11072)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1285, size: 64, elements: !1256)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1405, file: !967, line: 291, baseType: !1652, size: 64, offset: 11136)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1654, line: 65, baseType: !1655)
!1654 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1654, line: 50, size: 320, elements: !1656)
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1655, file: !1654, line: 51, baseType: !1395, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1655, file: !1654, line: 53, baseType: !48, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1655, file: !1654, line: 54, baseType: !48, size: 32, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1655, file: !1654, line: 55, baseType: !48, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1655, file: !1654, line: 55, baseType: !48, size: 32, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1655, file: !1654, line: 56, baseType: !996, size: 8, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1655, file: !1654, line: 56, baseType: !996, size: 8, offset: 200)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1655, file: !1654, line: 57, baseType: !996, size: 8, offset: 208)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1655, file: !1654, line: 57, baseType: !996, size: 8, offset: 216)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1655, file: !1654, line: 59, baseType: !999, size: 16, offset: 224)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1655, file: !1654, line: 59, baseType: !999, size: 16, offset: 240)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1655, file: !1654, line: 59, baseType: !999, size: 16, offset: 256)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1655, file: !1654, line: 61, baseType: !999, size: 16, offset: 272)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1655, file: !1654, line: 63, baseType: !48, size: 32, offset: 288)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1405, file: !967, line: 293, baseType: !1011, size: 128, offset: 11200)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1405, file: !967, line: 294, baseType: !1673, size: 64, offset: 11328)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !967, line: 113, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !967, line: 108, size: 256, elements: !1676)
!1676 = !{!1677, !1679, !1680, !1681, !1682}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1675, file: !967, line: 109, baseType: !1678, size: 64)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1675, file: !967, line: 109, baseType: !1678, size: 64, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1675, file: !967, line: 110, baseType: !1404, size: 64, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1675, file: !967, line: 111, baseType: !48, size: 32, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1675, file: !967, line: 112, baseType: !1285, size: 32, offset: 224)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1396, file: !1397, line: 1221, baseType: !1684, size: 64, offset: 1088)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1397, line: 52, flags: DIFlagFwdDecl)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1396, file: !1397, line: 1223, baseType: !1395, size: 64, offset: 1152)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1396, file: !1397, line: 1225, baseType: !1011, size: 128, offset: 1216)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1396, file: !1397, line: 1226, baseType: !1689, size: 64, offset: 1344)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1397, line: 69, size: 320, elements: !1691)
!1691 = !{!1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1690, file: !1397, line: 70, baseType: !1689, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1690, file: !1397, line: 70, baseType: !1689, size: 64, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1690, file: !1397, line: 71, baseType: !7, size: 32, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1690, file: !1397, line: 71, baseType: !7, size: 32, offset: 160)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1690, file: !1397, line: 72, baseType: !48, size: 32, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1690, file: !1397, line: 73, baseType: !999, size: 16, offset: 224)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1690, file: !1397, line: 73, baseType: !999, size: 16, offset: 240)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1690, file: !1397, line: 74, baseType: !1404, size: 64, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1396, file: !1397, line: 1227, baseType: !1404, size: 64, offset: 1408)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1396, file: !1397, line: 1229, baseType: !1464, size: 96, offset: 1472)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1396, file: !1397, line: 1230, baseType: !1464, size: 96, offset: 1568)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1396, file: !1397, line: 1231, baseType: !1464, size: 96, offset: 1664)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1396, file: !1397, line: 1231, baseType: !1464, size: 96, offset: 1760)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1396, file: !1397, line: 1233, baseType: !7, size: 32, offset: 1856)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1396, file: !1397, line: 1234, baseType: !48, size: 32, offset: 1888)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1396, file: !1397, line: 1235, baseType: !7, size: 32, offset: 1920)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1396, file: !1397, line: 1237, baseType: !999, size: 16, offset: 1952)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1396, file: !1397, line: 1239, baseType: !996, size: 8, offset: 1968)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1396, file: !1397, line: 1240, baseType: !1711, size: 8, offset: 1976)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 8, elements: !1712)
!1712 = !{!1713}
!1713 = !DISubrange(count: 1)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1396, file: !1397, line: 1242, baseType: !1715, size: 64, offset: 1984)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1397, line: 57, flags: DIFlagFwdDecl)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1396, file: !1397, line: 1244, baseType: !1718, size: 64, offset: 2048)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1397, line: 59, flags: DIFlagFwdDecl)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1396, file: !1397, line: 1246, baseType: !1721, size: 64, offset: 2112)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1397, line: 1067, size: 5184, elements: !1723)
!1723 = !{!1724, !1754, !1755, !1770, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1792, !1887, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1998}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1722, file: !1397, line: 1068, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1397, line: 934, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1397, line: 925, size: 576, elements: !1728)
!1728 = !{!1729, !1745, !1746, !1747, !1748, !1750, !1753}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1727, file: !1397, line: 926, baseType: !1730, size: 320)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1397, line: 830, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1397, line: 813, size: 320, elements: !1732)
!1732 = !{!1733, !1736, !1739, !1740, !1742, !1743, !1744}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1731, file: !1397, line: 814, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1397, line: 51, flags: DIFlagFwdDecl)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1731, file: !1397, line: 815, baseType: !1737, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1397, line: 815, flags: DIFlagFwdDecl)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1731, file: !1397, line: 818, baseType: !986, size: 64, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1731, file: !1397, line: 819, baseType: !1741, size: 32, offset: 192)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1381, size: 32, elements: !1536)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1731, file: !1397, line: 822, baseType: !48, size: 32, offset: 224)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1731, file: !1397, line: 826, baseType: !48, size: 32, offset: 256)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1731, file: !1397, line: 829, baseType: !48, size: 32, offset: 288)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1727, file: !1397, line: 928, baseType: !999, size: 16, offset: 320)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1727, file: !1397, line: 928, baseType: !999, size: 16, offset: 336)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1727, file: !1397, line: 929, baseType: !48, size: 32, offset: 352)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1727, file: !1397, line: 930, baseType: !1749, size: 64, offset: 384)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1727, file: !1397, line: 931, baseType: !1751, size: 64, offset: 448)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1397, line: 931, flags: DIFlagFwdDecl)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1727, file: !1397, line: 933, baseType: !986, size: 64, offset: 512)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1722, file: !1397, line: 1069, baseType: !1725, size: 64, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1722, file: !1397, line: 1070, baseType: !1756, size: 64, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1397, line: 916, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1397, line: 891, size: 704, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1764, !1765, !1766, !1767, !1768, !1769}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1758, file: !1397, line: 892, baseType: !1730, size: 320)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1758, file: !1397, line: 896, baseType: !48, size: 32, offset: 320)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1758, file: !1397, line: 900, baseType: !1763, size: 96, offset: 352)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 96, elements: !1387)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1758, file: !1397, line: 903, baseType: !1285, size: 32, offset: 448)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1758, file: !1397, line: 906, baseType: !48, size: 32, offset: 480)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1758, file: !1397, line: 909, baseType: !1285, size: 32, offset: 512)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1758, file: !1397, line: 912, baseType: !1285, size: 32, offset: 544)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1758, file: !1397, line: 914, baseType: !1404, size: 64, offset: 576)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1758, file: !1397, line: 915, baseType: !986, size: 64, offset: 640)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1722, file: !1397, line: 1071, baseType: !1771, size: 64, offset: 192)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1397, line: 920, baseType: !1773)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1397, line: 918, size: 320, elements: !1774)
!1774 = !{!1775}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1773, file: !1397, line: 919, baseType: !1730, size: 320)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1722, file: !1397, line: 1075, baseType: !1285, size: 32, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1722, file: !1397, line: 1077, baseType: !1285, size: 32, offset: 288)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1722, file: !1397, line: 1078, baseType: !1285, size: 32, offset: 320)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1722, file: !1397, line: 1079, baseType: !999, size: 16, offset: 352)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1722, file: !1397, line: 1082, baseType: !999, size: 16, offset: 368)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1722, file: !1397, line: 1085, baseType: !996, size: 8, offset: 384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1722, file: !1397, line: 1086, baseType: !996, size: 8, offset: 392)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1722, file: !1397, line: 1087, baseType: !996, size: 8, offset: 400)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1722, file: !1397, line: 1088, baseType: !996, size: 8, offset: 408)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1722, file: !1397, line: 1090, baseType: !1285, size: 32, offset: 416)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1722, file: !1397, line: 1093, baseType: !999, size: 16, offset: 448)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1722, file: !1397, line: 1096, baseType: !996, size: 8, offset: 464)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1722, file: !1397, line: 1098, baseType: !1789, size: 40, offset: 472)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 40, elements: !1790)
!1790 = !{!1791}
!1791 = !DISubrange(count: 5)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1722, file: !1397, line: 1101, baseType: !1793, size: 832, offset: 512)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1397, line: 836, size: 832, elements: !1794)
!1794 = !{!1795, !1796, !1797, !1798, !1799, !1800, !1802, !1803, !1804, !1883, !1884, !1885, !1886}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1793, file: !1397, line: 837, baseType: !1730, size: 320)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1793, file: !1397, line: 839, baseType: !999, size: 16, offset: 320)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1793, file: !1397, line: 839, baseType: !999, size: 16, offset: 336)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1793, file: !1397, line: 842, baseType: !999, size: 16, offset: 352)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1793, file: !1397, line: 842, baseType: !999, size: 16, offset: 368)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1793, file: !1397, line: 843, baseType: !1801, size: 32, offset: 384)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !999, size: 32, elements: !1256)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1793, file: !1397, line: 845, baseType: !48, size: 32, offset: 416)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1793, file: !1397, line: 847, baseType: !986, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1793, file: !1397, line: 848, baseType: !1805, size: 64, offset: 512)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1654, line: 77, size: 15424, elements: !1807)
!1807 = !{!1808, !1809, !1810, !1813, !1816, !1819, !1822, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1872, !1873, !1877}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1806, file: !1654, line: 78, baseType: !1127, size: 960)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1806, file: !1654, line: 80, baseType: !1104, size: 8192, offset: 960)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1806, file: !1654, line: 82, baseType: !1811, size: 64, offset: 9152)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1654, line: 43, flags: DIFlagFwdDecl)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1806, file: !1654, line: 83, baseType: !1814, size: 64, offset: 9216)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !989, line: 46, flags: DIFlagFwdDecl)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1806, file: !1654, line: 86, baseType: !1817, size: 64, offset: 9280)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1654, line: 41, flags: DIFlagFwdDecl)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1806, file: !1654, line: 87, baseType: !1820, size: 64, offset: 9344)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1654, line: 44, flags: DIFlagFwdDecl)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1806, file: !1654, line: 89, baseType: !1823, size: 512, offset: 9408)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1820, size: 512, elements: !1824)
!1824 = !{!1434}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1806, file: !1654, line: 90, baseType: !999, size: 16, offset: 9920)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1806, file: !1654, line: 90, baseType: !999, size: 16, offset: 9936)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1806, file: !1654, line: 92, baseType: !999, size: 16, offset: 9952)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1806, file: !1654, line: 92, baseType: !999, size: 16, offset: 9968)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1806, file: !1654, line: 93, baseType: !999, size: 16, offset: 9984)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1806, file: !1654, line: 93, baseType: !999, size: 16, offset: 10000)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1806, file: !1654, line: 94, baseType: !48, size: 32, offset: 10016)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1806, file: !1654, line: 97, baseType: !999, size: 16, offset: 10048)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1806, file: !1654, line: 97, baseType: !999, size: 16, offset: 10064)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1806, file: !1654, line: 98, baseType: !999, size: 16, offset: 10080)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1806, file: !1654, line: 98, baseType: !999, size: 16, offset: 10096)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1806, file: !1654, line: 99, baseType: !999, size: 16, offset: 10112)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1806, file: !1654, line: 99, baseType: !999, size: 16, offset: 10128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1806, file: !1654, line: 100, baseType: !7, size: 32, offset: 10144)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1806, file: !1654, line: 101, baseType: !1749, size: 64, offset: 10176)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1806, file: !1654, line: 103, baseType: !1153, size: 64, offset: 10240)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1806, file: !1654, line: 104, baseType: !1842, size: 64, offset: 10304)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !989, line: 159, size: 448, elements: !1844)
!1844 = !{!1845, !1847, !1848, !1849, !1850, !1852}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1843, file: !989, line: 161, baseType: !1846, size: 64)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1256)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1843, file: !989, line: 162, baseType: !1846, size: 64, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1843, file: !989, line: 163, baseType: !1801, size: 32, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1843, file: !989, line: 164, baseType: !1801, size: 32, offset: 160)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1843, file: !989, line: 165, baseType: !1851, size: 128, offset: 192)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1749, size: 128, elements: !1256)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1843, file: !989, line: 166, baseType: !1853, size: 128, offset: 320)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1814, size: 128, elements: !1256)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1806, file: !1654, line: 107, baseType: !1285, size: 32, offset: 10368)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1806, file: !1654, line: 108, baseType: !48, size: 32, offset: 10400)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1806, file: !1654, line: 109, baseType: !999, size: 16, offset: 10432)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1806, file: !1654, line: 110, baseType: !999, size: 16, offset: 10448)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1806, file: !1654, line: 113, baseType: !48, size: 32, offset: 10464)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1806, file: !1654, line: 113, baseType: !48, size: 32, offset: 10496)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1806, file: !1654, line: 114, baseType: !996, size: 8, offset: 10528)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1806, file: !1654, line: 114, baseType: !996, size: 8, offset: 10536)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1806, file: !1654, line: 115, baseType: !999, size: 16, offset: 10544)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1806, file: !1654, line: 116, baseType: !1535, size: 128, offset: 10560)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1806, file: !1654, line: 119, baseType: !1285, size: 32, offset: 10688)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1806, file: !1654, line: 119, baseType: !1285, size: 32, offset: 10720)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1806, file: !1654, line: 122, baseType: !1867, size: 512, offset: 10752)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1868, line: 182, baseType: !1869)
!1868 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1868, line: 180, size: 512, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1869, file: !1868, line: 181, baseType: !1001, size: 512)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1806, file: !1654, line: 123, baseType: !996, size: 8, offset: 11264)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1806, file: !1654, line: 125, baseType: !1874, size: 56, offset: 11272)
!1874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 56, elements: !1875)
!1875 = !{!1876}
!1876 = !DISubrange(count: 7)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1806, file: !1654, line: 126, baseType: !1878, size: 4096, offset: 11328)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1879, size: 4096, elements: !1824)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1654, line: 69, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1654, line: 67, size: 512, elements: !1881)
!1881 = !{!1882}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1880, file: !1654, line: 68, baseType: !1001, size: 512)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1793, file: !1397, line: 849, baseType: !1805, size: 64, offset: 576)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1793, file: !1397, line: 850, baseType: !1805, size: 64, offset: 640)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1793, file: !1397, line: 851, baseType: !1464, size: 96, offset: 704)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1793, file: !1397, line: 852, baseType: !1285, size: 32, offset: 800)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1722, file: !1397, line: 1104, baseType: !1888, size: 1344, offset: 1344)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1397, line: 867, size: 1344, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1888, file: !1397, line: 868, baseType: !999, size: 16)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1888, file: !1397, line: 869, baseType: !999, size: 16, offset: 16)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1888, file: !1397, line: 870, baseType: !999, size: 16, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1888, file: !1397, line: 871, baseType: !999, size: 16, offset: 48)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1888, file: !1397, line: 873, baseType: !1895, size: 896, offset: 64)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1896, size: 896, elements: !1875)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1397, line: 864, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1397, line: 859, size: 128, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902, !1903, !1904}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1897, file: !1397, line: 860, baseType: !999, size: 16)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1897, file: !1397, line: 861, baseType: !999, size: 16, offset: 16)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1897, file: !1397, line: 861, baseType: !999, size: 16, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1897, file: !1397, line: 861, baseType: !999, size: 16, offset: 48)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1897, file: !1397, line: 862, baseType: !48, size: 32, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1897, file: !1397, line: 863, baseType: !1285, size: 32, offset: 96)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1888, file: !1397, line: 874, baseType: !986, size: 64, offset: 960)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1888, file: !1397, line: 876, baseType: !1285, size: 32, offset: 1024)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1888, file: !1397, line: 876, baseType: !1285, size: 32, offset: 1056)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1888, file: !1397, line: 878, baseType: !48, size: 32, offset: 1088)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1888, file: !1397, line: 879, baseType: !48, size: 32, offset: 1120)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1888, file: !1397, line: 881, baseType: !48, size: 32, offset: 1152)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1888, file: !1397, line: 881, baseType: !48, size: 32, offset: 1184)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1888, file: !1397, line: 883, baseType: !1395, size: 64, offset: 1216)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1888, file: !1397, line: 884, baseType: !1404, size: 64, offset: 1280)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1722, file: !1397, line: 1107, baseType: !1285, size: 32, offset: 2688)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1722, file: !1397, line: 1110, baseType: !1285, size: 32, offset: 2720)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1722, file: !1397, line: 1113, baseType: !999, size: 16, offset: 2752)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1722, file: !1397, line: 1113, baseType: !999, size: 16, offset: 2768)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1722, file: !1397, line: 1116, baseType: !996, size: 8, offset: 2784)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1722, file: !1397, line: 1117, baseType: !1711, size: 8, offset: 2792)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1722, file: !1397, line: 1120, baseType: !999, size: 16, offset: 2800)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1722, file: !1397, line: 1121, baseType: !1285, size: 32, offset: 2816)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1722, file: !1397, line: 1122, baseType: !1285, size: 32, offset: 2848)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1722, file: !1397, line: 1123, baseType: !1285, size: 32, offset: 2880)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1722, file: !1397, line: 1124, baseType: !1285, size: 32, offset: 2912)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1722, file: !1397, line: 1125, baseType: !1285, size: 32, offset: 2944)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1722, file: !1397, line: 1126, baseType: !1285, size: 32, offset: 2976)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1722, file: !1397, line: 1127, baseType: !1285, size: 32, offset: 3008)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1722, file: !1397, line: 1128, baseType: !1285, size: 32, offset: 3040)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1722, file: !1397, line: 1129, baseType: !1285, size: 32, offset: 3072)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1722, file: !1397, line: 1130, baseType: !1285, size: 32, offset: 3104)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1722, file: !1397, line: 1131, baseType: !999, size: 16, offset: 3136)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1722, file: !1397, line: 1132, baseType: !996, size: 8, offset: 3152)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1722, file: !1397, line: 1133, baseType: !996, size: 8, offset: 3160)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1722, file: !1397, line: 1134, baseType: !1935, size: 24, offset: 3168)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 24, elements: !1387)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1722, file: !1397, line: 1135, baseType: !996, size: 8, offset: 3192)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1722, file: !1397, line: 1138, baseType: !1404, size: 64, offset: 3200)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1722, file: !1397, line: 1139, baseType: !996, size: 8, offset: 3264)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1722, file: !1397, line: 1140, baseType: !996, size: 8, offset: 3272)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1722, file: !1397, line: 1141, baseType: !996, size: 8, offset: 3280)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1722, file: !1397, line: 1142, baseType: !996, size: 8, offset: 3288)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1722, file: !1397, line: 1143, baseType: !996, size: 8, offset: 3296)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1722, file: !1397, line: 1144, baseType: !1944, size: 64, offset: 3304)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 64, elements: !1824)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1722, file: !1397, line: 1145, baseType: !1944, size: 64, offset: 3368)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1722, file: !1397, line: 1148, baseType: !996, size: 8, offset: 3432)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1722, file: !1397, line: 1149, baseType: !996, size: 8, offset: 3440)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1722, file: !1397, line: 1152, baseType: !996, size: 8, offset: 3448)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1722, file: !1397, line: 1152, baseType: !996, size: 8, offset: 3456)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1722, file: !1397, line: 1153, baseType: !996, size: 8, offset: 3464)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1722, file: !1397, line: 1154, baseType: !999, size: 16, offset: 3472)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1722, file: !1397, line: 1154, baseType: !999, size: 16, offset: 3488)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1722, file: !1397, line: 1155, baseType: !999, size: 16, offset: 3504)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1722, file: !1397, line: 1155, baseType: !999, size: 16, offset: 3520)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1722, file: !1397, line: 1156, baseType: !996, size: 8, offset: 3536)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1722, file: !1397, line: 1157, baseType: !996, size: 8, offset: 3544)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1722, file: !1397, line: 1159, baseType: !996, size: 8, offset: 3552)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1722, file: !1397, line: 1160, baseType: !996, size: 8, offset: 3560)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1722, file: !1397, line: 1161, baseType: !996, size: 8, offset: 3568)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1722, file: !1397, line: 1162, baseType: !996, size: 8, offset: 3576)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1722, file: !1397, line: 1165, baseType: !48, size: 32, offset: 3584)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1722, file: !1397, line: 1166, baseType: !48, size: 32, offset: 3616)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1722, file: !1397, line: 1167, baseType: !48, size: 32, offset: 3648)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1722, file: !1397, line: 1168, baseType: !48, size: 32, offset: 3680)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1722, file: !1397, line: 1171, baseType: !999, size: 16, offset: 3712)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1722, file: !1397, line: 1171, baseType: !999, size: 16, offset: 3728)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1722, file: !1397, line: 1172, baseType: !48, size: 32, offset: 3744)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1722, file: !1397, line: 1173, baseType: !1285, size: 32, offset: 3776)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1722, file: !1397, line: 1174, baseType: !1285, size: 32, offset: 3808)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1722, file: !1397, line: 1177, baseType: !1971, size: 1024, offset: 3840)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1397, line: 963, size: 1024, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1996, !1997}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1971, file: !1397, line: 965, baseType: !48, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1971, file: !1397, line: 968, baseType: !1285, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1971, file: !1397, line: 971, baseType: !1285, size: 32, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1971, file: !1397, line: 974, baseType: !1285, size: 32, offset: 96)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1971, file: !1397, line: 977, baseType: !1464, size: 96, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1971, file: !1397, line: 979, baseType: !1464, size: 96, offset: 224)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1971, file: !1397, line: 982, baseType: !48, size: 32, offset: 320)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1971, file: !1397, line: 987, baseType: !1650, size: 64, offset: 352)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1971, file: !1397, line: 989, baseType: !1285, size: 32, offset: 416)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1971, file: !1397, line: 994, baseType: !48, size: 32, offset: 448)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1971, file: !1397, line: 995, baseType: !48, size: 32, offset: 480)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1971, file: !1397, line: 997, baseType: !996, size: 8, offset: 512)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1971, file: !1397, line: 998, baseType: !1874, size: 56, offset: 520)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1971, file: !1397, line: 1000, baseType: !1285, size: 32, offset: 576)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1971, file: !1397, line: 1003, baseType: !1650, size: 64, offset: 608)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1971, file: !1397, line: 1006, baseType: !48, size: 32, offset: 672)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1971, file: !1397, line: 1009, baseType: !1285, size: 32, offset: 704)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1971, file: !1397, line: 1012, baseType: !1650, size: 64, offset: 736)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1971, file: !1397, line: 1015, baseType: !1650, size: 64, offset: 800)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1971, file: !1397, line: 1018, baseType: !48, size: 32, offset: 864)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1971, file: !1397, line: 1019, baseType: !1994, size: 64, offset: 896)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1397, line: 63, flags: DIFlagFwdDecl)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1971, file: !1397, line: 1023, baseType: !1285, size: 32, offset: 960)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1971, file: !1397, line: 1024, baseType: !48, size: 32, offset: 992)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1722, file: !1397, line: 1179, baseType: !1999, size: 320, offset: 4864)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1397, line: 1043, size: 320, elements: !2000)
!2000 = !{!2001, !2002, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1999, file: !1397, line: 1044, baseType: !996, size: 8)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1999, file: !1397, line: 1045, baseType: !2003, size: 16, offset: 8)
!2003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 16, elements: !1256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1999, file: !1397, line: 1048, baseType: !996, size: 8, offset: 24)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1999, file: !1397, line: 1049, baseType: !1285, size: 32, offset: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1999, file: !1397, line: 1049, baseType: !1285, size: 32, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1999, file: !1397, line: 1052, baseType: !1285, size: 32, offset: 96)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1999, file: !1397, line: 1052, baseType: !1285, size: 32, offset: 128)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1999, file: !1397, line: 1053, baseType: !996, size: 8, offset: 160)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1999, file: !1397, line: 1054, baseType: !1935, size: 24, offset: 168)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1999, file: !1397, line: 1057, baseType: !1285, size: 32, offset: 192)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1999, file: !1397, line: 1057, baseType: !1285, size: 32, offset: 224)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1999, file: !1397, line: 1060, baseType: !1285, size: 32, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1999, file: !1397, line: 1060, baseType: !1285, size: 32, offset: 288)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1396, file: !1397, line: 1247, baseType: !2016, size: 64, offset: 2176)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1397, line: 60, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1396, file: !1397, line: 1251, baseType: !2019, size: 31872, offset: 2240)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1397, line: 403, size: 31872, elements: !2020)
!2020 = !{!2021, !2101, !2121, !2130, !2150, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2290, !2291, !2292, !2296, !2312, !2313}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2019, file: !1397, line: 404, baseType: !2022, size: 1984)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1397, line: 259, size: 1984, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2096}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2022, file: !1397, line: 260, baseType: !996, size: 8)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2022, file: !1397, line: 263, baseType: !996, size: 8, offset: 8)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2022, file: !1397, line: 266, baseType: !996, size: 8, offset: 16)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2022, file: !1397, line: 267, baseType: !996, size: 8, offset: 24)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2022, file: !1397, line: 269, baseType: !996, size: 8, offset: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2022, file: !1397, line: 270, baseType: !996, size: 8, offset: 40)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2022, file: !1397, line: 276, baseType: !996, size: 8, offset: 48)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2022, file: !1397, line: 279, baseType: !996, size: 8, offset: 56)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2022, file: !1397, line: 280, baseType: !999, size: 16, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2022, file: !1397, line: 280, baseType: !999, size: 16, offset: 80)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2022, file: !1397, line: 281, baseType: !1285, size: 32, offset: 96)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2022, file: !1397, line: 284, baseType: !996, size: 8, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2022, file: !1397, line: 285, baseType: !996, size: 8, offset: 136)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2022, file: !1397, line: 287, baseType: !1259, size: 48, offset: 144)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2022, file: !1397, line: 290, baseType: !2039, size: 1280, offset: 192)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1868, line: 174, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1868, line: 166, size: 1280, elements: !2041)
!2041 = !{!2042, !2043, !2044, !2045, !2046, !2047, !2048, !2095}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2040, file: !1868, line: 167, baseType: !48, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2040, file: !1868, line: 167, baseType: !48, size: 32, offset: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2040, file: !1868, line: 168, baseType: !1001, size: 512, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2040, file: !1868, line: 169, baseType: !1001, size: 512, offset: 576)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2040, file: !1868, line: 170, baseType: !1285, size: 32, offset: 1088)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2040, file: !1868, line: 171, baseType: !1285, size: 32, offset: 1120)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2040, file: !1868, line: 172, baseType: !2049, size: 64, offset: 1152)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1868, line: 72, size: 3072, elements: !2051)
!2051 = !{!2052, !2053, !2054, !2055, !2056, !2065, !2066, !2091, !2092, !2093, !2094}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2050, file: !1868, line: 73, baseType: !48, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2050, file: !1868, line: 73, baseType: !48, size: 32, offset: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2050, file: !1868, line: 74, baseType: !48, size: 32, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2050, file: !1868, line: 75, baseType: !48, size: 32, offset: 96)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2050, file: !1868, line: 77, baseType: !2057, size: 128, offset: 128)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !2058, line: 95, baseType: !2059)
!2058 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !2058, line: 92, size: 128, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2059, file: !2058, line: 93, baseType: !1285, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2059, file: !2058, line: 93, baseType: !1285, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2059, file: !2058, line: 94, baseType: !1285, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2059, file: !2058, line: 94, baseType: !1285, size: 32, offset: 96)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2050, file: !1868, line: 77, baseType: !2057, size: 128, offset: 256)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2050, file: !1868, line: 79, baseType: !2067, size: 2304, offset: 384)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2068, size: 2304, elements: !1536)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1868, line: 67, baseType: !2069)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1868, line: 55, size: 576, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2087, !2088, !2089, !2090}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2069, file: !1868, line: 56, baseType: !999, size: 16)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2069, file: !1868, line: 56, baseType: !999, size: 16, offset: 16)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2069, file: !1868, line: 58, baseType: !1285, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2069, file: !1868, line: 59, baseType: !1285, size: 32, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2069, file: !1868, line: 59, baseType: !1285, size: 32, offset: 96)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2069, file: !1868, line: 60, baseType: !1650, size: 64, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2069, file: !1868, line: 60, baseType: !1650, size: 64, offset: 192)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2069, file: !1868, line: 61, baseType: !2079, size: 64, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1868, line: 47, baseType: !2081)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1868, line: 44, size: 96, elements: !2082)
!2082 = !{!2083, !2084, !2085, !2086}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2081, file: !1868, line: 45, baseType: !1285, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2081, file: !1868, line: 45, baseType: !1285, size: 32, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2081, file: !1868, line: 46, baseType: !999, size: 16, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2081, file: !1868, line: 46, baseType: !999, size: 16, offset: 80)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2069, file: !1868, line: 62, baseType: !2079, size: 64, offset: 320)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2069, file: !1868, line: 64, baseType: !2079, size: 64, offset: 384)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2069, file: !1868, line: 65, baseType: !1650, size: 64, offset: 448)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2069, file: !1868, line: 66, baseType: !1650, size: 64, offset: 512)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2050, file: !1868, line: 80, baseType: !1464, size: 96, offset: 2688)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2050, file: !1868, line: 80, baseType: !1464, size: 96, offset: 2784)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2050, file: !1868, line: 81, baseType: !1464, size: 96, offset: 2880)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2050, file: !1868, line: 83, baseType: !1464, size: 96, offset: 2976)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2040, file: !1868, line: 173, baseType: !986, size: 64, offset: 1216)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2022, file: !1397, line: 291, baseType: !2097, size: 512, offset: 1472)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1868, line: 178, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1868, line: 176, size: 512, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2098, file: !1868, line: 177, baseType: !1001, size: 512)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2019, file: !1397, line: 406, baseType: !2102, size: 64, offset: 1984)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1397, line: 80, size: 1472, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2103, file: !1397, line: 81, baseType: !986, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2103, file: !1397, line: 82, baseType: !986, size: 64, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2103, file: !1397, line: 83, baseType: !7, size: 32, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2103, file: !1397, line: 84, baseType: !7, size: 32, offset: 160)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2103, file: !1397, line: 86, baseType: !7, size: 32, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2103, file: !1397, line: 87, baseType: !7, size: 32, offset: 224)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2103, file: !1397, line: 88, baseType: !7, size: 32, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2103, file: !1397, line: 89, baseType: !7, size: 32, offset: 288)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2103, file: !1397, line: 90, baseType: !7, size: 32, offset: 320)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2103, file: !1397, line: 91, baseType: !7, size: 32, offset: 352)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2103, file: !1397, line: 92, baseType: !7, size: 32, offset: 384)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2103, file: !1397, line: 93, baseType: !7, size: 32, offset: 416)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2103, file: !1397, line: 95, baseType: !2118, size: 1024, offset: 448)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 1024, elements: !2119)
!2119 = !{!2120}
!2120 = !DISubrange(count: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2019, file: !1397, line: 407, baseType: !2122, size: 64, offset: 2048)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1397, line: 98, size: 1216, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2128, !2129}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2123, file: !1397, line: 100, baseType: !986, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2123, file: !1397, line: 101, baseType: !986, size: 64, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2123, file: !1397, line: 103, baseType: !7, size: 32, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2123, file: !1397, line: 104, baseType: !7, size: 32, offset: 160)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2123, file: !1397, line: 106, baseType: !2118, size: 1024, offset: 192)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2019, file: !1397, line: 408, baseType: !2131, size: 512, offset: 2112)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1397, line: 109, size: 512, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2131, file: !1397, line: 111, baseType: !48, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2131, file: !1397, line: 112, baseType: !48, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2131, file: !1397, line: 115, baseType: !48, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2131, file: !1397, line: 116, baseType: !48, size: 32, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2131, file: !1397, line: 117, baseType: !48, size: 32, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2131, file: !1397, line: 118, baseType: !48, size: 32, offset: 160)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2131, file: !1397, line: 119, baseType: !48, size: 32, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2131, file: !1397, line: 120, baseType: !48, size: 32, offset: 224)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2131, file: !1397, line: 121, baseType: !48, size: 32, offset: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2131, file: !1397, line: 122, baseType: !48, size: 32, offset: 288)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2131, file: !1397, line: 125, baseType: !48, size: 32, offset: 320)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2131, file: !1397, line: 126, baseType: !48, size: 32, offset: 352)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2131, file: !1397, line: 127, baseType: !999, size: 16, offset: 384)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2131, file: !1397, line: 128, baseType: !999, size: 16, offset: 400)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2131, file: !1397, line: 129, baseType: !48, size: 32, offset: 416)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2131, file: !1397, line: 130, baseType: !48, size: 32, offset: 448)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2131, file: !1397, line: 131, baseType: !48, size: 32, offset: 480)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2019, file: !1397, line: 409, baseType: !2151, size: 576, offset: 2624)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1397, line: 134, size: 576, elements: !2152)
!2152 = !{!2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2151, file: !1397, line: 135, baseType: !48, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2151, file: !1397, line: 136, baseType: !48, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2151, file: !1397, line: 137, baseType: !48, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2151, file: !1397, line: 138, baseType: !48, size: 32, offset: 96)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2151, file: !1397, line: 139, baseType: !48, size: 32, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2151, file: !1397, line: 140, baseType: !48, size: 32, offset: 160)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2151, file: !1397, line: 141, baseType: !48, size: 32, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2151, file: !1397, line: 142, baseType: !48, size: 32, offset: 224)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2151, file: !1397, line: 143, baseType: !1285, size: 32, offset: 256)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2151, file: !1397, line: 144, baseType: !48, size: 32, offset: 288)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2151, file: !1397, line: 145, baseType: !48, size: 32, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2151, file: !1397, line: 147, baseType: !48, size: 32, offset: 352)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2151, file: !1397, line: 148, baseType: !48, size: 32, offset: 384)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2151, file: !1397, line: 149, baseType: !48, size: 32, offset: 416)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2151, file: !1397, line: 150, baseType: !48, size: 32, offset: 448)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2151, file: !1397, line: 151, baseType: !48, size: 32, offset: 480)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2151, file: !1397, line: 152, baseType: !987, size: 64, offset: 512)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2019, file: !1397, line: 411, baseType: !48, size: 32, offset: 3200)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2019, file: !1397, line: 411, baseType: !48, size: 32, offset: 3232)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2019, file: !1397, line: 411, baseType: !48, size: 32, offset: 3264)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2019, file: !1397, line: 412, baseType: !1285, size: 32, offset: 3296)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2019, file: !1397, line: 413, baseType: !48, size: 32, offset: 3328)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2019, file: !1397, line: 413, baseType: !48, size: 32, offset: 3360)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2019, file: !1397, line: 415, baseType: !48, size: 32, offset: 3392)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2019, file: !1397, line: 415, baseType: !48, size: 32, offset: 3424)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2019, file: !1397, line: 416, baseType: !999, size: 16, offset: 3456)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2019, file: !1397, line: 416, baseType: !999, size: 16, offset: 3472)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2019, file: !1397, line: 418, baseType: !1285, size: 32, offset: 3488)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2019, file: !1397, line: 418, baseType: !1285, size: 32, offset: 3520)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2019, file: !1397, line: 421, baseType: !1285, size: 32, offset: 3552)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2019, file: !1397, line: 421, baseType: !1285, size: 32, offset: 3584)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2019, file: !1397, line: 421, baseType: !1285, size: 32, offset: 3616)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2019, file: !1397, line: 425, baseType: !999, size: 16, offset: 3648)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2019, file: !1397, line: 425, baseType: !999, size: 16, offset: 3664)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2019, file: !1397, line: 425, baseType: !999, size: 16, offset: 3680)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2019, file: !1397, line: 426, baseType: !999, size: 16, offset: 3696)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2019, file: !1397, line: 428, baseType: !999, size: 16, offset: 3712)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2019, file: !1397, line: 428, baseType: !999, size: 16, offset: 3728)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2019, file: !1397, line: 431, baseType: !48, size: 32, offset: 3744)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2019, file: !1397, line: 433, baseType: !999, size: 16, offset: 3776)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2019, file: !1397, line: 435, baseType: !999, size: 16, offset: 3792)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2019, file: !1397, line: 437, baseType: !999, size: 16, offset: 3808)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2019, file: !1397, line: 439, baseType: !999, size: 16, offset: 3824)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2019, file: !1397, line: 441, baseType: !999, size: 16, offset: 3840)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2019, file: !1397, line: 443, baseType: !999, size: 16, offset: 3856)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2019, file: !1397, line: 449, baseType: !48, size: 32, offset: 3872)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2019, file: !1397, line: 453, baseType: !48, size: 32, offset: 3904)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2019, file: !1397, line: 458, baseType: !999, size: 16, offset: 3936)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2019, file: !1397, line: 462, baseType: !999, size: 16, offset: 3952)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2019, file: !1397, line: 467, baseType: !48, size: 32, offset: 3968)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2019, file: !1397, line: 467, baseType: !48, size: 32, offset: 4000)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2019, file: !1397, line: 469, baseType: !999, size: 16, offset: 4032)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2019, file: !1397, line: 469, baseType: !999, size: 16, offset: 4048)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2019, file: !1397, line: 469, baseType: !999, size: 16, offset: 4064)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2019, file: !1397, line: 469, baseType: !999, size: 16, offset: 4080)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2019, file: !1397, line: 474, baseType: !999, size: 16, offset: 4096)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2019, file: !1397, line: 475, baseType: !996, size: 8, offset: 4112)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2019, file: !1397, line: 476, baseType: !996, size: 8, offset: 4120)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2019, file: !1397, line: 481, baseType: !48, size: 32, offset: 4128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2019, file: !1397, line: 486, baseType: !48, size: 32, offset: 4160)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2019, file: !1397, line: 491, baseType: !48, size: 32, offset: 4192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2019, file: !1397, line: 496, baseType: !999, size: 16, offset: 4224)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2019, file: !1397, line: 498, baseType: !999, size: 16, offset: 4240)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2019, file: !1397, line: 501, baseType: !999, size: 16, offset: 4256)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2019, file: !1397, line: 502, baseType: !999, size: 16, offset: 4272)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2019, file: !1397, line: 508, baseType: !999, size: 16, offset: 4288)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2019, file: !1397, line: 513, baseType: !999, size: 16, offset: 4304)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2019, file: !1397, line: 515, baseType: !999, size: 16, offset: 4320)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2019, file: !1397, line: 515, baseType: !999, size: 16, offset: 4336)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2019, file: !1397, line: 519, baseType: !2057, size: 128, offset: 4352)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2019, file: !1397, line: 519, baseType: !2057, size: 128, offset: 4480)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2019, file: !1397, line: 520, baseType: !2225, size: 128, offset: 4608)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !2058, line: 89, baseType: !2226)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !2058, line: 86, size: 128, elements: !2227)
!2227 = !{!2228, !2229, !2230, !2231}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2226, file: !2058, line: 87, baseType: !48, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2226, file: !2058, line: 87, baseType: !48, size: 32, offset: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2226, file: !2058, line: 88, baseType: !48, size: 32, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2226, file: !2058, line: 88, baseType: !48, size: 32, offset: 96)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2019, file: !1397, line: 523, baseType: !1011, size: 128, offset: 4736)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2019, file: !1397, line: 524, baseType: !999, size: 16, offset: 4864)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2019, file: !1397, line: 527, baseType: !999, size: 16, offset: 4880)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2019, file: !1397, line: 532, baseType: !1285, size: 32, offset: 4896)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2019, file: !1397, line: 532, baseType: !1285, size: 32, offset: 4928)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2019, file: !1397, line: 534, baseType: !1285, size: 32, offset: 4960)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2019, file: !1397, line: 538, baseType: !1285, size: 32, offset: 4992)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2019, file: !1397, line: 542, baseType: !48, size: 32, offset: 5024)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2019, file: !1397, line: 545, baseType: !1285, size: 32, offset: 5056)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2019, file: !1397, line: 545, baseType: !1285, size: 32, offset: 5088)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2019, file: !1397, line: 545, baseType: !1285, size: 32, offset: 5120)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2019, file: !1397, line: 548, baseType: !1285, size: 32, offset: 5152)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2019, file: !1397, line: 551, baseType: !999, size: 16, offset: 5184)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2019, file: !1397, line: 551, baseType: !999, size: 16, offset: 5200)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2019, file: !1397, line: 551, baseType: !999, size: 16, offset: 5216)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2019, file: !1397, line: 551, baseType: !999, size: 16, offset: 5232)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2019, file: !1397, line: 552, baseType: !999, size: 16, offset: 5248)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2019, file: !1397, line: 552, baseType: !999, size: 16, offset: 5264)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2019, file: !1397, line: 553, baseType: !1285, size: 32, offset: 5280)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2019, file: !1397, line: 553, baseType: !1285, size: 32, offset: 5312)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2019, file: !1397, line: 554, baseType: !999, size: 16, offset: 5344)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2019, file: !1397, line: 554, baseType: !999, size: 16, offset: 5360)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2019, file: !1397, line: 555, baseType: !1285, size: 32, offset: 5376)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2019, file: !1397, line: 555, baseType: !1285, size: 32, offset: 5408)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2019, file: !1397, line: 558, baseType: !1104, size: 8192, offset: 5440)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2019, file: !1397, line: 561, baseType: !48, size: 32, offset: 13632)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2019, file: !1397, line: 562, baseType: !999, size: 16, offset: 13664)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2019, file: !1397, line: 562, baseType: !999, size: 16, offset: 13680)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2019, file: !1397, line: 565, baseType: !2261, size: 6144, offset: 13696)
!2261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 6144, elements: !2262)
!2262 = !{!2263}
!2263 = !DISubrange(count: 768)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2019, file: !1397, line: 568, baseType: !1535, size: 128, offset: 19840)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2019, file: !1397, line: 569, baseType: !1535, size: 128, offset: 19968)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2019, file: !1397, line: 572, baseType: !996, size: 8, offset: 20096)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2019, file: !1397, line: 573, baseType: !996, size: 8, offset: 20104)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2019, file: !1397, line: 574, baseType: !996, size: 8, offset: 20112)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2019, file: !1397, line: 575, baseType: !1789, size: 40, offset: 20120)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2019, file: !1397, line: 578, baseType: !48, size: 32, offset: 20160)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2019, file: !1397, line: 579, baseType: !999, size: 16, offset: 20192)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2019, file: !1397, line: 580, baseType: !999, size: 16, offset: 20208)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2019, file: !1397, line: 581, baseType: !1285, size: 32, offset: 20224)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2019, file: !1397, line: 582, baseType: !1285, size: 32, offset: 20256)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2019, file: !1397, line: 585, baseType: !999, size: 16, offset: 20288)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2019, file: !1397, line: 585, baseType: !999, size: 16, offset: 20304)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2019, file: !1397, line: 586, baseType: !1285, size: 32, offset: 20320)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2019, file: !1397, line: 589, baseType: !999, size: 16, offset: 20352)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2019, file: !1397, line: 589, baseType: !999, size: 16, offset: 20368)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2019, file: !1397, line: 590, baseType: !48, size: 32, offset: 20384)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2019, file: !1397, line: 593, baseType: !999, size: 16, offset: 20416)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2019, file: !1397, line: 593, baseType: !999, size: 16, offset: 20432)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2019, file: !1397, line: 594, baseType: !999, size: 16, offset: 20448)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2019, file: !1397, line: 594, baseType: !999, size: 16, offset: 20464)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2019, file: !1397, line: 595, baseType: !1285, size: 32, offset: 20480)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2019, file: !1397, line: 596, baseType: !1285, size: 32, offset: 20512)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2019, file: !1397, line: 597, baseType: !2288, size: 64, offset: 20544)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1620, line: 44, flags: DIFlagFwdDecl)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2019, file: !1397, line: 600, baseType: !48, size: 32, offset: 20608)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2019, file: !1397, line: 601, baseType: !1285, size: 32, offset: 20640)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2019, file: !1397, line: 604, baseType: !2293, size: 256, offset: 20672)
!2293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, size: 256, elements: !2294)
!2294 = !{!2295}
!2295 = !DISubrange(count: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2019, file: !1397, line: 607, baseType: !2297, size: 10880, offset: 20928)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1397, line: 364, size: 10880, elements: !2298)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2297, file: !1397, line: 365, baseType: !2022, size: 1984)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2297, file: !1397, line: 367, baseType: !1104, size: 8192, offset: 1984)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2297, file: !1397, line: 369, baseType: !999, size: 16, offset: 10176)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2297, file: !1397, line: 369, baseType: !999, size: 16, offset: 10192)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2297, file: !1397, line: 370, baseType: !999, size: 16, offset: 10208)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2297, file: !1397, line: 370, baseType: !999, size: 16, offset: 10224)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2297, file: !1397, line: 372, baseType: !1285, size: 32, offset: 10240)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2297, file: !1397, line: 373, baseType: !1285, size: 32, offset: 10272)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2297, file: !1397, line: 375, baseType: !1935, size: 24, offset: 10304)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2297, file: !1397, line: 376, baseType: !996, size: 8, offset: 10328)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2297, file: !1397, line: 378, baseType: !996, size: 8, offset: 10336)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2297, file: !1397, line: 379, baseType: !1935, size: 24, offset: 10344)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2297, file: !1397, line: 381, baseType: !1001, size: 512, offset: 10368)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2019, file: !1397, line: 609, baseType: !48, size: 32, offset: 31808)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2019, file: !1397, line: 610, baseType: !48, size: 32, offset: 31840)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1396, file: !1397, line: 1252, baseType: !2315, size: 256, offset: 34112)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1397, line: 158, size: 256, elements: !2316)
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2315, file: !1397, line: 159, baseType: !48, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2315, file: !1397, line: 160, baseType: !1285, size: 32, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2315, file: !1397, line: 161, baseType: !1285, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2315, file: !1397, line: 162, baseType: !1285, size: 32, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2315, file: !1397, line: 163, baseType: !48, size: 32, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2315, file: !1397, line: 164, baseType: !999, size: 16, offset: 160)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2315, file: !1397, line: 165, baseType: !999, size: 16, offset: 176)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2315, file: !1397, line: 166, baseType: !1285, size: 32, offset: 192)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2315, file: !1397, line: 167, baseType: !1285, size: 32, offset: 224)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1396, file: !1397, line: 1254, baseType: !1011, size: 128, offset: 34368)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1396, file: !1397, line: 1255, baseType: !1011, size: 128, offset: 34496)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1396, file: !1397, line: 1257, baseType: !986, size: 64, offset: 34624)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1396, file: !1397, line: 1258, baseType: !986, size: 64, offset: 34688)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1396, file: !1397, line: 1259, baseType: !986, size: 64, offset: 34752)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1396, file: !1397, line: 1260, baseType: !986, size: 64, offset: 34816)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1396, file: !1397, line: 1262, baseType: !986, size: 64, offset: 34880)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1396, file: !1397, line: 1265, baseType: !2334, size: 64, offset: 34944)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1397, line: 1265, flags: DIFlagFwdDecl)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1396, file: !1397, line: 1266, baseType: !999, size: 16, offset: 35008)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1396, file: !1397, line: 1267, baseType: !999, size: 16, offset: 35024)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1396, file: !1397, line: 1270, baseType: !48, size: 32, offset: 35040)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1396, file: !1397, line: 1271, baseType: !1011, size: 128, offset: 35072)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1396, file: !1397, line: 1274, baseType: !2341, size: 128, offset: 35200)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1397, line: 650, size: 128, elements: !2342)
!2342 = !{!2343, !2344, !2345, !2346, !2347}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2341, file: !1397, line: 651, baseType: !1464, size: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2341, file: !1397, line: 652, baseType: !996, size: 8, offset: 96)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2341, file: !1397, line: 652, baseType: !996, size: 8, offset: 104)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2341, file: !1397, line: 652, baseType: !996, size: 8, offset: 112)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2341, file: !1397, line: 652, baseType: !996, size: 8, offset: 120)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1396, file: !1397, line: 1275, baseType: !2349, size: 1472, offset: 35328)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1397, line: 676, size: 1472, elements: !2350)
!2350 = !{!2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2363, !2373, !2374, !2375, !2376, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2349, file: !1397, line: 679, baseType: !2341, size: 128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2349, file: !1397, line: 680, baseType: !999, size: 16, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2349, file: !1397, line: 680, baseType: !999, size: 16, offset: 144)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2349, file: !1397, line: 680, baseType: !999, size: 16, offset: 160)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2349, file: !1397, line: 680, baseType: !999, size: 16, offset: 176)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2349, file: !1397, line: 681, baseType: !999, size: 16, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2349, file: !1397, line: 681, baseType: !999, size: 16, offset: 208)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2349, file: !1397, line: 681, baseType: !999, size: 16, offset: 224)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2349, file: !1397, line: 681, baseType: !999, size: 16, offset: 240)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2349, file: !1397, line: 682, baseType: !999, size: 16, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2349, file: !1397, line: 682, baseType: !2362, size: 48, offset: 272)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !999, size: 48, elements: !1387)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2349, file: !1397, line: 685, baseType: !2364, size: 192, offset: 320)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1397, line: 633, size: 192, elements: !2365)
!2365 = !{!2366, !2367, !2368, !2369, !2370, !2371, !2372}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2364, file: !1397, line: 634, baseType: !999, size: 16)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2364, file: !1397, line: 634, baseType: !999, size: 16, offset: 16)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2364, file: !1397, line: 635, baseType: !999, size: 16, offset: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2364, file: !1397, line: 635, baseType: !999, size: 16, offset: 48)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2364, file: !1397, line: 636, baseType: !1285, size: 32, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2364, file: !1397, line: 636, baseType: !1285, size: 32, offset: 96)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2364, file: !1397, line: 637, baseType: !2288, size: 64, offset: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2349, file: !1397, line: 686, baseType: !999, size: 16, offset: 512)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2349, file: !1397, line: 686, baseType: !999, size: 16, offset: 528)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2349, file: !1397, line: 687, baseType: !1285, size: 32, offset: 544)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2349, file: !1397, line: 688, baseType: !2377, size: 448, offset: 576)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1397, line: 674, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1397, line: 659, size: 448, elements: !2379)
!2379 = !{!2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2378, file: !1397, line: 660, baseType: !1285, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2378, file: !1397, line: 661, baseType: !1285, size: 32, offset: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2378, file: !1397, line: 662, baseType: !1285, size: 32, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2378, file: !1397, line: 663, baseType: !1285, size: 32, offset: 96)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2378, file: !1397, line: 664, baseType: !1285, size: 32, offset: 128)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2378, file: !1397, line: 665, baseType: !1285, size: 32, offset: 160)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2378, file: !1397, line: 666, baseType: !1285, size: 32, offset: 192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2378, file: !1397, line: 667, baseType: !1285, size: 32, offset: 224)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2378, file: !1397, line: 668, baseType: !1285, size: 32, offset: 256)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2378, file: !1397, line: 669, baseType: !1285, size: 32, offset: 288)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2378, file: !1397, line: 670, baseType: !48, size: 32, offset: 320)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2378, file: !1397, line: 671, baseType: !1285, size: 32, offset: 352)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2378, file: !1397, line: 672, baseType: !1285, size: 32, offset: 384)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2378, file: !1397, line: 673, baseType: !999, size: 16, offset: 416)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2378, file: !1397, line: 673, baseType: !999, size: 16, offset: 432)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2349, file: !1397, line: 692, baseType: !1285, size: 32, offset: 1024)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2349, file: !1397, line: 697, baseType: !1285, size: 32, offset: 1056)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2349, file: !1397, line: 703, baseType: !48, size: 32, offset: 1088)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2349, file: !1397, line: 704, baseType: !999, size: 16, offset: 1120)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2349, file: !1397, line: 704, baseType: !999, size: 16, offset: 1136)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2349, file: !1397, line: 705, baseType: !999, size: 16, offset: 1152)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2349, file: !1397, line: 706, baseType: !999, size: 16, offset: 1168)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2349, file: !1397, line: 707, baseType: !999, size: 16, offset: 1184)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2349, file: !1397, line: 708, baseType: !999, size: 16, offset: 1200)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2349, file: !1397, line: 709, baseType: !999, size: 16, offset: 1216)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2349, file: !1397, line: 709, baseType: !999, size: 16, offset: 1232)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2349, file: !1397, line: 709, baseType: !999, size: 16, offset: 1248)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2349, file: !1397, line: 709, baseType: !999, size: 16, offset: 1264)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2349, file: !1397, line: 710, baseType: !999, size: 16, offset: 1280)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2349, file: !1397, line: 711, baseType: !999, size: 16, offset: 1296)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2349, file: !1397, line: 712, baseType: !1285, size: 32, offset: 1312)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2349, file: !1397, line: 713, baseType: !1285, size: 32, offset: 1344)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2349, file: !1397, line: 713, baseType: !1285, size: 32, offset: 1376)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2349, file: !1397, line: 713, baseType: !1285, size: 32, offset: 1408)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2349, file: !1397, line: 713, baseType: !1285, size: 32, offset: 1440)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1396, file: !1397, line: 1278, baseType: !2416, size: 64, offset: 36800)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1397, line: 1197, size: 64, elements: !2417)
!2417 = !{!2418, !2419, !2420, !2421}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2416, file: !1397, line: 1199, baseType: !1285, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2416, file: !1397, line: 1200, baseType: !996, size: 8, offset: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2416, file: !1397, line: 1201, baseType: !996, size: 8, offset: 40)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2416, file: !1397, line: 1202, baseType: !999, size: 16, offset: 48)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1396, file: !1397, line: 1281, baseType: !1494, size: 64, offset: 36864)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1396, file: !1397, line: 1284, baseType: !2424, size: 192, offset: 36928)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1397, line: 1208, size: 192, elements: !2425)
!2425 = !{!2426, !2427, !2428, !2429}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2424, file: !1397, line: 1209, baseType: !1464, size: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2424, file: !1397, line: 1210, baseType: !48, size: 32, offset: 96)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2424, file: !1397, line: 1210, baseType: !48, size: 32, offset: 128)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2424, file: !1397, line: 1210, baseType: !48, size: 32, offset: 160)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1396, file: !1397, line: 1287, baseType: !2431, size: 64, offset: 37120)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1397, line: 62, flags: DIFlagFwdDecl)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1396, file: !1397, line: 1289, baseType: !1112, size: 64, offset: 37184)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1396, file: !1397, line: 1290, baseType: !1112, size: 64, offset: 37248)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1396, file: !1397, line: 1293, baseType: !2039, size: 1280, offset: 37312)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1396, file: !1397, line: 1294, baseType: !2097, size: 512, offset: 38592)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1396, file: !1397, line: 1295, baseType: !1867, size: 512, offset: 39104)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1396, file: !1397, line: 1298, baseType: !2439, size: 64, offset: 39616)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1397, line: 1298, flags: DIFlagFwdDecl)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "noteflag", scope: !1023, file: !1024, line: 191, baseType: !48, size: 32, offset: 960)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "editable", scope: !1023, file: !1024, line: 194, baseType: !2443, size: 64, offset: 1024)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditableFunc", file: !1024, line: 67, baseType: !2444)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{!48, !1047}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "itemeditable", scope: !1023, file: !1024, line: 196, baseType: !2448, size: 64, offset: 1088)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "ItemEditableFunc", file: !1024, line: 68, baseType: !2449)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!48, !1047, !48}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "rawoffset", scope: !1023, file: !1024, line: 199, baseType: !48, size: 32, offset: 1152)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "rawtype", scope: !1023, file: !1024, line: 200, baseType: !2454, size: 32, offset: 1184)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "RawPropertyType", file: !6, line: 293, baseType: !47)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1023, file: !1024, line: 205, baseType: !1055, size: 64, offset: 1216)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "py_data", scope: !1023, file: !1024, line: 209, baseType: !986, size: 64, offset: 1280)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "FunctionRNA", file: !6, line: 390, baseType: !1338)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "IntPropertyRNA", file: !1024, line: 252, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IntPropertyRNA", file: !1024, line: 231, size: 2240, elements: !2462)
!2462 = !{!2463, !2464, !2466, !2471, !2476, !2483, !2488, !2493, !2498, !2503, !2508, !2513, !2514, !2515, !2516, !2517, !2518, !2519}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2461, file: !1024, line: 232, baseType: !1022, size: 1344)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2461, file: !1024, line: 234, baseType: !2465, size: 64, offset: 1344)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntGetFunc", file: !1024, line: 78, baseType: !2444)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2461, file: !1024, line: 235, baseType: !2467, size: 64, offset: 1408)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntSetFunc", file: !1024, line: 79, baseType: !2468)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{null, !1047, !48}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "getarray", scope: !2461, file: !1024, line: 236, baseType: !2472, size: 64, offset: 1472)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntArrayGetFunc", file: !1024, line: 80, baseType: !2473)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{null, !1047, !1330}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "setarray", scope: !2461, file: !1024, line: 237, baseType: !2477, size: 64, offset: 1536)
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntArraySetFunc", file: !1024, line: 81, baseType: !2478)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{null, !1047, !2481}
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2461, file: !1024, line: 238, baseType: !2484, size: 64, offset: 1600)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntRangeFunc", file: !1024, line: 82, baseType: !2485)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{null, !1047, !1330, !1330, !1330, !1330}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !2461, file: !1024, line: 240, baseType: !2489, size: 64, offset: 1664)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntGetFuncEx", file: !1024, line: 113, baseType: !2490)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!48, !1047, !1027}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !2461, file: !1024, line: 241, baseType: !2494, size: 64, offset: 1728)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntSetFuncEx", file: !1024, line: 114, baseType: !2495)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DISubroutineType(types: !2497)
!2497 = !{null, !1047, !1027, !48}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "getarray_ex", scope: !2461, file: !1024, line: 242, baseType: !2499, size: 64, offset: 1792)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntArrayGetFuncEx", file: !1024, line: 115, baseType: !2500)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{null, !1047, !1027, !1330}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "setarray_ex", scope: !2461, file: !1024, line: 243, baseType: !2504, size: 64, offset: 1856)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntArraySetFuncEx", file: !1024, line: 116, baseType: !2505)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{null, !1047, !1027, !2481}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "range_ex", scope: !2461, file: !1024, line: 244, baseType: !2509, size: 64, offset: 1920)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntRangeFuncEx", file: !1024, line: 117, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !1047, !1027, !1330, !1330, !1330, !1330}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !2461, file: !1024, line: 246, baseType: !48, size: 32, offset: 1984)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !2461, file: !1024, line: 246, baseType: !48, size: 32, offset: 2016)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !2461, file: !1024, line: 247, baseType: !48, size: 32, offset: 2048)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !2461, file: !1024, line: 247, baseType: !48, size: 32, offset: 2080)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2461, file: !1024, line: 248, baseType: !48, size: 32, offset: 2112)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !2461, file: !1024, line: 250, baseType: !48, size: 32, offset: 2144)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "defaultarray", scope: !2461, file: !1024, line: 251, baseType: !2481, size: 64, offset: 2176)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "FloatPropertyRNA", file: !1024, line: 276, baseType: !2522)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FloatPropertyRNA", file: !1024, line: 254, size: 2304, elements: !2523)
!2523 = !{!2524, !2525, !2530, !2535, !2541, !2548, !2553, !2558, !2563, !2568, !2573, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2522, file: !1024, line: 255, baseType: !1022, size: 1344)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2522, file: !1024, line: 257, baseType: !2526, size: 64, offset: 1344)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatGetFunc", file: !1024, line: 83, baseType: !2527)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!1285, !1047}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2522, file: !1024, line: 258, baseType: !2531, size: 64, offset: 1408)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatSetFunc", file: !1024, line: 84, baseType: !2532)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{null, !1047, !1285}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "getarray", scope: !2522, file: !1024, line: 259, baseType: !2536, size: 64, offset: 1472)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatArrayGetFunc", file: !1024, line: 85, baseType: !2537)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{null, !1047, !2540}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "setarray", scope: !2522, file: !1024, line: 260, baseType: !2542, size: 64, offset: 1536)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatArraySetFunc", file: !1024, line: 86, baseType: !2543)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{null, !1047, !2546}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2522, file: !1024, line: 261, baseType: !2549, size: 64, offset: 1600)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatRangeFunc", file: !1024, line: 87, baseType: !2550)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{null, !1047, !2540, !2540, !2540, !2540}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !2522, file: !1024, line: 263, baseType: !2554, size: 64, offset: 1664)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatGetFuncEx", file: !1024, line: 118, baseType: !2555)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{!1285, !1047, !1027}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !2522, file: !1024, line: 264, baseType: !2559, size: 64, offset: 1728)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatSetFuncEx", file: !1024, line: 119, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{null, !1047, !1027, !1285}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "getarray_ex", scope: !2522, file: !1024, line: 265, baseType: !2564, size: 64, offset: 1792)
!2564 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatArrayGetFuncEx", file: !1024, line: 120, baseType: !2565)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{null, !1047, !1027, !2540}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "setarray_ex", scope: !2522, file: !1024, line: 266, baseType: !2569, size: 64, offset: 1856)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatArraySetFuncEx", file: !1024, line: 121, baseType: !2570)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{null, !1047, !1027, !2546}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "range_ex", scope: !2522, file: !1024, line: 267, baseType: !2574, size: 64, offset: 1920)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatRangeFuncEx", file: !1024, line: 122, baseType: !2575)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{null, !1047, !1027, !2540, !2540, !2540, !2540}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !2522, file: !1024, line: 269, baseType: !1285, size: 32, offset: 1984)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !2522, file: !1024, line: 269, baseType: !1285, size: 32, offset: 2016)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !2522, file: !1024, line: 270, baseType: !1285, size: 32, offset: 2048)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !2522, file: !1024, line: 270, baseType: !1285, size: 32, offset: 2080)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2522, file: !1024, line: 271, baseType: !1285, size: 32, offset: 2112)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2522, file: !1024, line: 272, baseType: !48, size: 32, offset: 2144)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !2522, file: !1024, line: 274, baseType: !1285, size: 32, offset: 2176)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "defaultarray", scope: !2522, file: !1024, line: 275, baseType: !2546, size: 64, offset: 2240)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "StringPropertyRNA", file: !1024, line: 292, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StringPropertyRNA", file: !1024, line: 278, size: 1856, elements: !2590)
!2590 = !{!2591, !2592, !2597, !2599, !2604, !2609, !2611, !2616, !2617}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2589, file: !1024, line: 279, baseType: !1022, size: 1344)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2589, file: !1024, line: 281, baseType: !2593, size: 64, offset: 1344)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringGetFunc", file: !1024, line: 88, baseType: !2594)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{null, !1047, !1091}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2589, file: !1024, line: 282, baseType: !2598, size: 64, offset: 1408)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringLengthFunc", file: !1024, line: 89, baseType: !2444)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2589, file: !1024, line: 283, baseType: !2600, size: 64, offset: 1472)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringSetFunc", file: !1024, line: 90, baseType: !2601)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{null, !1047, !1031}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !2589, file: !1024, line: 285, baseType: !2605, size: 64, offset: 1536)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringGetFuncEx", file: !1024, line: 123, baseType: !2606)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{null, !1047, !1027, !1091}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "length_ex", scope: !2589, file: !1024, line: 286, baseType: !2610, size: 64, offset: 1600)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringLengthFuncEx", file: !1024, line: 124, baseType: !2490)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !2589, file: !1024, line: 287, baseType: !2612, size: 64, offset: 1664)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringSetFuncEx", file: !1024, line: 125, baseType: !2613)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{null, !1047, !1027, !1031}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "maxlength", scope: !2589, file: !1024, line: 289, baseType: !48, size: 32, offset: 1728)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !2589, file: !1024, line: 291, baseType: !1031, size: 64, offset: 1792)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerPropertyRNA", file: !1024, line: 320, baseType: !2620)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerPropertyRNA", file: !1024, line: 311, size: 1664, elements: !2621)
!2621 = !{!2622, !2623, !2628, !2634, !2641, !2646}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2620, file: !1024, line: 312, baseType: !1022, size: 1344)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2620, file: !1024, line: 314, baseType: !2624, size: 64, offset: 1344)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropPointerGetFunc", file: !1024, line: 95, baseType: !2625)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!1350, !1047}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2620, file: !1024, line: 315, baseType: !2629, size: 64, offset: 1408)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropPointerSetFunc", file: !1024, line: 97, baseType: !2630)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{null, !1047, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1350)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "typef", scope: !2620, file: !1024, line: 316, baseType: !2635, size: 64, offset: 1472)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropPointerTypeFunc", file: !1024, line: 96, baseType: !2636)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!2639, !1047}
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !6, line: 417, baseType: !1056)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2620, file: !1024, line: 317, baseType: !2642, size: 64, offset: 1536)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropPointerPollFunc", file: !1024, line: 98, baseType: !2643)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{!48, !1047, !2633}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2620, file: !1024, line: 319, baseType: !1055, size: 64, offset: 1600)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyRNA", file: !1024, line: 335, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyRNA", file: !1024, line: 322, size: 1920, elements: !2650)
!2650 = !{!2651, !2652, !2696, !2701, !2703, !2708, !2710, !2715, !2720, !2727}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2649, file: !1024, line: 323, baseType: !1022, size: 1344)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2649, file: !1024, line: 325, baseType: !2653, size: 64, offset: 1344)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionBeginFunc", file: !1024, line: 99, baseType: !2654)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{null, !2657, !1047}
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyIterator", file: !6, line: 264, size: 1088, elements: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2692, !2693, !2694, !2695}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2658, file: !6, line: 266, baseType: !1350, size: 192)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "builtin_parent", scope: !2658, file: !6, line: 267, baseType: !1350, size: 192, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2658, file: !6, line: 268, baseType: !1027, size: 64, offset: 384)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !2658, file: !6, line: 272, baseType: !2664, size: 320, offset: 448)
!2664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2658, file: !6, line: 269, size: 320, elements: !2665)
!2665 = !{!2666, !2680}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !2664, file: !6, line: 270, baseType: !2667, size: 320)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrayIterator", file: !6, line: 262, baseType: !2668)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayIterator", file: !6, line: 249, size: 320, elements: !2669)
!2669 = !{!2670, !2671, !2672, !2673, !2674, !2675}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2668, file: !6, line: 250, baseType: !1091, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "endptr", scope: !2668, file: !6, line: 251, baseType: !1091, size: 64, offset: 64)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "free_ptr", scope: !2668, file: !6, line: 252, baseType: !986, size: 64, offset: 128)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !2668, file: !6, line: 253, baseType: !48, size: 32, offset: 192)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2668, file: !6, line: 257, baseType: !48, size: 32, offset: 224)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2668, file: !6, line: 261, baseType: !2676, size: 64, offset: 256)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "IteratorSkipFunc", file: !6, line: 241, baseType: !2677)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{!48, !2657, !986}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "listbase", scope: !2664, file: !6, line: 271, baseType: !2681, size: 192)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBaseIterator", file: !6, line: 247, baseType: !2682)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBaseIterator", file: !6, line: 243, size: 192, elements: !2683)
!2683 = !{!2684, !2690, !2691}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2682, file: !6, line: 244, baseType: !2685, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !1012, line: 57, size: 128, elements: !2687)
!2687 = !{!2688, !2689}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2686, file: !1012, line: 58, baseType: !2685, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2686, file: !1012, line: 58, baseType: !2685, size: 64, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2682, file: !6, line: 245, baseType: !48, size: 32, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2682, file: !6, line: 246, baseType: !2676, size: 64, offset: 128)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "idprop", scope: !2658, file: !6, line: 273, baseType: !48, size: 32, offset: 768)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2658, file: !6, line: 274, baseType: !48, size: 32, offset: 800)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2658, file: !6, line: 277, baseType: !1350, size: 192, offset: 832)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !2658, file: !6, line: 278, baseType: !48, size: 32, offset: 1024)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2649, file: !1024, line: 326, baseType: !2697, size: 64, offset: 1408)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionNextFunc", file: !1024, line: 100, baseType: !2698)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{null, !2657}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2649, file: !1024, line: 327, baseType: !2702, size: 64, offset: 1472)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionEndFunc", file: !1024, line: 101, baseType: !2698)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2649, file: !1024, line: 328, baseType: !2704, size: 64, offset: 1536)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionGetFunc", file: !1024, line: 102, baseType: !2705)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!1350, !2657}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2649, file: !1024, line: 329, baseType: !2709, size: 64, offset: 1600)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionLengthFunc", file: !1024, line: 103, baseType: !2444)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "lookupint", scope: !2649, file: !1024, line: 330, baseType: !2711, size: 64, offset: 1664)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionLookupIntFunc", file: !1024, line: 104, baseType: !2712)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!48, !1047, !48, !1047}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "lookupstring", scope: !2649, file: !1024, line: 331, baseType: !2716, size: 64, offset: 1728)
!2716 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionLookupStringFunc", file: !1024, line: 105, baseType: !2717)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = !DISubroutineType(types: !2719)
!2719 = !{!48, !1047, !1031, !1047}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "assignint", scope: !2649, file: !1024, line: 332, baseType: !2721, size: 64, offset: 1792)
!2721 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionAssignIntFunc", file: !1024, line: 106, baseType: !2722)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!48, !1047, !48, !2725}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "item_type", scope: !2649, file: !1024, line: 334, baseType: !1055, size: 64, offset: 1856)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyRNA", file: !1024, line: 309, baseType: !2730)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyRNA", file: !1024, line: 294, size: 1856, elements: !2731)
!2731 = !{!2732, !2733, !2735, !2737, !2752, !2754, !2756, !2757, !2758, !2759}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2730, file: !1024, line: 295, baseType: !1022, size: 1344)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2730, file: !1024, line: 297, baseType: !2734, size: 64, offset: 1344)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumGetFunc", file: !1024, line: 91, baseType: !2444)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2730, file: !1024, line: 298, baseType: !2736, size: 64, offset: 1408)
!2736 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumSetFunc", file: !1024, line: 92, baseType: !2468)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "itemf", scope: !2730, file: !1024, line: 299, baseType: !2738, size: 64, offset: 1472)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumItemFunc", file: !1024, line: 93, baseType: !2739)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!2742, !1335, !1047, !1027, !2751}
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !6, line: 308, baseType: !2744)
!2744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !6, line: 302, size: 320, elements: !2745)
!2745 = !{!2746, !2747, !2748, !2749, !2750}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2744, file: !6, line: 303, baseType: !48, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2744, file: !6, line: 304, baseType: !1031, size: 64, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2744, file: !6, line: 305, baseType: !48, size: 32, offset: 128)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2744, file: !6, line: 306, baseType: !1031, size: 64, offset: 192)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2744, file: !6, line: 307, baseType: !1031, size: 64, offset: 256)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !2730, file: !1024, line: 301, baseType: !2753, size: 64, offset: 1536)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumGetFuncEx", file: !1024, line: 126, baseType: !2490)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !2730, file: !1024, line: 302, baseType: !2755, size: 64, offset: 1600)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumSetFuncEx", file: !1024, line: 127, baseType: !2495)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "py_data", scope: !2730, file: !1024, line: 303, baseType: !986, size: 64, offset: 1664)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !2730, file: !1024, line: 305, baseType: !2742, size: 64, offset: 1728)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "totitem", scope: !2730, file: !1024, line: 306, baseType: !48, size: 32, offset: 1792)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !2730, file: !1024, line: 308, baseType: !48, size: 32, offset: 1824)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoolPropertyRNA", file: !1024, line: 229, baseType: !2762)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoolPropertyRNA", file: !1024, line: 214, size: 1984, elements: !2763)
!2763 = !{!2764, !2765, !2767, !2769, !2771, !2773, !2775, !2777, !2779, !2781, !2782}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2762, file: !1024, line: 215, baseType: !1022, size: 1344)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2762, file: !1024, line: 217, baseType: !2766, size: 64, offset: 1344)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanGetFunc", file: !1024, line: 74, baseType: !2444)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2762, file: !1024, line: 218, baseType: !2768, size: 64, offset: 1408)
!2768 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanSetFunc", file: !1024, line: 75, baseType: !2468)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "getarray", scope: !2762, file: !1024, line: 219, baseType: !2770, size: 64, offset: 1472)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanArrayGetFunc", file: !1024, line: 76, baseType: !2473)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "setarray", scope: !2762, file: !1024, line: 220, baseType: !2772, size: 64, offset: 1536)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanArraySetFunc", file: !1024, line: 77, baseType: !2478)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !2762, file: !1024, line: 222, baseType: !2774, size: 64, offset: 1600)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanGetFuncEx", file: !1024, line: 109, baseType: !2490)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !2762, file: !1024, line: 223, baseType: !2776, size: 64, offset: 1664)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanSetFuncEx", file: !1024, line: 110, baseType: !2495)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "getarray_ex", scope: !2762, file: !1024, line: 224, baseType: !2778, size: 64, offset: 1728)
!2778 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanArrayGetFuncEx", file: !1024, line: 111, baseType: !2500)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "setarray_ex", scope: !2762, file: !1024, line: 225, baseType: !2780, size: 64, offset: 1792)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanArraySetFuncEx", file: !1024, line: 112, baseType: !2505)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !2762, file: !1024, line: 227, baseType: !48, size: 32, offset: 1856)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "defaultarray", scope: !2762, file: !1024, line: 228, baseType: !2481, size: 64, offset: 1920)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterDynAlloc", file: !6, line: 364, baseType: !2786)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterDynAlloc", file: !6, line: 361, size: 128, elements: !2787)
!2787 = !{!2788, !2792}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "array_tot", scope: !2786, file: !6, line: 362, baseType: !2789, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !2790, line: 87, baseType: !2791)
!2790 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2791 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !2786, file: !6, line: 363, baseType: !986, size: 64, offset: 64)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextPropUpdateFunc", file: !1024, line: 65, baseType: !2794)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{null, !1335, !1047, !1027}
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContextUpdateFunc", file: !1024, line: 66, baseType: !2798)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{null, !1335, !1047}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!2802 = !{!0, !2803, !2806, !2809, !2814, !2816}
!2803 = !DIGlobalVariableExpression(var: !2804, expr: !DIExpression())
!2804 = distinct !DIGlobalVariable(name: "DummyRNA_NULL_items", scope: !2, file: !3, line: 1208, type: !2805, isLocal: false, isDefinition: true)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2743, size: 320, elements: !1712)
!2806 = !DIGlobalVariableExpression(var: !2807, expr: !DIExpression())
!2807 = distinct !DIGlobalVariable(name: "DummyRNA_DEFAULT_items", scope: !2, file: !3, line: 1213, type: !2808, isLocal: false, isDefinition: true)
!2808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2743, size: 640, elements: !1256)
!2809 = !DIGlobalVariableExpression(var: !2810, expr: !DIExpression())
!2810 = distinct !DIGlobalVariable(name: "arraytypemap", scope: !2, file: !3, line: 401, type: !2811, isLocal: true, isDefinition: true)
!2811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1021, size: 640, elements: !2812)
!2812 = !{!2813}
!2813 = !DISubrange(count: 10)
!2814 = !DIGlobalVariableExpression(var: !2815, expr: !DIExpression())
!2815 = distinct !DIGlobalVariable(name: "typemap", scope: !2, file: !3, line: 391, type: !2811, isLocal: true, isDefinition: true)
!2816 = !DIGlobalVariableExpression(var: !2817, expr: !DIExpression())
!2817 = distinct !DIGlobalVariable(name: "rna_updates_cache", scope: !2, file: !3, line: 1739, type: !1011, isLocal: true, isDefinition: true)
!2818 = !{i32 7, !"Dwarf Version", i32 4}
!2819 = !{i32 2, !"Debug Info Version", i32 3}
!2820 = !{i32 1, !"wchar_size", i32 4}
!2821 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2822 = distinct !DISubprogram(name: "RNA_init", scope: !3, file: !3, line: 73, type: !2823, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{null}
!2825 = !{}
!2826 = !DILocalVariable(name: "srna", scope: !2822, file: !3, line: 75, type: !2639)
!2827 = !DILocation(line: 75, column: 13, scope: !2822)
!2828 = !DILocalVariable(name: "prop", scope: !2822, file: !3, line: 76, type: !1021)
!2829 = !DILocation(line: 76, column: 15, scope: !2822)
!2830 = !DILocation(line: 78, column: 34, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 78, column: 2)
!2832 = !DILocation(line: 78, column: 14, scope: !2831)
!2833 = !DILocation(line: 78, column: 12, scope: !2831)
!2834 = !DILocation(line: 78, column: 7, scope: !2831)
!2835 = !DILocation(line: 78, column: 41, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2831, file: !3, line: 78, column: 2)
!2837 = !DILocation(line: 78, column: 2, scope: !2831)
!2838 = !DILocation(line: 79, column: 8, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 79, column: 7)
!2840 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 78, column: 71)
!2841 = !DILocation(line: 79, column: 14, scope: !2839)
!2842 = !DILocation(line: 79, column: 19, scope: !2839)
!2843 = !DILocation(line: 79, column: 7, scope: !2840)
!2844 = !DILocation(line: 80, column: 26, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 79, column: 29)
!2846 = !DILocation(line: 80, column: 4, scope: !2845)
!2847 = !DILocation(line: 80, column: 10, scope: !2845)
!2848 = !DILocation(line: 80, column: 15, scope: !2845)
!2849 = !DILocation(line: 80, column: 24, scope: !2845)
!2850 = !DILocation(line: 82, column: 16, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 82, column: 4)
!2852 = !DILocation(line: 82, column: 22, scope: !2851)
!2853 = !DILocation(line: 82, column: 27, scope: !2851)
!2854 = !DILocation(line: 82, column: 38, scope: !2851)
!2855 = !DILocation(line: 82, column: 14, scope: !2851)
!2856 = !DILocation(line: 82, column: 9, scope: !2851)
!2857 = !DILocation(line: 82, column: 45, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2851, file: !3, line: 82, column: 4)
!2859 = !DILocation(line: 82, column: 4, scope: !2851)
!2860 = !DILocation(line: 83, column: 11, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 83, column: 9)
!2862 = !DILocation(line: 83, column: 17, scope: !2861)
!2863 = !DILocation(line: 83, column: 22, scope: !2861)
!2864 = !DILocation(line: 83, column: 9, scope: !2858)
!2865 = !DILocation(line: 84, column: 23, scope: !2861)
!2866 = !DILocation(line: 84, column: 29, scope: !2861)
!2867 = !DILocation(line: 84, column: 34, scope: !2861)
!2868 = !DILocation(line: 84, column: 52, scope: !2861)
!2869 = !DILocation(line: 84, column: 58, scope: !2861)
!2870 = !DILocation(line: 84, column: 70, scope: !2861)
!2871 = !DILocation(line: 84, column: 6, scope: !2861)
!2872 = !DILocation(line: 83, column: 36, scope: !2861)
!2873 = !DILocation(line: 82, column: 58, scope: !2858)
!2874 = !DILocation(line: 82, column: 64, scope: !2858)
!2875 = !DILocation(line: 82, column: 56, scope: !2858)
!2876 = !DILocation(line: 82, column: 4, scope: !2858)
!2877 = distinct !{!2877, !2859, !2878}
!2878 = !DILocation(line: 84, column: 74, scope: !2851)
!2879 = !DILocation(line: 85, column: 3, scope: !2845)
!2880 = !DILocation(line: 86, column: 2, scope: !2840)
!2881 = !DILocation(line: 78, column: 54, scope: !2836)
!2882 = !DILocation(line: 78, column: 60, scope: !2836)
!2883 = !DILocation(line: 78, column: 65, scope: !2836)
!2884 = !DILocation(line: 78, column: 52, scope: !2836)
!2885 = !DILocation(line: 78, column: 2, scope: !2836)
!2886 = distinct !{!2886, !2837, !2887}
!2887 = !DILocation(line: 86, column: 2, scope: !2831)
!2888 = !DILocation(line: 87, column: 1, scope: !2822)
!2889 = distinct !DISubprogram(name: "RNA_exit", scope: !3, file: !3, line: 89, type: !2823, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!2890 = !DILocalVariable(name: "srna", scope: !2889, file: !3, line: 91, type: !2639)
!2891 = !DILocation(line: 91, column: 13, scope: !2889)
!2892 = !DILocation(line: 93, column: 2, scope: !2889)
!2893 = !DILocation(line: 95, column: 34, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 95, column: 2)
!2895 = !DILocation(line: 95, column: 14, scope: !2894)
!2896 = !DILocation(line: 95, column: 12, scope: !2894)
!2897 = !DILocation(line: 95, column: 7, scope: !2894)
!2898 = !DILocation(line: 95, column: 41, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 95, column: 2)
!2900 = !DILocation(line: 95, column: 2, scope: !2894)
!2901 = !DILocation(line: 96, column: 7, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 96, column: 7)
!2903 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 95, column: 71)
!2904 = !DILocation(line: 96, column: 13, scope: !2902)
!2905 = !DILocation(line: 96, column: 18, scope: !2902)
!2906 = !DILocation(line: 96, column: 7, scope: !2903)
!2907 = !DILocation(line: 97, column: 19, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 96, column: 28)
!2909 = !DILocation(line: 97, column: 25, scope: !2908)
!2910 = !DILocation(line: 97, column: 30, scope: !2908)
!2911 = !DILocation(line: 97, column: 4, scope: !2908)
!2912 = !DILocation(line: 98, column: 4, scope: !2908)
!2913 = !DILocation(line: 98, column: 10, scope: !2908)
!2914 = !DILocation(line: 98, column: 15, scope: !2908)
!2915 = !DILocation(line: 98, column: 24, scope: !2908)
!2916 = !DILocation(line: 99, column: 3, scope: !2908)
!2917 = !DILocation(line: 100, column: 2, scope: !2903)
!2918 = !DILocation(line: 95, column: 54, scope: !2899)
!2919 = !DILocation(line: 95, column: 60, scope: !2899)
!2920 = !DILocation(line: 95, column: 65, scope: !2899)
!2921 = !DILocation(line: 95, column: 52, scope: !2899)
!2922 = !DILocation(line: 95, column: 2, scope: !2899)
!2923 = distinct !{!2923, !2900, !2924}
!2924 = !DILocation(line: 100, column: 2, scope: !2894)
!2925 = !DILocation(line: 102, column: 2, scope: !2889)
!2926 = !DILocation(line: 103, column: 1, scope: !2889)
!2927 = distinct !DISubprogram(name: "RNA_property_update_cache_free", scope: !3, file: !3, line: 1805, type: !2823, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!2928 = !DILocalVariable(name: "uce", scope: !2927, file: !3, line: 1807, type: !2929)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_typedef, name: "tRnaUpdateCacheElem", file: !3, line: 1736, baseType: !2931)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tRnaUpdateCacheElem", file: !3, line: 1731, size: 448, elements: !2932)
!2932 = !{!2933, !2935, !2936, !2937}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2931, file: !3, line: 1732, baseType: !2934, size: 64)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2931, file: !3, line: 1732, baseType: !2934, size: 64, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2931, file: !3, line: 1734, baseType: !1350, size: 192, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "L2Funcs", scope: !2931, file: !3, line: 1735, baseType: !1011, size: 128, offset: 320)
!2938 = !DILocation(line: 1807, column: 23, scope: !2927)
!2939 = !DILocalVariable(name: "ucn", scope: !2927, file: !3, line: 1807, type: !2929)
!2940 = !DILocation(line: 1807, column: 29, scope: !2927)
!2941 = !DILocation(line: 1809, column: 31, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 1809, column: 2)
!2943 = !DILocation(line: 1809, column: 13, scope: !2942)
!2944 = !DILocation(line: 1809, column: 11, scope: !2942)
!2945 = !DILocation(line: 1809, column: 7, scope: !2942)
!2946 = !DILocation(line: 1809, column: 38, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 1809, column: 2)
!2948 = !DILocation(line: 1809, column: 2, scope: !2942)
!2949 = !DILocation(line: 1810, column: 9, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 1809, column: 54)
!2951 = !DILocation(line: 1810, column: 14, scope: !2950)
!2952 = !DILocation(line: 1810, column: 7, scope: !2950)
!2953 = !DILocation(line: 1813, column: 18, scope: !2950)
!2954 = !DILocation(line: 1813, column: 23, scope: !2950)
!2955 = !DILocation(line: 1813, column: 3, scope: !2950)
!2956 = !DILocation(line: 1816, column: 37, scope: !2950)
!2957 = !DILocation(line: 1816, column: 3, scope: !2950)
!2958 = !DILocation(line: 1817, column: 2, scope: !2950)
!2959 = !DILocation(line: 1809, column: 49, scope: !2947)
!2960 = !DILocation(line: 1809, column: 47, scope: !2947)
!2961 = !DILocation(line: 1809, column: 2, scope: !2947)
!2962 = distinct !{!2962, !2948, !2963}
!2963 = !DILocation(line: 1817, column: 2, scope: !2942)
!2964 = !DILocation(line: 1818, column: 1, scope: !2927)
!2965 = distinct !DISubprogram(name: "RNA_main_pointer_create", scope: !3, file: !3, line: 107, type: !2966, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{null, !1097, !1349}
!2968 = !DILocalVariable(name: "main", arg: 1, scope: !2965, file: !3, line: 107, type: !1097)
!2969 = !DILocation(line: 107, column: 43, scope: !2965)
!2970 = !DILocalVariable(name: "r_ptr", arg: 2, scope: !2965, file: !3, line: 107, type: !1349)
!2971 = !DILocation(line: 107, column: 61, scope: !2965)
!2972 = !DILocation(line: 109, column: 2, scope: !2965)
!2973 = !DILocation(line: 109, column: 9, scope: !2965)
!2974 = !DILocation(line: 109, column: 12, scope: !2965)
!2975 = !DILocation(line: 109, column: 17, scope: !2965)
!2976 = !DILocation(line: 110, column: 2, scope: !2965)
!2977 = !DILocation(line: 110, column: 9, scope: !2965)
!2978 = !DILocation(line: 110, column: 14, scope: !2965)
!2979 = !DILocation(line: 111, column: 16, scope: !2965)
!2980 = !DILocation(line: 111, column: 2, scope: !2965)
!2981 = !DILocation(line: 111, column: 9, scope: !2965)
!2982 = !DILocation(line: 111, column: 14, scope: !2965)
!2983 = !DILocation(line: 112, column: 1, scope: !2965)
!2984 = distinct !DISubprogram(name: "RNA_id_pointer_create", scope: !3, file: !3, line: 114, type: !2985, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{null, !1145, !1349}
!2987 = !DILocalVariable(name: "id", arg: 1, scope: !2984, file: !3, line: 114, type: !1145)
!2988 = !DILocation(line: 114, column: 32, scope: !2984)
!2989 = !DILocalVariable(name: "r_ptr", arg: 2, scope: !2984, file: !3, line: 114, type: !1349)
!2990 = !DILocation(line: 114, column: 48, scope: !2984)
!2991 = !DILocalVariable(name: "type", scope: !2984, file: !3, line: 116, type: !2639)
!2992 = !DILocation(line: 116, column: 13, scope: !2984)
!2993 = !DILocalVariable(name: "idtype", scope: !2984, file: !3, line: 116, type: !2639)
!2994 = !DILocation(line: 116, column: 20, scope: !2984)
!2995 = !DILocation(line: 118, column: 6, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 118, column: 6)
!2997 = !DILocation(line: 118, column: 6, scope: !2984)
!2998 = !DILocalVariable(name: "tmp", scope: !2999, file: !3, line: 119, type: !1350)
!2999 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 118, column: 10)
!3000 = !DILocation(line: 119, column: 14, scope: !2999)
!3001 = !DILocation(line: 120, column: 14, scope: !2999)
!3002 = !DILocation(line: 120, column: 7, scope: !2999)
!3003 = !DILocation(line: 120, column: 12, scope: !2999)
!3004 = !DILocation(line: 121, column: 12, scope: !2999)
!3005 = !DILocation(line: 121, column: 10, scope: !2999)
!3006 = !DILocation(line: 123, column: 3, scope: !2999)
!3007 = !DILocation(line: 123, column: 10, scope: !2999)
!3008 = !DILocation(line: 123, column: 18, scope: !2999)
!3009 = !DILocation(line: 124, column: 11, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 123, column: 26)
!3011 = !DILocation(line: 124, column: 19, scope: !3010)
!3012 = !DILocation(line: 124, column: 9, scope: !3010)
!3013 = !DILocation(line: 126, column: 8, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 126, column: 8)
!3015 = !DILocation(line: 126, column: 16, scope: !3014)
!3016 = !DILocation(line: 126, column: 13, scope: !3014)
!3017 = !DILocation(line: 126, column: 8, scope: !3010)
!3018 = !DILocation(line: 127, column: 5, scope: !3014)
!3019 = !DILocation(line: 129, column: 14, scope: !3014)
!3020 = !DILocation(line: 129, column: 12, scope: !3014)
!3021 = distinct !{!3021, !3006, !3022}
!3022 = !DILocation(line: 130, column: 3, scope: !2999)
!3023 = !DILocation(line: 131, column: 2, scope: !2999)
!3024 = !DILocation(line: 133, column: 19, scope: !2984)
!3025 = !DILocation(line: 133, column: 2, scope: !2984)
!3026 = !DILocation(line: 133, column: 9, scope: !2984)
!3027 = !DILocation(line: 133, column: 12, scope: !2984)
!3028 = !DILocation(line: 133, column: 17, scope: !2984)
!3029 = !DILocation(line: 134, column: 16, scope: !2984)
!3030 = !DILocation(line: 134, column: 2, scope: !2984)
!3031 = !DILocation(line: 134, column: 9, scope: !2984)
!3032 = !DILocation(line: 134, column: 14, scope: !2984)
!3033 = !DILocation(line: 135, column: 16, scope: !2984)
!3034 = !DILocation(line: 135, column: 2, scope: !2984)
!3035 = !DILocation(line: 135, column: 9, scope: !2984)
!3036 = !DILocation(line: 135, column: 14, scope: !2984)
!3037 = !DILocation(line: 136, column: 1, scope: !2984)
!3038 = distinct !DISubprogram(name: "RNA_pointer_create", scope: !3, file: !3, line: 138, type: !3039, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{null, !1145, !2639, !986, !1349}
!3041 = !DILocalVariable(name: "id", arg: 1, scope: !3038, file: !3, line: 138, type: !1145)
!3042 = !DILocation(line: 138, column: 29, scope: !3038)
!3043 = !DILocalVariable(name: "type", arg: 2, scope: !3038, file: !3, line: 138, type: !2639)
!3044 = !DILocation(line: 138, column: 44, scope: !3038)
!3045 = !DILocalVariable(name: "data", arg: 3, scope: !3038, file: !3, line: 138, type: !986)
!3046 = !DILocation(line: 138, column: 56, scope: !3038)
!3047 = !DILocalVariable(name: "r_ptr", arg: 4, scope: !3038, file: !3, line: 138, type: !1349)
!3048 = !DILocation(line: 138, column: 74, scope: !3038)
!3049 = !DILocation(line: 150, column: 19, scope: !3038)
!3050 = !DILocation(line: 150, column: 2, scope: !3038)
!3051 = !DILocation(line: 150, column: 9, scope: !3038)
!3052 = !DILocation(line: 150, column: 12, scope: !3038)
!3053 = !DILocation(line: 150, column: 17, scope: !3038)
!3054 = !DILocation(line: 151, column: 16, scope: !3038)
!3055 = !DILocation(line: 151, column: 2, scope: !3038)
!3056 = !DILocation(line: 151, column: 9, scope: !3038)
!3057 = !DILocation(line: 151, column: 14, scope: !3038)
!3058 = !DILocation(line: 152, column: 16, scope: !3038)
!3059 = !DILocation(line: 152, column: 2, scope: !3038)
!3060 = !DILocation(line: 152, column: 9, scope: !3038)
!3061 = !DILocation(line: 152, column: 14, scope: !3038)
!3062 = !DILocation(line: 154, column: 6, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 154, column: 6)
!3064 = !DILocation(line: 154, column: 6, scope: !3038)
!3065 = !DILocation(line: 155, column: 3, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 154, column: 12)
!3067 = !DILocation(line: 155, column: 10, scope: !3066)
!3068 = !DILocation(line: 155, column: 17, scope: !3066)
!3069 = !DILocation(line: 155, column: 22, scope: !3066)
!3070 = !DILocation(line: 155, column: 25, scope: !3066)
!3071 = !DILocation(line: 155, column: 32, scope: !3066)
!3072 = !DILocation(line: 155, column: 38, scope: !3066)
!3073 = !DILocation(line: 0, scope: !3066)
!3074 = !DILocalVariable(name: "rtype", scope: !3075, file: !3, line: 156, type: !2639)
!3075 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 155, column: 46)
!3076 = !DILocation(line: 156, column: 15, scope: !3075)
!3077 = !DILocation(line: 156, column: 23, scope: !3075)
!3078 = !DILocation(line: 156, column: 30, scope: !3075)
!3079 = !DILocation(line: 156, column: 36, scope: !3075)
!3080 = !DILocation(line: 156, column: 43, scope: !3075)
!3081 = !DILocation(line: 158, column: 8, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 158, column: 8)
!3083 = !DILocation(line: 158, column: 17, scope: !3082)
!3084 = !DILocation(line: 158, column: 24, scope: !3082)
!3085 = !DILocation(line: 158, column: 14, scope: !3082)
!3086 = !DILocation(line: 158, column: 8, scope: !3075)
!3087 = !DILocation(line: 159, column: 5, scope: !3082)
!3088 = !DILocation(line: 161, column: 19, scope: !3082)
!3089 = !DILocation(line: 161, column: 5, scope: !3082)
!3090 = !DILocation(line: 161, column: 12, scope: !3082)
!3091 = !DILocation(line: 161, column: 17, scope: !3082)
!3092 = distinct !{!3092, !3065, !3093}
!3093 = !DILocation(line: 162, column: 3, scope: !3066)
!3094 = !DILocation(line: 163, column: 2, scope: !3066)
!3095 = !DILocation(line: 164, column: 1, scope: !3038)
!3096 = distinct !DISubprogram(name: "RNA_blender_rna_pointer_create", scope: !3, file: !3, line: 176, type: !3097, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{null, !1349}
!3099 = !DILocalVariable(name: "r_ptr", arg: 1, scope: !3096, file: !3, line: 176, type: !1349)
!3100 = !DILocation(line: 176, column: 49, scope: !3096)
!3101 = !DILocation(line: 178, column: 2, scope: !3096)
!3102 = !DILocation(line: 178, column: 9, scope: !3096)
!3103 = !DILocation(line: 178, column: 12, scope: !3096)
!3104 = !DILocation(line: 178, column: 17, scope: !3096)
!3105 = !DILocation(line: 179, column: 2, scope: !3096)
!3106 = !DILocation(line: 179, column: 9, scope: !3096)
!3107 = !DILocation(line: 179, column: 14, scope: !3096)
!3108 = !DILocation(line: 180, column: 2, scope: !3096)
!3109 = !DILocation(line: 180, column: 9, scope: !3096)
!3110 = !DILocation(line: 180, column: 14, scope: !3096)
!3111 = !DILocation(line: 181, column: 1, scope: !3096)
!3112 = distinct !DISubprogram(name: "rna_pointer_inherit_refine", scope: !3, file: !3, line: 183, type: !3113, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!1350, !1349, !2639, !986}
!3115 = !DILocalVariable(name: "ptr", arg: 1, scope: !3112, file: !3, line: 183, type: !1349)
!3116 = !DILocation(line: 183, column: 51, scope: !3112)
!3117 = !DILocalVariable(name: "type", arg: 2, scope: !3112, file: !3, line: 183, type: !2639)
!3118 = !DILocation(line: 183, column: 67, scope: !3112)
!3119 = !DILocalVariable(name: "data", arg: 3, scope: !3112, file: !3, line: 183, type: !986)
!3120 = !DILocation(line: 183, column: 79, scope: !3112)
!3121 = !DILocation(line: 185, column: 6, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 185, column: 6)
!3123 = !DILocation(line: 185, column: 6, scope: !3112)
!3124 = !DILocalVariable(name: "result", scope: !3125, file: !3, line: 186, type: !1350)
!3125 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 185, column: 12)
!3126 = !DILocation(line: 186, column: 14, scope: !3125)
!3127 = !DILocation(line: 187, column: 17, scope: !3125)
!3128 = !DILocation(line: 187, column: 10, scope: !3125)
!3129 = !DILocation(line: 187, column: 15, scope: !3125)
!3130 = !DILocation(line: 188, column: 17, scope: !3125)
!3131 = !DILocation(line: 188, column: 10, scope: !3125)
!3132 = !DILocation(line: 188, column: 15, scope: !3125)
!3133 = !DILocation(line: 189, column: 26, scope: !3125)
!3134 = !DILocation(line: 189, column: 32, scope: !3125)
!3135 = !DILocation(line: 189, column: 3, scope: !3125)
!3136 = !DILocation(line: 191, column: 3, scope: !3125)
!3137 = !DILocation(line: 191, column: 17, scope: !3125)
!3138 = !DILocation(line: 191, column: 23, scope: !3125)
!3139 = !DILocation(line: 192, column: 18, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 191, column: 31)
!3141 = !DILocation(line: 192, column: 24, scope: !3140)
!3142 = !DILocation(line: 192, column: 11, scope: !3140)
!3143 = !DILocation(line: 192, column: 9, scope: !3140)
!3144 = !DILocation(line: 194, column: 8, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 194, column: 8)
!3146 = !DILocation(line: 194, column: 23, scope: !3145)
!3147 = !DILocation(line: 194, column: 13, scope: !3145)
!3148 = !DILocation(line: 194, column: 8, scope: !3140)
!3149 = !DILocation(line: 195, column: 5, scope: !3145)
!3150 = !DILocation(line: 197, column: 19, scope: !3145)
!3151 = !DILocation(line: 197, column: 12, scope: !3145)
!3152 = !DILocation(line: 197, column: 17, scope: !3145)
!3153 = distinct !{!3153, !3136, !3154}
!3154 = !DILocation(line: 198, column: 3, scope: !3125)
!3155 = !DILocation(line: 199, column: 3, scope: !3125)
!3156 = !DILocation(line: 202, column: 10, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 201, column: 7)
!3158 = !DILocation(line: 202, column: 3, scope: !3157)
!3159 = !DILocation(line: 204, column: 1, scope: !3112)
!3160 = distinct !DISubprogram(name: "rna_pointer_inherit_id", scope: !3, file: !3, line: 166, type: !3161, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{null, !2639, !1349, !1349}
!3163 = !DILocalVariable(name: "type", arg: 1, scope: !3160, file: !3, line: 166, type: !2639)
!3164 = !DILocation(line: 166, column: 47, scope: !3160)
!3165 = !DILocalVariable(name: "parent", arg: 2, scope: !3160, file: !3, line: 166, type: !1349)
!3166 = !DILocation(line: 166, column: 65, scope: !3160)
!3167 = !DILocalVariable(name: "ptr", arg: 3, scope: !3160, file: !3, line: 166, type: !1349)
!3168 = !DILocation(line: 166, column: 85, scope: !3160)
!3169 = !DILocation(line: 168, column: 6, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 168, column: 6)
!3171 = !DILocation(line: 168, column: 11, scope: !3170)
!3172 = !DILocation(line: 168, column: 14, scope: !3170)
!3173 = !DILocation(line: 168, column: 20, scope: !3170)
!3174 = !DILocation(line: 168, column: 25, scope: !3170)
!3175 = !DILocation(line: 168, column: 6, scope: !3160)
!3176 = !DILocation(line: 169, column: 18, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 168, column: 38)
!3178 = !DILocation(line: 169, column: 23, scope: !3177)
!3179 = !DILocation(line: 169, column: 3, scope: !3177)
!3180 = !DILocation(line: 169, column: 8, scope: !3177)
!3181 = !DILocation(line: 169, column: 11, scope: !3177)
!3182 = !DILocation(line: 169, column: 16, scope: !3177)
!3183 = !DILocation(line: 170, column: 2, scope: !3177)
!3184 = !DILocation(line: 172, column: 18, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 171, column: 7)
!3186 = !DILocation(line: 172, column: 26, scope: !3185)
!3187 = !DILocation(line: 172, column: 29, scope: !3185)
!3188 = !DILocation(line: 172, column: 3, scope: !3185)
!3189 = !DILocation(line: 172, column: 8, scope: !3185)
!3190 = !DILocation(line: 172, column: 11, scope: !3185)
!3191 = !DILocation(line: 172, column: 16, scope: !3185)
!3192 = !DILocation(line: 174, column: 1, scope: !3160)
!3193 = distinct !DISubprogram(name: "RNA_pointer_recast", scope: !3, file: !3, line: 207, type: !3194, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{null, !1349, !1349}
!3196 = !DILocalVariable(name: "ptr", arg: 1, scope: !3193, file: !3, line: 207, type: !1349)
!3197 = !DILocation(line: 207, column: 37, scope: !3193)
!3198 = !DILocalVariable(name: "r_ptr", arg: 2, scope: !3193, file: !3, line: 207, type: !1349)
!3199 = !DILocation(line: 207, column: 54, scope: !3193)
!3200 = !DILocalVariable(name: "base", scope: !3201, file: !3, line: 217, type: !2639)
!3201 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 216, column: 2)
!3202 = !DILocation(line: 217, column: 14, scope: !3201)
!3203 = !DILocalVariable(name: "t_ptr", scope: !3201, file: !3, line: 218, type: !1350)
!3204 = !DILocation(line: 218, column: 14, scope: !3201)
!3205 = !DILocation(line: 219, column: 4, scope: !3201)
!3206 = !DILocation(line: 219, column: 13, scope: !3201)
!3207 = !DILocation(line: 219, column: 12, scope: !3201)
!3208 = !DILocation(line: 221, column: 15, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 221, column: 3)
!3210 = !DILocation(line: 221, column: 20, scope: !3209)
!3211 = !DILocation(line: 221, column: 26, scope: !3209)
!3212 = !DILocation(line: 221, column: 13, scope: !3209)
!3213 = !DILocation(line: 221, column: 8, scope: !3209)
!3214 = !DILocation(line: 221, column: 32, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 221, column: 3)
!3216 = !DILocation(line: 221, column: 3, scope: !3209)
!3217 = !DILocation(line: 222, column: 39, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 221, column: 57)
!3219 = !DILocation(line: 222, column: 44, scope: !3218)
!3220 = !DILocation(line: 222, column: 50, scope: !3218)
!3221 = !DILocation(line: 222, column: 55, scope: !3218)
!3222 = !DILocation(line: 222, column: 12, scope: !3218)
!3223 = !DILocation(line: 223, column: 14, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 223, column: 8)
!3225 = !DILocation(line: 223, column: 8, scope: !3224)
!3226 = !DILocation(line: 223, column: 19, scope: !3224)
!3227 = !DILocation(line: 223, column: 28, scope: !3224)
!3228 = !DILocation(line: 223, column: 36, scope: !3224)
!3229 = !DILocation(line: 223, column: 41, scope: !3224)
!3230 = !DILocation(line: 223, column: 33, scope: !3224)
!3231 = !DILocation(line: 223, column: 8, scope: !3218)
!3232 = !DILocation(line: 224, column: 6, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 223, column: 47)
!3234 = !DILocation(line: 224, column: 14, scope: !3233)
!3235 = !DILocation(line: 225, column: 4, scope: !3233)
!3236 = !DILocation(line: 226, column: 3, scope: !3218)
!3237 = !DILocation(line: 221, column: 45, scope: !3215)
!3238 = !DILocation(line: 221, column: 51, scope: !3215)
!3239 = !DILocation(line: 221, column: 43, scope: !3215)
!3240 = !DILocation(line: 221, column: 3, scope: !3215)
!3241 = distinct !{!3241, !3216, !3242}
!3242 = !DILocation(line: 226, column: 3, scope: !3209)
!3243 = !DILocation(line: 228, column: 1, scope: !3193)
!3244 = distinct !DISubprogram(name: "RNA_struct_idprops", scope: !3, file: !3, line: 262, type: !3245, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{!993, !1349, !1381}
!3247 = !DILocalVariable(name: "ptr", arg: 1, scope: !3244, file: !3, line: 262, type: !1349)
!3248 = !DILocation(line: 262, column: 44, scope: !3244)
!3249 = !DILocalVariable(name: "create", arg: 2, scope: !3244, file: !3, line: 262, type: !1381)
!3250 = !DILocation(line: 262, column: 54, scope: !3244)
!3251 = !DILocalVariable(name: "type", scope: !3244, file: !3, line: 264, type: !2639)
!3252 = !DILocation(line: 264, column: 13, scope: !3244)
!3253 = !DILocation(line: 264, column: 20, scope: !3244)
!3254 = !DILocation(line: 264, column: 25, scope: !3244)
!3255 = !DILocation(line: 266, column: 6, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 266, column: 6)
!3257 = !DILocation(line: 266, column: 11, scope: !3256)
!3258 = !DILocation(line: 266, column: 14, scope: !3256)
!3259 = !DILocation(line: 266, column: 20, scope: !3256)
!3260 = !DILocation(line: 266, column: 6, scope: !3244)
!3261 = !DILocation(line: 267, column: 10, scope: !3256)
!3262 = !DILocation(line: 267, column: 16, scope: !3256)
!3263 = !DILocation(line: 267, column: 29, scope: !3256)
!3264 = !DILocation(line: 267, column: 34, scope: !3256)
!3265 = !DILocation(line: 267, column: 3, scope: !3256)
!3266 = !DILocation(line: 269, column: 2, scope: !3244)
!3267 = !DILocation(line: 270, column: 1, scope: !3244)
!3268 = distinct !DISubprogram(name: "RNA_struct_idprops_check", scope: !3, file: !3, line: 272, type: !3269, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3269 = !DISubroutineType(types: !3270)
!3270 = !{!1381, !2639}
!3271 = !DILocalVariable(name: "srna", arg: 1, scope: !3268, file: !3, line: 272, type: !2639)
!3272 = !DILocation(line: 272, column: 42, scope: !3268)
!3273 = !DILocation(line: 274, column: 10, scope: !3268)
!3274 = !DILocation(line: 274, column: 15, scope: !3268)
!3275 = !DILocation(line: 274, column: 18, scope: !3268)
!3276 = !DILocation(line: 274, column: 24, scope: !3268)
!3277 = !DILocation(line: 0, scope: !3268)
!3278 = !DILocation(line: 274, column: 9, scope: !3268)
!3279 = !DILocation(line: 274, column: 2, scope: !3268)
!3280 = distinct !DISubprogram(name: "rna_idproperty_check", scope: !3, file: !3, line: 409, type: !3281, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!993, !3283, !1349}
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!3284 = !DILocalVariable(name: "prop", arg: 1, scope: !3280, file: !3, line: 409, type: !3283)
!3285 = !DILocation(line: 409, column: 48, scope: !3280)
!3286 = !DILocalVariable(name: "ptr", arg: 2, scope: !3280, file: !3, line: 409, type: !1349)
!3287 = !DILocation(line: 409, column: 66, scope: !3280)
!3288 = !DILocation(line: 418, column: 8, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 418, column: 6)
!3290 = !DILocation(line: 418, column: 7, scope: !3289)
!3291 = !DILocation(line: 418, column: 15, scope: !3289)
!3292 = !DILocation(line: 418, column: 21, scope: !3289)
!3293 = !DILocation(line: 418, column: 6, scope: !3280)
!3294 = !DILocation(line: 419, column: 9, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 419, column: 7)
!3296 = distinct !DILexicalBlock(scope: !3289, file: !3, line: 418, column: 35)
!3297 = !DILocation(line: 419, column: 8, scope: !3295)
!3298 = !DILocation(line: 419, column: 16, scope: !3295)
!3299 = !DILocation(line: 419, column: 21, scope: !3295)
!3300 = !DILocation(line: 419, column: 7, scope: !3296)
!3301 = !DILocalVariable(name: "idprop", scope: !3302, file: !3, line: 420, type: !987)
!3302 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 419, column: 40)
!3303 = !DILocation(line: 420, column: 16, scope: !3302)
!3304 = !DILocation(line: 420, column: 45, scope: !3302)
!3305 = !DILocation(line: 420, column: 52, scope: !3302)
!3306 = !DILocation(line: 420, column: 51, scope: !3302)
!3307 = !DILocation(line: 420, column: 59, scope: !3302)
!3308 = !DILocation(line: 420, column: 25, scope: !3302)
!3309 = !DILocation(line: 422, column: 8, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 422, column: 8)
!3311 = !DILocation(line: 422, column: 15, scope: !3310)
!3312 = !DILocation(line: 422, column: 47, scope: !3310)
!3313 = !DILocation(line: 422, column: 53, scope: !3310)
!3314 = !DILocation(line: 422, column: 52, scope: !3310)
!3315 = !DILocation(line: 422, column: 59, scope: !3310)
!3316 = !DILocation(line: 422, column: 19, scope: !3310)
!3317 = !DILocation(line: 422, column: 8, scope: !3302)
!3318 = !DILocalVariable(name: "group", scope: !3319, file: !3, line: 423, type: !987)
!3319 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 422, column: 68)
!3320 = !DILocation(line: 423, column: 17, scope: !3319)
!3321 = !DILocation(line: 423, column: 44, scope: !3319)
!3322 = !DILocation(line: 423, column: 25, scope: !3319)
!3323 = !DILocation(line: 425, column: 23, scope: !3319)
!3324 = !DILocation(line: 425, column: 30, scope: !3319)
!3325 = !DILocation(line: 425, column: 5, scope: !3319)
!3326 = !DILocation(line: 426, column: 5, scope: !3319)
!3327 = !DILocation(line: 429, column: 11, scope: !3302)
!3328 = !DILocation(line: 429, column: 4, scope: !3302)
!3329 = !DILocation(line: 432, column: 4, scope: !3295)
!3330 = !DILocalVariable(name: "idprop", scope: !3331, file: !3, line: 436, type: !987)
!3331 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 435, column: 2)
!3332 = !DILocation(line: 436, column: 15, scope: !3331)
!3333 = !DILocation(line: 436, column: 40, scope: !3331)
!3334 = !DILocation(line: 436, column: 39, scope: !3331)
!3335 = !DILocation(line: 436, column: 24, scope: !3331)
!3336 = !DILocation(line: 438, column: 7, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 438, column: 7)
!3338 = !DILocation(line: 438, column: 15, scope: !3337)
!3339 = !DILocation(line: 438, column: 20, scope: !3337)
!3340 = !DILocation(line: 438, column: 7, scope: !3331)
!3341 = !DILocation(line: 439, column: 31, scope: !3337)
!3342 = !DILocation(line: 439, column: 39, scope: !3337)
!3343 = !DILocation(line: 439, column: 25, scope: !3337)
!3344 = !DILocation(line: 439, column: 12, scope: !3337)
!3345 = !DILocation(line: 439, column: 5, scope: !3337)
!3346 = !DILocation(line: 439, column: 10, scope: !3337)
!3347 = !DILocation(line: 439, column: 4, scope: !3337)
!3348 = !DILocation(line: 441, column: 26, scope: !3337)
!3349 = !DILocation(line: 441, column: 34, scope: !3337)
!3350 = !DILocation(line: 441, column: 20, scope: !3337)
!3351 = !DILocation(line: 441, column: 12, scope: !3337)
!3352 = !DILocation(line: 441, column: 5, scope: !3337)
!3353 = !DILocation(line: 441, column: 10, scope: !3337)
!3354 = !DILocation(line: 443, column: 10, scope: !3331)
!3355 = !DILocation(line: 443, column: 3, scope: !3331)
!3356 = !DILocation(line: 445, column: 1, scope: !3280)
!3357 = distinct !DISubprogram(name: "rna_idproperty_find", scope: !3, file: !3, line: 277, type: !3358, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{!987, !1349, !1031}
!3360 = !DILocalVariable(name: "ptr", arg: 1, scope: !3357, file: !3, line: 277, type: !1349)
!3361 = !DILocation(line: 277, column: 52, scope: !3357)
!3362 = !DILocalVariable(name: "name", arg: 2, scope: !3357, file: !3, line: 277, type: !1031)
!3363 = !DILocation(line: 277, column: 69, scope: !3357)
!3364 = !DILocalVariable(name: "group", scope: !3357, file: !3, line: 279, type: !987)
!3365 = !DILocation(line: 279, column: 14, scope: !3357)
!3366 = !DILocation(line: 279, column: 41, scope: !3357)
!3367 = !DILocation(line: 279, column: 22, scope: !3357)
!3368 = !DILocation(line: 281, column: 6, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 281, column: 6)
!3370 = !DILocation(line: 281, column: 6, scope: !3357)
!3371 = !DILocation(line: 282, column: 35, scope: !3369)
!3372 = !DILocation(line: 282, column: 42, scope: !3369)
!3373 = !DILocation(line: 282, column: 10, scope: !3369)
!3374 = !DILocation(line: 282, column: 3, scope: !3369)
!3375 = !DILocation(line: 284, column: 2, scope: !3357)
!3376 = !DILocation(line: 285, column: 1, scope: !3357)
!3377 = distinct !DISubprogram(name: "rna_idproperty_verify_valid", scope: !3, file: !3, line: 345, type: !3378, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!1381, !1349, !1021, !987}
!3380 = !DILocalVariable(name: "ptr", arg: 1, scope: !3377, file: !3, line: 345, type: !1349)
!3381 = !DILocation(line: 345, column: 53, scope: !3377)
!3382 = !DILocalVariable(name: "prop", arg: 2, scope: !3377, file: !3, line: 345, type: !1021)
!3383 = !DILocation(line: 345, column: 71, scope: !3377)
!3384 = !DILocalVariable(name: "idprop", arg: 3, scope: !3377, file: !3, line: 345, type: !987)
!3385 = !DILocation(line: 345, column: 89, scope: !3377)
!3386 = !DILocation(line: 352, column: 10, scope: !3377)
!3387 = !DILocation(line: 352, column: 18, scope: !3377)
!3388 = !DILocation(line: 352, column: 2, scope: !3377)
!3389 = !DILocation(line: 354, column: 8, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 354, column: 8)
!3391 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 352, column: 24)
!3392 = !DILocation(line: 354, column: 14, scope: !3390)
!3393 = !DILocation(line: 354, column: 19, scope: !3390)
!3394 = !DILocation(line: 354, column: 8, scope: !3391)
!3395 = !DILocation(line: 355, column: 5, scope: !3390)
!3396 = !DILocation(line: 356, column: 4, scope: !3391)
!3397 = !DILocation(line: 358, column: 41, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 358, column: 8)
!3399 = !DILocation(line: 358, column: 46, scope: !3398)
!3400 = !DILocation(line: 358, column: 8, scope: !3398)
!3401 = !DILocation(line: 358, column: 55, scope: !3398)
!3402 = !DILocation(line: 358, column: 63, scope: !3398)
!3403 = !DILocation(line: 358, column: 52, scope: !3398)
!3404 = !DILocation(line: 358, column: 8, scope: !3391)
!3405 = !DILocation(line: 359, column: 5, scope: !3398)
!3406 = !DILocation(line: 361, column: 8, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 361, column: 8)
!3408 = !DILocation(line: 361, column: 16, scope: !3407)
!3409 = !DILocation(line: 361, column: 24, scope: !3407)
!3410 = !DILocation(line: 361, column: 37, scope: !3407)
!3411 = !DILocation(line: 361, column: 40, scope: !3407)
!3412 = !DILocation(line: 361, column: 46, scope: !3407)
!3413 = !DILocation(line: 361, column: 51, scope: !3407)
!3414 = !DILocation(line: 361, column: 8, scope: !3391)
!3415 = !DILocation(line: 362, column: 5, scope: !3407)
!3416 = !DILocation(line: 363, column: 8, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 363, column: 8)
!3418 = !DILocation(line: 363, column: 16, scope: !3417)
!3419 = !DILocation(line: 363, column: 24, scope: !3417)
!3420 = !DILocation(line: 363, column: 35, scope: !3417)
!3421 = !DILocation(line: 363, column: 39, scope: !3417)
!3422 = !DILocation(line: 363, column: 8, scope: !3391)
!3423 = !DILocation(line: 364, column: 5, scope: !3417)
!3424 = !DILocation(line: 366, column: 4, scope: !3391)
!3425 = !DILocation(line: 368, column: 9, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 368, column: 8)
!3427 = !DILocation(line: 368, column: 8, scope: !3391)
!3428 = !DILocation(line: 369, column: 5, scope: !3426)
!3429 = !DILocation(line: 370, column: 4, scope: !3391)
!3430 = !DILocation(line: 373, column: 8, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 373, column: 8)
!3432 = !DILocation(line: 373, column: 14, scope: !3431)
!3433 = !DILocation(line: 373, column: 19, scope: !3431)
!3434 = !DILocation(line: 373, column: 8, scope: !3391)
!3435 = !DILocation(line: 374, column: 5, scope: !3431)
!3436 = !DILocation(line: 375, column: 4, scope: !3391)
!3437 = !DILocation(line: 377, column: 8, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 377, column: 8)
!3439 = !DILocation(line: 377, column: 14, scope: !3438)
!3440 = !DILocation(line: 377, column: 19, scope: !3438)
!3441 = !DILocation(line: 377, column: 8, scope: !3391)
!3442 = !DILocation(line: 378, column: 5, scope: !3438)
!3443 = !DILocation(line: 379, column: 4, scope: !3391)
!3444 = !DILocation(line: 381, column: 8, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3391, file: !3, line: 381, column: 8)
!3446 = !DILocation(line: 381, column: 14, scope: !3445)
!3447 = !DILocation(line: 381, column: 19, scope: !3445)
!3448 = !DILocation(line: 381, column: 8, scope: !3391)
!3449 = !DILocation(line: 382, column: 5, scope: !3445)
!3450 = !DILocation(line: 383, column: 4, scope: !3391)
!3451 = !DILocation(line: 385, column: 4, scope: !3391)
!3452 = !DILocation(line: 388, column: 2, scope: !3377)
!3453 = !DILocation(line: 389, column: 1, scope: !3377)
!3454 = distinct !DISubprogram(name: "RNA_struct_find", scope: !3, file: !3, line: 509, type: !3455, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3455 = !DISubroutineType(types: !3456)
!3456 = !{!2639, !1031}
!3457 = !DILocalVariable(name: "identifier", arg: 1, scope: !3454, file: !3, line: 509, type: !1031)
!3458 = !DILocation(line: 509, column: 40, scope: !3454)
!3459 = !DILocalVariable(name: "type", scope: !3454, file: !3, line: 511, type: !2639)
!3460 = !DILocation(line: 511, column: 13, scope: !3454)
!3461 = !DILocation(line: 512, column: 6, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 512, column: 6)
!3463 = !DILocation(line: 512, column: 6, scope: !3454)
!3464 = !DILocation(line: 513, column: 35, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 513, column: 3)
!3466 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 512, column: 18)
!3467 = !DILocation(line: 513, column: 15, scope: !3465)
!3468 = !DILocation(line: 513, column: 13, scope: !3465)
!3469 = !DILocation(line: 513, column: 8, scope: !3465)
!3470 = !DILocation(line: 513, column: 42, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3465, file: !3, line: 513, column: 3)
!3472 = !DILocation(line: 513, column: 3, scope: !3465)
!3473 = !DILocation(line: 514, column: 15, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 514, column: 8)
!3475 = !DILocation(line: 514, column: 21, scope: !3474)
!3476 = !DILocation(line: 514, column: 33, scope: !3474)
!3477 = !DILocation(line: 514, column: 8, scope: !3474)
!3478 = !DILocation(line: 514, column: 45, scope: !3474)
!3479 = !DILocation(line: 514, column: 8, scope: !3471)
!3480 = !DILocation(line: 515, column: 12, scope: !3474)
!3481 = !DILocation(line: 515, column: 5, scope: !3474)
!3482 = !DILocation(line: 514, column: 48, scope: !3474)
!3483 = !DILocation(line: 513, column: 55, scope: !3471)
!3484 = !DILocation(line: 513, column: 61, scope: !3471)
!3485 = !DILocation(line: 513, column: 66, scope: !3471)
!3486 = !DILocation(line: 513, column: 53, scope: !3471)
!3487 = !DILocation(line: 513, column: 3, scope: !3471)
!3488 = distinct !{!3488, !3472, !3489}
!3489 = !DILocation(line: 515, column: 12, scope: !3465)
!3490 = !DILocation(line: 516, column: 2, scope: !3466)
!3491 = !DILocation(line: 517, column: 2, scope: !3454)
!3492 = !DILocation(line: 518, column: 1, scope: !3454)
!3493 = distinct !DISubprogram(name: "RNA_struct_identifier", scope: !3, file: !3, line: 520, type: !3494, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!1031, !3496}
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2640)
!3498 = !DILocalVariable(name: "type", arg: 1, scope: !3493, file: !3, line: 520, type: !3496)
!3499 = !DILocation(line: 520, column: 52, scope: !3493)
!3500 = !DILocation(line: 522, column: 9, scope: !3493)
!3501 = !DILocation(line: 522, column: 15, scope: !3493)
!3502 = !DILocation(line: 522, column: 2, scope: !3493)
!3503 = distinct !DISubprogram(name: "RNA_struct_ui_name", scope: !3, file: !3, line: 525, type: !3494, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3504 = !DILocalVariable(name: "type", arg: 1, scope: !3503, file: !3, line: 525, type: !3496)
!3505 = !DILocation(line: 525, column: 49, scope: !3503)
!3506 = !DILocation(line: 527, column: 9, scope: !3503)
!3507 = !DILocation(line: 527, column: 2, scope: !3503)
!3508 = distinct !DISubprogram(name: "RNA_struct_ui_name_raw", scope: !3, file: !3, line: 530, type: !3494, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3509 = !DILocalVariable(name: "type", arg: 1, scope: !3508, file: !3, line: 530, type: !3496)
!3510 = !DILocation(line: 530, column: 53, scope: !3508)
!3511 = !DILocation(line: 532, column: 9, scope: !3508)
!3512 = !DILocation(line: 532, column: 15, scope: !3508)
!3513 = !DILocation(line: 532, column: 2, scope: !3508)
!3514 = distinct !DISubprogram(name: "RNA_struct_ui_icon", scope: !3, file: !3, line: 535, type: !3515, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!48, !3496}
!3517 = !DILocalVariable(name: "type", arg: 1, scope: !3514, file: !3, line: 535, type: !3496)
!3518 = !DILocation(line: 535, column: 41, scope: !3514)
!3519 = !DILocation(line: 537, column: 6, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 537, column: 6)
!3521 = !DILocation(line: 537, column: 6, scope: !3514)
!3522 = !DILocation(line: 538, column: 10, scope: !3520)
!3523 = !DILocation(line: 538, column: 16, scope: !3520)
!3524 = !DILocation(line: 538, column: 3, scope: !3520)
!3525 = !DILocation(line: 540, column: 3, scope: !3520)
!3526 = !DILocation(line: 541, column: 1, scope: !3514)
!3527 = distinct !DISubprogram(name: "RNA_struct_ui_description", scope: !3, file: !3, line: 543, type: !3494, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3528 = !DILocalVariable(name: "type", arg: 1, scope: !3527, file: !3, line: 543, type: !3496)
!3529 = !DILocation(line: 543, column: 56, scope: !3527)
!3530 = !DILocation(line: 545, column: 9, scope: !3527)
!3531 = !DILocation(line: 545, column: 2, scope: !3527)
!3532 = distinct !DISubprogram(name: "RNA_struct_ui_description_raw", scope: !3, file: !3, line: 548, type: !3494, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3533 = !DILocalVariable(name: "type", arg: 1, scope: !3532, file: !3, line: 548, type: !3496)
!3534 = !DILocation(line: 548, column: 60, scope: !3532)
!3535 = !DILocation(line: 550, column: 9, scope: !3532)
!3536 = !DILocation(line: 550, column: 15, scope: !3532)
!3537 = !DILocation(line: 550, column: 2, scope: !3532)
!3538 = distinct !DISubprogram(name: "RNA_struct_translation_context", scope: !3, file: !3, line: 553, type: !3494, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3539 = !DILocalVariable(name: "type", arg: 1, scope: !3538, file: !3, line: 553, type: !3496)
!3540 = !DILocation(line: 553, column: 61, scope: !3538)
!3541 = !DILocation(line: 555, column: 9, scope: !3538)
!3542 = !DILocation(line: 555, column: 15, scope: !3538)
!3543 = !DILocation(line: 555, column: 2, scope: !3538)
!3544 = distinct !DISubprogram(name: "RNA_struct_name_property", scope: !3, file: !3, line: 558, type: !3545, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!1021, !2639}
!3547 = !DILocalVariable(name: "type", arg: 1, scope: !3544, file: !3, line: 558, type: !2639)
!3548 = !DILocation(line: 558, column: 50, scope: !3544)
!3549 = !DILocation(line: 560, column: 9, scope: !3544)
!3550 = !DILocation(line: 560, column: 15, scope: !3544)
!3551 = !DILocation(line: 560, column: 2, scope: !3544)
!3552 = distinct !DISubprogram(name: "RNA_struct_iterator_property", scope: !3, file: !3, line: 563, type: !3545, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3553 = !DILocalVariable(name: "type", arg: 1, scope: !3552, file: !3, line: 563, type: !2639)
!3554 = !DILocation(line: 563, column: 54, scope: !3552)
!3555 = !DILocation(line: 565, column: 9, scope: !3552)
!3556 = !DILocation(line: 565, column: 15, scope: !3552)
!3557 = !DILocation(line: 565, column: 2, scope: !3552)
!3558 = distinct !DISubprogram(name: "RNA_struct_base", scope: !3, file: !3, line: 568, type: !3559, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!2639, !2639}
!3561 = !DILocalVariable(name: "type", arg: 1, scope: !3558, file: !3, line: 568, type: !2639)
!3562 = !DILocation(line: 568, column: 39, scope: !3558)
!3563 = !DILocation(line: 570, column: 9, scope: !3558)
!3564 = !DILocation(line: 570, column: 15, scope: !3558)
!3565 = !DILocation(line: 570, column: 2, scope: !3558)
!3566 = distinct !DISubprogram(name: "RNA_struct_is_ID", scope: !3, file: !3, line: 573, type: !3567, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{!1381, !3496}
!3569 = !DILocalVariable(name: "type", arg: 1, scope: !3566, file: !3, line: 573, type: !3496)
!3570 = !DILocation(line: 573, column: 40, scope: !3566)
!3571 = !DILocation(line: 575, column: 10, scope: !3566)
!3572 = !DILocation(line: 575, column: 16, scope: !3566)
!3573 = !DILocation(line: 575, column: 21, scope: !3566)
!3574 = !DILocation(line: 575, column: 34, scope: !3566)
!3575 = !DILocation(line: 575, column: 9, scope: !3566)
!3576 = !DILocation(line: 575, column: 2, scope: !3566)
!3577 = distinct !DISubprogram(name: "RNA_struct_undo_check", scope: !3, file: !3, line: 578, type: !3567, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3578 = !DILocalVariable(name: "type", arg: 1, scope: !3577, file: !3, line: 578, type: !3496)
!3579 = !DILocation(line: 578, column: 45, scope: !3577)
!3580 = !DILocation(line: 580, column: 10, scope: !3577)
!3581 = !DILocation(line: 580, column: 16, scope: !3577)
!3582 = !DILocation(line: 580, column: 21, scope: !3577)
!3583 = !DILocation(line: 580, column: 36, scope: !3577)
!3584 = !DILocation(line: 580, column: 9, scope: !3577)
!3585 = !DILocation(line: 580, column: 2, scope: !3577)
!3586 = distinct !DISubprogram(name: "RNA_struct_idprops_register_check", scope: !3, file: !3, line: 583, type: !3567, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3587 = !DILocalVariable(name: "type", arg: 1, scope: !3586, file: !3, line: 583, type: !3496)
!3588 = !DILocation(line: 583, column: 57, scope: !3586)
!3589 = !DILocation(line: 585, column: 10, scope: !3586)
!3590 = !DILocation(line: 585, column: 16, scope: !3586)
!3591 = !DILocation(line: 585, column: 21, scope: !3586)
!3592 = !DILocation(line: 585, column: 47, scope: !3586)
!3593 = !DILocation(line: 585, column: 9, scope: !3586)
!3594 = !DILocation(line: 585, column: 2, scope: !3586)
!3595 = distinct !DISubprogram(name: "RNA_struct_idprops_unset", scope: !3, file: !3, line: 589, type: !3596, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{!1381, !1349, !1031}
!3598 = !DILocalVariable(name: "ptr", arg: 1, scope: !3595, file: !3, line: 589, type: !1349)
!3599 = !DILocation(line: 589, column: 43, scope: !3595)
!3600 = !DILocalVariable(name: "identifier", arg: 2, scope: !3595, file: !3, line: 589, type: !1031)
!3601 = !DILocation(line: 589, column: 60, scope: !3595)
!3602 = !DILocalVariable(name: "group", scope: !3595, file: !3, line: 591, type: !987)
!3603 = !DILocation(line: 591, column: 14, scope: !3595)
!3604 = !DILocation(line: 591, column: 41, scope: !3595)
!3605 = !DILocation(line: 591, column: 22, scope: !3595)
!3606 = !DILocation(line: 593, column: 6, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 593, column: 6)
!3608 = !DILocation(line: 593, column: 6, scope: !3595)
!3609 = !DILocalVariable(name: "idp", scope: !3610, file: !3, line: 594, type: !987)
!3610 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 593, column: 13)
!3611 = !DILocation(line: 594, column: 15, scope: !3610)
!3612 = !DILocation(line: 594, column: 46, scope: !3610)
!3613 = !DILocation(line: 594, column: 53, scope: !3610)
!3614 = !DILocation(line: 594, column: 21, scope: !3610)
!3615 = !DILocation(line: 595, column: 7, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 595, column: 7)
!3617 = !DILocation(line: 595, column: 7, scope: !3610)
!3618 = !DILocation(line: 596, column: 22, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 595, column: 12)
!3620 = !DILocation(line: 596, column: 29, scope: !3619)
!3621 = !DILocation(line: 596, column: 4, scope: !3619)
!3622 = !DILocation(line: 598, column: 4, scope: !3619)
!3623 = !DILocation(line: 600, column: 2, scope: !3610)
!3624 = !DILocation(line: 601, column: 2, scope: !3595)
!3625 = !DILocation(line: 602, column: 1, scope: !3595)
!3626 = distinct !DISubprogram(name: "RNA_struct_is_a", scope: !3, file: !3, line: 604, type: !3627, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3627 = !DISubroutineType(types: !3628)
!3628 = !{!1381, !3496, !3496}
!3629 = !DILocalVariable(name: "type", arg: 1, scope: !3626, file: !3, line: 604, type: !3496)
!3630 = !DILocation(line: 604, column: 39, scope: !3626)
!3631 = !DILocalVariable(name: "srna", arg: 2, scope: !3626, file: !3, line: 604, type: !3496)
!3632 = !DILocation(line: 604, column: 62, scope: !3626)
!3633 = !DILocalVariable(name: "base", scope: !3626, file: !3, line: 606, type: !3496)
!3634 = !DILocation(line: 606, column: 19, scope: !3626)
!3635 = !DILocation(line: 608, column: 6, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 608, column: 6)
!3637 = !DILocation(line: 608, column: 11, scope: !3636)
!3638 = !DILocation(line: 608, column: 6, scope: !3626)
!3639 = !DILocation(line: 609, column: 3, scope: !3636)
!3640 = !DILocation(line: 611, column: 7, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 611, column: 6)
!3642 = !DILocation(line: 611, column: 6, scope: !3626)
!3643 = !DILocation(line: 612, column: 3, scope: !3641)
!3644 = !DILocation(line: 615, column: 14, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 615, column: 2)
!3646 = !DILocation(line: 615, column: 12, scope: !3645)
!3647 = !DILocation(line: 615, column: 7, scope: !3645)
!3648 = !DILocation(line: 615, column: 20, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 615, column: 2)
!3650 = !DILocation(line: 615, column: 2, scope: !3645)
!3651 = !DILocation(line: 616, column: 7, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 616, column: 7)
!3653 = !DILocation(line: 616, column: 15, scope: !3652)
!3654 = !DILocation(line: 616, column: 12, scope: !3652)
!3655 = !DILocation(line: 616, column: 7, scope: !3649)
!3656 = !DILocation(line: 617, column: 4, scope: !3652)
!3657 = !DILocation(line: 615, column: 33, scope: !3649)
!3658 = !DILocation(line: 615, column: 39, scope: !3649)
!3659 = !DILocation(line: 615, column: 31, scope: !3649)
!3660 = !DILocation(line: 615, column: 2, scope: !3649)
!3661 = distinct !{!3661, !3650, !3662}
!3662 = !DILocation(line: 617, column: 11, scope: !3645)
!3663 = !DILocation(line: 619, column: 2, scope: !3626)
!3664 = !DILocation(line: 620, column: 1, scope: !3626)
!3665 = distinct !DISubprogram(name: "RNA_struct_find_property", scope: !3, file: !3, line: 622, type: !3666, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!1021, !1349, !1031}
!3668 = !DILocalVariable(name: "ptr", arg: 1, scope: !3665, file: !3, line: 622, type: !1349)
!3669 = !DILocation(line: 622, column: 51, scope: !3665)
!3670 = !DILocalVariable(name: "identifier", arg: 2, scope: !3665, file: !3, line: 622, type: !1031)
!3671 = !DILocation(line: 622, column: 68, scope: !3665)
!3672 = !DILocation(line: 624, column: 6, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 624, column: 6)
!3674 = !DILocation(line: 624, column: 20, scope: !3673)
!3675 = !DILocation(line: 624, column: 27, scope: !3673)
!3676 = !DILocation(line: 624, column: 30, scope: !3673)
!3677 = !DILocation(line: 624, column: 44, scope: !3673)
!3678 = !DILocation(line: 624, column: 6, scope: !3665)
!3679 = !DILocalVariable(name: "r_prop", scope: !3680, file: !3, line: 627, type: !1021)
!3680 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 624, column: 52)
!3681 = !DILocation(line: 627, column: 16, scope: !3680)
!3682 = !DILocalVariable(name: "r_ptr", scope: !3680, file: !3, line: 628, type: !1350)
!3683 = !DILocation(line: 628, column: 14, scope: !3680)
!3684 = !DILocation(line: 629, column: 24, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 629, column: 7)
!3686 = !DILocation(line: 629, column: 29, scope: !3685)
!3687 = !DILocation(line: 629, column: 7, scope: !3685)
!3688 = !DILocation(line: 629, column: 58, scope: !3685)
!3689 = !DILocation(line: 629, column: 68, scope: !3685)
!3690 = !DILocation(line: 629, column: 76, scope: !3685)
!3691 = !DILocation(line: 629, column: 81, scope: !3685)
!3692 = !DILocation(line: 629, column: 73, scope: !3685)
!3693 = !DILocation(line: 629, column: 87, scope: !3685)
!3694 = !DILocation(line: 629, column: 97, scope: !3685)
!3695 = !DILocation(line: 629, column: 105, scope: !3685)
!3696 = !DILocation(line: 629, column: 110, scope: !3685)
!3697 = !DILocation(line: 629, column: 102, scope: !3685)
!3698 = !DILocation(line: 629, column: 7, scope: !3680)
!3699 = !DILocation(line: 630, column: 11, scope: !3685)
!3700 = !DILocation(line: 630, column: 4, scope: !3685)
!3701 = !DILocation(line: 631, column: 2, scope: !3680)
!3702 = !DILocalVariable(name: "iterprop", scope: !3703, file: !3, line: 634, type: !1021)
!3703 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 632, column: 7)
!3704 = !DILocation(line: 634, column: 16, scope: !3703)
!3705 = !DILocation(line: 634, column: 56, scope: !3703)
!3706 = !DILocation(line: 634, column: 61, scope: !3703)
!3707 = !DILocation(line: 634, column: 27, scope: !3703)
!3708 = !DILocalVariable(name: "propptr", scope: !3703, file: !3, line: 635, type: !1350)
!3709 = !DILocation(line: 635, column: 14, scope: !3703)
!3710 = !DILocation(line: 637, column: 45, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 637, column: 7)
!3712 = !DILocation(line: 637, column: 50, scope: !3711)
!3713 = !DILocation(line: 637, column: 60, scope: !3711)
!3714 = !DILocation(line: 637, column: 7, scope: !3711)
!3715 = !DILocation(line: 637, column: 7, scope: !3703)
!3716 = !DILocation(line: 638, column: 19, scope: !3711)
!3717 = !DILocation(line: 638, column: 11, scope: !3711)
!3718 = !DILocation(line: 638, column: 4, scope: !3711)
!3719 = !DILocation(line: 641, column: 2, scope: !3665)
!3720 = !DILocation(line: 642, column: 1, scope: !3665)
!3721 = distinct !DISubprogram(name: "RNA_path_resolve", scope: !3, file: !3, line: 4209, type: !3722, scopeLine: 4210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!1381, !1349, !1031, !1349, !3283}
!3724 = !DILocalVariable(name: "ptr", arg: 1, scope: !3721, file: !3, line: 4209, type: !1349)
!3725 = !DILocation(line: 4209, column: 35, scope: !3721)
!3726 = !DILocalVariable(name: "path", arg: 2, scope: !3721, file: !3, line: 4209, type: !1031)
!3727 = !DILocation(line: 4209, column: 52, scope: !3721)
!3728 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !3721, file: !3, line: 4209, type: !1349)
!3729 = !DILocation(line: 4209, column: 70, scope: !3721)
!3730 = !DILocalVariable(name: "r_prop", arg: 4, scope: !3721, file: !3, line: 4209, type: !3283)
!3731 = !DILocation(line: 4209, column: 91, scope: !3721)
!3732 = !DILocation(line: 4211, column: 22, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 4211, column: 6)
!3734 = !DILocation(line: 4211, column: 27, scope: !3733)
!3735 = !DILocation(line: 4211, column: 33, scope: !3733)
!3736 = !DILocation(line: 4211, column: 40, scope: !3733)
!3737 = !DILocation(line: 4211, column: 7, scope: !3733)
!3738 = !DILocation(line: 4211, column: 6, scope: !3721)
!3739 = !DILocation(line: 4212, column: 3, scope: !3733)
!3740 = !DILocation(line: 4214, column: 9, scope: !3721)
!3741 = !DILocation(line: 4214, column: 16, scope: !3721)
!3742 = !DILocation(line: 4214, column: 21, scope: !3721)
!3743 = !DILocation(line: 4214, column: 2, scope: !3721)
!3744 = !DILocation(line: 4215, column: 1, scope: !3721)
!3745 = distinct !DISubprogram(name: "RNA_property_collection_lookup_string", scope: !3, file: !3, line: 3205, type: !3746, scopeLine: 3206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!48, !1349, !1021, !1031, !1349}
!3748 = !DILocalVariable(name: "ptr", arg: 1, scope: !3745, file: !3, line: 3205, type: !1349)
!3749 = !DILocation(line: 3205, column: 55, scope: !3745)
!3750 = !DILocalVariable(name: "prop", arg: 2, scope: !3745, file: !3, line: 3205, type: !1021)
!3751 = !DILocation(line: 3205, column: 73, scope: !3745)
!3752 = !DILocalVariable(name: "key", arg: 3, scope: !3745, file: !3, line: 3205, type: !1031)
!3753 = !DILocation(line: 3205, column: 91, scope: !3745)
!3754 = !DILocalVariable(name: "r_ptr", arg: 4, scope: !3745, file: !3, line: 3205, type: !1349)
!3755 = !DILocation(line: 3205, column: 108, scope: !3745)
!3756 = !DILocalVariable(name: "cprop", scope: !3745, file: !3, line: 3207, type: !2647)
!3757 = !DILocation(line: 3207, column: 25, scope: !3745)
!3758 = !DILocation(line: 3207, column: 78, scope: !3745)
!3759 = !DILocation(line: 3207, column: 58, scope: !3745)
!3760 = !DILocation(line: 3207, column: 33, scope: !3745)
!3761 = !DILocation(line: 3211, column: 6, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 3211, column: 6)
!3763 = !DILocation(line: 3211, column: 13, scope: !3762)
!3764 = !DILocation(line: 3211, column: 6, scope: !3745)
!3765 = !DILocation(line: 3213, column: 10, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 3211, column: 27)
!3767 = !DILocation(line: 3213, column: 17, scope: !3766)
!3768 = !DILocation(line: 3213, column: 30, scope: !3766)
!3769 = !DILocation(line: 3213, column: 35, scope: !3766)
!3770 = !DILocation(line: 3213, column: 40, scope: !3766)
!3771 = !DILocation(line: 3213, column: 3, scope: !3766)
!3772 = !DILocalVariable(name: "iter", scope: !3773, file: !3, line: 3217, type: !3774)
!3773 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 3215, column: 7)
!3774 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyIterator", file: !6, line: 279, baseType: !2658)
!3775 = !DILocation(line: 3217, column: 30, scope: !3773)
!3776 = !DILocalVariable(name: "nameprop", scope: !3773, file: !3, line: 3218, type: !1021)
!3777 = !DILocation(line: 3218, column: 16, scope: !3773)
!3778 = !DILocalVariable(name: "name", scope: !3773, file: !3, line: 3219, type: !1190)
!3779 = !DILocation(line: 3219, column: 8, scope: !3773)
!3780 = !DILocalVariable(name: "nameptr", scope: !3773, file: !3, line: 3219, type: !1091)
!3781 = !DILocation(line: 3219, column: 20, scope: !3773)
!3782 = !DILocalVariable(name: "found", scope: !3773, file: !3, line: 3220, type: !48)
!3783 = !DILocation(line: 3220, column: 7, scope: !3773)
!3784 = !DILocalVariable(name: "keylen", scope: !3773, file: !3, line: 3221, type: !48)
!3785 = !DILocation(line: 3221, column: 7, scope: !3773)
!3786 = !DILocation(line: 3221, column: 23, scope: !3773)
!3787 = !DILocation(line: 3221, column: 16, scope: !3773)
!3788 = !DILocalVariable(name: "namelen", scope: !3773, file: !3, line: 3222, type: !48)
!3789 = !DILocation(line: 3222, column: 7, scope: !3773)
!3790 = !DILocation(line: 3224, column: 33, scope: !3773)
!3791 = !DILocation(line: 3224, column: 38, scope: !3773)
!3792 = !DILocation(line: 3224, column: 3, scope: !3773)
!3793 = !DILocation(line: 3225, column: 3, scope: !3773)
!3794 = !DILocation(line: 3225, column: 15, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 3225, column: 3)
!3796 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 3225, column: 3)
!3797 = !DILocation(line: 3225, column: 3, scope: !3796)
!3798 = !DILocation(line: 3226, column: 13, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 3226, column: 8)
!3800 = distinct !DILexicalBlock(scope: !3795, file: !3, line: 3225, column: 59)
!3801 = !DILocation(line: 3226, column: 17, scope: !3799)
!3802 = !DILocation(line: 3226, column: 8, scope: !3799)
!3803 = !DILocation(line: 3226, column: 22, scope: !3799)
!3804 = !DILocation(line: 3226, column: 30, scope: !3799)
!3805 = !DILocation(line: 3226, column: 34, scope: !3799)
!3806 = !DILocation(line: 3226, column: 40, scope: !3799)
!3807 = !DILocation(line: 3226, column: 25, scope: !3799)
!3808 = !DILocation(line: 3226, column: 8, scope: !3800)
!3809 = !DILocation(line: 3227, column: 21, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 3226, column: 54)
!3811 = !DILocation(line: 3227, column: 25, scope: !3810)
!3812 = !DILocation(line: 3227, column: 31, scope: !3810)
!3813 = !DILocation(line: 3227, column: 14, scope: !3810)
!3814 = !DILocation(line: 3229, column: 51, scope: !3810)
!3815 = !DILocation(line: 3229, column: 56, scope: !3810)
!3816 = !DILocation(line: 3229, column: 66, scope: !3810)
!3817 = !DILocation(line: 3229, column: 15, scope: !3810)
!3818 = !DILocation(line: 3229, column: 13, scope: !3810)
!3819 = !DILocation(line: 3231, column: 10, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 3231, column: 9)
!3821 = !DILocation(line: 3231, column: 20, scope: !3820)
!3822 = !DILocation(line: 3231, column: 17, scope: !3820)
!3823 = !DILocation(line: 3231, column: 29, scope: !3820)
!3824 = !DILocation(line: 3231, column: 40, scope: !3820)
!3825 = !DILocation(line: 3231, column: 49, scope: !3820)
!3826 = !DILocation(line: 3231, column: 33, scope: !3820)
!3827 = !DILocation(line: 3231, column: 54, scope: !3820)
!3828 = !DILocation(line: 3231, column: 9, scope: !3810)
!3829 = !DILocation(line: 3232, column: 7, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 3231, column: 61)
!3831 = !DILocation(line: 3232, column: 20, scope: !3830)
!3832 = !DILocation(line: 3233, column: 12, scope: !3830)
!3833 = !DILocation(line: 3234, column: 5, scope: !3830)
!3834 = !DILocation(line: 3236, column: 9, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 3236, column: 9)
!3836 = !DILocation(line: 3236, column: 26, scope: !3835)
!3837 = !DILocation(line: 3236, column: 23, scope: !3835)
!3838 = !DILocation(line: 3236, column: 9, scope: !3810)
!3839 = !DILocation(line: 3237, column: 6, scope: !3835)
!3840 = !DILocation(line: 3237, column: 16, scope: !3835)
!3841 = !DILocation(line: 3239, column: 9, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3810, file: !3, line: 3239, column: 9)
!3843 = !DILocation(line: 3239, column: 9, scope: !3810)
!3844 = !DILocation(line: 3240, column: 6, scope: !3842)
!3845 = !DILocation(line: 3241, column: 4, scope: !3810)
!3846 = !DILocation(line: 3242, column: 3, scope: !3800)
!3847 = !DILocation(line: 3225, column: 22, scope: !3795)
!3848 = !DILocation(line: 3225, column: 3, scope: !3795)
!3849 = distinct !{!3849, !3797, !3850}
!3850 = !DILocation(line: 3242, column: 3, scope: !3796)
!3851 = !DILocation(line: 3243, column: 3, scope: !3773)
!3852 = !DILocation(line: 3245, column: 13, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 3245, column: 7)
!3854 = !DILocation(line: 3245, column: 8, scope: !3853)
!3855 = !DILocation(line: 3245, column: 7, scope: !3773)
!3856 = !DILocation(line: 3246, column: 11, scope: !3853)
!3857 = !DILocation(line: 3246, column: 4, scope: !3853)
!3858 = !DILocation(line: 3248, column: 15, scope: !3773)
!3859 = !DILocation(line: 3248, column: 3, scope: !3773)
!3860 = !DILocation(line: 3250, column: 1, scope: !3745)
!3861 = distinct !DISubprogram(name: "RNA_struct_contains_property", scope: !3, file: !3, line: 662, type: !3862, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!1381, !1349, !1021}
!3864 = !DILocalVariable(name: "ptr", arg: 1, scope: !3861, file: !3, line: 662, type: !1349)
!3865 = !DILocation(line: 662, column: 47, scope: !3861)
!3866 = !DILocalVariable(name: "prop_test", arg: 2, scope: !3861, file: !3, line: 662, type: !1021)
!3867 = !DILocation(line: 662, column: 65, scope: !3861)
!3868 = !DILocalVariable(name: "iterprop", scope: !3861, file: !3, line: 667, type: !1021)
!3869 = !DILocation(line: 667, column: 15, scope: !3861)
!3870 = !DILocalVariable(name: "found", scope: !3861, file: !3, line: 668, type: !1381)
!3871 = !DILocation(line: 668, column: 7, scope: !3861)
!3872 = !DILocation(line: 670, column: 42, scope: !3861)
!3873 = !DILocation(line: 670, column: 47, scope: !3861)
!3874 = !DILocation(line: 670, column: 13, scope: !3861)
!3875 = !DILocation(line: 670, column: 11, scope: !3861)
!3876 = !DILocalVariable(name: "rna_macro_iter", scope: !3877, file: !3, line: 672, type: !3774)
!3877 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 672, column: 2)
!3878 = !DILocation(line: 672, column: 2, scope: !3877)
!3879 = !DILocation(line: 672, column: 2, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 672, column: 2)
!3881 = !DILocation(line: 672, column: 2, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3880, file: !3, line: 672, column: 2)
!3883 = !DILocalVariable(name: "itemptr", scope: !3884, file: !3, line: 672, type: !1350)
!3884 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 672, column: 2)
!3885 = !DILocation(line: 672, column: 2, scope: !3884)
!3886 = !DILocation(line: 675, column: 7, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 675, column: 7)
!3888 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 673, column: 2)
!3889 = !DILocation(line: 675, column: 43, scope: !3887)
!3890 = !DILocation(line: 675, column: 20, scope: !3887)
!3891 = !DILocation(line: 675, column: 17, scope: !3887)
!3892 = !DILocation(line: 675, column: 7, scope: !3888)
!3893 = !DILocation(line: 676, column: 10, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 675, column: 49)
!3895 = !DILocation(line: 677, column: 4, scope: !3894)
!3896 = !DILocation(line: 680, column: 2, scope: !3884)
!3897 = distinct !{!3897, !3879, !3898}
!3898 = !DILocation(line: 680, column: 2, scope: !3880)
!3899 = !DILocation(line: 680, column: 2, scope: !3877)
!3900 = !DILocation(line: 682, column: 9, scope: !3861)
!3901 = !DILocation(line: 682, column: 2, scope: !3861)
!3902 = distinct !DISubprogram(name: "RNA_property_collection_begin", scope: !3, file: !3, line: 2900, type: !3903, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{null, !1349, !1021, !3905}
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3906 = !DILocalVariable(name: "ptr", arg: 1, scope: !3902, file: !3, line: 2900, type: !1349)
!3907 = !DILocation(line: 2900, column: 48, scope: !3902)
!3908 = !DILocalVariable(name: "prop", arg: 2, scope: !3902, file: !3, line: 2900, type: !1021)
!3909 = !DILocation(line: 2900, column: 66, scope: !3902)
!3910 = !DILocalVariable(name: "iter", arg: 3, scope: !3902, file: !3, line: 2900, type: !3905)
!3911 = !DILocation(line: 2900, column: 100, scope: !3902)
!3912 = !DILocalVariable(name: "idprop", scope: !3902, file: !3, line: 2902, type: !987)
!3913 = !DILocation(line: 2902, column: 14, scope: !3902)
!3914 = !DILocation(line: 2906, column: 9, scope: !3902)
!3915 = !DILocation(line: 2906, column: 2, scope: !3902)
!3916 = !DILocation(line: 2908, column: 44, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 2908, column: 6)
!3918 = !DILocation(line: 2908, column: 16, scope: !3917)
!3919 = !DILocation(line: 2908, column: 14, scope: !3917)
!3920 = !DILocation(line: 2908, column: 50, scope: !3917)
!3921 = !DILocation(line: 2908, column: 54, scope: !3917)
!3922 = !DILocation(line: 2908, column: 60, scope: !3917)
!3923 = !DILocation(line: 2908, column: 65, scope: !3917)
!3924 = !DILocation(line: 2908, column: 6, scope: !3902)
!3925 = !DILocation(line: 2909, column: 3, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2908, column: 85)
!3927 = !DILocation(line: 2909, column: 9, scope: !3926)
!3928 = !DILocation(line: 2909, column: 19, scope: !3926)
!3929 = !DILocation(line: 2909, column: 18, scope: !3926)
!3930 = !DILocation(line: 2910, column: 16, scope: !3926)
!3931 = !DILocation(line: 2910, column: 3, scope: !3926)
!3932 = !DILocation(line: 2910, column: 9, scope: !3926)
!3933 = !DILocation(line: 2910, column: 14, scope: !3926)
!3934 = !DILocation(line: 2912, column: 7, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 2912, column: 7)
!3936 = !DILocation(line: 2912, column: 7, scope: !3926)
!3937 = !DILocation(line: 2913, column: 29, scope: !3935)
!3938 = !DILocation(line: 2913, column: 35, scope: !3935)
!3939 = !DILocation(line: 2913, column: 77, scope: !3935)
!3940 = !DILocation(line: 2913, column: 85, scope: !3935)
!3941 = !DILocation(line: 2913, column: 4, scope: !3935)
!3942 = !DILocation(line: 2915, column: 29, scope: !3935)
!3943 = !DILocation(line: 2915, column: 4, scope: !3935)
!3944 = !DILocation(line: 2917, column: 7, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 2917, column: 7)
!3946 = !DILocation(line: 2917, column: 13, scope: !3945)
!3947 = !DILocation(line: 2917, column: 7, scope: !3926)
!3948 = !DILocation(line: 2918, column: 36, scope: !3945)
!3949 = !DILocation(line: 2918, column: 4, scope: !3945)
!3950 = !DILocation(line: 2920, column: 3, scope: !3926)
!3951 = !DILocation(line: 2920, column: 9, scope: !3926)
!3952 = !DILocation(line: 2920, column: 16, scope: !3926)
!3953 = !DILocation(line: 2921, column: 2, scope: !3926)
!3954 = !DILocalVariable(name: "cprop", scope: !3955, file: !3, line: 2923, type: !2647)
!3955 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 2922, column: 7)
!3956 = !DILocation(line: 2923, column: 26, scope: !3955)
!3957 = !DILocation(line: 2923, column: 59, scope: !3955)
!3958 = !DILocation(line: 2923, column: 34, scope: !3955)
!3959 = !DILocation(line: 2924, column: 3, scope: !3955)
!3960 = !DILocation(line: 2924, column: 10, scope: !3955)
!3961 = !DILocation(line: 2924, column: 16, scope: !3955)
!3962 = !DILocation(line: 2924, column: 22, scope: !3955)
!3963 = !DILocation(line: 2926, column: 1, scope: !3902)
!3964 = distinct !DISubprogram(name: "RNA_property_collection_next", scope: !3, file: !3, line: 2928, type: !3965, scopeLine: 2929, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{null, !3905}
!3967 = !DILocalVariable(name: "iter", arg: 1, scope: !3964, file: !3, line: 2928, type: !3905)
!3968 = !DILocation(line: 2928, column: 63, scope: !3964)
!3969 = !DILocalVariable(name: "cprop", scope: !3964, file: !3, line: 2930, type: !2647)
!3970 = !DILocation(line: 2930, column: 25, scope: !3964)
!3971 = !DILocation(line: 2930, column: 78, scope: !3964)
!3972 = !DILocation(line: 2930, column: 84, scope: !3964)
!3973 = !DILocation(line: 2930, column: 58, scope: !3964)
!3974 = !DILocation(line: 2930, column: 33, scope: !3964)
!3975 = !DILocation(line: 2932, column: 6, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 2932, column: 6)
!3977 = !DILocation(line: 2932, column: 12, scope: !3976)
!3978 = !DILocation(line: 2932, column: 6, scope: !3964)
!3979 = !DILocation(line: 2933, column: 27, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 2932, column: 20)
!3981 = !DILocation(line: 2933, column: 3, scope: !3980)
!3982 = !DILocation(line: 2935, column: 7, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 2935, column: 7)
!3984 = !DILocation(line: 2935, column: 13, scope: !3983)
!3985 = !DILocation(line: 2935, column: 7, scope: !3980)
!3986 = !DILocation(line: 2936, column: 36, scope: !3983)
!3987 = !DILocation(line: 2936, column: 4, scope: !3983)
!3988 = !DILocation(line: 2937, column: 2, scope: !3980)
!3989 = !DILocation(line: 2939, column: 3, scope: !3976)
!3990 = !DILocation(line: 2939, column: 10, scope: !3976)
!3991 = !DILocation(line: 2939, column: 15, scope: !3976)
!3992 = !DILocation(line: 2940, column: 1, scope: !3964)
!3993 = distinct !DISubprogram(name: "RNA_property_collection_end", scope: !3, file: !3, line: 2965, type: !3965, scopeLine: 2966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!3994 = !DILocalVariable(name: "iter", arg: 1, scope: !3993, file: !3, line: 2965, type: !3905)
!3995 = !DILocation(line: 2965, column: 62, scope: !3993)
!3996 = !DILocalVariable(name: "cprop", scope: !3993, file: !3, line: 2967, type: !2647)
!3997 = !DILocation(line: 2967, column: 25, scope: !3993)
!3998 = !DILocation(line: 2967, column: 78, scope: !3993)
!3999 = !DILocation(line: 2967, column: 84, scope: !3993)
!4000 = !DILocation(line: 2967, column: 58, scope: !3993)
!4001 = !DILocation(line: 2967, column: 33, scope: !3993)
!4002 = !DILocation(line: 2969, column: 6, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 2969, column: 6)
!4004 = !DILocation(line: 2969, column: 12, scope: !4003)
!4005 = !DILocation(line: 2969, column: 6, scope: !3993)
!4006 = !DILocation(line: 2970, column: 26, scope: !4003)
!4007 = !DILocation(line: 2970, column: 3, scope: !4003)
!4008 = !DILocation(line: 2972, column: 3, scope: !4003)
!4009 = !DILocation(line: 2972, column: 10, scope: !4003)
!4010 = !DILocation(line: 2972, column: 14, scope: !4003)
!4011 = !DILocation(line: 2973, column: 1, scope: !3993)
!4012 = distinct !DISubprogram(name: "RNA_struct_type_properties", scope: !3, file: !3, line: 686, type: !4013, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{!4015, !2639}
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!4017 = !DILocalVariable(name: "srna", arg: 1, scope: !4012, file: !3, line: 686, type: !2639)
!4018 = !DILocation(line: 686, column: 62, scope: !4012)
!4019 = !DILocation(line: 688, column: 10, scope: !4012)
!4020 = !DILocation(line: 688, column: 16, scope: !4012)
!4021 = !DILocation(line: 688, column: 21, scope: !4012)
!4022 = !DILocation(line: 688, column: 2, scope: !4012)
!4023 = distinct !DISubprogram(name: "RNA_struct_type_find_property", scope: !3, file: !3, line: 691, type: !4024, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!1021, !2639, !1031}
!4026 = !DILocalVariable(name: "srna", arg: 1, scope: !4023, file: !3, line: 691, type: !2639)
!4027 = !DILocation(line: 691, column: 55, scope: !4023)
!4028 = !DILocalVariable(name: "identifier", arg: 2, scope: !4023, file: !3, line: 691, type: !1031)
!4029 = !DILocation(line: 691, column: 73, scope: !4023)
!4030 = !DILocation(line: 693, column: 29, scope: !4023)
!4031 = !DILocation(line: 693, column: 35, scope: !4023)
!4032 = !DILocation(line: 693, column: 40, scope: !4023)
!4033 = !DILocation(line: 693, column: 52, scope: !4023)
!4034 = !DILocation(line: 693, column: 9, scope: !4023)
!4035 = !DILocation(line: 693, column: 2, scope: !4023)
!4036 = distinct !DISubprogram(name: "RNA_struct_find_function", scope: !3, file: !3, line: 696, type: !4037, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!2457, !2639, !1031}
!4039 = !DILocalVariable(name: "srna", arg: 1, scope: !4036, file: !3, line: 696, type: !2639)
!4040 = !DILocation(line: 696, column: 50, scope: !4036)
!4041 = !DILocalVariable(name: "identifier", arg: 2, scope: !4036, file: !3, line: 696, type: !1031)
!4042 = !DILocation(line: 696, column: 68, scope: !4036)
!4043 = !DILocalVariable(name: "func", scope: !4036, file: !3, line: 699, type: !2457)
!4044 = !DILocation(line: 699, column: 15, scope: !4036)
!4045 = !DILocalVariable(name: "type", scope: !4036, file: !3, line: 700, type: !2639)
!4046 = !DILocation(line: 700, column: 13, scope: !4036)
!4047 = !DILocation(line: 701, column: 14, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 701, column: 2)
!4049 = !DILocation(line: 701, column: 12, scope: !4048)
!4050 = !DILocation(line: 701, column: 7, scope: !4048)
!4051 = !DILocation(line: 701, column: 20, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 701, column: 2)
!4053 = !DILocation(line: 701, column: 2, scope: !4048)
!4054 = !DILocation(line: 702, column: 45, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 701, column: 45)
!4056 = !DILocation(line: 702, column: 51, scope: !4055)
!4057 = !DILocation(line: 702, column: 62, scope: !4055)
!4058 = !DILocation(line: 702, column: 25, scope: !4055)
!4059 = !DILocation(line: 702, column: 10, scope: !4055)
!4060 = !DILocation(line: 702, column: 8, scope: !4055)
!4061 = !DILocation(line: 703, column: 7, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4055, file: !3, line: 703, column: 7)
!4063 = !DILocation(line: 703, column: 7, scope: !4055)
!4064 = !DILocation(line: 704, column: 11, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 703, column: 13)
!4066 = !DILocation(line: 704, column: 4, scope: !4065)
!4067 = !DILocation(line: 706, column: 2, scope: !4055)
!4068 = !DILocation(line: 701, column: 33, scope: !4052)
!4069 = !DILocation(line: 701, column: 39, scope: !4052)
!4070 = !DILocation(line: 701, column: 31, scope: !4052)
!4071 = !DILocation(line: 701, column: 2, scope: !4052)
!4072 = distinct !{!4072, !4053, !4073}
!4073 = !DILocation(line: 706, column: 2, scope: !4048)
!4074 = !DILocation(line: 707, column: 2, scope: !4036)
!4075 = !DILocation(line: 731, column: 1, scope: !4036)
!4076 = distinct !DISubprogram(name: "RNA_struct_type_functions", scope: !3, file: !3, line: 733, type: !4013, scopeLine: 734, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4077 = !DILocalVariable(name: "srna", arg: 1, scope: !4076, file: !3, line: 733, type: !2639)
!4078 = !DILocation(line: 733, column: 54, scope: !4076)
!4079 = !DILocation(line: 735, column: 10, scope: !4076)
!4080 = !DILocation(line: 735, column: 16, scope: !4076)
!4081 = !DILocation(line: 735, column: 2, scope: !4076)
!4082 = distinct !DISubprogram(name: "RNA_struct_register", scope: !3, file: !3, line: 738, type: !4083, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{!1093, !2639}
!4085 = !DILocalVariable(name: "type", arg: 1, scope: !4082, file: !3, line: 738, type: !2639)
!4086 = !DILocation(line: 738, column: 51, scope: !4082)
!4087 = !DILocation(line: 740, column: 9, scope: !4082)
!4088 = !DILocation(line: 740, column: 15, scope: !4082)
!4089 = !DILocation(line: 740, column: 2, scope: !4082)
!4090 = distinct !DISubprogram(name: "RNA_struct_unregister", scope: !3, file: !3, line: 743, type: !4091, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!1366, !2639}
!4093 = !DILocalVariable(name: "type", arg: 1, scope: !4090, file: !3, line: 743, type: !2639)
!4094 = !DILocation(line: 743, column: 55, scope: !4090)
!4095 = !DILocation(line: 745, column: 2, scope: !4090)
!4096 = !DILocation(line: 746, column: 7, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 746, column: 7)
!4098 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 745, column: 5)
!4099 = !DILocation(line: 746, column: 13, scope: !4097)
!4100 = !DILocation(line: 746, column: 7, scope: !4098)
!4101 = !DILocation(line: 747, column: 11, scope: !4097)
!4102 = !DILocation(line: 747, column: 17, scope: !4097)
!4103 = !DILocation(line: 747, column: 4, scope: !4097)
!4104 = !DILocation(line: 748, column: 2, scope: !4098)
!4105 = !DILocation(line: 748, column: 19, scope: !4090)
!4106 = !DILocation(line: 748, column: 25, scope: !4090)
!4107 = !DILocation(line: 748, column: 17, scope: !4090)
!4108 = distinct !{!4108, !4095, !4109}
!4109 = !DILocation(line: 748, column: 30, scope: !4090)
!4110 = !DILocation(line: 750, column: 2, scope: !4090)
!4111 = !DILocation(line: 751, column: 1, scope: !4090)
!4112 = distinct !DISubprogram(name: "RNA_struct_instance", scope: !3, file: !3, line: 753, type: !1373, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4113 = !DILocalVariable(name: "ptr", arg: 1, scope: !4112, file: !3, line: 753, type: !1349)
!4114 = !DILocation(line: 753, column: 40, scope: !4112)
!4115 = !DILocalVariable(name: "type", scope: !4112, file: !3, line: 755, type: !2639)
!4116 = !DILocation(line: 755, column: 13, scope: !4112)
!4117 = !DILocation(line: 755, column: 20, scope: !4112)
!4118 = !DILocation(line: 755, column: 25, scope: !4112)
!4119 = !DILocation(line: 757, column: 2, scope: !4112)
!4120 = !DILocation(line: 758, column: 7, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 758, column: 7)
!4122 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 757, column: 5)
!4123 = !DILocation(line: 758, column: 13, scope: !4121)
!4124 = !DILocation(line: 758, column: 7, scope: !4122)
!4125 = !DILocation(line: 759, column: 11, scope: !4121)
!4126 = !DILocation(line: 759, column: 17, scope: !4121)
!4127 = !DILocation(line: 759, column: 26, scope: !4121)
!4128 = !DILocation(line: 759, column: 4, scope: !4121)
!4129 = !DILocation(line: 760, column: 2, scope: !4122)
!4130 = !DILocation(line: 760, column: 19, scope: !4112)
!4131 = !DILocation(line: 760, column: 25, scope: !4112)
!4132 = !DILocation(line: 760, column: 17, scope: !4112)
!4133 = distinct !{!4133, !4119, !4134}
!4134 = !DILocation(line: 760, column: 30, scope: !4112)
!4135 = !DILocation(line: 762, column: 2, scope: !4112)
!4136 = !DILocation(line: 763, column: 1, scope: !4112)
!4137 = distinct !DISubprogram(name: "RNA_struct_py_type_get", scope: !3, file: !3, line: 765, type: !4138, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!986, !2639}
!4140 = !DILocalVariable(name: "srna", arg: 1, scope: !4137, file: !3, line: 765, type: !2639)
!4141 = !DILocation(line: 765, column: 41, scope: !4137)
!4142 = !DILocation(line: 767, column: 9, scope: !4137)
!4143 = !DILocation(line: 767, column: 15, scope: !4137)
!4144 = !DILocation(line: 767, column: 2, scope: !4137)
!4145 = distinct !DISubprogram(name: "RNA_struct_py_type_set", scope: !3, file: !3, line: 770, type: !4146, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{null, !2639, !986}
!4148 = !DILocalVariable(name: "srna", arg: 1, scope: !4145, file: !3, line: 770, type: !2639)
!4149 = !DILocation(line: 770, column: 40, scope: !4145)
!4150 = !DILocalVariable(name: "py_type", arg: 2, scope: !4145, file: !3, line: 770, type: !986)
!4151 = !DILocation(line: 770, column: 52, scope: !4145)
!4152 = !DILocation(line: 772, column: 18, scope: !4145)
!4153 = !DILocation(line: 772, column: 2, scope: !4145)
!4154 = !DILocation(line: 772, column: 8, scope: !4145)
!4155 = !DILocation(line: 772, column: 16, scope: !4145)
!4156 = !DILocation(line: 773, column: 1, scope: !4145)
!4157 = distinct !DISubprogram(name: "RNA_struct_blender_type_get", scope: !3, file: !3, line: 775, type: !4138, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4158 = !DILocalVariable(name: "srna", arg: 1, scope: !4157, file: !3, line: 775, type: !2639)
!4159 = !DILocation(line: 775, column: 46, scope: !4157)
!4160 = !DILocation(line: 777, column: 9, scope: !4157)
!4161 = !DILocation(line: 777, column: 15, scope: !4157)
!4162 = !DILocation(line: 777, column: 2, scope: !4157)
!4163 = distinct !DISubprogram(name: "RNA_struct_blender_type_set", scope: !3, file: !3, line: 780, type: !4146, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4164 = !DILocalVariable(name: "srna", arg: 1, scope: !4163, file: !3, line: 780, type: !2639)
!4165 = !DILocation(line: 780, column: 45, scope: !4163)
!4166 = !DILocalVariable(name: "blender_type", arg: 2, scope: !4163, file: !3, line: 780, type: !986)
!4167 = !DILocation(line: 780, column: 57, scope: !4163)
!4168 = !DILocation(line: 782, column: 23, scope: !4163)
!4169 = !DILocation(line: 782, column: 2, scope: !4163)
!4170 = !DILocation(line: 782, column: 8, scope: !4163)
!4171 = !DILocation(line: 782, column: 21, scope: !4163)
!4172 = !DILocation(line: 783, column: 1, scope: !4163)
!4173 = distinct !DISubprogram(name: "RNA_struct_name_get_alloc", scope: !3, file: !3, line: 785, type: !4174, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!1091, !1349, !1091, !48, !1330}
!4176 = !DILocalVariable(name: "ptr", arg: 1, scope: !4173, file: !3, line: 785, type: !1349)
!4177 = !DILocation(line: 785, column: 45, scope: !4173)
!4178 = !DILocalVariable(name: "fixedbuf", arg: 2, scope: !4173, file: !3, line: 785, type: !1091)
!4179 = !DILocation(line: 785, column: 56, scope: !4173)
!4180 = !DILocalVariable(name: "fixedlen", arg: 3, scope: !4173, file: !3, line: 785, type: !48)
!4181 = !DILocation(line: 785, column: 70, scope: !4173)
!4182 = !DILocalVariable(name: "r_len", arg: 4, scope: !4173, file: !3, line: 785, type: !1330)
!4183 = !DILocation(line: 785, column: 85, scope: !4173)
!4184 = !DILocalVariable(name: "nameprop", scope: !4173, file: !3, line: 787, type: !1021)
!4185 = !DILocation(line: 787, column: 15, scope: !4173)
!4186 = !DILocation(line: 789, column: 6, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 789, column: 6)
!4188 = !DILocation(line: 789, column: 11, scope: !4187)
!4189 = !DILocation(line: 789, column: 16, scope: !4187)
!4190 = !DILocation(line: 789, column: 56, scope: !4187)
!4191 = !DILocation(line: 789, column: 61, scope: !4187)
!4192 = !DILocation(line: 789, column: 31, scope: !4187)
!4193 = !DILocation(line: 789, column: 29, scope: !4187)
!4194 = !DILocation(line: 789, column: 6, scope: !4173)
!4195 = !DILocation(line: 790, column: 40, scope: !4187)
!4196 = !DILocation(line: 790, column: 45, scope: !4187)
!4197 = !DILocation(line: 790, column: 55, scope: !4187)
!4198 = !DILocation(line: 790, column: 65, scope: !4187)
!4199 = !DILocation(line: 790, column: 75, scope: !4187)
!4200 = !DILocation(line: 790, column: 10, scope: !4187)
!4201 = !DILocation(line: 790, column: 3, scope: !4187)
!4202 = !DILocation(line: 792, column: 2, scope: !4173)
!4203 = !DILocation(line: 793, column: 1, scope: !4173)
!4204 = distinct !DISubprogram(name: "RNA_property_string_get_alloc", scope: !3, file: !3, line: 2602, type: !4205, scopeLine: 2604, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!1091, !1349, !1021, !1091, !48, !1330}
!4207 = !DILocalVariable(name: "ptr", arg: 1, scope: !4204, file: !3, line: 2602, type: !1349)
!4208 = !DILocation(line: 2602, column: 49, scope: !4204)
!4209 = !DILocalVariable(name: "prop", arg: 2, scope: !4204, file: !3, line: 2602, type: !1021)
!4210 = !DILocation(line: 2602, column: 67, scope: !4204)
!4211 = !DILocalVariable(name: "fixedbuf", arg: 3, scope: !4204, file: !3, line: 2603, type: !1091)
!4212 = !DILocation(line: 2603, column: 43, scope: !4204)
!4213 = !DILocalVariable(name: "fixedlen", arg: 4, scope: !4204, file: !3, line: 2603, type: !48)
!4214 = !DILocation(line: 2603, column: 57, scope: !4204)
!4215 = !DILocalVariable(name: "r_len", arg: 5, scope: !4204, file: !3, line: 2603, type: !1330)
!4216 = !DILocation(line: 2603, column: 72, scope: !4204)
!4217 = !DILocalVariable(name: "buf", scope: !4204, file: !3, line: 2605, type: !1091)
!4218 = !DILocation(line: 2605, column: 8, scope: !4204)
!4219 = !DILocalVariable(name: "length", scope: !4204, file: !3, line: 2606, type: !48)
!4220 = !DILocation(line: 2606, column: 6, scope: !4204)
!4221 = !DILocation(line: 2610, column: 38, scope: !4204)
!4222 = !DILocation(line: 2610, column: 43, scope: !4204)
!4223 = !DILocation(line: 2610, column: 11, scope: !4204)
!4224 = !DILocation(line: 2610, column: 9, scope: !4204)
!4225 = !DILocation(line: 2612, column: 6, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 2612, column: 6)
!4227 = !DILocation(line: 2612, column: 13, scope: !4226)
!4228 = !DILocation(line: 2612, column: 19, scope: !4226)
!4229 = !DILocation(line: 2612, column: 17, scope: !4226)
!4230 = !DILocation(line: 2612, column: 6, scope: !4204)
!4231 = !DILocation(line: 2613, column: 9, scope: !4226)
!4232 = !DILocation(line: 2613, column: 7, scope: !4226)
!4233 = !DILocation(line: 2613, column: 3, scope: !4226)
!4234 = !DILocation(line: 2615, column: 9, scope: !4226)
!4235 = !DILocation(line: 2615, column: 37, scope: !4226)
!4236 = !DILocation(line: 2615, column: 44, scope: !4226)
!4237 = !DILocation(line: 2615, column: 36, scope: !4226)
!4238 = !DILocation(line: 2615, column: 34, scope: !4226)
!4239 = !DILocation(line: 2615, column: 7, scope: !4226)
!4240 = !DILocation(line: 2622, column: 26, scope: !4204)
!4241 = !DILocation(line: 2622, column: 31, scope: !4204)
!4242 = !DILocation(line: 2622, column: 37, scope: !4204)
!4243 = !DILocation(line: 2622, column: 2, scope: !4204)
!4244 = !DILocation(line: 2628, column: 6, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 2628, column: 6)
!4246 = !DILocation(line: 2628, column: 6, scope: !4204)
!4247 = !DILocation(line: 2629, column: 12, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 2628, column: 13)
!4249 = !DILocation(line: 2629, column: 4, scope: !4248)
!4250 = !DILocation(line: 2629, column: 10, scope: !4248)
!4251 = !DILocation(line: 2630, column: 2, scope: !4248)
!4252 = !DILocation(line: 2632, column: 9, scope: !4204)
!4253 = !DILocation(line: 2632, column: 2, scope: !4204)
!4254 = distinct !DISubprogram(name: "RNA_property_identifier", scope: !3, file: !3, line: 797, type: !4255, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!1031, !1021}
!4257 = !DILocalVariable(name: "prop", arg: 1, scope: !4254, file: !3, line: 797, type: !1021)
!4258 = !DILocation(line: 797, column: 50, scope: !4254)
!4259 = !DILocation(line: 799, column: 40, scope: !4254)
!4260 = !DILocation(line: 799, column: 9, scope: !4254)
!4261 = !DILocation(line: 799, column: 2, scope: !4254)
!4262 = distinct !DISubprogram(name: "rna_ensure_property_identifier", scope: !3, file: !3, line: 464, type: !4263, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!1031, !4265}
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4266, size: 64)
!4266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!4267 = !DILocalVariable(name: "prop", arg: 1, scope: !4262, file: !3, line: 464, type: !4265)
!4268 = !DILocation(line: 464, column: 70, scope: !4262)
!4269 = !DILocation(line: 466, column: 6, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 466, column: 6)
!4271 = !DILocation(line: 466, column: 12, scope: !4270)
!4272 = !DILocation(line: 466, column: 18, scope: !4270)
!4273 = !DILocation(line: 466, column: 6, scope: !4262)
!4274 = !DILocation(line: 467, column: 10, scope: !4270)
!4275 = !DILocation(line: 467, column: 16, scope: !4270)
!4276 = !DILocation(line: 467, column: 3, scope: !4270)
!4277 = !DILocation(line: 469, column: 25, scope: !4270)
!4278 = !DILocation(line: 469, column: 32, scope: !4270)
!4279 = !DILocation(line: 469, column: 10, scope: !4270)
!4280 = !DILocation(line: 469, column: 3, scope: !4270)
!4281 = !DILocation(line: 470, column: 1, scope: !4262)
!4282 = distinct !DISubprogram(name: "RNA_property_description", scope: !3, file: !3, line: 802, type: !4255, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4283 = !DILocalVariable(name: "prop", arg: 1, scope: !4282, file: !3, line: 802, type: !1021)
!4284 = !DILocation(line: 802, column: 51, scope: !4282)
!4285 = !DILocation(line: 804, column: 9, scope: !4282)
!4286 = !DILocation(line: 804, column: 2, scope: !4282)
!4287 = distinct !DISubprogram(name: "rna_ensure_property_description", scope: !3, file: !3, line: 472, type: !4255, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4288 = !DILocalVariable(name: "prop", arg: 1, scope: !4287, file: !3, line: 472, type: !1021)
!4289 = !DILocation(line: 472, column: 65, scope: !4287)
!4290 = !DILocalVariable(name: "description", scope: !4287, file: !3, line: 474, type: !1031)
!4291 = !DILocation(line: 474, column: 14, scope: !4287)
!4292 = !DILocation(line: 476, column: 6, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 476, column: 6)
!4294 = !DILocation(line: 476, column: 12, scope: !4293)
!4295 = !DILocation(line: 476, column: 18, scope: !4293)
!4296 = !DILocation(line: 476, column: 6, scope: !4287)
!4297 = !DILocation(line: 477, column: 17, scope: !4293)
!4298 = !DILocation(line: 477, column: 23, scope: !4293)
!4299 = !DILocation(line: 477, column: 15, scope: !4293)
!4300 = !DILocation(line: 477, column: 3, scope: !4293)
!4301 = !DILocalVariable(name: "idp_ui", scope: !4302, file: !3, line: 480, type: !987)
!4302 = distinct !DILexicalBlock(scope: !4293, file: !3, line: 478, column: 7)
!4303 = !DILocation(line: 480, column: 15, scope: !4302)
!4304 = !DILocation(line: 480, column: 42, scope: !4302)
!4305 = !DILocation(line: 480, column: 24, scope: !4302)
!4306 = !DILocation(line: 482, column: 7, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 482, column: 7)
!4308 = !DILocation(line: 482, column: 7, scope: !4302)
!4309 = !DILocalVariable(name: "item", scope: !4310, file: !3, line: 483, type: !987)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 482, column: 15)
!4311 = !DILocation(line: 483, column: 16, scope: !4310)
!4312 = !DILocation(line: 483, column: 52, scope: !4310)
!4313 = !DILocation(line: 483, column: 23, scope: !4310)
!4314 = !DILocation(line: 484, column: 8, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 484, column: 8)
!4316 = !DILocation(line: 484, column: 8, scope: !4310)
!4317 = !DILocation(line: 485, column: 19, scope: !4315)
!4318 = !DILocation(line: 485, column: 17, scope: !4315)
!4319 = !DILocation(line: 485, column: 5, scope: !4315)
!4320 = !DILocation(line: 486, column: 3, scope: !4310)
!4321 = !DILocation(line: 488, column: 7, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 488, column: 7)
!4323 = !DILocation(line: 488, column: 19, scope: !4322)
!4324 = !DILocation(line: 488, column: 7, scope: !4302)
!4325 = !DILocation(line: 489, column: 33, scope: !4322)
!4326 = !DILocation(line: 489, column: 40, scope: !4322)
!4327 = !DILocation(line: 489, column: 18, scope: !4322)
!4328 = !DILocation(line: 489, column: 16, scope: !4322)
!4329 = !DILocation(line: 489, column: 4, scope: !4322)
!4330 = !DILocation(line: 492, column: 9, scope: !4287)
!4331 = !DILocation(line: 492, column: 2, scope: !4287)
!4332 = distinct !DISubprogram(name: "RNA_property_type", scope: !3, file: !3, line: 807, type: !4333, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!1039, !1021}
!4335 = !DILocalVariable(name: "prop", arg: 1, scope: !4332, file: !3, line: 807, type: !1021)
!4336 = !DILocation(line: 807, column: 45, scope: !4332)
!4337 = !DILocation(line: 809, column: 29, scope: !4332)
!4338 = !DILocation(line: 809, column: 9, scope: !4332)
!4339 = !DILocation(line: 809, column: 36, scope: !4332)
!4340 = !DILocation(line: 809, column: 2, scope: !4332)
!4341 = distinct !DISubprogram(name: "rna_ensure_property", scope: !3, file: !3, line: 447, type: !4342, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4342 = !DISubroutineType(types: !4343)
!4343 = !{!1021, !1021}
!4344 = !DILocalVariable(name: "prop", arg: 1, scope: !4341, file: !3, line: 447, type: !1021)
!4345 = !DILocation(line: 447, column: 54, scope: !4341)
!4346 = !DILocation(line: 451, column: 6, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 451, column: 6)
!4348 = !DILocation(line: 451, column: 12, scope: !4347)
!4349 = !DILocation(line: 451, column: 18, scope: !4347)
!4350 = !DILocation(line: 451, column: 6, scope: !4341)
!4351 = !DILocation(line: 452, column: 10, scope: !4347)
!4352 = !DILocation(line: 452, column: 3, scope: !4347)
!4353 = !DILocalVariable(name: "idprop", scope: !4354, file: !3, line: 455, type: !987)
!4354 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 454, column: 2)
!4355 = !DILocation(line: 455, column: 15, scope: !4354)
!4356 = !DILocation(line: 455, column: 38, scope: !4354)
!4357 = !DILocation(line: 455, column: 24, scope: !4354)
!4358 = !DILocation(line: 457, column: 7, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 457, column: 7)
!4360 = !DILocation(line: 457, column: 15, scope: !4359)
!4361 = !DILocation(line: 457, column: 20, scope: !4359)
!4362 = !DILocation(line: 457, column: 7, scope: !4354)
!4363 = !DILocation(line: 458, column: 30, scope: !4359)
!4364 = !DILocation(line: 458, column: 38, scope: !4359)
!4365 = !DILocation(line: 458, column: 24, scope: !4359)
!4366 = !DILocation(line: 458, column: 11, scope: !4359)
!4367 = !DILocation(line: 458, column: 4, scope: !4359)
!4368 = !DILocation(line: 460, column: 25, scope: !4359)
!4369 = !DILocation(line: 460, column: 33, scope: !4359)
!4370 = !DILocation(line: 460, column: 19, scope: !4359)
!4371 = !DILocation(line: 460, column: 11, scope: !4359)
!4372 = !DILocation(line: 460, column: 4, scope: !4359)
!4373 = !DILocation(line: 462, column: 1, scope: !4341)
!4374 = distinct !DISubprogram(name: "RNA_property_subtype", scope: !3, file: !3, line: 812, type: !4375, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!1041, !1021}
!4377 = !DILocalVariable(name: "prop", arg: 1, scope: !4374, file: !3, line: 812, type: !1021)
!4378 = !DILocation(line: 812, column: 51, scope: !4374)
!4379 = !DILocation(line: 814, column: 29, scope: !4374)
!4380 = !DILocation(line: 814, column: 9, scope: !4374)
!4381 = !DILocation(line: 814, column: 36, scope: !4374)
!4382 = !DILocation(line: 814, column: 2, scope: !4374)
!4383 = distinct !DISubprogram(name: "RNA_property_unit", scope: !3, file: !3, line: 817, type: !4384, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{!4386, !1021}
!4386 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyUnit", file: !6, line: 93, baseType: !948)
!4387 = !DILocalVariable(name: "prop", arg: 1, scope: !4383, file: !3, line: 817, type: !1021)
!4388 = !DILocation(line: 817, column: 45, scope: !4383)
!4389 = !DILocation(line: 819, column: 9, scope: !4383)
!4390 = !DILocation(line: 819, column: 2, scope: !4383)
!4391 = distinct !DISubprogram(name: "RNA_property_flag", scope: !3, file: !3, line: 822, type: !4392, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!48, !1021}
!4394 = !DILocalVariable(name: "prop", arg: 1, scope: !4391, file: !3, line: 822, type: !1021)
!4395 = !DILocation(line: 822, column: 36, scope: !4391)
!4396 = !DILocation(line: 824, column: 29, scope: !4391)
!4397 = !DILocation(line: 824, column: 9, scope: !4391)
!4398 = !DILocation(line: 824, column: 36, scope: !4391)
!4399 = !DILocation(line: 824, column: 2, scope: !4391)
!4400 = distinct !DISubprogram(name: "RNA_property_py_data_get", scope: !3, file: !3, line: 827, type: !4401, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!986, !1021}
!4403 = !DILocalVariable(name: "prop", arg: 1, scope: !4400, file: !3, line: 827, type: !1021)
!4404 = !DILocation(line: 827, column: 45, scope: !4400)
!4405 = !DILocation(line: 829, column: 9, scope: !4400)
!4406 = !DILocation(line: 829, column: 15, scope: !4400)
!4407 = !DILocation(line: 829, column: 2, scope: !4400)
!4408 = distinct !DISubprogram(name: "RNA_property_array_length", scope: !3, file: !3, line: 832, type: !4409, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!48, !1349, !1021}
!4411 = !DILocalVariable(name: "ptr", arg: 1, scope: !4408, file: !3, line: 832, type: !1349)
!4412 = !DILocation(line: 832, column: 43, scope: !4408)
!4413 = !DILocalVariable(name: "prop", arg: 2, scope: !4408, file: !3, line: 832, type: !1021)
!4414 = !DILocation(line: 832, column: 61, scope: !4408)
!4415 = !DILocation(line: 834, column: 42, scope: !4408)
!4416 = !DILocation(line: 834, column: 47, scope: !4408)
!4417 = !DILocation(line: 834, column: 9, scope: !4408)
!4418 = !DILocation(line: 834, column: 2, scope: !4408)
!4419 = distinct !DISubprogram(name: "rna_ensure_property_array_length", scope: !3, file: !3, line: 299, type: !4409, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4420 = !DILocalVariable(name: "ptr", arg: 1, scope: !4419, file: !3, line: 299, type: !1349)
!4421 = !DILocation(line: 299, column: 57, scope: !4419)
!4422 = !DILocalVariable(name: "prop", arg: 2, scope: !4419, file: !3, line: 299, type: !1021)
!4423 = !DILocation(line: 299, column: 75, scope: !4419)
!4424 = !DILocation(line: 301, column: 6, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4419, file: !3, line: 301, column: 6)
!4426 = !DILocation(line: 301, column: 12, scope: !4425)
!4427 = !DILocation(line: 301, column: 18, scope: !4425)
!4428 = !DILocation(line: 301, column: 6, scope: !4419)
!4429 = !DILocalVariable(name: "arraylen", scope: !4430, file: !3, line: 302, type: !1763)
!4430 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 301, column: 32)
!4431 = !DILocation(line: 302, column: 7, scope: !4430)
!4432 = !DILocation(line: 303, column: 11, scope: !4430)
!4433 = !DILocation(line: 303, column: 17, scope: !4430)
!4434 = !DILocation(line: 303, column: 27, scope: !4430)
!4435 = !DILocation(line: 303, column: 30, scope: !4430)
!4436 = !DILocation(line: 303, column: 35, scope: !4430)
!4437 = !DILocation(line: 303, column: 10, scope: !4430)
!4438 = !DILocation(line: 303, column: 43, scope: !4430)
!4439 = !DILocation(line: 303, column: 49, scope: !4430)
!4440 = !DILocation(line: 303, column: 59, scope: !4430)
!4441 = !DILocation(line: 303, column: 64, scope: !4430)
!4442 = !DILocation(line: 303, column: 76, scope: !4430)
!4443 = !DILocation(line: 303, column: 82, scope: !4430)
!4444 = !DILocation(line: 303, column: 3, scope: !4430)
!4445 = !DILocalVariable(name: "idprop", scope: !4446, file: !3, line: 306, type: !987)
!4446 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 305, column: 7)
!4447 = !DILocation(line: 306, column: 15, scope: !4446)
!4448 = !DILocation(line: 306, column: 38, scope: !4446)
!4449 = !DILocation(line: 306, column: 24, scope: !4446)
!4450 = !DILocation(line: 308, column: 7, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 308, column: 7)
!4452 = !DILocation(line: 308, column: 15, scope: !4451)
!4453 = !DILocation(line: 308, column: 20, scope: !4451)
!4454 = !DILocation(line: 308, column: 7, scope: !4446)
!4455 = !DILocation(line: 309, column: 11, scope: !4451)
!4456 = !DILocation(line: 309, column: 19, scope: !4451)
!4457 = !DILocation(line: 309, column: 4, scope: !4451)
!4458 = !DILocation(line: 311, column: 4, scope: !4451)
!4459 = !DILocation(line: 313, column: 1, scope: !4419)
!4460 = distinct !DISubprogram(name: "RNA_property_array_check", scope: !3, file: !3, line: 837, type: !4461, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4461 = !DISubroutineType(types: !4462)
!4462 = !{!1381, !1021}
!4463 = !DILocalVariable(name: "prop", arg: 1, scope: !4460, file: !3, line: 837, type: !1021)
!4464 = !DILocation(line: 837, column: 44, scope: !4460)
!4465 = !DILocation(line: 839, column: 41, scope: !4460)
!4466 = !DILocation(line: 839, column: 9, scope: !4460)
!4467 = !DILocation(line: 839, column: 2, scope: !4460)
!4468 = distinct !DISubprogram(name: "rna_ensure_property_array_check", scope: !3, file: !3, line: 315, type: !4461, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4469 = !DILocalVariable(name: "prop", arg: 1, scope: !4468, file: !3, line: 315, type: !1021)
!4470 = !DILocation(line: 315, column: 58, scope: !4468)
!4471 = !DILocation(line: 317, column: 6, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 317, column: 6)
!4473 = !DILocation(line: 317, column: 12, scope: !4472)
!4474 = !DILocation(line: 317, column: 18, scope: !4472)
!4475 = !DILocation(line: 317, column: 6, scope: !4468)
!4476 = !DILocation(line: 318, column: 11, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 317, column: 32)
!4478 = !DILocation(line: 318, column: 17, scope: !4477)
!4479 = !DILocation(line: 318, column: 27, scope: !4477)
!4480 = !DILocation(line: 318, column: 30, scope: !4477)
!4481 = !DILocation(line: 318, column: 36, scope: !4477)
!4482 = !DILocation(line: 318, column: 10, scope: !4477)
!4483 = !DILocation(line: 318, column: 3, scope: !4477)
!4484 = !DILocalVariable(name: "idprop", scope: !4485, file: !3, line: 321, type: !987)
!4485 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 320, column: 7)
!4486 = !DILocation(line: 321, column: 15, scope: !4485)
!4487 = !DILocation(line: 321, column: 38, scope: !4485)
!4488 = !DILocation(line: 321, column: 24, scope: !4485)
!4489 = !DILocation(line: 323, column: 11, scope: !4485)
!4490 = !DILocation(line: 323, column: 19, scope: !4485)
!4491 = !DILocation(line: 323, column: 24, scope: !4485)
!4492 = !DILocation(line: 323, column: 10, scope: !4485)
!4493 = !DILocation(line: 323, column: 3, scope: !4485)
!4494 = !DILocation(line: 325, column: 1, scope: !4468)
!4495 = distinct !DISubprogram(name: "RNA_property_array_dimension", scope: !3, file: !3, line: 843, type: !4496, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!48, !1349, !1021, !1330}
!4498 = !DILocalVariable(name: "ptr", arg: 1, scope: !4495, file: !3, line: 843, type: !1349)
!4499 = !DILocation(line: 843, column: 46, scope: !4495)
!4500 = !DILocalVariable(name: "prop", arg: 2, scope: !4495, file: !3, line: 843, type: !1021)
!4501 = !DILocation(line: 843, column: 64, scope: !4495)
!4502 = !DILocalVariable(name: "length", arg: 3, scope: !4495, file: !3, line: 843, type: !1330)
!4503 = !DILocation(line: 843, column: 74, scope: !4495)
!4504 = !DILocalVariable(name: "rprop", scope: !4495, file: !3, line: 845, type: !1021)
!4505 = !DILocation(line: 845, column: 15, scope: !4495)
!4506 = !DILocation(line: 845, column: 43, scope: !4495)
!4507 = !DILocation(line: 845, column: 23, scope: !4495)
!4508 = !DILocation(line: 847, column: 6, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 847, column: 6)
!4510 = !DILocation(line: 847, column: 6, scope: !4495)
!4511 = !DILocation(line: 848, column: 42, scope: !4509)
!4512 = !DILocation(line: 848, column: 47, scope: !4509)
!4513 = !DILocation(line: 848, column: 53, scope: !4509)
!4514 = !DILocation(line: 848, column: 3, scope: !4509)
!4515 = !DILocation(line: 850, column: 9, scope: !4495)
!4516 = !DILocation(line: 850, column: 16, scope: !4495)
!4517 = !DILocation(line: 850, column: 2, scope: !4495)
!4518 = distinct !DISubprogram(name: "rna_ensure_property_multi_array_length", scope: !3, file: !3, line: 327, type: !4519, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{null, !1349, !1021, !1330}
!4521 = !DILocalVariable(name: "ptr", arg: 1, scope: !4518, file: !3, line: 327, type: !1349)
!4522 = !DILocation(line: 327, column: 64, scope: !4518)
!4523 = !DILocalVariable(name: "prop", arg: 2, scope: !4518, file: !3, line: 327, type: !1021)
!4524 = !DILocation(line: 327, column: 82, scope: !4518)
!4525 = !DILocalVariable(name: "length", arg: 3, scope: !4518, file: !3, line: 327, type: !1330)
!4526 = !DILocation(line: 327, column: 92, scope: !4518)
!4527 = !DILocation(line: 329, column: 6, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 329, column: 6)
!4529 = !DILocation(line: 329, column: 12, scope: !4528)
!4530 = !DILocation(line: 329, column: 18, scope: !4528)
!4531 = !DILocation(line: 329, column: 6, scope: !4518)
!4532 = !DILocation(line: 330, column: 7, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 330, column: 7)
!4534 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 329, column: 32)
!4535 = !DILocation(line: 330, column: 13, scope: !4533)
!4536 = !DILocation(line: 330, column: 7, scope: !4534)
!4537 = !DILocation(line: 331, column: 4, scope: !4533)
!4538 = !DILocation(line: 331, column: 10, scope: !4533)
!4539 = !DILocation(line: 331, column: 20, scope: !4533)
!4540 = !DILocation(line: 331, column: 25, scope: !4533)
!4541 = !DILocation(line: 333, column: 11, scope: !4533)
!4542 = !DILocation(line: 333, column: 4, scope: !4533)
!4543 = !DILocation(line: 333, column: 19, scope: !4533)
!4544 = !DILocation(line: 333, column: 25, scope: !4533)
!4545 = !DILocation(line: 333, column: 38, scope: !4533)
!4546 = !DILocation(line: 333, column: 44, scope: !4533)
!4547 = !DILocation(line: 333, column: 59, scope: !4533)
!4548 = !DILocation(line: 334, column: 2, scope: !4534)
!4549 = !DILocalVariable(name: "idprop", scope: !4550, file: !3, line: 336, type: !987)
!4550 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 335, column: 7)
!4551 = !DILocation(line: 336, column: 15, scope: !4550)
!4552 = !DILocation(line: 336, column: 38, scope: !4550)
!4553 = !DILocation(line: 336, column: 24, scope: !4550)
!4554 = !DILocation(line: 338, column: 7, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 338, column: 7)
!4556 = !DILocation(line: 338, column: 15, scope: !4555)
!4557 = !DILocation(line: 338, column: 20, scope: !4555)
!4558 = !DILocation(line: 338, column: 7, scope: !4550)
!4559 = !DILocation(line: 339, column: 16, scope: !4555)
!4560 = !DILocation(line: 339, column: 24, scope: !4555)
!4561 = !DILocation(line: 339, column: 4, scope: !4555)
!4562 = !DILocation(line: 339, column: 14, scope: !4555)
!4563 = !DILocation(line: 341, column: 4, scope: !4555)
!4564 = !DILocation(line: 341, column: 14, scope: !4555)
!4565 = !DILocation(line: 343, column: 1, scope: !4518)
!4566 = distinct !DISubprogram(name: "RNA_property_multi_array_length", scope: !3, file: !3, line: 854, type: !4567, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!48, !1349, !1021, !48}
!4569 = !DILocalVariable(name: "ptr", arg: 1, scope: !4566, file: !3, line: 854, type: !1349)
!4570 = !DILocation(line: 854, column: 49, scope: !4566)
!4571 = !DILocalVariable(name: "prop", arg: 2, scope: !4566, file: !3, line: 854, type: !1021)
!4572 = !DILocation(line: 854, column: 67, scope: !4566)
!4573 = !DILocalVariable(name: "dim", arg: 3, scope: !4566, file: !3, line: 854, type: !48)
!4574 = !DILocation(line: 854, column: 77, scope: !4566)
!4575 = !DILocalVariable(name: "len", scope: !4566, file: !3, line: 856, type: !1763)
!4576 = !DILocation(line: 856, column: 6, scope: !4566)
!4577 = !DILocation(line: 858, column: 41, scope: !4566)
!4578 = !DILocation(line: 858, column: 46, scope: !4566)
!4579 = !DILocation(line: 858, column: 52, scope: !4566)
!4580 = !DILocation(line: 858, column: 2, scope: !4566)
!4581 = !DILocation(line: 860, column: 13, scope: !4566)
!4582 = !DILocation(line: 860, column: 9, scope: !4566)
!4583 = !DILocation(line: 860, column: 2, scope: !4566)
!4584 = distinct !DISubprogram(name: "RNA_property_array_item_char", scope: !3, file: !3, line: 863, type: !4585, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{!996, !1021, !48}
!4587 = !DILocalVariable(name: "prop", arg: 1, scope: !4584, file: !3, line: 863, type: !1021)
!4588 = !DILocation(line: 863, column: 48, scope: !4584)
!4589 = !DILocalVariable(name: "index", arg: 2, scope: !4584, file: !3, line: 863, type: !48)
!4590 = !DILocation(line: 863, column: 58, scope: !4584)
!4591 = !DILocalVariable(name: "vectoritem", scope: !4584, file: !3, line: 865, type: !1031)
!4592 = !DILocation(line: 865, column: 14, scope: !4584)
!4593 = !DILocalVariable(name: "quatitem", scope: !4584, file: !3, line: 866, type: !1031)
!4594 = !DILocation(line: 866, column: 14, scope: !4584)
!4595 = !DILocalVariable(name: "coloritem", scope: !4584, file: !3, line: 867, type: !1031)
!4596 = !DILocation(line: 867, column: 14, scope: !4584)
!4597 = !DILocalVariable(name: "subtype", scope: !4584, file: !3, line: 868, type: !1041)
!4598 = !DILocation(line: 868, column: 18, scope: !4584)
!4599 = !DILocation(line: 868, column: 48, scope: !4584)
!4600 = !DILocation(line: 868, column: 28, scope: !4584)
!4601 = !DILocation(line: 868, column: 55, scope: !4584)
!4602 = !DILocation(line: 873, column: 7, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 873, column: 6)
!4604 = !DILocation(line: 873, column: 13, scope: !4603)
!4605 = !DILocation(line: 873, column: 18, scope: !4603)
!4606 = !DILocation(line: 873, column: 21, scope: !4603)
!4607 = !DILocation(line: 873, column: 6, scope: !4584)
!4608 = !DILocation(line: 874, column: 10, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 873, column: 69)
!4610 = !DILocation(line: 874, column: 19, scope: !4609)
!4611 = !DILocation(line: 874, column: 3, scope: !4609)
!4612 = !DILocation(line: 876, column: 12, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 876, column: 11)
!4614 = !DILocation(line: 876, column: 18, scope: !4613)
!4615 = !DILocation(line: 876, column: 23, scope: !4613)
!4616 = !DILocation(line: 876, column: 26, scope: !4613)
!4617 = !DILocation(line: 876, column: 11, scope: !4603)
!4618 = !DILocation(line: 879, column: 10, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 878, column: 2)
!4620 = !DILocation(line: 879, column: 21, scope: !4619)
!4621 = !DILocation(line: 879, column: 3, scope: !4619)
!4622 = !DILocation(line: 881, column: 12, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 881, column: 11)
!4624 = !DILocation(line: 881, column: 18, scope: !4623)
!4625 = !DILocation(line: 881, column: 23, scope: !4623)
!4626 = !DILocation(line: 881, column: 26, scope: !4623)
!4627 = !DILocation(line: 881, column: 11, scope: !4613)
!4628 = !DILocation(line: 882, column: 10, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 881, column: 71)
!4630 = !DILocation(line: 882, column: 20, scope: !4629)
!4631 = !DILocation(line: 882, column: 3, scope: !4629)
!4632 = !DILocation(line: 885, column: 2, scope: !4584)
!4633 = !DILocation(line: 886, column: 1, scope: !4584)
!4634 = distinct !DISubprogram(name: "RNA_property_array_item_index", scope: !3, file: !3, line: 888, type: !4635, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4635 = !DISubroutineType(types: !4636)
!4636 = !{!48, !1021, !996}
!4637 = !DILocalVariable(name: "prop", arg: 1, scope: !4634, file: !3, line: 888, type: !1021)
!4638 = !DILocation(line: 888, column: 48, scope: !4634)
!4639 = !DILocalVariable(name: "name", arg: 2, scope: !4634, file: !3, line: 888, type: !996)
!4640 = !DILocation(line: 888, column: 59, scope: !4634)
!4641 = !DILocalVariable(name: "subtype", scope: !4634, file: !3, line: 890, type: !1041)
!4642 = !DILocation(line: 890, column: 18, scope: !4634)
!4643 = !DILocation(line: 890, column: 48, scope: !4634)
!4644 = !DILocation(line: 890, column: 28, scope: !4634)
!4645 = !DILocation(line: 890, column: 55, scope: !4634)
!4646 = !DILocation(line: 894, column: 6, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 894, column: 6)
!4648 = !DILocation(line: 894, column: 6, scope: !4634)
!4649 = !DILocation(line: 895, column: 11, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 894, column: 54)
!4651 = !DILocation(line: 895, column: 3, scope: !4650)
!4652 = !DILocation(line: 897, column: 5, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 895, column: 17)
!4654 = !DILocation(line: 899, column: 5, scope: !4653)
!4655 = !DILocation(line: 901, column: 5, scope: !4653)
!4656 = !DILocation(line: 903, column: 5, scope: !4653)
!4657 = !DILocation(line: 905, column: 2, scope: !4650)
!4658 = !DILocation(line: 906, column: 11, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 906, column: 11)
!4660 = !DILocation(line: 906, column: 11, scope: !4647)
!4661 = !DILocation(line: 909, column: 11, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 908, column: 2)
!4663 = !DILocation(line: 909, column: 3, scope: !4662)
!4664 = !DILocation(line: 911, column: 5, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4662, file: !3, line: 909, column: 17)
!4666 = !DILocation(line: 913, column: 5, scope: !4665)
!4667 = !DILocation(line: 915, column: 5, scope: !4665)
!4668 = !DILocation(line: 917, column: 5, scope: !4665)
!4669 = !DILocation(line: 919, column: 2, scope: !4662)
!4670 = !DILocation(line: 920, column: 11, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 920, column: 11)
!4672 = !DILocation(line: 920, column: 11, scope: !4659)
!4673 = !DILocation(line: 921, column: 11, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 920, column: 56)
!4675 = !DILocation(line: 921, column: 3, scope: !4674)
!4676 = !DILocation(line: 923, column: 5, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 921, column: 17)
!4678 = !DILocation(line: 925, column: 5, scope: !4677)
!4679 = !DILocation(line: 927, column: 5, scope: !4677)
!4680 = !DILocation(line: 929, column: 5, scope: !4677)
!4681 = !DILocation(line: 931, column: 2, scope: !4674)
!4682 = !DILocation(line: 933, column: 2, scope: !4634)
!4683 = !DILocation(line: 934, column: 1, scope: !4634)
!4684 = distinct !DISubprogram(name: "RNA_property_int_range", scope: !3, file: !3, line: 937, type: !4685, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4685 = !DISubroutineType(types: !4686)
!4686 = !{null, !1349, !1021, !1330, !1330}
!4687 = !DILocalVariable(name: "ptr", arg: 1, scope: !4684, file: !3, line: 937, type: !1349)
!4688 = !DILocation(line: 937, column: 41, scope: !4684)
!4689 = !DILocalVariable(name: "prop", arg: 2, scope: !4684, file: !3, line: 937, type: !1021)
!4690 = !DILocation(line: 937, column: 59, scope: !4684)
!4691 = !DILocalVariable(name: "hardmin", arg: 3, scope: !4684, file: !3, line: 937, type: !1330)
!4692 = !DILocation(line: 937, column: 70, scope: !4684)
!4693 = !DILocalVariable(name: "hardmax", arg: 4, scope: !4684, file: !3, line: 937, type: !1330)
!4694 = !DILocation(line: 937, column: 84, scope: !4684)
!4695 = !DILocalVariable(name: "iprop", scope: !4684, file: !3, line: 939, type: !2459)
!4696 = !DILocation(line: 939, column: 18, scope: !4684)
!4697 = !DILocation(line: 939, column: 64, scope: !4684)
!4698 = !DILocation(line: 939, column: 44, scope: !4684)
!4699 = !DILocation(line: 939, column: 26, scope: !4684)
!4700 = !DILocalVariable(name: "softmin", scope: !4684, file: !3, line: 940, type: !48)
!4701 = !DILocation(line: 940, column: 6, scope: !4684)
!4702 = !DILocalVariable(name: "softmax", scope: !4684, file: !3, line: 940, type: !48)
!4703 = !DILocation(line: 940, column: 15, scope: !4684)
!4704 = !DILocation(line: 942, column: 6, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 942, column: 6)
!4706 = !DILocation(line: 942, column: 12, scope: !4705)
!4707 = !DILocation(line: 942, column: 18, scope: !4705)
!4708 = !DILocation(line: 942, column: 6, scope: !4684)
!4709 = !DILocalVariable(name: "idp_ui", scope: !4710, file: !3, line: 944, type: !987)
!4710 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 942, column: 32)
!4711 = !DILocation(line: 944, column: 15, scope: !4710)
!4712 = !DILocation(line: 944, column: 42, scope: !4710)
!4713 = !DILocation(line: 944, column: 24, scope: !4710)
!4714 = !DILocation(line: 946, column: 7, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 946, column: 7)
!4716 = !DILocation(line: 946, column: 7, scope: !4710)
!4717 = !DILocalVariable(name: "item", scope: !4718, file: !3, line: 947, type: !987)
!4718 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 946, column: 15)
!4719 = !DILocation(line: 947, column: 16, scope: !4718)
!4720 = !DILocation(line: 949, column: 40, scope: !4718)
!4721 = !DILocation(line: 949, column: 11, scope: !4718)
!4722 = !DILocation(line: 949, column: 9, scope: !4718)
!4723 = !DILocation(line: 950, column: 15, scope: !4718)
!4724 = !DILocation(line: 950, column: 22, scope: !4718)
!4725 = !DILocation(line: 950, column: 5, scope: !4718)
!4726 = !DILocation(line: 950, column: 13, scope: !4718)
!4727 = !DILocation(line: 952, column: 40, scope: !4718)
!4728 = !DILocation(line: 952, column: 11, scope: !4718)
!4729 = !DILocation(line: 952, column: 9, scope: !4718)
!4730 = !DILocation(line: 953, column: 15, scope: !4718)
!4731 = !DILocation(line: 953, column: 22, scope: !4718)
!4732 = !DILocation(line: 953, column: 5, scope: !4718)
!4733 = !DILocation(line: 953, column: 13, scope: !4718)
!4734 = !DILocation(line: 955, column: 4, scope: !4718)
!4735 = !DILocation(line: 957, column: 2, scope: !4710)
!4736 = !DILocation(line: 959, column: 6, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 959, column: 6)
!4738 = !DILocation(line: 959, column: 13, scope: !4737)
!4739 = !DILocation(line: 959, column: 6, scope: !4684)
!4740 = !DILocation(line: 960, column: 4, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 959, column: 20)
!4742 = !DILocation(line: 960, column: 12, scope: !4741)
!4743 = !DILocation(line: 961, column: 4, scope: !4741)
!4744 = !DILocation(line: 961, column: 12, scope: !4741)
!4745 = !DILocation(line: 963, column: 3, scope: !4741)
!4746 = !DILocation(line: 963, column: 10, scope: !4741)
!4747 = !DILocation(line: 963, column: 16, scope: !4741)
!4748 = !DILocation(line: 963, column: 21, scope: !4741)
!4749 = !DILocation(line: 963, column: 30, scope: !4741)
!4750 = !DILocation(line: 964, column: 2, scope: !4741)
!4751 = !DILocation(line: 965, column: 11, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 965, column: 11)
!4753 = !DILocation(line: 965, column: 18, scope: !4752)
!4754 = !DILocation(line: 965, column: 11, scope: !4737)
!4755 = !DILocation(line: 966, column: 4, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 965, column: 28)
!4757 = !DILocation(line: 966, column: 12, scope: !4756)
!4758 = !DILocation(line: 967, column: 4, scope: !4756)
!4759 = !DILocation(line: 967, column: 12, scope: !4756)
!4760 = !DILocation(line: 969, column: 3, scope: !4756)
!4761 = !DILocation(line: 969, column: 10, scope: !4756)
!4762 = !DILocation(line: 969, column: 19, scope: !4756)
!4763 = !DILocation(line: 969, column: 24, scope: !4756)
!4764 = !DILocation(line: 969, column: 30, scope: !4756)
!4765 = !DILocation(line: 969, column: 39, scope: !4756)
!4766 = !DILocation(line: 970, column: 2, scope: !4756)
!4767 = !DILocation(line: 972, column: 14, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 971, column: 7)
!4769 = !DILocation(line: 972, column: 21, scope: !4768)
!4770 = !DILocation(line: 972, column: 4, scope: !4768)
!4771 = !DILocation(line: 972, column: 12, scope: !4768)
!4772 = !DILocation(line: 973, column: 14, scope: !4768)
!4773 = !DILocation(line: 973, column: 21, scope: !4768)
!4774 = !DILocation(line: 973, column: 4, scope: !4768)
!4775 = !DILocation(line: 973, column: 12, scope: !4768)
!4776 = !DILocation(line: 975, column: 1, scope: !4684)
!4777 = distinct !DISubprogram(name: "rna_idproperty_ui", scope: !3, file: !3, line: 239, type: !4778, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!987, !1021}
!4780 = !DILocalVariable(name: "prop", arg: 1, scope: !4777, file: !3, line: 239, type: !1021)
!4781 = !DILocation(line: 239, column: 51, scope: !4777)
!4782 = !DILocalVariable(name: "idprop", scope: !4777, file: !3, line: 241, type: !987)
!4783 = !DILocation(line: 241, column: 14, scope: !4777)
!4784 = !DILocation(line: 243, column: 31, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 243, column: 2)
!4786 = !DILocation(line: 243, column: 38, scope: !4785)
!4787 = !DILocation(line: 243, column: 14, scope: !4785)
!4788 = !DILocation(line: 243, column: 7, scope: !4785)
!4789 = !DILocation(line: 243, column: 44, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 243, column: 2)
!4791 = !DILocation(line: 243, column: 2, scope: !4785)
!4792 = !DILocation(line: 244, column: 26, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 244, column: 7)
!4794 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 243, column: 75)
!4795 = !DILocation(line: 244, column: 34, scope: !4793)
!4796 = !DILocation(line: 244, column: 7, scope: !4793)
!4797 = !DILocation(line: 244, column: 40, scope: !4793)
!4798 = !DILocation(line: 244, column: 7, scope: !4794)
!4799 = !DILocation(line: 245, column: 4, scope: !4793)
!4800 = !DILocation(line: 246, column: 2, scope: !4794)
!4801 = !DILocation(line: 243, column: 61, scope: !4790)
!4802 = !DILocation(line: 243, column: 69, scope: !4790)
!4803 = !DILocation(line: 243, column: 59, scope: !4790)
!4804 = !DILocation(line: 243, column: 2, scope: !4790)
!4805 = distinct !{!4805, !4791, !4806}
!4806 = !DILocation(line: 246, column: 2, scope: !4785)
!4807 = !DILocation(line: 248, column: 6, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 248, column: 6)
!4809 = !DILocation(line: 248, column: 13, scope: !4808)
!4810 = !DILocation(line: 248, column: 6, scope: !4777)
!4811 = !DILocation(line: 249, column: 32, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 249, column: 3)
!4813 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 248, column: 22)
!4814 = !DILocation(line: 249, column: 39, scope: !4812)
!4815 = !DILocation(line: 249, column: 15, scope: !4812)
!4816 = !DILocation(line: 249, column: 8, scope: !4812)
!4817 = !DILocation(line: 249, column: 45, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 249, column: 3)
!4819 = !DILocation(line: 249, column: 3, scope: !4812)
!4820 = !DILocation(line: 250, column: 27, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 250, column: 8)
!4822 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 249, column: 76)
!4823 = !DILocation(line: 250, column: 35, scope: !4821)
!4824 = !DILocation(line: 250, column: 8, scope: !4821)
!4825 = !DILocation(line: 250, column: 41, scope: !4821)
!4826 = !DILocation(line: 250, column: 8, scope: !4822)
!4827 = !DILocation(line: 251, column: 5, scope: !4821)
!4828 = !DILocation(line: 252, column: 3, scope: !4822)
!4829 = !DILocation(line: 249, column: 62, scope: !4818)
!4830 = !DILocation(line: 249, column: 70, scope: !4818)
!4831 = !DILocation(line: 249, column: 60, scope: !4818)
!4832 = !DILocation(line: 249, column: 3, scope: !4818)
!4833 = distinct !{!4833, !4819, !4834}
!4834 = !DILocation(line: 252, column: 3, scope: !4812)
!4835 = !DILocation(line: 253, column: 2, scope: !4813)
!4836 = !DILocation(line: 255, column: 6, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 255, column: 6)
!4838 = !DILocation(line: 255, column: 6, scope: !4777)
!4839 = !DILocation(line: 256, column: 39, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 255, column: 14)
!4841 = !DILocation(line: 256, column: 62, scope: !4840)
!4842 = !DILocation(line: 256, column: 69, scope: !4840)
!4843 = !DILocation(line: 256, column: 47, scope: !4840)
!4844 = !DILocation(line: 256, column: 10, scope: !4840)
!4845 = !DILocation(line: 256, column: 3, scope: !4840)
!4846 = !DILocation(line: 259, column: 2, scope: !4777)
!4847 = !DILocation(line: 260, column: 1, scope: !4777)
!4848 = distinct !DISubprogram(name: "RNA_property_int_ui_range", scope: !3, file: !3, line: 977, type: !4849, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{null, !1349, !1021, !1330, !1330, !1330}
!4851 = !DILocalVariable(name: "ptr", arg: 1, scope: !4848, file: !3, line: 977, type: !1349)
!4852 = !DILocation(line: 977, column: 44, scope: !4848)
!4853 = !DILocalVariable(name: "prop", arg: 2, scope: !4848, file: !3, line: 977, type: !1021)
!4854 = !DILocation(line: 977, column: 62, scope: !4848)
!4855 = !DILocalVariable(name: "softmin", arg: 3, scope: !4848, file: !3, line: 977, type: !1330)
!4856 = !DILocation(line: 977, column: 73, scope: !4848)
!4857 = !DILocalVariable(name: "softmax", arg: 4, scope: !4848, file: !3, line: 977, type: !1330)
!4858 = !DILocation(line: 977, column: 87, scope: !4848)
!4859 = !DILocalVariable(name: "step", arg: 5, scope: !4848, file: !3, line: 977, type: !1330)
!4860 = !DILocation(line: 977, column: 101, scope: !4848)
!4861 = !DILocalVariable(name: "iprop", scope: !4848, file: !3, line: 979, type: !2459)
!4862 = !DILocation(line: 979, column: 18, scope: !4848)
!4863 = !DILocation(line: 979, column: 64, scope: !4848)
!4864 = !DILocation(line: 979, column: 44, scope: !4848)
!4865 = !DILocation(line: 979, column: 26, scope: !4848)
!4866 = !DILocalVariable(name: "hardmin", scope: !4848, file: !3, line: 980, type: !48)
!4867 = !DILocation(line: 980, column: 6, scope: !4848)
!4868 = !DILocalVariable(name: "hardmax", scope: !4848, file: !3, line: 980, type: !48)
!4869 = !DILocation(line: 980, column: 15, scope: !4848)
!4870 = !DILocation(line: 982, column: 6, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 982, column: 6)
!4872 = !DILocation(line: 982, column: 12, scope: !4871)
!4873 = !DILocation(line: 982, column: 18, scope: !4871)
!4874 = !DILocation(line: 982, column: 6, scope: !4848)
!4875 = !DILocalVariable(name: "idp_ui", scope: !4876, file: !3, line: 984, type: !987)
!4876 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 982, column: 32)
!4877 = !DILocation(line: 984, column: 15, scope: !4876)
!4878 = !DILocation(line: 984, column: 42, scope: !4876)
!4879 = !DILocation(line: 984, column: 24, scope: !4876)
!4880 = !DILocation(line: 986, column: 7, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 986, column: 7)
!4882 = !DILocation(line: 986, column: 7, scope: !4876)
!4883 = !DILocalVariable(name: "item", scope: !4884, file: !3, line: 987, type: !987)
!4884 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 986, column: 15)
!4885 = !DILocation(line: 987, column: 16, scope: !4884)
!4886 = !DILocation(line: 989, column: 40, scope: !4884)
!4887 = !DILocation(line: 989, column: 11, scope: !4884)
!4888 = !DILocation(line: 989, column: 9, scope: !4884)
!4889 = !DILocation(line: 990, column: 15, scope: !4884)
!4890 = !DILocation(line: 990, column: 22, scope: !4884)
!4891 = !DILocation(line: 990, column: 5, scope: !4884)
!4892 = !DILocation(line: 990, column: 13, scope: !4884)
!4893 = !DILocation(line: 992, column: 40, scope: !4884)
!4894 = !DILocation(line: 992, column: 11, scope: !4884)
!4895 = !DILocation(line: 992, column: 9, scope: !4884)
!4896 = !DILocation(line: 993, column: 15, scope: !4884)
!4897 = !DILocation(line: 993, column: 22, scope: !4884)
!4898 = !DILocation(line: 993, column: 5, scope: !4884)
!4899 = !DILocation(line: 993, column: 13, scope: !4884)
!4900 = !DILocation(line: 995, column: 40, scope: !4884)
!4901 = !DILocation(line: 995, column: 11, scope: !4884)
!4902 = !DILocation(line: 995, column: 9, scope: !4884)
!4903 = !DILocation(line: 996, column: 12, scope: !4884)
!4904 = !DILocation(line: 996, column: 19, scope: !4884)
!4905 = !DILocation(line: 996, column: 5, scope: !4884)
!4906 = !DILocation(line: 996, column: 10, scope: !4884)
!4907 = !DILocation(line: 998, column: 4, scope: !4884)
!4908 = !DILocation(line: 1000, column: 2, scope: !4876)
!4909 = !DILocation(line: 1002, column: 13, scope: !4848)
!4910 = !DILocation(line: 1002, column: 20, scope: !4848)
!4911 = !DILocation(line: 1002, column: 3, scope: !4848)
!4912 = !DILocation(line: 1002, column: 11, scope: !4848)
!4913 = !DILocation(line: 1003, column: 13, scope: !4848)
!4914 = !DILocation(line: 1003, column: 20, scope: !4848)
!4915 = !DILocation(line: 1003, column: 3, scope: !4848)
!4916 = !DILocation(line: 1003, column: 11, scope: !4848)
!4917 = !DILocation(line: 1005, column: 6, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 1005, column: 6)
!4919 = !DILocation(line: 1005, column: 13, scope: !4918)
!4920 = !DILocation(line: 1005, column: 6, scope: !4848)
!4921 = !DILocation(line: 1006, column: 11, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1005, column: 20)
!4923 = !DILocation(line: 1007, column: 11, scope: !4922)
!4924 = !DILocation(line: 1009, column: 3, scope: !4922)
!4925 = !DILocation(line: 1009, column: 10, scope: !4922)
!4926 = !DILocation(line: 1009, column: 16, scope: !4922)
!4927 = !DILocation(line: 1009, column: 41, scope: !4922)
!4928 = !DILocation(line: 1009, column: 50, scope: !4922)
!4929 = !DILocation(line: 1011, column: 22, scope: !4922)
!4930 = !DILocation(line: 1011, column: 21, scope: !4922)
!4931 = !DILocation(line: 1011, column: 31, scope: !4922)
!4932 = !DILocation(line: 1011, column: 14, scope: !4922)
!4933 = !DILocation(line: 1011, column: 4, scope: !4922)
!4934 = !DILocation(line: 1011, column: 12, scope: !4922)
!4935 = !DILocation(line: 1012, column: 22, scope: !4922)
!4936 = !DILocation(line: 1012, column: 21, scope: !4922)
!4937 = !DILocation(line: 1012, column: 31, scope: !4922)
!4938 = !DILocation(line: 1012, column: 14, scope: !4922)
!4939 = !DILocation(line: 1012, column: 4, scope: !4922)
!4940 = !DILocation(line: 1012, column: 12, scope: !4922)
!4941 = !DILocation(line: 1013, column: 2, scope: !4922)
!4942 = !DILocation(line: 1014, column: 11, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1014, column: 11)
!4944 = !DILocation(line: 1014, column: 18, scope: !4943)
!4945 = !DILocation(line: 1014, column: 11, scope: !4918)
!4946 = !DILocation(line: 1015, column: 11, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 1014, column: 28)
!4948 = !DILocation(line: 1016, column: 11, scope: !4947)
!4949 = !DILocation(line: 1018, column: 3, scope: !4947)
!4950 = !DILocation(line: 1018, column: 10, scope: !4947)
!4951 = !DILocation(line: 1018, column: 19, scope: !4947)
!4952 = !DILocation(line: 1018, column: 24, scope: !4947)
!4953 = !DILocation(line: 1018, column: 50, scope: !4947)
!4954 = !DILocation(line: 1018, column: 59, scope: !4947)
!4955 = !DILocation(line: 1020, column: 22, scope: !4947)
!4956 = !DILocation(line: 1020, column: 21, scope: !4947)
!4957 = !DILocation(line: 1020, column: 31, scope: !4947)
!4958 = !DILocation(line: 1020, column: 14, scope: !4947)
!4959 = !DILocation(line: 1020, column: 4, scope: !4947)
!4960 = !DILocation(line: 1020, column: 12, scope: !4947)
!4961 = !DILocation(line: 1021, column: 22, scope: !4947)
!4962 = !DILocation(line: 1021, column: 21, scope: !4947)
!4963 = !DILocation(line: 1021, column: 31, scope: !4947)
!4964 = !DILocation(line: 1021, column: 14, scope: !4947)
!4965 = !DILocation(line: 1021, column: 4, scope: !4947)
!4966 = !DILocation(line: 1021, column: 12, scope: !4947)
!4967 = !DILocation(line: 1022, column: 2, scope: !4947)
!4968 = !DILocation(line: 1024, column: 10, scope: !4848)
!4969 = !DILocation(line: 1024, column: 17, scope: !4848)
!4970 = !DILocation(line: 1024, column: 3, scope: !4848)
!4971 = !DILocation(line: 1024, column: 8, scope: !4848)
!4972 = !DILocation(line: 1025, column: 1, scope: !4848)
!4973 = distinct !DISubprogram(name: "max_ii", scope: !4974, file: !4974, line: 215, type: !4975, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4974 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!48, !48, !48}
!4977 = !DILocalVariable(name: "a", arg: 1, scope: !4973, file: !4974, line: 215, type: !48)
!4978 = !DILocation(line: 215, column: 24, scope: !4973)
!4979 = !DILocalVariable(name: "b", arg: 2, scope: !4973, file: !4974, line: 215, type: !48)
!4980 = !DILocation(line: 215, column: 31, scope: !4973)
!4981 = !DILocation(line: 217, column: 10, scope: !4973)
!4982 = !DILocation(line: 217, column: 14, scope: !4973)
!4983 = !DILocation(line: 217, column: 12, scope: !4973)
!4984 = !DILocation(line: 217, column: 9, scope: !4973)
!4985 = !DILocation(line: 217, column: 19, scope: !4973)
!4986 = !DILocation(line: 217, column: 23, scope: !4973)
!4987 = !DILocation(line: 217, column: 2, scope: !4973)
!4988 = distinct !DISubprogram(name: "min_ii", scope: !4974, file: !4974, line: 211, type: !4975, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!4989 = !DILocalVariable(name: "a", arg: 1, scope: !4988, file: !4974, line: 211, type: !48)
!4990 = !DILocation(line: 211, column: 24, scope: !4988)
!4991 = !DILocalVariable(name: "b", arg: 2, scope: !4988, file: !4974, line: 211, type: !48)
!4992 = !DILocation(line: 211, column: 31, scope: !4988)
!4993 = !DILocation(line: 213, column: 10, scope: !4988)
!4994 = !DILocation(line: 213, column: 14, scope: !4988)
!4995 = !DILocation(line: 213, column: 12, scope: !4988)
!4996 = !DILocation(line: 213, column: 9, scope: !4988)
!4997 = !DILocation(line: 213, column: 19, scope: !4988)
!4998 = !DILocation(line: 213, column: 23, scope: !4988)
!4999 = !DILocation(line: 213, column: 2, scope: !4988)
!5000 = distinct !DISubprogram(name: "RNA_property_float_range", scope: !3, file: !3, line: 1027, type: !5001, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{null, !1349, !1021, !2540, !2540}
!5003 = !DILocalVariable(name: "ptr", arg: 1, scope: !5000, file: !3, line: 1027, type: !1349)
!5004 = !DILocation(line: 1027, column: 43, scope: !5000)
!5005 = !DILocalVariable(name: "prop", arg: 2, scope: !5000, file: !3, line: 1027, type: !1021)
!5006 = !DILocation(line: 1027, column: 61, scope: !5000)
!5007 = !DILocalVariable(name: "hardmin", arg: 3, scope: !5000, file: !3, line: 1027, type: !2540)
!5008 = !DILocation(line: 1027, column: 74, scope: !5000)
!5009 = !DILocalVariable(name: "hardmax", arg: 4, scope: !5000, file: !3, line: 1027, type: !2540)
!5010 = !DILocation(line: 1027, column: 90, scope: !5000)
!5011 = !DILocalVariable(name: "fprop", scope: !5000, file: !3, line: 1029, type: !2520)
!5012 = !DILocation(line: 1029, column: 20, scope: !5000)
!5013 = !DILocation(line: 1029, column: 68, scope: !5000)
!5014 = !DILocation(line: 1029, column: 48, scope: !5000)
!5015 = !DILocation(line: 1029, column: 28, scope: !5000)
!5016 = !DILocalVariable(name: "softmin", scope: !5000, file: !3, line: 1030, type: !1285)
!5017 = !DILocation(line: 1030, column: 8, scope: !5000)
!5018 = !DILocalVariable(name: "softmax", scope: !5000, file: !3, line: 1030, type: !1285)
!5019 = !DILocation(line: 1030, column: 17, scope: !5000)
!5020 = !DILocation(line: 1032, column: 6, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 1032, column: 6)
!5022 = !DILocation(line: 1032, column: 12, scope: !5021)
!5023 = !DILocation(line: 1032, column: 18, scope: !5021)
!5024 = !DILocation(line: 1032, column: 6, scope: !5000)
!5025 = !DILocalVariable(name: "idp_ui", scope: !5026, file: !3, line: 1034, type: !987)
!5026 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 1032, column: 32)
!5027 = !DILocation(line: 1034, column: 15, scope: !5026)
!5028 = !DILocation(line: 1034, column: 42, scope: !5026)
!5029 = !DILocation(line: 1034, column: 24, scope: !5026)
!5030 = !DILocation(line: 1036, column: 7, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 1036, column: 7)
!5032 = !DILocation(line: 1036, column: 7, scope: !5026)
!5033 = !DILocalVariable(name: "item", scope: !5034, file: !3, line: 1037, type: !987)
!5034 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 1036, column: 15)
!5035 = !DILocation(line: 1037, column: 16, scope: !5034)
!5036 = !DILocation(line: 1039, column: 40, scope: !5034)
!5037 = !DILocation(line: 1039, column: 11, scope: !5034)
!5038 = !DILocation(line: 1039, column: 9, scope: !5034)
!5039 = !DILocation(line: 1040, column: 15, scope: !5034)
!5040 = !DILocation(line: 1040, column: 29, scope: !5034)
!5041 = !DILocation(line: 1040, column: 22, scope: !5034)
!5042 = !DILocation(line: 1040, column: 5, scope: !5034)
!5043 = !DILocation(line: 1040, column: 13, scope: !5034)
!5044 = !DILocation(line: 1042, column: 40, scope: !5034)
!5045 = !DILocation(line: 1042, column: 11, scope: !5034)
!5046 = !DILocation(line: 1042, column: 9, scope: !5034)
!5047 = !DILocation(line: 1043, column: 15, scope: !5034)
!5048 = !DILocation(line: 1043, column: 29, scope: !5034)
!5049 = !DILocation(line: 1043, column: 22, scope: !5034)
!5050 = !DILocation(line: 1043, column: 5, scope: !5034)
!5051 = !DILocation(line: 1043, column: 13, scope: !5034)
!5052 = !DILocation(line: 1045, column: 4, scope: !5034)
!5053 = !DILocation(line: 1047, column: 2, scope: !5026)
!5054 = !DILocation(line: 1049, column: 6, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 1049, column: 6)
!5056 = !DILocation(line: 1049, column: 13, scope: !5055)
!5057 = !DILocation(line: 1049, column: 6, scope: !5000)
!5058 = !DILocation(line: 1050, column: 4, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 1049, column: 20)
!5060 = !DILocation(line: 1050, column: 12, scope: !5059)
!5061 = !DILocation(line: 1051, column: 4, scope: !5059)
!5062 = !DILocation(line: 1051, column: 12, scope: !5059)
!5063 = !DILocation(line: 1053, column: 3, scope: !5059)
!5064 = !DILocation(line: 1053, column: 10, scope: !5059)
!5065 = !DILocation(line: 1053, column: 16, scope: !5059)
!5066 = !DILocation(line: 1053, column: 21, scope: !5059)
!5067 = !DILocation(line: 1053, column: 30, scope: !5059)
!5068 = !DILocation(line: 1054, column: 2, scope: !5059)
!5069 = !DILocation(line: 1055, column: 11, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 1055, column: 11)
!5071 = !DILocation(line: 1055, column: 18, scope: !5070)
!5072 = !DILocation(line: 1055, column: 11, scope: !5055)
!5073 = !DILocation(line: 1056, column: 4, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 1055, column: 28)
!5075 = !DILocation(line: 1056, column: 12, scope: !5074)
!5076 = !DILocation(line: 1057, column: 4, scope: !5074)
!5077 = !DILocation(line: 1057, column: 12, scope: !5074)
!5078 = !DILocation(line: 1059, column: 3, scope: !5074)
!5079 = !DILocation(line: 1059, column: 10, scope: !5074)
!5080 = !DILocation(line: 1059, column: 19, scope: !5074)
!5081 = !DILocation(line: 1059, column: 24, scope: !5074)
!5082 = !DILocation(line: 1059, column: 30, scope: !5074)
!5083 = !DILocation(line: 1059, column: 39, scope: !5074)
!5084 = !DILocation(line: 1060, column: 2, scope: !5074)
!5085 = !DILocation(line: 1062, column: 14, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 1061, column: 7)
!5087 = !DILocation(line: 1062, column: 21, scope: !5086)
!5088 = !DILocation(line: 1062, column: 4, scope: !5086)
!5089 = !DILocation(line: 1062, column: 12, scope: !5086)
!5090 = !DILocation(line: 1063, column: 14, scope: !5086)
!5091 = !DILocation(line: 1063, column: 21, scope: !5086)
!5092 = !DILocation(line: 1063, column: 4, scope: !5086)
!5093 = !DILocation(line: 1063, column: 12, scope: !5086)
!5094 = !DILocation(line: 1065, column: 1, scope: !5000)
!5095 = distinct !DISubprogram(name: "RNA_property_float_ui_range", scope: !3, file: !3, line: 1067, type: !5096, scopeLine: 1069, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5096 = !DISubroutineType(types: !5097)
!5097 = !{null, !1349, !1021, !2540, !2540, !2540, !2540}
!5098 = !DILocalVariable(name: "ptr", arg: 1, scope: !5095, file: !3, line: 1067, type: !1349)
!5099 = !DILocation(line: 1067, column: 46, scope: !5095)
!5100 = !DILocalVariable(name: "prop", arg: 2, scope: !5095, file: !3, line: 1067, type: !1021)
!5101 = !DILocation(line: 1067, column: 64, scope: !5095)
!5102 = !DILocalVariable(name: "softmin", arg: 3, scope: !5095, file: !3, line: 1067, type: !2540)
!5103 = !DILocation(line: 1067, column: 77, scope: !5095)
!5104 = !DILocalVariable(name: "softmax", arg: 4, scope: !5095, file: !3, line: 1067, type: !2540)
!5105 = !DILocation(line: 1067, column: 93, scope: !5095)
!5106 = !DILocalVariable(name: "step", arg: 5, scope: !5095, file: !3, line: 1068, type: !2540)
!5107 = !DILocation(line: 1068, column: 41, scope: !5095)
!5108 = !DILocalVariable(name: "precision", arg: 6, scope: !5095, file: !3, line: 1068, type: !2540)
!5109 = !DILocation(line: 1068, column: 54, scope: !5095)
!5110 = !DILocalVariable(name: "fprop", scope: !5095, file: !3, line: 1070, type: !2520)
!5111 = !DILocation(line: 1070, column: 20, scope: !5095)
!5112 = !DILocation(line: 1070, column: 68, scope: !5095)
!5113 = !DILocation(line: 1070, column: 48, scope: !5095)
!5114 = !DILocation(line: 1070, column: 28, scope: !5095)
!5115 = !DILocalVariable(name: "hardmin", scope: !5095, file: !3, line: 1071, type: !1285)
!5116 = !DILocation(line: 1071, column: 8, scope: !5095)
!5117 = !DILocalVariable(name: "hardmax", scope: !5095, file: !3, line: 1071, type: !1285)
!5118 = !DILocation(line: 1071, column: 17, scope: !5095)
!5119 = !DILocation(line: 1073, column: 6, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 1073, column: 6)
!5121 = !DILocation(line: 1073, column: 12, scope: !5120)
!5122 = !DILocation(line: 1073, column: 18, scope: !5120)
!5123 = !DILocation(line: 1073, column: 6, scope: !5095)
!5124 = !DILocalVariable(name: "idp_ui", scope: !5125, file: !3, line: 1075, type: !987)
!5125 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 1073, column: 32)
!5126 = !DILocation(line: 1075, column: 15, scope: !5125)
!5127 = !DILocation(line: 1075, column: 42, scope: !5125)
!5128 = !DILocation(line: 1075, column: 24, scope: !5125)
!5129 = !DILocation(line: 1077, column: 7, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 1077, column: 7)
!5131 = !DILocation(line: 1077, column: 7, scope: !5125)
!5132 = !DILocalVariable(name: "item", scope: !5133, file: !3, line: 1078, type: !987)
!5133 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 1077, column: 15)
!5134 = !DILocation(line: 1078, column: 16, scope: !5133)
!5135 = !DILocation(line: 1080, column: 40, scope: !5133)
!5136 = !DILocation(line: 1080, column: 11, scope: !5133)
!5137 = !DILocation(line: 1080, column: 9, scope: !5133)
!5138 = !DILocation(line: 1081, column: 15, scope: !5133)
!5139 = !DILocation(line: 1081, column: 29, scope: !5133)
!5140 = !DILocation(line: 1081, column: 22, scope: !5133)
!5141 = !DILocation(line: 1081, column: 5, scope: !5133)
!5142 = !DILocation(line: 1081, column: 13, scope: !5133)
!5143 = !DILocation(line: 1083, column: 40, scope: !5133)
!5144 = !DILocation(line: 1083, column: 11, scope: !5133)
!5145 = !DILocation(line: 1083, column: 9, scope: !5133)
!5146 = !DILocation(line: 1084, column: 15, scope: !5133)
!5147 = !DILocation(line: 1084, column: 29, scope: !5133)
!5148 = !DILocation(line: 1084, column: 22, scope: !5133)
!5149 = !DILocation(line: 1084, column: 5, scope: !5133)
!5150 = !DILocation(line: 1084, column: 13, scope: !5133)
!5151 = !DILocation(line: 1086, column: 40, scope: !5133)
!5152 = !DILocation(line: 1086, column: 11, scope: !5133)
!5153 = !DILocation(line: 1086, column: 9, scope: !5133)
!5154 = !DILocation(line: 1087, column: 12, scope: !5133)
!5155 = !DILocation(line: 1087, column: 26, scope: !5133)
!5156 = !DILocation(line: 1087, column: 19, scope: !5133)
!5157 = !DILocation(line: 1087, column: 5, scope: !5133)
!5158 = !DILocation(line: 1087, column: 10, scope: !5133)
!5159 = !DILocation(line: 1089, column: 40, scope: !5133)
!5160 = !DILocation(line: 1089, column: 11, scope: !5133)
!5161 = !DILocation(line: 1089, column: 9, scope: !5133)
!5162 = !DILocation(line: 1090, column: 17, scope: !5133)
!5163 = !DILocation(line: 1090, column: 31, scope: !5133)
!5164 = !DILocation(line: 1090, column: 24, scope: !5133)
!5165 = !DILocation(line: 1090, column: 5, scope: !5133)
!5166 = !DILocation(line: 1090, column: 15, scope: !5133)
!5167 = !DILocation(line: 1092, column: 4, scope: !5133)
!5168 = !DILocation(line: 1094, column: 2, scope: !5125)
!5169 = !DILocation(line: 1096, column: 13, scope: !5095)
!5170 = !DILocation(line: 1096, column: 20, scope: !5095)
!5171 = !DILocation(line: 1096, column: 3, scope: !5095)
!5172 = !DILocation(line: 1096, column: 11, scope: !5095)
!5173 = !DILocation(line: 1097, column: 13, scope: !5095)
!5174 = !DILocation(line: 1097, column: 20, scope: !5095)
!5175 = !DILocation(line: 1097, column: 3, scope: !5095)
!5176 = !DILocation(line: 1097, column: 11, scope: !5095)
!5177 = !DILocation(line: 1099, column: 6, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 1099, column: 6)
!5179 = !DILocation(line: 1099, column: 13, scope: !5178)
!5180 = !DILocation(line: 1099, column: 6, scope: !5095)
!5181 = !DILocation(line: 1100, column: 11, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 1099, column: 20)
!5183 = !DILocation(line: 1101, column: 11, scope: !5182)
!5184 = !DILocation(line: 1103, column: 3, scope: !5182)
!5185 = !DILocation(line: 1103, column: 10, scope: !5182)
!5186 = !DILocation(line: 1103, column: 16, scope: !5182)
!5187 = !DILocation(line: 1103, column: 41, scope: !5182)
!5188 = !DILocation(line: 1103, column: 50, scope: !5182)
!5189 = !DILocation(line: 1105, column: 22, scope: !5182)
!5190 = !DILocation(line: 1105, column: 21, scope: !5182)
!5191 = !DILocation(line: 1105, column: 31, scope: !5182)
!5192 = !DILocation(line: 1105, column: 14, scope: !5182)
!5193 = !DILocation(line: 1105, column: 4, scope: !5182)
!5194 = !DILocation(line: 1105, column: 12, scope: !5182)
!5195 = !DILocation(line: 1106, column: 22, scope: !5182)
!5196 = !DILocation(line: 1106, column: 21, scope: !5182)
!5197 = !DILocation(line: 1106, column: 31, scope: !5182)
!5198 = !DILocation(line: 1106, column: 14, scope: !5182)
!5199 = !DILocation(line: 1106, column: 4, scope: !5182)
!5200 = !DILocation(line: 1106, column: 12, scope: !5182)
!5201 = !DILocation(line: 1107, column: 2, scope: !5182)
!5202 = !DILocation(line: 1108, column: 11, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 1108, column: 11)
!5204 = !DILocation(line: 1108, column: 18, scope: !5203)
!5205 = !DILocation(line: 1108, column: 11, scope: !5178)
!5206 = !DILocation(line: 1109, column: 11, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 1108, column: 28)
!5208 = !DILocation(line: 1110, column: 11, scope: !5207)
!5209 = !DILocation(line: 1112, column: 3, scope: !5207)
!5210 = !DILocation(line: 1112, column: 10, scope: !5207)
!5211 = !DILocation(line: 1112, column: 19, scope: !5207)
!5212 = !DILocation(line: 1112, column: 24, scope: !5207)
!5213 = !DILocation(line: 1112, column: 50, scope: !5207)
!5214 = !DILocation(line: 1112, column: 59, scope: !5207)
!5215 = !DILocation(line: 1114, column: 22, scope: !5207)
!5216 = !DILocation(line: 1114, column: 21, scope: !5207)
!5217 = !DILocation(line: 1114, column: 31, scope: !5207)
!5218 = !DILocation(line: 1114, column: 14, scope: !5207)
!5219 = !DILocation(line: 1114, column: 4, scope: !5207)
!5220 = !DILocation(line: 1114, column: 12, scope: !5207)
!5221 = !DILocation(line: 1115, column: 22, scope: !5207)
!5222 = !DILocation(line: 1115, column: 21, scope: !5207)
!5223 = !DILocation(line: 1115, column: 31, scope: !5207)
!5224 = !DILocation(line: 1115, column: 14, scope: !5207)
!5225 = !DILocation(line: 1115, column: 4, scope: !5207)
!5226 = !DILocation(line: 1115, column: 12, scope: !5207)
!5227 = !DILocation(line: 1116, column: 2, scope: !5207)
!5228 = !DILocation(line: 1118, column: 10, scope: !5095)
!5229 = !DILocation(line: 1118, column: 17, scope: !5095)
!5230 = !DILocation(line: 1118, column: 3, scope: !5095)
!5231 = !DILocation(line: 1118, column: 8, scope: !5095)
!5232 = !DILocation(line: 1119, column: 22, scope: !5095)
!5233 = !DILocation(line: 1119, column: 29, scope: !5095)
!5234 = !DILocation(line: 1119, column: 15, scope: !5095)
!5235 = !DILocation(line: 1119, column: 3, scope: !5095)
!5236 = !DILocation(line: 1119, column: 13, scope: !5095)
!5237 = !DILocation(line: 1120, column: 1, scope: !5095)
!5238 = distinct !DISubprogram(name: "max_ff", scope: !4974, file: !4974, line: 206, type: !5239, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!1285, !1285, !1285}
!5241 = !DILocalVariable(name: "a", arg: 1, scope: !5238, file: !4974, line: 206, type: !1285)
!5242 = !DILocation(line: 206, column: 28, scope: !5238)
!5243 = !DILocalVariable(name: "b", arg: 2, scope: !5238, file: !4974, line: 206, type: !1285)
!5244 = !DILocation(line: 206, column: 37, scope: !5238)
!5245 = !DILocation(line: 208, column: 10, scope: !5238)
!5246 = !DILocation(line: 208, column: 14, scope: !5238)
!5247 = !DILocation(line: 208, column: 12, scope: !5238)
!5248 = !DILocation(line: 208, column: 9, scope: !5238)
!5249 = !DILocation(line: 208, column: 19, scope: !5238)
!5250 = !DILocation(line: 208, column: 23, scope: !5238)
!5251 = !DILocation(line: 208, column: 2, scope: !5238)
!5252 = distinct !DISubprogram(name: "min_ff", scope: !4974, file: !4974, line: 202, type: !5239, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5253 = !DILocalVariable(name: "a", arg: 1, scope: !5252, file: !4974, line: 202, type: !1285)
!5254 = !DILocation(line: 202, column: 28, scope: !5252)
!5255 = !DILocalVariable(name: "b", arg: 2, scope: !5252, file: !4974, line: 202, type: !1285)
!5256 = !DILocation(line: 202, column: 37, scope: !5252)
!5257 = !DILocation(line: 204, column: 10, scope: !5252)
!5258 = !DILocation(line: 204, column: 14, scope: !5252)
!5259 = !DILocation(line: 204, column: 12, scope: !5252)
!5260 = !DILocation(line: 204, column: 9, scope: !5252)
!5261 = !DILocation(line: 204, column: 19, scope: !5252)
!5262 = !DILocation(line: 204, column: 23, scope: !5252)
!5263 = !DILocation(line: 204, column: 2, scope: !5252)
!5264 = distinct !DISubprogram(name: "RNA_property_float_clamp", scope: !3, file: !3, line: 1122, type: !5265, scopeLine: 1123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{!48, !1349, !1021, !2540}
!5267 = !DILocalVariable(name: "ptr", arg: 1, scope: !5264, file: !3, line: 1122, type: !1349)
!5268 = !DILocation(line: 1122, column: 42, scope: !5264)
!5269 = !DILocalVariable(name: "prop", arg: 2, scope: !5264, file: !3, line: 1122, type: !1021)
!5270 = !DILocation(line: 1122, column: 60, scope: !5264)
!5271 = !DILocalVariable(name: "value", arg: 3, scope: !5264, file: !3, line: 1122, type: !2540)
!5272 = !DILocation(line: 1122, column: 73, scope: !5264)
!5273 = !DILocalVariable(name: "min", scope: !5264, file: !3, line: 1124, type: !1285)
!5274 = !DILocation(line: 1124, column: 8, scope: !5264)
!5275 = !DILocalVariable(name: "max", scope: !5264, file: !3, line: 1124, type: !1285)
!5276 = !DILocation(line: 1124, column: 13, scope: !5264)
!5277 = !DILocation(line: 1126, column: 27, scope: !5264)
!5278 = !DILocation(line: 1126, column: 32, scope: !5264)
!5279 = !DILocation(line: 1126, column: 2, scope: !5264)
!5280 = !DILocation(line: 1128, column: 7, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 1128, column: 6)
!5282 = !DILocation(line: 1128, column: 6, scope: !5281)
!5283 = !DILocation(line: 1128, column: 15, scope: !5281)
!5284 = !DILocation(line: 1128, column: 13, scope: !5281)
!5285 = !DILocation(line: 1128, column: 6, scope: !5264)
!5286 = !DILocation(line: 1129, column: 12, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1128, column: 20)
!5288 = !DILocation(line: 1129, column: 4, scope: !5287)
!5289 = !DILocation(line: 1129, column: 10, scope: !5287)
!5290 = !DILocation(line: 1130, column: 3, scope: !5287)
!5291 = !DILocation(line: 1132, column: 12, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1132, column: 11)
!5293 = !DILocation(line: 1132, column: 11, scope: !5292)
!5294 = !DILocation(line: 1132, column: 20, scope: !5292)
!5295 = !DILocation(line: 1132, column: 18, scope: !5292)
!5296 = !DILocation(line: 1132, column: 11, scope: !5281)
!5297 = !DILocation(line: 1133, column: 12, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 1132, column: 25)
!5299 = !DILocation(line: 1133, column: 4, scope: !5298)
!5300 = !DILocation(line: 1133, column: 10, scope: !5298)
!5301 = !DILocation(line: 1134, column: 3, scope: !5298)
!5302 = !DILocation(line: 1137, column: 3, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 1136, column: 7)
!5304 = !DILocation(line: 1139, column: 1, scope: !5264)
!5305 = distinct !DISubprogram(name: "RNA_property_int_clamp", scope: !3, file: !3, line: 1141, type: !4496, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5306 = !DILocalVariable(name: "ptr", arg: 1, scope: !5305, file: !3, line: 1141, type: !1349)
!5307 = !DILocation(line: 1141, column: 40, scope: !5305)
!5308 = !DILocalVariable(name: "prop", arg: 2, scope: !5305, file: !3, line: 1141, type: !1021)
!5309 = !DILocation(line: 1141, column: 58, scope: !5305)
!5310 = !DILocalVariable(name: "value", arg: 3, scope: !5305, file: !3, line: 1141, type: !1330)
!5311 = !DILocation(line: 1141, column: 69, scope: !5305)
!5312 = !DILocalVariable(name: "min", scope: !5305, file: !3, line: 1143, type: !48)
!5313 = !DILocation(line: 1143, column: 6, scope: !5305)
!5314 = !DILocalVariable(name: "max", scope: !5305, file: !3, line: 1143, type: !48)
!5315 = !DILocation(line: 1143, column: 11, scope: !5305)
!5316 = !DILocation(line: 1145, column: 25, scope: !5305)
!5317 = !DILocation(line: 1145, column: 30, scope: !5305)
!5318 = !DILocation(line: 1145, column: 2, scope: !5305)
!5319 = !DILocation(line: 1147, column: 7, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 1147, column: 6)
!5321 = !DILocation(line: 1147, column: 6, scope: !5320)
!5322 = !DILocation(line: 1147, column: 15, scope: !5320)
!5323 = !DILocation(line: 1147, column: 13, scope: !5320)
!5324 = !DILocation(line: 1147, column: 6, scope: !5305)
!5325 = !DILocation(line: 1148, column: 12, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1147, column: 20)
!5327 = !DILocation(line: 1148, column: 4, scope: !5326)
!5328 = !DILocation(line: 1148, column: 10, scope: !5326)
!5329 = !DILocation(line: 1149, column: 3, scope: !5326)
!5330 = !DILocation(line: 1151, column: 12, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1151, column: 11)
!5332 = !DILocation(line: 1151, column: 11, scope: !5331)
!5333 = !DILocation(line: 1151, column: 20, scope: !5331)
!5334 = !DILocation(line: 1151, column: 18, scope: !5331)
!5335 = !DILocation(line: 1151, column: 11, scope: !5320)
!5336 = !DILocation(line: 1152, column: 12, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1151, column: 25)
!5338 = !DILocation(line: 1152, column: 4, scope: !5337)
!5339 = !DILocation(line: 1152, column: 10, scope: !5337)
!5340 = !DILocation(line: 1153, column: 3, scope: !5337)
!5341 = !DILocation(line: 1156, column: 3, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1155, column: 7)
!5343 = !DILocation(line: 1158, column: 1, scope: !5305)
!5344 = distinct !DISubprogram(name: "RNA_property_string_maxlength", scope: !3, file: !3, line: 1162, type: !4392, scopeLine: 1163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5345 = !DILocalVariable(name: "prop", arg: 1, scope: !5344, file: !3, line: 1162, type: !1021)
!5346 = !DILocation(line: 1162, column: 48, scope: !5344)
!5347 = !DILocalVariable(name: "sprop", scope: !5344, file: !3, line: 1164, type: !2587)
!5348 = !DILocation(line: 1164, column: 21, scope: !5344)
!5349 = !DILocation(line: 1164, column: 70, scope: !5344)
!5350 = !DILocation(line: 1164, column: 50, scope: !5344)
!5351 = !DILocation(line: 1164, column: 29, scope: !5344)
!5352 = !DILocation(line: 1165, column: 9, scope: !5344)
!5353 = !DILocation(line: 1165, column: 16, scope: !5344)
!5354 = !DILocation(line: 1165, column: 2, scope: !5344)
!5355 = distinct !DISubprogram(name: "RNA_property_pointer_type", scope: !3, file: !3, line: 1168, type: !5356, scopeLine: 1169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{!2639, !1349, !1021}
!5358 = !DILocalVariable(name: "ptr", arg: 1, scope: !5355, file: !3, line: 1168, type: !1349)
!5359 = !DILocation(line: 1168, column: 50, scope: !5355)
!5360 = !DILocalVariable(name: "prop", arg: 2, scope: !5355, file: !3, line: 1168, type: !1021)
!5361 = !DILocation(line: 1168, column: 68, scope: !5355)
!5362 = !DILocation(line: 1170, column: 29, scope: !5355)
!5363 = !DILocation(line: 1170, column: 9, scope: !5355)
!5364 = !DILocation(line: 1170, column: 7, scope: !5355)
!5365 = !DILocation(line: 1172, column: 6, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 1172, column: 6)
!5367 = !DILocation(line: 1172, column: 12, scope: !5366)
!5368 = !DILocation(line: 1172, column: 17, scope: !5366)
!5369 = !DILocation(line: 1172, column: 6, scope: !5355)
!5370 = !DILocalVariable(name: "pprop", scope: !5371, file: !3, line: 1173, type: !2618)
!5371 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1172, column: 34)
!5372 = !DILocation(line: 1173, column: 23, scope: !5371)
!5373 = !DILocation(line: 1173, column: 53, scope: !5371)
!5374 = !DILocation(line: 1173, column: 31, scope: !5371)
!5375 = !DILocation(line: 1175, column: 7, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1175, column: 7)
!5377 = !DILocation(line: 1175, column: 14, scope: !5376)
!5378 = !DILocation(line: 1175, column: 7, scope: !5371)
!5379 = !DILocation(line: 1176, column: 11, scope: !5376)
!5380 = !DILocation(line: 1176, column: 18, scope: !5376)
!5381 = !DILocation(line: 1176, column: 24, scope: !5376)
!5382 = !DILocation(line: 1176, column: 4, scope: !5376)
!5383 = !DILocation(line: 1177, column: 12, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 1177, column: 12)
!5385 = !DILocation(line: 1177, column: 19, scope: !5384)
!5386 = !DILocation(line: 1177, column: 12, scope: !5376)
!5387 = !DILocation(line: 1178, column: 11, scope: !5384)
!5388 = !DILocation(line: 1178, column: 18, scope: !5384)
!5389 = !DILocation(line: 1178, column: 4, scope: !5384)
!5390 = !DILocation(line: 1179, column: 2, scope: !5371)
!5391 = !DILocation(line: 1180, column: 11, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1180, column: 11)
!5393 = !DILocation(line: 1180, column: 17, scope: !5392)
!5394 = !DILocation(line: 1180, column: 22, scope: !5392)
!5395 = !DILocation(line: 1180, column: 11, scope: !5366)
!5396 = !DILocalVariable(name: "cprop", scope: !5397, file: !3, line: 1181, type: !2647)
!5397 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 1180, column: 42)
!5398 = !DILocation(line: 1181, column: 26, scope: !5397)
!5399 = !DILocation(line: 1181, column: 59, scope: !5397)
!5400 = !DILocation(line: 1181, column: 34, scope: !5397)
!5401 = !DILocation(line: 1183, column: 7, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 1183, column: 7)
!5403 = !DILocation(line: 1183, column: 14, scope: !5402)
!5404 = !DILocation(line: 1183, column: 7, scope: !5397)
!5405 = !DILocation(line: 1184, column: 11, scope: !5402)
!5406 = !DILocation(line: 1184, column: 18, scope: !5402)
!5407 = !DILocation(line: 1184, column: 4, scope: !5402)
!5408 = !DILocation(line: 1185, column: 2, scope: !5397)
!5409 = !DILocation(line: 1188, column: 2, scope: !5355)
!5410 = !DILocation(line: 1189, column: 1, scope: !5355)
!5411 = distinct !DISubprogram(name: "RNA_property_pointer_poll", scope: !3, file: !3, line: 1191, type: !5412, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{!48, !1349, !1021, !1349}
!5414 = !DILocalVariable(name: "ptr", arg: 1, scope: !5411, file: !3, line: 1191, type: !1349)
!5415 = !DILocation(line: 1191, column: 43, scope: !5411)
!5416 = !DILocalVariable(name: "prop", arg: 2, scope: !5411, file: !3, line: 1191, type: !1021)
!5417 = !DILocation(line: 1191, column: 61, scope: !5411)
!5418 = !DILocalVariable(name: "value", arg: 3, scope: !5411, file: !3, line: 1191, type: !1349)
!5419 = !DILocation(line: 1191, column: 79, scope: !5411)
!5420 = !DILocation(line: 1193, column: 29, scope: !5411)
!5421 = !DILocation(line: 1193, column: 9, scope: !5411)
!5422 = !DILocation(line: 1193, column: 7, scope: !5411)
!5423 = !DILocation(line: 1195, column: 6, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 1195, column: 6)
!5425 = !DILocation(line: 1195, column: 12, scope: !5424)
!5426 = !DILocation(line: 1195, column: 17, scope: !5424)
!5427 = !DILocation(line: 1195, column: 6, scope: !5411)
!5428 = !DILocalVariable(name: "pprop", scope: !5429, file: !3, line: 1196, type: !2618)
!5429 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 1195, column: 34)
!5430 = !DILocation(line: 1196, column: 23, scope: !5429)
!5431 = !DILocation(line: 1196, column: 53, scope: !5429)
!5432 = !DILocation(line: 1196, column: 31, scope: !5429)
!5433 = !DILocation(line: 1197, column: 7, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 1197, column: 7)
!5435 = !DILocation(line: 1197, column: 14, scope: !5434)
!5436 = !DILocation(line: 1197, column: 7, scope: !5429)
!5437 = !DILocation(line: 1198, column: 11, scope: !5434)
!5438 = !DILocation(line: 1198, column: 18, scope: !5434)
!5439 = !DILocation(line: 1198, column: 23, scope: !5434)
!5440 = !DILocation(line: 1198, column: 29, scope: !5434)
!5441 = !DILocation(line: 1198, column: 4, scope: !5434)
!5442 = !DILocation(line: 1200, column: 3, scope: !5429)
!5443 = !DILocation(line: 1203, column: 58, scope: !5411)
!5444 = !DILocation(line: 1203, column: 64, scope: !5411)
!5445 = !DILocation(line: 1203, column: 2, scope: !5411)
!5446 = !DILocation(line: 1204, column: 2, scope: !5411)
!5447 = !DILocation(line: 1205, column: 1, scope: !5411)
!5448 = distinct !DISubprogram(name: "RNA_property_enum_items", scope: !3, file: !3, line: 1218, type: !5449, scopeLine: 1220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{null, !5451, !1349, !1021, !5454, !1330, !2751}
!5451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5452, size: 64)
!5452 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !5453, line: 69, baseType: !1336)
!5453 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!5455 = !DILocalVariable(name: "C", arg: 1, scope: !5448, file: !3, line: 1218, type: !5451)
!5456 = !DILocation(line: 1218, column: 40, scope: !5448)
!5457 = !DILocalVariable(name: "ptr", arg: 2, scope: !5448, file: !3, line: 1218, type: !1349)
!5458 = !DILocation(line: 1218, column: 55, scope: !5448)
!5459 = !DILocalVariable(name: "prop", arg: 3, scope: !5448, file: !3, line: 1218, type: !1021)
!5460 = !DILocation(line: 1218, column: 73, scope: !5448)
!5461 = !DILocalVariable(name: "r_item", arg: 4, scope: !5448, file: !3, line: 1218, type: !5454)
!5462 = !DILocation(line: 1218, column: 98, scope: !5448)
!5463 = !DILocalVariable(name: "r_totitem", arg: 5, scope: !5448, file: !3, line: 1219, type: !1330)
!5464 = !DILocation(line: 1219, column: 35, scope: !5448)
!5465 = !DILocalVariable(name: "r_free", arg: 6, scope: !5448, file: !3, line: 1219, type: !2751)
!5466 = !DILocation(line: 1219, column: 52, scope: !5448)
!5467 = !DILocalVariable(name: "eprop", scope: !5448, file: !3, line: 1221, type: !2728)
!5468 = !DILocation(line: 1221, column: 19, scope: !5448)
!5469 = !DILocation(line: 1221, column: 66, scope: !5448)
!5470 = !DILocation(line: 1221, column: 46, scope: !5448)
!5471 = !DILocation(line: 1221, column: 27, scope: !5448)
!5472 = !DILocation(line: 1223, column: 3, scope: !5448)
!5473 = !DILocation(line: 1223, column: 10, scope: !5448)
!5474 = !DILocation(line: 1225, column: 6, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1225, column: 6)
!5476 = !DILocation(line: 1225, column: 13, scope: !5475)
!5477 = !DILocation(line: 1225, column: 19, scope: !5475)
!5478 = !DILocation(line: 1225, column: 23, scope: !5475)
!5479 = !DILocation(line: 1225, column: 25, scope: !5475)
!5480 = !DILocation(line: 1225, column: 33, scope: !5475)
!5481 = !DILocation(line: 1225, column: 37, scope: !5475)
!5482 = !DILocation(line: 1225, column: 43, scope: !5475)
!5483 = !DILocation(line: 1225, column: 48, scope: !5475)
!5484 = !DILocation(line: 1225, column: 6, scope: !5448)
!5485 = !DILocalVariable(name: "item", scope: !5486, file: !3, line: 1226, type: !2742)
!5486 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 1225, column: 74)
!5487 = !DILocation(line: 1226, column: 21, scope: !5486)
!5488 = !DILocation(line: 1228, column: 7, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1228, column: 7)
!5490 = !DILocation(line: 1228, column: 13, scope: !5489)
!5491 = !DILocation(line: 1228, column: 18, scope: !5489)
!5492 = !DILocation(line: 1228, column: 7, scope: !5486)
!5493 = !DILocation(line: 1229, column: 11, scope: !5489)
!5494 = !DILocation(line: 1229, column: 18, scope: !5489)
!5495 = !DILocation(line: 1229, column: 30, scope: !5489)
!5496 = !DILocation(line: 1229, column: 35, scope: !5489)
!5497 = !DILocation(line: 1229, column: 41, scope: !5489)
!5498 = !DILocation(line: 1229, column: 9, scope: !5489)
!5499 = !DILocation(line: 1229, column: 4, scope: !5489)
!5500 = !DILocation(line: 1231, column: 11, scope: !5489)
!5501 = !DILocation(line: 1231, column: 18, scope: !5489)
!5502 = !DILocation(line: 1231, column: 24, scope: !5489)
!5503 = !DILocation(line: 1231, column: 27, scope: !5489)
!5504 = !DILocation(line: 1231, column: 32, scope: !5489)
!5505 = !DILocation(line: 1231, column: 38, scope: !5489)
!5506 = !DILocation(line: 1231, column: 9, scope: !5489)
!5507 = !DILocation(line: 1236, column: 7, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1236, column: 7)
!5509 = !DILocation(line: 1236, column: 7, scope: !5486)
!5510 = !DILocalVariable(name: "tot", scope: !5511, file: !3, line: 1237, type: !48)
!5511 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 1236, column: 18)
!5512 = !DILocation(line: 1237, column: 8, scope: !5511)
!5513 = !DILocation(line: 1238, column: 13, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1238, column: 4)
!5515 = !DILocation(line: 1238, column: 9, scope: !5514)
!5516 = !DILocation(line: 1238, column: 18, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 1238, column: 4)
!5518 = !DILocation(line: 1238, column: 23, scope: !5517)
!5519 = !DILocation(line: 1238, column: 28, scope: !5517)
!5520 = !DILocation(line: 1238, column: 4, scope: !5514)
!5521 = !DILocation(line: 1240, column: 4, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 1238, column: 47)
!5523 = !DILocation(line: 1238, column: 43, scope: !5517)
!5524 = !DILocation(line: 1238, column: 4, scope: !5517)
!5525 = distinct !{!5525, !5520, !5526}
!5526 = !DILocation(line: 1240, column: 4, scope: !5514)
!5527 = !DILocation(line: 1241, column: 17, scope: !5511)
!5528 = !DILocation(line: 1241, column: 5, scope: !5511)
!5529 = !DILocation(line: 1241, column: 15, scope: !5511)
!5530 = !DILocation(line: 1242, column: 3, scope: !5511)
!5531 = !DILocation(line: 1244, column: 13, scope: !5486)
!5532 = !DILocation(line: 1244, column: 4, scope: !5486)
!5533 = !DILocation(line: 1244, column: 11, scope: !5486)
!5534 = !DILocation(line: 1245, column: 2, scope: !5486)
!5535 = !DILocation(line: 1247, column: 13, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 1246, column: 7)
!5537 = !DILocation(line: 1247, column: 20, scope: !5536)
!5538 = !DILocation(line: 1247, column: 4, scope: !5536)
!5539 = !DILocation(line: 1247, column: 11, scope: !5536)
!5540 = !DILocation(line: 1248, column: 7, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 1248, column: 7)
!5542 = !DILocation(line: 1248, column: 7, scope: !5536)
!5543 = !DILocation(line: 1249, column: 17, scope: !5541)
!5544 = !DILocation(line: 1249, column: 24, scope: !5541)
!5545 = !DILocation(line: 1249, column: 5, scope: !5541)
!5546 = !DILocation(line: 1249, column: 15, scope: !5541)
!5547 = !DILocation(line: 1249, column: 4, scope: !5541)
!5548 = !DILocation(line: 1251, column: 1, scope: !5448)
!5549 = distinct !DISubprogram(name: "RNA_property_enum_items_gettexted", scope: !3, file: !3, line: 1304, type: !5449, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5550 = !DILocalVariable(name: "C", arg: 1, scope: !5549, file: !3, line: 1304, type: !5451)
!5551 = !DILocation(line: 1304, column: 50, scope: !5549)
!5552 = !DILocalVariable(name: "ptr", arg: 2, scope: !5549, file: !3, line: 1304, type: !1349)
!5553 = !DILocation(line: 1304, column: 65, scope: !5549)
!5554 = !DILocalVariable(name: "prop", arg: 3, scope: !5549, file: !3, line: 1304, type: !1021)
!5555 = !DILocation(line: 1304, column: 83, scope: !5549)
!5556 = !DILocalVariable(name: "r_item", arg: 4, scope: !5549, file: !3, line: 1305, type: !5454)
!5557 = !DILocation(line: 1305, column: 59, scope: !5549)
!5558 = !DILocalVariable(name: "r_totitem", arg: 5, scope: !5549, file: !3, line: 1305, type: !1330)
!5559 = !DILocation(line: 1305, column: 72, scope: !5549)
!5560 = !DILocalVariable(name: "r_free", arg: 6, scope: !5549, file: !3, line: 1305, type: !2751)
!5561 = !DILocation(line: 1305, column: 89, scope: !5549)
!5562 = !DILocation(line: 1307, column: 26, scope: !5549)
!5563 = !DILocation(line: 1307, column: 29, scope: !5549)
!5564 = !DILocation(line: 1307, column: 34, scope: !5549)
!5565 = !DILocation(line: 1307, column: 40, scope: !5549)
!5566 = !DILocation(line: 1307, column: 48, scope: !5549)
!5567 = !DILocation(line: 1307, column: 59, scope: !5549)
!5568 = !DILocation(line: 1307, column: 2, scope: !5549)
!5569 = !DILocation(line: 1312, column: 1, scope: !5549)
!5570 = distinct !DISubprogram(name: "RNA_property_enum_items_gettexted_all", scope: !3, file: !3, line: 1314, type: !5449, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5571 = !DILocalVariable(name: "C", arg: 1, scope: !5570, file: !3, line: 1314, type: !5451)
!5572 = !DILocation(line: 1314, column: 54, scope: !5570)
!5573 = !DILocalVariable(name: "ptr", arg: 2, scope: !5570, file: !3, line: 1314, type: !1349)
!5574 = !DILocation(line: 1314, column: 69, scope: !5570)
!5575 = !DILocalVariable(name: "prop", arg: 3, scope: !5570, file: !3, line: 1314, type: !1021)
!5576 = !DILocation(line: 1314, column: 87, scope: !5570)
!5577 = !DILocalVariable(name: "r_item", arg: 4, scope: !5570, file: !3, line: 1315, type: !5454)
!5578 = !DILocation(line: 1315, column: 59, scope: !5570)
!5579 = !DILocalVariable(name: "r_totitem", arg: 5, scope: !5570, file: !3, line: 1315, type: !1330)
!5580 = !DILocation(line: 1315, column: 72, scope: !5570)
!5581 = !DILocalVariable(name: "r_free", arg: 6, scope: !5570, file: !3, line: 1315, type: !2751)
!5582 = !DILocation(line: 1315, column: 89, scope: !5570)
!5583 = !DILocalVariable(name: "eprop", scope: !5570, file: !3, line: 1317, type: !2728)
!5584 = !DILocation(line: 1317, column: 19, scope: !5570)
!5585 = !DILocation(line: 1317, column: 66, scope: !5570)
!5586 = !DILocation(line: 1317, column: 46, scope: !5570)
!5587 = !DILocation(line: 1317, column: 27, scope: !5570)
!5588 = !DILocalVariable(name: "mem_size", scope: !5570, file: !3, line: 1318, type: !48)
!5589 = !DILocation(line: 1318, column: 6, scope: !5570)
!5590 = !DILocation(line: 1318, column: 45, scope: !5570)
!5591 = !DILocation(line: 1318, column: 52, scope: !5570)
!5592 = !DILocation(line: 1318, column: 60, scope: !5570)
!5593 = !DILocation(line: 1318, column: 44, scope: !5570)
!5594 = !DILocation(line: 1318, column: 42, scope: !5570)
!5595 = !DILocation(line: 1318, column: 17, scope: !5570)
!5596 = !DILocation(line: 1320, column: 3, scope: !5570)
!5597 = !DILocation(line: 1320, column: 10, scope: !5570)
!5598 = !DILocation(line: 1321, column: 12, scope: !5570)
!5599 = !DILocation(line: 1321, column: 24, scope: !5570)
!5600 = !DILocation(line: 1321, column: 3, scope: !5570)
!5601 = !DILocation(line: 1321, column: 10, scope: !5570)
!5602 = !DILocation(line: 1322, column: 11, scope: !5570)
!5603 = !DILocation(line: 1322, column: 10, scope: !5570)
!5604 = !DILocation(line: 1322, column: 3, scope: !5570)
!5605 = !DILocation(line: 1322, column: 19, scope: !5570)
!5606 = !DILocation(line: 1322, column: 26, scope: !5570)
!5607 = !DILocation(line: 1322, column: 32, scope: !5570)
!5608 = !DILocation(line: 1324, column: 6, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 1324, column: 6)
!5610 = !DILocation(line: 1324, column: 6, scope: !5570)
!5611 = !DILocation(line: 1325, column: 16, scope: !5609)
!5612 = !DILocation(line: 1325, column: 23, scope: !5609)
!5613 = !DILocation(line: 1325, column: 4, scope: !5609)
!5614 = !DILocation(line: 1325, column: 14, scope: !5609)
!5615 = !DILocation(line: 1325, column: 3, scope: !5609)
!5616 = !DILocation(line: 1327, column: 6, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 1327, column: 6)
!5618 = !DILocation(line: 1327, column: 13, scope: !5617)
!5619 = !DILocation(line: 1327, column: 19, scope: !5617)
!5620 = !DILocation(line: 1327, column: 23, scope: !5617)
!5621 = !DILocation(line: 1327, column: 25, scope: !5617)
!5622 = !DILocation(line: 1327, column: 33, scope: !5617)
!5623 = !DILocation(line: 1327, column: 37, scope: !5617)
!5624 = !DILocation(line: 1327, column: 43, scope: !5617)
!5625 = !DILocation(line: 1327, column: 48, scope: !5617)
!5626 = !DILocation(line: 1327, column: 6, scope: !5570)
!5627 = !DILocalVariable(name: "item", scope: !5628, file: !3, line: 1328, type: !2742)
!5628 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 1327, column: 74)
!5629 = !DILocation(line: 1328, column: 21, scope: !5628)
!5630 = !DILocalVariable(name: "i", scope: !5628, file: !3, line: 1329, type: !48)
!5631 = !DILocation(line: 1329, column: 7, scope: !5628)
!5632 = !DILocalVariable(name: "free", scope: !5628, file: !3, line: 1330, type: !1381)
!5633 = !DILocation(line: 1330, column: 8, scope: !5628)
!5634 = !DILocation(line: 1332, column: 7, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1332, column: 7)
!5636 = !DILocation(line: 1332, column: 13, scope: !5635)
!5637 = !DILocation(line: 1332, column: 18, scope: !5635)
!5638 = !DILocation(line: 1332, column: 7, scope: !5628)
!5639 = !DILocation(line: 1333, column: 11, scope: !5635)
!5640 = !DILocation(line: 1333, column: 18, scope: !5635)
!5641 = !DILocation(line: 1333, column: 30, scope: !5635)
!5642 = !DILocation(line: 1333, column: 35, scope: !5635)
!5643 = !DILocation(line: 1333, column: 9, scope: !5635)
!5644 = !DILocation(line: 1333, column: 4, scope: !5635)
!5645 = !DILocation(line: 1335, column: 11, scope: !5635)
!5646 = !DILocation(line: 1335, column: 18, scope: !5635)
!5647 = !DILocation(line: 1335, column: 24, scope: !5635)
!5648 = !DILocation(line: 1335, column: 27, scope: !5635)
!5649 = !DILocation(line: 1335, column: 32, scope: !5635)
!5650 = !DILocation(line: 1335, column: 9, scope: !5635)
!5651 = !DILocation(line: 1340, column: 10, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1340, column: 3)
!5653 = !DILocation(line: 1340, column: 8, scope: !5652)
!5654 = !DILocation(line: 1340, column: 15, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 1340, column: 3)
!5656 = !DILocation(line: 1340, column: 19, scope: !5655)
!5657 = !DILocation(line: 1340, column: 26, scope: !5655)
!5658 = !DILocation(line: 1340, column: 17, scope: !5655)
!5659 = !DILocation(line: 1340, column: 3, scope: !5652)
!5660 = !DILocalVariable(name: "exists", scope: !5661, file: !3, line: 1341, type: !1381)
!5661 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1340, column: 40)
!5662 = !DILocation(line: 1341, column: 9, scope: !5661)
!5663 = !DILocalVariable(name: "i_fixed", scope: !5661, file: !3, line: 1342, type: !48)
!5664 = !DILocation(line: 1342, column: 8, scope: !5661)
!5665 = !DILocation(line: 1345, column: 17, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 1345, column: 4)
!5667 = !DILocation(line: 1345, column: 9, scope: !5666)
!5668 = !DILocation(line: 1345, column: 22, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 1345, column: 4)
!5670 = !DILocation(line: 1345, column: 27, scope: !5669)
!5671 = !DILocation(line: 1345, column: 36, scope: !5669)
!5672 = !DILocation(line: 1345, column: 4, scope: !5666)
!5673 = !DILocation(line: 1346, column: 9, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 1346, column: 9)
!5675 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1345, column: 59)
!5676 = !DILocation(line: 1346, column: 9, scope: !5675)
!5677 = !DILocation(line: 1347, column: 13, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1346, column: 67)
!5679 = !DILocation(line: 1348, column: 6, scope: !5678)
!5680 = !DILocation(line: 1350, column: 4, scope: !5675)
!5681 = !DILocation(line: 1345, column: 55, scope: !5669)
!5682 = !DILocation(line: 1345, column: 4, scope: !5669)
!5683 = distinct !{!5683, !5672, !5684}
!5684 = !DILocation(line: 1350, column: 4, scope: !5666)
!5685 = !DILocation(line: 1352, column: 9, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 1352, column: 8)
!5687 = !DILocation(line: 1352, column: 8, scope: !5661)
!5688 = !DILocation(line: 1353, column: 7, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 1352, column: 17)
!5690 = !DILocation(line: 1353, column: 6, scope: !5689)
!5691 = !DILocation(line: 1353, column: 15, scope: !5689)
!5692 = !DILocation(line: 1353, column: 5, scope: !5689)
!5693 = !DILocation(line: 1353, column: 18, scope: !5689)
!5694 = !DILocation(line: 1353, column: 23, scope: !5689)
!5695 = !DILocation(line: 1354, column: 7, scope: !5689)
!5696 = !DILocation(line: 1354, column: 6, scope: !5689)
!5697 = !DILocation(line: 1354, column: 15, scope: !5689)
!5698 = !DILocation(line: 1354, column: 5, scope: !5689)
!5699 = !DILocation(line: 1354, column: 18, scope: !5689)
!5700 = !DILocation(line: 1354, column: 29, scope: !5689)
!5701 = !DILocation(line: 1355, column: 4, scope: !5689)
!5702 = !DILocation(line: 1356, column: 3, scope: !5661)
!5703 = !DILocation(line: 1340, column: 36, scope: !5655)
!5704 = !DILocation(line: 1340, column: 3, scope: !5655)
!5705 = distinct !{!5705, !5659, !5706}
!5706 = !DILocation(line: 1356, column: 3, scope: !5652)
!5707 = !DILocation(line: 1358, column: 7, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1358, column: 7)
!5709 = !DILocation(line: 1358, column: 7, scope: !5628)
!5710 = !DILocation(line: 1359, column: 4, scope: !5708)
!5711 = !DILocation(line: 1359, column: 14, scope: !5708)
!5712 = !DILocation(line: 1360, column: 2, scope: !5628)
!5713 = !DILocation(line: 1365, column: 1, scope: !5570)
!5714 = distinct !DISubprogram(name: "RNA_property_enum_value", scope: !3, file: !3, line: 1367, type: !5715, scopeLine: 1368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{!1381, !5451, !1349, !1021, !1031, !1330}
!5717 = !DILocalVariable(name: "C", arg: 1, scope: !5714, file: !3, line: 1367, type: !5451)
!5718 = !DILocation(line: 1367, column: 40, scope: !5714)
!5719 = !DILocalVariable(name: "ptr", arg: 2, scope: !5714, file: !3, line: 1367, type: !1349)
!5720 = !DILocation(line: 1367, column: 55, scope: !5714)
!5721 = !DILocalVariable(name: "prop", arg: 3, scope: !5714, file: !3, line: 1367, type: !1021)
!5722 = !DILocation(line: 1367, column: 73, scope: !5714)
!5723 = !DILocalVariable(name: "identifier", arg: 4, scope: !5714, file: !3, line: 1367, type: !1031)
!5724 = !DILocation(line: 1367, column: 91, scope: !5714)
!5725 = !DILocalVariable(name: "r_value", arg: 5, scope: !5714, file: !3, line: 1367, type: !1330)
!5726 = !DILocation(line: 1367, column: 108, scope: !5714)
!5727 = !DILocalVariable(name: "item", scope: !5714, file: !3, line: 1369, type: !2742)
!5728 = !DILocation(line: 1369, column: 20, scope: !5714)
!5729 = !DILocalVariable(name: "free", scope: !5714, file: !3, line: 1370, type: !1381)
!5730 = !DILocation(line: 1370, column: 7, scope: !5714)
!5731 = !DILocalVariable(name: "found", scope: !5714, file: !3, line: 1371, type: !1381)
!5732 = !DILocation(line: 1371, column: 7, scope: !5714)
!5733 = !DILocation(line: 1373, column: 26, scope: !5714)
!5734 = !DILocation(line: 1373, column: 29, scope: !5714)
!5735 = !DILocation(line: 1373, column: 34, scope: !5714)
!5736 = !DILocation(line: 1373, column: 2, scope: !5714)
!5737 = !DILocation(line: 1375, column: 6, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 1375, column: 6)
!5739 = !DILocation(line: 1375, column: 6, scope: !5714)
!5740 = !DILocalVariable(name: "i", scope: !5741, file: !3, line: 1376, type: !2482)
!5741 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 1375, column: 12)
!5742 = !DILocation(line: 1376, column: 13, scope: !5741)
!5743 = !DILocation(line: 1376, column: 42, scope: !5741)
!5744 = !DILocation(line: 1376, column: 48, scope: !5741)
!5745 = !DILocation(line: 1376, column: 17, scope: !5741)
!5746 = !DILocation(line: 1377, column: 7, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1377, column: 7)
!5748 = !DILocation(line: 1377, column: 9, scope: !5747)
!5749 = !DILocation(line: 1377, column: 7, scope: !5741)
!5750 = !DILocation(line: 1378, column: 15, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1377, column: 16)
!5752 = !DILocation(line: 1378, column: 20, scope: !5751)
!5753 = !DILocation(line: 1378, column: 23, scope: !5751)
!5754 = !DILocation(line: 1378, column: 5, scope: !5751)
!5755 = !DILocation(line: 1378, column: 13, scope: !5751)
!5756 = !DILocation(line: 1379, column: 10, scope: !5751)
!5757 = !DILocation(line: 1380, column: 3, scope: !5751)
!5758 = !DILocation(line: 1382, column: 10, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1381, column: 8)
!5760 = !DILocation(line: 1385, column: 7, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1385, column: 7)
!5762 = !DILocation(line: 1385, column: 7, scope: !5741)
!5763 = !DILocation(line: 1386, column: 4, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1385, column: 13)
!5765 = !DILocation(line: 1386, column: 14, scope: !5764)
!5766 = !DILocation(line: 1387, column: 3, scope: !5764)
!5767 = !DILocation(line: 1388, column: 2, scope: !5741)
!5768 = !DILocation(line: 1390, column: 9, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 1389, column: 7)
!5770 = !DILocation(line: 1392, column: 9, scope: !5714)
!5771 = !DILocation(line: 1392, column: 2, scope: !5714)
!5772 = distinct !DISubprogram(name: "RNA_enum_from_identifier", scope: !3, file: !3, line: 1443, type: !5773, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!48, !2742, !1031}
!5775 = !DILocalVariable(name: "item", arg: 1, scope: !5772, file: !3, line: 1443, type: !2742)
!5776 = !DILocation(line: 1443, column: 48, scope: !5772)
!5777 = !DILocalVariable(name: "identifier", arg: 2, scope: !5772, file: !3, line: 1443, type: !1031)
!5778 = !DILocation(line: 1443, column: 66, scope: !5772)
!5779 = !DILocalVariable(name: "i", scope: !5772, file: !3, line: 1445, type: !48)
!5780 = !DILocation(line: 1445, column: 6, scope: !5772)
!5781 = !DILocation(line: 1446, column: 2, scope: !5772)
!5782 = !DILocation(line: 1446, column: 9, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 1446, column: 2)
!5784 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1446, column: 2)
!5785 = !DILocation(line: 1446, column: 15, scope: !5783)
!5786 = !DILocation(line: 1446, column: 2, scope: !5784)
!5787 = !DILocation(line: 1447, column: 7, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 1447, column: 7)
!5789 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1446, column: 40)
!5790 = !DILocation(line: 1447, column: 13, scope: !5788)
!5791 = !DILocation(line: 1447, column: 27, scope: !5788)
!5792 = !DILocation(line: 1447, column: 30, scope: !5788)
!5793 = !DILocation(line: 1447, column: 7, scope: !5789)
!5794 = !DILocation(line: 1448, column: 11, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1447, column: 67)
!5796 = !DILocation(line: 1448, column: 4, scope: !5795)
!5797 = !DILocation(line: 1450, column: 2, scope: !5789)
!5798 = !DILocation(line: 1446, column: 31, scope: !5783)
!5799 = !DILocation(line: 1446, column: 36, scope: !5783)
!5800 = !DILocation(line: 1446, column: 2, scope: !5783)
!5801 = distinct !{!5801, !5786, !5802}
!5802 = !DILocation(line: 1450, column: 2, scope: !5784)
!5803 = !DILocation(line: 1451, column: 2, scope: !5772)
!5804 = !DILocation(line: 1452, column: 1, scope: !5772)
!5805 = distinct !DISubprogram(name: "RNA_enum_identifier", scope: !3, file: !3, line: 1395, type: !5806, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{!1381, !2742, !2482, !5808}
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!5809 = !DILocalVariable(name: "item", arg: 1, scope: !5805, file: !3, line: 1395, type: !2742)
!5810 = !DILocation(line: 1395, column: 44, scope: !5805)
!5811 = !DILocalVariable(name: "value", arg: 2, scope: !5805, file: !3, line: 1395, type: !2482)
!5812 = !DILocation(line: 1395, column: 60, scope: !5805)
!5813 = !DILocalVariable(name: "r_identifier", arg: 3, scope: !5805, file: !3, line: 1395, type: !5808)
!5814 = !DILocation(line: 1395, column: 80, scope: !5805)
!5815 = !DILocalVariable(name: "i", scope: !5805, file: !3, line: 1397, type: !2482)
!5816 = !DILocation(line: 1397, column: 12, scope: !5805)
!5817 = !DILocation(line: 1397, column: 36, scope: !5805)
!5818 = !DILocation(line: 1397, column: 42, scope: !5805)
!5819 = !DILocation(line: 1397, column: 16, scope: !5805)
!5820 = !DILocation(line: 1398, column: 6, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1398, column: 6)
!5822 = !DILocation(line: 1398, column: 8, scope: !5821)
!5823 = !DILocation(line: 1398, column: 6, scope: !5805)
!5824 = !DILocation(line: 1399, column: 19, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5821, file: !3, line: 1398, column: 15)
!5826 = !DILocation(line: 1399, column: 24, scope: !5825)
!5827 = !DILocation(line: 1399, column: 27, scope: !5825)
!5828 = !DILocation(line: 1399, column: 4, scope: !5825)
!5829 = !DILocation(line: 1399, column: 17, scope: !5825)
!5830 = !DILocation(line: 1400, column: 3, scope: !5825)
!5831 = !DILocation(line: 1403, column: 3, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5821, file: !3, line: 1402, column: 7)
!5833 = !DILocation(line: 1405, column: 1, scope: !5805)
!5834 = distinct !DISubprogram(name: "RNA_enum_from_value", scope: !3, file: !3, line: 1454, type: !5835, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{!48, !2742, !2482}
!5837 = !DILocalVariable(name: "item", arg: 1, scope: !5834, file: !3, line: 1454, type: !2742)
!5838 = !DILocation(line: 1454, column: 43, scope: !5834)
!5839 = !DILocalVariable(name: "value", arg: 2, scope: !5834, file: !3, line: 1454, type: !2482)
!5840 = !DILocation(line: 1454, column: 59, scope: !5834)
!5841 = !DILocalVariable(name: "i", scope: !5834, file: !3, line: 1456, type: !48)
!5842 = !DILocation(line: 1456, column: 6, scope: !5834)
!5843 = !DILocation(line: 1457, column: 2, scope: !5834)
!5844 = !DILocation(line: 1457, column: 9, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 1457, column: 2)
!5846 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 1457, column: 2)
!5847 = !DILocation(line: 1457, column: 15, scope: !5845)
!5848 = !DILocation(line: 1457, column: 2, scope: !5846)
!5849 = !DILocation(line: 1458, column: 7, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1458, column: 7)
!5851 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1457, column: 40)
!5852 = !DILocation(line: 1458, column: 13, scope: !5850)
!5853 = !DILocation(line: 1458, column: 27, scope: !5850)
!5854 = !DILocation(line: 1458, column: 30, scope: !5850)
!5855 = !DILocation(line: 1458, column: 36, scope: !5850)
!5856 = !DILocation(line: 1458, column: 45, scope: !5850)
!5857 = !DILocation(line: 1458, column: 42, scope: !5850)
!5858 = !DILocation(line: 1458, column: 7, scope: !5851)
!5859 = !DILocation(line: 1459, column: 11, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 1458, column: 52)
!5861 = !DILocation(line: 1459, column: 4, scope: !5860)
!5862 = !DILocation(line: 1461, column: 2, scope: !5851)
!5863 = !DILocation(line: 1457, column: 31, scope: !5845)
!5864 = !DILocation(line: 1457, column: 36, scope: !5845)
!5865 = !DILocation(line: 1457, column: 2, scope: !5845)
!5866 = distinct !{!5866, !5848, !5867}
!5867 = !DILocation(line: 1461, column: 2, scope: !5846)
!5868 = !DILocation(line: 1462, column: 2, scope: !5834)
!5869 = !DILocation(line: 1463, column: 1, scope: !5834)
!5870 = distinct !DISubprogram(name: "RNA_enum_bitflag_identifiers", scope: !3, file: !3, line: 1407, type: !5871, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5871 = !DISubroutineType(types: !5872)
!5872 = !{!48, !2742, !2482, !5808}
!5873 = !DILocalVariable(name: "item", arg: 1, scope: !5870, file: !3, line: 1407, type: !2742)
!5874 = !DILocation(line: 1407, column: 52, scope: !5870)
!5875 = !DILocalVariable(name: "value", arg: 2, scope: !5870, file: !3, line: 1407, type: !2482)
!5876 = !DILocation(line: 1407, column: 68, scope: !5870)
!5877 = !DILocalVariable(name: "r_identifier", arg: 3, scope: !5870, file: !3, line: 1407, type: !5808)
!5878 = !DILocation(line: 1407, column: 88, scope: !5870)
!5879 = !DILocalVariable(name: "index", scope: !5870, file: !3, line: 1409, type: !48)
!5880 = !DILocation(line: 1409, column: 6, scope: !5870)
!5881 = !DILocation(line: 1410, column: 2, scope: !5870)
!5882 = !DILocation(line: 1410, column: 9, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1410, column: 2)
!5884 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1410, column: 2)
!5885 = !DILocation(line: 1410, column: 15, scope: !5883)
!5886 = !DILocation(line: 1410, column: 2, scope: !5884)
!5887 = !DILocation(line: 1411, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 1411, column: 7)
!5889 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 1410, column: 35)
!5890 = !DILocation(line: 1411, column: 13, scope: !5888)
!5891 = !DILocation(line: 1411, column: 27, scope: !5888)
!5892 = !DILocation(line: 1411, column: 30, scope: !5888)
!5893 = !DILocation(line: 1411, column: 36, scope: !5888)
!5894 = !DILocation(line: 1411, column: 44, scope: !5888)
!5895 = !DILocation(line: 1411, column: 42, scope: !5888)
!5896 = !DILocation(line: 1411, column: 7, scope: !5889)
!5897 = !DILocation(line: 1412, column: 28, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 1411, column: 51)
!5899 = !DILocation(line: 1412, column: 34, scope: !5898)
!5900 = !DILocation(line: 1412, column: 4, scope: !5898)
!5901 = !DILocation(line: 1412, column: 22, scope: !5898)
!5902 = !DILocation(line: 1412, column: 26, scope: !5898)
!5903 = !DILocation(line: 1413, column: 3, scope: !5898)
!5904 = !DILocation(line: 1414, column: 2, scope: !5889)
!5905 = !DILocation(line: 1410, column: 31, scope: !5883)
!5906 = !DILocation(line: 1410, column: 2, scope: !5883)
!5907 = distinct !{!5907, !5886, !5908}
!5908 = !DILocation(line: 1414, column: 2, scope: !5884)
!5909 = !DILocation(line: 1415, column: 2, scope: !5870)
!5910 = !DILocation(line: 1415, column: 15, scope: !5870)
!5911 = !DILocation(line: 1415, column: 22, scope: !5870)
!5912 = !DILocation(line: 1416, column: 9, scope: !5870)
!5913 = !DILocation(line: 1416, column: 2, scope: !5870)
!5914 = distinct !DISubprogram(name: "RNA_enum_name", scope: !3, file: !3, line: 1419, type: !5806, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5915 = !DILocalVariable(name: "item", arg: 1, scope: !5914, file: !3, line: 1419, type: !2742)
!5916 = !DILocation(line: 1419, column: 38, scope: !5914)
!5917 = !DILocalVariable(name: "value", arg: 2, scope: !5914, file: !3, line: 1419, type: !2482)
!5918 = !DILocation(line: 1419, column: 54, scope: !5914)
!5919 = !DILocalVariable(name: "r_name", arg: 3, scope: !5914, file: !3, line: 1419, type: !5808)
!5920 = !DILocation(line: 1419, column: 74, scope: !5914)
!5921 = !DILocalVariable(name: "i", scope: !5914, file: !3, line: 1421, type: !2482)
!5922 = !DILocation(line: 1421, column: 12, scope: !5914)
!5923 = !DILocation(line: 1421, column: 36, scope: !5914)
!5924 = !DILocation(line: 1421, column: 42, scope: !5914)
!5925 = !DILocation(line: 1421, column: 16, scope: !5914)
!5926 = !DILocation(line: 1422, column: 6, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1422, column: 6)
!5928 = !DILocation(line: 1422, column: 8, scope: !5927)
!5929 = !DILocation(line: 1422, column: 6, scope: !5914)
!5930 = !DILocation(line: 1423, column: 13, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1422, column: 15)
!5932 = !DILocation(line: 1423, column: 18, scope: !5931)
!5933 = !DILocation(line: 1423, column: 21, scope: !5931)
!5934 = !DILocation(line: 1423, column: 4, scope: !5931)
!5935 = !DILocation(line: 1423, column: 11, scope: !5931)
!5936 = !DILocation(line: 1424, column: 3, scope: !5931)
!5937 = !DILocation(line: 1427, column: 3, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1426, column: 7)
!5939 = !DILocation(line: 1429, column: 1, scope: !5914)
!5940 = distinct !DISubprogram(name: "RNA_enum_description", scope: !3, file: !3, line: 1431, type: !5806, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5941 = !DILocalVariable(name: "item", arg: 1, scope: !5940, file: !3, line: 1431, type: !2742)
!5942 = !DILocation(line: 1431, column: 45, scope: !5940)
!5943 = !DILocalVariable(name: "value", arg: 2, scope: !5940, file: !3, line: 1431, type: !2482)
!5944 = !DILocation(line: 1431, column: 61, scope: !5940)
!5945 = !DILocalVariable(name: "r_description", arg: 3, scope: !5940, file: !3, line: 1431, type: !5808)
!5946 = !DILocation(line: 1431, column: 81, scope: !5940)
!5947 = !DILocalVariable(name: "i", scope: !5940, file: !3, line: 1433, type: !2482)
!5948 = !DILocation(line: 1433, column: 12, scope: !5940)
!5949 = !DILocation(line: 1433, column: 36, scope: !5940)
!5950 = !DILocation(line: 1433, column: 42, scope: !5940)
!5951 = !DILocation(line: 1433, column: 16, scope: !5940)
!5952 = !DILocation(line: 1434, column: 6, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 1434, column: 6)
!5954 = !DILocation(line: 1434, column: 8, scope: !5953)
!5955 = !DILocation(line: 1434, column: 6, scope: !5940)
!5956 = !DILocation(line: 1435, column: 20, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 1434, column: 15)
!5958 = !DILocation(line: 1435, column: 25, scope: !5957)
!5959 = !DILocation(line: 1435, column: 28, scope: !5957)
!5960 = !DILocation(line: 1435, column: 4, scope: !5957)
!5961 = !DILocation(line: 1435, column: 18, scope: !5957)
!5962 = !DILocation(line: 1436, column: 3, scope: !5957)
!5963 = !DILocation(line: 1439, column: 3, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 1438, column: 7)
!5965 = !DILocation(line: 1441, column: 1, scope: !5940)
!5966 = distinct !DISubprogram(name: "RNA_property_enum_identifier", scope: !3, file: !3, line: 1465, type: !5967, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!1381, !5451, !1349, !1021, !2482, !5808}
!5969 = !DILocalVariable(name: "C", arg: 1, scope: !5966, file: !3, line: 1465, type: !5451)
!5970 = !DILocation(line: 1465, column: 45, scope: !5966)
!5971 = !DILocalVariable(name: "ptr", arg: 2, scope: !5966, file: !3, line: 1465, type: !1349)
!5972 = !DILocation(line: 1465, column: 60, scope: !5966)
!5973 = !DILocalVariable(name: "prop", arg: 3, scope: !5966, file: !3, line: 1465, type: !1021)
!5974 = !DILocation(line: 1465, column: 78, scope: !5966)
!5975 = !DILocalVariable(name: "value", arg: 4, scope: !5966, file: !3, line: 1465, type: !2482)
!5976 = !DILocation(line: 1465, column: 94, scope: !5966)
!5977 = !DILocalVariable(name: "identifier", arg: 5, scope: !5966, file: !3, line: 1466, type: !5808)
!5978 = !DILocation(line: 1466, column: 48, scope: !5966)
!5979 = !DILocalVariable(name: "item", scope: !5966, file: !3, line: 1468, type: !2742)
!5980 = !DILocation(line: 1468, column: 20, scope: !5966)
!5981 = !DILocalVariable(name: "free", scope: !5966, file: !3, line: 1469, type: !1381)
!5982 = !DILocation(line: 1469, column: 7, scope: !5966)
!5983 = !DILocation(line: 1471, column: 26, scope: !5966)
!5984 = !DILocation(line: 1471, column: 29, scope: !5966)
!5985 = !DILocation(line: 1471, column: 34, scope: !5966)
!5986 = !DILocation(line: 1471, column: 2, scope: !5966)
!5987 = !DILocation(line: 1472, column: 6, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5966, file: !3, line: 1472, column: 6)
!5989 = !DILocation(line: 1472, column: 6, scope: !5966)
!5990 = !DILocalVariable(name: "result", scope: !5991, file: !3, line: 1473, type: !1381)
!5991 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 1472, column: 12)
!5992 = !DILocation(line: 1473, column: 8, scope: !5991)
!5993 = !DILocation(line: 1474, column: 32, scope: !5991)
!5994 = !DILocation(line: 1474, column: 38, scope: !5991)
!5995 = !DILocation(line: 1474, column: 45, scope: !5991)
!5996 = !DILocation(line: 1474, column: 12, scope: !5991)
!5997 = !DILocation(line: 1474, column: 10, scope: !5991)
!5998 = !DILocation(line: 1475, column: 7, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1475, column: 7)
!6000 = !DILocation(line: 1475, column: 7, scope: !5991)
!6001 = !DILocation(line: 1476, column: 4, scope: !5999)
!6002 = !DILocation(line: 1476, column: 14, scope: !5999)
!6003 = !DILocation(line: 1478, column: 10, scope: !5991)
!6004 = !DILocation(line: 1478, column: 3, scope: !5991)
!6005 = !DILocation(line: 1480, column: 2, scope: !5966)
!6006 = !DILocation(line: 1481, column: 1, scope: !5966)
!6007 = distinct !DISubprogram(name: "RNA_property_enum_name", scope: !3, file: !3, line: 1483, type: !5967, scopeLine: 1484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6008 = !DILocalVariable(name: "C", arg: 1, scope: !6007, file: !3, line: 1483, type: !5451)
!6009 = !DILocation(line: 1483, column: 39, scope: !6007)
!6010 = !DILocalVariable(name: "ptr", arg: 2, scope: !6007, file: !3, line: 1483, type: !1349)
!6011 = !DILocation(line: 1483, column: 54, scope: !6007)
!6012 = !DILocalVariable(name: "prop", arg: 3, scope: !6007, file: !3, line: 1483, type: !1021)
!6013 = !DILocation(line: 1483, column: 72, scope: !6007)
!6014 = !DILocalVariable(name: "value", arg: 4, scope: !6007, file: !3, line: 1483, type: !2482)
!6015 = !DILocation(line: 1483, column: 88, scope: !6007)
!6016 = !DILocalVariable(name: "name", arg: 5, scope: !6007, file: !3, line: 1483, type: !5808)
!6017 = !DILocation(line: 1483, column: 108, scope: !6007)
!6018 = !DILocalVariable(name: "item", scope: !6007, file: !3, line: 1485, type: !2742)
!6019 = !DILocation(line: 1485, column: 20, scope: !6007)
!6020 = !DILocalVariable(name: "free", scope: !6007, file: !3, line: 1486, type: !1381)
!6021 = !DILocation(line: 1486, column: 7, scope: !6007)
!6022 = !DILocation(line: 1488, column: 26, scope: !6007)
!6023 = !DILocation(line: 1488, column: 29, scope: !6007)
!6024 = !DILocation(line: 1488, column: 34, scope: !6007)
!6025 = !DILocation(line: 1488, column: 2, scope: !6007)
!6026 = !DILocation(line: 1489, column: 6, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1489, column: 6)
!6028 = !DILocation(line: 1489, column: 6, scope: !6007)
!6029 = !DILocalVariable(name: "result", scope: !6030, file: !3, line: 1490, type: !1381)
!6030 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1489, column: 12)
!6031 = !DILocation(line: 1490, column: 8, scope: !6030)
!6032 = !DILocation(line: 1491, column: 26, scope: !6030)
!6033 = !DILocation(line: 1491, column: 32, scope: !6030)
!6034 = !DILocation(line: 1491, column: 39, scope: !6030)
!6035 = !DILocation(line: 1491, column: 12, scope: !6030)
!6036 = !DILocation(line: 1491, column: 10, scope: !6030)
!6037 = !DILocation(line: 1492, column: 7, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 1492, column: 7)
!6039 = !DILocation(line: 1492, column: 7, scope: !6030)
!6040 = !DILocation(line: 1493, column: 4, scope: !6038)
!6041 = !DILocation(line: 1493, column: 14, scope: !6038)
!6042 = !DILocation(line: 1495, column: 10, scope: !6030)
!6043 = !DILocation(line: 1495, column: 3, scope: !6030)
!6044 = !DILocation(line: 1497, column: 2, scope: !6007)
!6045 = !DILocation(line: 1498, column: 1, scope: !6007)
!6046 = distinct !DISubprogram(name: "RNA_property_enum_name_gettexted", scope: !3, file: !3, line: 1500, type: !5967, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6047 = !DILocalVariable(name: "C", arg: 1, scope: !6046, file: !3, line: 1500, type: !5451)
!6048 = !DILocation(line: 1500, column: 49, scope: !6046)
!6049 = !DILocalVariable(name: "ptr", arg: 2, scope: !6046, file: !3, line: 1500, type: !1349)
!6050 = !DILocation(line: 1500, column: 64, scope: !6046)
!6051 = !DILocalVariable(name: "prop", arg: 3, scope: !6046, file: !3, line: 1500, type: !1021)
!6052 = !DILocation(line: 1500, column: 82, scope: !6046)
!6053 = !DILocalVariable(name: "value", arg: 4, scope: !6046, file: !3, line: 1500, type: !2482)
!6054 = !DILocation(line: 1500, column: 98, scope: !6046)
!6055 = !DILocalVariable(name: "name", arg: 5, scope: !6046, file: !3, line: 1500, type: !5808)
!6056 = !DILocation(line: 1500, column: 118, scope: !6046)
!6057 = !DILocalVariable(name: "result", scope: !6046, file: !3, line: 1502, type: !1381)
!6058 = !DILocation(line: 1502, column: 7, scope: !6046)
!6059 = !DILocation(line: 1504, column: 34, scope: !6046)
!6060 = !DILocation(line: 1504, column: 37, scope: !6046)
!6061 = !DILocation(line: 1504, column: 42, scope: !6046)
!6062 = !DILocation(line: 1504, column: 48, scope: !6046)
!6063 = !DILocation(line: 1504, column: 55, scope: !6046)
!6064 = !DILocation(line: 1504, column: 11, scope: !6046)
!6065 = !DILocation(line: 1504, column: 9, scope: !6046)
!6066 = !DILocation(line: 1506, column: 6, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 1506, column: 6)
!6068 = !DILocation(line: 1506, column: 6, scope: !6046)
!6069 = !DILocation(line: 1507, column: 9, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1507, column: 7)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1506, column: 14)
!6072 = !DILocation(line: 1507, column: 15, scope: !6070)
!6073 = !DILocation(line: 1507, column: 20, scope: !6070)
!6074 = !DILocation(line: 1507, column: 7, scope: !6071)
!6075 = !DILocation(line: 1508, column: 8, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1508, column: 8)
!6077 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1507, column: 47)
!6078 = !DILocation(line: 1508, column: 8, scope: !6077)
!6079 = !DILocation(line: 1509, column: 26, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1508, column: 31)
!6081 = !DILocation(line: 1509, column: 32, scope: !6080)
!6082 = !DILocation(line: 1509, column: 54, scope: !6080)
!6083 = !DILocation(line: 1509, column: 53, scope: !6080)
!6084 = !DILocation(line: 1509, column: 13, scope: !6080)
!6085 = !DILocation(line: 1509, column: 6, scope: !6080)
!6086 = !DILocation(line: 1509, column: 11, scope: !6080)
!6087 = !DILocation(line: 1510, column: 4, scope: !6080)
!6088 = !DILocation(line: 1511, column: 3, scope: !6077)
!6089 = !DILocation(line: 1512, column: 2, scope: !6071)
!6090 = !DILocation(line: 1514, column: 9, scope: !6046)
!6091 = !DILocation(line: 1514, column: 2, scope: !6046)
!6092 = distinct !DISubprogram(name: "RNA_property_enum_bitflag_identifiers", scope: !3, file: !3, line: 1517, type: !6093, scopeLine: 1519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6093 = !DISubroutineType(types: !6094)
!6094 = !{!48, !5451, !1349, !1021, !2482, !5808}
!6095 = !DILocalVariable(name: "C", arg: 1, scope: !6092, file: !3, line: 1517, type: !5451)
!6096 = !DILocation(line: 1517, column: 53, scope: !6092)
!6097 = !DILocalVariable(name: "ptr", arg: 2, scope: !6092, file: !3, line: 1517, type: !1349)
!6098 = !DILocation(line: 1517, column: 68, scope: !6092)
!6099 = !DILocalVariable(name: "prop", arg: 3, scope: !6092, file: !3, line: 1517, type: !1021)
!6100 = !DILocation(line: 1517, column: 86, scope: !6092)
!6101 = !DILocalVariable(name: "value", arg: 4, scope: !6092, file: !3, line: 1517, type: !2482)
!6102 = !DILocation(line: 1517, column: 102, scope: !6092)
!6103 = !DILocalVariable(name: "identifier", arg: 5, scope: !6092, file: !3, line: 1518, type: !5808)
!6104 = !DILocation(line: 1518, column: 56, scope: !6092)
!6105 = !DILocalVariable(name: "item", scope: !6092, file: !3, line: 1520, type: !2742)
!6106 = !DILocation(line: 1520, column: 20, scope: !6092)
!6107 = !DILocalVariable(name: "free", scope: !6092, file: !3, line: 1521, type: !1381)
!6108 = !DILocation(line: 1521, column: 7, scope: !6092)
!6109 = !DILocation(line: 1523, column: 26, scope: !6092)
!6110 = !DILocation(line: 1523, column: 29, scope: !6092)
!6111 = !DILocation(line: 1523, column: 34, scope: !6092)
!6112 = !DILocation(line: 1523, column: 2, scope: !6092)
!6113 = !DILocation(line: 1524, column: 6, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 1524, column: 6)
!6115 = !DILocation(line: 1524, column: 6, scope: !6092)
!6116 = !DILocalVariable(name: "result", scope: !6117, file: !3, line: 1525, type: !48)
!6117 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 1524, column: 12)
!6118 = !DILocation(line: 1525, column: 7, scope: !6117)
!6119 = !DILocation(line: 1526, column: 41, scope: !6117)
!6120 = !DILocation(line: 1526, column: 47, scope: !6117)
!6121 = !DILocation(line: 1526, column: 54, scope: !6117)
!6122 = !DILocation(line: 1526, column: 12, scope: !6117)
!6123 = !DILocation(line: 1526, column: 10, scope: !6117)
!6124 = !DILocation(line: 1527, column: 7, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1527, column: 7)
!6126 = !DILocation(line: 1527, column: 7, scope: !6117)
!6127 = !DILocation(line: 1528, column: 4, scope: !6125)
!6128 = !DILocation(line: 1528, column: 14, scope: !6125)
!6129 = !DILocation(line: 1530, column: 10, scope: !6117)
!6130 = !DILocation(line: 1530, column: 3, scope: !6117)
!6131 = !DILocation(line: 1532, column: 2, scope: !6092)
!6132 = !DILocation(line: 1533, column: 1, scope: !6092)
!6133 = distinct !DISubprogram(name: "RNA_property_ui_name", scope: !3, file: !3, line: 1535, type: !4255, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6134 = !DILocalVariable(name: "prop", arg: 1, scope: !6133, file: !3, line: 1535, type: !1021)
!6135 = !DILocation(line: 1535, column: 47, scope: !6133)
!6136 = !DILocation(line: 1537, column: 9, scope: !6133)
!6137 = !DILocation(line: 1537, column: 2, scope: !6133)
!6138 = distinct !DISubprogram(name: "rna_ensure_property_name", scope: !3, file: !3, line: 495, type: !4263, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6139 = !DILocalVariable(name: "prop", arg: 1, scope: !6138, file: !3, line: 495, type: !4265)
!6140 = !DILocation(line: 495, column: 64, scope: !6138)
!6141 = !DILocalVariable(name: "name", scope: !6138, file: !3, line: 497, type: !1031)
!6142 = !DILocation(line: 497, column: 14, scope: !6138)
!6143 = !DILocation(line: 499, column: 6, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 499, column: 6)
!6145 = !DILocation(line: 499, column: 12, scope: !6144)
!6146 = !DILocation(line: 499, column: 18, scope: !6144)
!6147 = !DILocation(line: 499, column: 6, scope: !6138)
!6148 = !DILocation(line: 500, column: 10, scope: !6144)
!6149 = !DILocation(line: 500, column: 16, scope: !6144)
!6150 = !DILocation(line: 500, column: 8, scope: !6144)
!6151 = !DILocation(line: 500, column: 3, scope: !6144)
!6152 = !DILocation(line: 502, column: 25, scope: !6144)
!6153 = !DILocation(line: 502, column: 32, scope: !6144)
!6154 = !DILocation(line: 502, column: 10, scope: !6144)
!6155 = !DILocation(line: 502, column: 8, scope: !6144)
!6156 = !DILocation(line: 504, column: 9, scope: !6138)
!6157 = !DILocation(line: 504, column: 2, scope: !6138)
!6158 = distinct !DISubprogram(name: "RNA_property_ui_name_raw", scope: !3, file: !3, line: 1540, type: !4255, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6159 = !DILocalVariable(name: "prop", arg: 1, scope: !6158, file: !3, line: 1540, type: !1021)
!6160 = !DILocation(line: 1540, column: 51, scope: !6158)
!6161 = !DILocation(line: 1542, column: 34, scope: !6158)
!6162 = !DILocation(line: 1542, column: 9, scope: !6158)
!6163 = !DILocation(line: 1542, column: 2, scope: !6158)
!6164 = distinct !DISubprogram(name: "RNA_property_ui_description", scope: !3, file: !3, line: 1545, type: !4255, scopeLine: 1546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6165 = !DILocalVariable(name: "prop", arg: 1, scope: !6164, file: !3, line: 1545, type: !1021)
!6166 = !DILocation(line: 1545, column: 54, scope: !6164)
!6167 = !DILocation(line: 1547, column: 9, scope: !6164)
!6168 = !DILocation(line: 1547, column: 2, scope: !6164)
!6169 = distinct !DISubprogram(name: "RNA_property_ui_description_raw", scope: !3, file: !3, line: 1550, type: !4255, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6170 = !DILocalVariable(name: "prop", arg: 1, scope: !6169, file: !3, line: 1550, type: !1021)
!6171 = !DILocation(line: 1550, column: 58, scope: !6169)
!6172 = !DILocation(line: 1552, column: 41, scope: !6169)
!6173 = !DILocation(line: 1552, column: 9, scope: !6169)
!6174 = !DILocation(line: 1552, column: 2, scope: !6169)
!6175 = distinct !DISubprogram(name: "RNA_property_translation_context", scope: !3, file: !3, line: 1555, type: !4255, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6176 = !DILocalVariable(name: "_prop", arg: 1, scope: !6175, file: !3, line: 1555, type: !1021)
!6177 = !DILocation(line: 1555, column: 59, scope: !6175)
!6178 = !DILocalVariable(name: "prop", scope: !6175, file: !3, line: 1557, type: !1021)
!6179 = !DILocation(line: 1557, column: 15, scope: !6175)
!6180 = !DILocation(line: 1557, column: 42, scope: !6175)
!6181 = !DILocation(line: 1557, column: 22, scope: !6175)
!6182 = !DILocation(line: 1558, column: 9, scope: !6175)
!6183 = !DILocation(line: 1558, column: 15, scope: !6175)
!6184 = !DILocation(line: 1558, column: 2, scope: !6175)
!6185 = distinct !DISubprogram(name: "RNA_property_ui_icon", scope: !3, file: !3, line: 1561, type: !4392, scopeLine: 1562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6186 = !DILocalVariable(name: "prop", arg: 1, scope: !6185, file: !3, line: 1561, type: !1021)
!6187 = !DILocation(line: 1561, column: 39, scope: !6185)
!6188 = !DILocation(line: 1563, column: 29, scope: !6185)
!6189 = !DILocation(line: 1563, column: 9, scope: !6185)
!6190 = !DILocation(line: 1563, column: 36, scope: !6185)
!6191 = !DILocation(line: 1563, column: 2, scope: !6185)
!6192 = distinct !DISubprogram(name: "RNA_property_editable", scope: !3, file: !3, line: 1566, type: !3862, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6193 = !DILocalVariable(name: "ptr", arg: 1, scope: !6192, file: !3, line: 1566, type: !1349)
!6194 = !DILocation(line: 1566, column: 40, scope: !6192)
!6195 = !DILocalVariable(name: "prop", arg: 2, scope: !6192, file: !3, line: 1566, type: !1021)
!6196 = !DILocation(line: 1566, column: 58, scope: !6192)
!6197 = !DILocalVariable(name: "id", scope: !6192, file: !3, line: 1568, type: !1145)
!6198 = !DILocation(line: 1568, column: 6, scope: !6192)
!6199 = !DILocation(line: 1568, column: 11, scope: !6192)
!6200 = !DILocation(line: 1568, column: 16, scope: !6192)
!6201 = !DILocation(line: 1568, column: 19, scope: !6192)
!6202 = !DILocalVariable(name: "flag", scope: !6192, file: !3, line: 1569, type: !48)
!6203 = !DILocation(line: 1569, column: 6, scope: !6192)
!6204 = !DILocation(line: 1571, column: 29, scope: !6192)
!6205 = !DILocation(line: 1571, column: 9, scope: !6192)
!6206 = !DILocation(line: 1571, column: 7, scope: !6192)
!6207 = !DILocation(line: 1572, column: 9, scope: !6192)
!6208 = !DILocation(line: 1572, column: 15, scope: !6192)
!6209 = !DILocation(line: 1572, column: 26, scope: !6192)
!6210 = !DILocation(line: 1572, column: 32, scope: !6192)
!6211 = !DILocation(line: 1572, column: 41, scope: !6192)
!6212 = !DILocation(line: 1572, column: 48, scope: !6192)
!6213 = !DILocation(line: 1572, column: 54, scope: !6192)
!6214 = !DILocation(line: 1572, column: 7, scope: !6192)
!6215 = !DILocation(line: 1573, column: 10, scope: !6192)
!6216 = !DILocation(line: 1573, column: 15, scope: !6192)
!6217 = !DILocation(line: 1573, column: 32, scope: !6192)
!6218 = !DILocation(line: 1573, column: 37, scope: !6192)
!6219 = !DILocation(line: 1573, column: 40, scope: !6192)
!6220 = !DILocation(line: 1573, column: 44, scope: !6192)
!6221 = !DILocation(line: 1573, column: 48, scope: !6192)
!6222 = !DILocation(line: 1573, column: 52, scope: !6192)
!6223 = !DILocation(line: 1573, column: 56, scope: !6192)
!6224 = !DILocation(line: 1573, column: 62, scope: !6192)
!6225 = !DILocation(line: 1573, column: 67, scope: !6192)
!6226 = !DILocation(line: 0, scope: !6192)
!6227 = !DILocation(line: 1573, column: 9, scope: !6192)
!6228 = !DILocation(line: 1573, column: 2, scope: !6192)
!6229 = distinct !DISubprogram(name: "RNA_property_editable_flag", scope: !3, file: !3, line: 1576, type: !3862, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6230 = !DILocalVariable(name: "ptr", arg: 1, scope: !6229, file: !3, line: 1576, type: !1349)
!6231 = !DILocation(line: 1576, column: 45, scope: !6229)
!6232 = !DILocalVariable(name: "prop", arg: 2, scope: !6229, file: !3, line: 1576, type: !1021)
!6233 = !DILocation(line: 1576, column: 63, scope: !6229)
!6234 = !DILocalVariable(name: "flag", scope: !6229, file: !3, line: 1578, type: !48)
!6235 = !DILocation(line: 1578, column: 6, scope: !6229)
!6236 = !DILocation(line: 1580, column: 29, scope: !6229)
!6237 = !DILocation(line: 1580, column: 9, scope: !6229)
!6238 = !DILocation(line: 1580, column: 7, scope: !6229)
!6239 = !DILocation(line: 1581, column: 9, scope: !6229)
!6240 = !DILocation(line: 1581, column: 15, scope: !6229)
!6241 = !DILocation(line: 1581, column: 26, scope: !6229)
!6242 = !DILocation(line: 1581, column: 32, scope: !6229)
!6243 = !DILocation(line: 1581, column: 41, scope: !6229)
!6244 = !DILocation(line: 1581, column: 48, scope: !6229)
!6245 = !DILocation(line: 1581, column: 54, scope: !6229)
!6246 = !DILocation(line: 1581, column: 7, scope: !6229)
!6247 = !DILocation(line: 1582, column: 10, scope: !6229)
!6248 = !DILocation(line: 1582, column: 15, scope: !6229)
!6249 = !DILocation(line: 1582, column: 32, scope: !6229)
!6250 = !DILocation(line: 1582, column: 9, scope: !6229)
!6251 = !DILocation(line: 1582, column: 2, scope: !6229)
!6252 = distinct !DISubprogram(name: "RNA_property_editable_index", scope: !3, file: !3, line: 1586, type: !6253, scopeLine: 1587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6253 = !DISubroutineType(types: !6254)
!6254 = !{!1381, !1349, !1021, !48}
!6255 = !DILocalVariable(name: "ptr", arg: 1, scope: !6252, file: !3, line: 1586, type: !1349)
!6256 = !DILocation(line: 1586, column: 46, scope: !6252)
!6257 = !DILocalVariable(name: "prop", arg: 2, scope: !6252, file: !3, line: 1586, type: !1021)
!6258 = !DILocation(line: 1586, column: 64, scope: !6252)
!6259 = !DILocalVariable(name: "index", arg: 3, scope: !6252, file: !3, line: 1586, type: !48)
!6260 = !DILocation(line: 1586, column: 74, scope: !6252)
!6261 = !DILocalVariable(name: "id", scope: !6252, file: !3, line: 1588, type: !1145)
!6262 = !DILocation(line: 1588, column: 6, scope: !6252)
!6263 = !DILocalVariable(name: "flag", scope: !6252, file: !3, line: 1589, type: !48)
!6264 = !DILocation(line: 1589, column: 6, scope: !6252)
!6265 = !DILocation(line: 1593, column: 29, scope: !6252)
!6266 = !DILocation(line: 1593, column: 9, scope: !6252)
!6267 = !DILocation(line: 1593, column: 7, scope: !6252)
!6268 = !DILocation(line: 1595, column: 9, scope: !6252)
!6269 = !DILocation(line: 1595, column: 15, scope: !6252)
!6270 = !DILocation(line: 1595, column: 7, scope: !6252)
!6271 = !DILocation(line: 1597, column: 6, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 1597, column: 6)
!6273 = !DILocation(line: 1597, column: 12, scope: !6272)
!6274 = !DILocation(line: 1597, column: 6, scope: !6252)
!6275 = !DILocation(line: 1598, column: 11, scope: !6272)
!6276 = !DILocation(line: 1598, column: 17, scope: !6272)
!6277 = !DILocation(line: 1598, column: 26, scope: !6272)
!6278 = !DILocation(line: 1598, column: 8, scope: !6272)
!6279 = !DILocation(line: 1598, column: 3, scope: !6272)
!6280 = !DILocation(line: 1600, column: 6, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 1600, column: 6)
!6282 = !DILocation(line: 1600, column: 12, scope: !6281)
!6283 = !DILocation(line: 1600, column: 6, scope: !6252)
!6284 = !DILocation(line: 1601, column: 11, scope: !6281)
!6285 = !DILocation(line: 1601, column: 17, scope: !6281)
!6286 = !DILocation(line: 1601, column: 30, scope: !6281)
!6287 = !DILocation(line: 1601, column: 35, scope: !6281)
!6288 = !DILocation(line: 1601, column: 8, scope: !6281)
!6289 = !DILocation(line: 1601, column: 3, scope: !6281)
!6290 = !DILocation(line: 1603, column: 7, scope: !6252)
!6291 = !DILocation(line: 1603, column: 12, scope: !6252)
!6292 = !DILocation(line: 1603, column: 15, scope: !6252)
!6293 = !DILocation(line: 1603, column: 5, scope: !6252)
!6294 = !DILocation(line: 1605, column: 10, scope: !6252)
!6295 = !DILocation(line: 1605, column: 15, scope: !6252)
!6296 = !DILocation(line: 1605, column: 32, scope: !6252)
!6297 = !DILocation(line: 1605, column: 37, scope: !6252)
!6298 = !DILocation(line: 1605, column: 40, scope: !6252)
!6299 = !DILocation(line: 1605, column: 44, scope: !6252)
!6300 = !DILocation(line: 1605, column: 48, scope: !6252)
!6301 = !DILocation(line: 1605, column: 52, scope: !6252)
!6302 = !DILocation(line: 1605, column: 56, scope: !6252)
!6303 = !DILocation(line: 1605, column: 62, scope: !6252)
!6304 = !DILocation(line: 1605, column: 67, scope: !6252)
!6305 = !DILocation(line: 0, scope: !6252)
!6306 = !DILocation(line: 1605, column: 9, scope: !6252)
!6307 = !DILocation(line: 1605, column: 2, scope: !6252)
!6308 = distinct !DISubprogram(name: "RNA_property_animateable", scope: !3, file: !3, line: 1608, type: !3862, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6309 = !DILocalVariable(name: "ptr", arg: 1, scope: !6308, file: !3, line: 1608, type: !1349)
!6310 = !DILocation(line: 1608, column: 43, scope: !6308)
!6311 = !DILocalVariable(name: "prop", arg: 2, scope: !6308, file: !3, line: 1608, type: !1021)
!6312 = !DILocation(line: 1608, column: 61, scope: !6308)
!6313 = !DILocation(line: 1611, column: 33, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 1611, column: 6)
!6315 = !DILocation(line: 1611, column: 38, scope: !6314)
!6316 = !DILocation(line: 1611, column: 41, scope: !6314)
!6317 = !DILocation(line: 1611, column: 7, scope: !6314)
!6318 = !DILocation(line: 1611, column: 6, scope: !6308)
!6319 = !DILocation(line: 1612, column: 3, scope: !6314)
!6320 = !DILocation(line: 1614, column: 29, scope: !6308)
!6321 = !DILocation(line: 1614, column: 9, scope: !6308)
!6322 = !DILocation(line: 1614, column: 7, scope: !6308)
!6323 = !DILocation(line: 1616, column: 8, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 1616, column: 6)
!6325 = !DILocation(line: 1616, column: 14, scope: !6324)
!6326 = !DILocation(line: 1616, column: 19, scope: !6324)
!6327 = !DILocation(line: 1616, column: 6, scope: !6308)
!6328 = !DILocation(line: 1617, column: 3, scope: !6324)
!6329 = !DILocation(line: 1619, column: 10, scope: !6308)
!6330 = !DILocation(line: 1619, column: 16, scope: !6308)
!6331 = !DILocation(line: 1619, column: 21, scope: !6308)
!6332 = !DILocation(line: 1619, column: 38, scope: !6308)
!6333 = !DILocation(line: 1619, column: 9, scope: !6308)
!6334 = !DILocation(line: 1619, column: 2, scope: !6308)
!6335 = !DILocation(line: 1620, column: 1, scope: !6308)
!6336 = distinct !DISubprogram(name: "RNA_property_animated", scope: !3, file: !3, line: 1622, type: !3862, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6337 = !DILocalVariable(name: "ptr", arg: 1, scope: !6336, file: !3, line: 1622, type: !1349)
!6338 = !DILocation(line: 1622, column: 40, scope: !6336)
!6339 = !DILocalVariable(name: "prop", arg: 2, scope: !6336, file: !3, line: 1622, type: !1021)
!6340 = !DILocation(line: 1622, column: 58, scope: !6336)
!6341 = !DILocalVariable(name: "len", scope: !6336, file: !3, line: 1624, type: !48)
!6342 = !DILocation(line: 1624, column: 6, scope: !6336)
!6343 = !DILocalVariable(name: "index", scope: !6336, file: !3, line: 1624, type: !48)
!6344 = !DILocation(line: 1624, column: 15, scope: !6336)
!6345 = !DILocalVariable(name: "driven", scope: !6336, file: !3, line: 1625, type: !1381)
!6346 = !DILocation(line: 1625, column: 7, scope: !6336)
!6347 = !DILocation(line: 1627, column: 7, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1627, column: 6)
!6349 = !DILocation(line: 1627, column: 6, scope: !6336)
!6350 = !DILocation(line: 1628, column: 3, scope: !6348)
!6351 = !DILocation(line: 1630, column: 31, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1630, column: 6)
!6353 = !DILocation(line: 1630, column: 6, scope: !6352)
!6354 = !DILocation(line: 1630, column: 6, scope: !6336)
!6355 = !DILocation(line: 1631, column: 35, scope: !6352)
!6356 = !DILocation(line: 1631, column: 40, scope: !6352)
!6357 = !DILocation(line: 1631, column: 9, scope: !6352)
!6358 = !DILocation(line: 1631, column: 7, scope: !6352)
!6359 = !DILocation(line: 1631, column: 3, scope: !6352)
!6360 = !DILocation(line: 1633, column: 13, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1633, column: 2)
!6362 = !DILocation(line: 1633, column: 7, scope: !6361)
!6363 = !DILocation(line: 1633, column: 18, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 1633, column: 2)
!6365 = !DILocation(line: 1633, column: 26, scope: !6364)
!6366 = !DILocation(line: 1633, column: 24, scope: !6364)
!6367 = !DILocation(line: 1633, column: 2, scope: !6361)
!6368 = !DILocation(line: 1634, column: 22, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 1634, column: 7)
!6370 = !DILocation(line: 1634, column: 27, scope: !6369)
!6371 = !DILocation(line: 1634, column: 33, scope: !6369)
!6372 = !DILocation(line: 1634, column: 7, scope: !6369)
!6373 = !DILocation(line: 1634, column: 7, scope: !6364)
!6374 = !DILocation(line: 1635, column: 4, scope: !6369)
!6375 = !DILocation(line: 1634, column: 53, scope: !6369)
!6376 = !DILocation(line: 1633, column: 36, scope: !6364)
!6377 = !DILocation(line: 1633, column: 2, scope: !6364)
!6378 = distinct !{!6378, !6367, !6379}
!6379 = !DILocation(line: 1635, column: 11, scope: !6361)
!6380 = !DILocation(line: 1637, column: 2, scope: !6336)
!6381 = !DILocation(line: 1638, column: 1, scope: !6336)
!6382 = distinct !DISubprogram(name: "RNA_property_path_from_ID_check", scope: !3, file: !3, line: 1642, type: !3862, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6383 = !DILocalVariable(name: "ptr", arg: 1, scope: !6382, file: !3, line: 1642, type: !1349)
!6384 = !DILocation(line: 1642, column: 50, scope: !6382)
!6385 = !DILocalVariable(name: "prop", arg: 2, scope: !6382, file: !3, line: 1642, type: !1021)
!6386 = !DILocation(line: 1642, column: 68, scope: !6382)
!6387 = !DILocalVariable(name: "path", scope: !6382, file: !3, line: 1644, type: !1091)
!6388 = !DILocation(line: 1644, column: 8, scope: !6382)
!6389 = !DILocation(line: 1644, column: 44, scope: !6382)
!6390 = !DILocation(line: 1644, column: 49, scope: !6382)
!6391 = !DILocation(line: 1644, column: 15, scope: !6382)
!6392 = !DILocalVariable(name: "ret", scope: !6382, file: !3, line: 1645, type: !1381)
!6393 = !DILocation(line: 1645, column: 7, scope: !6382)
!6394 = !DILocation(line: 1647, column: 6, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 1647, column: 6)
!6396 = !DILocation(line: 1647, column: 6, scope: !6382)
!6397 = !DILocalVariable(name: "id_ptr", scope: !6398, file: !3, line: 1648, type: !1350)
!6398 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 1647, column: 12)
!6399 = !DILocation(line: 1648, column: 14, scope: !6398)
!6400 = !DILocalVariable(name: "r_ptr", scope: !6398, file: !3, line: 1649, type: !1350)
!6401 = !DILocation(line: 1649, column: 14, scope: !6398)
!6402 = !DILocalVariable(name: "r_prop", scope: !6398, file: !3, line: 1650, type: !1021)
!6403 = !DILocation(line: 1650, column: 16, scope: !6398)
!6404 = !DILocation(line: 1652, column: 25, scope: !6398)
!6405 = !DILocation(line: 1652, column: 30, scope: !6398)
!6406 = !DILocation(line: 1652, column: 33, scope: !6398)
!6407 = !DILocation(line: 1652, column: 3, scope: !6398)
!6408 = !DILocation(line: 1653, column: 33, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 1653, column: 7)
!6410 = !DILocation(line: 1653, column: 7, scope: !6409)
!6411 = !DILocation(line: 1653, column: 56, scope: !6409)
!6412 = !DILocation(line: 1653, column: 7, scope: !6398)
!6413 = !DILocation(line: 1654, column: 11, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 1653, column: 65)
!6415 = !DILocation(line: 1654, column: 19, scope: !6414)
!6416 = !DILocation(line: 1654, column: 16, scope: !6414)
!6417 = !DILocation(line: 1654, column: 10, scope: !6414)
!6418 = !DILocation(line: 1654, column: 8, scope: !6414)
!6419 = !DILocation(line: 1655, column: 3, scope: !6414)
!6420 = !DILocation(line: 1656, column: 3, scope: !6398)
!6421 = !DILocation(line: 1656, column: 13, scope: !6398)
!6422 = !DILocation(line: 1657, column: 2, scope: !6398)
!6423 = !DILocation(line: 1659, column: 9, scope: !6382)
!6424 = !DILocation(line: 1659, column: 2, scope: !6382)
!6425 = distinct !DISubprogram(name: "RNA_path_from_ID_to_property", scope: !3, file: !3, line: 4559, type: !6426, scopeLine: 4560, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6426 = !DISubroutineType(types: !6427)
!6427 = !{!1091, !1349, !1021}
!6428 = !DILocalVariable(name: "ptr", arg: 1, scope: !6425, file: !3, line: 4559, type: !1349)
!6429 = !DILocation(line: 4559, column: 48, scope: !6425)
!6430 = !DILocalVariable(name: "prop", arg: 2, scope: !6425, file: !3, line: 4559, type: !1021)
!6431 = !DILocation(line: 4559, column: 66, scope: !6425)
!6432 = !DILocalVariable(name: "is_rna", scope: !6425, file: !3, line: 4561, type: !6433)
!6433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!6434 = !DILocation(line: 4561, column: 13, scope: !6425)
!6435 = !DILocation(line: 4561, column: 23, scope: !6425)
!6436 = !DILocation(line: 4561, column: 29, scope: !6425)
!6437 = !DILocation(line: 4561, column: 35, scope: !6425)
!6438 = !DILocation(line: 4561, column: 22, scope: !6425)
!6439 = !DILocalVariable(name: "propname", scope: !6425, file: !3, line: 4562, type: !1031)
!6440 = !DILocation(line: 4562, column: 14, scope: !6425)
!6441 = !DILocalVariable(name: "ptrpath", scope: !6425, file: !3, line: 4563, type: !1091)
!6442 = !DILocation(line: 4563, column: 8, scope: !6425)
!6443 = !DILocalVariable(name: "path", scope: !6425, file: !3, line: 4563, type: !1091)
!6444 = !DILocation(line: 4563, column: 18, scope: !6425)
!6445 = !DILocation(line: 4565, column: 7, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 4565, column: 6)
!6447 = !DILocation(line: 4565, column: 12, scope: !6446)
!6448 = !DILocation(line: 4565, column: 15, scope: !6446)
!6449 = !DILocation(line: 4565, column: 20, scope: !6446)
!6450 = !DILocation(line: 4565, column: 24, scope: !6446)
!6451 = !DILocation(line: 4565, column: 29, scope: !6446)
!6452 = !DILocation(line: 4565, column: 6, scope: !6425)
!6453 = !DILocation(line: 4566, column: 3, scope: !6446)
!6454 = !DILocation(line: 4569, column: 39, scope: !6425)
!6455 = !DILocation(line: 4569, column: 12, scope: !6425)
!6456 = !DILocation(line: 4569, column: 10, scope: !6425)
!6457 = !DILocation(line: 4571, column: 37, scope: !6425)
!6458 = !DILocation(line: 4571, column: 13, scope: !6425)
!6459 = !DILocation(line: 4571, column: 11, scope: !6425)
!6460 = !DILocation(line: 4573, column: 6, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 4573, column: 6)
!6462 = !DILocation(line: 4573, column: 6, scope: !6425)
!6463 = !DILocation(line: 4574, column: 7, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 4574, column: 7)
!6465 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 4573, column: 15)
!6466 = !DILocation(line: 4574, column: 7, scope: !6465)
!6467 = !DILocation(line: 4575, column: 33, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 4574, column: 15)
!6469 = !DILocation(line: 4575, column: 42, scope: !6468)
!6470 = !DILocation(line: 4575, column: 11, scope: !6468)
!6471 = !DILocation(line: 4575, column: 9, scope: !6468)
!6472 = !DILocation(line: 4576, column: 3, scope: !6468)
!6473 = !DILocalVariable(name: "propname_esc", scope: !6474, file: !3, line: 4578, type: !2118)
!6474 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 4577, column: 8)
!6475 = !DILocation(line: 4578, column: 9, scope: !6474)
!6476 = !DILocation(line: 4579, column: 18, scope: !6474)
!6477 = !DILocation(line: 4579, column: 32, scope: !6474)
!6478 = !DILocation(line: 4579, column: 4, scope: !6474)
!6479 = !DILocation(line: 4580, column: 38, scope: !6474)
!6480 = !DILocation(line: 4580, column: 47, scope: !6474)
!6481 = !DILocation(line: 4580, column: 11, scope: !6474)
!6482 = !DILocation(line: 4580, column: 9, scope: !6474)
!6483 = !DILocation(line: 4582, column: 3, scope: !6465)
!6484 = !DILocation(line: 4582, column: 13, scope: !6465)
!6485 = !DILocation(line: 4583, column: 2, scope: !6465)
!6486 = !DILocation(line: 4584, column: 28, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 4584, column: 11)
!6488 = !DILocation(line: 4584, column: 33, scope: !6487)
!6489 = !DILocation(line: 4584, column: 11, scope: !6487)
!6490 = !DILocation(line: 4584, column: 11, scope: !6461)
!6491 = !DILocation(line: 4585, column: 7, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 4585, column: 7)
!6493 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 4584, column: 40)
!6494 = !DILocation(line: 4585, column: 7, scope: !6493)
!6495 = !DILocation(line: 4586, column: 22, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 4585, column: 15)
!6497 = !DILocation(line: 4586, column: 11, scope: !6496)
!6498 = !DILocation(line: 4586, column: 9, scope: !6496)
!6499 = !DILocation(line: 4587, column: 3, scope: !6496)
!6500 = !DILocalVariable(name: "propname_esc", scope: !6501, file: !3, line: 4589, type: !2118)
!6501 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 4588, column: 8)
!6502 = !DILocation(line: 4589, column: 9, scope: !6501)
!6503 = !DILocation(line: 4590, column: 18, scope: !6501)
!6504 = !DILocation(line: 4590, column: 32, scope: !6501)
!6505 = !DILocation(line: 4590, column: 4, scope: !6501)
!6506 = !DILocation(line: 4591, column: 36, scope: !6501)
!6507 = !DILocation(line: 4591, column: 11, scope: !6501)
!6508 = !DILocation(line: 4591, column: 9, scope: !6501)
!6509 = !DILocation(line: 4593, column: 2, scope: !6493)
!6510 = !DILocation(line: 4595, column: 8, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 4594, column: 7)
!6512 = !DILocation(line: 4598, column: 9, scope: !6425)
!6513 = !DILocation(line: 4598, column: 2, scope: !6425)
!6514 = !DILocation(line: 4599, column: 1, scope: !6425)
!6515 = distinct !DISubprogram(name: "RNA_property_update_check", scope: !3, file: !3, line: 1700, type: !4461, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6516 = !DILocalVariable(name: "prop", arg: 1, scope: !6515, file: !3, line: 1700, type: !1021)
!6517 = !DILocation(line: 1700, column: 45, scope: !6515)
!6518 = !DILocation(line: 1702, column: 10, scope: !6515)
!6519 = !DILocation(line: 1702, column: 16, scope: !6515)
!6520 = !DILocation(line: 1702, column: 22, scope: !6515)
!6521 = !DILocation(line: 1702, column: 35, scope: !6515)
!6522 = !DILocation(line: 1702, column: 38, scope: !6515)
!6523 = !DILocation(line: 1702, column: 44, scope: !6515)
!6524 = !DILocation(line: 1702, column: 51, scope: !6515)
!6525 = !DILocation(line: 1702, column: 54, scope: !6515)
!6526 = !DILocation(line: 1702, column: 60, scope: !6515)
!6527 = !DILocation(line: 1702, column: 9, scope: !6515)
!6528 = !DILocation(line: 1702, column: 2, scope: !6515)
!6529 = distinct !DISubprogram(name: "RNA_property_update", scope: !3, file: !3, line: 1705, type: !6530, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6530 = !DISubroutineType(types: !6531)
!6531 = !{null, !5451, !1349, !1021}
!6532 = !DILocalVariable(name: "C", arg: 1, scope: !6529, file: !3, line: 1705, type: !5451)
!6533 = !DILocation(line: 1705, column: 36, scope: !6529)
!6534 = !DILocalVariable(name: "ptr", arg: 2, scope: !6529, file: !3, line: 1705, type: !1349)
!6535 = !DILocation(line: 1705, column: 51, scope: !6529)
!6536 = !DILocalVariable(name: "prop", arg: 3, scope: !6529, file: !3, line: 1705, type: !1021)
!6537 = !DILocation(line: 1705, column: 69, scope: !6529)
!6538 = !DILocation(line: 1707, column: 22, scope: !6529)
!6539 = !DILocation(line: 1707, column: 39, scope: !6529)
!6540 = !DILocation(line: 1707, column: 25, scope: !6529)
!6541 = !DILocation(line: 1707, column: 58, scope: !6529)
!6542 = !DILocation(line: 1707, column: 43, scope: !6529)
!6543 = !DILocation(line: 1707, column: 62, scope: !6529)
!6544 = !DILocation(line: 1707, column: 67, scope: !6529)
!6545 = !DILocation(line: 1707, column: 2, scope: !6529)
!6546 = !DILocation(line: 1708, column: 1, scope: !6529)
!6547 = distinct !DISubprogram(name: "rna_property_update", scope: !3, file: !3, line: 1663, type: !6548, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6548 = !DISubroutineType(types: !6549)
!6549 = !{null, !5451, !6550, !6552, !1349, !1021}
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 64)
!6551 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !1099, line: 104, baseType: !1098)
!6552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6553, size: 64)
!6553 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1397, line: 1299, baseType: !1396)
!6554 = !DILocalVariable(name: "C", arg: 1, scope: !6547, file: !3, line: 1663, type: !5451)
!6555 = !DILocation(line: 1663, column: 43, scope: !6547)
!6556 = !DILocalVariable(name: "bmain", arg: 2, scope: !6547, file: !3, line: 1663, type: !6550)
!6557 = !DILocation(line: 1663, column: 52, scope: !6547)
!6558 = !DILocalVariable(name: "scene", arg: 3, scope: !6547, file: !3, line: 1663, type: !6552)
!6559 = !DILocation(line: 1663, column: 66, scope: !6547)
!6560 = !DILocalVariable(name: "ptr", arg: 4, scope: !6547, file: !3, line: 1663, type: !1349)
!6561 = !DILocation(line: 1663, column: 85, scope: !6547)
!6562 = !DILocalVariable(name: "prop", arg: 5, scope: !6547, file: !3, line: 1663, type: !1021)
!6563 = !DILocation(line: 1663, column: 103, scope: !6547)
!6564 = !DILocalVariable(name: "is_rna", scope: !6547, file: !3, line: 1665, type: !6433)
!6565 = !DILocation(line: 1665, column: 13, scope: !6547)
!6566 = !DILocation(line: 1665, column: 23, scope: !6547)
!6567 = !DILocation(line: 1665, column: 29, scope: !6547)
!6568 = !DILocation(line: 1665, column: 35, scope: !6547)
!6569 = !DILocation(line: 1665, column: 22, scope: !6547)
!6570 = !DILocation(line: 1666, column: 29, scope: !6547)
!6571 = !DILocation(line: 1666, column: 9, scope: !6547)
!6572 = !DILocation(line: 1666, column: 7, scope: !6547)
!6573 = !DILocation(line: 1668, column: 6, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1668, column: 6)
!6575 = !DILocation(line: 1668, column: 6, scope: !6547)
!6576 = !DILocation(line: 1669, column: 7, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 1669, column: 7)
!6578 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1668, column: 14)
!6579 = !DILocation(line: 1669, column: 13, scope: !6577)
!6580 = !DILocation(line: 1669, column: 7, scope: !6578)
!6581 = !DILocation(line: 1672, column: 8, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1672, column: 8)
!6583 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 1669, column: 21)
!6584 = !DILocation(line: 1672, column: 14, scope: !6582)
!6585 = !DILocation(line: 1672, column: 19, scope: !6582)
!6586 = !DILocation(line: 1672, column: 8, scope: !6583)
!6587 = !DILocation(line: 1673, column: 9, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 1673, column: 9)
!6589 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 1672, column: 42)
!6590 = !DILocation(line: 1673, column: 9, scope: !6589)
!6591 = !DILocation(line: 1674, column: 10, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1674, column: 10)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 1673, column: 12)
!6594 = !DILocation(line: 1674, column: 16, scope: !6592)
!6595 = !DILocation(line: 1674, column: 21, scope: !6592)
!6596 = !DILocation(line: 1674, column: 10, scope: !6593)
!6597 = !DILocation(line: 1675, column: 31, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 1674, column: 53)
!6599 = !DILocation(line: 1675, column: 37, scope: !6598)
!6600 = !DILocation(line: 1675, column: 8, scope: !6598)
!6601 = !DILocation(line: 1675, column: 45, scope: !6598)
!6602 = !DILocation(line: 1675, column: 48, scope: !6598)
!6603 = !DILocation(line: 1675, column: 53, scope: !6598)
!6604 = !DILocation(line: 1675, column: 7, scope: !6598)
!6605 = !DILocation(line: 1676, column: 6, scope: !6598)
!6606 = !DILocation(line: 1678, column: 27, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 1677, column: 11)
!6608 = !DILocation(line: 1678, column: 33, scope: !6607)
!6609 = !DILocation(line: 1678, column: 8, scope: !6607)
!6610 = !DILocation(line: 1678, column: 41, scope: !6607)
!6611 = !DILocation(line: 1678, column: 44, scope: !6607)
!6612 = !DILocation(line: 1678, column: 7, scope: !6607)
!6613 = !DILocation(line: 1680, column: 5, scope: !6593)
!6614 = !DILocation(line: 1681, column: 4, scope: !6589)
!6615 = !DILocation(line: 1683, column: 5, scope: !6582)
!6616 = !DILocation(line: 1683, column: 11, scope: !6582)
!6617 = !DILocation(line: 1683, column: 18, scope: !6582)
!6618 = !DILocation(line: 1683, column: 25, scope: !6582)
!6619 = !DILocation(line: 1683, column: 32, scope: !6582)
!6620 = !DILocation(line: 1684, column: 3, scope: !6583)
!6621 = !DILocation(line: 1685, column: 7, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 1685, column: 7)
!6623 = !DILocation(line: 1685, column: 13, scope: !6622)
!6624 = !DILocation(line: 1685, column: 7, scope: !6578)
!6625 = !DILocation(line: 1686, column: 25, scope: !6622)
!6626 = !DILocation(line: 1686, column: 31, scope: !6622)
!6627 = !DILocation(line: 1686, column: 41, scope: !6622)
!6628 = !DILocation(line: 1686, column: 46, scope: !6622)
!6629 = !DILocation(line: 1686, column: 49, scope: !6622)
!6630 = !DILocation(line: 1686, column: 4, scope: !6622)
!6631 = !DILocation(line: 1687, column: 2, scope: !6578)
!6632 = !DILocation(line: 1689, column: 7, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1689, column: 6)
!6634 = !DILocation(line: 1689, column: 14, scope: !6633)
!6635 = !DILocation(line: 1689, column: 18, scope: !6633)
!6636 = !DILocation(line: 1689, column: 24, scope: !6633)
!6637 = !DILocation(line: 1689, column: 29, scope: !6633)
!6638 = !DILocation(line: 1689, column: 6, scope: !6547)
!6639 = !DILocation(line: 1692, column: 21, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 1689, column: 49)
!6641 = !DILocation(line: 1692, column: 26, scope: !6640)
!6642 = !DILocation(line: 1692, column: 29, scope: !6640)
!6643 = !DILocation(line: 1692, column: 3, scope: !6640)
!6644 = !DILocation(line: 1693, column: 3, scope: !6640)
!6645 = !DILocation(line: 1694, column: 2, scope: !6640)
!6646 = !DILocation(line: 1695, column: 1, scope: !6547)
!6647 = distinct !DISubprogram(name: "RNA_property_update_main", scope: !3, file: !3, line: 1710, type: !6648, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6648 = !DISubroutineType(types: !6649)
!6649 = !{null, !6550, !6552, !1349, !1021}
!6650 = !DILocalVariable(name: "bmain", arg: 1, scope: !6647, file: !3, line: 1710, type: !6550)
!6651 = !DILocation(line: 1710, column: 37, scope: !6647)
!6652 = !DILocalVariable(name: "scene", arg: 2, scope: !6647, file: !3, line: 1710, type: !6552)
!6653 = !DILocation(line: 1710, column: 51, scope: !6647)
!6654 = !DILocalVariable(name: "ptr", arg: 3, scope: !6647, file: !3, line: 1710, type: !1349)
!6655 = !DILocation(line: 1710, column: 70, scope: !6647)
!6656 = !DILocalVariable(name: "prop", arg: 4, scope: !6647, file: !3, line: 1710, type: !1021)
!6657 = !DILocation(line: 1710, column: 88, scope: !6647)
!6658 = !DILocation(line: 1712, column: 28, scope: !6647)
!6659 = !DILocation(line: 1712, column: 35, scope: !6647)
!6660 = !DILocation(line: 1712, column: 42, scope: !6647)
!6661 = !DILocation(line: 1712, column: 47, scope: !6647)
!6662 = !DILocation(line: 1712, column: 2, scope: !6647)
!6663 = !DILocation(line: 1713, column: 1, scope: !6647)
!6664 = distinct !DISubprogram(name: "RNA_property_update_cache_add", scope: !3, file: !3, line: 1743, type: !6665, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6665 = !DISubroutineType(types: !6666)
!6666 = !{null, !1349, !1021}
!6667 = !DILocalVariable(name: "ptr", arg: 1, scope: !6664, file: !3, line: 1743, type: !1349)
!6668 = !DILocation(line: 1743, column: 48, scope: !6664)
!6669 = !DILocalVariable(name: "prop", arg: 2, scope: !6664, file: !3, line: 1743, type: !1021)
!6670 = !DILocation(line: 1743, column: 66, scope: !6664)
!6671 = !DILocalVariable(name: "is_rna", scope: !6664, file: !3, line: 1745, type: !6433)
!6672 = !DILocation(line: 1745, column: 13, scope: !6664)
!6673 = !DILocation(line: 1745, column: 23, scope: !6664)
!6674 = !DILocation(line: 1745, column: 29, scope: !6664)
!6675 = !DILocation(line: 1745, column: 35, scope: !6664)
!6676 = !DILocation(line: 1745, column: 22, scope: !6664)
!6677 = !DILocalVariable(name: "uce", scope: !6664, file: !3, line: 1746, type: !2929)
!6678 = !DILocation(line: 1746, column: 23, scope: !6664)
!6679 = !DILocalVariable(name: "fn", scope: !6664, file: !3, line: 1747, type: !1391)
!6680 = !DILocation(line: 1747, column: 13, scope: !6664)
!6681 = !DILocalVariable(name: "ld", scope: !6664, file: !3, line: 1748, type: !6682)
!6682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6683, size: 64)
!6683 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkData", file: !1012, line: 66, baseType: !6684)
!6684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkData", file: !1012, line: 63, size: 192, elements: !6685)
!6685 = !{!6686, !6688, !6689}
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6684, file: !1012, line: 64, baseType: !6687, size: 64)
!6687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6684, size: 64)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6684, file: !1012, line: 64, baseType: !6687, size: 64, offset: 64)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6684, file: !1012, line: 65, baseType: !986, size: 64, offset: 128)
!6690 = !DILocation(line: 1748, column: 12, scope: !6664)
!6691 = !DILocation(line: 1751, column: 14, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1751, column: 6)
!6693 = !DILocation(line: 1751, column: 11, scope: !6692)
!6694 = !DILocation(line: 1751, column: 6, scope: !6664)
!6695 = !DILocation(line: 1752, column: 3, scope: !6692)
!6696 = !DILocation(line: 1754, column: 29, scope: !6664)
!6697 = !DILocation(line: 1754, column: 9, scope: !6664)
!6698 = !DILocation(line: 1754, column: 7, scope: !6664)
!6699 = !DILocation(line: 1757, column: 7, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1757, column: 6)
!6701 = !DILocation(line: 1757, column: 14, scope: !6700)
!6702 = !DILocation(line: 1757, column: 24, scope: !6700)
!6703 = !DILocation(line: 1757, column: 28, scope: !6700)
!6704 = !DILocation(line: 1757, column: 34, scope: !6700)
!6705 = !DILocation(line: 1757, column: 41, scope: !6700)
!6706 = !DILocation(line: 1757, column: 50, scope: !6700)
!6707 = !DILocation(line: 1757, column: 54, scope: !6700)
!6708 = !DILocation(line: 1757, column: 60, scope: !6700)
!6709 = !DILocation(line: 1757, column: 65, scope: !6700)
!6710 = !DILocation(line: 1757, column: 6, scope: !6664)
!6711 = !DILocation(line: 1758, column: 3, scope: !6700)
!6712 = !DILocation(line: 1759, column: 7, scope: !6664)
!6713 = !DILocation(line: 1759, column: 13, scope: !6664)
!6714 = !DILocation(line: 1759, column: 5, scope: !6664)
!6715 = !DILocation(line: 1762, column: 31, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1762, column: 2)
!6717 = !DILocation(line: 1762, column: 13, scope: !6716)
!6718 = !DILocation(line: 1762, column: 11, scope: !6716)
!6719 = !DILocation(line: 1762, column: 7, scope: !6716)
!6720 = !DILocation(line: 1762, column: 38, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 1762, column: 2)
!6722 = !DILocation(line: 1762, column: 2, scope: !6716)
!6723 = !DILocation(line: 1766, column: 7, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1766, column: 7)
!6725 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 1762, column: 60)
!6726 = !DILocation(line: 1766, column: 12, scope: !6724)
!6727 = !DILocation(line: 1766, column: 16, scope: !6724)
!6728 = !DILocation(line: 1766, column: 19, scope: !6724)
!6729 = !DILocation(line: 1766, column: 27, scope: !6724)
!6730 = !DILocation(line: 1766, column: 32, scope: !6724)
!6731 = !DILocation(line: 1766, column: 35, scope: !6724)
!6732 = !DILocation(line: 1766, column: 24, scope: !6724)
!6733 = !DILocation(line: 1766, column: 7, scope: !6725)
!6734 = !DILocation(line: 1767, column: 4, scope: !6724)
!6735 = !DILocation(line: 1768, column: 2, scope: !6725)
!6736 = !DILocation(line: 1762, column: 49, scope: !6721)
!6737 = !DILocation(line: 1762, column: 54, scope: !6721)
!6738 = !DILocation(line: 1762, column: 47, scope: !6721)
!6739 = !DILocation(line: 1762, column: 2, scope: !6721)
!6740 = distinct !{!6740, !6722, !6741}
!6741 = !DILocation(line: 1768, column: 2, scope: !6716)
!6742 = !DILocation(line: 1769, column: 6, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1769, column: 6)
!6744 = !DILocation(line: 1769, column: 10, scope: !6743)
!6745 = !DILocation(line: 1769, column: 6, scope: !6664)
!6746 = !DILocation(line: 1771, column: 9, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1769, column: 19)
!6748 = !DILocation(line: 1771, column: 7, scope: !6747)
!6749 = !DILocation(line: 1772, column: 35, scope: !6747)
!6750 = !DILocation(line: 1772, column: 3, scope: !6747)
!6751 = !DILocation(line: 1775, column: 22, scope: !6747)
!6752 = !DILocation(line: 1775, column: 27, scope: !6747)
!6753 = !DILocation(line: 1775, column: 30, scope: !6747)
!6754 = !DILocation(line: 1775, column: 36, scope: !6747)
!6755 = !DILocation(line: 1775, column: 41, scope: !6747)
!6756 = !DILocation(line: 1775, column: 47, scope: !6747)
!6757 = !DILocation(line: 1775, column: 52, scope: !6747)
!6758 = !DILocation(line: 1775, column: 59, scope: !6747)
!6759 = !DILocation(line: 1775, column: 64, scope: !6747)
!6760 = !DILocation(line: 1775, column: 3, scope: !6747)
!6761 = !DILocation(line: 1776, column: 2, scope: !6747)
!6762 = !DILocation(line: 1779, column: 12, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1779, column: 2)
!6764 = !DILocation(line: 1779, column: 17, scope: !6763)
!6765 = !DILocation(line: 1779, column: 25, scope: !6763)
!6766 = !DILocation(line: 1779, column: 10, scope: !6763)
!6767 = !DILocation(line: 1779, column: 7, scope: !6763)
!6768 = !DILocation(line: 1779, column: 32, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 1779, column: 2)
!6770 = !DILocation(line: 1779, column: 2, scope: !6763)
!6771 = !DILocation(line: 1781, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 1781, column: 7)
!6773 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 1779, column: 51)
!6774 = !DILocation(line: 1781, column: 13, scope: !6772)
!6775 = !DILocation(line: 1781, column: 17, scope: !6772)
!6776 = !DILocation(line: 1781, column: 10, scope: !6772)
!6777 = !DILocation(line: 1781, column: 7, scope: !6773)
!6778 = !DILocation(line: 1782, column: 4, scope: !6772)
!6779 = !DILocation(line: 1783, column: 2, scope: !6773)
!6780 = !DILocation(line: 1779, column: 41, scope: !6769)
!6781 = !DILocation(line: 1779, column: 45, scope: !6769)
!6782 = !DILocation(line: 1779, column: 39, scope: !6769)
!6783 = !DILocation(line: 1779, column: 2, scope: !6769)
!6784 = distinct !{!6784, !6770, !6785}
!6785 = !DILocation(line: 1783, column: 2, scope: !6763)
!6786 = !DILocation(line: 1785, column: 15, scope: !6664)
!6787 = !DILocation(line: 1785, column: 20, scope: !6664)
!6788 = !DILocation(line: 1785, column: 46, scope: !6664)
!6789 = !DILocation(line: 1785, column: 29, scope: !6664)
!6790 = !DILocation(line: 1785, column: 2, scope: !6664)
!6791 = !DILocation(line: 1786, column: 1, scope: !6664)
!6792 = distinct !DISubprogram(name: "RNA_property_update_cache_flush", scope: !3, file: !3, line: 1788, type: !6793, scopeLine: 1789, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6793 = !DISubroutineType(types: !6794)
!6794 = !{null, !6550, !6552}
!6795 = !DILocalVariable(name: "bmain", arg: 1, scope: !6792, file: !3, line: 1788, type: !6550)
!6796 = !DILocation(line: 1788, column: 44, scope: !6792)
!6797 = !DILocalVariable(name: "scene", arg: 2, scope: !6792, file: !3, line: 1788, type: !6552)
!6798 = !DILocation(line: 1788, column: 58, scope: !6792)
!6799 = !DILocalVariable(name: "uce", scope: !6792, file: !3, line: 1790, type: !2929)
!6800 = !DILocation(line: 1790, column: 23, scope: !6792)
!6801 = !DILocation(line: 1795, column: 31, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1795, column: 2)
!6803 = !DILocation(line: 1795, column: 13, scope: !6802)
!6804 = !DILocation(line: 1795, column: 11, scope: !6802)
!6805 = !DILocation(line: 1795, column: 7, scope: !6802)
!6806 = !DILocation(line: 1795, column: 38, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 1795, column: 2)
!6808 = !DILocation(line: 1795, column: 2, scope: !6802)
!6809 = !DILocalVariable(name: "ld", scope: !6810, file: !3, line: 1796, type: !6682)
!6810 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 1795, column: 60)
!6811 = !DILocation(line: 1796, column: 13, scope: !6810)
!6812 = !DILocation(line: 1798, column: 13, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 1798, column: 3)
!6814 = !DILocation(line: 1798, column: 18, scope: !6813)
!6815 = !DILocation(line: 1798, column: 26, scope: !6813)
!6816 = !DILocation(line: 1798, column: 11, scope: !6813)
!6817 = !DILocation(line: 1798, column: 8, scope: !6813)
!6818 = !DILocation(line: 1798, column: 33, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 1798, column: 3)
!6820 = !DILocation(line: 1798, column: 3, scope: !6813)
!6821 = !DILocalVariable(name: "fn", scope: !6822, file: !3, line: 1799, type: !1391)
!6822 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 1798, column: 52)
!6823 = !DILocation(line: 1799, column: 15, scope: !6822)
!6824 = !DILocation(line: 1799, column: 32, scope: !6822)
!6825 = !DILocation(line: 1799, column: 36, scope: !6822)
!6826 = !DILocation(line: 1799, column: 20, scope: !6822)
!6827 = !DILocation(line: 1800, column: 4, scope: !6822)
!6828 = !DILocation(line: 1800, column: 7, scope: !6822)
!6829 = !DILocation(line: 1800, column: 14, scope: !6822)
!6830 = !DILocation(line: 1800, column: 22, scope: !6822)
!6831 = !DILocation(line: 1800, column: 27, scope: !6822)
!6832 = !DILocation(line: 1801, column: 3, scope: !6822)
!6833 = !DILocation(line: 1798, column: 42, scope: !6819)
!6834 = !DILocation(line: 1798, column: 46, scope: !6819)
!6835 = !DILocation(line: 1798, column: 40, scope: !6819)
!6836 = !DILocation(line: 1798, column: 3, scope: !6819)
!6837 = distinct !{!6837, !6820, !6838}
!6838 = !DILocation(line: 1801, column: 3, scope: !6813)
!6839 = !DILocation(line: 1802, column: 2, scope: !6810)
!6840 = !DILocation(line: 1795, column: 49, scope: !6807)
!6841 = !DILocation(line: 1795, column: 54, scope: !6807)
!6842 = !DILocation(line: 1795, column: 47, scope: !6807)
!6843 = !DILocation(line: 1795, column: 2, scope: !6807)
!6844 = distinct !{!6844, !6808, !6845}
!6845 = !DILocation(line: 1802, column: 2, scope: !6802)
!6846 = !DILocation(line: 1803, column: 1, scope: !6792)
!6847 = distinct !DISubprogram(name: "RNA_property_boolean_get", scope: !3, file: !3, line: 1824, type: !4409, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6848 = !DILocalVariable(name: "ptr", arg: 1, scope: !6847, file: !3, line: 1824, type: !1349)
!6849 = !DILocation(line: 1824, column: 42, scope: !6847)
!6850 = !DILocalVariable(name: "prop", arg: 2, scope: !6847, file: !3, line: 1824, type: !1021)
!6851 = !DILocation(line: 1824, column: 60, scope: !6847)
!6852 = !DILocalVariable(name: "bprop", scope: !6847, file: !3, line: 1826, type: !2760)
!6853 = !DILocation(line: 1826, column: 19, scope: !6847)
!6854 = !DILocation(line: 1826, column: 46, scope: !6847)
!6855 = !DILocation(line: 1826, column: 27, scope: !6847)
!6856 = !DILocalVariable(name: "idprop", scope: !6847, file: !3, line: 1827, type: !987)
!6857 = !DILocation(line: 1827, column: 14, scope: !6847)
!6858 = !DILocation(line: 1832, column: 44, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1832, column: 6)
!6860 = !DILocation(line: 1832, column: 16, scope: !6859)
!6861 = !DILocation(line: 1832, column: 14, scope: !6859)
!6862 = !DILocation(line: 1832, column: 6, scope: !6847)
!6863 = !DILocation(line: 1833, column: 10, scope: !6859)
!6864 = !DILocation(line: 1833, column: 3, scope: !6859)
!6865 = !DILocation(line: 1834, column: 11, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 1834, column: 11)
!6867 = !DILocation(line: 1834, column: 18, scope: !6866)
!6868 = !DILocation(line: 1834, column: 11, scope: !6859)
!6869 = !DILocation(line: 1835, column: 10, scope: !6866)
!6870 = !DILocation(line: 1835, column: 17, scope: !6866)
!6871 = !DILocation(line: 1835, column: 21, scope: !6866)
!6872 = !DILocation(line: 1835, column: 3, scope: !6866)
!6873 = !DILocation(line: 1836, column: 11, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 1836, column: 11)
!6875 = !DILocation(line: 1836, column: 18, scope: !6874)
!6876 = !DILocation(line: 1836, column: 11, scope: !6866)
!6877 = !DILocation(line: 1837, column: 10, scope: !6874)
!6878 = !DILocation(line: 1837, column: 17, scope: !6874)
!6879 = !DILocation(line: 1837, column: 24, scope: !6874)
!6880 = !DILocation(line: 1837, column: 29, scope: !6874)
!6881 = !DILocation(line: 1837, column: 3, scope: !6874)
!6882 = !DILocation(line: 1839, column: 10, scope: !6874)
!6883 = !DILocation(line: 1839, column: 17, scope: !6874)
!6884 = !DILocation(line: 1839, column: 3, scope: !6874)
!6885 = !DILocation(line: 1840, column: 1, scope: !6847)
!6886 = distinct !DISubprogram(name: "RNA_property_boolean_set", scope: !3, file: !3, line: 1842, type: !6887, scopeLine: 1843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{null, !1349, !1021, !48}
!6889 = !DILocalVariable(name: "ptr", arg: 1, scope: !6886, file: !3, line: 1842, type: !1349)
!6890 = !DILocation(line: 1842, column: 43, scope: !6886)
!6891 = !DILocalVariable(name: "prop", arg: 2, scope: !6886, file: !3, line: 1842, type: !1021)
!6892 = !DILocation(line: 1842, column: 61, scope: !6886)
!6893 = !DILocalVariable(name: "value", arg: 3, scope: !6886, file: !3, line: 1842, type: !48)
!6894 = !DILocation(line: 1842, column: 71, scope: !6886)
!6895 = !DILocalVariable(name: "bprop", scope: !6886, file: !3, line: 1844, type: !2760)
!6896 = !DILocation(line: 1844, column: 19, scope: !6886)
!6897 = !DILocation(line: 1844, column: 46, scope: !6886)
!6898 = !DILocation(line: 1844, column: 27, scope: !6886)
!6899 = !DILocalVariable(name: "idprop", scope: !6886, file: !3, line: 1845, type: !987)
!6900 = !DILocation(line: 1845, column: 14, scope: !6886)
!6901 = !DILocation(line: 1851, column: 6, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 1851, column: 6)
!6903 = !DILocation(line: 1851, column: 6, scope: !6886)
!6904 = !DILocation(line: 1851, column: 19, scope: !6902)
!6905 = !DILocation(line: 1851, column: 13, scope: !6902)
!6906 = !DILocation(line: 1853, column: 44, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 1853, column: 6)
!6908 = !DILocation(line: 1853, column: 16, scope: !6907)
!6909 = !DILocation(line: 1853, column: 14, scope: !6907)
!6910 = !DILocation(line: 1853, column: 6, scope: !6886)
!6911 = !DILocation(line: 1854, column: 21, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1853, column: 51)
!6913 = !DILocation(line: 1854, column: 3, scope: !6912)
!6914 = !DILocation(line: 1854, column: 19, scope: !6912)
!6915 = !DILocation(line: 1855, column: 24, scope: !6912)
!6916 = !DILocation(line: 1855, column: 3, scope: !6912)
!6917 = !DILocation(line: 1856, column: 2, scope: !6912)
!6918 = !DILocation(line: 1857, column: 11, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1857, column: 11)
!6920 = !DILocation(line: 1857, column: 18, scope: !6919)
!6921 = !DILocation(line: 1857, column: 11, scope: !6907)
!6922 = !DILocation(line: 1858, column: 3, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 1857, column: 23)
!6924 = !DILocation(line: 1858, column: 10, scope: !6923)
!6925 = !DILocation(line: 1858, column: 14, scope: !6923)
!6926 = !DILocation(line: 1858, column: 19, scope: !6923)
!6927 = !DILocation(line: 1859, column: 2, scope: !6923)
!6928 = !DILocation(line: 1860, column: 11, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 1860, column: 11)
!6930 = !DILocation(line: 1860, column: 18, scope: !6929)
!6931 = !DILocation(line: 1860, column: 11, scope: !6919)
!6932 = !DILocation(line: 1861, column: 3, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 1860, column: 26)
!6934 = !DILocation(line: 1861, column: 10, scope: !6933)
!6935 = !DILocation(line: 1861, column: 17, scope: !6933)
!6936 = !DILocation(line: 1861, column: 22, scope: !6933)
!6937 = !DILocation(line: 1861, column: 28, scope: !6933)
!6938 = !DILocation(line: 1862, column: 2, scope: !6933)
!6939 = !DILocation(line: 1863, column: 11, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 1863, column: 11)
!6941 = !DILocation(line: 1863, column: 17, scope: !6940)
!6942 = !DILocation(line: 1863, column: 22, scope: !6940)
!6943 = !DILocation(line: 1863, column: 11, scope: !6929)
!6944 = !DILocalVariable(name: "val", scope: !6945, file: !3, line: 1864, type: !6946)
!6945 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 1863, column: 39)
!6946 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyTemplate", file: !6947, line: 56, baseType: !6948)
!6947 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_idprop.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6948 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "IDPropertyTemplate", file: !6947, line: 38, size: 128, elements: !6949)
!6949 = !{!6950, !6951, !6952, !6953, !6959, !6960, !6965}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6948, file: !6947, line: 39, baseType: !48, size: 32)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !6948, file: !6947, line: 40, baseType: !1285, size: 32)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !6948, file: !6947, line: 41, baseType: !1269, size: 64)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6948, file: !6947, line: 46, baseType: !6954, size: 128)
!6954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6948, file: !6947, line: 42, size: 128, elements: !6955)
!6955 = !{!6956, !6957, !6958}
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6954, file: !6947, line: 43, baseType: !1091, size: 64)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6954, file: !6947, line: 44, baseType: !999, size: 16, offset: 64)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !6954, file: !6947, line: 45, baseType: !996, size: 8, offset: 80)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6948, file: !6947, line: 47, baseType: !1133, size: 64)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !6948, file: !6947, line: 51, baseType: !6961, size: 32)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6948, file: !6947, line: 48, size: 32, elements: !6962)
!6962 = !{!6963, !6964}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6961, file: !6947, line: 49, baseType: !999, size: 16)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6961, file: !6947, line: 50, baseType: !999, size: 16, offset: 16)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_or_vector", scope: !6948, file: !6947, line: 55, baseType: !6966, size: 128)
!6966 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6948, file: !6947, line: 52, size: 128, elements: !6967)
!6967 = !{!6968, !6969}
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "matvec_size", scope: !6966, file: !6947, line: 53, baseType: !48, size: 32)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "example", scope: !6966, file: !6947, line: 54, baseType: !2540, size: 64, offset: 64)
!6970 = !DILocation(line: 1864, column: 22, scope: !6945)
!6971 = !DILocalVariable(name: "group", scope: !6945, file: !3, line: 1865, type: !987)
!6972 = !DILocation(line: 1865, column: 15, scope: !6945)
!6973 = !DILocation(line: 1867, column: 11, scope: !6945)
!6974 = !DILocation(line: 1867, column: 7, scope: !6945)
!6975 = !DILocation(line: 1867, column: 9, scope: !6945)
!6976 = !DILocation(line: 1869, column: 30, scope: !6945)
!6977 = !DILocation(line: 1869, column: 11, scope: !6945)
!6978 = !DILocation(line: 1869, column: 9, scope: !6945)
!6979 = !DILocation(line: 1870, column: 7, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1870, column: 7)
!6981 = !DILocation(line: 1870, column: 7, scope: !6945)
!6982 = !DILocation(line: 1871, column: 19, scope: !6980)
!6983 = !DILocation(line: 1871, column: 49, scope: !6980)
!6984 = !DILocation(line: 1871, column: 55, scope: !6980)
!6985 = !DILocation(line: 1871, column: 26, scope: !6980)
!6986 = !DILocation(line: 1871, column: 4, scope: !6980)
!6987 = !DILocation(line: 1872, column: 2, scope: !6945)
!6988 = !DILocation(line: 1873, column: 1, scope: !6886)
!6989 = distinct !DISubprogram(name: "rna_idproperty_touch", scope: !3, file: !3, line: 232, type: !6990, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{null, !987}
!6992 = !DILocalVariable(name: "idprop", arg: 1, scope: !6989, file: !3, line: 232, type: !987)
!6993 = !DILocation(line: 232, column: 46, scope: !6989)
!6994 = !DILocation(line: 235, column: 2, scope: !6989)
!6995 = !DILocation(line: 235, column: 10, scope: !6989)
!6996 = !DILocation(line: 235, column: 15, scope: !6989)
!6997 = !DILocation(line: 236, column: 1, scope: !6989)
!6998 = distinct !DISubprogram(name: "RNA_property_boolean_get_array", scope: !3, file: !3, line: 1875, type: !4519, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!6999 = !DILocalVariable(name: "ptr", arg: 1, scope: !6998, file: !3, line: 1875, type: !1349)
!7000 = !DILocation(line: 1875, column: 49, scope: !6998)
!7001 = !DILocalVariable(name: "prop", arg: 2, scope: !6998, file: !3, line: 1875, type: !1021)
!7002 = !DILocation(line: 1875, column: 67, scope: !6998)
!7003 = !DILocalVariable(name: "values", arg: 3, scope: !6998, file: !3, line: 1875, type: !1330)
!7004 = !DILocation(line: 1875, column: 78, scope: !6998)
!7005 = !DILocalVariable(name: "bprop", scope: !6998, file: !3, line: 1877, type: !2760)
!7006 = !DILocation(line: 1877, column: 19, scope: !6998)
!7007 = !DILocation(line: 1877, column: 46, scope: !6998)
!7008 = !DILocation(line: 1877, column: 27, scope: !6998)
!7009 = !DILocalVariable(name: "idprop", scope: !6998, file: !3, line: 1878, type: !987)
!7010 = !DILocation(line: 1878, column: 14, scope: !6998)
!7011 = !DILocation(line: 1883, column: 44, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 1883, column: 6)
!7013 = !DILocation(line: 1883, column: 16, scope: !7012)
!7014 = !DILocation(line: 1883, column: 14, scope: !7012)
!7015 = !DILocation(line: 1883, column: 6, scope: !6998)
!7016 = !DILocation(line: 1884, column: 7, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 1884, column: 7)
!7018 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1883, column: 51)
!7019 = !DILocation(line: 1884, column: 13, scope: !7017)
!7020 = !DILocation(line: 1884, column: 28, scope: !7017)
!7021 = !DILocation(line: 1884, column: 7, scope: !7018)
!7022 = !DILocation(line: 1885, column: 41, scope: !7017)
!7023 = !DILocation(line: 1885, column: 46, scope: !7017)
!7024 = !DILocation(line: 1885, column: 16, scope: !7017)
!7025 = !DILocation(line: 1885, column: 4, scope: !7017)
!7026 = !DILocation(line: 1885, column: 14, scope: !7017)
!7027 = !DILocation(line: 1887, column: 11, scope: !7017)
!7028 = !DILocation(line: 1887, column: 4, scope: !7017)
!7029 = !DILocation(line: 1887, column: 19, scope: !7017)
!7030 = !DILocation(line: 1887, column: 52, scope: !7017)
!7031 = !DILocation(line: 1887, column: 60, scope: !7017)
!7032 = !DILocation(line: 1887, column: 50, scope: !7017)
!7033 = !DILocation(line: 1888, column: 2, scope: !7018)
!7034 = !DILocation(line: 1889, column: 11, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1889, column: 11)
!7036 = !DILocation(line: 1889, column: 17, scope: !7035)
!7037 = !DILocation(line: 1889, column: 32, scope: !7035)
!7038 = !DILocation(line: 1889, column: 11, scope: !7012)
!7039 = !DILocation(line: 1890, column: 40, scope: !7035)
!7040 = !DILocation(line: 1890, column: 45, scope: !7035)
!7041 = !DILocation(line: 1890, column: 15, scope: !7035)
!7042 = !DILocation(line: 1890, column: 3, scope: !7035)
!7043 = !DILocation(line: 1890, column: 13, scope: !7035)
!7044 = !DILocation(line: 1891, column: 11, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 1891, column: 11)
!7046 = !DILocation(line: 1891, column: 18, scope: !7045)
!7047 = !DILocation(line: 1891, column: 11, scope: !7035)
!7048 = !DILocation(line: 1892, column: 3, scope: !7045)
!7049 = !DILocation(line: 1892, column: 10, scope: !7045)
!7050 = !DILocation(line: 1892, column: 19, scope: !7045)
!7051 = !DILocation(line: 1892, column: 24, scope: !7045)
!7052 = !DILocation(line: 1893, column: 11, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 1893, column: 11)
!7054 = !DILocation(line: 1893, column: 18, scope: !7053)
!7055 = !DILocation(line: 1893, column: 11, scope: !7045)
!7056 = !DILocation(line: 1894, column: 3, scope: !7053)
!7057 = !DILocation(line: 1894, column: 10, scope: !7053)
!7058 = !DILocation(line: 1894, column: 22, scope: !7053)
!7059 = !DILocation(line: 1894, column: 27, scope: !7053)
!7060 = !DILocation(line: 1894, column: 33, scope: !7053)
!7061 = !DILocation(line: 1895, column: 11, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 1895, column: 11)
!7063 = !DILocation(line: 1895, column: 18, scope: !7062)
!7064 = !DILocation(line: 1895, column: 11, scope: !7053)
!7065 = !DILocation(line: 1896, column: 10, scope: !7062)
!7066 = !DILocation(line: 1896, column: 3, scope: !7062)
!7067 = !DILocation(line: 1896, column: 18, scope: !7062)
!7068 = !DILocation(line: 1896, column: 25, scope: !7062)
!7069 = !DILocation(line: 1896, column: 53, scope: !7062)
!7070 = !DILocation(line: 1896, column: 59, scope: !7062)
!7071 = !DILocation(line: 1896, column: 51, scope: !7062)
!7072 = !DILocation(line: 1898, column: 10, scope: !7062)
!7073 = !DILocation(line: 1898, column: 3, scope: !7062)
!7074 = !DILocation(line: 1898, column: 35, scope: !7062)
!7075 = !DILocation(line: 1898, column: 41, scope: !7062)
!7076 = !DILocation(line: 1898, column: 33, scope: !7062)
!7077 = !DILocation(line: 1899, column: 1, scope: !6998)
!7078 = distinct !DISubprogram(name: "RNA_property_boolean_get_index", scope: !3, file: !3, line: 1901, type: !4567, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7079 = !DILocalVariable(name: "ptr", arg: 1, scope: !7078, file: !3, line: 1901, type: !1349)
!7080 = !DILocation(line: 1901, column: 48, scope: !7078)
!7081 = !DILocalVariable(name: "prop", arg: 2, scope: !7078, file: !3, line: 1901, type: !1021)
!7082 = !DILocation(line: 1901, column: 66, scope: !7078)
!7083 = !DILocalVariable(name: "index", arg: 3, scope: !7078, file: !3, line: 1901, type: !48)
!7084 = !DILocation(line: 1901, column: 76, scope: !7078)
!7085 = !DILocalVariable(name: "tmp", scope: !7078, file: !3, line: 1903, type: !7086)
!7086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 1024, elements: !2294)
!7087 = !DILocation(line: 1903, column: 6, scope: !7078)
!7088 = !DILocalVariable(name: "len", scope: !7078, file: !3, line: 1904, type: !48)
!7089 = !DILocation(line: 1904, column: 6, scope: !7078)
!7090 = !DILocation(line: 1904, column: 45, scope: !7078)
!7091 = !DILocation(line: 1904, column: 50, scope: !7078)
!7092 = !DILocation(line: 1904, column: 12, scope: !7078)
!7093 = !DILocation(line: 1910, column: 6, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 1910, column: 6)
!7095 = !DILocation(line: 1910, column: 10, scope: !7094)
!7096 = !DILocation(line: 1910, column: 6, scope: !7078)
!7097 = !DILocation(line: 1911, column: 34, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1910, column: 35)
!7099 = !DILocation(line: 1911, column: 39, scope: !7098)
!7100 = !DILocation(line: 1911, column: 45, scope: !7098)
!7101 = !DILocation(line: 1911, column: 3, scope: !7098)
!7102 = !DILocation(line: 1912, column: 14, scope: !7098)
!7103 = !DILocation(line: 1912, column: 10, scope: !7098)
!7104 = !DILocation(line: 1912, column: 3, scope: !7098)
!7105 = !DILocalVariable(name: "tmparray", scope: !7106, file: !3, line: 1915, type: !1330)
!7106 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1914, column: 7)
!7107 = !DILocation(line: 1915, column: 8, scope: !7106)
!7108 = !DILocalVariable(name: "value", scope: !7106, file: !3, line: 1915, type: !48)
!7109 = !DILocation(line: 1915, column: 18, scope: !7106)
!7110 = !DILocation(line: 1917, column: 14, scope: !7106)
!7111 = !DILocation(line: 1917, column: 40, scope: !7106)
!7112 = !DILocation(line: 1917, column: 38, scope: !7106)
!7113 = !DILocation(line: 1917, column: 12, scope: !7106)
!7114 = !DILocation(line: 1918, column: 34, scope: !7106)
!7115 = !DILocation(line: 1918, column: 39, scope: !7106)
!7116 = !DILocation(line: 1918, column: 45, scope: !7106)
!7117 = !DILocation(line: 1918, column: 3, scope: !7106)
!7118 = !DILocation(line: 1919, column: 11, scope: !7106)
!7119 = !DILocation(line: 1919, column: 20, scope: !7106)
!7120 = !DILocation(line: 1919, column: 9, scope: !7106)
!7121 = !DILocation(line: 1920, column: 3, scope: !7106)
!7122 = !DILocation(line: 1920, column: 13, scope: !7106)
!7123 = !DILocation(line: 1922, column: 10, scope: !7106)
!7124 = !DILocation(line: 1922, column: 3, scope: !7106)
!7125 = !DILocation(line: 1924, column: 1, scope: !7078)
!7126 = distinct !DISubprogram(name: "RNA_property_boolean_set_array", scope: !3, file: !3, line: 1926, type: !7127, scopeLine: 1927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{null, !1349, !1021, !2481}
!7129 = !DILocalVariable(name: "ptr", arg: 1, scope: !7126, file: !3, line: 1926, type: !1349)
!7130 = !DILocation(line: 1926, column: 49, scope: !7126)
!7131 = !DILocalVariable(name: "prop", arg: 2, scope: !7126, file: !3, line: 1926, type: !1021)
!7132 = !DILocation(line: 1926, column: 67, scope: !7126)
!7133 = !DILocalVariable(name: "values", arg: 3, scope: !7126, file: !3, line: 1926, type: !2481)
!7134 = !DILocation(line: 1926, column: 84, scope: !7126)
!7135 = !DILocalVariable(name: "bprop", scope: !7126, file: !3, line: 1928, type: !2760)
!7136 = !DILocation(line: 1928, column: 19, scope: !7126)
!7137 = !DILocation(line: 1928, column: 46, scope: !7126)
!7138 = !DILocation(line: 1928, column: 27, scope: !7126)
!7139 = !DILocalVariable(name: "idprop", scope: !7126, file: !3, line: 1929, type: !987)
!7140 = !DILocation(line: 1929, column: 14, scope: !7126)
!7141 = !DILocation(line: 1934, column: 44, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1934, column: 6)
!7143 = !DILocation(line: 1934, column: 16, scope: !7142)
!7144 = !DILocation(line: 1934, column: 14, scope: !7142)
!7145 = !DILocation(line: 1934, column: 6, scope: !7126)
!7146 = !DILocation(line: 1935, column: 7, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1935, column: 7)
!7148 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 1934, column: 51)
!7149 = !DILocation(line: 1935, column: 13, scope: !7147)
!7150 = !DILocation(line: 1935, column: 28, scope: !7147)
!7151 = !DILocation(line: 1935, column: 7, scope: !7148)
!7152 = !DILocation(line: 1936, column: 22, scope: !7147)
!7153 = !DILocation(line: 1936, column: 4, scope: !7147)
!7154 = !DILocation(line: 1936, column: 20, scope: !7147)
!7155 = !DILocation(line: 1938, column: 11, scope: !7147)
!7156 = !DILocation(line: 1938, column: 30, scope: !7147)
!7157 = !DILocation(line: 1938, column: 4, scope: !7147)
!7158 = !DILocation(line: 1938, column: 52, scope: !7147)
!7159 = !DILocation(line: 1938, column: 60, scope: !7147)
!7160 = !DILocation(line: 1938, column: 50, scope: !7147)
!7161 = !DILocation(line: 1940, column: 24, scope: !7148)
!7162 = !DILocation(line: 1940, column: 3, scope: !7148)
!7163 = !DILocation(line: 1941, column: 2, scope: !7148)
!7164 = !DILocation(line: 1942, column: 11, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 1942, column: 11)
!7166 = !DILocation(line: 1942, column: 17, scope: !7165)
!7167 = !DILocation(line: 1942, column: 32, scope: !7165)
!7168 = !DILocation(line: 1942, column: 11, scope: !7142)
!7169 = !DILocation(line: 1943, column: 28, scope: !7165)
!7170 = !DILocation(line: 1943, column: 33, scope: !7165)
!7171 = !DILocation(line: 1943, column: 39, scope: !7165)
!7172 = !DILocation(line: 1943, column: 3, scope: !7165)
!7173 = !DILocation(line: 1944, column: 11, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1944, column: 11)
!7175 = !DILocation(line: 1944, column: 18, scope: !7174)
!7176 = !DILocation(line: 1944, column: 11, scope: !7165)
!7177 = !DILocation(line: 1945, column: 3, scope: !7174)
!7178 = !DILocation(line: 1945, column: 10, scope: !7174)
!7179 = !DILocation(line: 1945, column: 19, scope: !7174)
!7180 = !DILocation(line: 1945, column: 24, scope: !7174)
!7181 = !DILocation(line: 1946, column: 11, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 1946, column: 11)
!7183 = !DILocation(line: 1946, column: 18, scope: !7182)
!7184 = !DILocation(line: 1946, column: 11, scope: !7174)
!7185 = !DILocation(line: 1947, column: 3, scope: !7182)
!7186 = !DILocation(line: 1947, column: 10, scope: !7182)
!7187 = !DILocation(line: 1947, column: 22, scope: !7182)
!7188 = !DILocation(line: 1947, column: 27, scope: !7182)
!7189 = !DILocation(line: 1947, column: 33, scope: !7182)
!7190 = !DILocation(line: 1948, column: 11, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1948, column: 11)
!7192 = !DILocation(line: 1948, column: 17, scope: !7191)
!7193 = !DILocation(line: 1948, column: 22, scope: !7191)
!7194 = !DILocation(line: 1948, column: 11, scope: !7182)
!7195 = !DILocalVariable(name: "val", scope: !7196, file: !3, line: 1949, type: !6946)
!7196 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 1948, column: 39)
!7197 = !DILocation(line: 1949, column: 22, scope: !7196)
!7198 = !DILocalVariable(name: "group", scope: !7196, file: !3, line: 1950, type: !987)
!7199 = !DILocation(line: 1950, column: 15, scope: !7196)
!7200 = !DILocation(line: 1952, column: 19, scope: !7196)
!7201 = !DILocation(line: 1952, column: 25, scope: !7196)
!7202 = !DILocation(line: 1952, column: 7, scope: !7196)
!7203 = !DILocation(line: 1952, column: 13, scope: !7196)
!7204 = !DILocation(line: 1952, column: 17, scope: !7196)
!7205 = !DILocation(line: 1953, column: 7, scope: !7196)
!7206 = !DILocation(line: 1953, column: 13, scope: !7196)
!7207 = !DILocation(line: 1953, column: 18, scope: !7196)
!7208 = !DILocation(line: 1955, column: 30, scope: !7196)
!7209 = !DILocation(line: 1955, column: 11, scope: !7196)
!7210 = !DILocation(line: 1955, column: 9, scope: !7196)
!7211 = !DILocation(line: 1956, column: 7, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 1956, column: 7)
!7213 = !DILocation(line: 1956, column: 7, scope: !7196)
!7214 = !DILocation(line: 1957, column: 38, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 1956, column: 14)
!7216 = !DILocation(line: 1957, column: 44, scope: !7215)
!7217 = !DILocation(line: 1957, column: 13, scope: !7215)
!7218 = !DILocation(line: 1957, column: 11, scope: !7215)
!7219 = !DILocation(line: 1958, column: 19, scope: !7215)
!7220 = !DILocation(line: 1958, column: 26, scope: !7215)
!7221 = !DILocation(line: 1958, column: 4, scope: !7215)
!7222 = !DILocation(line: 1959, column: 11, scope: !7215)
!7223 = !DILocation(line: 1959, column: 30, scope: !7215)
!7224 = !DILocation(line: 1959, column: 4, scope: !7215)
!7225 = !DILocation(line: 1959, column: 52, scope: !7215)
!7226 = !DILocation(line: 1959, column: 60, scope: !7215)
!7227 = !DILocation(line: 1959, column: 50, scope: !7215)
!7228 = !DILocation(line: 1960, column: 3, scope: !7215)
!7229 = !DILocation(line: 1961, column: 2, scope: !7196)
!7230 = !DILocation(line: 1962, column: 1, scope: !7126)
!7231 = distinct !DISubprogram(name: "RNA_property_boolean_set_index", scope: !3, file: !3, line: 1964, type: !7232, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7232 = !DISubroutineType(types: !7233)
!7233 = !{null, !1349, !1021, !48, !48}
!7234 = !DILocalVariable(name: "ptr", arg: 1, scope: !7231, file: !3, line: 1964, type: !1349)
!7235 = !DILocation(line: 1964, column: 49, scope: !7231)
!7236 = !DILocalVariable(name: "prop", arg: 2, scope: !7231, file: !3, line: 1964, type: !1021)
!7237 = !DILocation(line: 1964, column: 67, scope: !7231)
!7238 = !DILocalVariable(name: "index", arg: 3, scope: !7231, file: !3, line: 1964, type: !48)
!7239 = !DILocation(line: 1964, column: 77, scope: !7231)
!7240 = !DILocalVariable(name: "value", arg: 4, scope: !7231, file: !3, line: 1964, type: !48)
!7241 = !DILocation(line: 1964, column: 88, scope: !7231)
!7242 = !DILocalVariable(name: "tmp", scope: !7231, file: !3, line: 1966, type: !7086)
!7243 = !DILocation(line: 1966, column: 6, scope: !7231)
!7244 = !DILocalVariable(name: "len", scope: !7231, file: !3, line: 1967, type: !48)
!7245 = !DILocation(line: 1967, column: 6, scope: !7231)
!7246 = !DILocation(line: 1967, column: 45, scope: !7231)
!7247 = !DILocation(line: 1967, column: 50, scope: !7231)
!7248 = !DILocation(line: 1967, column: 12, scope: !7231)
!7249 = !DILocation(line: 1973, column: 6, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 1973, column: 6)
!7251 = !DILocation(line: 1973, column: 10, scope: !7250)
!7252 = !DILocation(line: 1973, column: 6, scope: !7231)
!7253 = !DILocation(line: 1974, column: 34, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 1973, column: 35)
!7255 = !DILocation(line: 1974, column: 39, scope: !7254)
!7256 = !DILocation(line: 1974, column: 45, scope: !7254)
!7257 = !DILocation(line: 1974, column: 3, scope: !7254)
!7258 = !DILocation(line: 1975, column: 16, scope: !7254)
!7259 = !DILocation(line: 1975, column: 7, scope: !7254)
!7260 = !DILocation(line: 1975, column: 3, scope: !7254)
!7261 = !DILocation(line: 1975, column: 14, scope: !7254)
!7262 = !DILocation(line: 1976, column: 34, scope: !7254)
!7263 = !DILocation(line: 1976, column: 39, scope: !7254)
!7264 = !DILocation(line: 1976, column: 45, scope: !7254)
!7265 = !DILocation(line: 1976, column: 3, scope: !7254)
!7266 = !DILocation(line: 1977, column: 2, scope: !7254)
!7267 = !DILocalVariable(name: "tmparray", scope: !7268, file: !3, line: 1979, type: !1330)
!7268 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 1978, column: 7)
!7269 = !DILocation(line: 1979, column: 8, scope: !7268)
!7270 = !DILocation(line: 1981, column: 14, scope: !7268)
!7271 = !DILocation(line: 1981, column: 40, scope: !7268)
!7272 = !DILocation(line: 1981, column: 38, scope: !7268)
!7273 = !DILocation(line: 1981, column: 12, scope: !7268)
!7274 = !DILocation(line: 1982, column: 34, scope: !7268)
!7275 = !DILocation(line: 1982, column: 39, scope: !7268)
!7276 = !DILocation(line: 1982, column: 45, scope: !7268)
!7277 = !DILocation(line: 1982, column: 3, scope: !7268)
!7278 = !DILocation(line: 1983, column: 21, scope: !7268)
!7279 = !DILocation(line: 1983, column: 3, scope: !7268)
!7280 = !DILocation(line: 1983, column: 12, scope: !7268)
!7281 = !DILocation(line: 1983, column: 19, scope: !7268)
!7282 = !DILocation(line: 1984, column: 34, scope: !7268)
!7283 = !DILocation(line: 1984, column: 39, scope: !7268)
!7284 = !DILocation(line: 1984, column: 45, scope: !7268)
!7285 = !DILocation(line: 1984, column: 3, scope: !7268)
!7286 = !DILocation(line: 1985, column: 3, scope: !7268)
!7287 = !DILocation(line: 1985, column: 13, scope: !7268)
!7288 = !DILocation(line: 1987, column: 1, scope: !7231)
!7289 = distinct !DISubprogram(name: "RNA_property_boolean_get_default", scope: !3, file: !3, line: 1989, type: !4409, scopeLine: 1990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7290 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !7289, file: !3, line: 1989, type: !1349)
!7291 = !DILocation(line: 1989, column: 50, scope: !7289)
!7292 = !DILocalVariable(name: "prop", arg: 2, scope: !7289, file: !3, line: 1989, type: !1021)
!7293 = !DILocation(line: 1989, column: 76, scope: !7289)
!7294 = !DILocalVariable(name: "bprop", scope: !7289, file: !3, line: 1991, type: !2760)
!7295 = !DILocation(line: 1991, column: 19, scope: !7289)
!7296 = !DILocation(line: 1991, column: 66, scope: !7289)
!7297 = !DILocation(line: 1991, column: 46, scope: !7289)
!7298 = !DILocation(line: 1991, column: 27, scope: !7289)
!7299 = !DILocation(line: 1996, column: 9, scope: !7289)
!7300 = !DILocation(line: 1996, column: 16, scope: !7289)
!7301 = !DILocation(line: 1996, column: 2, scope: !7289)
!7302 = distinct !DISubprogram(name: "RNA_property_boolean_get_default_array", scope: !3, file: !3, line: 1999, type: !4519, scopeLine: 2000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7303 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !7302, file: !3, line: 1999, type: !1349)
!7304 = !DILocation(line: 1999, column: 57, scope: !7302)
!7305 = !DILocalVariable(name: "prop", arg: 2, scope: !7302, file: !3, line: 1999, type: !1021)
!7306 = !DILocation(line: 1999, column: 83, scope: !7302)
!7307 = !DILocalVariable(name: "values", arg: 3, scope: !7302, file: !3, line: 1999, type: !1330)
!7308 = !DILocation(line: 1999, column: 94, scope: !7302)
!7309 = !DILocalVariable(name: "bprop", scope: !7302, file: !3, line: 2001, type: !2760)
!7310 = !DILocation(line: 2001, column: 19, scope: !7302)
!7311 = !DILocation(line: 2001, column: 66, scope: !7302)
!7312 = !DILocation(line: 2001, column: 46, scope: !7302)
!7313 = !DILocation(line: 2001, column: 27, scope: !7302)
!7314 = !DILocation(line: 2006, column: 6, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 2006, column: 6)
!7316 = !DILocation(line: 2006, column: 12, scope: !7315)
!7317 = !DILocation(line: 2006, column: 27, scope: !7315)
!7318 = !DILocation(line: 2006, column: 6, scope: !7302)
!7319 = !DILocation(line: 2007, column: 15, scope: !7315)
!7320 = !DILocation(line: 2007, column: 22, scope: !7315)
!7321 = !DILocation(line: 2007, column: 3, scope: !7315)
!7322 = !DILocation(line: 2007, column: 13, scope: !7315)
!7323 = !DILocation(line: 2008, column: 11, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2008, column: 11)
!7325 = !DILocation(line: 2008, column: 18, scope: !7324)
!7326 = !DILocation(line: 2008, column: 11, scope: !7315)
!7327 = !DILocation(line: 2009, column: 10, scope: !7324)
!7328 = !DILocation(line: 2009, column: 3, scope: !7324)
!7329 = !DILocation(line: 2009, column: 18, scope: !7324)
!7330 = !DILocation(line: 2009, column: 25, scope: !7324)
!7331 = !DILocation(line: 2009, column: 53, scope: !7324)
!7332 = !DILocation(line: 2009, column: 59, scope: !7324)
!7333 = !DILocation(line: 2009, column: 51, scope: !7324)
!7334 = !DILocation(line: 2011, column: 10, scope: !7324)
!7335 = !DILocation(line: 2011, column: 3, scope: !7324)
!7336 = !DILocation(line: 2011, column: 35, scope: !7324)
!7337 = !DILocation(line: 2011, column: 41, scope: !7324)
!7338 = !DILocation(line: 2011, column: 33, scope: !7324)
!7339 = !DILocation(line: 2012, column: 1, scope: !7302)
!7340 = distinct !DISubprogram(name: "RNA_property_boolean_get_default_index", scope: !3, file: !3, line: 2014, type: !4567, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7341 = !DILocalVariable(name: "ptr", arg: 1, scope: !7340, file: !3, line: 2014, type: !1349)
!7342 = !DILocation(line: 2014, column: 56, scope: !7340)
!7343 = !DILocalVariable(name: "prop", arg: 2, scope: !7340, file: !3, line: 2014, type: !1021)
!7344 = !DILocation(line: 2014, column: 74, scope: !7340)
!7345 = !DILocalVariable(name: "index", arg: 3, scope: !7340, file: !3, line: 2014, type: !48)
!7346 = !DILocation(line: 2014, column: 84, scope: !7340)
!7347 = !DILocalVariable(name: "tmp", scope: !7340, file: !3, line: 2016, type: !7086)
!7348 = !DILocation(line: 2016, column: 6, scope: !7340)
!7349 = !DILocalVariable(name: "len", scope: !7340, file: !3, line: 2017, type: !48)
!7350 = !DILocation(line: 2017, column: 6, scope: !7340)
!7351 = !DILocation(line: 2017, column: 45, scope: !7340)
!7352 = !DILocation(line: 2017, column: 50, scope: !7340)
!7353 = !DILocation(line: 2017, column: 12, scope: !7340)
!7354 = !DILocation(line: 2023, column: 6, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 2023, column: 6)
!7356 = !DILocation(line: 2023, column: 10, scope: !7355)
!7357 = !DILocation(line: 2023, column: 6, scope: !7340)
!7358 = !DILocation(line: 2024, column: 42, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2023, column: 35)
!7360 = !DILocation(line: 2024, column: 47, scope: !7359)
!7361 = !DILocation(line: 2024, column: 53, scope: !7359)
!7362 = !DILocation(line: 2024, column: 3, scope: !7359)
!7363 = !DILocation(line: 2025, column: 14, scope: !7359)
!7364 = !DILocation(line: 2025, column: 10, scope: !7359)
!7365 = !DILocation(line: 2025, column: 3, scope: !7359)
!7366 = !DILocalVariable(name: "tmparray", scope: !7367, file: !3, line: 2028, type: !1330)
!7367 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2027, column: 7)
!7368 = !DILocation(line: 2028, column: 8, scope: !7367)
!7369 = !DILocalVariable(name: "value", scope: !7367, file: !3, line: 2028, type: !48)
!7370 = !DILocation(line: 2028, column: 18, scope: !7367)
!7371 = !DILocation(line: 2030, column: 14, scope: !7367)
!7372 = !DILocation(line: 2030, column: 40, scope: !7367)
!7373 = !DILocation(line: 2030, column: 38, scope: !7367)
!7374 = !DILocation(line: 2030, column: 12, scope: !7367)
!7375 = !DILocation(line: 2031, column: 42, scope: !7367)
!7376 = !DILocation(line: 2031, column: 47, scope: !7367)
!7377 = !DILocation(line: 2031, column: 53, scope: !7367)
!7378 = !DILocation(line: 2031, column: 3, scope: !7367)
!7379 = !DILocation(line: 2032, column: 11, scope: !7367)
!7380 = !DILocation(line: 2032, column: 20, scope: !7367)
!7381 = !DILocation(line: 2032, column: 9, scope: !7367)
!7382 = !DILocation(line: 2033, column: 3, scope: !7367)
!7383 = !DILocation(line: 2033, column: 13, scope: !7367)
!7384 = !DILocation(line: 2035, column: 10, scope: !7367)
!7385 = !DILocation(line: 2035, column: 3, scope: !7367)
!7386 = !DILocation(line: 2037, column: 1, scope: !7340)
!7387 = distinct !DISubprogram(name: "RNA_property_int_get", scope: !3, file: !3, line: 2039, type: !4409, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7388 = !DILocalVariable(name: "ptr", arg: 1, scope: !7387, file: !3, line: 2039, type: !1349)
!7389 = !DILocation(line: 2039, column: 38, scope: !7387)
!7390 = !DILocalVariable(name: "prop", arg: 2, scope: !7387, file: !3, line: 2039, type: !1021)
!7391 = !DILocation(line: 2039, column: 56, scope: !7387)
!7392 = !DILocalVariable(name: "iprop", scope: !7387, file: !3, line: 2041, type: !2459)
!7393 = !DILocation(line: 2041, column: 18, scope: !7387)
!7394 = !DILocation(line: 2041, column: 44, scope: !7387)
!7395 = !DILocation(line: 2041, column: 26, scope: !7387)
!7396 = !DILocalVariable(name: "idprop", scope: !7387, file: !3, line: 2042, type: !987)
!7397 = !DILocation(line: 2042, column: 14, scope: !7387)
!7398 = !DILocation(line: 2047, column: 44, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 2047, column: 6)
!7400 = !DILocation(line: 2047, column: 16, scope: !7399)
!7401 = !DILocation(line: 2047, column: 14, scope: !7399)
!7402 = !DILocation(line: 2047, column: 6, scope: !7387)
!7403 = !DILocation(line: 2048, column: 10, scope: !7399)
!7404 = !DILocation(line: 2048, column: 3, scope: !7399)
!7405 = !DILocation(line: 2049, column: 11, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 2049, column: 11)
!7407 = !DILocation(line: 2049, column: 18, scope: !7406)
!7408 = !DILocation(line: 2049, column: 11, scope: !7399)
!7409 = !DILocation(line: 2050, column: 10, scope: !7406)
!7410 = !DILocation(line: 2050, column: 17, scope: !7406)
!7411 = !DILocation(line: 2050, column: 21, scope: !7406)
!7412 = !DILocation(line: 2050, column: 3, scope: !7406)
!7413 = !DILocation(line: 2051, column: 11, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 2051, column: 11)
!7415 = !DILocation(line: 2051, column: 18, scope: !7414)
!7416 = !DILocation(line: 2051, column: 11, scope: !7406)
!7417 = !DILocation(line: 2052, column: 10, scope: !7414)
!7418 = !DILocation(line: 2052, column: 17, scope: !7414)
!7419 = !DILocation(line: 2052, column: 24, scope: !7414)
!7420 = !DILocation(line: 2052, column: 29, scope: !7414)
!7421 = !DILocation(line: 2052, column: 3, scope: !7414)
!7422 = !DILocation(line: 2054, column: 10, scope: !7414)
!7423 = !DILocation(line: 2054, column: 17, scope: !7414)
!7424 = !DILocation(line: 2054, column: 3, scope: !7414)
!7425 = !DILocation(line: 2055, column: 1, scope: !7387)
!7426 = distinct !DISubprogram(name: "RNA_property_int_set", scope: !3, file: !3, line: 2057, type: !6887, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7427 = !DILocalVariable(name: "ptr", arg: 1, scope: !7426, file: !3, line: 2057, type: !1349)
!7428 = !DILocation(line: 2057, column: 39, scope: !7426)
!7429 = !DILocalVariable(name: "prop", arg: 2, scope: !7426, file: !3, line: 2057, type: !1021)
!7430 = !DILocation(line: 2057, column: 57, scope: !7426)
!7431 = !DILocalVariable(name: "value", arg: 3, scope: !7426, file: !3, line: 2057, type: !48)
!7432 = !DILocation(line: 2057, column: 67, scope: !7426)
!7433 = !DILocalVariable(name: "iprop", scope: !7426, file: !3, line: 2059, type: !2459)
!7434 = !DILocation(line: 2059, column: 18, scope: !7426)
!7435 = !DILocation(line: 2059, column: 44, scope: !7426)
!7436 = !DILocation(line: 2059, column: 26, scope: !7426)
!7437 = !DILocalVariable(name: "idprop", scope: !7426, file: !3, line: 2060, type: !987)
!7438 = !DILocation(line: 2060, column: 14, scope: !7426)
!7439 = !DILocation(line: 2067, column: 44, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 2067, column: 6)
!7441 = !DILocation(line: 2067, column: 16, scope: !7440)
!7442 = !DILocation(line: 2067, column: 14, scope: !7440)
!7443 = !DILocation(line: 2067, column: 6, scope: !7426)
!7444 = !DILocation(line: 2068, column: 21, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 2067, column: 51)
!7446 = !DILocation(line: 2068, column: 3, scope: !7445)
!7447 = !DILocation(line: 2068, column: 19, scope: !7445)
!7448 = !DILocation(line: 2069, column: 24, scope: !7445)
!7449 = !DILocation(line: 2069, column: 3, scope: !7445)
!7450 = !DILocation(line: 2070, column: 2, scope: !7445)
!7451 = !DILocation(line: 2071, column: 11, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 2071, column: 11)
!7453 = !DILocation(line: 2071, column: 18, scope: !7452)
!7454 = !DILocation(line: 2071, column: 11, scope: !7440)
!7455 = !DILocation(line: 2072, column: 3, scope: !7452)
!7456 = !DILocation(line: 2072, column: 10, scope: !7452)
!7457 = !DILocation(line: 2072, column: 14, scope: !7452)
!7458 = !DILocation(line: 2072, column: 19, scope: !7452)
!7459 = !DILocation(line: 2073, column: 11, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7452, file: !3, line: 2073, column: 11)
!7461 = !DILocation(line: 2073, column: 18, scope: !7460)
!7462 = !DILocation(line: 2073, column: 11, scope: !7452)
!7463 = !DILocation(line: 2074, column: 3, scope: !7460)
!7464 = !DILocation(line: 2074, column: 10, scope: !7460)
!7465 = !DILocation(line: 2074, column: 17, scope: !7460)
!7466 = !DILocation(line: 2074, column: 22, scope: !7460)
!7467 = !DILocation(line: 2074, column: 28, scope: !7460)
!7468 = !DILocation(line: 2075, column: 11, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7460, file: !3, line: 2075, column: 11)
!7470 = !DILocation(line: 2075, column: 17, scope: !7469)
!7471 = !DILocation(line: 2075, column: 22, scope: !7469)
!7472 = !DILocation(line: 2075, column: 11, scope: !7460)
!7473 = !DILocalVariable(name: "val", scope: !7474, file: !3, line: 2076, type: !6946)
!7474 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 2075, column: 39)
!7475 = !DILocation(line: 2076, column: 22, scope: !7474)
!7476 = !DILocalVariable(name: "group", scope: !7474, file: !3, line: 2077, type: !987)
!7477 = !DILocation(line: 2077, column: 15, scope: !7474)
!7478 = !DILocation(line: 2079, column: 26, scope: !7474)
!7479 = !DILocation(line: 2079, column: 31, scope: !7474)
!7480 = !DILocation(line: 2079, column: 3, scope: !7474)
!7481 = !DILocation(line: 2081, column: 11, scope: !7474)
!7482 = !DILocation(line: 2081, column: 7, scope: !7474)
!7483 = !DILocation(line: 2081, column: 9, scope: !7474)
!7484 = !DILocation(line: 2083, column: 30, scope: !7474)
!7485 = !DILocation(line: 2083, column: 11, scope: !7474)
!7486 = !DILocation(line: 2083, column: 9, scope: !7474)
!7487 = !DILocation(line: 2084, column: 7, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 2084, column: 7)
!7489 = !DILocation(line: 2084, column: 7, scope: !7474)
!7490 = !DILocation(line: 2085, column: 19, scope: !7488)
!7491 = !DILocation(line: 2085, column: 49, scope: !7488)
!7492 = !DILocation(line: 2085, column: 55, scope: !7488)
!7493 = !DILocation(line: 2085, column: 26, scope: !7488)
!7494 = !DILocation(line: 2085, column: 4, scope: !7488)
!7495 = !DILocation(line: 2086, column: 2, scope: !7474)
!7496 = !DILocation(line: 2087, column: 1, scope: !7426)
!7497 = distinct !DISubprogram(name: "RNA_property_int_get_array", scope: !3, file: !3, line: 2089, type: !4519, scopeLine: 2090, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7498 = !DILocalVariable(name: "ptr", arg: 1, scope: !7497, file: !3, line: 2089, type: !1349)
!7499 = !DILocation(line: 2089, column: 45, scope: !7497)
!7500 = !DILocalVariable(name: "prop", arg: 2, scope: !7497, file: !3, line: 2089, type: !1021)
!7501 = !DILocation(line: 2089, column: 63, scope: !7497)
!7502 = !DILocalVariable(name: "values", arg: 3, scope: !7497, file: !3, line: 2089, type: !1330)
!7503 = !DILocation(line: 2089, column: 74, scope: !7497)
!7504 = !DILocalVariable(name: "iprop", scope: !7497, file: !3, line: 2091, type: !2459)
!7505 = !DILocation(line: 2091, column: 18, scope: !7497)
!7506 = !DILocation(line: 2091, column: 44, scope: !7497)
!7507 = !DILocation(line: 2091, column: 26, scope: !7497)
!7508 = !DILocalVariable(name: "idprop", scope: !7497, file: !3, line: 2092, type: !987)
!7509 = !DILocation(line: 2092, column: 14, scope: !7497)
!7510 = !DILocation(line: 2097, column: 44, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 2097, column: 6)
!7512 = !DILocation(line: 2097, column: 16, scope: !7511)
!7513 = !DILocation(line: 2097, column: 14, scope: !7511)
!7514 = !DILocation(line: 2097, column: 6, scope: !7497)
!7515 = !DILocation(line: 2099, column: 7, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 2099, column: 7)
!7517 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 2097, column: 51)
!7518 = !DILocation(line: 2099, column: 13, scope: !7516)
!7519 = !DILocation(line: 2099, column: 28, scope: !7516)
!7520 = !DILocation(line: 2099, column: 7, scope: !7517)
!7521 = !DILocation(line: 2100, column: 37, scope: !7516)
!7522 = !DILocation(line: 2100, column: 42, scope: !7516)
!7523 = !DILocation(line: 2100, column: 16, scope: !7516)
!7524 = !DILocation(line: 2100, column: 4, scope: !7516)
!7525 = !DILocation(line: 2100, column: 14, scope: !7516)
!7526 = !DILocation(line: 2102, column: 11, scope: !7516)
!7527 = !DILocation(line: 2102, column: 4, scope: !7516)
!7528 = !DILocation(line: 2102, column: 19, scope: !7516)
!7529 = !DILocation(line: 2102, column: 52, scope: !7516)
!7530 = !DILocation(line: 2102, column: 60, scope: !7516)
!7531 = !DILocation(line: 2102, column: 50, scope: !7516)
!7532 = !DILocation(line: 2103, column: 2, scope: !7517)
!7533 = !DILocation(line: 2104, column: 11, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 2104, column: 11)
!7535 = !DILocation(line: 2104, column: 17, scope: !7534)
!7536 = !DILocation(line: 2104, column: 32, scope: !7534)
!7537 = !DILocation(line: 2104, column: 11, scope: !7511)
!7538 = !DILocation(line: 2105, column: 36, scope: !7534)
!7539 = !DILocation(line: 2105, column: 41, scope: !7534)
!7540 = !DILocation(line: 2105, column: 15, scope: !7534)
!7541 = !DILocation(line: 2105, column: 3, scope: !7534)
!7542 = !DILocation(line: 2105, column: 13, scope: !7534)
!7543 = !DILocation(line: 2106, column: 11, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2106, column: 11)
!7545 = !DILocation(line: 2106, column: 18, scope: !7544)
!7546 = !DILocation(line: 2106, column: 11, scope: !7534)
!7547 = !DILocation(line: 2107, column: 3, scope: !7544)
!7548 = !DILocation(line: 2107, column: 10, scope: !7544)
!7549 = !DILocation(line: 2107, column: 19, scope: !7544)
!7550 = !DILocation(line: 2107, column: 24, scope: !7544)
!7551 = !DILocation(line: 2108, column: 11, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 2108, column: 11)
!7553 = !DILocation(line: 2108, column: 18, scope: !7552)
!7554 = !DILocation(line: 2108, column: 11, scope: !7544)
!7555 = !DILocation(line: 2109, column: 3, scope: !7552)
!7556 = !DILocation(line: 2109, column: 10, scope: !7552)
!7557 = !DILocation(line: 2109, column: 22, scope: !7552)
!7558 = !DILocation(line: 2109, column: 27, scope: !7552)
!7559 = !DILocation(line: 2109, column: 33, scope: !7552)
!7560 = !DILocation(line: 2110, column: 11, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 2110, column: 11)
!7562 = !DILocation(line: 2110, column: 18, scope: !7561)
!7563 = !DILocation(line: 2110, column: 11, scope: !7552)
!7564 = !DILocation(line: 2111, column: 10, scope: !7561)
!7565 = !DILocation(line: 2111, column: 3, scope: !7561)
!7566 = !DILocation(line: 2111, column: 18, scope: !7561)
!7567 = !DILocation(line: 2111, column: 25, scope: !7561)
!7568 = !DILocation(line: 2111, column: 53, scope: !7561)
!7569 = !DILocation(line: 2111, column: 59, scope: !7561)
!7570 = !DILocation(line: 2111, column: 51, scope: !7561)
!7571 = !DILocation(line: 2113, column: 10, scope: !7561)
!7572 = !DILocation(line: 2113, column: 3, scope: !7561)
!7573 = !DILocation(line: 2113, column: 35, scope: !7561)
!7574 = !DILocation(line: 2113, column: 41, scope: !7561)
!7575 = !DILocation(line: 2113, column: 33, scope: !7561)
!7576 = !DILocation(line: 2114, column: 1, scope: !7497)
!7577 = distinct !DISubprogram(name: "RNA_property_int_get_array_range", scope: !3, file: !3, line: 2116, type: !4519, scopeLine: 2117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7578 = !DILocalVariable(name: "ptr", arg: 1, scope: !7577, file: !3, line: 2116, type: !1349)
!7579 = !DILocation(line: 2116, column: 51, scope: !7577)
!7580 = !DILocalVariable(name: "prop", arg: 2, scope: !7577, file: !3, line: 2116, type: !1021)
!7581 = !DILocation(line: 2116, column: 69, scope: !7577)
!7582 = !DILocalVariable(name: "values", arg: 3, scope: !7577, file: !3, line: 2116, type: !1330)
!7583 = !DILocation(line: 2116, column: 79, scope: !7577)
!7584 = !DILocalVariable(name: "array_len", scope: !7577, file: !3, line: 2118, type: !2482)
!7585 = !DILocation(line: 2118, column: 12, scope: !7577)
!7586 = !DILocation(line: 2118, column: 50, scope: !7577)
!7587 = !DILocation(line: 2118, column: 55, scope: !7577)
!7588 = !DILocation(line: 2118, column: 24, scope: !7577)
!7589 = !DILocation(line: 2120, column: 6, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 2120, column: 6)
!7591 = !DILocation(line: 2120, column: 16, scope: !7590)
!7592 = !DILocation(line: 2120, column: 6, scope: !7577)
!7593 = !DILocation(line: 2121, column: 3, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2120, column: 22)
!7595 = !DILocation(line: 2121, column: 13, scope: !7594)
!7596 = !DILocation(line: 2122, column: 3, scope: !7594)
!7597 = !DILocation(line: 2122, column: 13, scope: !7594)
!7598 = !DILocation(line: 2123, column: 2, scope: !7594)
!7599 = !DILocation(line: 2124, column: 11, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 2124, column: 11)
!7601 = !DILocation(line: 2124, column: 21, scope: !7600)
!7602 = !DILocation(line: 2124, column: 11, scope: !7590)
!7603 = !DILocation(line: 2125, column: 30, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 2124, column: 27)
!7605 = !DILocation(line: 2125, column: 35, scope: !7604)
!7606 = !DILocation(line: 2125, column: 41, scope: !7604)
!7607 = !DILocation(line: 2125, column: 3, scope: !7604)
!7608 = !DILocation(line: 2126, column: 15, scope: !7604)
!7609 = !DILocation(line: 2126, column: 3, scope: !7604)
!7610 = !DILocation(line: 2126, column: 13, scope: !7604)
!7611 = !DILocation(line: 2127, column: 2, scope: !7604)
!7612 = !DILocalVariable(name: "arr_stack", scope: !7613, file: !3, line: 2129, type: !7086)
!7613 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 2128, column: 7)
!7614 = !DILocation(line: 2129, column: 7, scope: !7613)
!7615 = !DILocalVariable(name: "arr", scope: !7613, file: !3, line: 2130, type: !1330)
!7616 = !DILocation(line: 2130, column: 8, scope: !7613)
!7617 = !DILocalVariable(name: "i", scope: !7613, file: !3, line: 2131, type: !48)
!7618 = !DILocation(line: 2131, column: 7, scope: !7613)
!7619 = !DILocation(line: 2133, column: 7, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 2133, column: 7)
!7621 = !DILocation(line: 2133, column: 17, scope: !7620)
!7622 = !DILocation(line: 2133, column: 7, scope: !7613)
!7623 = !DILocation(line: 2134, column: 10, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 2133, column: 23)
!7625 = !DILocation(line: 2134, column: 36, scope: !7624)
!7626 = !DILocation(line: 2134, column: 34, scope: !7624)
!7627 = !DILocation(line: 2134, column: 8, scope: !7624)
!7628 = !DILocation(line: 2135, column: 3, scope: !7624)
!7629 = !DILocation(line: 2137, column: 10, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 2136, column: 8)
!7631 = !DILocation(line: 2137, column: 8, scope: !7630)
!7632 = !DILocation(line: 2140, column: 30, scope: !7613)
!7633 = !DILocation(line: 2140, column: 35, scope: !7613)
!7634 = !DILocation(line: 2140, column: 41, scope: !7613)
!7635 = !DILocation(line: 2140, column: 3, scope: !7613)
!7636 = !DILocation(line: 2141, column: 27, scope: !7613)
!7637 = !DILocation(line: 2141, column: 15, scope: !7613)
!7638 = !DILocation(line: 2141, column: 25, scope: !7613)
!7639 = !DILocation(line: 2141, column: 3, scope: !7613)
!7640 = !DILocation(line: 2141, column: 13, scope: !7613)
!7641 = !DILocation(line: 2142, column: 10, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 2142, column: 3)
!7643 = !DILocation(line: 2142, column: 8, scope: !7642)
!7644 = !DILocation(line: 2142, column: 15, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 2142, column: 3)
!7646 = !DILocation(line: 2142, column: 19, scope: !7645)
!7647 = !DILocation(line: 2142, column: 17, scope: !7645)
!7648 = !DILocation(line: 2142, column: 3, scope: !7642)
!7649 = !DILocation(line: 2143, column: 16, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 2142, column: 35)
!7651 = !DILocation(line: 2143, column: 4, scope: !7650)
!7652 = !DILocation(line: 2143, column: 14, scope: !7650)
!7653 = !DILocation(line: 2144, column: 16, scope: !7650)
!7654 = !DILocation(line: 2144, column: 4, scope: !7650)
!7655 = !DILocation(line: 2144, column: 14, scope: !7650)
!7656 = !DILocation(line: 2145, column: 3, scope: !7650)
!7657 = !DILocation(line: 2142, column: 31, scope: !7645)
!7658 = !DILocation(line: 2142, column: 3, scope: !7645)
!7659 = distinct !{!7659, !7648, !7660}
!7660 = !DILocation(line: 2145, column: 3, scope: !7642)
!7661 = !DILocation(line: 2147, column: 7, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 2147, column: 7)
!7663 = !DILocation(line: 2147, column: 14, scope: !7662)
!7664 = !DILocation(line: 2147, column: 11, scope: !7662)
!7665 = !DILocation(line: 2147, column: 7, scope: !7613)
!7666 = !DILocation(line: 2148, column: 4, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 2147, column: 25)
!7668 = !DILocation(line: 2148, column: 14, scope: !7667)
!7669 = !DILocation(line: 2149, column: 3, scope: !7667)
!7670 = !DILocation(line: 2151, column: 1, scope: !7577)
!7671 = distinct !DISubprogram(name: "RNA_property_int_get_index", scope: !3, file: !3, line: 2153, type: !4567, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7672 = !DILocalVariable(name: "ptr", arg: 1, scope: !7671, file: !3, line: 2153, type: !1349)
!7673 = !DILocation(line: 2153, column: 44, scope: !7671)
!7674 = !DILocalVariable(name: "prop", arg: 2, scope: !7671, file: !3, line: 2153, type: !1021)
!7675 = !DILocation(line: 2153, column: 62, scope: !7671)
!7676 = !DILocalVariable(name: "index", arg: 3, scope: !7671, file: !3, line: 2153, type: !48)
!7677 = !DILocation(line: 2153, column: 72, scope: !7671)
!7678 = !DILocalVariable(name: "tmp", scope: !7671, file: !3, line: 2155, type: !7086)
!7679 = !DILocation(line: 2155, column: 6, scope: !7671)
!7680 = !DILocalVariable(name: "len", scope: !7671, file: !3, line: 2156, type: !48)
!7681 = !DILocation(line: 2156, column: 6, scope: !7671)
!7682 = !DILocation(line: 2156, column: 45, scope: !7671)
!7683 = !DILocation(line: 2156, column: 50, scope: !7671)
!7684 = !DILocation(line: 2156, column: 12, scope: !7671)
!7685 = !DILocation(line: 2162, column: 6, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 2162, column: 6)
!7687 = !DILocation(line: 2162, column: 10, scope: !7686)
!7688 = !DILocation(line: 2162, column: 6, scope: !7671)
!7689 = !DILocation(line: 2163, column: 30, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 2162, column: 35)
!7691 = !DILocation(line: 2163, column: 35, scope: !7690)
!7692 = !DILocation(line: 2163, column: 41, scope: !7690)
!7693 = !DILocation(line: 2163, column: 3, scope: !7690)
!7694 = !DILocation(line: 2164, column: 14, scope: !7690)
!7695 = !DILocation(line: 2164, column: 10, scope: !7690)
!7696 = !DILocation(line: 2164, column: 3, scope: !7690)
!7697 = !DILocalVariable(name: "tmparray", scope: !7698, file: !3, line: 2167, type: !1330)
!7698 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 2166, column: 7)
!7699 = !DILocation(line: 2167, column: 8, scope: !7698)
!7700 = !DILocalVariable(name: "value", scope: !7698, file: !3, line: 2167, type: !48)
!7701 = !DILocation(line: 2167, column: 18, scope: !7698)
!7702 = !DILocation(line: 2169, column: 14, scope: !7698)
!7703 = !DILocation(line: 2169, column: 40, scope: !7698)
!7704 = !DILocation(line: 2169, column: 38, scope: !7698)
!7705 = !DILocation(line: 2169, column: 12, scope: !7698)
!7706 = !DILocation(line: 2170, column: 30, scope: !7698)
!7707 = !DILocation(line: 2170, column: 35, scope: !7698)
!7708 = !DILocation(line: 2170, column: 41, scope: !7698)
!7709 = !DILocation(line: 2170, column: 3, scope: !7698)
!7710 = !DILocation(line: 2171, column: 11, scope: !7698)
!7711 = !DILocation(line: 2171, column: 20, scope: !7698)
!7712 = !DILocation(line: 2171, column: 9, scope: !7698)
!7713 = !DILocation(line: 2172, column: 3, scope: !7698)
!7714 = !DILocation(line: 2172, column: 13, scope: !7698)
!7715 = !DILocation(line: 2174, column: 10, scope: !7698)
!7716 = !DILocation(line: 2174, column: 3, scope: !7698)
!7717 = !DILocation(line: 2176, column: 1, scope: !7671)
!7718 = distinct !DISubprogram(name: "RNA_property_int_set_array", scope: !3, file: !3, line: 2178, type: !7127, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7719 = !DILocalVariable(name: "ptr", arg: 1, scope: !7718, file: !3, line: 2178, type: !1349)
!7720 = !DILocation(line: 2178, column: 45, scope: !7718)
!7721 = !DILocalVariable(name: "prop", arg: 2, scope: !7718, file: !3, line: 2178, type: !1021)
!7722 = !DILocation(line: 2178, column: 63, scope: !7718)
!7723 = !DILocalVariable(name: "values", arg: 3, scope: !7718, file: !3, line: 2178, type: !2481)
!7724 = !DILocation(line: 2178, column: 80, scope: !7718)
!7725 = !DILocalVariable(name: "iprop", scope: !7718, file: !3, line: 2180, type: !2459)
!7726 = !DILocation(line: 2180, column: 18, scope: !7718)
!7727 = !DILocation(line: 2180, column: 44, scope: !7718)
!7728 = !DILocation(line: 2180, column: 26, scope: !7718)
!7729 = !DILocalVariable(name: "idprop", scope: !7718, file: !3, line: 2181, type: !987)
!7730 = !DILocation(line: 2181, column: 14, scope: !7718)
!7731 = !DILocation(line: 2186, column: 44, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 2186, column: 6)
!7733 = !DILocation(line: 2186, column: 16, scope: !7732)
!7734 = !DILocation(line: 2186, column: 14, scope: !7732)
!7735 = !DILocation(line: 2186, column: 6, scope: !7718)
!7736 = !DILocation(line: 2188, column: 7, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 2188, column: 7)
!7738 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 2186, column: 51)
!7739 = !DILocation(line: 2188, column: 13, scope: !7737)
!7740 = !DILocation(line: 2188, column: 28, scope: !7737)
!7741 = !DILocation(line: 2188, column: 7, scope: !7738)
!7742 = !DILocation(line: 2189, column: 22, scope: !7737)
!7743 = !DILocation(line: 2189, column: 4, scope: !7737)
!7744 = !DILocation(line: 2189, column: 20, scope: !7737)
!7745 = !DILocation(line: 2191, column: 11, scope: !7737)
!7746 = !DILocation(line: 2191, column: 30, scope: !7737)
!7747 = !DILocation(line: 2191, column: 4, scope: !7737)
!7748 = !DILocation(line: 2191, column: 52, scope: !7737)
!7749 = !DILocation(line: 2191, column: 60, scope: !7737)
!7750 = !DILocation(line: 2191, column: 50, scope: !7737)
!7751 = !DILocation(line: 2193, column: 24, scope: !7738)
!7752 = !DILocation(line: 2193, column: 3, scope: !7738)
!7753 = !DILocation(line: 2194, column: 2, scope: !7738)
!7754 = !DILocation(line: 2195, column: 11, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 2195, column: 11)
!7756 = !DILocation(line: 2195, column: 17, scope: !7755)
!7757 = !DILocation(line: 2195, column: 32, scope: !7755)
!7758 = !DILocation(line: 2195, column: 11, scope: !7732)
!7759 = !DILocation(line: 2196, column: 24, scope: !7755)
!7760 = !DILocation(line: 2196, column: 29, scope: !7755)
!7761 = !DILocation(line: 2196, column: 35, scope: !7755)
!7762 = !DILocation(line: 2196, column: 3, scope: !7755)
!7763 = !DILocation(line: 2197, column: 11, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 2197, column: 11)
!7765 = !DILocation(line: 2197, column: 18, scope: !7764)
!7766 = !DILocation(line: 2197, column: 11, scope: !7755)
!7767 = !DILocation(line: 2198, column: 3, scope: !7764)
!7768 = !DILocation(line: 2198, column: 10, scope: !7764)
!7769 = !DILocation(line: 2198, column: 19, scope: !7764)
!7770 = !DILocation(line: 2198, column: 24, scope: !7764)
!7771 = !DILocation(line: 2199, column: 11, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 2199, column: 11)
!7773 = !DILocation(line: 2199, column: 18, scope: !7772)
!7774 = !DILocation(line: 2199, column: 11, scope: !7764)
!7775 = !DILocation(line: 2200, column: 3, scope: !7772)
!7776 = !DILocation(line: 2200, column: 10, scope: !7772)
!7777 = !DILocation(line: 2200, column: 22, scope: !7772)
!7778 = !DILocation(line: 2200, column: 27, scope: !7772)
!7779 = !DILocation(line: 2200, column: 33, scope: !7772)
!7780 = !DILocation(line: 2201, column: 11, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2201, column: 11)
!7782 = !DILocation(line: 2201, column: 17, scope: !7781)
!7783 = !DILocation(line: 2201, column: 22, scope: !7781)
!7784 = !DILocation(line: 2201, column: 11, scope: !7772)
!7785 = !DILocalVariable(name: "val", scope: !7786, file: !3, line: 2202, type: !6946)
!7786 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 2201, column: 39)
!7787 = !DILocation(line: 2202, column: 22, scope: !7786)
!7788 = !DILocalVariable(name: "group", scope: !7786, file: !3, line: 2203, type: !987)
!7789 = !DILocation(line: 2203, column: 15, scope: !7786)
!7790 = !DILocation(line: 2207, column: 19, scope: !7786)
!7791 = !DILocation(line: 2207, column: 25, scope: !7786)
!7792 = !DILocation(line: 2207, column: 7, scope: !7786)
!7793 = !DILocation(line: 2207, column: 13, scope: !7786)
!7794 = !DILocation(line: 2207, column: 17, scope: !7786)
!7795 = !DILocation(line: 2208, column: 7, scope: !7786)
!7796 = !DILocation(line: 2208, column: 13, scope: !7786)
!7797 = !DILocation(line: 2208, column: 18, scope: !7786)
!7798 = !DILocation(line: 2210, column: 30, scope: !7786)
!7799 = !DILocation(line: 2210, column: 11, scope: !7786)
!7800 = !DILocation(line: 2210, column: 9, scope: !7786)
!7801 = !DILocation(line: 2211, column: 7, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 2211, column: 7)
!7803 = !DILocation(line: 2211, column: 7, scope: !7786)
!7804 = !DILocation(line: 2212, column: 38, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 2211, column: 14)
!7806 = !DILocation(line: 2212, column: 44, scope: !7805)
!7807 = !DILocation(line: 2212, column: 13, scope: !7805)
!7808 = !DILocation(line: 2212, column: 11, scope: !7805)
!7809 = !DILocation(line: 2213, column: 19, scope: !7805)
!7810 = !DILocation(line: 2213, column: 26, scope: !7805)
!7811 = !DILocation(line: 2213, column: 4, scope: !7805)
!7812 = !DILocation(line: 2214, column: 11, scope: !7805)
!7813 = !DILocation(line: 2214, column: 30, scope: !7805)
!7814 = !DILocation(line: 2214, column: 4, scope: !7805)
!7815 = !DILocation(line: 2214, column: 52, scope: !7805)
!7816 = !DILocation(line: 2214, column: 60, scope: !7805)
!7817 = !DILocation(line: 2214, column: 50, scope: !7805)
!7818 = !DILocation(line: 2215, column: 3, scope: !7805)
!7819 = !DILocation(line: 2216, column: 2, scope: !7786)
!7820 = !DILocation(line: 2217, column: 1, scope: !7718)
!7821 = distinct !DISubprogram(name: "RNA_property_int_set_index", scope: !3, file: !3, line: 2219, type: !7232, scopeLine: 2220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7822 = !DILocalVariable(name: "ptr", arg: 1, scope: !7821, file: !3, line: 2219, type: !1349)
!7823 = !DILocation(line: 2219, column: 45, scope: !7821)
!7824 = !DILocalVariable(name: "prop", arg: 2, scope: !7821, file: !3, line: 2219, type: !1021)
!7825 = !DILocation(line: 2219, column: 63, scope: !7821)
!7826 = !DILocalVariable(name: "index", arg: 3, scope: !7821, file: !3, line: 2219, type: !48)
!7827 = !DILocation(line: 2219, column: 73, scope: !7821)
!7828 = !DILocalVariable(name: "value", arg: 4, scope: !7821, file: !3, line: 2219, type: !48)
!7829 = !DILocation(line: 2219, column: 84, scope: !7821)
!7830 = !DILocalVariable(name: "tmp", scope: !7821, file: !3, line: 2221, type: !7086)
!7831 = !DILocation(line: 2221, column: 6, scope: !7821)
!7832 = !DILocalVariable(name: "len", scope: !7821, file: !3, line: 2222, type: !48)
!7833 = !DILocation(line: 2222, column: 6, scope: !7821)
!7834 = !DILocation(line: 2222, column: 45, scope: !7821)
!7835 = !DILocation(line: 2222, column: 50, scope: !7821)
!7836 = !DILocation(line: 2222, column: 12, scope: !7821)
!7837 = !DILocation(line: 2228, column: 6, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 2228, column: 6)
!7839 = !DILocation(line: 2228, column: 10, scope: !7838)
!7840 = !DILocation(line: 2228, column: 6, scope: !7821)
!7841 = !DILocation(line: 2229, column: 30, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 2228, column: 35)
!7843 = !DILocation(line: 2229, column: 35, scope: !7842)
!7844 = !DILocation(line: 2229, column: 41, scope: !7842)
!7845 = !DILocation(line: 2229, column: 3, scope: !7842)
!7846 = !DILocation(line: 2230, column: 16, scope: !7842)
!7847 = !DILocation(line: 2230, column: 7, scope: !7842)
!7848 = !DILocation(line: 2230, column: 3, scope: !7842)
!7849 = !DILocation(line: 2230, column: 14, scope: !7842)
!7850 = !DILocation(line: 2231, column: 30, scope: !7842)
!7851 = !DILocation(line: 2231, column: 35, scope: !7842)
!7852 = !DILocation(line: 2231, column: 41, scope: !7842)
!7853 = !DILocation(line: 2231, column: 3, scope: !7842)
!7854 = !DILocation(line: 2232, column: 2, scope: !7842)
!7855 = !DILocalVariable(name: "tmparray", scope: !7856, file: !3, line: 2234, type: !1330)
!7856 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 2233, column: 7)
!7857 = !DILocation(line: 2234, column: 8, scope: !7856)
!7858 = !DILocation(line: 2236, column: 14, scope: !7856)
!7859 = !DILocation(line: 2236, column: 40, scope: !7856)
!7860 = !DILocation(line: 2236, column: 38, scope: !7856)
!7861 = !DILocation(line: 2236, column: 12, scope: !7856)
!7862 = !DILocation(line: 2237, column: 30, scope: !7856)
!7863 = !DILocation(line: 2237, column: 35, scope: !7856)
!7864 = !DILocation(line: 2237, column: 41, scope: !7856)
!7865 = !DILocation(line: 2237, column: 3, scope: !7856)
!7866 = !DILocation(line: 2238, column: 21, scope: !7856)
!7867 = !DILocation(line: 2238, column: 3, scope: !7856)
!7868 = !DILocation(line: 2238, column: 12, scope: !7856)
!7869 = !DILocation(line: 2238, column: 19, scope: !7856)
!7870 = !DILocation(line: 2239, column: 30, scope: !7856)
!7871 = !DILocation(line: 2239, column: 35, scope: !7856)
!7872 = !DILocation(line: 2239, column: 41, scope: !7856)
!7873 = !DILocation(line: 2239, column: 3, scope: !7856)
!7874 = !DILocation(line: 2240, column: 3, scope: !7856)
!7875 = !DILocation(line: 2240, column: 13, scope: !7856)
!7876 = !DILocation(line: 2242, column: 1, scope: !7821)
!7877 = distinct !DISubprogram(name: "RNA_property_int_get_default", scope: !3, file: !3, line: 2244, type: !4409, scopeLine: 2245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7878 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !7877, file: !3, line: 2244, type: !1349)
!7879 = !DILocation(line: 2244, column: 46, scope: !7877)
!7880 = !DILocalVariable(name: "prop", arg: 2, scope: !7877, file: !3, line: 2244, type: !1021)
!7881 = !DILocation(line: 2244, column: 72, scope: !7877)
!7882 = !DILocalVariable(name: "iprop", scope: !7877, file: !3, line: 2246, type: !2459)
!7883 = !DILocation(line: 2246, column: 18, scope: !7877)
!7884 = !DILocation(line: 2246, column: 64, scope: !7877)
!7885 = !DILocation(line: 2246, column: 44, scope: !7877)
!7886 = !DILocation(line: 2246, column: 26, scope: !7877)
!7887 = !DILocation(line: 2247, column: 9, scope: !7877)
!7888 = !DILocation(line: 2247, column: 16, scope: !7877)
!7889 = !DILocation(line: 2247, column: 2, scope: !7877)
!7890 = distinct !DISubprogram(name: "RNA_property_int_get_default_array", scope: !3, file: !3, line: 2250, type: !4519, scopeLine: 2251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7891 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !7890, file: !3, line: 2250, type: !1349)
!7892 = !DILocation(line: 2250, column: 53, scope: !7890)
!7893 = !DILocalVariable(name: "prop", arg: 2, scope: !7890, file: !3, line: 2250, type: !1021)
!7894 = !DILocation(line: 2250, column: 79, scope: !7890)
!7895 = !DILocalVariable(name: "values", arg: 3, scope: !7890, file: !3, line: 2250, type: !1330)
!7896 = !DILocation(line: 2250, column: 90, scope: !7890)
!7897 = !DILocalVariable(name: "iprop", scope: !7890, file: !3, line: 2252, type: !2459)
!7898 = !DILocation(line: 2252, column: 18, scope: !7890)
!7899 = !DILocation(line: 2252, column: 64, scope: !7890)
!7900 = !DILocation(line: 2252, column: 44, scope: !7890)
!7901 = !DILocation(line: 2252, column: 26, scope: !7890)
!7902 = !DILocation(line: 2257, column: 6, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 2257, column: 6)
!7904 = !DILocation(line: 2257, column: 12, scope: !7903)
!7905 = !DILocation(line: 2257, column: 27, scope: !7903)
!7906 = !DILocation(line: 2257, column: 6, scope: !7890)
!7907 = !DILocation(line: 2258, column: 15, scope: !7903)
!7908 = !DILocation(line: 2258, column: 22, scope: !7903)
!7909 = !DILocation(line: 2258, column: 3, scope: !7903)
!7910 = !DILocation(line: 2258, column: 13, scope: !7903)
!7911 = !DILocation(line: 2259, column: 11, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 2259, column: 11)
!7913 = !DILocation(line: 2259, column: 18, scope: !7912)
!7914 = !DILocation(line: 2259, column: 11, scope: !7903)
!7915 = !DILocation(line: 2260, column: 10, scope: !7912)
!7916 = !DILocation(line: 2260, column: 3, scope: !7912)
!7917 = !DILocation(line: 2260, column: 18, scope: !7912)
!7918 = !DILocation(line: 2260, column: 25, scope: !7912)
!7919 = !DILocation(line: 2260, column: 53, scope: !7912)
!7920 = !DILocation(line: 2260, column: 59, scope: !7912)
!7921 = !DILocation(line: 2260, column: 51, scope: !7912)
!7922 = !DILocation(line: 2262, column: 10, scope: !7912)
!7923 = !DILocation(line: 2262, column: 3, scope: !7912)
!7924 = !DILocation(line: 2262, column: 35, scope: !7912)
!7925 = !DILocation(line: 2262, column: 41, scope: !7912)
!7926 = !DILocation(line: 2262, column: 33, scope: !7912)
!7927 = !DILocation(line: 2263, column: 1, scope: !7890)
!7928 = distinct !DISubprogram(name: "RNA_property_int_get_default_index", scope: !3, file: !3, line: 2265, type: !4567, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7929 = !DILocalVariable(name: "ptr", arg: 1, scope: !7928, file: !3, line: 2265, type: !1349)
!7930 = !DILocation(line: 2265, column: 52, scope: !7928)
!7931 = !DILocalVariable(name: "prop", arg: 2, scope: !7928, file: !3, line: 2265, type: !1021)
!7932 = !DILocation(line: 2265, column: 70, scope: !7928)
!7933 = !DILocalVariable(name: "index", arg: 3, scope: !7928, file: !3, line: 2265, type: !48)
!7934 = !DILocation(line: 2265, column: 80, scope: !7928)
!7935 = !DILocalVariable(name: "tmp", scope: !7928, file: !3, line: 2267, type: !7086)
!7936 = !DILocation(line: 2267, column: 6, scope: !7928)
!7937 = !DILocalVariable(name: "len", scope: !7928, file: !3, line: 2268, type: !48)
!7938 = !DILocation(line: 2268, column: 6, scope: !7928)
!7939 = !DILocation(line: 2268, column: 45, scope: !7928)
!7940 = !DILocation(line: 2268, column: 50, scope: !7928)
!7941 = !DILocation(line: 2268, column: 12, scope: !7928)
!7942 = !DILocation(line: 2274, column: 6, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 2274, column: 6)
!7944 = !DILocation(line: 2274, column: 10, scope: !7943)
!7945 = !DILocation(line: 2274, column: 6, scope: !7928)
!7946 = !DILocation(line: 2275, column: 38, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 2274, column: 35)
!7948 = !DILocation(line: 2275, column: 43, scope: !7947)
!7949 = !DILocation(line: 2275, column: 49, scope: !7947)
!7950 = !DILocation(line: 2275, column: 3, scope: !7947)
!7951 = !DILocation(line: 2276, column: 14, scope: !7947)
!7952 = !DILocation(line: 2276, column: 10, scope: !7947)
!7953 = !DILocation(line: 2276, column: 3, scope: !7947)
!7954 = !DILocalVariable(name: "tmparray", scope: !7955, file: !3, line: 2279, type: !1330)
!7955 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 2278, column: 7)
!7956 = !DILocation(line: 2279, column: 8, scope: !7955)
!7957 = !DILocalVariable(name: "value", scope: !7955, file: !3, line: 2279, type: !48)
!7958 = !DILocation(line: 2279, column: 18, scope: !7955)
!7959 = !DILocation(line: 2281, column: 14, scope: !7955)
!7960 = !DILocation(line: 2281, column: 40, scope: !7955)
!7961 = !DILocation(line: 2281, column: 38, scope: !7955)
!7962 = !DILocation(line: 2281, column: 12, scope: !7955)
!7963 = !DILocation(line: 2282, column: 38, scope: !7955)
!7964 = !DILocation(line: 2282, column: 43, scope: !7955)
!7965 = !DILocation(line: 2282, column: 49, scope: !7955)
!7966 = !DILocation(line: 2282, column: 3, scope: !7955)
!7967 = !DILocation(line: 2283, column: 11, scope: !7955)
!7968 = !DILocation(line: 2283, column: 20, scope: !7955)
!7969 = !DILocation(line: 2283, column: 9, scope: !7955)
!7970 = !DILocation(line: 2284, column: 3, scope: !7955)
!7971 = !DILocation(line: 2284, column: 13, scope: !7955)
!7972 = !DILocation(line: 2286, column: 10, scope: !7955)
!7973 = !DILocation(line: 2286, column: 3, scope: !7955)
!7974 = !DILocation(line: 2288, column: 1, scope: !7928)
!7975 = distinct !DISubprogram(name: "RNA_property_float_get", scope: !3, file: !3, line: 2290, type: !7976, scopeLine: 2291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{!1285, !1349, !1021}
!7978 = !DILocalVariable(name: "ptr", arg: 1, scope: !7975, file: !3, line: 2290, type: !1349)
!7979 = !DILocation(line: 2290, column: 42, scope: !7975)
!7980 = !DILocalVariable(name: "prop", arg: 2, scope: !7975, file: !3, line: 2290, type: !1021)
!7981 = !DILocation(line: 2290, column: 60, scope: !7975)
!7982 = !DILocalVariable(name: "fprop", scope: !7975, file: !3, line: 2292, type: !2520)
!7983 = !DILocation(line: 2292, column: 20, scope: !7975)
!7984 = !DILocation(line: 2292, column: 48, scope: !7975)
!7985 = !DILocation(line: 2292, column: 28, scope: !7975)
!7986 = !DILocalVariable(name: "idprop", scope: !7975, file: !3, line: 2293, type: !987)
!7987 = !DILocation(line: 2293, column: 14, scope: !7975)
!7988 = !DILocation(line: 2298, column: 44, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 2298, column: 6)
!7990 = !DILocation(line: 2298, column: 16, scope: !7989)
!7991 = !DILocation(line: 2298, column: 14, scope: !7989)
!7992 = !DILocation(line: 2298, column: 6, scope: !7975)
!7993 = !DILocation(line: 2299, column: 7, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 2299, column: 7)
!7995 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 2298, column: 51)
!7996 = !DILocation(line: 2299, column: 15, scope: !7994)
!7997 = !DILocation(line: 2299, column: 20, scope: !7994)
!7998 = !DILocation(line: 2299, column: 7, scope: !7995)
!7999 = !DILocation(line: 2300, column: 11, scope: !7994)
!8000 = !DILocation(line: 2300, column: 4, scope: !7994)
!8001 = !DILocation(line: 2302, column: 18, scope: !7994)
!8002 = !DILocation(line: 2302, column: 11, scope: !7994)
!8003 = !DILocation(line: 2302, column: 4, scope: !7994)
!8004 = !DILocation(line: 2304, column: 11, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 2304, column: 11)
!8006 = !DILocation(line: 2304, column: 18, scope: !8005)
!8007 = !DILocation(line: 2304, column: 11, scope: !7989)
!8008 = !DILocation(line: 2305, column: 10, scope: !8005)
!8009 = !DILocation(line: 2305, column: 17, scope: !8005)
!8010 = !DILocation(line: 2305, column: 21, scope: !8005)
!8011 = !DILocation(line: 2305, column: 3, scope: !8005)
!8012 = !DILocation(line: 2306, column: 11, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 2306, column: 11)
!8014 = !DILocation(line: 2306, column: 18, scope: !8013)
!8015 = !DILocation(line: 2306, column: 11, scope: !8005)
!8016 = !DILocation(line: 2307, column: 10, scope: !8013)
!8017 = !DILocation(line: 2307, column: 17, scope: !8013)
!8018 = !DILocation(line: 2307, column: 24, scope: !8013)
!8019 = !DILocation(line: 2307, column: 29, scope: !8013)
!8020 = !DILocation(line: 2307, column: 3, scope: !8013)
!8021 = !DILocation(line: 2309, column: 10, scope: !8013)
!8022 = !DILocation(line: 2309, column: 17, scope: !8013)
!8023 = !DILocation(line: 2309, column: 3, scope: !8013)
!8024 = !DILocation(line: 2310, column: 1, scope: !7975)
!8025 = distinct !DISubprogram(name: "RNA_property_float_set", scope: !3, file: !3, line: 2312, type: !8026, scopeLine: 2313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{null, !1349, !1021, !1285}
!8028 = !DILocalVariable(name: "ptr", arg: 1, scope: !8025, file: !3, line: 2312, type: !1349)
!8029 = !DILocation(line: 2312, column: 41, scope: !8025)
!8030 = !DILocalVariable(name: "prop", arg: 2, scope: !8025, file: !3, line: 2312, type: !1021)
!8031 = !DILocation(line: 2312, column: 59, scope: !8025)
!8032 = !DILocalVariable(name: "value", arg: 3, scope: !8025, file: !3, line: 2312, type: !1285)
!8033 = !DILocation(line: 2312, column: 71, scope: !8025)
!8034 = !DILocalVariable(name: "fprop", scope: !8025, file: !3, line: 2314, type: !2520)
!8035 = !DILocation(line: 2314, column: 20, scope: !8025)
!8036 = !DILocation(line: 2314, column: 48, scope: !8025)
!8037 = !DILocation(line: 2314, column: 28, scope: !8025)
!8038 = !DILocalVariable(name: "idprop", scope: !8025, file: !3, line: 2315, type: !987)
!8039 = !DILocation(line: 2315, column: 14, scope: !8025)
!8040 = !DILocation(line: 2322, column: 44, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2322, column: 6)
!8042 = !DILocation(line: 2322, column: 16, scope: !8041)
!8043 = !DILocation(line: 2322, column: 14, scope: !8041)
!8044 = !DILocation(line: 2322, column: 6, scope: !8025)
!8045 = !DILocation(line: 2323, column: 7, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 2323, column: 7)
!8047 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 2322, column: 51)
!8048 = !DILocation(line: 2323, column: 15, scope: !8046)
!8049 = !DILocation(line: 2323, column: 20, scope: !8046)
!8050 = !DILocation(line: 2323, column: 7, scope: !8047)
!8051 = !DILocation(line: 2324, column: 24, scope: !8046)
!8052 = !DILocation(line: 2324, column: 4, scope: !8046)
!8053 = !DILocation(line: 2324, column: 22, scope: !8046)
!8054 = !DILocation(line: 2326, column: 25, scope: !8046)
!8055 = !DILocation(line: 2326, column: 4, scope: !8046)
!8056 = !DILocation(line: 2326, column: 23, scope: !8046)
!8057 = !DILocation(line: 2328, column: 24, scope: !8047)
!8058 = !DILocation(line: 2328, column: 3, scope: !8047)
!8059 = !DILocation(line: 2329, column: 2, scope: !8047)
!8060 = !DILocation(line: 2330, column: 11, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 2330, column: 11)
!8062 = !DILocation(line: 2330, column: 18, scope: !8061)
!8063 = !DILocation(line: 2330, column: 11, scope: !8041)
!8064 = !DILocation(line: 2331, column: 3, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 2330, column: 23)
!8066 = !DILocation(line: 2331, column: 10, scope: !8065)
!8067 = !DILocation(line: 2331, column: 14, scope: !8065)
!8068 = !DILocation(line: 2331, column: 19, scope: !8065)
!8069 = !DILocation(line: 2332, column: 2, scope: !8065)
!8070 = !DILocation(line: 2333, column: 11, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 2333, column: 11)
!8072 = !DILocation(line: 2333, column: 18, scope: !8071)
!8073 = !DILocation(line: 2333, column: 11, scope: !8061)
!8074 = !DILocation(line: 2334, column: 3, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2333, column: 26)
!8076 = !DILocation(line: 2334, column: 10, scope: !8075)
!8077 = !DILocation(line: 2334, column: 17, scope: !8075)
!8078 = !DILocation(line: 2334, column: 22, scope: !8075)
!8079 = !DILocation(line: 2334, column: 28, scope: !8075)
!8080 = !DILocation(line: 2335, column: 2, scope: !8075)
!8081 = !DILocation(line: 2336, column: 11, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2336, column: 11)
!8083 = !DILocation(line: 2336, column: 17, scope: !8082)
!8084 = !DILocation(line: 2336, column: 22, scope: !8082)
!8085 = !DILocation(line: 2336, column: 11, scope: !8071)
!8086 = !DILocalVariable(name: "val", scope: !8087, file: !3, line: 2337, type: !6946)
!8087 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2336, column: 39)
!8088 = !DILocation(line: 2337, column: 22, scope: !8087)
!8089 = !DILocalVariable(name: "group", scope: !8087, file: !3, line: 2338, type: !987)
!8090 = !DILocation(line: 2338, column: 15, scope: !8087)
!8091 = !DILocation(line: 2340, column: 28, scope: !8087)
!8092 = !DILocation(line: 2340, column: 33, scope: !8087)
!8093 = !DILocation(line: 2340, column: 3, scope: !8087)
!8094 = !DILocation(line: 2342, column: 11, scope: !8087)
!8095 = !DILocation(line: 2342, column: 7, scope: !8087)
!8096 = !DILocation(line: 2342, column: 9, scope: !8087)
!8097 = !DILocation(line: 2344, column: 30, scope: !8087)
!8098 = !DILocation(line: 2344, column: 11, scope: !8087)
!8099 = !DILocation(line: 2344, column: 9, scope: !8087)
!8100 = !DILocation(line: 2345, column: 7, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 2345, column: 7)
!8102 = !DILocation(line: 2345, column: 7, scope: !8087)
!8103 = !DILocation(line: 2346, column: 19, scope: !8101)
!8104 = !DILocation(line: 2346, column: 51, scope: !8101)
!8105 = !DILocation(line: 2346, column: 57, scope: !8101)
!8106 = !DILocation(line: 2346, column: 26, scope: !8101)
!8107 = !DILocation(line: 2346, column: 4, scope: !8101)
!8108 = !DILocation(line: 2347, column: 2, scope: !8087)
!8109 = !DILocation(line: 2348, column: 1, scope: !8025)
!8110 = distinct !DISubprogram(name: "RNA_property_float_get_array", scope: !3, file: !3, line: 2350, type: !8111, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8111 = !DISubroutineType(types: !8112)
!8112 = !{null, !1349, !1021, !2540}
!8113 = !DILocalVariable(name: "ptr", arg: 1, scope: !8110, file: !3, line: 2350, type: !1349)
!8114 = !DILocation(line: 2350, column: 47, scope: !8110)
!8115 = !DILocalVariable(name: "prop", arg: 2, scope: !8110, file: !3, line: 2350, type: !1021)
!8116 = !DILocation(line: 2350, column: 65, scope: !8110)
!8117 = !DILocalVariable(name: "values", arg: 3, scope: !8110, file: !3, line: 2350, type: !2540)
!8118 = !DILocation(line: 2350, column: 78, scope: !8110)
!8119 = !DILocalVariable(name: "fprop", scope: !8110, file: !3, line: 2352, type: !2520)
!8120 = !DILocation(line: 2352, column: 20, scope: !8110)
!8121 = !DILocation(line: 2352, column: 48, scope: !8110)
!8122 = !DILocation(line: 2352, column: 28, scope: !8110)
!8123 = !DILocalVariable(name: "idprop", scope: !8110, file: !3, line: 2353, type: !987)
!8124 = !DILocation(line: 2353, column: 14, scope: !8110)
!8125 = !DILocalVariable(name: "i", scope: !8110, file: !3, line: 2354, type: !48)
!8126 = !DILocation(line: 2354, column: 6, scope: !8110)
!8127 = !DILocation(line: 2359, column: 44, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 2359, column: 6)
!8129 = !DILocation(line: 2359, column: 16, scope: !8128)
!8130 = !DILocation(line: 2359, column: 14, scope: !8128)
!8131 = !DILocation(line: 2359, column: 6, scope: !8110)
!8132 = !DILocation(line: 2361, column: 7, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 2361, column: 7)
!8134 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2359, column: 51)
!8135 = !DILocation(line: 2361, column: 13, scope: !8133)
!8136 = !DILocation(line: 2361, column: 28, scope: !8133)
!8137 = !DILocation(line: 2361, column: 7, scope: !8134)
!8138 = !DILocation(line: 2362, column: 39, scope: !8133)
!8139 = !DILocation(line: 2362, column: 44, scope: !8133)
!8140 = !DILocation(line: 2362, column: 16, scope: !8133)
!8141 = !DILocation(line: 2362, column: 4, scope: !8133)
!8142 = !DILocation(line: 2362, column: 14, scope: !8133)
!8143 = !DILocation(line: 2363, column: 12, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 2363, column: 12)
!8145 = !DILocation(line: 2363, column: 20, scope: !8144)
!8146 = !DILocation(line: 2363, column: 28, scope: !8144)
!8147 = !DILocation(line: 2363, column: 12, scope: !8133)
!8148 = !DILocation(line: 2364, column: 11, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 2363, column: 42)
!8150 = !DILocation(line: 2364, column: 4, scope: !8149)
!8151 = !DILocation(line: 2364, column: 19, scope: !8149)
!8152 = !DILocation(line: 2364, column: 54, scope: !8149)
!8153 = !DILocation(line: 2364, column: 62, scope: !8149)
!8154 = !DILocation(line: 2364, column: 52, scope: !8149)
!8155 = !DILocation(line: 2365, column: 3, scope: !8149)
!8156 = !DILocation(line: 2367, column: 11, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 2367, column: 4)
!8158 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 2366, column: 8)
!8159 = !DILocation(line: 2367, column: 9, scope: !8157)
!8160 = !DILocation(line: 2367, column: 16, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 2367, column: 4)
!8162 = !DILocation(line: 2367, column: 20, scope: !8161)
!8163 = !DILocation(line: 2367, column: 28, scope: !8161)
!8164 = !DILocation(line: 2367, column: 18, scope: !8161)
!8165 = !DILocation(line: 2367, column: 4, scope: !8157)
!8166 = !DILocation(line: 2368, column: 37, scope: !8161)
!8167 = !DILocation(line: 2368, column: 27, scope: !8161)
!8168 = !DILocation(line: 2368, column: 56, scope: !8161)
!8169 = !DILocation(line: 2368, column: 26, scope: !8161)
!8170 = !DILocation(line: 2368, column: 18, scope: !8161)
!8171 = !DILocation(line: 2368, column: 5, scope: !8161)
!8172 = !DILocation(line: 2368, column: 12, scope: !8161)
!8173 = !DILocation(line: 2368, column: 15, scope: !8161)
!8174 = !DILocation(line: 2367, column: 34, scope: !8161)
!8175 = !DILocation(line: 2367, column: 4, scope: !8161)
!8176 = distinct !{!8176, !8165, !8177}
!8177 = !DILocation(line: 2368, column: 58, scope: !8157)
!8178 = !DILocation(line: 2370, column: 2, scope: !8134)
!8179 = !DILocation(line: 2371, column: 11, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2371, column: 11)
!8181 = !DILocation(line: 2371, column: 17, scope: !8180)
!8182 = !DILocation(line: 2371, column: 32, scope: !8180)
!8183 = !DILocation(line: 2371, column: 11, scope: !8128)
!8184 = !DILocation(line: 2372, column: 38, scope: !8180)
!8185 = !DILocation(line: 2372, column: 43, scope: !8180)
!8186 = !DILocation(line: 2372, column: 15, scope: !8180)
!8187 = !DILocation(line: 2372, column: 3, scope: !8180)
!8188 = !DILocation(line: 2372, column: 13, scope: !8180)
!8189 = !DILocation(line: 2373, column: 11, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 2373, column: 11)
!8191 = !DILocation(line: 2373, column: 18, scope: !8190)
!8192 = !DILocation(line: 2373, column: 11, scope: !8180)
!8193 = !DILocation(line: 2374, column: 3, scope: !8190)
!8194 = !DILocation(line: 2374, column: 10, scope: !8190)
!8195 = !DILocation(line: 2374, column: 19, scope: !8190)
!8196 = !DILocation(line: 2374, column: 24, scope: !8190)
!8197 = !DILocation(line: 2375, column: 11, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 2375, column: 11)
!8199 = !DILocation(line: 2375, column: 18, scope: !8198)
!8200 = !DILocation(line: 2375, column: 11, scope: !8190)
!8201 = !DILocation(line: 2376, column: 3, scope: !8198)
!8202 = !DILocation(line: 2376, column: 10, scope: !8198)
!8203 = !DILocation(line: 2376, column: 22, scope: !8198)
!8204 = !DILocation(line: 2376, column: 27, scope: !8198)
!8205 = !DILocation(line: 2376, column: 33, scope: !8198)
!8206 = !DILocation(line: 2377, column: 11, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2377, column: 11)
!8208 = !DILocation(line: 2377, column: 18, scope: !8207)
!8209 = !DILocation(line: 2377, column: 11, scope: !8198)
!8210 = !DILocation(line: 2378, column: 10, scope: !8207)
!8211 = !DILocation(line: 2378, column: 3, scope: !8207)
!8212 = !DILocation(line: 2378, column: 18, scope: !8207)
!8213 = !DILocation(line: 2378, column: 25, scope: !8207)
!8214 = !DILocation(line: 2378, column: 55, scope: !8207)
!8215 = !DILocation(line: 2378, column: 61, scope: !8207)
!8216 = !DILocation(line: 2378, column: 53, scope: !8207)
!8217 = !DILocation(line: 2380, column: 10, scope: !8207)
!8218 = !DILocation(line: 2380, column: 3, scope: !8207)
!8219 = !DILocation(line: 2380, column: 37, scope: !8207)
!8220 = !DILocation(line: 2380, column: 43, scope: !8207)
!8221 = !DILocation(line: 2380, column: 35, scope: !8207)
!8222 = !DILocation(line: 2381, column: 1, scope: !8110)
!8223 = distinct !DISubprogram(name: "RNA_property_float_get_array_range", scope: !3, file: !3, line: 2383, type: !8111, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8224 = !DILocalVariable(name: "ptr", arg: 1, scope: !8223, file: !3, line: 2383, type: !1349)
!8225 = !DILocation(line: 2383, column: 53, scope: !8223)
!8226 = !DILocalVariable(name: "prop", arg: 2, scope: !8223, file: !3, line: 2383, type: !1021)
!8227 = !DILocation(line: 2383, column: 71, scope: !8223)
!8228 = !DILocalVariable(name: "values", arg: 3, scope: !8223, file: !3, line: 2383, type: !2540)
!8229 = !DILocation(line: 2383, column: 83, scope: !8223)
!8230 = !DILocalVariable(name: "array_len", scope: !8223, file: !3, line: 2385, type: !2482)
!8231 = !DILocation(line: 2385, column: 12, scope: !8223)
!8232 = !DILocation(line: 2385, column: 50, scope: !8223)
!8233 = !DILocation(line: 2385, column: 55, scope: !8223)
!8234 = !DILocation(line: 2385, column: 24, scope: !8223)
!8235 = !DILocation(line: 2387, column: 6, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 2387, column: 6)
!8237 = !DILocation(line: 2387, column: 16, scope: !8236)
!8238 = !DILocation(line: 2387, column: 6, scope: !8223)
!8239 = !DILocation(line: 2388, column: 3, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 2387, column: 22)
!8241 = !DILocation(line: 2388, column: 13, scope: !8240)
!8242 = !DILocation(line: 2389, column: 3, scope: !8240)
!8243 = !DILocation(line: 2389, column: 13, scope: !8240)
!8244 = !DILocation(line: 2390, column: 2, scope: !8240)
!8245 = !DILocation(line: 2391, column: 11, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 2391, column: 11)
!8247 = !DILocation(line: 2391, column: 21, scope: !8246)
!8248 = !DILocation(line: 2391, column: 11, scope: !8236)
!8249 = !DILocation(line: 2392, column: 32, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 2391, column: 27)
!8251 = !DILocation(line: 2392, column: 37, scope: !8250)
!8252 = !DILocation(line: 2392, column: 43, scope: !8250)
!8253 = !DILocation(line: 2392, column: 3, scope: !8250)
!8254 = !DILocation(line: 2393, column: 15, scope: !8250)
!8255 = !DILocation(line: 2393, column: 3, scope: !8250)
!8256 = !DILocation(line: 2393, column: 13, scope: !8250)
!8257 = !DILocation(line: 2394, column: 2, scope: !8250)
!8258 = !DILocalVariable(name: "arr_stack", scope: !8259, file: !3, line: 2396, type: !8260)
!8259 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 2395, column: 7)
!8260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1285, size: 1024, elements: !2294)
!8261 = !DILocation(line: 2396, column: 9, scope: !8259)
!8262 = !DILocalVariable(name: "arr", scope: !8259, file: !3, line: 2397, type: !2540)
!8263 = !DILocation(line: 2397, column: 10, scope: !8259)
!8264 = !DILocalVariable(name: "i", scope: !8259, file: !3, line: 2398, type: !48)
!8265 = !DILocation(line: 2398, column: 7, scope: !8259)
!8266 = !DILocation(line: 2400, column: 7, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 2400, column: 7)
!8268 = !DILocation(line: 2400, column: 17, scope: !8267)
!8269 = !DILocation(line: 2400, column: 7, scope: !8259)
!8270 = !DILocation(line: 2401, column: 10, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 2400, column: 23)
!8272 = !DILocation(line: 2401, column: 38, scope: !8271)
!8273 = !DILocation(line: 2401, column: 36, scope: !8271)
!8274 = !DILocation(line: 2401, column: 8, scope: !8271)
!8275 = !DILocation(line: 2402, column: 3, scope: !8271)
!8276 = !DILocation(line: 2404, column: 10, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 2403, column: 8)
!8278 = !DILocation(line: 2404, column: 8, scope: !8277)
!8279 = !DILocation(line: 2407, column: 32, scope: !8259)
!8280 = !DILocation(line: 2407, column: 37, scope: !8259)
!8281 = !DILocation(line: 2407, column: 43, scope: !8259)
!8282 = !DILocation(line: 2407, column: 3, scope: !8259)
!8283 = !DILocation(line: 2408, column: 27, scope: !8259)
!8284 = !DILocation(line: 2408, column: 15, scope: !8259)
!8285 = !DILocation(line: 2408, column: 25, scope: !8259)
!8286 = !DILocation(line: 2408, column: 3, scope: !8259)
!8287 = !DILocation(line: 2408, column: 13, scope: !8259)
!8288 = !DILocation(line: 2409, column: 10, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 2409, column: 3)
!8290 = !DILocation(line: 2409, column: 8, scope: !8289)
!8291 = !DILocation(line: 2409, column: 15, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 2409, column: 3)
!8293 = !DILocation(line: 2409, column: 19, scope: !8292)
!8294 = !DILocation(line: 2409, column: 17, scope: !8292)
!8295 = !DILocation(line: 2409, column: 3, scope: !8289)
!8296 = !DILocation(line: 2410, column: 16, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 2409, column: 35)
!8298 = !DILocation(line: 2410, column: 4, scope: !8297)
!8299 = !DILocation(line: 2410, column: 14, scope: !8297)
!8300 = !DILocation(line: 2411, column: 16, scope: !8297)
!8301 = !DILocation(line: 2411, column: 4, scope: !8297)
!8302 = !DILocation(line: 2411, column: 14, scope: !8297)
!8303 = !DILocation(line: 2412, column: 3, scope: !8297)
!8304 = !DILocation(line: 2409, column: 31, scope: !8292)
!8305 = !DILocation(line: 2409, column: 3, scope: !8292)
!8306 = distinct !{!8306, !8295, !8307}
!8307 = !DILocation(line: 2412, column: 3, scope: !8289)
!8308 = !DILocation(line: 2414, column: 7, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 2414, column: 7)
!8310 = !DILocation(line: 2414, column: 14, scope: !8309)
!8311 = !DILocation(line: 2414, column: 11, scope: !8309)
!8312 = !DILocation(line: 2414, column: 7, scope: !8259)
!8313 = !DILocation(line: 2415, column: 4, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2414, column: 25)
!8315 = !DILocation(line: 2415, column: 14, scope: !8314)
!8316 = !DILocation(line: 2416, column: 3, scope: !8314)
!8317 = !DILocation(line: 2418, column: 1, scope: !8223)
!8318 = distinct !DISubprogram(name: "RNA_property_float_get_index", scope: !3, file: !3, line: 2420, type: !8319, scopeLine: 2421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8319 = !DISubroutineType(types: !8320)
!8320 = !{!1285, !1349, !1021, !48}
!8321 = !DILocalVariable(name: "ptr", arg: 1, scope: !8318, file: !3, line: 2420, type: !1349)
!8322 = !DILocation(line: 2420, column: 48, scope: !8318)
!8323 = !DILocalVariable(name: "prop", arg: 2, scope: !8318, file: !3, line: 2420, type: !1021)
!8324 = !DILocation(line: 2420, column: 66, scope: !8318)
!8325 = !DILocalVariable(name: "index", arg: 3, scope: !8318, file: !3, line: 2420, type: !48)
!8326 = !DILocation(line: 2420, column: 76, scope: !8318)
!8327 = !DILocalVariable(name: "tmp", scope: !8318, file: !3, line: 2422, type: !8260)
!8328 = !DILocation(line: 2422, column: 8, scope: !8318)
!8329 = !DILocalVariable(name: "len", scope: !8318, file: !3, line: 2423, type: !48)
!8330 = !DILocation(line: 2423, column: 6, scope: !8318)
!8331 = !DILocation(line: 2423, column: 45, scope: !8318)
!8332 = !DILocation(line: 2423, column: 50, scope: !8318)
!8333 = !DILocation(line: 2423, column: 12, scope: !8318)
!8334 = !DILocation(line: 2429, column: 6, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 2429, column: 6)
!8336 = !DILocation(line: 2429, column: 10, scope: !8335)
!8337 = !DILocation(line: 2429, column: 6, scope: !8318)
!8338 = !DILocation(line: 2430, column: 32, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 2429, column: 35)
!8340 = !DILocation(line: 2430, column: 37, scope: !8339)
!8341 = !DILocation(line: 2430, column: 43, scope: !8339)
!8342 = !DILocation(line: 2430, column: 3, scope: !8339)
!8343 = !DILocation(line: 2431, column: 14, scope: !8339)
!8344 = !DILocation(line: 2431, column: 10, scope: !8339)
!8345 = !DILocation(line: 2431, column: 3, scope: !8339)
!8346 = !DILocalVariable(name: "tmparray", scope: !8347, file: !3, line: 2434, type: !2540)
!8347 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 2433, column: 7)
!8348 = !DILocation(line: 2434, column: 10, scope: !8347)
!8349 = !DILocalVariable(name: "value", scope: !8347, file: !3, line: 2434, type: !1285)
!8350 = !DILocation(line: 2434, column: 20, scope: !8347)
!8351 = !DILocation(line: 2436, column: 14, scope: !8347)
!8352 = !DILocation(line: 2436, column: 42, scope: !8347)
!8353 = !DILocation(line: 2436, column: 40, scope: !8347)
!8354 = !DILocation(line: 2436, column: 12, scope: !8347)
!8355 = !DILocation(line: 2437, column: 32, scope: !8347)
!8356 = !DILocation(line: 2437, column: 37, scope: !8347)
!8357 = !DILocation(line: 2437, column: 43, scope: !8347)
!8358 = !DILocation(line: 2437, column: 3, scope: !8347)
!8359 = !DILocation(line: 2438, column: 11, scope: !8347)
!8360 = !DILocation(line: 2438, column: 20, scope: !8347)
!8361 = !DILocation(line: 2438, column: 9, scope: !8347)
!8362 = !DILocation(line: 2439, column: 3, scope: !8347)
!8363 = !DILocation(line: 2439, column: 13, scope: !8347)
!8364 = !DILocation(line: 2441, column: 10, scope: !8347)
!8365 = !DILocation(line: 2441, column: 3, scope: !8347)
!8366 = !DILocation(line: 2443, column: 1, scope: !8318)
!8367 = distinct !DISubprogram(name: "RNA_property_float_set_array", scope: !3, file: !3, line: 2445, type: !8368, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8368 = !DISubroutineType(types: !8369)
!8369 = !{null, !1349, !1021, !2546}
!8370 = !DILocalVariable(name: "ptr", arg: 1, scope: !8367, file: !3, line: 2445, type: !1349)
!8371 = !DILocation(line: 2445, column: 47, scope: !8367)
!8372 = !DILocalVariable(name: "prop", arg: 2, scope: !8367, file: !3, line: 2445, type: !1021)
!8373 = !DILocation(line: 2445, column: 65, scope: !8367)
!8374 = !DILocalVariable(name: "values", arg: 3, scope: !8367, file: !3, line: 2445, type: !2546)
!8375 = !DILocation(line: 2445, column: 84, scope: !8367)
!8376 = !DILocalVariable(name: "fprop", scope: !8367, file: !3, line: 2447, type: !2520)
!8377 = !DILocation(line: 2447, column: 20, scope: !8367)
!8378 = !DILocation(line: 2447, column: 48, scope: !8367)
!8379 = !DILocation(line: 2447, column: 28, scope: !8367)
!8380 = !DILocalVariable(name: "idprop", scope: !8367, file: !3, line: 2448, type: !987)
!8381 = !DILocation(line: 2448, column: 14, scope: !8367)
!8382 = !DILocalVariable(name: "i", scope: !8367, file: !3, line: 2449, type: !48)
!8383 = !DILocation(line: 2449, column: 6, scope: !8367)
!8384 = !DILocation(line: 2454, column: 44, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 2454, column: 6)
!8386 = !DILocation(line: 2454, column: 16, scope: !8385)
!8387 = !DILocation(line: 2454, column: 14, scope: !8385)
!8388 = !DILocation(line: 2454, column: 6, scope: !8367)
!8389 = !DILocation(line: 2456, column: 7, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 2456, column: 7)
!8391 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 2454, column: 51)
!8392 = !DILocation(line: 2456, column: 13, scope: !8390)
!8393 = !DILocation(line: 2456, column: 28, scope: !8390)
!8394 = !DILocation(line: 2456, column: 7, scope: !8391)
!8395 = !DILocation(line: 2457, column: 8, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2457, column: 8)
!8397 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2456, column: 34)
!8398 = !DILocation(line: 2457, column: 16, scope: !8396)
!8399 = !DILocation(line: 2457, column: 21, scope: !8396)
!8400 = !DILocation(line: 2457, column: 8, scope: !8397)
!8401 = !DILocation(line: 2458, column: 25, scope: !8396)
!8402 = !DILocation(line: 2458, column: 5, scope: !8396)
!8403 = !DILocation(line: 2458, column: 23, scope: !8396)
!8404 = !DILocation(line: 2460, column: 26, scope: !8396)
!8405 = !DILocation(line: 2460, column: 5, scope: !8396)
!8406 = !DILocation(line: 2460, column: 24, scope: !8396)
!8407 = !DILocation(line: 2461, column: 3, scope: !8397)
!8408 = !DILocation(line: 2462, column: 12, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2462, column: 12)
!8410 = !DILocation(line: 2462, column: 20, scope: !8409)
!8411 = !DILocation(line: 2462, column: 28, scope: !8409)
!8412 = !DILocation(line: 2462, column: 12, scope: !8390)
!8413 = !DILocation(line: 2463, column: 11, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 2462, column: 42)
!8415 = !DILocation(line: 2463, column: 30, scope: !8414)
!8416 = !DILocation(line: 2463, column: 4, scope: !8414)
!8417 = !DILocation(line: 2463, column: 54, scope: !8414)
!8418 = !DILocation(line: 2463, column: 62, scope: !8414)
!8419 = !DILocation(line: 2463, column: 52, scope: !8414)
!8420 = !DILocation(line: 2464, column: 3, scope: !8414)
!8421 = !DILocation(line: 2466, column: 11, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 2466, column: 4)
!8423 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 2465, column: 8)
!8424 = !DILocation(line: 2466, column: 9, scope: !8422)
!8425 = !DILocation(line: 2466, column: 16, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 2466, column: 4)
!8427 = !DILocation(line: 2466, column: 20, scope: !8426)
!8428 = !DILocation(line: 2466, column: 28, scope: !8426)
!8429 = !DILocation(line: 2466, column: 18, scope: !8426)
!8430 = !DILocation(line: 2466, column: 4, scope: !8422)
!8431 = !DILocation(line: 2467, column: 40, scope: !8426)
!8432 = !DILocation(line: 2467, column: 47, scope: !8426)
!8433 = !DILocation(line: 2467, column: 16, scope: !8426)
!8434 = !DILocation(line: 2467, column: 6, scope: !8426)
!8435 = !DILocation(line: 2467, column: 35, scope: !8426)
!8436 = !DILocation(line: 2467, column: 5, scope: !8426)
!8437 = !DILocation(line: 2467, column: 38, scope: !8426)
!8438 = !DILocation(line: 2466, column: 34, scope: !8426)
!8439 = !DILocation(line: 2466, column: 4, scope: !8426)
!8440 = distinct !{!8440, !8430, !8441}
!8441 = !DILocation(line: 2467, column: 48, scope: !8422)
!8442 = !DILocation(line: 2470, column: 24, scope: !8391)
!8443 = !DILocation(line: 2470, column: 3, scope: !8391)
!8444 = !DILocation(line: 2471, column: 2, scope: !8391)
!8445 = !DILocation(line: 2472, column: 11, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 2472, column: 11)
!8447 = !DILocation(line: 2472, column: 17, scope: !8446)
!8448 = !DILocation(line: 2472, column: 32, scope: !8446)
!8449 = !DILocation(line: 2472, column: 11, scope: !8385)
!8450 = !DILocation(line: 2473, column: 26, scope: !8446)
!8451 = !DILocation(line: 2473, column: 31, scope: !8446)
!8452 = !DILocation(line: 2473, column: 37, scope: !8446)
!8453 = !DILocation(line: 2473, column: 3, scope: !8446)
!8454 = !DILocation(line: 2474, column: 11, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2474, column: 11)
!8456 = !DILocation(line: 2474, column: 18, scope: !8455)
!8457 = !DILocation(line: 2474, column: 11, scope: !8446)
!8458 = !DILocation(line: 2475, column: 3, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 2474, column: 28)
!8460 = !DILocation(line: 2475, column: 10, scope: !8459)
!8461 = !DILocation(line: 2475, column: 19, scope: !8459)
!8462 = !DILocation(line: 2475, column: 24, scope: !8459)
!8463 = !DILocation(line: 2476, column: 2, scope: !8459)
!8464 = !DILocation(line: 2477, column: 11, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 2477, column: 11)
!8466 = !DILocation(line: 2477, column: 18, scope: !8465)
!8467 = !DILocation(line: 2477, column: 11, scope: !8455)
!8468 = !DILocation(line: 2478, column: 3, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 2477, column: 31)
!8470 = !DILocation(line: 2478, column: 10, scope: !8469)
!8471 = !DILocation(line: 2478, column: 22, scope: !8469)
!8472 = !DILocation(line: 2478, column: 27, scope: !8469)
!8473 = !DILocation(line: 2478, column: 33, scope: !8469)
!8474 = !DILocation(line: 2479, column: 2, scope: !8469)
!8475 = !DILocation(line: 2480, column: 11, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 2480, column: 11)
!8477 = !DILocation(line: 2480, column: 17, scope: !8476)
!8478 = !DILocation(line: 2480, column: 22, scope: !8476)
!8479 = !DILocation(line: 2480, column: 11, scope: !8465)
!8480 = !DILocalVariable(name: "val", scope: !8481, file: !3, line: 2481, type: !6946)
!8481 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 2480, column: 39)
!8482 = !DILocation(line: 2481, column: 22, scope: !8481)
!8483 = !DILocalVariable(name: "group", scope: !8481, file: !3, line: 2482, type: !987)
!8484 = !DILocation(line: 2482, column: 15, scope: !8481)
!8485 = !DILocation(line: 2486, column: 19, scope: !8481)
!8486 = !DILocation(line: 2486, column: 25, scope: !8481)
!8487 = !DILocation(line: 2486, column: 7, scope: !8481)
!8488 = !DILocation(line: 2486, column: 13, scope: !8481)
!8489 = !DILocation(line: 2486, column: 17, scope: !8481)
!8490 = !DILocation(line: 2487, column: 7, scope: !8481)
!8491 = !DILocation(line: 2487, column: 13, scope: !8481)
!8492 = !DILocation(line: 2487, column: 18, scope: !8481)
!8493 = !DILocation(line: 2489, column: 30, scope: !8481)
!8494 = !DILocation(line: 2489, column: 11, scope: !8481)
!8495 = !DILocation(line: 2489, column: 9, scope: !8481)
!8496 = !DILocation(line: 2490, column: 7, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 2490, column: 7)
!8498 = !DILocation(line: 2490, column: 7, scope: !8481)
!8499 = !DILocation(line: 2491, column: 38, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2490, column: 14)
!8501 = !DILocation(line: 2491, column: 44, scope: !8500)
!8502 = !DILocation(line: 2491, column: 13, scope: !8500)
!8503 = !DILocation(line: 2491, column: 11, scope: !8500)
!8504 = !DILocation(line: 2492, column: 19, scope: !8500)
!8505 = !DILocation(line: 2492, column: 26, scope: !8500)
!8506 = !DILocation(line: 2492, column: 4, scope: !8500)
!8507 = !DILocation(line: 2493, column: 11, scope: !8500)
!8508 = !DILocation(line: 2493, column: 30, scope: !8500)
!8509 = !DILocation(line: 2493, column: 4, scope: !8500)
!8510 = !DILocation(line: 2493, column: 54, scope: !8500)
!8511 = !DILocation(line: 2493, column: 62, scope: !8500)
!8512 = !DILocation(line: 2493, column: 52, scope: !8500)
!8513 = !DILocation(line: 2494, column: 3, scope: !8500)
!8514 = !DILocation(line: 2495, column: 2, scope: !8481)
!8515 = !DILocation(line: 2496, column: 1, scope: !8367)
!8516 = distinct !DISubprogram(name: "RNA_property_float_set_index", scope: !3, file: !3, line: 2498, type: !8517, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8517 = !DISubroutineType(types: !8518)
!8518 = !{null, !1349, !1021, !48, !1285}
!8519 = !DILocalVariable(name: "ptr", arg: 1, scope: !8516, file: !3, line: 2498, type: !1349)
!8520 = !DILocation(line: 2498, column: 47, scope: !8516)
!8521 = !DILocalVariable(name: "prop", arg: 2, scope: !8516, file: !3, line: 2498, type: !1021)
!8522 = !DILocation(line: 2498, column: 65, scope: !8516)
!8523 = !DILocalVariable(name: "index", arg: 3, scope: !8516, file: !3, line: 2498, type: !48)
!8524 = !DILocation(line: 2498, column: 75, scope: !8516)
!8525 = !DILocalVariable(name: "value", arg: 4, scope: !8516, file: !3, line: 2498, type: !1285)
!8526 = !DILocation(line: 2498, column: 88, scope: !8516)
!8527 = !DILocalVariable(name: "tmp", scope: !8516, file: !3, line: 2500, type: !8260)
!8528 = !DILocation(line: 2500, column: 8, scope: !8516)
!8529 = !DILocalVariable(name: "len", scope: !8516, file: !3, line: 2501, type: !48)
!8530 = !DILocation(line: 2501, column: 6, scope: !8516)
!8531 = !DILocation(line: 2501, column: 45, scope: !8516)
!8532 = !DILocation(line: 2501, column: 50, scope: !8516)
!8533 = !DILocation(line: 2501, column: 12, scope: !8516)
!8534 = !DILocation(line: 2507, column: 6, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 2507, column: 6)
!8536 = !DILocation(line: 2507, column: 10, scope: !8535)
!8537 = !DILocation(line: 2507, column: 6, scope: !8516)
!8538 = !DILocation(line: 2508, column: 32, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 2507, column: 35)
!8540 = !DILocation(line: 2508, column: 37, scope: !8539)
!8541 = !DILocation(line: 2508, column: 43, scope: !8539)
!8542 = !DILocation(line: 2508, column: 3, scope: !8539)
!8543 = !DILocation(line: 2509, column: 16, scope: !8539)
!8544 = !DILocation(line: 2509, column: 7, scope: !8539)
!8545 = !DILocation(line: 2509, column: 3, scope: !8539)
!8546 = !DILocation(line: 2509, column: 14, scope: !8539)
!8547 = !DILocation(line: 2510, column: 32, scope: !8539)
!8548 = !DILocation(line: 2510, column: 37, scope: !8539)
!8549 = !DILocation(line: 2510, column: 43, scope: !8539)
!8550 = !DILocation(line: 2510, column: 3, scope: !8539)
!8551 = !DILocation(line: 2511, column: 2, scope: !8539)
!8552 = !DILocalVariable(name: "tmparray", scope: !8553, file: !3, line: 2513, type: !2540)
!8553 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 2512, column: 7)
!8554 = !DILocation(line: 2513, column: 10, scope: !8553)
!8555 = !DILocation(line: 2515, column: 14, scope: !8553)
!8556 = !DILocation(line: 2515, column: 42, scope: !8553)
!8557 = !DILocation(line: 2515, column: 40, scope: !8553)
!8558 = !DILocation(line: 2515, column: 12, scope: !8553)
!8559 = !DILocation(line: 2516, column: 32, scope: !8553)
!8560 = !DILocation(line: 2516, column: 37, scope: !8553)
!8561 = !DILocation(line: 2516, column: 43, scope: !8553)
!8562 = !DILocation(line: 2516, column: 3, scope: !8553)
!8563 = !DILocation(line: 2517, column: 21, scope: !8553)
!8564 = !DILocation(line: 2517, column: 3, scope: !8553)
!8565 = !DILocation(line: 2517, column: 12, scope: !8553)
!8566 = !DILocation(line: 2517, column: 19, scope: !8553)
!8567 = !DILocation(line: 2518, column: 32, scope: !8553)
!8568 = !DILocation(line: 2518, column: 37, scope: !8553)
!8569 = !DILocation(line: 2518, column: 43, scope: !8553)
!8570 = !DILocation(line: 2518, column: 3, scope: !8553)
!8571 = !DILocation(line: 2519, column: 3, scope: !8553)
!8572 = !DILocation(line: 2519, column: 13, scope: !8553)
!8573 = !DILocation(line: 2521, column: 1, scope: !8516)
!8574 = distinct !DISubprogram(name: "RNA_property_float_get_default", scope: !3, file: !3, line: 2523, type: !7976, scopeLine: 2524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8575 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !8574, file: !3, line: 2523, type: !1349)
!8576 = !DILocation(line: 2523, column: 50, scope: !8574)
!8577 = !DILocalVariable(name: "prop", arg: 2, scope: !8574, file: !3, line: 2523, type: !1021)
!8578 = !DILocation(line: 2523, column: 76, scope: !8574)
!8579 = !DILocalVariable(name: "fprop", scope: !8574, file: !3, line: 2525, type: !2520)
!8580 = !DILocation(line: 2525, column: 20, scope: !8574)
!8581 = !DILocation(line: 2525, column: 68, scope: !8574)
!8582 = !DILocation(line: 2525, column: 48, scope: !8574)
!8583 = !DILocation(line: 2525, column: 28, scope: !8574)
!8584 = !DILocation(line: 2530, column: 9, scope: !8574)
!8585 = !DILocation(line: 2530, column: 16, scope: !8574)
!8586 = !DILocation(line: 2530, column: 2, scope: !8574)
!8587 = distinct !DISubprogram(name: "RNA_property_float_get_default_array", scope: !3, file: !3, line: 2533, type: !8111, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8588 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !8587, file: !3, line: 2533, type: !1349)
!8589 = !DILocation(line: 2533, column: 55, scope: !8587)
!8590 = !DILocalVariable(name: "prop", arg: 2, scope: !8587, file: !3, line: 2533, type: !1021)
!8591 = !DILocation(line: 2533, column: 81, scope: !8587)
!8592 = !DILocalVariable(name: "values", arg: 3, scope: !8587, file: !3, line: 2533, type: !2540)
!8593 = !DILocation(line: 2533, column: 94, scope: !8587)
!8594 = !DILocalVariable(name: "fprop", scope: !8587, file: !3, line: 2535, type: !2520)
!8595 = !DILocation(line: 2535, column: 20, scope: !8587)
!8596 = !DILocation(line: 2535, column: 68, scope: !8587)
!8597 = !DILocation(line: 2535, column: 48, scope: !8587)
!8598 = !DILocation(line: 2535, column: 28, scope: !8587)
!8599 = !DILocation(line: 2540, column: 6, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 2540, column: 6)
!8601 = !DILocation(line: 2540, column: 12, scope: !8600)
!8602 = !DILocation(line: 2540, column: 27, scope: !8600)
!8603 = !DILocation(line: 2540, column: 6, scope: !8587)
!8604 = !DILocation(line: 2541, column: 15, scope: !8600)
!8605 = !DILocation(line: 2541, column: 22, scope: !8600)
!8606 = !DILocation(line: 2541, column: 3, scope: !8600)
!8607 = !DILocation(line: 2541, column: 13, scope: !8600)
!8608 = !DILocation(line: 2542, column: 11, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8600, file: !3, line: 2542, column: 11)
!8610 = !DILocation(line: 2542, column: 18, scope: !8609)
!8611 = !DILocation(line: 2542, column: 11, scope: !8600)
!8612 = !DILocation(line: 2543, column: 10, scope: !8609)
!8613 = !DILocation(line: 2543, column: 3, scope: !8609)
!8614 = !DILocation(line: 2543, column: 18, scope: !8609)
!8615 = !DILocation(line: 2543, column: 25, scope: !8609)
!8616 = !DILocation(line: 2543, column: 55, scope: !8609)
!8617 = !DILocation(line: 2543, column: 61, scope: !8609)
!8618 = !DILocation(line: 2543, column: 53, scope: !8609)
!8619 = !DILocation(line: 2545, column: 10, scope: !8609)
!8620 = !DILocation(line: 2545, column: 3, scope: !8609)
!8621 = !DILocation(line: 2545, column: 37, scope: !8609)
!8622 = !DILocation(line: 2545, column: 43, scope: !8609)
!8623 = !DILocation(line: 2545, column: 35, scope: !8609)
!8624 = !DILocation(line: 2546, column: 1, scope: !8587)
!8625 = distinct !DISubprogram(name: "RNA_property_float_get_default_index", scope: !3, file: !3, line: 2548, type: !8319, scopeLine: 2549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8626 = !DILocalVariable(name: "ptr", arg: 1, scope: !8625, file: !3, line: 2548, type: !1349)
!8627 = !DILocation(line: 2548, column: 56, scope: !8625)
!8628 = !DILocalVariable(name: "prop", arg: 2, scope: !8625, file: !3, line: 2548, type: !1021)
!8629 = !DILocation(line: 2548, column: 74, scope: !8625)
!8630 = !DILocalVariable(name: "index", arg: 3, scope: !8625, file: !3, line: 2548, type: !48)
!8631 = !DILocation(line: 2548, column: 84, scope: !8625)
!8632 = !DILocalVariable(name: "tmp", scope: !8625, file: !3, line: 2550, type: !8260)
!8633 = !DILocation(line: 2550, column: 8, scope: !8625)
!8634 = !DILocalVariable(name: "len", scope: !8625, file: !3, line: 2551, type: !48)
!8635 = !DILocation(line: 2551, column: 6, scope: !8625)
!8636 = !DILocation(line: 2551, column: 45, scope: !8625)
!8637 = !DILocation(line: 2551, column: 50, scope: !8625)
!8638 = !DILocation(line: 2551, column: 12, scope: !8625)
!8639 = !DILocation(line: 2557, column: 6, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 2557, column: 6)
!8641 = !DILocation(line: 2557, column: 10, scope: !8640)
!8642 = !DILocation(line: 2557, column: 6, scope: !8625)
!8643 = !DILocation(line: 2558, column: 40, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 2557, column: 35)
!8645 = !DILocation(line: 2558, column: 45, scope: !8644)
!8646 = !DILocation(line: 2558, column: 51, scope: !8644)
!8647 = !DILocation(line: 2558, column: 3, scope: !8644)
!8648 = !DILocation(line: 2559, column: 14, scope: !8644)
!8649 = !DILocation(line: 2559, column: 10, scope: !8644)
!8650 = !DILocation(line: 2559, column: 3, scope: !8644)
!8651 = !DILocalVariable(name: "tmparray", scope: !8652, file: !3, line: 2562, type: !2540)
!8652 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 2561, column: 7)
!8653 = !DILocation(line: 2562, column: 10, scope: !8652)
!8654 = !DILocalVariable(name: "value", scope: !8652, file: !3, line: 2562, type: !1285)
!8655 = !DILocation(line: 2562, column: 20, scope: !8652)
!8656 = !DILocation(line: 2564, column: 14, scope: !8652)
!8657 = !DILocation(line: 2564, column: 42, scope: !8652)
!8658 = !DILocation(line: 2564, column: 40, scope: !8652)
!8659 = !DILocation(line: 2564, column: 12, scope: !8652)
!8660 = !DILocation(line: 2565, column: 40, scope: !8652)
!8661 = !DILocation(line: 2565, column: 45, scope: !8652)
!8662 = !DILocation(line: 2565, column: 51, scope: !8652)
!8663 = !DILocation(line: 2565, column: 3, scope: !8652)
!8664 = !DILocation(line: 2566, column: 11, scope: !8652)
!8665 = !DILocation(line: 2566, column: 20, scope: !8652)
!8666 = !DILocation(line: 2566, column: 9, scope: !8652)
!8667 = !DILocation(line: 2567, column: 3, scope: !8652)
!8668 = !DILocation(line: 2567, column: 13, scope: !8652)
!8669 = !DILocation(line: 2569, column: 10, scope: !8652)
!8670 = !DILocation(line: 2569, column: 3, scope: !8652)
!8671 = !DILocation(line: 2571, column: 1, scope: !8625)
!8672 = distinct !DISubprogram(name: "RNA_property_string_get", scope: !3, file: !3, line: 2573, type: !8673, scopeLine: 2574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8673 = !DISubroutineType(types: !8674)
!8674 = !{null, !1349, !1021, !1091}
!8675 = !DILocalVariable(name: "ptr", arg: 1, scope: !8672, file: !3, line: 2573, type: !1349)
!8676 = !DILocation(line: 2573, column: 42, scope: !8672)
!8677 = !DILocalVariable(name: "prop", arg: 2, scope: !8672, file: !3, line: 2573, type: !1021)
!8678 = !DILocation(line: 2573, column: 60, scope: !8672)
!8679 = !DILocalVariable(name: "value", arg: 3, scope: !8672, file: !3, line: 2573, type: !1091)
!8680 = !DILocation(line: 2573, column: 72, scope: !8672)
!8681 = !DILocalVariable(name: "sprop", scope: !8672, file: !3, line: 2575, type: !2587)
!8682 = !DILocation(line: 2575, column: 21, scope: !8672)
!8683 = !DILocation(line: 2575, column: 50, scope: !8672)
!8684 = !DILocation(line: 2575, column: 29, scope: !8672)
!8685 = !DILocalVariable(name: "idprop", scope: !8672, file: !3, line: 2576, type: !987)
!8686 = !DILocation(line: 2576, column: 14, scope: !8672)
!8687 = !DILocation(line: 2580, column: 44, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 2580, column: 6)
!8689 = !DILocation(line: 2580, column: 16, scope: !8688)
!8690 = !DILocation(line: 2580, column: 14, scope: !8688)
!8691 = !DILocation(line: 2580, column: 6, scope: !8672)
!8692 = !DILocation(line: 2583, column: 7, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 2583, column: 7)
!8694 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 2580, column: 51)
!8695 = !DILocation(line: 2583, column: 15, scope: !8693)
!8696 = !DILocation(line: 2583, column: 23, scope: !8693)
!8697 = !DILocation(line: 2583, column: 7, scope: !8694)
!8698 = !DILocation(line: 2584, column: 11, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 2583, column: 47)
!8700 = !DILocation(line: 2584, column: 18, scope: !8699)
!8701 = !DILocation(line: 2584, column: 38, scope: !8699)
!8702 = !DILocation(line: 2584, column: 46, scope: !8699)
!8703 = !DILocation(line: 2584, column: 4, scope: !8699)
!8704 = !DILocation(line: 2585, column: 4, scope: !8699)
!8705 = !DILocation(line: 2585, column: 10, scope: !8699)
!8706 = !DILocation(line: 2585, column: 18, scope: !8699)
!8707 = !DILocation(line: 2585, column: 23, scope: !8699)
!8708 = !DILocation(line: 2586, column: 3, scope: !8699)
!8709 = !DILocation(line: 2588, column: 11, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 2587, column: 8)
!8711 = !DILocation(line: 2588, column: 18, scope: !8710)
!8712 = !DILocation(line: 2588, column: 38, scope: !8710)
!8713 = !DILocation(line: 2588, column: 46, scope: !8710)
!8714 = !DILocation(line: 2588, column: 4, scope: !8710)
!8715 = !DILocation(line: 2590, column: 2, scope: !8694)
!8716 = !DILocation(line: 2591, column: 11, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 2591, column: 11)
!8718 = !DILocation(line: 2591, column: 18, scope: !8717)
!8719 = !DILocation(line: 2591, column: 11, scope: !8688)
!8720 = !DILocation(line: 2592, column: 3, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2591, column: 23)
!8722 = !DILocation(line: 2592, column: 10, scope: !8721)
!8723 = !DILocation(line: 2592, column: 14, scope: !8721)
!8724 = !DILocation(line: 2592, column: 19, scope: !8721)
!8725 = !DILocation(line: 2593, column: 2, scope: !8721)
!8726 = !DILocation(line: 2594, column: 11, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2594, column: 11)
!8728 = !DILocation(line: 2594, column: 18, scope: !8727)
!8729 = !DILocation(line: 2594, column: 11, scope: !8717)
!8730 = !DILocation(line: 2595, column: 3, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 2594, column: 26)
!8732 = !DILocation(line: 2595, column: 10, scope: !8731)
!8733 = !DILocation(line: 2595, column: 17, scope: !8731)
!8734 = !DILocation(line: 2595, column: 22, scope: !8731)
!8735 = !DILocation(line: 2595, column: 28, scope: !8731)
!8736 = !DILocation(line: 2596, column: 2, scope: !8731)
!8737 = !DILocation(line: 2598, column: 10, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 2597, column: 7)
!8739 = !DILocation(line: 2598, column: 17, scope: !8738)
!8740 = !DILocation(line: 2598, column: 24, scope: !8738)
!8741 = !DILocation(line: 2598, column: 3, scope: !8738)
!8742 = !DILocation(line: 2600, column: 1, scope: !8672)
!8743 = distinct !DISubprogram(name: "RNA_property_string_length", scope: !3, file: !3, line: 2636, type: !4409, scopeLine: 2637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8744 = !DILocalVariable(name: "ptr", arg: 1, scope: !8743, file: !3, line: 2636, type: !1349)
!8745 = !DILocation(line: 2636, column: 44, scope: !8743)
!8746 = !DILocalVariable(name: "prop", arg: 2, scope: !8743, file: !3, line: 2636, type: !1021)
!8747 = !DILocation(line: 2636, column: 62, scope: !8743)
!8748 = !DILocalVariable(name: "sprop", scope: !8743, file: !3, line: 2638, type: !2587)
!8749 = !DILocation(line: 2638, column: 21, scope: !8743)
!8750 = !DILocation(line: 2638, column: 50, scope: !8743)
!8751 = !DILocation(line: 2638, column: 29, scope: !8743)
!8752 = !DILocalVariable(name: "idprop", scope: !8743, file: !3, line: 2639, type: !987)
!8753 = !DILocation(line: 2639, column: 14, scope: !8743)
!8754 = !DILocation(line: 2643, column: 44, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 2643, column: 6)
!8756 = !DILocation(line: 2643, column: 16, scope: !8755)
!8757 = !DILocation(line: 2643, column: 14, scope: !8755)
!8758 = !DILocation(line: 2643, column: 6, scope: !8743)
!8759 = !DILocation(line: 2644, column: 7, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 2644, column: 7)
!8761 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 2643, column: 51)
!8762 = !DILocation(line: 2644, column: 15, scope: !8760)
!8763 = !DILocation(line: 2644, column: 23, scope: !8760)
!8764 = !DILocation(line: 2644, column: 7, scope: !8761)
!8765 = !DILocation(line: 2645, column: 11, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 2644, column: 47)
!8767 = !DILocation(line: 2645, column: 19, scope: !8766)
!8768 = !DILocation(line: 2645, column: 4, scope: !8766)
!8769 = !DILocation(line: 2652, column: 11, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 2647, column: 8)
!8771 = !DILocation(line: 2652, column: 19, scope: !8770)
!8772 = !DILocation(line: 2652, column: 23, scope: !8770)
!8773 = !DILocation(line: 2652, column: 4, scope: !8770)
!8774 = !DILocation(line: 2655, column: 11, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 2655, column: 11)
!8776 = !DILocation(line: 2655, column: 18, scope: !8775)
!8777 = !DILocation(line: 2655, column: 11, scope: !8755)
!8778 = !DILocation(line: 2656, column: 10, scope: !8775)
!8779 = !DILocation(line: 2656, column: 17, scope: !8775)
!8780 = !DILocation(line: 2656, column: 24, scope: !8775)
!8781 = !DILocation(line: 2656, column: 3, scope: !8775)
!8782 = !DILocation(line: 2657, column: 11, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2657, column: 11)
!8784 = !DILocation(line: 2657, column: 18, scope: !8783)
!8785 = !DILocation(line: 2657, column: 11, scope: !8775)
!8786 = !DILocation(line: 2658, column: 10, scope: !8783)
!8787 = !DILocation(line: 2658, column: 17, scope: !8783)
!8788 = !DILocation(line: 2658, column: 27, scope: !8783)
!8789 = !DILocation(line: 2658, column: 32, scope: !8783)
!8790 = !DILocation(line: 2658, column: 3, scope: !8783)
!8791 = !DILocation(line: 2660, column: 17, scope: !8783)
!8792 = !DILocation(line: 2660, column: 24, scope: !8783)
!8793 = !DILocation(line: 2660, column: 10, scope: !8783)
!8794 = !DILocation(line: 2660, column: 3, scope: !8783)
!8795 = !DILocation(line: 2661, column: 1, scope: !8743)
!8796 = distinct !DISubprogram(name: "RNA_property_string_set", scope: !3, file: !3, line: 2663, type: !8797, scopeLine: 2664, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8797 = !DISubroutineType(types: !8798)
!8798 = !{null, !1349, !1021, !1031}
!8799 = !DILocalVariable(name: "ptr", arg: 1, scope: !8796, file: !3, line: 2663, type: !1349)
!8800 = !DILocation(line: 2663, column: 42, scope: !8796)
!8801 = !DILocalVariable(name: "prop", arg: 2, scope: !8796, file: !3, line: 2663, type: !1021)
!8802 = !DILocation(line: 2663, column: 60, scope: !8796)
!8803 = !DILocalVariable(name: "value", arg: 3, scope: !8796, file: !3, line: 2663, type: !1031)
!8804 = !DILocation(line: 2663, column: 78, scope: !8796)
!8805 = !DILocalVariable(name: "sprop", scope: !8796, file: !3, line: 2665, type: !2587)
!8806 = !DILocation(line: 2665, column: 21, scope: !8796)
!8807 = !DILocation(line: 2665, column: 50, scope: !8796)
!8808 = !DILocation(line: 2665, column: 29, scope: !8796)
!8809 = !DILocalVariable(name: "idprop", scope: !8796, file: !3, line: 2666, type: !987)
!8810 = !DILocation(line: 2666, column: 14, scope: !8796)
!8811 = !DILocation(line: 2670, column: 44, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 2670, column: 6)
!8813 = !DILocation(line: 2670, column: 16, scope: !8812)
!8814 = !DILocation(line: 2670, column: 14, scope: !8812)
!8815 = !DILocation(line: 2670, column: 6, scope: !8796)
!8816 = !DILocation(line: 2672, column: 20, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 2670, column: 51)
!8818 = !DILocation(line: 2672, column: 28, scope: !8817)
!8819 = !DILocation(line: 2672, column: 65, scope: !8817)
!8820 = !DILocation(line: 2672, column: 35, scope: !8817)
!8821 = !DILocation(line: 2672, column: 71, scope: !8817)
!8822 = !DILocation(line: 2672, column: 3, scope: !8817)
!8823 = !DILocation(line: 2673, column: 24, scope: !8817)
!8824 = !DILocation(line: 2673, column: 3, scope: !8817)
!8825 = !DILocation(line: 2674, column: 2, scope: !8817)
!8826 = !DILocation(line: 2675, column: 11, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 2675, column: 11)
!8828 = !DILocation(line: 2675, column: 18, scope: !8827)
!8829 = !DILocation(line: 2675, column: 11, scope: !8812)
!8830 = !DILocation(line: 2676, column: 3, scope: !8827)
!8831 = !DILocation(line: 2676, column: 10, scope: !8827)
!8832 = !DILocation(line: 2676, column: 14, scope: !8827)
!8833 = !DILocation(line: 2676, column: 19, scope: !8827)
!8834 = !DILocation(line: 2677, column: 11, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 2677, column: 11)
!8836 = !DILocation(line: 2677, column: 18, scope: !8835)
!8837 = !DILocation(line: 2677, column: 11, scope: !8827)
!8838 = !DILocation(line: 2678, column: 3, scope: !8835)
!8839 = !DILocation(line: 2678, column: 10, scope: !8835)
!8840 = !DILocation(line: 2678, column: 17, scope: !8835)
!8841 = !DILocation(line: 2678, column: 22, scope: !8835)
!8842 = !DILocation(line: 2678, column: 28, scope: !8835)
!8843 = !DILocation(line: 2679, column: 11, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 2679, column: 11)
!8845 = !DILocation(line: 2679, column: 17, scope: !8844)
!8846 = !DILocation(line: 2679, column: 22, scope: !8844)
!8847 = !DILocation(line: 2679, column: 11, scope: !8835)
!8848 = !DILocalVariable(name: "group", scope: !8849, file: !3, line: 2680, type: !987)
!8849 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 2679, column: 39)
!8850 = !DILocation(line: 2680, column: 15, scope: !8849)
!8851 = !DILocation(line: 2682, column: 30, scope: !8849)
!8852 = !DILocation(line: 2682, column: 11, scope: !8849)
!8853 = !DILocation(line: 2682, column: 9, scope: !8849)
!8854 = !DILocation(line: 2683, column: 7, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 2683, column: 7)
!8856 = !DILocation(line: 2683, column: 7, scope: !8849)
!8857 = !DILocation(line: 2684, column: 19, scope: !8855)
!8858 = !DILocation(line: 2684, column: 40, scope: !8855)
!8859 = !DILocation(line: 2684, column: 47, scope: !8855)
!8860 = !DILocation(line: 2684, column: 53, scope: !8855)
!8861 = !DILocation(line: 2684, column: 95, scope: !8855)
!8862 = !DILocation(line: 2684, column: 65, scope: !8855)
!8863 = !DILocation(line: 2684, column: 26, scope: !8855)
!8864 = !DILocation(line: 2684, column: 4, scope: !8855)
!8865 = !DILocation(line: 2685, column: 2, scope: !8849)
!8866 = !DILocation(line: 2686, column: 1, scope: !8796)
!8867 = distinct !DISubprogram(name: "RNA_property_string_get_default", scope: !3, file: !3, line: 2688, type: !8673, scopeLine: 2689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8868 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !8867, file: !3, line: 2688, type: !1349)
!8869 = !DILocation(line: 2688, column: 50, scope: !8867)
!8870 = !DILocalVariable(name: "prop", arg: 2, scope: !8867, file: !3, line: 2688, type: !1021)
!8871 = !DILocation(line: 2688, column: 76, scope: !8867)
!8872 = !DILocalVariable(name: "value", arg: 3, scope: !8867, file: !3, line: 2688, type: !1091)
!8873 = !DILocation(line: 2688, column: 88, scope: !8867)
!8874 = !DILocalVariable(name: "sprop", scope: !8867, file: !3, line: 2690, type: !2587)
!8875 = !DILocation(line: 2690, column: 21, scope: !8867)
!8876 = !DILocation(line: 2690, column: 70, scope: !8867)
!8877 = !DILocation(line: 2690, column: 50, scope: !8867)
!8878 = !DILocation(line: 2690, column: 29, scope: !8867)
!8879 = !DILocation(line: 2694, column: 9, scope: !8867)
!8880 = !DILocation(line: 2694, column: 16, scope: !8867)
!8881 = !DILocation(line: 2694, column: 23, scope: !8867)
!8882 = !DILocation(line: 2694, column: 2, scope: !8867)
!8883 = !DILocation(line: 2695, column: 1, scope: !8867)
!8884 = distinct !DISubprogram(name: "RNA_property_string_get_default_alloc", scope: !3, file: !3, line: 2697, type: !8885, scopeLine: 2698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8885 = !DISubroutineType(types: !8886)
!8886 = !{!1091, !1349, !1021, !1091, !48}
!8887 = !DILocalVariable(name: "ptr", arg: 1, scope: !8884, file: !3, line: 2697, type: !1349)
!8888 = !DILocation(line: 2697, column: 57, scope: !8884)
!8889 = !DILocalVariable(name: "prop", arg: 2, scope: !8884, file: !3, line: 2697, type: !1021)
!8890 = !DILocation(line: 2697, column: 75, scope: !8884)
!8891 = !DILocalVariable(name: "fixedbuf", arg: 3, scope: !8884, file: !3, line: 2697, type: !1091)
!8892 = !DILocation(line: 2697, column: 87, scope: !8884)
!8893 = !DILocalVariable(name: "fixedlen", arg: 4, scope: !8884, file: !3, line: 2697, type: !48)
!8894 = !DILocation(line: 2697, column: 101, scope: !8884)
!8895 = !DILocalVariable(name: "buf", scope: !8884, file: !3, line: 2699, type: !1091)
!8896 = !DILocation(line: 2699, column: 8, scope: !8884)
!8897 = !DILocalVariable(name: "length", scope: !8884, file: !3, line: 2700, type: !48)
!8898 = !DILocation(line: 2700, column: 6, scope: !8884)
!8899 = !DILocation(line: 2704, column: 46, scope: !8884)
!8900 = !DILocation(line: 2704, column: 51, scope: !8884)
!8901 = !DILocation(line: 2704, column: 11, scope: !8884)
!8902 = !DILocation(line: 2704, column: 9, scope: !8884)
!8903 = !DILocation(line: 2706, column: 6, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8884, file: !3, line: 2706, column: 6)
!8905 = !DILocation(line: 2706, column: 13, scope: !8904)
!8906 = !DILocation(line: 2706, column: 19, scope: !8904)
!8907 = !DILocation(line: 2706, column: 17, scope: !8904)
!8908 = !DILocation(line: 2706, column: 6, scope: !8884)
!8909 = !DILocation(line: 2707, column: 9, scope: !8904)
!8910 = !DILocation(line: 2707, column: 7, scope: !8904)
!8911 = !DILocation(line: 2707, column: 3, scope: !8904)
!8912 = !DILocation(line: 2709, column: 9, scope: !8904)
!8913 = !DILocation(line: 2709, column: 37, scope: !8904)
!8914 = !DILocation(line: 2709, column: 44, scope: !8904)
!8915 = !DILocation(line: 2709, column: 36, scope: !8904)
!8916 = !DILocation(line: 2709, column: 34, scope: !8904)
!8917 = !DILocation(line: 2709, column: 7, scope: !8904)
!8918 = !DILocation(line: 2711, column: 34, scope: !8884)
!8919 = !DILocation(line: 2711, column: 39, scope: !8884)
!8920 = !DILocation(line: 2711, column: 45, scope: !8884)
!8921 = !DILocation(line: 2711, column: 2, scope: !8884)
!8922 = !DILocation(line: 2713, column: 9, scope: !8884)
!8923 = !DILocation(line: 2713, column: 2, scope: !8884)
!8924 = distinct !DISubprogram(name: "RNA_property_string_default_length", scope: !3, file: !3, line: 2717, type: !4409, scopeLine: 2718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8925 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !8924, file: !3, line: 2717, type: !1349)
!8926 = !DILocation(line: 2717, column: 52, scope: !8924)
!8927 = !DILocalVariable(name: "prop", arg: 2, scope: !8924, file: !3, line: 2717, type: !1021)
!8928 = !DILocation(line: 2717, column: 78, scope: !8924)
!8929 = !DILocalVariable(name: "sprop", scope: !8924, file: !3, line: 2719, type: !2587)
!8930 = !DILocation(line: 2719, column: 21, scope: !8924)
!8931 = !DILocation(line: 2719, column: 50, scope: !8924)
!8932 = !DILocation(line: 2719, column: 29, scope: !8924)
!8933 = !DILocation(line: 2723, column: 16, scope: !8924)
!8934 = !DILocation(line: 2723, column: 23, scope: !8924)
!8935 = !DILocation(line: 2723, column: 9, scope: !8924)
!8936 = !DILocation(line: 2723, column: 2, scope: !8924)
!8937 = distinct !DISubprogram(name: "RNA_property_enum_get", scope: !3, file: !3, line: 2726, type: !4409, scopeLine: 2727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8938 = !DILocalVariable(name: "ptr", arg: 1, scope: !8937, file: !3, line: 2726, type: !1349)
!8939 = !DILocation(line: 2726, column: 39, scope: !8937)
!8940 = !DILocalVariable(name: "prop", arg: 2, scope: !8937, file: !3, line: 2726, type: !1021)
!8941 = !DILocation(line: 2726, column: 57, scope: !8937)
!8942 = !DILocalVariable(name: "eprop", scope: !8937, file: !3, line: 2728, type: !2728)
!8943 = !DILocation(line: 2728, column: 19, scope: !8937)
!8944 = !DILocation(line: 2728, column: 46, scope: !8937)
!8945 = !DILocation(line: 2728, column: 27, scope: !8937)
!8946 = !DILocalVariable(name: "idprop", scope: !8937, file: !3, line: 2729, type: !987)
!8947 = !DILocation(line: 2729, column: 14, scope: !8937)
!8948 = !DILocation(line: 2733, column: 44, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 2733, column: 6)
!8950 = !DILocation(line: 2733, column: 16, scope: !8949)
!8951 = !DILocation(line: 2733, column: 14, scope: !8949)
!8952 = !DILocation(line: 2733, column: 6, scope: !8937)
!8953 = !DILocation(line: 2734, column: 10, scope: !8949)
!8954 = !DILocation(line: 2734, column: 3, scope: !8949)
!8955 = !DILocation(line: 2735, column: 11, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2735, column: 11)
!8957 = !DILocation(line: 2735, column: 18, scope: !8956)
!8958 = !DILocation(line: 2735, column: 11, scope: !8949)
!8959 = !DILocation(line: 2736, column: 10, scope: !8956)
!8960 = !DILocation(line: 2736, column: 17, scope: !8956)
!8961 = !DILocation(line: 2736, column: 21, scope: !8956)
!8962 = !DILocation(line: 2736, column: 3, scope: !8956)
!8963 = !DILocation(line: 2737, column: 11, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 2737, column: 11)
!8965 = !DILocation(line: 2737, column: 18, scope: !8964)
!8966 = !DILocation(line: 2737, column: 11, scope: !8956)
!8967 = !DILocation(line: 2738, column: 10, scope: !8964)
!8968 = !DILocation(line: 2738, column: 17, scope: !8964)
!8969 = !DILocation(line: 2738, column: 24, scope: !8964)
!8970 = !DILocation(line: 2738, column: 29, scope: !8964)
!8971 = !DILocation(line: 2738, column: 3, scope: !8964)
!8972 = !DILocation(line: 2740, column: 10, scope: !8964)
!8973 = !DILocation(line: 2740, column: 17, scope: !8964)
!8974 = !DILocation(line: 2740, column: 3, scope: !8964)
!8975 = !DILocation(line: 2741, column: 1, scope: !8937)
!8976 = distinct !DISubprogram(name: "RNA_property_enum_set", scope: !3, file: !3, line: 2743, type: !6887, scopeLine: 2744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!8977 = !DILocalVariable(name: "ptr", arg: 1, scope: !8976, file: !3, line: 2743, type: !1349)
!8978 = !DILocation(line: 2743, column: 40, scope: !8976)
!8979 = !DILocalVariable(name: "prop", arg: 2, scope: !8976, file: !3, line: 2743, type: !1021)
!8980 = !DILocation(line: 2743, column: 58, scope: !8976)
!8981 = !DILocalVariable(name: "value", arg: 3, scope: !8976, file: !3, line: 2743, type: !48)
!8982 = !DILocation(line: 2743, column: 68, scope: !8976)
!8983 = !DILocalVariable(name: "eprop", scope: !8976, file: !3, line: 2745, type: !2728)
!8984 = !DILocation(line: 2745, column: 19, scope: !8976)
!8985 = !DILocation(line: 2745, column: 46, scope: !8976)
!8986 = !DILocation(line: 2745, column: 27, scope: !8976)
!8987 = !DILocalVariable(name: "idprop", scope: !8976, file: !3, line: 2746, type: !987)
!8988 = !DILocation(line: 2746, column: 14, scope: !8976)
!8989 = !DILocation(line: 2750, column: 44, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 2750, column: 6)
!8991 = !DILocation(line: 2750, column: 16, scope: !8990)
!8992 = !DILocation(line: 2750, column: 14, scope: !8990)
!8993 = !DILocation(line: 2750, column: 6, scope: !8976)
!8994 = !DILocation(line: 2751, column: 21, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2750, column: 51)
!8996 = !DILocation(line: 2751, column: 3, scope: !8995)
!8997 = !DILocation(line: 2751, column: 19, scope: !8995)
!8998 = !DILocation(line: 2752, column: 24, scope: !8995)
!8999 = !DILocation(line: 2752, column: 3, scope: !8995)
!9000 = !DILocation(line: 2753, column: 2, scope: !8995)
!9001 = !DILocation(line: 2754, column: 11, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 2754, column: 11)
!9003 = !DILocation(line: 2754, column: 18, scope: !9002)
!9004 = !DILocation(line: 2754, column: 11, scope: !8990)
!9005 = !DILocation(line: 2755, column: 3, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9002, file: !3, line: 2754, column: 23)
!9007 = !DILocation(line: 2755, column: 10, scope: !9006)
!9008 = !DILocation(line: 2755, column: 14, scope: !9006)
!9009 = !DILocation(line: 2755, column: 19, scope: !9006)
!9010 = !DILocation(line: 2756, column: 2, scope: !9006)
!9011 = !DILocation(line: 2757, column: 11, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9002, file: !3, line: 2757, column: 11)
!9013 = !DILocation(line: 2757, column: 18, scope: !9012)
!9014 = !DILocation(line: 2757, column: 11, scope: !9002)
!9015 = !DILocation(line: 2758, column: 3, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 2757, column: 26)
!9017 = !DILocation(line: 2758, column: 10, scope: !9016)
!9018 = !DILocation(line: 2758, column: 17, scope: !9016)
!9019 = !DILocation(line: 2758, column: 22, scope: !9016)
!9020 = !DILocation(line: 2758, column: 28, scope: !9016)
!9021 = !DILocation(line: 2759, column: 2, scope: !9016)
!9022 = !DILocation(line: 2760, column: 11, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 2760, column: 11)
!9024 = !DILocation(line: 2760, column: 17, scope: !9023)
!9025 = !DILocation(line: 2760, column: 22, scope: !9023)
!9026 = !DILocation(line: 2760, column: 11, scope: !9012)
!9027 = !DILocalVariable(name: "val", scope: !9028, file: !3, line: 2761, type: !6946)
!9028 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 2760, column: 39)
!9029 = !DILocation(line: 2761, column: 22, scope: !9028)
!9030 = !DILocalVariable(name: "group", scope: !9028, file: !3, line: 2762, type: !987)
!9031 = !DILocation(line: 2762, column: 15, scope: !9028)
!9032 = !DILocation(line: 2764, column: 11, scope: !9028)
!9033 = !DILocation(line: 2764, column: 7, scope: !9028)
!9034 = !DILocation(line: 2764, column: 9, scope: !9028)
!9035 = !DILocation(line: 2766, column: 30, scope: !9028)
!9036 = !DILocation(line: 2766, column: 11, scope: !9028)
!9037 = !DILocation(line: 2766, column: 9, scope: !9028)
!9038 = !DILocation(line: 2767, column: 7, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 2767, column: 7)
!9040 = !DILocation(line: 2767, column: 7, scope: !9028)
!9041 = !DILocation(line: 2768, column: 19, scope: !9039)
!9042 = !DILocation(line: 2768, column: 49, scope: !9039)
!9043 = !DILocation(line: 2768, column: 55, scope: !9039)
!9044 = !DILocation(line: 2768, column: 26, scope: !9039)
!9045 = !DILocation(line: 2768, column: 4, scope: !9039)
!9046 = !DILocation(line: 2769, column: 2, scope: !9028)
!9047 = !DILocation(line: 2770, column: 1, scope: !8976)
!9048 = distinct !DISubprogram(name: "RNA_property_enum_get_default", scope: !3, file: !3, line: 2772, type: !4409, scopeLine: 2773, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9049 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !9048, file: !3, line: 2772, type: !1349)
!9050 = !DILocation(line: 2772, column: 47, scope: !9048)
!9051 = !DILocalVariable(name: "prop", arg: 2, scope: !9048, file: !3, line: 2772, type: !1021)
!9052 = !DILocation(line: 2772, column: 73, scope: !9048)
!9053 = !DILocalVariable(name: "eprop", scope: !9048, file: !3, line: 2774, type: !2728)
!9054 = !DILocation(line: 2774, column: 19, scope: !9048)
!9055 = !DILocation(line: 2774, column: 66, scope: !9048)
!9056 = !DILocation(line: 2774, column: 46, scope: !9048)
!9057 = !DILocation(line: 2774, column: 27, scope: !9048)
!9058 = !DILocation(line: 2778, column: 9, scope: !9048)
!9059 = !DILocation(line: 2778, column: 16, scope: !9048)
!9060 = !DILocation(line: 2778, column: 2, scope: !9048)
!9061 = distinct !DISubprogram(name: "RNA_property_enum_py_data_get", scope: !3, file: !3, line: 2781, type: !4401, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9062 = !DILocalVariable(name: "prop", arg: 1, scope: !9061, file: !3, line: 2781, type: !1021)
!9063 = !DILocation(line: 2781, column: 50, scope: !9061)
!9064 = !DILocalVariable(name: "eprop", scope: !9061, file: !3, line: 2783, type: !2728)
!9065 = !DILocation(line: 2783, column: 19, scope: !9061)
!9066 = !DILocation(line: 2783, column: 46, scope: !9061)
!9067 = !DILocation(line: 2783, column: 27, scope: !9061)
!9068 = !DILocation(line: 2787, column: 9, scope: !9061)
!9069 = !DILocation(line: 2787, column: 16, scope: !9061)
!9070 = !DILocation(line: 2787, column: 2, scope: !9061)
!9071 = distinct !DISubprogram(name: "RNA_property_pointer_get", scope: !3, file: !3, line: 2790, type: !9072, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{!1350, !1349, !1021}
!9074 = !DILocalVariable(name: "ptr", arg: 1, scope: !9071, file: !3, line: 2790, type: !1349)
!9075 = !DILocation(line: 2790, column: 49, scope: !9071)
!9076 = !DILocalVariable(name: "prop", arg: 2, scope: !9071, file: !3, line: 2790, type: !1021)
!9077 = !DILocation(line: 2790, column: 67, scope: !9071)
!9078 = !DILocalVariable(name: "pprop", scope: !9071, file: !3, line: 2792, type: !2618)
!9079 = !DILocation(line: 2792, column: 22, scope: !9071)
!9080 = !DILocation(line: 2792, column: 52, scope: !9071)
!9081 = !DILocation(line: 2792, column: 30, scope: !9071)
!9082 = !DILocalVariable(name: "idprop", scope: !9071, file: !3, line: 2793, type: !987)
!9083 = !DILocation(line: 2793, column: 14, scope: !9071)
!9084 = !DILocation(line: 2797, column: 44, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 2797, column: 6)
!9086 = !DILocation(line: 2797, column: 16, scope: !9085)
!9087 = !DILocation(line: 2797, column: 14, scope: !9085)
!9088 = !DILocation(line: 2797, column: 6, scope: !9071)
!9089 = !DILocation(line: 2798, column: 33, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 2797, column: 51)
!9091 = !DILocation(line: 2798, column: 11, scope: !9090)
!9092 = !DILocation(line: 2798, column: 9, scope: !9090)
!9093 = !DILocation(line: 2801, column: 7, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 2801, column: 7)
!9095 = !DILocation(line: 2801, column: 14, scope: !9094)
!9096 = !DILocation(line: 2801, column: 7, scope: !9090)
!9097 = !DILocation(line: 2802, column: 38, scope: !9094)
!9098 = !DILocation(line: 2802, column: 43, scope: !9094)
!9099 = !DILocation(line: 2802, column: 50, scope: !9094)
!9100 = !DILocation(line: 2802, column: 56, scope: !9094)
!9101 = !DILocation(line: 2802, column: 62, scope: !9094)
!9102 = !DILocation(line: 2802, column: 11, scope: !9094)
!9103 = !DILocation(line: 2802, column: 4, scope: !9094)
!9104 = !DILocation(line: 2804, column: 38, scope: !9094)
!9105 = !DILocation(line: 2804, column: 43, scope: !9094)
!9106 = !DILocation(line: 2804, column: 50, scope: !9094)
!9107 = !DILocation(line: 2804, column: 56, scope: !9094)
!9108 = !DILocation(line: 2804, column: 11, scope: !9094)
!9109 = !DILocation(line: 2804, column: 4, scope: !9094)
!9110 = !DILocation(line: 2806, column: 11, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 2806, column: 11)
!9112 = !DILocation(line: 2806, column: 18, scope: !9111)
!9113 = !DILocation(line: 2806, column: 11, scope: !9085)
!9114 = !DILocation(line: 2807, column: 10, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 2806, column: 23)
!9116 = !DILocation(line: 2807, column: 17, scope: !9115)
!9117 = !DILocation(line: 2807, column: 21, scope: !9115)
!9118 = !DILocation(line: 2807, column: 3, scope: !9115)
!9119 = !DILocation(line: 2809, column: 11, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 2809, column: 11)
!9121 = !DILocation(line: 2809, column: 17, scope: !9120)
!9122 = !DILocation(line: 2809, column: 22, scope: !9120)
!9123 = !DILocation(line: 2809, column: 11, scope: !9111)
!9124 = !DILocation(line: 2812, column: 28, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 2809, column: 41)
!9126 = !DILocation(line: 2812, column: 33, scope: !9125)
!9127 = !DILocation(line: 2812, column: 3, scope: !9125)
!9128 = !DILocation(line: 2813, column: 35, scope: !9125)
!9129 = !DILocation(line: 2813, column: 40, scope: !9125)
!9130 = !DILocation(line: 2813, column: 10, scope: !9125)
!9131 = !DILocation(line: 2813, column: 3, scope: !9125)
!9132 = !DILocation(line: 2816, column: 10, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 2815, column: 7)
!9134 = !DILocation(line: 2816, column: 3, scope: !9133)
!9135 = !DILocation(line: 2818, column: 1, scope: !9071)
!9136 = distinct !DISubprogram(name: "RNA_property_pointer_add", scope: !3, file: !3, line: 2851, type: !6665, scopeLine: 2852, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9137 = !DILocalVariable(name: "ptr", arg: 1, scope: !9136, file: !3, line: 2851, type: !1349)
!9138 = !DILocation(line: 2851, column: 43, scope: !9136)
!9139 = !DILocalVariable(name: "prop", arg: 2, scope: !9136, file: !3, line: 2851, type: !1021)
!9140 = !DILocation(line: 2851, column: 61, scope: !9136)
!9141 = !DILocation(line: 2857, column: 47, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 2857, column: 6)
!9143 = !DILocation(line: 2857, column: 19, scope: !9142)
!9144 = !DILocation(line: 2857, column: 6, scope: !9136)
!9145 = !DILocation(line: 2859, column: 2, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2857, column: 54)
!9147 = !DILocation(line: 2860, column: 11, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 2860, column: 11)
!9149 = !DILocation(line: 2860, column: 17, scope: !9148)
!9150 = !DILocation(line: 2860, column: 22, scope: !9148)
!9151 = !DILocation(line: 2860, column: 11, scope: !9142)
!9152 = !DILocalVariable(name: "val", scope: !9153, file: !3, line: 2861, type: !6946)
!9153 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 2860, column: 41)
!9154 = !DILocation(line: 2861, column: 22, scope: !9153)
!9155 = !DILocalVariable(name: "group", scope: !9153, file: !3, line: 2862, type: !987)
!9156 = !DILocation(line: 2862, column: 15, scope: !9153)
!9157 = !DILocation(line: 2864, column: 7, scope: !9153)
!9158 = !DILocation(line: 2864, column: 9, scope: !9153)
!9159 = !DILocation(line: 2866, column: 30, scope: !9153)
!9160 = !DILocation(line: 2866, column: 11, scope: !9153)
!9161 = !DILocation(line: 2866, column: 9, scope: !9153)
!9162 = !DILocation(line: 2867, column: 7, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 2867, column: 7)
!9164 = !DILocation(line: 2867, column: 7, scope: !9153)
!9165 = !DILocation(line: 2868, column: 19, scope: !9163)
!9166 = !DILocation(line: 2868, column: 51, scope: !9163)
!9167 = !DILocation(line: 2868, column: 57, scope: !9163)
!9168 = !DILocation(line: 2868, column: 26, scope: !9163)
!9169 = !DILocation(line: 2868, column: 4, scope: !9163)
!9170 = !DILocation(line: 2869, column: 2, scope: !9153)
!9171 = !DILocation(line: 2871, column: 69, scope: !9148)
!9172 = !DILocation(line: 2871, column: 74, scope: !9148)
!9173 = !DILocation(line: 2871, column: 80, scope: !9148)
!9174 = !DILocation(line: 2871, column: 92, scope: !9148)
!9175 = !DILocation(line: 2871, column: 98, scope: !9148)
!9176 = !DILocation(line: 2871, column: 3, scope: !9148)
!9177 = !DILocation(line: 2872, column: 1, scope: !9136)
!9178 = distinct !DISubprogram(name: "RNA_property_pointer_set", scope: !3, file: !3, line: 2820, type: !9179, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9179 = !DISubroutineType(types: !9180)
!9180 = !{null, !1349, !1021, !1350}
!9181 = !DILocalVariable(name: "ptr", arg: 1, scope: !9178, file: !3, line: 2820, type: !1349)
!9182 = !DILocation(line: 2820, column: 43, scope: !9178)
!9183 = !DILocalVariable(name: "prop", arg: 2, scope: !9178, file: !3, line: 2820, type: !1021)
!9184 = !DILocation(line: 2820, column: 61, scope: !9178)
!9185 = !DILocalVariable(name: "ptr_value", arg: 3, scope: !9178, file: !3, line: 2820, type: !1350)
!9186 = !DILocation(line: 2820, column: 78, scope: !9178)
!9187 = !DILocation(line: 2826, column: 49, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9178, file: !3, line: 2826, column: 6)
!9189 = !DILocation(line: 2826, column: 21, scope: !9188)
!9190 = !DILocation(line: 2826, column: 6, scope: !9178)
!9191 = !DILocation(line: 2829, column: 2, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2826, column: 56)
!9193 = !DILocalVariable(name: "pprop", scope: !9194, file: !3, line: 2831, type: !2618)
!9194 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2830, column: 7)
!9195 = !DILocation(line: 2831, column: 23, scope: !9194)
!9196 = !DILocation(line: 2831, column: 53, scope: !9194)
!9197 = !DILocation(line: 2831, column: 31, scope: !9194)
!9198 = !DILocation(line: 2833, column: 7, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 2833, column: 7)
!9200 = !DILocation(line: 2833, column: 14, scope: !9199)
!9201 = !DILocation(line: 2833, column: 18, scope: !9199)
!9202 = !DILocation(line: 2834, column: 10, scope: !9199)
!9203 = !DILocation(line: 2834, column: 16, scope: !9199)
!9204 = !DILocation(line: 2834, column: 21, scope: !9199)
!9205 = !DILocation(line: 2834, column: 40, scope: !9199)
!9206 = !DILocation(line: 2834, column: 53, scope: !9199)
!9207 = !DILocation(line: 2834, column: 58, scope: !9199)
!9208 = !DILocation(line: 2834, column: 67, scope: !9199)
!9209 = !DILocation(line: 2835, column: 10, scope: !9199)
!9210 = !DILocation(line: 2835, column: 16, scope: !9199)
!9211 = !DILocation(line: 2835, column: 21, scope: !9199)
!9212 = !DILocation(line: 2835, column: 43, scope: !9199)
!9213 = !DILocation(line: 2835, column: 46, scope: !9199)
!9214 = !DILocation(line: 2835, column: 51, scope: !9199)
!9215 = !DILocation(line: 2835, column: 54, scope: !9199)
!9216 = !DILocation(line: 2835, column: 72, scope: !9199)
!9217 = !DILocation(line: 2835, column: 75, scope: !9199)
!9218 = !DILocation(line: 2835, column: 59, scope: !9199)
!9219 = !DILocation(line: 2833, column: 7, scope: !9194)
!9220 = !DILocation(line: 2837, column: 4, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9199, file: !3, line: 2836, column: 3)
!9222 = !DILocation(line: 2837, column: 11, scope: !9221)
!9223 = !DILocation(line: 2837, column: 15, scope: !9221)
!9224 = !DILocation(line: 2838, column: 3, scope: !9221)
!9225 = !DILocation(line: 2840, column: 1, scope: !9178)
!9226 = distinct !DISubprogram(name: "RNA_property_pointer_get_default", scope: !3, file: !3, line: 2842, type: !9072, scopeLine: 2843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9227 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !9226, file: !3, line: 2842, type: !1349)
!9228 = !DILocation(line: 2842, column: 57, scope: !9226)
!9229 = !DILocalVariable(name: "UNUSED_prop", arg: 2, scope: !9226, file: !3, line: 2842, type: !1021)
!9230 = !DILocation(line: 2842, column: 83, scope: !9226)
!9231 = !DILocation(line: 2848, column: 9, scope: !9226)
!9232 = !DILocation(line: 2848, column: 2, scope: !9226)
!9233 = distinct !DISubprogram(name: "RNA_property_pointer_remove", scope: !3, file: !3, line: 2874, type: !6665, scopeLine: 2875, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9234 = !DILocalVariable(name: "ptr", arg: 1, scope: !9233, file: !3, line: 2874, type: !1349)
!9235 = !DILocation(line: 2874, column: 46, scope: !9233)
!9236 = !DILocalVariable(name: "prop", arg: 2, scope: !9233, file: !3, line: 2874, type: !1021)
!9237 = !DILocation(line: 2874, column: 64, scope: !9233)
!9238 = !DILocalVariable(name: "idprop", scope: !9233, file: !3, line: 2876, type: !987)
!9239 = !DILocation(line: 2876, column: 14, scope: !9233)
!9240 = !DILocalVariable(name: "group", scope: !9233, file: !3, line: 2876, type: !987)
!9241 = !DILocation(line: 2876, column: 23, scope: !9233)
!9242 = !DILocation(line: 2880, column: 44, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 2880, column: 6)
!9244 = !DILocation(line: 2880, column: 16, scope: !9243)
!9245 = !DILocation(line: 2880, column: 14, scope: !9243)
!9246 = !DILocation(line: 2880, column: 6, scope: !9233)
!9247 = !DILocation(line: 2881, column: 30, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 2880, column: 51)
!9249 = !DILocation(line: 2881, column: 11, scope: !9248)
!9250 = !DILocation(line: 2881, column: 9, scope: !9248)
!9251 = !DILocation(line: 2883, column: 7, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 2883, column: 7)
!9253 = !DILocation(line: 2883, column: 7, scope: !9248)
!9254 = !DILocation(line: 2884, column: 22, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 2883, column: 14)
!9256 = !DILocation(line: 2884, column: 29, scope: !9255)
!9257 = !DILocation(line: 2884, column: 4, scope: !9255)
!9258 = !DILocation(line: 2885, column: 3, scope: !9255)
!9259 = !DILocation(line: 2886, column: 2, scope: !9248)
!9260 = !DILocation(line: 2888, column: 69, scope: !9243)
!9261 = !DILocation(line: 2888, column: 74, scope: !9243)
!9262 = !DILocation(line: 2888, column: 80, scope: !9243)
!9263 = !DILocation(line: 2888, column: 92, scope: !9243)
!9264 = !DILocation(line: 2888, column: 98, scope: !9243)
!9265 = !DILocation(line: 2888, column: 3, scope: !9243)
!9266 = !DILocation(line: 2889, column: 1, scope: !9233)
!9267 = distinct !DISubprogram(name: "rna_iterator_array_begin", scope: !3, file: !3, line: 3751, type: !9268, scopeLine: 3753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9268 = !DISubroutineType(types: !9269)
!9269 = !{null, !3905, !986, !48, !48, !1381, !2676}
!9270 = !DILocalVariable(name: "iter", arg: 1, scope: !9267, file: !3, line: 3751, type: !3905)
!9271 = !DILocation(line: 3751, column: 59, scope: !9267)
!9272 = !DILocalVariable(name: "ptr", arg: 2, scope: !9267, file: !3, line: 3751, type: !986)
!9273 = !DILocation(line: 3751, column: 71, scope: !9267)
!9274 = !DILocalVariable(name: "itemsize", arg: 3, scope: !9267, file: !3, line: 3751, type: !48)
!9275 = !DILocation(line: 3751, column: 80, scope: !9267)
!9276 = !DILocalVariable(name: "length", arg: 4, scope: !9267, file: !3, line: 3751, type: !48)
!9277 = !DILocation(line: 3751, column: 94, scope: !9267)
!9278 = !DILocalVariable(name: "free_ptr", arg: 5, scope: !9267, file: !3, line: 3752, type: !1381)
!9279 = !DILocation(line: 3752, column: 36, scope: !9267)
!9280 = !DILocalVariable(name: "skip", arg: 6, scope: !9267, file: !3, line: 3752, type: !2676)
!9281 = !DILocation(line: 3752, column: 63, scope: !9267)
!9282 = !DILocalVariable(name: "internal", scope: !9267, file: !3, line: 3754, type: !9283)
!9283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!9284 = !DILocation(line: 3754, column: 17, scope: !9267)
!9285 = !DILocation(line: 3756, column: 6, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 3756, column: 6)
!9287 = !DILocation(line: 3756, column: 10, scope: !9286)
!9288 = !DILocation(line: 3756, column: 6, scope: !9267)
!9289 = !DILocation(line: 3757, column: 10, scope: !9286)
!9290 = !DILocation(line: 3757, column: 3, scope: !9286)
!9291 = !DILocation(line: 3758, column: 11, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 3758, column: 11)
!9293 = !DILocation(line: 3758, column: 18, scope: !9292)
!9294 = !DILocation(line: 3758, column: 11, scope: !9286)
!9295 = !DILocation(line: 3759, column: 7, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 3758, column: 24)
!9297 = !DILocation(line: 3760, column: 12, scope: !9296)
!9298 = !DILocation(line: 3761, column: 2, scope: !9296)
!9299 = !DILocation(line: 3763, column: 14, scope: !9267)
!9300 = !DILocation(line: 3763, column: 20, scope: !9267)
!9301 = !DILocation(line: 3763, column: 29, scope: !9267)
!9302 = !DILocation(line: 3763, column: 11, scope: !9267)
!9303 = !DILocation(line: 3764, column: 18, scope: !9267)
!9304 = !DILocation(line: 3764, column: 2, scope: !9267)
!9305 = !DILocation(line: 3764, column: 12, scope: !9267)
!9306 = !DILocation(line: 3764, column: 16, scope: !9267)
!9307 = !DILocation(line: 3765, column: 23, scope: !9267)
!9308 = !DILocation(line: 3765, column: 34, scope: !9267)
!9309 = !DILocation(line: 3765, column: 2, scope: !9267)
!9310 = !DILocation(line: 3765, column: 12, scope: !9267)
!9311 = !DILocation(line: 3765, column: 21, scope: !9267)
!9312 = !DILocation(line: 3766, column: 30, scope: !9267)
!9313 = !DILocation(line: 3766, column: 37, scope: !9267)
!9314 = !DILocation(line: 3766, column: 46, scope: !9267)
!9315 = !DILocation(line: 3766, column: 44, scope: !9267)
!9316 = !DILocation(line: 3766, column: 35, scope: !9267)
!9317 = !DILocation(line: 3766, column: 2, scope: !9267)
!9318 = !DILocation(line: 3766, column: 12, scope: !9267)
!9319 = !DILocation(line: 3766, column: 19, scope: !9267)
!9320 = !DILocation(line: 3767, column: 23, scope: !9267)
!9321 = !DILocation(line: 3767, column: 2, scope: !9267)
!9322 = !DILocation(line: 3767, column: 12, scope: !9267)
!9323 = !DILocation(line: 3767, column: 21, scope: !9267)
!9324 = !DILocation(line: 3768, column: 19, scope: !9267)
!9325 = !DILocation(line: 3768, column: 2, scope: !9267)
!9326 = !DILocation(line: 3768, column: 12, scope: !9267)
!9327 = !DILocation(line: 3768, column: 17, scope: !9267)
!9328 = !DILocation(line: 3769, column: 21, scope: !9267)
!9329 = !DILocation(line: 3769, column: 2, scope: !9267)
!9330 = !DILocation(line: 3769, column: 12, scope: !9267)
!9331 = !DILocation(line: 3769, column: 19, scope: !9267)
!9332 = !DILocation(line: 3771, column: 17, scope: !9267)
!9333 = !DILocation(line: 3771, column: 27, scope: !9267)
!9334 = !DILocation(line: 3771, column: 34, scope: !9267)
!9335 = !DILocation(line: 3771, column: 44, scope: !9267)
!9336 = !DILocation(line: 3771, column: 31, scope: !9267)
!9337 = !DILocation(line: 3771, column: 2, scope: !9267)
!9338 = !DILocation(line: 3771, column: 8, scope: !9267)
!9339 = !DILocation(line: 3771, column: 14, scope: !9267)
!9340 = !DILocation(line: 3773, column: 6, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 3773, column: 6)
!9342 = !DILocation(line: 3773, column: 11, scope: !9341)
!9343 = !DILocation(line: 3773, column: 14, scope: !9341)
!9344 = !DILocation(line: 3773, column: 20, scope: !9341)
!9345 = !DILocation(line: 3773, column: 26, scope: !9341)
!9346 = !DILocation(line: 3773, column: 29, scope: !9341)
!9347 = !DILocation(line: 3773, column: 34, scope: !9341)
!9348 = !DILocation(line: 3773, column: 40, scope: !9341)
!9349 = !DILocation(line: 3773, column: 50, scope: !9341)
!9350 = !DILocation(line: 3773, column: 6, scope: !9267)
!9351 = !DILocation(line: 3774, column: 27, scope: !9341)
!9352 = !DILocation(line: 3774, column: 3, scope: !9341)
!9353 = !DILocation(line: 3775, column: 1, scope: !9267)
!9354 = distinct !DISubprogram(name: "rna_property_collection_get_idp", scope: !3, file: !3, line: 2891, type: !3965, scopeLine: 2892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9355 = !DILocalVariable(name: "iter", arg: 1, scope: !9354, file: !3, line: 2891, type: !3905)
!9356 = !DILocation(line: 2891, column: 73, scope: !9354)
!9357 = !DILocalVariable(name: "cprop", scope: !9354, file: !3, line: 2893, type: !2647)
!9358 = !DILocation(line: 2893, column: 25, scope: !9354)
!9359 = !DILocation(line: 2893, column: 58, scope: !9354)
!9360 = !DILocation(line: 2893, column: 64, scope: !9354)
!9361 = !DILocation(line: 2893, column: 33, scope: !9354)
!9362 = !DILocation(line: 2895, column: 42, scope: !9354)
!9363 = !DILocation(line: 2895, column: 19, scope: !9354)
!9364 = !DILocation(line: 2895, column: 2, scope: !9354)
!9365 = !DILocation(line: 2895, column: 8, scope: !9354)
!9366 = !DILocation(line: 2895, column: 12, scope: !9354)
!9367 = !DILocation(line: 2895, column: 17, scope: !9354)
!9368 = !DILocation(line: 2896, column: 19, scope: !9354)
!9369 = !DILocation(line: 2896, column: 26, scope: !9354)
!9370 = !DILocation(line: 2896, column: 2, scope: !9354)
!9371 = !DILocation(line: 2896, column: 8, scope: !9354)
!9372 = !DILocation(line: 2896, column: 12, scope: !9354)
!9373 = !DILocation(line: 2896, column: 17, scope: !9354)
!9374 = !DILocation(line: 2897, column: 25, scope: !9354)
!9375 = !DILocation(line: 2897, column: 32, scope: !9354)
!9376 = !DILocation(line: 2897, column: 44, scope: !9354)
!9377 = !DILocation(line: 2897, column: 50, scope: !9354)
!9378 = !DILocation(line: 2897, column: 59, scope: !9354)
!9379 = !DILocation(line: 2897, column: 65, scope: !9354)
!9380 = !DILocation(line: 2897, column: 2, scope: !9354)
!9381 = !DILocation(line: 2898, column: 1, scope: !9354)
!9382 = distinct !DISubprogram(name: "rna_iterator_array_next", scope: !3, file: !3, line: 3777, type: !3965, scopeLine: 3778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9383 = !DILocalVariable(name: "iter", arg: 1, scope: !9382, file: !3, line: 3777, type: !3905)
!9384 = !DILocation(line: 3777, column: 58, scope: !9382)
!9385 = !DILocalVariable(name: "internal", scope: !9382, file: !3, line: 3779, type: !9283)
!9386 = !DILocation(line: 3779, column: 17, scope: !9382)
!9387 = !DILocation(line: 3779, column: 29, scope: !9382)
!9388 = !DILocation(line: 3779, column: 35, scope: !9382)
!9389 = !DILocation(line: 3779, column: 44, scope: !9382)
!9390 = !DILocation(line: 3781, column: 6, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9382, file: !3, line: 3781, column: 6)
!9392 = !DILocation(line: 3781, column: 16, scope: !9391)
!9393 = !DILocation(line: 3781, column: 6, scope: !9382)
!9394 = !DILocation(line: 3782, column: 3, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 3781, column: 22)
!9396 = !DILocation(line: 3783, column: 21, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 3782, column: 6)
!9398 = !DILocation(line: 3783, column: 31, scope: !9397)
!9399 = !DILocation(line: 3783, column: 4, scope: !9397)
!9400 = !DILocation(line: 3783, column: 14, scope: !9397)
!9401 = !DILocation(line: 3783, column: 18, scope: !9397)
!9402 = !DILocation(line: 3784, column: 19, scope: !9397)
!9403 = !DILocation(line: 3784, column: 29, scope: !9397)
!9404 = !DILocation(line: 3784, column: 36, scope: !9397)
!9405 = !DILocation(line: 3784, column: 46, scope: !9397)
!9406 = !DILocation(line: 3784, column: 33, scope: !9397)
!9407 = !DILocation(line: 3784, column: 4, scope: !9397)
!9408 = !DILocation(line: 3784, column: 10, scope: !9397)
!9409 = !DILocation(line: 3784, column: 16, scope: !9397)
!9410 = !DILocation(line: 3785, column: 3, scope: !9397)
!9411 = !DILocation(line: 3785, column: 12, scope: !9395)
!9412 = !DILocation(line: 3785, column: 18, scope: !9395)
!9413 = !DILocation(line: 3785, column: 24, scope: !9395)
!9414 = !DILocation(line: 3785, column: 27, scope: !9395)
!9415 = !DILocation(line: 3785, column: 37, scope: !9395)
!9416 = !DILocation(line: 3785, column: 42, scope: !9395)
!9417 = !DILocation(line: 3785, column: 48, scope: !9395)
!9418 = !DILocation(line: 3785, column: 58, scope: !9395)
!9419 = !DILocation(line: 0, scope: !9395)
!9420 = distinct !{!9420, !9394, !9421}
!9421 = !DILocation(line: 3785, column: 62, scope: !9395)
!9422 = !DILocation(line: 3786, column: 2, scope: !9395)
!9423 = !DILocation(line: 3788, column: 20, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 3787, column: 7)
!9425 = !DILocation(line: 3788, column: 30, scope: !9424)
!9426 = !DILocation(line: 3788, column: 3, scope: !9424)
!9427 = !DILocation(line: 3788, column: 13, scope: !9424)
!9428 = !DILocation(line: 3788, column: 17, scope: !9424)
!9429 = !DILocation(line: 3789, column: 18, scope: !9424)
!9430 = !DILocation(line: 3789, column: 28, scope: !9424)
!9431 = !DILocation(line: 3789, column: 35, scope: !9424)
!9432 = !DILocation(line: 3789, column: 45, scope: !9424)
!9433 = !DILocation(line: 3789, column: 32, scope: !9424)
!9434 = !DILocation(line: 3789, column: 3, scope: !9424)
!9435 = !DILocation(line: 3789, column: 9, scope: !9424)
!9436 = !DILocation(line: 3789, column: 15, scope: !9424)
!9437 = !DILocation(line: 3791, column: 1, scope: !9382)
!9438 = distinct !DISubprogram(name: "RNA_property_collection_skip", scope: !3, file: !3, line: 2942, type: !9439, scopeLine: 2943, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{null, !3905, !48}
!9441 = !DILocalVariable(name: "iter", arg: 1, scope: !9438, file: !3, line: 2942, type: !3905)
!9442 = !DILocation(line: 2942, column: 63, scope: !9438)
!9443 = !DILocalVariable(name: "num", arg: 2, scope: !9438, file: !3, line: 2942, type: !48)
!9444 = !DILocation(line: 2942, column: 73, scope: !9438)
!9445 = !DILocalVariable(name: "cprop", scope: !9438, file: !3, line: 2944, type: !2647)
!9446 = !DILocation(line: 2944, column: 25, scope: !9438)
!9447 = !DILocation(line: 2944, column: 78, scope: !9438)
!9448 = !DILocation(line: 2944, column: 84, scope: !9438)
!9449 = !DILocation(line: 2944, column: 58, scope: !9438)
!9450 = !DILocation(line: 2944, column: 33, scope: !9438)
!9451 = !DILocalVariable(name: "i", scope: !9438, file: !3, line: 2945, type: !48)
!9452 = !DILocation(line: 2945, column: 6, scope: !9438)
!9453 = !DILocation(line: 2947, column: 6, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 2947, column: 6)
!9455 = !DILocation(line: 2947, column: 10, scope: !9454)
!9456 = !DILocation(line: 2947, column: 14, scope: !9454)
!9457 = !DILocation(line: 2947, column: 18, scope: !9454)
!9458 = !DILocation(line: 2947, column: 24, scope: !9454)
!9459 = !DILocation(line: 2947, column: 31, scope: !9454)
!9460 = !DILocation(line: 2947, column: 35, scope: !9454)
!9461 = !DILocation(line: 2947, column: 42, scope: !9454)
!9462 = !DILocation(line: 2947, column: 51, scope: !9454)
!9463 = !DILocation(line: 2947, column: 56, scope: !9454)
!9464 = !DILocation(line: 2947, column: 6, scope: !9438)
!9465 = !DILocalVariable(name: "internal", scope: !9466, file: !3, line: 2949, type: !9283)
!9466 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 2947, column: 76)
!9467 = !DILocation(line: 2949, column: 18, scope: !9466)
!9468 = !DILocation(line: 2949, column: 30, scope: !9466)
!9469 = !DILocation(line: 2949, column: 36, scope: !9466)
!9470 = !DILocation(line: 2949, column: 45, scope: !9466)
!9471 = !DILocation(line: 2951, column: 8, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 2951, column: 7)
!9473 = !DILocation(line: 2951, column: 18, scope: !9472)
!9474 = !DILocation(line: 2951, column: 7, scope: !9466)
!9475 = !DILocation(line: 2952, column: 21, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 2951, column: 24)
!9477 = !DILocation(line: 2952, column: 31, scope: !9476)
!9478 = !DILocation(line: 2952, column: 43, scope: !9476)
!9479 = !DILocation(line: 2952, column: 47, scope: !9476)
!9480 = !DILocation(line: 2952, column: 40, scope: !9476)
!9481 = !DILocation(line: 2952, column: 4, scope: !9476)
!9482 = !DILocation(line: 2952, column: 14, scope: !9476)
!9483 = !DILocation(line: 2952, column: 18, scope: !9476)
!9484 = !DILocation(line: 2953, column: 19, scope: !9476)
!9485 = !DILocation(line: 2953, column: 29, scope: !9476)
!9486 = !DILocation(line: 2953, column: 35, scope: !9476)
!9487 = !DILocation(line: 2953, column: 45, scope: !9476)
!9488 = !DILocation(line: 2953, column: 33, scope: !9476)
!9489 = !DILocation(line: 2953, column: 4, scope: !9476)
!9490 = !DILocation(line: 2953, column: 10, scope: !9476)
!9491 = !DILocation(line: 2953, column: 16, scope: !9476)
!9492 = !DILocation(line: 2954, column: 8, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2954, column: 8)
!9494 = !DILocation(line: 2954, column: 14, scope: !9493)
!9495 = !DILocation(line: 2954, column: 8, scope: !9476)
!9496 = !DILocation(line: 2955, column: 34, scope: !9493)
!9497 = !DILocation(line: 2955, column: 5, scope: !9493)
!9498 = !DILocation(line: 2956, column: 4, scope: !9476)
!9499 = !DILocation(line: 2958, column: 2, scope: !9466)
!9500 = !DILocation(line: 2961, column: 9, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 2961, column: 2)
!9502 = !DILocation(line: 2961, column: 7, scope: !9501)
!9503 = !DILocation(line: 2961, column: 14, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 2961, column: 2)
!9505 = !DILocation(line: 2961, column: 18, scope: !9504)
!9506 = !DILocation(line: 2961, column: 16, scope: !9504)
!9507 = !DILocation(line: 2961, column: 22, scope: !9504)
!9508 = !DILocation(line: 2961, column: 25, scope: !9504)
!9509 = !DILocation(line: 2961, column: 31, scope: !9504)
!9510 = !DILocation(line: 0, scope: !9504)
!9511 = !DILocation(line: 2961, column: 2, scope: !9501)
!9512 = !DILocation(line: 2962, column: 32, scope: !9504)
!9513 = !DILocation(line: 2962, column: 3, scope: !9504)
!9514 = !DILocation(line: 2961, column: 39, scope: !9504)
!9515 = !DILocation(line: 2961, column: 2, scope: !9504)
!9516 = distinct !{!9516, !9511, !9517}
!9517 = !DILocation(line: 2962, column: 36, scope: !9501)
!9518 = !DILocation(line: 2963, column: 1, scope: !9438)
!9519 = distinct !DISubprogram(name: "rna_iterator_array_end", scope: !3, file: !3, line: 3808, type: !3965, scopeLine: 3809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9520 = !DILocalVariable(name: "iter", arg: 1, scope: !9519, file: !3, line: 3808, type: !3905)
!9521 = !DILocation(line: 3808, column: 57, scope: !9519)
!9522 = !DILocalVariable(name: "internal", scope: !9519, file: !3, line: 3810, type: !9283)
!9523 = !DILocation(line: 3810, column: 17, scope: !9519)
!9524 = !DILocation(line: 3810, column: 29, scope: !9519)
!9525 = !DILocation(line: 3810, column: 35, scope: !9519)
!9526 = !DILocation(line: 3810, column: 44, scope: !9519)
!9527 = !DILocation(line: 3812, column: 6, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 3812, column: 6)
!9529 = !DILocation(line: 3812, column: 16, scope: !9528)
!9530 = !DILocation(line: 3812, column: 6, scope: !9519)
!9531 = !DILocation(line: 3813, column: 3, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 3812, column: 26)
!9533 = !DILocation(line: 3813, column: 13, scope: !9532)
!9534 = !DILocation(line: 3813, column: 23, scope: !9532)
!9535 = !DILocation(line: 3814, column: 3, scope: !9532)
!9536 = !DILocation(line: 3814, column: 13, scope: !9532)
!9537 = !DILocation(line: 3814, column: 22, scope: !9532)
!9538 = !DILocation(line: 3815, column: 2, scope: !9532)
!9539 = !DILocation(line: 3816, column: 1, scope: !9519)
!9540 = distinct !DISubprogram(name: "RNA_property_collection_length", scope: !3, file: !3, line: 2975, type: !4409, scopeLine: 2976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9541 = !DILocalVariable(name: "ptr", arg: 1, scope: !9540, file: !3, line: 2975, type: !1349)
!9542 = !DILocation(line: 2975, column: 48, scope: !9540)
!9543 = !DILocalVariable(name: "prop", arg: 2, scope: !9540, file: !3, line: 2975, type: !1021)
!9544 = !DILocation(line: 2975, column: 66, scope: !9540)
!9545 = !DILocalVariable(name: "cprop", scope: !9540, file: !3, line: 2977, type: !2647)
!9546 = !DILocation(line: 2977, column: 25, scope: !9540)
!9547 = !DILocation(line: 2977, column: 58, scope: !9540)
!9548 = !DILocation(line: 2977, column: 33, scope: !9540)
!9549 = !DILocalVariable(name: "idprop", scope: !9540, file: !3, line: 2978, type: !987)
!9550 = !DILocation(line: 2978, column: 14, scope: !9540)
!9551 = !DILocation(line: 2982, column: 44, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 2982, column: 6)
!9553 = !DILocation(line: 2982, column: 16, scope: !9552)
!9554 = !DILocation(line: 2982, column: 14, scope: !9552)
!9555 = !DILocation(line: 2982, column: 6, scope: !9540)
!9556 = !DILocation(line: 2983, column: 10, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 2982, column: 51)
!9558 = !DILocation(line: 2983, column: 18, scope: !9557)
!9559 = !DILocation(line: 2983, column: 3, scope: !9557)
!9560 = !DILocation(line: 2985, column: 11, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 2985, column: 11)
!9562 = !DILocation(line: 2985, column: 18, scope: !9561)
!9563 = !DILocation(line: 2985, column: 11, scope: !9552)
!9564 = !DILocation(line: 2986, column: 10, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9561, file: !3, line: 2985, column: 26)
!9566 = !DILocation(line: 2986, column: 17, scope: !9565)
!9567 = !DILocation(line: 2986, column: 24, scope: !9565)
!9568 = !DILocation(line: 2986, column: 3, scope: !9565)
!9569 = !DILocalVariable(name: "iter", scope: !9570, file: !3, line: 2989, type: !3774)
!9570 = distinct !DILexicalBlock(scope: !9561, file: !3, line: 2988, column: 7)
!9571 = !DILocation(line: 2989, column: 30, scope: !9570)
!9572 = !DILocalVariable(name: "length", scope: !9570, file: !3, line: 2990, type: !48)
!9573 = !DILocation(line: 2990, column: 7, scope: !9570)
!9574 = !DILocation(line: 2992, column: 33, scope: !9570)
!9575 = !DILocation(line: 2992, column: 38, scope: !9570)
!9576 = !DILocation(line: 2992, column: 3, scope: !9570)
!9577 = !DILocation(line: 2993, column: 3, scope: !9570)
!9578 = !DILocation(line: 2993, column: 15, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 2993, column: 3)
!9580 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 2993, column: 3)
!9581 = !DILocation(line: 2993, column: 3, scope: !9580)
!9582 = !DILocation(line: 2994, column: 10, scope: !9579)
!9583 = !DILocation(line: 2994, column: 4, scope: !9579)
!9584 = !DILocation(line: 2993, column: 22, scope: !9579)
!9585 = !DILocation(line: 2993, column: 3, scope: !9579)
!9586 = distinct !{!9586, !9581, !9587}
!9587 = !DILocation(line: 2994, column: 10, scope: !9580)
!9588 = !DILocation(line: 2995, column: 3, scope: !9570)
!9589 = !DILocation(line: 2997, column: 10, scope: !9570)
!9590 = !DILocation(line: 2997, column: 3, scope: !9570)
!9591 = !DILocation(line: 2999, column: 1, scope: !9540)
!9592 = distinct !DISubprogram(name: "RNA_property_collection_add", scope: !3, file: !3, line: 3001, type: !9593, scopeLine: 3002, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{null, !1349, !1021, !1349}
!9595 = !DILocalVariable(name: "ptr", arg: 1, scope: !9592, file: !3, line: 3001, type: !1349)
!9596 = !DILocation(line: 3001, column: 46, scope: !9592)
!9597 = !DILocalVariable(name: "prop", arg: 2, scope: !9592, file: !3, line: 3001, type: !1021)
!9598 = !DILocation(line: 3001, column: 64, scope: !9592)
!9599 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !9592, file: !3, line: 3001, type: !1349)
!9600 = !DILocation(line: 3001, column: 82, scope: !9592)
!9601 = !DILocalVariable(name: "idprop", scope: !9592, file: !3, line: 3003, type: !987)
!9602 = !DILocation(line: 3003, column: 14, scope: !9592)
!9603 = !DILocation(line: 3008, column: 44, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 3008, column: 6)
!9605 = !DILocation(line: 3008, column: 16, scope: !9604)
!9606 = !DILocation(line: 3008, column: 14, scope: !9604)
!9607 = !DILocation(line: 3008, column: 6, scope: !9592)
!9608 = !DILocalVariable(name: "val", scope: !9609, file: !3, line: 3009, type: !6946)
!9609 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 3008, column: 51)
!9610 = !DILocation(line: 3009, column: 22, scope: !9609)
!9611 = !DILocalVariable(name: "item", scope: !9609, file: !3, line: 3010, type: !987)
!9612 = !DILocation(line: 3010, column: 15, scope: !9609)
!9613 = !DILocation(line: 3012, column: 10, scope: !9609)
!9614 = !DILocation(line: 3012, column: 8, scope: !9609)
!9615 = !DILocation(line: 3013, column: 19, scope: !9609)
!9616 = !DILocation(line: 3013, column: 27, scope: !9609)
!9617 = !DILocation(line: 3013, column: 3, scope: !9609)
!9618 = !DILocation(line: 3015, column: 3, scope: !9609)
!9619 = !DILocation(line: 3015, column: 13, scope: !9609)
!9620 = !DILocation(line: 3016, column: 24, scope: !9609)
!9621 = !DILocation(line: 3016, column: 3, scope: !9609)
!9622 = !DILocation(line: 3017, column: 2, scope: !9609)
!9623 = !DILocation(line: 3018, column: 11, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 3018, column: 11)
!9625 = !DILocation(line: 3018, column: 17, scope: !9624)
!9626 = !DILocation(line: 3018, column: 22, scope: !9624)
!9627 = !DILocation(line: 3018, column: 11, scope: !9604)
!9628 = !DILocalVariable(name: "group", scope: !9629, file: !3, line: 3019, type: !987)
!9629 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 3018, column: 41)
!9630 = !DILocation(line: 3019, column: 15, scope: !9629)
!9631 = !DILocalVariable(name: "item", scope: !9629, file: !3, line: 3019, type: !987)
!9632 = !DILocation(line: 3019, column: 23, scope: !9629)
!9633 = !DILocalVariable(name: "val", scope: !9629, file: !3, line: 3020, type: !6946)
!9634 = !DILocation(line: 3020, column: 22, scope: !9629)
!9635 = !DILocation(line: 3022, column: 30, scope: !9629)
!9636 = !DILocation(line: 3022, column: 11, scope: !9629)
!9637 = !DILocation(line: 3022, column: 9, scope: !9629)
!9638 = !DILocation(line: 3023, column: 7, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 3023, column: 7)
!9640 = !DILocation(line: 3023, column: 7, scope: !9629)
!9641 = !DILocation(line: 3024, column: 29, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 3023, column: 14)
!9643 = !DILocation(line: 3024, column: 35, scope: !9642)
!9644 = !DILocation(line: 3024, column: 13, scope: !9642)
!9645 = !DILocation(line: 3024, column: 11, scope: !9642)
!9646 = !DILocation(line: 3025, column: 19, scope: !9642)
!9647 = !DILocation(line: 3025, column: 26, scope: !9642)
!9648 = !DILocation(line: 3025, column: 4, scope: !9642)
!9649 = !DILocation(line: 3027, column: 11, scope: !9642)
!9650 = !DILocation(line: 3027, column: 9, scope: !9642)
!9651 = !DILocation(line: 3028, column: 20, scope: !9642)
!9652 = !DILocation(line: 3028, column: 28, scope: !9642)
!9653 = !DILocation(line: 3028, column: 4, scope: !9642)
!9654 = !DILocation(line: 3030, column: 4, scope: !9642)
!9655 = !DILocation(line: 3030, column: 14, scope: !9642)
!9656 = !DILocation(line: 3031, column: 3, scope: !9642)
!9657 = !DILocation(line: 3032, column: 2, scope: !9629)
!9658 = !DILocation(line: 3048, column: 6, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 3048, column: 6)
!9660 = !DILocation(line: 3048, column: 6, scope: !9592)
!9661 = !DILocation(line: 3049, column: 7, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 3049, column: 7)
!9663 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 3048, column: 13)
!9664 = !DILocation(line: 3049, column: 7, scope: !9663)
!9665 = !DILocalVariable(name: "cprop", scope: !9666, file: !3, line: 3050, type: !2647)
!9666 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 3049, column: 15)
!9667 = !DILocation(line: 3050, column: 27, scope: !9666)
!9668 = !DILocation(line: 3050, column: 60, scope: !9666)
!9669 = !DILocation(line: 3050, column: 35, scope: !9666)
!9670 = !DILocation(line: 3052, column: 36, scope: !9666)
!9671 = !DILocation(line: 3052, column: 44, scope: !9666)
!9672 = !DILocation(line: 3052, column: 52, scope: !9666)
!9673 = !DILocation(line: 3052, column: 56, scope: !9666)
!9674 = !DILocation(line: 3052, column: 18, scope: !9666)
!9675 = !DILocation(line: 3052, column: 4, scope: !9666)
!9676 = !DILocation(line: 3052, column: 11, scope: !9666)
!9677 = !DILocation(line: 3052, column: 16, scope: !9666)
!9678 = !DILocation(line: 3053, column: 18, scope: !9666)
!9679 = !DILocation(line: 3053, column: 25, scope: !9666)
!9680 = !DILocation(line: 3053, column: 4, scope: !9666)
!9681 = !DILocation(line: 3053, column: 11, scope: !9666)
!9682 = !DILocation(line: 3053, column: 16, scope: !9666)
!9683 = !DILocation(line: 3054, column: 33, scope: !9666)
!9684 = !DILocation(line: 3054, column: 38, scope: !9666)
!9685 = !DILocation(line: 3054, column: 4, scope: !9666)
!9686 = !DILocation(line: 3055, column: 3, scope: !9666)
!9687 = !DILocation(line: 3057, column: 11, scope: !9662)
!9688 = !DILocation(line: 3057, column: 4, scope: !9662)
!9689 = !DILocation(line: 3058, column: 2, scope: !9663)
!9690 = !DILocation(line: 3059, column: 1, scope: !9592)
!9691 = distinct !DISubprogram(name: "RNA_property_collection_remove", scope: !3, file: !3, line: 3061, type: !6253, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9692 = !DILocalVariable(name: "ptr", arg: 1, scope: !9691, file: !3, line: 3061, type: !1349)
!9693 = !DILocation(line: 3061, column: 49, scope: !9691)
!9694 = !DILocalVariable(name: "prop", arg: 2, scope: !9691, file: !3, line: 3061, type: !1021)
!9695 = !DILocation(line: 3061, column: 67, scope: !9691)
!9696 = !DILocalVariable(name: "key", arg: 3, scope: !9691, file: !3, line: 3061, type: !48)
!9697 = !DILocation(line: 3061, column: 77, scope: !9691)
!9698 = !DILocalVariable(name: "idprop", scope: !9691, file: !3, line: 3063, type: !987)
!9699 = !DILocation(line: 3063, column: 14, scope: !9691)
!9700 = !DILocation(line: 3068, column: 44, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9691, file: !3, line: 3068, column: 6)
!9702 = !DILocation(line: 3068, column: 16, scope: !9701)
!9703 = !DILocation(line: 3068, column: 14, scope: !9701)
!9704 = !DILocation(line: 3068, column: 6, scope: !9691)
!9705 = !DILocalVariable(name: "tmp", scope: !9706, file: !3, line: 3069, type: !988)
!9706 = distinct !DILexicalBlock(scope: !9701, file: !3, line: 3068, column: 51)
!9707 = !DILocation(line: 3069, column: 14, scope: !9706)
!9708 = !DILocalVariable(name: "array", scope: !9706, file: !3, line: 3069, type: !987)
!9709 = !DILocation(line: 3069, column: 20, scope: !9706)
!9710 = !DILocalVariable(name: "len", scope: !9706, file: !3, line: 3070, type: !48)
!9711 = !DILocation(line: 3070, column: 7, scope: !9706)
!9712 = !DILocation(line: 3072, column: 9, scope: !9706)
!9713 = !DILocation(line: 3072, column: 17, scope: !9706)
!9714 = !DILocation(line: 3072, column: 7, scope: !9706)
!9715 = !DILocation(line: 3073, column: 11, scope: !9706)
!9716 = !DILocation(line: 3073, column: 9, scope: !9706)
!9717 = !DILocation(line: 3075, column: 7, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 3075, column: 7)
!9719 = !DILocation(line: 3075, column: 11, scope: !9718)
!9720 = !DILocation(line: 3075, column: 16, scope: !9718)
!9721 = !DILocation(line: 3075, column: 19, scope: !9718)
!9722 = !DILocation(line: 3075, column: 25, scope: !9718)
!9723 = !DILocation(line: 3075, column: 23, scope: !9718)
!9724 = !DILocation(line: 3075, column: 7, scope: !9706)
!9725 = !DILocation(line: 3076, column: 8, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 3076, column: 8)
!9727 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 3075, column: 30)
!9728 = !DILocation(line: 3076, column: 12, scope: !9726)
!9729 = !DILocation(line: 3076, column: 18, scope: !9726)
!9730 = !DILocation(line: 3076, column: 16, scope: !9726)
!9731 = !DILocation(line: 3076, column: 8, scope: !9727)
!9732 = !DILocation(line: 3078, column: 5, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 3076, column: 23)
!9734 = !DILocation(line: 3078, column: 19, scope: !9733)
!9735 = !DILocation(line: 3078, column: 25, scope: !9733)
!9736 = !DILocation(line: 3079, column: 13, scope: !9733)
!9737 = !DILocation(line: 3079, column: 21, scope: !9733)
!9738 = !DILocation(line: 3079, column: 19, scope: !9733)
!9739 = !DILocation(line: 3079, column: 5, scope: !9733)
!9740 = !DILocation(line: 3079, column: 26, scope: !9733)
!9741 = !DILocation(line: 3079, column: 34, scope: !9733)
!9742 = !DILocation(line: 3079, column: 32, scope: !9733)
!9743 = !DILocation(line: 3079, column: 38, scope: !9733)
!9744 = !DILocation(line: 3079, column: 65, scope: !9733)
!9745 = !DILocation(line: 3079, column: 72, scope: !9733)
!9746 = !DILocation(line: 3079, column: 76, scope: !9733)
!9747 = !DILocation(line: 3079, column: 69, scope: !9733)
!9748 = !DILocation(line: 3079, column: 64, scope: !9733)
!9749 = !DILocation(line: 3079, column: 62, scope: !9733)
!9750 = !DILocation(line: 3080, column: 13, scope: !9733)
!9751 = !DILocation(line: 3080, column: 19, scope: !9733)
!9752 = !DILocation(line: 3080, column: 23, scope: !9733)
!9753 = !DILocation(line: 3080, column: 5, scope: !9733)
!9754 = !DILocation(line: 3081, column: 4, scope: !9733)
!9755 = !DILocation(line: 3083, column: 23, scope: !9727)
!9756 = !DILocation(line: 3083, column: 31, scope: !9727)
!9757 = !DILocation(line: 3083, column: 35, scope: !9727)
!9758 = !DILocation(line: 3083, column: 4, scope: !9727)
!9759 = !DILocation(line: 3084, column: 3, scope: !9727)
!9760 = !DILocation(line: 3086, column: 3, scope: !9706)
!9761 = !DILocation(line: 3088, column: 11, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9701, file: !3, line: 3088, column: 11)
!9763 = !DILocation(line: 3088, column: 17, scope: !9762)
!9764 = !DILocation(line: 3088, column: 22, scope: !9762)
!9765 = !DILocation(line: 3088, column: 11, scope: !9701)
!9766 = !DILocation(line: 3089, column: 3, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 3088, column: 41)
!9768 = !DILocation(line: 3107, column: 2, scope: !9691)
!9769 = !DILocation(line: 3108, column: 1, scope: !9691)
!9770 = distinct !DISubprogram(name: "RNA_property_collection_move", scope: !3, file: !3, line: 3110, type: !9771, scopeLine: 3111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9771 = !DISubroutineType(types: !9772)
!9772 = !{!1381, !1349, !1021, !48, !48}
!9773 = !DILocalVariable(name: "ptr", arg: 1, scope: !9770, file: !3, line: 3110, type: !1349)
!9774 = !DILocation(line: 3110, column: 47, scope: !9770)
!9775 = !DILocalVariable(name: "prop", arg: 2, scope: !9770, file: !3, line: 3110, type: !1021)
!9776 = !DILocation(line: 3110, column: 65, scope: !9770)
!9777 = !DILocalVariable(name: "key", arg: 3, scope: !9770, file: !3, line: 3110, type: !48)
!9778 = !DILocation(line: 3110, column: 75, scope: !9770)
!9779 = !DILocalVariable(name: "pos", arg: 4, scope: !9770, file: !3, line: 3110, type: !48)
!9780 = !DILocation(line: 3110, column: 84, scope: !9770)
!9781 = !DILocalVariable(name: "idprop", scope: !9770, file: !3, line: 3112, type: !987)
!9782 = !DILocation(line: 3112, column: 14, scope: !9770)
!9783 = !DILocation(line: 3116, column: 44, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 3116, column: 6)
!9785 = !DILocation(line: 3116, column: 16, scope: !9784)
!9786 = !DILocation(line: 3116, column: 14, scope: !9784)
!9787 = !DILocation(line: 3116, column: 6, scope: !9770)
!9788 = !DILocalVariable(name: "tmp", scope: !9789, file: !3, line: 3117, type: !988)
!9789 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 3116, column: 51)
!9790 = !DILocation(line: 3117, column: 14, scope: !9789)
!9791 = !DILocalVariable(name: "array", scope: !9789, file: !3, line: 3117, type: !987)
!9792 = !DILocation(line: 3117, column: 20, scope: !9789)
!9793 = !DILocalVariable(name: "len", scope: !9789, file: !3, line: 3118, type: !48)
!9794 = !DILocation(line: 3118, column: 7, scope: !9789)
!9795 = !DILocation(line: 3120, column: 9, scope: !9789)
!9796 = !DILocation(line: 3120, column: 17, scope: !9789)
!9797 = !DILocation(line: 3120, column: 7, scope: !9789)
!9798 = !DILocation(line: 3121, column: 11, scope: !9789)
!9799 = !DILocation(line: 3121, column: 9, scope: !9789)
!9800 = !DILocation(line: 3123, column: 7, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 3123, column: 7)
!9802 = !DILocation(line: 3123, column: 11, scope: !9801)
!9803 = !DILocation(line: 3123, column: 16, scope: !9801)
!9804 = !DILocation(line: 3123, column: 19, scope: !9801)
!9805 = !DILocation(line: 3123, column: 25, scope: !9801)
!9806 = !DILocation(line: 3123, column: 23, scope: !9801)
!9807 = !DILocation(line: 3123, column: 29, scope: !9801)
!9808 = !DILocation(line: 3123, column: 32, scope: !9801)
!9809 = !DILocation(line: 3123, column: 36, scope: !9801)
!9810 = !DILocation(line: 3123, column: 41, scope: !9801)
!9811 = !DILocation(line: 3123, column: 44, scope: !9801)
!9812 = !DILocation(line: 3123, column: 50, scope: !9801)
!9813 = !DILocation(line: 3123, column: 48, scope: !9801)
!9814 = !DILocation(line: 3123, column: 54, scope: !9801)
!9815 = !DILocation(line: 3123, column: 57, scope: !9801)
!9816 = !DILocation(line: 3123, column: 64, scope: !9801)
!9817 = !DILocation(line: 3123, column: 61, scope: !9801)
!9818 = !DILocation(line: 3123, column: 7, scope: !9789)
!9819 = !DILocation(line: 3124, column: 4, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 3123, column: 69)
!9821 = !DILocation(line: 3124, column: 18, scope: !9820)
!9822 = !DILocation(line: 3124, column: 24, scope: !9820)
!9823 = !DILocation(line: 3125, column: 8, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 3125, column: 8)
!9825 = !DILocation(line: 3125, column: 14, scope: !9824)
!9826 = !DILocation(line: 3125, column: 12, scope: !9824)
!9827 = !DILocation(line: 3125, column: 8, scope: !9820)
!9828 = !DILocation(line: 3126, column: 13, scope: !9824)
!9829 = !DILocation(line: 3126, column: 21, scope: !9824)
!9830 = !DILocation(line: 3126, column: 19, scope: !9824)
!9831 = !DILocation(line: 3126, column: 25, scope: !9824)
!9832 = !DILocation(line: 3126, column: 5, scope: !9824)
!9833 = !DILocation(line: 3126, column: 30, scope: !9824)
!9834 = !DILocation(line: 3126, column: 38, scope: !9824)
!9835 = !DILocation(line: 3126, column: 36, scope: !9824)
!9836 = !DILocation(line: 3126, column: 65, scope: !9824)
!9837 = !DILocation(line: 3126, column: 71, scope: !9824)
!9838 = !DILocation(line: 3126, column: 69, scope: !9824)
!9839 = !DILocation(line: 3126, column: 64, scope: !9824)
!9840 = !DILocation(line: 3126, column: 62, scope: !9824)
!9841 = !DILocation(line: 3128, column: 13, scope: !9824)
!9842 = !DILocation(line: 3128, column: 21, scope: !9824)
!9843 = !DILocation(line: 3128, column: 19, scope: !9824)
!9844 = !DILocation(line: 3128, column: 5, scope: !9824)
!9845 = !DILocation(line: 3128, column: 26, scope: !9824)
!9846 = !DILocation(line: 3128, column: 34, scope: !9824)
!9847 = !DILocation(line: 3128, column: 32, scope: !9824)
!9848 = !DILocation(line: 3128, column: 38, scope: !9824)
!9849 = !DILocation(line: 3128, column: 65, scope: !9824)
!9850 = !DILocation(line: 3128, column: 71, scope: !9824)
!9851 = !DILocation(line: 3128, column: 69, scope: !9824)
!9852 = !DILocation(line: 3128, column: 64, scope: !9824)
!9853 = !DILocation(line: 3128, column: 62, scope: !9824)
!9854 = !DILocation(line: 3129, column: 12, scope: !9820)
!9855 = !DILocation(line: 3129, column: 18, scope: !9820)
!9856 = !DILocation(line: 3129, column: 4, scope: !9820)
!9857 = !DILocation(line: 3130, column: 3, scope: !9820)
!9858 = !DILocation(line: 3132, column: 3, scope: !9789)
!9859 = !DILocation(line: 3134, column: 11, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 3134, column: 11)
!9861 = !DILocation(line: 3134, column: 17, scope: !9860)
!9862 = !DILocation(line: 3134, column: 22, scope: !9860)
!9863 = !DILocation(line: 3134, column: 11, scope: !9784)
!9864 = !DILocation(line: 3135, column: 3, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9860, file: !3, line: 3134, column: 41)
!9866 = !DILocation(line: 3138, column: 2, scope: !9770)
!9867 = !DILocation(line: 3139, column: 1, scope: !9770)
!9868 = distinct !DISubprogram(name: "RNA_property_collection_clear", scope: !3, file: !3, line: 3141, type: !6665, scopeLine: 3142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9869 = !DILocalVariable(name: "ptr", arg: 1, scope: !9868, file: !3, line: 3141, type: !1349)
!9870 = !DILocation(line: 3141, column: 48, scope: !9868)
!9871 = !DILocalVariable(name: "prop", arg: 2, scope: !9868, file: !3, line: 3141, type: !1021)
!9872 = !DILocation(line: 3141, column: 66, scope: !9868)
!9873 = !DILocalVariable(name: "idprop", scope: !9868, file: !3, line: 3143, type: !987)
!9874 = !DILocation(line: 3143, column: 14, scope: !9868)
!9875 = !DILocation(line: 3147, column: 44, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9868, file: !3, line: 3147, column: 6)
!9877 = !DILocation(line: 3147, column: 16, scope: !9876)
!9878 = !DILocation(line: 3147, column: 14, scope: !9876)
!9879 = !DILocation(line: 3147, column: 6, scope: !9868)
!9880 = !DILocation(line: 3148, column: 22, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 3147, column: 51)
!9882 = !DILocation(line: 3148, column: 3, scope: !9881)
!9883 = !DILocation(line: 3149, column: 24, scope: !9881)
!9884 = !DILocation(line: 3149, column: 3, scope: !9881)
!9885 = !DILocation(line: 3150, column: 2, scope: !9881)
!9886 = !DILocation(line: 3151, column: 1, scope: !9868)
!9887 = distinct !DISubprogram(name: "RNA_property_collection_lookup_index", scope: !3, file: !3, line: 3153, type: !5412, scopeLine: 3154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9888 = !DILocalVariable(name: "ptr", arg: 1, scope: !9887, file: !3, line: 3153, type: !1349)
!9889 = !DILocation(line: 3153, column: 54, scope: !9887)
!9890 = !DILocalVariable(name: "prop", arg: 2, scope: !9887, file: !3, line: 3153, type: !1021)
!9891 = !DILocation(line: 3153, column: 72, scope: !9887)
!9892 = !DILocalVariable(name: "t_ptr", arg: 3, scope: !9887, file: !3, line: 3153, type: !1349)
!9893 = !DILocation(line: 3153, column: 90, scope: !9887)
!9894 = !DILocalVariable(name: "iter", scope: !9887, file: !3, line: 3155, type: !3774)
!9895 = !DILocation(line: 3155, column: 29, scope: !9887)
!9896 = !DILocalVariable(name: "index", scope: !9887, file: !3, line: 3156, type: !48)
!9897 = !DILocation(line: 3156, column: 6, scope: !9887)
!9898 = !DILocation(line: 3160, column: 32, scope: !9887)
!9899 = !DILocation(line: 3160, column: 37, scope: !9887)
!9900 = !DILocation(line: 3160, column: 2, scope: !9887)
!9901 = !DILocation(line: 3161, column: 13, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 3161, column: 2)
!9903 = !DILocation(line: 3161, column: 7, scope: !9902)
!9904 = !DILocation(line: 3161, column: 23, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 3161, column: 2)
!9906 = !DILocation(line: 3161, column: 2, scope: !9902)
!9907 = !DILocation(line: 3162, column: 12, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !3, line: 3162, column: 7)
!9909 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 3161, column: 76)
!9910 = !DILocation(line: 3162, column: 16, scope: !9908)
!9911 = !DILocation(line: 3162, column: 24, scope: !9908)
!9912 = !DILocation(line: 3162, column: 31, scope: !9908)
!9913 = !DILocation(line: 3162, column: 21, scope: !9908)
!9914 = !DILocation(line: 3162, column: 7, scope: !9909)
!9915 = !DILocation(line: 3163, column: 4, scope: !9908)
!9916 = !DILocation(line: 3164, column: 2, scope: !9909)
!9917 = !DILocation(line: 3161, column: 30, scope: !9905)
!9918 = !DILocation(line: 3161, column: 72, scope: !9905)
!9919 = !DILocation(line: 3161, column: 2, scope: !9905)
!9920 = distinct !{!9920, !9906, !9921}
!9921 = !DILocation(line: 3164, column: 2, scope: !9902)
!9922 = !DILocation(line: 3165, column: 2, scope: !9887)
!9923 = !DILocation(line: 3168, column: 11, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 3168, column: 6)
!9925 = !DILocation(line: 3168, column: 6, scope: !9924)
!9926 = !DILocation(line: 3168, column: 6, scope: !9887)
!9927 = !DILocation(line: 3169, column: 10, scope: !9924)
!9928 = !DILocation(line: 3169, column: 3, scope: !9924)
!9929 = !DILocation(line: 3171, column: 3, scope: !9924)
!9930 = !DILocation(line: 3172, column: 1, scope: !9887)
!9931 = distinct !DISubprogram(name: "RNA_property_collection_lookup_int", scope: !3, file: !3, line: 3174, type: !9932, scopeLine: 3175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9932 = !DISubroutineType(types: !9933)
!9933 = !{!48, !1349, !1021, !48, !1349}
!9934 = !DILocalVariable(name: "ptr", arg: 1, scope: !9931, file: !3, line: 3174, type: !1349)
!9935 = !DILocation(line: 3174, column: 52, scope: !9931)
!9936 = !DILocalVariable(name: "prop", arg: 2, scope: !9931, file: !3, line: 3174, type: !1021)
!9937 = !DILocation(line: 3174, column: 70, scope: !9931)
!9938 = !DILocalVariable(name: "key", arg: 3, scope: !9931, file: !3, line: 3174, type: !48)
!9939 = !DILocation(line: 3174, column: 80, scope: !9931)
!9940 = !DILocalVariable(name: "r_ptr", arg: 4, scope: !9931, file: !3, line: 3174, type: !1349)
!9941 = !DILocation(line: 3174, column: 97, scope: !9931)
!9942 = !DILocalVariable(name: "cprop", scope: !9931, file: !3, line: 3176, type: !2647)
!9943 = !DILocation(line: 3176, column: 25, scope: !9931)
!9944 = !DILocation(line: 3176, column: 78, scope: !9931)
!9945 = !DILocation(line: 3176, column: 58, scope: !9931)
!9946 = !DILocation(line: 3176, column: 33, scope: !9931)
!9947 = !DILocation(line: 3180, column: 6, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9931, file: !3, line: 3180, column: 6)
!9949 = !DILocation(line: 3180, column: 13, scope: !9948)
!9950 = !DILocation(line: 3180, column: 6, scope: !9931)
!9951 = !DILocation(line: 3182, column: 10, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 3180, column: 24)
!9953 = !DILocation(line: 3182, column: 17, scope: !9952)
!9954 = !DILocation(line: 3182, column: 27, scope: !9952)
!9955 = !DILocation(line: 3182, column: 32, scope: !9952)
!9956 = !DILocation(line: 3182, column: 37, scope: !9952)
!9957 = !DILocation(line: 3182, column: 3, scope: !9952)
!9958 = !DILocalVariable(name: "iter", scope: !9959, file: !3, line: 3186, type: !3774)
!9959 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 3184, column: 7)
!9960 = !DILocation(line: 3186, column: 30, scope: !9959)
!9961 = !DILocalVariable(name: "i", scope: !9959, file: !3, line: 3187, type: !48)
!9962 = !DILocation(line: 3187, column: 7, scope: !9959)
!9963 = !DILocation(line: 3189, column: 33, scope: !9959)
!9964 = !DILocation(line: 3189, column: 38, scope: !9959)
!9965 = !DILocation(line: 3189, column: 3, scope: !9959)
!9966 = !DILocation(line: 3190, column: 10, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 3190, column: 3)
!9968 = !DILocation(line: 3190, column: 8, scope: !9967)
!9969 = !DILocation(line: 3190, column: 20, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 3190, column: 3)
!9971 = !DILocation(line: 3190, column: 3, scope: !9967)
!9972 = !DILocation(line: 3191, column: 8, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 3191, column: 8)
!9974 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 3190, column: 69)
!9975 = !DILocation(line: 3191, column: 13, scope: !9973)
!9976 = !DILocation(line: 3191, column: 10, scope: !9973)
!9977 = !DILocation(line: 3191, column: 8, scope: !9974)
!9978 = !DILocation(line: 3192, column: 6, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 3191, column: 18)
!9980 = !DILocation(line: 3192, column: 19, scope: !9979)
!9981 = !DILocation(line: 3193, column: 5, scope: !9979)
!9982 = !DILocation(line: 3195, column: 3, scope: !9974)
!9983 = !DILocation(line: 3190, column: 27, scope: !9970)
!9984 = !DILocation(line: 3190, column: 65, scope: !9970)
!9985 = !DILocation(line: 3190, column: 3, scope: !9970)
!9986 = distinct !{!9986, !9971, !9987}
!9987 = !DILocation(line: 3195, column: 3, scope: !9967)
!9988 = !DILocation(line: 3196, column: 3, scope: !9959)
!9989 = !DILocation(line: 3198, column: 13, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 3198, column: 7)
!9991 = !DILocation(line: 3198, column: 8, scope: !9990)
!9992 = !DILocation(line: 3198, column: 7, scope: !9959)
!9993 = !DILocation(line: 3199, column: 11, scope: !9990)
!9994 = !DILocation(line: 3199, column: 4, scope: !9990)
!9995 = !DILocation(line: 3201, column: 15, scope: !9959)
!9996 = !DILocation(line: 3201, column: 3, scope: !9959)
!9997 = !DILocation(line: 3203, column: 1, scope: !9931)
!9998 = distinct !DISubprogram(name: "RNA_property_collection_assign_int", scope: !3, file: !3, line: 3253, type: !9999, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!9999 = !DISubroutineType(types: !10000)
!10000 = !{!48, !1349, !1021, !2482, !10001}
!10001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!10002 = !DILocalVariable(name: "ptr", arg: 1, scope: !9998, file: !3, line: 3253, type: !1349)
!10003 = !DILocation(line: 3253, column: 52, scope: !9998)
!10004 = !DILocalVariable(name: "prop", arg: 2, scope: !9998, file: !3, line: 3253, type: !1021)
!10005 = !DILocation(line: 3253, column: 70, scope: !9998)
!10006 = !DILocalVariable(name: "key", arg: 3, scope: !9998, file: !3, line: 3253, type: !2482)
!10007 = !DILocation(line: 3253, column: 86, scope: !9998)
!10008 = !DILocalVariable(name: "assign_ptr", arg: 4, scope: !9998, file: !3, line: 3253, type: !10001)
!10009 = !DILocation(line: 3253, column: 109, scope: !9998)
!10010 = !DILocalVariable(name: "cprop", scope: !9998, file: !3, line: 3255, type: !2647)
!10011 = !DILocation(line: 3255, column: 25, scope: !9998)
!10012 = !DILocation(line: 3255, column: 78, scope: !9998)
!10013 = !DILocation(line: 3255, column: 58, scope: !9998)
!10014 = !DILocation(line: 3255, column: 33, scope: !9998)
!10015 = !DILocation(line: 3259, column: 6, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 3259, column: 6)
!10017 = !DILocation(line: 3259, column: 13, scope: !10016)
!10018 = !DILocation(line: 3259, column: 6, scope: !9998)
!10019 = !DILocation(line: 3261, column: 10, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 3259, column: 24)
!10021 = !DILocation(line: 3261, column: 17, scope: !10020)
!10022 = !DILocation(line: 3261, column: 27, scope: !10020)
!10023 = !DILocation(line: 3261, column: 32, scope: !10020)
!10024 = !DILocation(line: 3261, column: 37, scope: !10020)
!10025 = !DILocation(line: 3261, column: 3, scope: !10020)
!10026 = !DILocation(line: 3264, column: 2, scope: !9998)
!10027 = !DILocation(line: 3265, column: 1, scope: !9998)
!10028 = distinct !DISubprogram(name: "RNA_property_collection_type_get", scope: !3, file: !3, line: 3267, type: !10029, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10029 = !DISubroutineType(types: !10030)
!10030 = !{!1381, !1349, !1021, !1349}
!10031 = !DILocalVariable(name: "ptr", arg: 1, scope: !10028, file: !3, line: 3267, type: !1349)
!10032 = !DILocation(line: 3267, column: 51, scope: !10028)
!10033 = !DILocalVariable(name: "prop", arg: 2, scope: !10028, file: !3, line: 3267, type: !1021)
!10034 = !DILocation(line: 3267, column: 69, scope: !10028)
!10035 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !10028, file: !3, line: 3267, type: !1349)
!10036 = !DILocation(line: 3267, column: 87, scope: !10028)
!10037 = !DILocation(line: 3271, column: 3, scope: !10028)
!10038 = !DILocation(line: 3271, column: 12, scope: !10028)
!10039 = !DILocation(line: 3271, column: 11, scope: !10028)
!10040 = !DILocation(line: 3272, column: 45, scope: !10028)
!10041 = !DILocation(line: 3272, column: 25, scope: !10028)
!10042 = !DILocation(line: 3272, column: 52, scope: !10028)
!10043 = !DILocation(line: 3272, column: 11, scope: !10028)
!10044 = !DILocation(line: 3272, column: 18, scope: !10028)
!10045 = !DILocation(line: 3272, column: 23, scope: !10028)
!10046 = !DILocation(line: 3272, column: 10, scope: !10028)
!10047 = !DILocation(line: 3272, column: 9, scope: !10028)
!10048 = !DILocation(line: 3272, column: 2, scope: !10028)
!10049 = distinct !DISubprogram(name: "RNA_property_collection_raw_array", scope: !3, file: !3, line: 3275, type: !10050, scopeLine: 3276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{!48, !1349, !1021, !1021, !10052}
!10052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10053, size: 64)
!10053 = !DIDerivedType(tag: DW_TAG_typedef, name: "RawArray", file: !6, line: 300, baseType: !10054)
!10054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RawArray", file: !6, line: 295, size: 192, elements: !10055)
!10055 = !{!10056, !10057, !10058, !10059}
!10056 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !10054, file: !6, line: 296, baseType: !986, size: 64)
!10057 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10054, file: !6, line: 297, baseType: !2454, size: 32, offset: 64)
!10058 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10054, file: !6, line: 298, baseType: !48, size: 32, offset: 96)
!10059 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !10054, file: !6, line: 299, baseType: !48, size: 32, offset: 128)
!10060 = !DILocalVariable(name: "ptr", arg: 1, scope: !10049, file: !3, line: 3275, type: !1349)
!10061 = !DILocation(line: 3275, column: 51, scope: !10049)
!10062 = !DILocalVariable(name: "prop", arg: 2, scope: !10049, file: !3, line: 3275, type: !1021)
!10063 = !DILocation(line: 3275, column: 69, scope: !10049)
!10064 = !DILocalVariable(name: "itemprop", arg: 3, scope: !10049, file: !3, line: 3275, type: !1021)
!10065 = !DILocation(line: 3275, column: 88, scope: !10049)
!10066 = !DILocalVariable(name: "array", arg: 4, scope: !10049, file: !3, line: 3275, type: !10052)
!10067 = !DILocation(line: 3275, column: 108, scope: !10049)
!10068 = !DILocalVariable(name: "iter", scope: !10049, file: !3, line: 3277, type: !3774)
!10069 = !DILocation(line: 3277, column: 29, scope: !10049)
!10070 = !DILocalVariable(name: "internal", scope: !10049, file: !3, line: 3278, type: !9283)
!10071 = !DILocation(line: 3278, column: 17, scope: !10049)
!10072 = !DILocalVariable(name: "arrayp", scope: !10049, file: !3, line: 3279, type: !1091)
!10073 = !DILocation(line: 3279, column: 8, scope: !10049)
!10074 = !DILocation(line: 3283, column: 8, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 3283, column: 6)
!10076 = !DILocation(line: 3283, column: 14, scope: !10075)
!10077 = !DILocation(line: 3283, column: 19, scope: !10075)
!10078 = !DILocation(line: 3283, column: 37, scope: !10075)
!10079 = !DILocation(line: 3283, column: 42, scope: !10075)
!10080 = !DILocation(line: 3283, column: 52, scope: !10075)
!10081 = !DILocation(line: 3283, column: 57, scope: !10075)
!10082 = !DILocation(line: 3283, column: 6, scope: !10049)
!10083 = !DILocation(line: 3284, column: 3, scope: !10075)
!10084 = !DILocation(line: 3286, column: 32, scope: !10049)
!10085 = !DILocation(line: 3286, column: 37, scope: !10049)
!10086 = !DILocation(line: 3286, column: 2, scope: !10049)
!10087 = !DILocation(line: 3288, column: 11, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 3288, column: 6)
!10089 = !DILocation(line: 3288, column: 6, scope: !10088)
!10090 = !DILocation(line: 3288, column: 6, scope: !10049)
!10091 = !DILocation(line: 3290, column: 20, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10088, file: !3, line: 3288, column: 18)
!10093 = !DILocation(line: 3290, column: 29, scope: !10092)
!10094 = !DILocation(line: 3290, column: 12, scope: !10092)
!10095 = !DILocation(line: 3291, column: 18, scope: !10092)
!10096 = !DILocation(line: 3291, column: 12, scope: !10092)
!10097 = !DILocation(line: 3291, column: 32, scope: !10092)
!10098 = !DILocation(line: 3291, column: 36, scope: !10092)
!10099 = !DILocation(line: 3291, column: 10, scope: !10092)
!10100 = !DILocation(line: 3293, column: 7, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 3293, column: 7)
!10102 = !DILocation(line: 3293, column: 17, scope: !10101)
!10103 = !DILocation(line: 3293, column: 22, scope: !10101)
!10104 = !DILocation(line: 3293, column: 54, scope: !10101)
!10105 = !DILocation(line: 3293, column: 59, scope: !10101)
!10106 = !DILocation(line: 3293, column: 26, scope: !10101)
!10107 = !DILocation(line: 3293, column: 7, scope: !10092)
!10108 = !DILocation(line: 3295, column: 4, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 3293, column: 70)
!10110 = !DILocation(line: 3296, column: 4, scope: !10109)
!10111 = !DILocation(line: 3299, column: 18, scope: !10092)
!10112 = !DILocation(line: 3299, column: 27, scope: !10092)
!10113 = !DILocation(line: 3299, column: 37, scope: !10092)
!10114 = !DILocation(line: 3299, column: 25, scope: !10092)
!10115 = !DILocation(line: 3299, column: 3, scope: !10092)
!10116 = !DILocation(line: 3299, column: 10, scope: !10092)
!10117 = !DILocation(line: 3299, column: 16, scope: !10092)
!10118 = !DILocation(line: 3300, column: 19, scope: !10092)
!10119 = !DILocation(line: 3300, column: 29, scope: !10092)
!10120 = !DILocation(line: 3300, column: 3, scope: !10092)
!10121 = !DILocation(line: 3300, column: 10, scope: !10092)
!10122 = !DILocation(line: 3300, column: 17, scope: !10092)
!10123 = !DILocation(line: 3301, column: 25, scope: !10092)
!10124 = !DILocation(line: 3301, column: 35, scope: !10092)
!10125 = !DILocation(line: 3301, column: 44, scope: !10092)
!10126 = !DILocation(line: 3301, column: 42, scope: !10092)
!10127 = !DILocation(line: 3301, column: 54, scope: !10092)
!10128 = !DILocation(line: 3301, column: 64, scope: !10092)
!10129 = !DILocation(line: 3301, column: 52, scope: !10092)
!10130 = !DILocation(line: 3301, column: 16, scope: !10092)
!10131 = !DILocation(line: 3301, column: 3, scope: !10092)
!10132 = !DILocation(line: 3301, column: 10, scope: !10092)
!10133 = !DILocation(line: 3301, column: 14, scope: !10092)
!10134 = !DILocation(line: 3302, column: 17, scope: !10092)
!10135 = !DILocation(line: 3302, column: 27, scope: !10092)
!10136 = !DILocation(line: 3302, column: 3, scope: !10092)
!10137 = !DILocation(line: 3302, column: 10, scope: !10092)
!10138 = !DILocation(line: 3302, column: 15, scope: !10092)
!10139 = !DILocation(line: 3303, column: 2, scope: !10092)
!10140 = !DILocation(line: 3305, column: 10, scope: !10088)
!10141 = !DILocation(line: 3305, column: 3, scope: !10088)
!10142 = !DILocation(line: 3307, column: 2, scope: !10049)
!10143 = !DILocation(line: 3309, column: 2, scope: !10049)
!10144 = !DILocation(line: 3310, column: 1, scope: !10049)
!10145 = distinct !DISubprogram(name: "RNA_raw_type_sizeof", scope: !3, file: !3, line: 3336, type: !10146, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10146 = !DISubroutineType(types: !10147)
!10147 = !{!48, !2454}
!10148 = !DILocalVariable(name: "type", arg: 1, scope: !10145, file: !3, line: 3336, type: !2454)
!10149 = !DILocation(line: 3336, column: 41, scope: !10145)
!10150 = !DILocation(line: 3338, column: 10, scope: !10145)
!10151 = !DILocation(line: 3338, column: 2, scope: !10145)
!10152 = !DILocation(line: 3339, column: 23, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10145, file: !3, line: 3338, column: 16)
!10154 = !DILocation(line: 3340, column: 24, scope: !10153)
!10155 = !DILocation(line: 3341, column: 22, scope: !10153)
!10156 = !DILocation(line: 3342, column: 24, scope: !10153)
!10157 = !DILocation(line: 3343, column: 25, scope: !10153)
!10158 = !DILocation(line: 3344, column: 12, scope: !10153)
!10159 = !DILocation(line: 3346, column: 1, scope: !10145)
!10160 = distinct !DISubprogram(name: "RNA_property_raw_type", scope: !3, file: !3, line: 3671, type: !10161, scopeLine: 3672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10161 = !DISubroutineType(types: !10162)
!10162 = !{!2454, !1021}
!10163 = !DILocalVariable(name: "prop", arg: 1, scope: !10160, file: !3, line: 3671, type: !1021)
!10164 = !DILocation(line: 3671, column: 52, scope: !10160)
!10165 = !DILocation(line: 3673, column: 6, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 3673, column: 6)
!10167 = !DILocation(line: 3673, column: 12, scope: !10166)
!10168 = !DILocation(line: 3673, column: 20, scope: !10166)
!10169 = !DILocation(line: 3673, column: 6, scope: !10160)
!10170 = !DILocation(line: 3675, column: 11, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 3673, column: 39)
!10172 = !DILocation(line: 3675, column: 17, scope: !10171)
!10173 = !DILocation(line: 3675, column: 3, scope: !10171)
!10174 = !DILocation(line: 3677, column: 5, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 3675, column: 23)
!10176 = !DILocation(line: 3679, column: 5, scope: !10175)
!10177 = !DILocation(line: 3681, column: 5, scope: !10175)
!10178 = !DILocation(line: 3683, column: 5, scope: !10175)
!10179 = !DILocation(line: 3685, column: 5, scope: !10175)
!10180 = !DILocation(line: 3687, column: 2, scope: !10171)
!10181 = !DILocation(line: 3688, column: 9, scope: !10160)
!10182 = !DILocation(line: 3688, column: 15, scope: !10160)
!10183 = !DILocation(line: 3688, column: 2, scope: !10160)
!10184 = !DILocation(line: 3689, column: 1, scope: !10160)
!10185 = distinct !DISubprogram(name: "RNA_property_collection_raw_get", scope: !3, file: !3, line: 3691, type: !10186, scopeLine: 3693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10186 = !DISubroutineType(types: !10187)
!10187 = !{!48, !10188, !1349, !1021, !1031, !986, !2454, !48}
!10188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10189, size: 64)
!10189 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !974, line: 112, baseType: !1203)
!10190 = !DILocalVariable(name: "reports", arg: 1, scope: !10185, file: !3, line: 3691, type: !10188)
!10191 = !DILocation(line: 3691, column: 49, scope: !10185)
!10192 = !DILocalVariable(name: "ptr", arg: 2, scope: !10185, file: !3, line: 3691, type: !1349)
!10193 = !DILocation(line: 3691, column: 70, scope: !10185)
!10194 = !DILocalVariable(name: "prop", arg: 3, scope: !10185, file: !3, line: 3691, type: !1021)
!10195 = !DILocation(line: 3691, column: 88, scope: !10185)
!10196 = !DILocalVariable(name: "propname", arg: 4, scope: !10185, file: !3, line: 3691, type: !1031)
!10197 = !DILocation(line: 3691, column: 106, scope: !10185)
!10198 = !DILocalVariable(name: "array", arg: 5, scope: !10185, file: !3, line: 3692, type: !986)
!10199 = !DILocation(line: 3692, column: 43, scope: !10185)
!10200 = !DILocalVariable(name: "type", arg: 6, scope: !10185, file: !3, line: 3692, type: !2454)
!10201 = !DILocation(line: 3692, column: 66, scope: !10185)
!10202 = !DILocalVariable(name: "len", arg: 7, scope: !10185, file: !3, line: 3692, type: !48)
!10203 = !DILocation(line: 3692, column: 76, scope: !10185)
!10204 = !DILocation(line: 3694, column: 24, scope: !10185)
!10205 = !DILocation(line: 3694, column: 33, scope: !10185)
!10206 = !DILocation(line: 3694, column: 38, scope: !10185)
!10207 = !DILocation(line: 3694, column: 44, scope: !10185)
!10208 = !DILocation(line: 3694, column: 54, scope: !10185)
!10209 = !DILocation(line: 3694, column: 61, scope: !10185)
!10210 = !DILocation(line: 3694, column: 67, scope: !10185)
!10211 = !DILocation(line: 3694, column: 9, scope: !10185)
!10212 = !DILocation(line: 3694, column: 2, scope: !10185)
!10213 = distinct !DISubprogram(name: "rna_raw_access", scope: !3, file: !3, line: 3363, type: !10214, scopeLine: 3365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10214 = !DISubroutineType(types: !10215)
!10215 = !{!48, !10188, !1349, !1021, !1031, !986, !2454, !48, !48}
!10216 = !DILocalVariable(name: "reports", arg: 1, scope: !10213, file: !3, line: 3363, type: !10188)
!10217 = !DILocation(line: 3363, column: 39, scope: !10213)
!10218 = !DILocalVariable(name: "ptr", arg: 2, scope: !10213, file: !3, line: 3363, type: !1349)
!10219 = !DILocation(line: 3363, column: 60, scope: !10213)
!10220 = !DILocalVariable(name: "prop", arg: 3, scope: !10213, file: !3, line: 3363, type: !1021)
!10221 = !DILocation(line: 3363, column: 78, scope: !10213)
!10222 = !DILocalVariable(name: "propname", arg: 4, scope: !10213, file: !3, line: 3363, type: !1031)
!10223 = !DILocation(line: 3363, column: 96, scope: !10213)
!10224 = !DILocalVariable(name: "inarray", arg: 5, scope: !10213, file: !3, line: 3364, type: !986)
!10225 = !DILocation(line: 3364, column: 33, scope: !10213)
!10226 = !DILocalVariable(name: "intype", arg: 6, scope: !10213, file: !3, line: 3364, type: !2454)
!10227 = !DILocation(line: 3364, column: 58, scope: !10213)
!10228 = !DILocalVariable(name: "inlen", arg: 7, scope: !10213, file: !3, line: 3364, type: !48)
!10229 = !DILocation(line: 3364, column: 70, scope: !10213)
!10230 = !DILocalVariable(name: "set", arg: 8, scope: !10213, file: !3, line: 3364, type: !48)
!10231 = !DILocation(line: 3364, column: 81, scope: !10213)
!10232 = !DILocalVariable(name: "ptype", scope: !10213, file: !3, line: 3366, type: !2639)
!10233 = !DILocation(line: 3366, column: 13, scope: !10213)
!10234 = !DILocalVariable(name: "itemptr", scope: !10213, file: !3, line: 3367, type: !1350)
!10235 = !DILocation(line: 3367, column: 13, scope: !10213)
!10236 = !DILocalVariable(name: "itemprop", scope: !10213, file: !3, line: 3368, type: !1021)
!10237 = !DILocation(line: 3368, column: 15, scope: !10213)
!10238 = !DILocalVariable(name: "iprop", scope: !10213, file: !3, line: 3368, type: !1021)
!10239 = !DILocation(line: 3368, column: 26, scope: !10213)
!10240 = !DILocalVariable(name: "itemtype", scope: !10213, file: !3, line: 3369, type: !1039)
!10241 = !DILocation(line: 3369, column: 15, scope: !10213)
!10242 = !DILocalVariable(name: "in", scope: !10213, file: !3, line: 3370, type: !10053)
!10243 = !DILocation(line: 3370, column: 11, scope: !10213)
!10244 = !DILocalVariable(name: "itemlen", scope: !10213, file: !3, line: 3371, type: !48)
!10245 = !DILocation(line: 3371, column: 6, scope: !10213)
!10246 = !DILocation(line: 3374, column: 13, scope: !10213)
!10247 = !DILocation(line: 3374, column: 5, scope: !10213)
!10248 = !DILocation(line: 3374, column: 11, scope: !10213)
!10249 = !DILocation(line: 3375, column: 12, scope: !10213)
!10250 = !DILocation(line: 3375, column: 5, scope: !10213)
!10251 = !DILocation(line: 3375, column: 10, scope: !10213)
!10252 = !DILocation(line: 3376, column: 11, scope: !10213)
!10253 = !DILocation(line: 3376, column: 5, scope: !10213)
!10254 = !DILocation(line: 3376, column: 9, scope: !10213)
!10255 = !DILocation(line: 3377, column: 5, scope: !10213)
!10256 = !DILocation(line: 3377, column: 12, scope: !10213)
!10257 = !DILocation(line: 3379, column: 36, scope: !10213)
!10258 = !DILocation(line: 3379, column: 41, scope: !10213)
!10259 = !DILocation(line: 3379, column: 10, scope: !10213)
!10260 = !DILocation(line: 3379, column: 8, scope: !10213)
!10261 = !DILocation(line: 3382, column: 27, scope: !10213)
!10262 = !DILocation(line: 3382, column: 2, scope: !10213)
!10263 = !DILocation(line: 3383, column: 48, scope: !10213)
!10264 = !DILocation(line: 3383, column: 13, scope: !10213)
!10265 = !DILocation(line: 3383, column: 11, scope: !10213)
!10266 = !DILocation(line: 3385, column: 6, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 3385, column: 6)
!10268 = !DILocation(line: 3385, column: 6, scope: !10213)
!10269 = !DILocalVariable(name: "out", scope: !10270, file: !3, line: 3387, type: !10053)
!10270 = distinct !DILexicalBlock(scope: !10267, file: !3, line: 3385, column: 16)
!10271 = !DILocation(line: 3387, column: 12, scope: !10270)
!10272 = !DILocation(line: 3390, column: 32, scope: !10270)
!10273 = !DILocation(line: 3390, column: 14, scope: !10270)
!10274 = !DILocation(line: 3390, column: 12, scope: !10270)
!10275 = !DILocation(line: 3392, column: 8, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 3392, column: 7)
!10277 = !DILocation(line: 3392, column: 7, scope: !10270)
!10278 = !DILocation(line: 3393, column: 15, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 3392, column: 60)
!10280 = !DILocation(line: 3393, column: 4, scope: !10279)
!10281 = !DILocation(line: 3394, column: 4, scope: !10279)
!10282 = !DILocation(line: 3398, column: 49, scope: !10270)
!10283 = !DILocation(line: 3398, column: 13, scope: !10270)
!10284 = !DILocation(line: 3398, column: 11, scope: !10270)
!10285 = !DILocation(line: 3401, column: 7, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 3401, column: 7)
!10287 = !DILocation(line: 3401, column: 17, scope: !10286)
!10288 = !DILocation(line: 3401, column: 7, scope: !10270)
!10289 = !DILocation(line: 3402, column: 13, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10286, file: !3, line: 3401, column: 28)
!10291 = !DILocation(line: 3403, column: 3, scope: !10290)
!10292 = !DILocation(line: 3405, column: 46, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10286, file: !3, line: 3405, column: 12)
!10294 = !DILocation(line: 3405, column: 51, scope: !10293)
!10295 = !DILocation(line: 3405, column: 57, scope: !10293)
!10296 = !DILocation(line: 3405, column: 12, scope: !10293)
!10297 = !DILocation(line: 3405, column: 12, scope: !10286)
!10298 = !DILocalVariable(name: "arraylen", scope: !10299, file: !3, line: 3406, type: !48)
!10299 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 3405, column: 74)
!10300 = !DILocation(line: 3406, column: 8, scope: !10299)
!10301 = !DILocation(line: 3406, column: 20, scope: !10299)
!10302 = !DILocation(line: 3406, column: 28, scope: !10299)
!10303 = !DILocation(line: 3406, column: 19, scope: !10299)
!10304 = !DILocation(line: 3406, column: 40, scope: !10299)
!10305 = !DILocation(line: 3407, column: 11, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 3407, column: 8)
!10307 = !DILocation(line: 3407, column: 18, scope: !10306)
!10308 = !DILocation(line: 3407, column: 33, scope: !10306)
!10309 = !DILocation(line: 3407, column: 27, scope: !10306)
!10310 = !DILocation(line: 3407, column: 15, scope: !10306)
!10311 = !DILocation(line: 3407, column: 8, scope: !10299)
!10312 = !DILocation(line: 3408, column: 17, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 3407, column: 38)
!10314 = !DILocation(line: 3409, column: 21, scope: !10313)
!10315 = !DILocation(line: 3409, column: 27, scope: !10313)
!10316 = !DILocation(line: 3409, column: 25, scope: !10313)
!10317 = !DILocation(line: 3409, column: 40, scope: !10313)
!10318 = !DILocation(line: 3408, column: 5, scope: !10313)
!10319 = !DILocation(line: 3410, column: 5, scope: !10313)
!10320 = !DILocation(line: 3414, column: 12, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 3414, column: 8)
!10322 = !DILocation(line: 3414, column: 23, scope: !10321)
!10323 = !DILocation(line: 3414, column: 17, scope: !10321)
!10324 = !DILocation(line: 3414, column: 8, scope: !10299)
!10325 = !DILocalVariable(name: "inp", scope: !10326, file: !3, line: 3415, type: !986)
!10326 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 3414, column: 29)
!10327 = !DILocation(line: 3415, column: 11, scope: !10326)
!10328 = !DILocation(line: 3415, column: 20, scope: !10326)
!10329 = !DILocalVariable(name: "outp", scope: !10326, file: !3, line: 3416, type: !986)
!10330 = !DILocation(line: 3416, column: 11, scope: !10326)
!10331 = !DILocation(line: 3416, column: 22, scope: !10326)
!10332 = !DILocalVariable(name: "a", scope: !10326, file: !3, line: 3417, type: !48)
!10333 = !DILocation(line: 3417, column: 9, scope: !10326)
!10334 = !DILocalVariable(name: "size", scope: !10326, file: !3, line: 3417, type: !48)
!10335 = !DILocation(line: 3417, column: 12, scope: !10326)
!10336 = !DILocation(line: 3419, column: 36, scope: !10326)
!10337 = !DILocation(line: 3419, column: 12, scope: !10326)
!10338 = !DILocation(line: 3419, column: 44, scope: !10326)
!10339 = !DILocation(line: 3419, column: 42, scope: !10326)
!10340 = !DILocation(line: 3419, column: 10, scope: !10326)
!10341 = !DILocation(line: 3421, column: 12, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 3421, column: 5)
!10343 = !DILocation(line: 3421, column: 10, scope: !10342)
!10344 = !DILocation(line: 3421, column: 17, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 3421, column: 5)
!10346 = !DILocation(line: 3421, column: 25, scope: !10345)
!10347 = !DILocation(line: 3421, column: 19, scope: !10345)
!10348 = !DILocation(line: 3421, column: 5, scope: !10342)
!10349 = !DILocation(line: 3422, column: 10, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 3422, column: 10)
!10351 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 3421, column: 35)
!10352 = !DILocation(line: 3422, column: 10, scope: !10351)
!10353 = !DILocation(line: 3422, column: 22, scope: !10350)
!10354 = !DILocation(line: 3422, column: 28, scope: !10350)
!10355 = !DILocation(line: 3422, column: 33, scope: !10350)
!10356 = !DILocation(line: 3422, column: 15, scope: !10350)
!10357 = !DILocation(line: 3423, column: 18, scope: !10350)
!10358 = !DILocation(line: 3423, column: 23, scope: !10350)
!10359 = !DILocation(line: 3423, column: 29, scope: !10350)
!10360 = !DILocation(line: 3423, column: 11, scope: !10350)
!10361 = !DILocation(line: 3425, column: 20, scope: !10351)
!10362 = !DILocation(line: 3425, column: 26, scope: !10351)
!10363 = !DILocation(line: 3425, column: 24, scope: !10351)
!10364 = !DILocation(line: 3425, column: 10, scope: !10351)
!10365 = !DILocation(line: 3426, column: 21, scope: !10351)
!10366 = !DILocation(line: 3426, column: 32, scope: !10351)
!10367 = !DILocation(line: 3426, column: 26, scope: !10351)
!10368 = !DILocation(line: 3426, column: 11, scope: !10351)
!10369 = !DILocation(line: 3427, column: 5, scope: !10351)
!10370 = !DILocation(line: 3421, column: 31, scope: !10345)
!10371 = !DILocation(line: 3421, column: 5, scope: !10345)
!10372 = distinct !{!10372, !10348, !10373}
!10373 = !DILocation(line: 3427, column: 5, scope: !10342)
!10374 = !DILocation(line: 3429, column: 5, scope: !10326)
!10375 = !DILocation(line: 3434, column: 3, scope: !10299)
!10376 = !DILocation(line: 3435, column: 2, scope: !10270)
!10377 = !DILocalVariable(name: "tmparray", scope: !10378, file: !3, line: 3438, type: !986)
!10378 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 3437, column: 2)
!10379 = !DILocation(line: 3438, column: 9, scope: !10378)
!10380 = !DILocalVariable(name: "tmplen", scope: !10378, file: !3, line: 3439, type: !48)
!10381 = !DILocation(line: 3439, column: 7, scope: !10378)
!10382 = !DILocalVariable(name: "err", scope: !10378, file: !3, line: 3440, type: !48)
!10383 = !DILocation(line: 3440, column: 7, scope: !10378)
!10384 = !DILocalVariable(name: "j", scope: !10378, file: !3, line: 3440, type: !48)
!10385 = !DILocation(line: 3440, column: 16, scope: !10378)
!10386 = !DILocalVariable(name: "a", scope: !10378, file: !3, line: 3440, type: !48)
!10387 = !DILocation(line: 3440, column: 19, scope: !10378)
!10388 = !DILocalVariable(name: "needconv", scope: !10378, file: !3, line: 3441, type: !48)
!10389 = !DILocation(line: 3441, column: 7, scope: !10378)
!10390 = !DILocation(line: 3443, column: 9, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 3443, column: 7)
!10392 = !DILocation(line: 3443, column: 18, scope: !10391)
!10393 = !DILocation(line: 3443, column: 34, scope: !10391)
!10394 = !DILocation(line: 3443, column: 37, scope: !10391)
!10395 = !DILocation(line: 3443, column: 46, scope: !10391)
!10396 = !DILocation(line: 3443, column: 59, scope: !10391)
!10397 = !DILocation(line: 3443, column: 65, scope: !10391)
!10398 = !DILocation(line: 3443, column: 70, scope: !10391)
!10399 = !DILocation(line: 3443, column: 87, scope: !10391)
!10400 = !DILocation(line: 3444, column: 8, scope: !10391)
!10401 = !DILocation(line: 3444, column: 17, scope: !10391)
!10402 = !DILocation(line: 3444, column: 31, scope: !10391)
!10403 = !DILocation(line: 3444, column: 37, scope: !10391)
!10404 = !DILocation(line: 3444, column: 42, scope: !10391)
!10405 = !DILocation(line: 3443, column: 7, scope: !10378)
!10406 = !DILocation(line: 3447, column: 13, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 3445, column: 3)
!10408 = !DILocation(line: 3448, column: 3, scope: !10407)
!10409 = !DILocalVariable(name: "rna_macro_iter", scope: !10410, file: !3, line: 3451, type: !3774)
!10410 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 3451, column: 3)
!10411 = !DILocation(line: 3451, column: 3, scope: !10410)
!10412 = !DILocation(line: 3451, column: 3, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10410, file: !3, line: 3451, column: 3)
!10414 = !DILocation(line: 3451, column: 3, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 3451, column: 3)
!10416 = !DILocalVariable(name: "itemptr", scope: !10417, file: !3, line: 3451, type: !1350)
!10417 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 3451, column: 3)
!10418 = !DILocation(line: 3451, column: 3, scope: !10417)
!10419 = !DILocation(line: 3453, column: 16, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 3453, column: 8)
!10421 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 3452, column: 3)
!10422 = !DILocation(line: 3453, column: 8, scope: !10420)
!10423 = !DILocation(line: 3453, column: 8, scope: !10421)
!10424 = !DILocation(line: 3454, column: 9, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 3454, column: 9)
!10426 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 3453, column: 22)
!10427 = !DILocation(line: 3454, column: 9, scope: !10426)
!10428 = !DILocation(line: 3456, column: 14, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 3454, column: 19)
!10430 = !DILocation(line: 3456, column: 12, scope: !10429)
!10431 = !DILocation(line: 3457, column: 5, scope: !10429)
!10432 = !DILocation(line: 3460, column: 49, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 3458, column: 10)
!10434 = !DILocation(line: 3460, column: 14, scope: !10433)
!10435 = !DILocation(line: 3460, column: 12, scope: !10433)
!10436 = !DILocation(line: 3462, column: 10, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 3462, column: 10)
!10438 = !DILocation(line: 3462, column: 10, scope: !10433)
!10439 = !DILocation(line: 3463, column: 68, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 3462, column: 17)
!10441 = !DILocation(line: 3463, column: 17, scope: !10440)
!10442 = !DILocation(line: 3463, column: 15, scope: !10440)
!10443 = !DILocation(line: 3464, column: 36, scope: !10440)
!10444 = !DILocation(line: 3464, column: 18, scope: !10440)
!10445 = !DILocation(line: 3464, column: 16, scope: !10440)
!10446 = !DILocation(line: 3465, column: 6, scope: !10440)
!10447 = !DILocation(line: 3467, column: 19, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 3466, column: 11)
!10449 = !DILocation(line: 3467, column: 72, scope: !10448)
!10450 = !DILocation(line: 3467, column: 7, scope: !10448)
!10451 = !DILocation(line: 3468, column: 11, scope: !10448)
!10452 = !DILocation(line: 3469, column: 7, scope: !10448)
!10453 = !DILocation(line: 3472, column: 11, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 3472, column: 10)
!10455 = !DILocation(line: 3472, column: 10, scope: !10433)
!10456 = !DILocation(line: 3473, column: 18, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10454, file: !3, line: 3472, column: 63)
!10458 = !DILocation(line: 3473, column: 7, scope: !10457)
!10459 = !DILocation(line: 3474, column: 11, scope: !10457)
!10460 = !DILocation(line: 3475, column: 7, scope: !10457)
!10461 = !DILocation(line: 3480, column: 10, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 3480, column: 9)
!10463 = !DILocation(line: 3480, column: 14, scope: !10462)
!10464 = !DILocation(line: 3480, column: 49, scope: !10462)
!10465 = !DILocation(line: 3480, column: 17, scope: !10462)
!10466 = !DILocation(line: 3480, column: 9, scope: !10426)
!10467 = !DILocation(line: 3481, column: 10, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 3481, column: 10)
!10469 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 3480, column: 57)
!10470 = !DILocation(line: 3481, column: 14, scope: !10468)
!10471 = !DILocation(line: 3481, column: 12, scope: !10468)
!10472 = !DILocation(line: 3481, column: 27, scope: !10468)
!10473 = !DILocation(line: 3481, column: 22, scope: !10468)
!10474 = !DILocation(line: 3481, column: 10, scope: !10469)
!10475 = !DILocation(line: 3482, column: 19, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10468, file: !3, line: 3481, column: 32)
!10477 = !DILocation(line: 3482, column: 91, scope: !10476)
!10478 = !DILocation(line: 3482, column: 7, scope: !10476)
!10479 = !DILocation(line: 3483, column: 11, scope: !10476)
!10480 = !DILocation(line: 3484, column: 7, scope: !10476)
!10481 = !DILocation(line: 3487, column: 10, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 3487, column: 10)
!10483 = !DILocation(line: 3487, column: 18, scope: !10482)
!10484 = !DILocation(line: 3487, column: 10, scope: !10469)
!10485 = !DILocation(line: 3489, column: 11, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10487, file: !3, line: 3489, column: 11)
!10487 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 3487, column: 24)
!10488 = !DILocation(line: 3489, column: 11, scope: !10487)
!10489 = !DILocation(line: 3490, column: 16, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 3489, column: 16)
!10491 = !DILocation(line: 3490, column: 8, scope: !10490)
!10492 = !DILocalVariable(name: "b", scope: !10493, file: !3, line: 3493, type: !48)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 3492, column: 9)
!10494 = distinct !DILexicalBlock(scope: !10490, file: !3, line: 3490, column: 26)
!10495 = !DILocation(line: 3493, column: 14, scope: !10493)
!10496 = !DILocation(line: 3494, column: 10, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 3494, column: 10)
!10498 = !DILocation(line: 3494, column: 10, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 3494, column: 10)
!10500 = !DILocation(line: 3495, column: 45, scope: !10493)
!10501 = !DILocation(line: 3495, column: 52, scope: !10493)
!10502 = !DILocation(line: 3495, column: 10, scope: !10493)
!10503 = !DILocation(line: 3496, column: 10, scope: !10493)
!10504 = !DILocalVariable(name: "i", scope: !10505, file: !3, line: 3500, type: !48)
!10505 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 3499, column: 9)
!10506 = !DILocation(line: 3500, column: 14, scope: !10505)
!10507 = !DILocation(line: 3501, column: 10, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 3501, column: 10)
!10509 = !DILocation(line: 3501, column: 10, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 3501, column: 10)
!10511 = !DILocation(line: 3502, column: 41, scope: !10505)
!10512 = !DILocation(line: 3502, column: 48, scope: !10505)
!10513 = !DILocation(line: 3502, column: 10, scope: !10505)
!10514 = !DILocation(line: 3503, column: 10, scope: !10505)
!10515 = !DILocalVariable(name: "f", scope: !10516, file: !3, line: 3507, type: !1285)
!10516 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 3506, column: 9)
!10517 = !DILocation(line: 3507, column: 16, scope: !10516)
!10518 = !DILocation(line: 3508, column: 10, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 3508, column: 10)
!10520 = !DILocation(line: 3508, column: 10, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 3508, column: 10)
!10522 = !DILocation(line: 3509, column: 43, scope: !10516)
!10523 = !DILocation(line: 3509, column: 50, scope: !10516)
!10524 = !DILocation(line: 3509, column: 10, scope: !10516)
!10525 = !DILocation(line: 3510, column: 10, scope: !10516)
!10526 = !DILocation(line: 3513, column: 10, scope: !10494)
!10527 = !DILocation(line: 3515, column: 7, scope: !10490)
!10528 = !DILocation(line: 3517, column: 16, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 3516, column: 12)
!10530 = !DILocation(line: 3517, column: 8, scope: !10529)
!10531 = !DILocalVariable(name: "b", scope: !10532, file: !3, line: 3520, type: !48)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 3519, column: 9)
!10533 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 3517, column: 26)
!10534 = !DILocation(line: 3520, column: 14, scope: !10532)
!10535 = !DILocation(line: 3520, column: 53, scope: !10532)
!10536 = !DILocation(line: 3520, column: 18, scope: !10532)
!10537 = !DILocation(line: 3521, column: 10, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 3521, column: 10)
!10539 = !DILocation(line: 3521, column: 10, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 3521, column: 10)
!10541 = !DILocation(line: 3522, column: 10, scope: !10532)
!10542 = !DILocalVariable(name: "i", scope: !10543, file: !3, line: 3526, type: !48)
!10543 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 3525, column: 9)
!10544 = !DILocation(line: 3526, column: 14, scope: !10543)
!10545 = !DILocation(line: 3526, column: 49, scope: !10543)
!10546 = !DILocation(line: 3526, column: 18, scope: !10543)
!10547 = !DILocation(line: 3527, column: 10, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10543, file: !3, line: 3527, column: 10)
!10549 = !DILocation(line: 3527, column: 10, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 3527, column: 10)
!10551 = !DILocation(line: 3528, column: 10, scope: !10543)
!10552 = !DILocalVariable(name: "f", scope: !10553, file: !3, line: 3532, type: !1285)
!10553 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 3531, column: 9)
!10554 = !DILocation(line: 3532, column: 16, scope: !10553)
!10555 = !DILocation(line: 3532, column: 53, scope: !10553)
!10556 = !DILocation(line: 3532, column: 20, scope: !10553)
!10557 = !DILocation(line: 3533, column: 10, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 3533, column: 10)
!10559 = !DILocation(line: 3533, column: 10, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 3533, column: 10)
!10561 = !DILocation(line: 3534, column: 10, scope: !10553)
!10562 = !DILocation(line: 3537, column: 10, scope: !10533)
!10563 = !DILocation(line: 3540, column: 8, scope: !10487)
!10564 = !DILocation(line: 3541, column: 6, scope: !10487)
!10565 = !DILocation(line: 3542, column: 15, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 3542, column: 15)
!10567 = !DILocation(line: 3542, column: 24, scope: !10566)
!10568 = !DILocation(line: 3542, column: 15, scope: !10482)
!10569 = !DILocation(line: 3544, column: 11, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 3544, column: 11)
!10571 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 3542, column: 30)
!10572 = !DILocation(line: 3544, column: 20, scope: !10570)
!10573 = !DILocation(line: 3544, column: 23, scope: !10570)
!10574 = !DILocation(line: 3544, column: 33, scope: !10570)
!10575 = !DILocation(line: 3544, column: 30, scope: !10570)
!10576 = !DILocation(line: 3544, column: 11, scope: !10571)
!10577 = !DILocation(line: 3545, column: 8, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 3544, column: 42)
!10579 = !DILocation(line: 3545, column: 18, scope: !10578)
!10580 = !DILocation(line: 3546, column: 17, scope: !10578)
!10581 = !DILocation(line: 3547, column: 7, scope: !10578)
!10582 = !DILocation(line: 3548, column: 12, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 3548, column: 11)
!10584 = !DILocation(line: 3548, column: 11, scope: !10571)
!10585 = !DILocation(line: 3549, column: 19, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 3548, column: 22)
!10587 = !DILocation(line: 3549, column: 47, scope: !10586)
!10588 = !DILocation(line: 3549, column: 45, scope: !10586)
!10589 = !DILocation(line: 3549, column: 17, scope: !10586)
!10590 = !DILocation(line: 3550, column: 17, scope: !10586)
!10591 = !DILocation(line: 3550, column: 15, scope: !10586)
!10592 = !DILocation(line: 3551, column: 7, scope: !10586)
!10593 = !DILocation(line: 3554, column: 11, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 3554, column: 11)
!10595 = !DILocation(line: 3554, column: 11, scope: !10571)
!10596 = !DILocation(line: 3555, column: 16, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 3554, column: 16)
!10598 = !DILocation(line: 3555, column: 8, scope: !10597)
!10599 = !DILocation(line: 3558, column: 17, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 3558, column: 10)
!10601 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 3557, column: 9)
!10602 = distinct !DILexicalBlock(scope: !10597, file: !3, line: 3555, column: 26)
!10603 = !DILocation(line: 3558, column: 15, scope: !10600)
!10604 = !DILocation(line: 3558, column: 22, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 3558, column: 10)
!10606 = !DILocation(line: 3558, column: 26, scope: !10605)
!10607 = !DILocation(line: 3558, column: 24, scope: !10605)
!10608 = !DILocation(line: 3558, column: 10, scope: !10600)
!10609 = !DILocation(line: 3559, column: 11, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10605, file: !3, line: 3559, column: 11)
!10611 = !DILocation(line: 3559, column: 11, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3559, column: 11)
!10613 = !DILocation(line: 3558, column: 36, scope: !10605)
!10614 = !DILocation(line: 3558, column: 41, scope: !10605)
!10615 = !DILocation(line: 3558, column: 10, scope: !10605)
!10616 = distinct !{!10616, !10608, !10617}
!10617 = !DILocation(line: 3559, column: 11, scope: !10600)
!10618 = !DILocation(line: 3560, column: 51, scope: !10601)
!10619 = !DILocation(line: 3560, column: 58, scope: !10601)
!10620 = !DILocation(line: 3560, column: 10, scope: !10601)
!10621 = !DILocation(line: 3561, column: 10, scope: !10601)
!10622 = !DILocation(line: 3565, column: 17, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 3565, column: 10)
!10624 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 3564, column: 9)
!10625 = !DILocation(line: 3565, column: 15, scope: !10623)
!10626 = !DILocation(line: 3565, column: 22, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 3565, column: 10)
!10628 = !DILocation(line: 3565, column: 26, scope: !10627)
!10629 = !DILocation(line: 3565, column: 24, scope: !10627)
!10630 = !DILocation(line: 3565, column: 10, scope: !10623)
!10631 = !DILocation(line: 3566, column: 11, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 3566, column: 11)
!10633 = !DILocation(line: 3566, column: 11, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 3566, column: 11)
!10635 = !DILocation(line: 3565, column: 36, scope: !10627)
!10636 = !DILocation(line: 3565, column: 41, scope: !10627)
!10637 = !DILocation(line: 3565, column: 10, scope: !10627)
!10638 = distinct !{!10638, !10630, !10639}
!10639 = !DILocation(line: 3566, column: 11, scope: !10623)
!10640 = !DILocation(line: 3567, column: 47, scope: !10624)
!10641 = !DILocation(line: 3567, column: 54, scope: !10624)
!10642 = !DILocation(line: 3567, column: 10, scope: !10624)
!10643 = !DILocation(line: 3568, column: 10, scope: !10624)
!10644 = !DILocation(line: 3572, column: 17, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 3572, column: 10)
!10646 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 3571, column: 9)
!10647 = !DILocation(line: 3572, column: 15, scope: !10645)
!10648 = !DILocation(line: 3572, column: 22, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 3572, column: 10)
!10650 = !DILocation(line: 3572, column: 26, scope: !10649)
!10651 = !DILocation(line: 3572, column: 24, scope: !10649)
!10652 = !DILocation(line: 3572, column: 10, scope: !10645)
!10653 = !DILocation(line: 3573, column: 11, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10649, file: !3, line: 3573, column: 11)
!10655 = !DILocation(line: 3573, column: 11, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 3573, column: 11)
!10657 = !DILocation(line: 3572, column: 36, scope: !10649)
!10658 = !DILocation(line: 3572, column: 41, scope: !10649)
!10659 = !DILocation(line: 3572, column: 10, scope: !10649)
!10660 = distinct !{!10660, !10652, !10661}
!10661 = !DILocation(line: 3573, column: 11, scope: !10645)
!10662 = !DILocation(line: 3574, column: 49, scope: !10646)
!10663 = !DILocation(line: 3574, column: 56, scope: !10646)
!10664 = !DILocation(line: 3574, column: 10, scope: !10646)
!10665 = !DILocation(line: 3575, column: 10, scope: !10646)
!10666 = !DILocation(line: 3578, column: 10, scope: !10602)
!10667 = !DILocation(line: 3580, column: 7, scope: !10597)
!10668 = !DILocation(line: 3582, column: 16, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 3581, column: 12)
!10670 = !DILocation(line: 3582, column: 8, scope: !10669)
!10671 = !DILocation(line: 3585, column: 51, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 3584, column: 9)
!10673 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 3582, column: 26)
!10674 = !DILocation(line: 3585, column: 58, scope: !10672)
!10675 = !DILocation(line: 3585, column: 10, scope: !10672)
!10676 = !DILocation(line: 3586, column: 17, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 3586, column: 10)
!10678 = !DILocation(line: 3586, column: 15, scope: !10677)
!10679 = !DILocation(line: 3586, column: 22, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 3586, column: 10)
!10681 = !DILocation(line: 3586, column: 26, scope: !10680)
!10682 = !DILocation(line: 3586, column: 24, scope: !10680)
!10683 = !DILocation(line: 3586, column: 10, scope: !10677)
!10684 = !DILocation(line: 3587, column: 11, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 3587, column: 11)
!10686 = !DILocation(line: 3587, column: 11, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 3587, column: 11)
!10688 = !DILocation(line: 3586, column: 36, scope: !10680)
!10689 = !DILocation(line: 3586, column: 41, scope: !10680)
!10690 = !DILocation(line: 3586, column: 10, scope: !10680)
!10691 = distinct !{!10691, !10683, !10692}
!10692 = !DILocation(line: 3587, column: 11, scope: !10677)
!10693 = !DILocation(line: 3588, column: 10, scope: !10672)
!10694 = !DILocation(line: 3592, column: 47, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 3591, column: 9)
!10696 = !DILocation(line: 3592, column: 54, scope: !10695)
!10697 = !DILocation(line: 3592, column: 10, scope: !10695)
!10698 = !DILocation(line: 3593, column: 17, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 3593, column: 10)
!10700 = !DILocation(line: 3593, column: 15, scope: !10699)
!10701 = !DILocation(line: 3593, column: 22, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 3593, column: 10)
!10703 = !DILocation(line: 3593, column: 26, scope: !10702)
!10704 = !DILocation(line: 3593, column: 24, scope: !10702)
!10705 = !DILocation(line: 3593, column: 10, scope: !10699)
!10706 = !DILocation(line: 3594, column: 11, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 3594, column: 11)
!10708 = !DILocation(line: 3594, column: 11, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 3594, column: 11)
!10710 = !DILocation(line: 3593, column: 36, scope: !10702)
!10711 = !DILocation(line: 3593, column: 41, scope: !10702)
!10712 = !DILocation(line: 3593, column: 10, scope: !10702)
!10713 = distinct !{!10713, !10705, !10714}
!10714 = !DILocation(line: 3594, column: 11, scope: !10699)
!10715 = !DILocation(line: 3595, column: 10, scope: !10695)
!10716 = !DILocation(line: 3599, column: 49, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 3598, column: 9)
!10718 = !DILocation(line: 3599, column: 56, scope: !10717)
!10719 = !DILocation(line: 3599, column: 10, scope: !10717)
!10720 = !DILocation(line: 3600, column: 17, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10717, file: !3, line: 3600, column: 10)
!10722 = !DILocation(line: 3600, column: 15, scope: !10721)
!10723 = !DILocation(line: 3600, column: 22, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 3600, column: 10)
!10725 = !DILocation(line: 3600, column: 26, scope: !10724)
!10726 = !DILocation(line: 3600, column: 24, scope: !10724)
!10727 = !DILocation(line: 3600, column: 10, scope: !10721)
!10728 = !DILocation(line: 3601, column: 11, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 3601, column: 11)
!10730 = !DILocation(line: 3601, column: 11, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 3601, column: 11)
!10732 = !DILocation(line: 3600, column: 36, scope: !10724)
!10733 = !DILocation(line: 3600, column: 41, scope: !10724)
!10734 = !DILocation(line: 3600, column: 10, scope: !10724)
!10735 = distinct !{!10735, !10727, !10736}
!10736 = !DILocation(line: 3601, column: 11, scope: !10721)
!10737 = !DILocation(line: 3602, column: 10, scope: !10717)
!10738 = !DILocation(line: 3605, column: 10, scope: !10673)
!10739 = !DILocation(line: 3608, column: 6, scope: !10571)
!10740 = !DILocation(line: 3610, column: 11, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 3610, column: 11)
!10742 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 3609, column: 11)
!10743 = !DILocation(line: 3610, column: 11, scope: !10742)
!10744 = !DILocation(line: 3611, column: 16, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 3610, column: 16)
!10746 = !DILocation(line: 3611, column: 8, scope: !10745)
!10747 = !DILocation(line: 3614, column: 51, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 3613, column: 9)
!10749 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 3611, column: 26)
!10750 = !DILocation(line: 3614, column: 70, scope: !10748)
!10751 = !DILocation(line: 3614, column: 60, scope: !10748)
!10752 = !DILocation(line: 3614, column: 77, scope: !10748)
!10753 = !DILocation(line: 3614, column: 59, scope: !10748)
!10754 = !DILocation(line: 3614, column: 10, scope: !10748)
!10755 = !DILocation(line: 3615, column: 15, scope: !10748)
!10756 = !DILocation(line: 3615, column: 12, scope: !10748)
!10757 = !DILocation(line: 3616, column: 10, scope: !10748)
!10758 = !DILocation(line: 3620, column: 47, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 3619, column: 9)
!10760 = !DILocation(line: 3620, column: 66, scope: !10759)
!10761 = !DILocation(line: 3620, column: 56, scope: !10759)
!10762 = !DILocation(line: 3620, column: 73, scope: !10759)
!10763 = !DILocation(line: 3620, column: 55, scope: !10759)
!10764 = !DILocation(line: 3620, column: 10, scope: !10759)
!10765 = !DILocation(line: 3621, column: 15, scope: !10759)
!10766 = !DILocation(line: 3621, column: 12, scope: !10759)
!10767 = !DILocation(line: 3622, column: 10, scope: !10759)
!10768 = !DILocation(line: 3626, column: 49, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 3625, column: 9)
!10770 = !DILocation(line: 3626, column: 70, scope: !10769)
!10771 = !DILocation(line: 3626, column: 58, scope: !10769)
!10772 = !DILocation(line: 3626, column: 77, scope: !10769)
!10773 = !DILocation(line: 3626, column: 57, scope: !10769)
!10774 = !DILocation(line: 3626, column: 10, scope: !10769)
!10775 = !DILocation(line: 3627, column: 15, scope: !10769)
!10776 = !DILocation(line: 3627, column: 12, scope: !10769)
!10777 = !DILocation(line: 3628, column: 10, scope: !10769)
!10778 = !DILocation(line: 3631, column: 10, scope: !10749)
!10779 = !DILocation(line: 3633, column: 7, scope: !10745)
!10780 = !DILocation(line: 3635, column: 16, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 3634, column: 12)
!10782 = !DILocation(line: 3635, column: 8, scope: !10781)
!10783 = !DILocation(line: 3638, column: 51, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 3637, column: 9)
!10785 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 3635, column: 26)
!10786 = !DILocation(line: 3638, column: 70, scope: !10784)
!10787 = !DILocation(line: 3638, column: 60, scope: !10784)
!10788 = !DILocation(line: 3638, column: 77, scope: !10784)
!10789 = !DILocation(line: 3638, column: 59, scope: !10784)
!10790 = !DILocation(line: 3638, column: 10, scope: !10784)
!10791 = !DILocation(line: 3639, column: 15, scope: !10784)
!10792 = !DILocation(line: 3639, column: 12, scope: !10784)
!10793 = !DILocation(line: 3640, column: 10, scope: !10784)
!10794 = !DILocation(line: 3644, column: 47, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 3643, column: 9)
!10796 = !DILocation(line: 3644, column: 66, scope: !10795)
!10797 = !DILocation(line: 3644, column: 56, scope: !10795)
!10798 = !DILocation(line: 3644, column: 73, scope: !10795)
!10799 = !DILocation(line: 3644, column: 55, scope: !10795)
!10800 = !DILocation(line: 3644, column: 10, scope: !10795)
!10801 = !DILocation(line: 3645, column: 15, scope: !10795)
!10802 = !DILocation(line: 3645, column: 12, scope: !10795)
!10803 = !DILocation(line: 3646, column: 10, scope: !10795)
!10804 = !DILocation(line: 3650, column: 49, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 3649, column: 9)
!10806 = !DILocation(line: 3650, column: 70, scope: !10805)
!10807 = !DILocation(line: 3650, column: 58, scope: !10805)
!10808 = !DILocation(line: 3650, column: 77, scope: !10805)
!10809 = !DILocation(line: 3650, column: 57, scope: !10805)
!10810 = !DILocation(line: 3650, column: 10, scope: !10805)
!10811 = !DILocation(line: 3651, column: 15, scope: !10805)
!10812 = !DILocation(line: 3651, column: 12, scope: !10805)
!10813 = !DILocation(line: 3652, column: 10, scope: !10805)
!10814 = !DILocation(line: 3655, column: 10, scope: !10785)
!10815 = !DILocation(line: 3659, column: 5, scope: !10469)
!10816 = !DILocation(line: 3660, column: 4, scope: !10426)
!10817 = !DILocation(line: 3662, column: 3, scope: !10417)
!10818 = distinct !{!10818, !10412, !10819}
!10819 = !DILocation(line: 3662, column: 3, scope: !10413)
!10820 = !DILocation(line: 3662, column: 3, scope: !10410)
!10821 = !DILocation(line: 3664, column: 7, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 3664, column: 7)
!10823 = !DILocation(line: 3664, column: 7, scope: !10378)
!10824 = !DILocation(line: 3665, column: 4, scope: !10822)
!10825 = !DILocation(line: 3665, column: 14, scope: !10822)
!10826 = !DILocation(line: 3667, column: 11, scope: !10378)
!10827 = !DILocation(line: 3667, column: 10, scope: !10378)
!10828 = !DILocation(line: 3667, column: 3, scope: !10378)
!10829 = !DILocation(line: 3669, column: 1, scope: !10213)
!10830 = distinct !DISubprogram(name: "RNA_property_collection_raw_set", scope: !3, file: !3, line: 3697, type: !10186, scopeLine: 3699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10831 = !DILocalVariable(name: "reports", arg: 1, scope: !10830, file: !3, line: 3697, type: !10188)
!10832 = !DILocation(line: 3697, column: 49, scope: !10830)
!10833 = !DILocalVariable(name: "ptr", arg: 2, scope: !10830, file: !3, line: 3697, type: !1349)
!10834 = !DILocation(line: 3697, column: 70, scope: !10830)
!10835 = !DILocalVariable(name: "prop", arg: 3, scope: !10830, file: !3, line: 3697, type: !1021)
!10836 = !DILocation(line: 3697, column: 88, scope: !10830)
!10837 = !DILocalVariable(name: "propname", arg: 4, scope: !10830, file: !3, line: 3697, type: !1031)
!10838 = !DILocation(line: 3697, column: 106, scope: !10830)
!10839 = !DILocalVariable(name: "array", arg: 5, scope: !10830, file: !3, line: 3698, type: !986)
!10840 = !DILocation(line: 3698, column: 43, scope: !10830)
!10841 = !DILocalVariable(name: "type", arg: 6, scope: !10830, file: !3, line: 3698, type: !2454)
!10842 = !DILocation(line: 3698, column: 66, scope: !10830)
!10843 = !DILocalVariable(name: "len", arg: 7, scope: !10830, file: !3, line: 3698, type: !48)
!10844 = !DILocation(line: 3698, column: 76, scope: !10830)
!10845 = !DILocation(line: 3700, column: 24, scope: !10830)
!10846 = !DILocation(line: 3700, column: 33, scope: !10830)
!10847 = !DILocation(line: 3700, column: 38, scope: !10830)
!10848 = !DILocation(line: 3700, column: 44, scope: !10830)
!10849 = !DILocation(line: 3700, column: 54, scope: !10830)
!10850 = !DILocation(line: 3700, column: 61, scope: !10830)
!10851 = !DILocation(line: 3700, column: 67, scope: !10830)
!10852 = !DILocation(line: 3700, column: 9, scope: !10830)
!10853 = !DILocation(line: 3700, column: 2, scope: !10830)
!10854 = distinct !DISubprogram(name: "rna_iterator_listbase_begin", scope: !3, file: !3, line: 3705, type: !10855, scopeLine: 3706, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10855 = !DISubroutineType(types: !10856)
!10856 = !{null, !3905, !1642, !2676}
!10857 = !DILocalVariable(name: "iter", arg: 1, scope: !10854, file: !3, line: 3705, type: !3905)
!10858 = !DILocation(line: 3705, column: 62, scope: !10854)
!10859 = !DILocalVariable(name: "lb", arg: 2, scope: !10854, file: !3, line: 3705, type: !1642)
!10860 = !DILocation(line: 3705, column: 78, scope: !10854)
!10861 = !DILocalVariable(name: "skip", arg: 3, scope: !10854, file: !3, line: 3705, type: !2676)
!10862 = !DILocation(line: 3705, column: 99, scope: !10854)
!10863 = !DILocalVariable(name: "internal", scope: !10854, file: !3, line: 3707, type: !10864)
!10864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!10865 = !DILocation(line: 3707, column: 20, scope: !10854)
!10866 = !DILocation(line: 3707, column: 32, scope: !10854)
!10867 = !DILocation(line: 3707, column: 38, scope: !10854)
!10868 = !DILocation(line: 3707, column: 47, scope: !10854)
!10869 = !DILocation(line: 3709, column: 20, scope: !10854)
!10870 = !DILocation(line: 3709, column: 19, scope: !10854)
!10871 = !DILocation(line: 3709, column: 26, scope: !10854)
!10872 = !DILocation(line: 3709, column: 30, scope: !10854)
!10873 = !DILocation(line: 3709, column: 2, scope: !10854)
!10874 = !DILocation(line: 3709, column: 12, scope: !10854)
!10875 = !DILocation(line: 3709, column: 17, scope: !10854)
!10876 = !DILocation(line: 3710, column: 19, scope: !10854)
!10877 = !DILocation(line: 3710, column: 2, scope: !10854)
!10878 = !DILocation(line: 3710, column: 12, scope: !10854)
!10879 = !DILocation(line: 3710, column: 17, scope: !10854)
!10880 = !DILocation(line: 3712, column: 17, scope: !10854)
!10881 = !DILocation(line: 3712, column: 27, scope: !10854)
!10882 = !DILocation(line: 3712, column: 32, scope: !10854)
!10883 = !DILocation(line: 3712, column: 2, scope: !10854)
!10884 = !DILocation(line: 3712, column: 8, scope: !10854)
!10885 = !DILocation(line: 3712, column: 14, scope: !10854)
!10886 = !DILocation(line: 3714, column: 6, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 3714, column: 6)
!10888 = !DILocation(line: 3714, column: 11, scope: !10887)
!10889 = !DILocation(line: 3714, column: 14, scope: !10887)
!10890 = !DILocation(line: 3714, column: 20, scope: !10887)
!10891 = !DILocation(line: 3714, column: 26, scope: !10887)
!10892 = !DILocation(line: 3714, column: 29, scope: !10887)
!10893 = !DILocation(line: 3714, column: 34, scope: !10887)
!10894 = !DILocation(line: 3714, column: 40, scope: !10887)
!10895 = !DILocation(line: 3714, column: 50, scope: !10887)
!10896 = !DILocation(line: 3714, column: 6, scope: !10854)
!10897 = !DILocation(line: 3715, column: 30, scope: !10887)
!10898 = !DILocation(line: 3715, column: 3, scope: !10887)
!10899 = !DILocation(line: 3716, column: 1, scope: !10854)
!10900 = distinct !DISubprogram(name: "rna_iterator_listbase_next", scope: !3, file: !3, line: 3718, type: !3965, scopeLine: 3719, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10901 = !DILocalVariable(name: "iter", arg: 1, scope: !10900, file: !3, line: 3718, type: !3905)
!10902 = !DILocation(line: 3718, column: 61, scope: !10900)
!10903 = !DILocalVariable(name: "internal", scope: !10900, file: !3, line: 3720, type: !10864)
!10904 = !DILocation(line: 3720, column: 20, scope: !10900)
!10905 = !DILocation(line: 3720, column: 32, scope: !10900)
!10906 = !DILocation(line: 3720, column: 38, scope: !10900)
!10907 = !DILocation(line: 3720, column: 47, scope: !10900)
!10908 = !DILocation(line: 3722, column: 6, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 3722, column: 6)
!10910 = !DILocation(line: 3722, column: 16, scope: !10909)
!10911 = !DILocation(line: 3722, column: 6, scope: !10900)
!10912 = !DILocation(line: 3723, column: 3, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 3722, column: 22)
!10914 = !DILocation(line: 3724, column: 21, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 3723, column: 6)
!10916 = !DILocation(line: 3724, column: 31, scope: !10915)
!10917 = !DILocation(line: 3724, column: 37, scope: !10915)
!10918 = !DILocation(line: 3724, column: 4, scope: !10915)
!10919 = !DILocation(line: 3724, column: 14, scope: !10915)
!10920 = !DILocation(line: 3724, column: 19, scope: !10915)
!10921 = !DILocation(line: 3725, column: 19, scope: !10915)
!10922 = !DILocation(line: 3725, column: 29, scope: !10915)
!10923 = !DILocation(line: 3725, column: 34, scope: !10915)
!10924 = !DILocation(line: 3725, column: 4, scope: !10915)
!10925 = !DILocation(line: 3725, column: 10, scope: !10915)
!10926 = !DILocation(line: 3725, column: 16, scope: !10915)
!10927 = !DILocation(line: 3726, column: 3, scope: !10915)
!10928 = !DILocation(line: 3726, column: 12, scope: !10913)
!10929 = !DILocation(line: 3726, column: 18, scope: !10913)
!10930 = !DILocation(line: 3726, column: 24, scope: !10913)
!10931 = !DILocation(line: 3726, column: 27, scope: !10913)
!10932 = !DILocation(line: 3726, column: 37, scope: !10913)
!10933 = !DILocation(line: 3726, column: 42, scope: !10913)
!10934 = !DILocation(line: 3726, column: 48, scope: !10913)
!10935 = !DILocation(line: 3726, column: 58, scope: !10913)
!10936 = !DILocation(line: 0, scope: !10913)
!10937 = distinct !{!10937, !10912, !10938}
!10938 = !DILocation(line: 3726, column: 63, scope: !10913)
!10939 = !DILocation(line: 3727, column: 2, scope: !10913)
!10940 = !DILocation(line: 3729, column: 20, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 3728, column: 7)
!10942 = !DILocation(line: 3729, column: 30, scope: !10941)
!10943 = !DILocation(line: 3729, column: 36, scope: !10941)
!10944 = !DILocation(line: 3729, column: 3, scope: !10941)
!10945 = !DILocation(line: 3729, column: 13, scope: !10941)
!10946 = !DILocation(line: 3729, column: 18, scope: !10941)
!10947 = !DILocation(line: 3730, column: 18, scope: !10941)
!10948 = !DILocation(line: 3730, column: 28, scope: !10941)
!10949 = !DILocation(line: 3730, column: 33, scope: !10941)
!10950 = !DILocation(line: 3730, column: 3, scope: !10941)
!10951 = !DILocation(line: 3730, column: 9, scope: !10941)
!10952 = !DILocation(line: 3730, column: 15, scope: !10941)
!10953 = !DILocation(line: 3732, column: 1, scope: !10900)
!10954 = distinct !DISubprogram(name: "rna_iterator_listbase_get", scope: !3, file: !3, line: 3734, type: !10955, scopeLine: 3735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{!986, !3905}
!10957 = !DILocalVariable(name: "iter", arg: 1, scope: !10954, file: !3, line: 3734, type: !3905)
!10958 = !DILocation(line: 3734, column: 61, scope: !10954)
!10959 = !DILocalVariable(name: "internal", scope: !10954, file: !3, line: 3736, type: !10864)
!10960 = !DILocation(line: 3736, column: 20, scope: !10954)
!10961 = !DILocation(line: 3736, column: 32, scope: !10954)
!10962 = !DILocation(line: 3736, column: 38, scope: !10954)
!10963 = !DILocation(line: 3736, column: 47, scope: !10954)
!10964 = !DILocation(line: 3738, column: 9, scope: !10954)
!10965 = !DILocation(line: 3738, column: 19, scope: !10954)
!10966 = !DILocation(line: 3738, column: 2, scope: !10954)
!10967 = distinct !DISubprogram(name: "rna_iterator_listbase_end", scope: !3, file: !3, line: 3741, type: !3965, scopeLine: 3742, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10968 = !DILocalVariable(name: "UNUSED_iter", arg: 1, scope: !10967, file: !3, line: 3741, type: !3905)
!10969 = !DILocation(line: 3741, column: 60, scope: !10967)
!10970 = !DILocation(line: 3743, column: 1, scope: !10967)
!10971 = distinct !DISubprogram(name: "rna_listbase_lookup_int", scope: !3, file: !3, line: 3745, type: !10972, scopeLine: 3746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10972 = !DISubroutineType(types: !10973)
!10973 = !{!1350, !1349, !2639, !10974, !48}
!10974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!10975 = !DILocalVariable(name: "ptr", arg: 1, scope: !10971, file: !3, line: 3745, type: !1349)
!10976 = !DILocation(line: 3745, column: 48, scope: !10971)
!10977 = !DILocalVariable(name: "type", arg: 2, scope: !10971, file: !3, line: 3745, type: !2639)
!10978 = !DILocation(line: 3745, column: 64, scope: !10971)
!10979 = !DILocalVariable(name: "lb", arg: 3, scope: !10971, file: !3, line: 3745, type: !10974)
!10980 = !DILocation(line: 3745, column: 87, scope: !10971)
!10981 = !DILocalVariable(name: "index", arg: 4, scope: !10971, file: !3, line: 3745, type: !48)
!10982 = !DILocation(line: 3745, column: 95, scope: !10971)
!10983 = !DILocalVariable(name: "data", scope: !10971, file: !3, line: 3747, type: !986)
!10984 = !DILocation(line: 3747, column: 8, scope: !10971)
!10985 = !DILocation(line: 3747, column: 28, scope: !10971)
!10986 = !DILocation(line: 3747, column: 32, scope: !10971)
!10987 = !DILocation(line: 3747, column: 15, scope: !10971)
!10988 = !DILocation(line: 3748, column: 36, scope: !10971)
!10989 = !DILocation(line: 3748, column: 41, scope: !10971)
!10990 = !DILocation(line: 3748, column: 47, scope: !10971)
!10991 = !DILocation(line: 3748, column: 9, scope: !10971)
!10992 = !DILocation(line: 3748, column: 2, scope: !10971)
!10993 = distinct !DISubprogram(name: "rna_iterator_array_get", scope: !3, file: !3, line: 3793, type: !10955, scopeLine: 3794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!10994 = !DILocalVariable(name: "iter", arg: 1, scope: !10993, file: !3, line: 3793, type: !3905)
!10995 = !DILocation(line: 3793, column: 58, scope: !10993)
!10996 = !DILocalVariable(name: "internal", scope: !10993, file: !3, line: 3795, type: !9283)
!10997 = !DILocation(line: 3795, column: 17, scope: !10993)
!10998 = !DILocation(line: 3795, column: 29, scope: !10993)
!10999 = !DILocation(line: 3795, column: 35, scope: !10993)
!11000 = !DILocation(line: 3795, column: 44, scope: !10993)
!11001 = !DILocation(line: 3797, column: 9, scope: !10993)
!11002 = !DILocation(line: 3797, column: 19, scope: !10993)
!11003 = !DILocation(line: 3797, column: 2, scope: !10993)
!11004 = distinct !DISubprogram(name: "rna_iterator_array_dereference_get", scope: !3, file: !3, line: 3800, type: !10955, scopeLine: 3801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11005 = !DILocalVariable(name: "iter", arg: 1, scope: !11004, file: !3, line: 3800, type: !3905)
!11006 = !DILocation(line: 3800, column: 70, scope: !11004)
!11007 = !DILocalVariable(name: "internal", scope: !11004, file: !3, line: 3802, type: !9283)
!11008 = !DILocation(line: 3802, column: 17, scope: !11004)
!11009 = !DILocation(line: 3802, column: 29, scope: !11004)
!11010 = !DILocation(line: 3802, column: 35, scope: !11004)
!11011 = !DILocation(line: 3802, column: 44, scope: !11004)
!11012 = !DILocation(line: 3805, column: 20, scope: !11004)
!11013 = !DILocation(line: 3805, column: 30, scope: !11004)
!11014 = !DILocation(line: 3805, column: 9, scope: !11004)
!11015 = !DILocation(line: 3805, column: 2, scope: !11004)
!11016 = distinct !DISubprogram(name: "rna_array_lookup_int", scope: !3, file: !3, line: 3818, type: !11017, scopeLine: 3819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11017 = !DISubroutineType(types: !11018)
!11018 = !{!1350, !1349, !2639, !986, !48, !48, !48}
!11019 = !DILocalVariable(name: "ptr", arg: 1, scope: !11016, file: !3, line: 3818, type: !1349)
!11020 = !DILocation(line: 3818, column: 45, scope: !11016)
!11021 = !DILocalVariable(name: "type", arg: 2, scope: !11016, file: !3, line: 3818, type: !2639)
!11022 = !DILocation(line: 3818, column: 61, scope: !11016)
!11023 = !DILocalVariable(name: "data", arg: 3, scope: !11016, file: !3, line: 3818, type: !986)
!11024 = !DILocation(line: 3818, column: 73, scope: !11016)
!11025 = !DILocalVariable(name: "itemsize", arg: 4, scope: !11016, file: !3, line: 3818, type: !48)
!11026 = !DILocation(line: 3818, column: 83, scope: !11016)
!11027 = !DILocalVariable(name: "length", arg: 5, scope: !11016, file: !3, line: 3818, type: !48)
!11028 = !DILocation(line: 3818, column: 97, scope: !11016)
!11029 = !DILocalVariable(name: "index", arg: 6, scope: !11016, file: !3, line: 3818, type: !48)
!11030 = !DILocation(line: 3818, column: 109, scope: !11016)
!11031 = !DILocation(line: 3820, column: 6, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 3820, column: 6)
!11033 = !DILocation(line: 3820, column: 12, scope: !11032)
!11034 = !DILocation(line: 3820, column: 16, scope: !11032)
!11035 = !DILocation(line: 3820, column: 19, scope: !11032)
!11036 = !DILocation(line: 3820, column: 28, scope: !11032)
!11037 = !DILocation(line: 3820, column: 25, scope: !11032)
!11038 = !DILocation(line: 3820, column: 6, scope: !11016)
!11039 = !DILocation(line: 3821, column: 10, scope: !11032)
!11040 = !DILocation(line: 3821, column: 3, scope: !11032)
!11041 = !DILocation(line: 3823, column: 36, scope: !11016)
!11042 = !DILocation(line: 3823, column: 41, scope: !11016)
!11043 = !DILocation(line: 3823, column: 56, scope: !11016)
!11044 = !DILocation(line: 3823, column: 64, scope: !11016)
!11045 = !DILocation(line: 3823, column: 72, scope: !11016)
!11046 = !DILocation(line: 3823, column: 70, scope: !11016)
!11047 = !DILocation(line: 3823, column: 62, scope: !11016)
!11048 = !DILocation(line: 3823, column: 9, scope: !11016)
!11049 = !DILocation(line: 3823, column: 2, scope: !11016)
!11050 = !DILocation(line: 3824, column: 1, scope: !11016)
!11051 = distinct !DISubprogram(name: "rna_path_parse", scope: !3, file: !3, line: 4077, type: !11052, scopeLine: 4081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11052 = !DISubroutineType(types: !11053)
!11053 = !{!1381, !1349, !1031, !1349, !3283, !1330, !1642, !6433}
!11054 = !DILocalVariable(name: "ptr", arg: 1, scope: !11051, file: !3, line: 4077, type: !1349)
!11055 = !DILocation(line: 4077, column: 40, scope: !11051)
!11056 = !DILocalVariable(name: "path", arg: 2, scope: !11051, file: !3, line: 4077, type: !1031)
!11057 = !DILocation(line: 4077, column: 57, scope: !11051)
!11058 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !11051, file: !3, line: 4078, type: !1349)
!11059 = !DILocation(line: 4078, column: 40, scope: !11051)
!11060 = !DILocalVariable(name: "r_prop", arg: 4, scope: !11051, file: !3, line: 4078, type: !3283)
!11061 = !DILocation(line: 4078, column: 61, scope: !11051)
!11062 = !DILocalVariable(name: "r_index", arg: 5, scope: !11051, file: !3, line: 4078, type: !1330)
!11063 = !DILocation(line: 4078, column: 74, scope: !11051)
!11064 = !DILocalVariable(name: "r_elements", arg: 6, scope: !11051, file: !3, line: 4079, type: !1642)
!11065 = !DILocation(line: 4079, column: 38, scope: !11051)
!11066 = !DILocalVariable(name: "eval_pointer", arg: 7, scope: !11051, file: !3, line: 4080, type: !6433)
!11067 = !DILocation(line: 4080, column: 39, scope: !11051)
!11068 = !DILocalVariable(name: "prop", scope: !11051, file: !3, line: 4082, type: !1021)
!11069 = !DILocation(line: 4082, column: 15, scope: !11051)
!11070 = !DILocalVariable(name: "curptr", scope: !11051, file: !3, line: 4083, type: !1350)
!11071 = !DILocation(line: 4083, column: 13, scope: !11051)
!11072 = !DILocalVariable(name: "prop_elem", scope: !11051, file: !3, line: 4084, type: !11073)
!11073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11074, size: 64)
!11074 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyElemRNA", file: !961, line: 935, baseType: !11075)
!11075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyElemRNA", file: !961, line: 936, size: 448, elements: !11076)
!11076 = !{!11077, !11078, !11079, !11080, !11081}
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11075, file: !961, line: 937, baseType: !11073, size: 64)
!11078 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11075, file: !961, line: 937, baseType: !11073, size: 64, offset: 64)
!11079 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !11075, file: !961, line: 938, baseType: !1350, size: 192, offset: 128)
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !11075, file: !961, line: 939, baseType: !1021, size: 64, offset: 320)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11075, file: !961, line: 940, baseType: !48, size: 32, offset: 384)
!11082 = !DILocation(line: 4084, column: 19, scope: !11051)
!11083 = !DILocalVariable(name: "index", scope: !11051, file: !3, line: 4085, type: !48)
!11084 = !DILocation(line: 4085, column: 6, scope: !11051)
!11085 = !DILocalVariable(name: "fixedbuf", scope: !11051, file: !3, line: 4086, type: !1190)
!11086 = !DILocation(line: 4086, column: 7, scope: !11051)
!11087 = !DILocalVariable(name: "type", scope: !11051, file: !3, line: 4087, type: !48)
!11088 = !DILocation(line: 4087, column: 6, scope: !11051)
!11089 = !DILocation(line: 4089, column: 7, scope: !11051)
!11090 = !DILocation(line: 4090, column: 12, scope: !11051)
!11091 = !DILocation(line: 4090, column: 11, scope: !11051)
!11092 = !DILocation(line: 4092, column: 6, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 4092, column: 6)
!11094 = !DILocation(line: 4092, column: 11, scope: !11093)
!11095 = !DILocation(line: 4092, column: 19, scope: !11093)
!11096 = !DILocation(line: 4092, column: 23, scope: !11093)
!11097 = !DILocation(line: 4092, column: 22, scope: !11093)
!11098 = !DILocation(line: 4092, column: 28, scope: !11093)
!11099 = !DILocation(line: 4092, column: 6, scope: !11051)
!11100 = !DILocation(line: 4093, column: 3, scope: !11093)
!11101 = !DILocation(line: 4095, column: 2, scope: !11051)
!11102 = !DILocation(line: 4095, column: 10, scope: !11051)
!11103 = !DILocation(line: 4095, column: 9, scope: !11051)
!11104 = !DILocalVariable(name: "use_id_prop", scope: !11105, file: !3, line: 4096, type: !48)
!11105 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 4095, column: 16)
!11106 = !DILocation(line: 4096, column: 7, scope: !11105)
!11107 = !DILocation(line: 4096, column: 23, scope: !11105)
!11108 = !DILocation(line: 4096, column: 22, scope: !11105)
!11109 = !DILocation(line: 4096, column: 28, scope: !11105)
!11110 = !DILocation(line: 4096, column: 21, scope: !11105)
!11111 = !DILocalVariable(name: "token", scope: !11105, file: !3, line: 4097, type: !1091)
!11112 = !DILocation(line: 4097, column: 9, scope: !11105)
!11113 = !DILocation(line: 4102, column: 15, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 4102, column: 7)
!11115 = !DILocation(line: 4102, column: 8, scope: !11114)
!11116 = !DILocation(line: 4102, column: 7, scope: !11105)
!11117 = !DILocation(line: 4103, column: 4, scope: !11114)
!11118 = !DILocation(line: 4106, column: 33, scope: !11105)
!11119 = !DILocation(line: 4106, column: 61, scope: !11105)
!11120 = !DILocation(line: 4106, column: 11, scope: !11105)
!11121 = !DILocation(line: 4106, column: 9, scope: !11105)
!11122 = !DILocation(line: 4108, column: 8, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 4108, column: 7)
!11124 = !DILocation(line: 4108, column: 7, scope: !11105)
!11125 = !DILocation(line: 4109, column: 4, scope: !11123)
!11126 = !DILocation(line: 4111, column: 8, scope: !11105)
!11127 = !DILocation(line: 4112, column: 7, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 4112, column: 7)
!11129 = !DILocation(line: 4112, column: 7, scope: !11105)
!11130 = !DILocalVariable(name: "group", scope: !11131, file: !3, line: 4113, type: !987)
!11131 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 4112, column: 20)
!11132 = !DILocation(line: 4113, column: 16, scope: !11131)
!11133 = !DILocation(line: 4113, column: 24, scope: !11131)
!11134 = !DILocation(line: 4114, column: 8, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11131, file: !3, line: 4114, column: 8)
!11136 = !DILocation(line: 4114, column: 14, scope: !11135)
!11137 = !DILocation(line: 4114, column: 40, scope: !11135)
!11138 = !DILocation(line: 4114, column: 17, scope: !11135)
!11139 = !DILocation(line: 4114, column: 8, scope: !11131)
!11140 = !DILocation(line: 4115, column: 52, scope: !11135)
!11141 = !DILocation(line: 4115, column: 59, scope: !11135)
!11142 = !DILocation(line: 4115, column: 65, scope: !11135)
!11143 = !DILocation(line: 4115, column: 27, scope: !11135)
!11144 = !DILocation(line: 4115, column: 12, scope: !11135)
!11145 = !DILocation(line: 4115, column: 10, scope: !11135)
!11146 = !DILocation(line: 4115, column: 5, scope: !11135)
!11147 = !DILocation(line: 4116, column: 3, scope: !11131)
!11148 = !DILocation(line: 4118, column: 45, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 4117, column: 8)
!11150 = !DILocation(line: 4118, column: 11, scope: !11149)
!11151 = !DILocation(line: 4118, column: 9, scope: !11149)
!11152 = !DILocation(line: 4121, column: 7, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 4121, column: 7)
!11154 = !DILocation(line: 4121, column: 16, scope: !11153)
!11155 = !DILocation(line: 4121, column: 13, scope: !11153)
!11156 = !DILocation(line: 4121, column: 7, scope: !11105)
!11157 = !DILocation(line: 4122, column: 4, scope: !11153)
!11158 = !DILocation(line: 4122, column: 14, scope: !11153)
!11159 = !DILocation(line: 4124, column: 8, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 4124, column: 7)
!11161 = !DILocation(line: 4124, column: 7, scope: !11105)
!11162 = !DILocation(line: 4125, column: 4, scope: !11160)
!11163 = !DILocation(line: 4127, column: 7, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 4127, column: 7)
!11165 = !DILocation(line: 4127, column: 7, scope: !11105)
!11166 = !DILocation(line: 4128, column: 16, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 4127, column: 19)
!11168 = !DILocation(line: 4128, column: 14, scope: !11167)
!11169 = !DILocation(line: 4129, column: 4, scope: !11167)
!11170 = !DILocation(line: 4129, column: 15, scope: !11167)
!11171 = !DILocation(line: 4129, column: 21, scope: !11167)
!11172 = !DILocation(line: 4130, column: 22, scope: !11167)
!11173 = !DILocation(line: 4130, column: 4, scope: !11167)
!11174 = !DILocation(line: 4130, column: 15, scope: !11167)
!11175 = !DILocation(line: 4130, column: 20, scope: !11167)
!11176 = !DILocation(line: 4131, column: 4, scope: !11167)
!11177 = !DILocation(line: 4131, column: 15, scope: !11167)
!11178 = !DILocation(line: 4131, column: 21, scope: !11167)
!11179 = !DILocation(line: 4132, column: 16, scope: !11167)
!11180 = !DILocation(line: 4132, column: 28, scope: !11167)
!11181 = !DILocation(line: 4132, column: 4, scope: !11167)
!11182 = !DILocation(line: 4133, column: 3, scope: !11167)
!11183 = !DILocation(line: 4135, column: 28, scope: !11105)
!11184 = !DILocation(line: 4135, column: 10, scope: !11105)
!11185 = !DILocation(line: 4135, column: 8, scope: !11105)
!11186 = !DILocation(line: 4140, column: 11, scope: !11105)
!11187 = !DILocation(line: 4140, column: 3, scope: !11105)
!11188 = !DILocation(line: 4145, column: 9, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11190, file: !3, line: 4145, column: 9)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 4141, column: 23)
!11191 = distinct !DILexicalBlock(scope: !11105, file: !3, line: 4140, column: 17)
!11192 = !DILocation(line: 4145, column: 22, scope: !11189)
!11193 = !DILocation(line: 4145, column: 26, scope: !11189)
!11194 = !DILocation(line: 4145, column: 25, scope: !11189)
!11195 = !DILocation(line: 4145, column: 9, scope: !11190)
!11196 = !DILocalVariable(name: "nextptr", scope: !11197, file: !3, line: 4146, type: !1350)
!11197 = distinct !DILexicalBlock(scope: !11189, file: !3, line: 4145, column: 32)
!11198 = !DILocation(line: 4146, column: 17, scope: !11197)
!11199 = !DILocation(line: 4146, column: 61, scope: !11197)
!11200 = !DILocation(line: 4146, column: 27, scope: !11197)
!11201 = !DILocation(line: 4148, column: 15, scope: !11197)
!11202 = !DILocation(line: 4149, column: 11, scope: !11197)
!11203 = !DILocation(line: 4150, column: 12, scope: !11197)
!11204 = !DILocation(line: 4151, column: 5, scope: !11197)
!11205 = !DILocation(line: 4152, column: 5, scope: !11190)
!11206 = !DILocation(line: 4160, column: 10, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 4160, column: 9)
!11208 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 4154, column: 26)
!11209 = !DILocation(line: 4160, column: 9, scope: !11207)
!11210 = !DILocation(line: 4160, column: 9, scope: !11208)
!11211 = !DILocalVariable(name: "nextptr", scope: !11212, file: !3, line: 4161, type: !1350)
!11212 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 4160, column: 16)
!11213 = !DILocation(line: 4161, column: 17, scope: !11212)
!11214 = !DILocation(line: 4162, column: 57, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 4162, column: 10)
!11216 = !DILocation(line: 4162, column: 11, scope: !11215)
!11217 = !DILocation(line: 4162, column: 10, scope: !11212)
!11218 = !DILocation(line: 4163, column: 7, scope: !11215)
!11219 = !DILocation(line: 4165, column: 15, scope: !11212)
!11220 = !DILocation(line: 4166, column: 11, scope: !11212)
!11221 = !DILocation(line: 4167, column: 12, scope: !11212)
!11222 = !DILocation(line: 4168, column: 5, scope: !11212)
!11223 = !DILocation(line: 4169, column: 5, scope: !11208)
!11224 = !DILocation(line: 4172, column: 9, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11191, file: !3, line: 4172, column: 9)
!11226 = !DILocation(line: 4172, column: 17, scope: !11225)
!11227 = !DILocation(line: 4172, column: 20, scope: !11225)
!11228 = !DILocation(line: 4172, column: 9, scope: !11191)
!11229 = !DILocation(line: 4173, column: 54, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 4173, column: 10)
!11231 = distinct !DILexicalBlock(scope: !11225, file: !3, line: 4172, column: 31)
!11232 = !DILocation(line: 4173, column: 11, scope: !11230)
!11233 = !DILocation(line: 4173, column: 10, scope: !11231)
!11234 = !DILocation(line: 4174, column: 7, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11230, file: !3, line: 4173, column: 69)
!11236 = !DILocation(line: 4177, column: 10, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 4177, column: 10)
!11238 = !DILocation(line: 4177, column: 10, scope: !11231)
!11239 = !DILocation(line: 4178, column: 26, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 4177, column: 21)
!11241 = !DILocation(line: 4178, column: 7, scope: !11240)
!11242 = !DILocation(line: 4178, column: 18, scope: !11240)
!11243 = !DILocation(line: 4178, column: 24, scope: !11240)
!11244 = !DILocation(line: 4179, column: 6, scope: !11240)
!11245 = !DILocation(line: 4180, column: 5, scope: !11231)
!11246 = !DILocation(line: 4181, column: 5, scope: !11191)
!11247 = distinct !{!11247, !11101, !11248}
!11248 = !DILocation(line: 4183, column: 2, scope: !11051)
!11249 = !DILocation(line: 4185, column: 6, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 4185, column: 6)
!11251 = !DILocation(line: 4185, column: 6, scope: !11051)
!11252 = !DILocation(line: 4186, column: 4, scope: !11250)
!11253 = !DILocation(line: 4186, column: 12, scope: !11250)
!11254 = !DILocation(line: 4186, column: 3, scope: !11250)
!11255 = !DILocation(line: 4187, column: 6, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 4187, column: 6)
!11257 = !DILocation(line: 4187, column: 6, scope: !11051)
!11258 = !DILocation(line: 4188, column: 13, scope: !11256)
!11259 = !DILocation(line: 4188, column: 4, scope: !11256)
!11260 = !DILocation(line: 4188, column: 11, scope: !11256)
!11261 = !DILocation(line: 4188, column: 3, scope: !11256)
!11262 = !DILocation(line: 4189, column: 6, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 4189, column: 6)
!11264 = !DILocation(line: 4189, column: 6, scope: !11051)
!11265 = !DILocation(line: 4190, column: 14, scope: !11263)
!11266 = !DILocation(line: 4190, column: 4, scope: !11263)
!11267 = !DILocation(line: 4190, column: 12, scope: !11263)
!11268 = !DILocation(line: 4190, column: 3, scope: !11263)
!11269 = !DILocation(line: 4192, column: 6, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 4192, column: 6)
!11271 = !DILocation(line: 4192, column: 16, scope: !11270)
!11272 = !DILocation(line: 4192, column: 20, scope: !11270)
!11273 = !DILocation(line: 4192, column: 31, scope: !11270)
!11274 = !DILocation(line: 4192, column: 35, scope: !11270)
!11275 = !DILocation(line: 4192, column: 50, scope: !11270)
!11276 = !DILocation(line: 4192, column: 40, scope: !11270)
!11277 = !DILocation(line: 4192, column: 55, scope: !11270)
!11278 = !DILocation(line: 4192, column: 58, scope: !11270)
!11279 = !DILocation(line: 4192, column: 69, scope: !11270)
!11280 = !DILocation(line: 4192, column: 77, scope: !11270)
!11281 = !DILocation(line: 4192, column: 74, scope: !11270)
!11282 = !DILocation(line: 4192, column: 82, scope: !11270)
!11283 = !DILocation(line: 4192, column: 85, scope: !11270)
!11284 = !DILocation(line: 4192, column: 96, scope: !11270)
!11285 = !DILocation(line: 4192, column: 105, scope: !11270)
!11286 = !DILocation(line: 4192, column: 102, scope: !11270)
!11287 = !DILocation(line: 4192, column: 6, scope: !11051)
!11288 = !DILocalVariable(name: "prop_elem", scope: !11289, file: !3, line: 4193, type: !11073)
!11289 = distinct !DILexicalBlock(scope: !11270, file: !3, line: 4192, column: 113)
!11290 = !DILocation(line: 4193, column: 20, scope: !11289)
!11291 = !DILocation(line: 4193, column: 32, scope: !11289)
!11292 = !DILocation(line: 4194, column: 3, scope: !11289)
!11293 = !DILocation(line: 4194, column: 14, scope: !11289)
!11294 = !DILocation(line: 4194, column: 20, scope: !11289)
!11295 = !DILocation(line: 4195, column: 21, scope: !11289)
!11296 = !DILocation(line: 4195, column: 3, scope: !11289)
!11297 = !DILocation(line: 4195, column: 14, scope: !11289)
!11298 = !DILocation(line: 4195, column: 19, scope: !11289)
!11299 = !DILocation(line: 4196, column: 22, scope: !11289)
!11300 = !DILocation(line: 4196, column: 3, scope: !11289)
!11301 = !DILocation(line: 4196, column: 14, scope: !11289)
!11302 = !DILocation(line: 4196, column: 20, scope: !11289)
!11303 = !DILocation(line: 4197, column: 15, scope: !11289)
!11304 = !DILocation(line: 4197, column: 27, scope: !11289)
!11305 = !DILocation(line: 4197, column: 3, scope: !11289)
!11306 = !DILocation(line: 4198, column: 2, scope: !11289)
!11307 = !DILocation(line: 4200, column: 2, scope: !11051)
!11308 = !DILocation(line: 4201, column: 1, scope: !11051)
!11309 = distinct !DISubprogram(name: "RNA_path_resolve_full", scope: !3, file: !3, line: 4223, type: !11310, scopeLine: 4224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11310 = !DISubroutineType(types: !11311)
!11311 = !{!1381, !1349, !1031, !1349, !3283, !1330}
!11312 = !DILocalVariable(name: "ptr", arg: 1, scope: !11309, file: !3, line: 4223, type: !1349)
!11313 = !DILocation(line: 4223, column: 40, scope: !11309)
!11314 = !DILocalVariable(name: "path", arg: 2, scope: !11309, file: !3, line: 4223, type: !1031)
!11315 = !DILocation(line: 4223, column: 57, scope: !11309)
!11316 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !11309, file: !3, line: 4223, type: !1349)
!11317 = !DILocation(line: 4223, column: 75, scope: !11309)
!11318 = !DILocalVariable(name: "r_prop", arg: 4, scope: !11309, file: !3, line: 4223, type: !3283)
!11319 = !DILocation(line: 4223, column: 96, scope: !11309)
!11320 = !DILocalVariable(name: "r_index", arg: 5, scope: !11309, file: !3, line: 4223, type: !1330)
!11321 = !DILocation(line: 4223, column: 109, scope: !11309)
!11322 = !DILocation(line: 4225, column: 22, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 4225, column: 6)
!11324 = !DILocation(line: 4225, column: 27, scope: !11323)
!11325 = !DILocation(line: 4225, column: 33, scope: !11323)
!11326 = !DILocation(line: 4225, column: 40, scope: !11323)
!11327 = !DILocation(line: 4225, column: 48, scope: !11323)
!11328 = !DILocation(line: 4225, column: 7, scope: !11323)
!11329 = !DILocation(line: 4225, column: 6, scope: !11309)
!11330 = !DILocation(line: 4226, column: 3, scope: !11323)
!11331 = !DILocation(line: 4228, column: 9, scope: !11309)
!11332 = !DILocation(line: 4228, column: 16, scope: !11309)
!11333 = !DILocation(line: 4228, column: 21, scope: !11309)
!11334 = !DILocation(line: 4228, column: 2, scope: !11309)
!11335 = !DILocation(line: 4229, column: 1, scope: !11309)
!11336 = distinct !DISubprogram(name: "RNA_path_resolve_property", scope: !3, file: !3, line: 4238, type: !3722, scopeLine: 4239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11337 = !DILocalVariable(name: "ptr", arg: 1, scope: !11336, file: !3, line: 4238, type: !1349)
!11338 = !DILocation(line: 4238, column: 44, scope: !11336)
!11339 = !DILocalVariable(name: "path", arg: 2, scope: !11336, file: !3, line: 4238, type: !1031)
!11340 = !DILocation(line: 4238, column: 61, scope: !11336)
!11341 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !11336, file: !3, line: 4238, type: !1349)
!11342 = !DILocation(line: 4238, column: 79, scope: !11336)
!11343 = !DILocalVariable(name: "r_prop", arg: 4, scope: !11336, file: !3, line: 4238, type: !3283)
!11344 = !DILocation(line: 4238, column: 100, scope: !11336)
!11345 = !DILocation(line: 4240, column: 22, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 4240, column: 6)
!11347 = !DILocation(line: 4240, column: 27, scope: !11346)
!11348 = !DILocation(line: 4240, column: 33, scope: !11346)
!11349 = !DILocation(line: 4240, column: 40, scope: !11346)
!11350 = !DILocation(line: 4240, column: 7, scope: !11346)
!11351 = !DILocation(line: 4240, column: 6, scope: !11336)
!11352 = !DILocation(line: 4241, column: 3, scope: !11346)
!11353 = !DILocation(line: 4243, column: 9, scope: !11336)
!11354 = !DILocation(line: 4243, column: 16, scope: !11336)
!11355 = !DILocation(line: 4243, column: 21, scope: !11336)
!11356 = !DILocation(line: 4243, column: 29, scope: !11336)
!11357 = !DILocation(line: 4243, column: 33, scope: !11336)
!11358 = !DILocation(line: 4243, column: 32, scope: !11336)
!11359 = !DILocation(line: 4243, column: 40, scope: !11336)
!11360 = !DILocation(line: 0, scope: !11336)
!11361 = !DILocation(line: 4243, column: 2, scope: !11336)
!11362 = !DILocation(line: 4244, column: 1, scope: !11336)
!11363 = distinct !DISubprogram(name: "RNA_path_resolve_property_full", scope: !3, file: !3, line: 4254, type: !11310, scopeLine: 4255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11364 = !DILocalVariable(name: "ptr", arg: 1, scope: !11363, file: !3, line: 4254, type: !1349)
!11365 = !DILocation(line: 4254, column: 49, scope: !11363)
!11366 = !DILocalVariable(name: "path", arg: 2, scope: !11363, file: !3, line: 4254, type: !1031)
!11367 = !DILocation(line: 4254, column: 66, scope: !11363)
!11368 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !11363, file: !3, line: 4254, type: !1349)
!11369 = !DILocation(line: 4254, column: 84, scope: !11363)
!11370 = !DILocalVariable(name: "r_prop", arg: 4, scope: !11363, file: !3, line: 4254, type: !3283)
!11371 = !DILocation(line: 4254, column: 105, scope: !11363)
!11372 = !DILocalVariable(name: "r_index", arg: 5, scope: !11363, file: !3, line: 4254, type: !1330)
!11373 = !DILocation(line: 4254, column: 118, scope: !11363)
!11374 = !DILocation(line: 4256, column: 22, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 4256, column: 6)
!11376 = !DILocation(line: 4256, column: 27, scope: !11375)
!11377 = !DILocation(line: 4256, column: 33, scope: !11375)
!11378 = !DILocation(line: 4256, column: 40, scope: !11375)
!11379 = !DILocation(line: 4256, column: 48, scope: !11375)
!11380 = !DILocation(line: 4256, column: 7, scope: !11375)
!11381 = !DILocation(line: 4256, column: 6, scope: !11363)
!11382 = !DILocation(line: 4257, column: 3, scope: !11375)
!11383 = !DILocation(line: 4259, column: 9, scope: !11363)
!11384 = !DILocation(line: 4259, column: 16, scope: !11363)
!11385 = !DILocation(line: 4259, column: 21, scope: !11363)
!11386 = !DILocation(line: 4259, column: 29, scope: !11363)
!11387 = !DILocation(line: 4259, column: 33, scope: !11363)
!11388 = !DILocation(line: 4259, column: 32, scope: !11363)
!11389 = !DILocation(line: 4259, column: 40, scope: !11363)
!11390 = !DILocation(line: 0, scope: !11363)
!11391 = !DILocation(line: 4259, column: 2, scope: !11363)
!11392 = !DILocation(line: 4260, column: 1, scope: !11363)
!11393 = distinct !DISubprogram(name: "RNA_path_resolve_elements", scope: !3, file: !3, line: 4271, type: !11394, scopeLine: 4272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11394 = !DISubroutineType(types: !11395)
!11395 = !{!1381, !1349, !1031, !1642}
!11396 = !DILocalVariable(name: "ptr", arg: 1, scope: !11393, file: !3, line: 4271, type: !1349)
!11397 = !DILocation(line: 4271, column: 44, scope: !11393)
!11398 = !DILocalVariable(name: "path", arg: 2, scope: !11393, file: !3, line: 4271, type: !1031)
!11399 = !DILocation(line: 4271, column: 61, scope: !11393)
!11400 = !DILocalVariable(name: "r_elements", arg: 3, scope: !11393, file: !3, line: 4271, type: !1642)
!11401 = !DILocation(line: 4271, column: 77, scope: !11393)
!11402 = !DILocation(line: 4273, column: 24, scope: !11393)
!11403 = !DILocation(line: 4273, column: 29, scope: !11393)
!11404 = !DILocation(line: 4273, column: 53, scope: !11393)
!11405 = !DILocation(line: 4273, column: 9, scope: !11393)
!11406 = !DILocation(line: 4273, column: 2, scope: !11393)
!11407 = distinct !DISubprogram(name: "RNA_path_append", scope: !3, file: !3, line: 4276, type: !11408, scopeLine: 4277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11408 = !DISubroutineType(types: !11409)
!11409 = !{!1091, !1031, !1349, !1021, !48, !1031}
!11410 = !DILocalVariable(name: "path", arg: 1, scope: !11407, file: !3, line: 4276, type: !1031)
!11411 = !DILocation(line: 4276, column: 35, scope: !11407)
!11412 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !11407, file: !3, line: 4276, type: !1349)
!11413 = !DILocation(line: 4276, column: 53, scope: !11407)
!11414 = !DILocalVariable(name: "prop", arg: 3, scope: !11407, file: !3, line: 4276, type: !1021)
!11415 = !DILocation(line: 4276, column: 79, scope: !11407)
!11416 = !DILocalVariable(name: "intkey", arg: 4, scope: !11407, file: !3, line: 4276, type: !48)
!11417 = !DILocation(line: 4276, column: 89, scope: !11407)
!11418 = !DILocalVariable(name: "strkey", arg: 5, scope: !11407, file: !3, line: 4276, type: !1031)
!11419 = !DILocation(line: 4276, column: 109, scope: !11407)
!11420 = !DILocalVariable(name: "dynstr", scope: !11407, file: !3, line: 4278, type: !11421)
!11421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11422, size: 64)
!11422 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynStr", file: !11423, line: 48, baseType: !11424)
!11423 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dynstr.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11424 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynStr", file: !11423, line: 45, flags: DIFlagFwdDecl)
!11425 = !DILocation(line: 4278, column: 10, scope: !11407)
!11426 = !DILocalVariable(name: "s", scope: !11407, file: !3, line: 4279, type: !1031)
!11427 = !DILocation(line: 4279, column: 14, scope: !11407)
!11428 = !DILocalVariable(name: "appendstr", scope: !11407, file: !3, line: 4280, type: !2118)
!11429 = !DILocation(line: 4280, column: 7, scope: !11407)
!11430 = !DILocalVariable(name: "result", scope: !11407, file: !3, line: 4280, type: !1091)
!11431 = !DILocation(line: 4280, column: 24, scope: !11407)
!11432 = !DILocation(line: 4282, column: 11, scope: !11407)
!11433 = !DILocation(line: 4282, column: 9, scope: !11407)
!11434 = !DILocation(line: 4285, column: 6, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 4285, column: 6)
!11436 = !DILocation(line: 4285, column: 6, scope: !11407)
!11437 = !DILocation(line: 4286, column: 21, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 4285, column: 12)
!11439 = !DILocation(line: 4286, column: 37, scope: !11438)
!11440 = !DILocation(line: 4286, column: 3, scope: !11438)
!11441 = !DILocation(line: 4287, column: 8, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 4287, column: 7)
!11443 = !DILocation(line: 4287, column: 7, scope: !11442)
!11444 = !DILocation(line: 4287, column: 7, scope: !11438)
!11445 = !DILocation(line: 4288, column: 22, scope: !11442)
!11446 = !DILocation(line: 4288, column: 4, scope: !11442)
!11447 = !DILocation(line: 4289, column: 2, scope: !11438)
!11448 = !DILocation(line: 4291, column: 20, scope: !11407)
!11449 = !DILocation(line: 4291, column: 52, scope: !11407)
!11450 = !DILocation(line: 4291, column: 28, scope: !11407)
!11451 = !DILocation(line: 4291, column: 2, scope: !11407)
!11452 = !DILocation(line: 4293, column: 24, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 4293, column: 6)
!11454 = !DILocation(line: 4293, column: 6, scope: !11453)
!11455 = !DILocation(line: 4293, column: 30, scope: !11453)
!11456 = !DILocation(line: 4293, column: 6, scope: !11407)
!11457 = !DILocation(line: 4295, column: 21, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 4293, column: 50)
!11459 = !DILocation(line: 4295, column: 3, scope: !11458)
!11460 = !DILocation(line: 4297, column: 7, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11458, file: !3, line: 4297, column: 7)
!11462 = !DILocation(line: 4297, column: 7, scope: !11458)
!11463 = !DILocation(line: 4298, column: 22, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 4297, column: 15)
!11465 = !DILocation(line: 4298, column: 4, scope: !11464)
!11466 = !DILocation(line: 4299, column: 13, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 4299, column: 4)
!11468 = !DILocation(line: 4299, column: 11, scope: !11467)
!11469 = !DILocation(line: 4299, column: 9, scope: !11467)
!11470 = !DILocation(line: 4299, column: 22, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 4299, column: 4)
!11472 = !DILocation(line: 4299, column: 21, scope: !11471)
!11473 = !DILocation(line: 4299, column: 4, scope: !11467)
!11474 = !DILocation(line: 4300, column: 10, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11476, file: !3, line: 4300, column: 9)
!11476 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 4299, column: 30)
!11477 = !DILocation(line: 4300, column: 9, scope: !11475)
!11478 = !DILocation(line: 4300, column: 12, scope: !11475)
!11479 = !DILocation(line: 4300, column: 9, scope: !11476)
!11480 = !DILocation(line: 4301, column: 6, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 4300, column: 20)
!11482 = !DILocation(line: 4301, column: 19, scope: !11481)
!11483 = !DILocation(line: 4302, column: 22, scope: !11481)
!11484 = !DILocation(line: 4302, column: 21, scope: !11481)
!11485 = !DILocation(line: 4302, column: 6, scope: !11481)
!11486 = !DILocation(line: 4302, column: 19, scope: !11481)
!11487 = !DILocation(line: 4303, column: 6, scope: !11481)
!11488 = !DILocation(line: 4303, column: 19, scope: !11481)
!11489 = !DILocation(line: 4304, column: 5, scope: !11481)
!11490 = !DILocation(line: 4306, column: 22, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 4305, column: 10)
!11492 = !DILocation(line: 4306, column: 21, scope: !11491)
!11493 = !DILocation(line: 4306, column: 6, scope: !11491)
!11494 = !DILocation(line: 4306, column: 19, scope: !11491)
!11495 = !DILocation(line: 4307, column: 6, scope: !11491)
!11496 = !DILocation(line: 4307, column: 19, scope: !11491)
!11497 = !DILocation(line: 4309, column: 23, scope: !11476)
!11498 = !DILocation(line: 4309, column: 31, scope: !11476)
!11499 = !DILocation(line: 4309, column: 5, scope: !11476)
!11500 = !DILocation(line: 4310, column: 4, scope: !11476)
!11501 = !DILocation(line: 4299, column: 26, scope: !11471)
!11502 = !DILocation(line: 4299, column: 4, scope: !11471)
!11503 = distinct !{!11503, !11473, !11504}
!11504 = !DILocation(line: 4310, column: 4, scope: !11467)
!11505 = !DILocation(line: 4311, column: 22, scope: !11464)
!11506 = !DILocation(line: 4311, column: 4, scope: !11464)
!11507 = !DILocation(line: 4312, column: 3, scope: !11464)
!11508 = !DILocation(line: 4314, column: 17, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 4313, column: 8)
!11510 = !DILocation(line: 4314, column: 53, scope: !11509)
!11511 = !DILocation(line: 4314, column: 4, scope: !11509)
!11512 = !DILocation(line: 4315, column: 22, scope: !11509)
!11513 = !DILocation(line: 4315, column: 30, scope: !11509)
!11514 = !DILocation(line: 4315, column: 4, scope: !11509)
!11515 = !DILocation(line: 4318, column: 21, scope: !11458)
!11516 = !DILocation(line: 4318, column: 3, scope: !11458)
!11517 = !DILocation(line: 4319, column: 2, scope: !11458)
!11518 = !DILocation(line: 4321, column: 34, scope: !11407)
!11519 = !DILocation(line: 4321, column: 11, scope: !11407)
!11520 = !DILocation(line: 4321, column: 9, scope: !11407)
!11521 = !DILocation(line: 4322, column: 18, scope: !11407)
!11522 = !DILocation(line: 4322, column: 2, scope: !11407)
!11523 = !DILocation(line: 4324, column: 9, scope: !11407)
!11524 = !DILocation(line: 4324, column: 2, scope: !11407)
!11525 = distinct !DISubprogram(name: "RNA_path_back", scope: !3, file: !3, line: 4327, type: !11526, scopeLine: 4328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11526 = !DISubroutineType(types: !11527)
!11527 = !{!1091, !1031}
!11528 = !DILocalVariable(name: "path", arg: 1, scope: !11525, file: !3, line: 4327, type: !1031)
!11529 = !DILocation(line: 4327, column: 33, scope: !11525)
!11530 = !DILocalVariable(name: "fixedbuf", scope: !11525, file: !3, line: 4329, type: !1190)
!11531 = !DILocation(line: 4329, column: 7, scope: !11525)
!11532 = !DILocalVariable(name: "previous", scope: !11525, file: !3, line: 4330, type: !1031)
!11533 = !DILocation(line: 4330, column: 14, scope: !11525)
!11534 = !DILocalVariable(name: "current", scope: !11525, file: !3, line: 4330, type: !1031)
!11535 = !DILocation(line: 4330, column: 25, scope: !11525)
!11536 = !DILocalVariable(name: "result", scope: !11525, file: !3, line: 4331, type: !1091)
!11537 = !DILocation(line: 4331, column: 8, scope: !11525)
!11538 = !DILocalVariable(name: "i", scope: !11525, file: !3, line: 4332, type: !48)
!11539 = !DILocation(line: 4332, column: 6, scope: !11525)
!11540 = !DILocation(line: 4334, column: 7, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 4334, column: 6)
!11542 = !DILocation(line: 4334, column: 6, scope: !11525)
!11543 = !DILocation(line: 4335, column: 3, scope: !11541)
!11544 = !DILocation(line: 4337, column: 11, scope: !11525)
!11545 = !DILocation(line: 4338, column: 12, scope: !11525)
!11546 = !DILocation(line: 4338, column: 10, scope: !11525)
!11547 = !DILocation(line: 4342, column: 2, scope: !11525)
!11548 = !DILocation(line: 4342, column: 10, scope: !11525)
!11549 = !DILocation(line: 4342, column: 9, scope: !11525)
!11550 = !DILocalVariable(name: "token", scope: !11551, file: !3, line: 4343, type: !1091)
!11551 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 4342, column: 19)
!11552 = !DILocation(line: 4343, column: 9, scope: !11551)
!11553 = !DILocation(line: 4345, column: 36, scope: !11551)
!11554 = !DILocation(line: 4345, column: 11, scope: !11551)
!11555 = !DILocation(line: 4345, column: 9, scope: !11551)
!11556 = !DILocation(line: 4347, column: 8, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 4347, column: 7)
!11558 = !DILocation(line: 4347, column: 7, scope: !11551)
!11559 = !DILocation(line: 4348, column: 4, scope: !11557)
!11560 = !DILocation(line: 4349, column: 7, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 4349, column: 7)
!11562 = !DILocation(line: 4349, column: 16, scope: !11561)
!11563 = !DILocation(line: 4349, column: 13, scope: !11561)
!11564 = !DILocation(line: 4349, column: 7, scope: !11551)
!11565 = !DILocation(line: 4350, column: 4, scope: !11561)
!11566 = !DILocation(line: 4350, column: 14, scope: !11561)
!11567 = !DILocation(line: 4353, column: 36, scope: !11551)
!11568 = !DILocation(line: 4353, column: 11, scope: !11551)
!11569 = !DILocation(line: 4353, column: 9, scope: !11551)
!11570 = !DILocation(line: 4354, column: 7, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 4354, column: 7)
!11572 = !DILocation(line: 4354, column: 13, scope: !11571)
!11573 = !DILocation(line: 4354, column: 16, scope: !11571)
!11574 = !DILocation(line: 4354, column: 25, scope: !11571)
!11575 = !DILocation(line: 4354, column: 22, scope: !11571)
!11576 = !DILocation(line: 4354, column: 7, scope: !11551)
!11577 = !DILocation(line: 4355, column: 4, scope: !11571)
!11578 = !DILocation(line: 4355, column: 14, scope: !11571)
!11579 = !DILocation(line: 4357, column: 9, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 4357, column: 7)
!11581 = !DILocation(line: 4357, column: 8, scope: !11580)
!11582 = !DILocation(line: 4357, column: 7, scope: !11551)
!11583 = !DILocation(line: 4358, column: 4, scope: !11580)
!11584 = !DILocation(line: 4360, column: 14, scope: !11551)
!11585 = !DILocation(line: 4360, column: 12, scope: !11551)
!11586 = distinct !{!11586, !11547, !11587}
!11587 = !DILocation(line: 4361, column: 2, scope: !11525)
!11588 = !DILocation(line: 4363, column: 7, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 4363, column: 6)
!11590 = !DILocation(line: 4363, column: 6, scope: !11525)
!11591 = !DILocation(line: 4364, column: 3, scope: !11589)
!11592 = !DILocation(line: 4367, column: 6, scope: !11525)
!11593 = !DILocation(line: 4367, column: 17, scope: !11525)
!11594 = !DILocation(line: 4367, column: 15, scope: !11525)
!11595 = !DILocation(line: 4367, column: 4, scope: !11525)
!11596 = !DILocation(line: 4368, column: 22, scope: !11525)
!11597 = !DILocation(line: 4368, column: 11, scope: !11525)
!11598 = !DILocation(line: 4368, column: 9, scope: !11525)
!11599 = !DILocation(line: 4370, column: 6, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 4370, column: 6)
!11601 = !DILocation(line: 4370, column: 8, scope: !11600)
!11602 = !DILocation(line: 4370, column: 12, scope: !11600)
!11603 = !DILocation(line: 4370, column: 15, scope: !11600)
!11604 = !DILocation(line: 4370, column: 22, scope: !11600)
!11605 = !DILocation(line: 4370, column: 24, scope: !11600)
!11606 = !DILocation(line: 4370, column: 29, scope: !11600)
!11607 = !DILocation(line: 4370, column: 6, scope: !11525)
!11608 = !DILocation(line: 4370, column: 38, scope: !11600)
!11609 = !DILocation(line: 4370, column: 37, scope: !11600)
!11610 = !DILocation(line: 4371, column: 2, scope: !11525)
!11611 = !DILocation(line: 4371, column: 9, scope: !11525)
!11612 = !DILocation(line: 4371, column: 12, scope: !11525)
!11613 = !DILocation(line: 4373, column: 9, scope: !11525)
!11614 = !DILocation(line: 4373, column: 2, scope: !11525)
!11615 = !DILocation(line: 4374, column: 1, scope: !11525)
!11616 = distinct !DISubprogram(name: "rna_path_token", scope: !3, file: !3, line: 3828, type: !11617, scopeLine: 3829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11617 = !DISubroutineType(types: !11618)
!11618 = !{!1091, !5808, !1091, !48, !48}
!11619 = !DILocalVariable(name: "path", arg: 1, scope: !11616, file: !3, line: 3828, type: !5808)
!11620 = !DILocation(line: 3828, column: 42, scope: !11616)
!11621 = !DILocalVariable(name: "fixedbuf", arg: 2, scope: !11616, file: !3, line: 3828, type: !1091)
!11622 = !DILocation(line: 3828, column: 54, scope: !11616)
!11623 = !DILocalVariable(name: "fixedlen", arg: 3, scope: !11616, file: !3, line: 3828, type: !48)
!11624 = !DILocation(line: 3828, column: 68, scope: !11616)
!11625 = !DILocalVariable(name: "bracket", arg: 4, scope: !11616, file: !3, line: 3828, type: !48)
!11626 = !DILocation(line: 3828, column: 82, scope: !11616)
!11627 = !DILocalVariable(name: "p", scope: !11616, file: !3, line: 3830, type: !1031)
!11628 = !DILocation(line: 3830, column: 14, scope: !11616)
!11629 = !DILocalVariable(name: "buf", scope: !11616, file: !3, line: 3831, type: !1091)
!11630 = !DILocation(line: 3831, column: 8, scope: !11616)
!11631 = !DILocalVariable(name: "quote", scope: !11616, file: !3, line: 3832, type: !996)
!11632 = !DILocation(line: 3832, column: 7, scope: !11616)
!11633 = !DILocalVariable(name: "i", scope: !11616, file: !3, line: 3833, type: !48)
!11634 = !DILocation(line: 3833, column: 6, scope: !11616)
!11635 = !DILocalVariable(name: "j", scope: !11616, file: !3, line: 3833, type: !48)
!11636 = !DILocation(line: 3833, column: 9, scope: !11616)
!11637 = !DILocalVariable(name: "len", scope: !11616, file: !3, line: 3833, type: !48)
!11638 = !DILocation(line: 3833, column: 12, scope: !11616)
!11639 = !DILocalVariable(name: "escape", scope: !11616, file: !3, line: 3833, type: !48)
!11640 = !DILocation(line: 3833, column: 17, scope: !11616)
!11641 = !DILocation(line: 3835, column: 6, scope: !11616)
!11642 = !DILocation(line: 3837, column: 6, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3837, column: 6)
!11644 = !DILocation(line: 3837, column: 6, scope: !11616)
!11645 = !DILocation(line: 3839, column: 9, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 3839, column: 7)
!11647 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 3837, column: 15)
!11648 = !DILocation(line: 3839, column: 8, scope: !11646)
!11649 = !DILocation(line: 3839, column: 7, scope: !11646)
!11650 = !DILocation(line: 3839, column: 14, scope: !11646)
!11651 = !DILocation(line: 3839, column: 7, scope: !11647)
!11652 = !DILocation(line: 3839, column: 24, scope: !11646)
!11653 = !DILocation(line: 3839, column: 29, scope: !11646)
!11654 = !DILocation(line: 3839, column: 22, scope: !11646)
!11655 = !DILocation(line: 3840, column: 8, scope: !11646)
!11656 = !DILocation(line: 3842, column: 8, scope: !11647)
!11657 = !DILocation(line: 3842, column: 7, scope: !11647)
!11658 = !DILocation(line: 3842, column: 5, scope: !11647)
!11659 = !DILocation(line: 3845, column: 12, scope: !11647)
!11660 = !DILocation(line: 3845, column: 11, scope: !11647)
!11661 = !DILocation(line: 3845, column: 9, scope: !11647)
!11662 = !DILocation(line: 3847, column: 7, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 3847, column: 7)
!11664 = !DILocation(line: 3847, column: 13, scope: !11663)
!11665 = !DILocation(line: 3847, column: 7, scope: !11647)
!11666 = !DILocation(line: 3848, column: 10, scope: !11663)
!11667 = !DILocation(line: 3848, column: 4, scope: !11663)
!11668 = !DILocation(line: 3850, column: 7, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 3850, column: 7)
!11670 = !DILocation(line: 3850, column: 13, scope: !11669)
!11671 = !DILocation(line: 3850, column: 7, scope: !11647)
!11672 = !DILocation(line: 3851, column: 4, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 3850, column: 19)
!11674 = !DILocation(line: 3851, column: 12, scope: !11673)
!11675 = !DILocation(line: 3851, column: 11, scope: !11673)
!11676 = !DILocation(line: 3851, column: 14, scope: !11673)
!11677 = !DILocation(line: 3851, column: 19, scope: !11673)
!11678 = !DILocation(line: 3851, column: 18, scope: !11673)
!11679 = !DILocation(line: 3851, column: 21, scope: !11673)
!11680 = !DILocation(line: 0, scope: !11673)
!11681 = !DILocation(line: 3852, column: 8, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11673, file: !3, line: 3851, column: 30)
!11683 = !DILocation(line: 3853, column: 6, scope: !11682)
!11684 = distinct !{!11684, !11672, !11685}
!11685 = !DILocation(line: 3854, column: 4, scope: !11673)
!11686 = !DILocation(line: 3855, column: 3, scope: !11673)
!11687 = !DILocation(line: 3857, column: 11, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11669, file: !3, line: 3856, column: 8)
!11689 = !DILocation(line: 3859, column: 7, scope: !11688)
!11690 = !DILocation(line: 3860, column: 5, scope: !11688)
!11691 = !DILocation(line: 3861, column: 4, scope: !11688)
!11692 = !DILocation(line: 3861, column: 12, scope: !11688)
!11693 = !DILocation(line: 3861, column: 11, scope: !11688)
!11694 = !DILocation(line: 3861, column: 14, scope: !11688)
!11695 = !DILocation(line: 3861, column: 19, scope: !11688)
!11696 = !DILocation(line: 3861, column: 18, scope: !11688)
!11697 = !DILocation(line: 3861, column: 24, scope: !11688)
!11698 = !DILocation(line: 3861, column: 21, scope: !11688)
!11699 = !DILocation(line: 3861, column: 30, scope: !11688)
!11700 = !DILocation(line: 3861, column: 33, scope: !11688)
!11701 = !DILocation(line: 0, scope: !11688)
!11702 = !DILocation(line: 3862, column: 16, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 3861, column: 42)
!11704 = !DILocation(line: 3862, column: 15, scope: !11703)
!11705 = !DILocation(line: 3862, column: 18, scope: !11703)
!11706 = !DILocation(line: 3862, column: 12, scope: !11703)
!11707 = !DILocation(line: 3863, column: 8, scope: !11703)
!11708 = !DILocation(line: 3864, column: 6, scope: !11703)
!11709 = distinct !{!11709, !11691, !11710}
!11710 = !DILocation(line: 3865, column: 4, scope: !11688)
!11711 = !DILocation(line: 3868, column: 7, scope: !11688)
!11712 = !DILocation(line: 3869, column: 5, scope: !11688)
!11713 = !DILocation(line: 3872, column: 8, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 3872, column: 7)
!11715 = !DILocation(line: 3872, column: 7, scope: !11714)
!11716 = !DILocation(line: 3872, column: 10, scope: !11714)
!11717 = !DILocation(line: 3872, column: 7, scope: !11647)
!11718 = !DILocation(line: 3872, column: 18, scope: !11714)
!11719 = !DILocation(line: 3873, column: 2, scope: !11647)
!11720 = !DILocation(line: 3876, column: 8, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 3874, column: 7)
!11722 = !DILocation(line: 3876, column: 7, scope: !11721)
!11723 = !DILocation(line: 3876, column: 5, scope: !11721)
!11724 = !DILocation(line: 3878, column: 3, scope: !11721)
!11725 = !DILocation(line: 3878, column: 11, scope: !11721)
!11726 = !DILocation(line: 3878, column: 10, scope: !11721)
!11727 = !DILocation(line: 3878, column: 13, scope: !11721)
!11728 = !DILocation(line: 3878, column: 17, scope: !11721)
!11729 = !DILocation(line: 3878, column: 16, scope: !11721)
!11730 = !DILocation(line: 3878, column: 19, scope: !11721)
!11731 = !DILocation(line: 3878, column: 26, scope: !11721)
!11732 = !DILocation(line: 3878, column: 30, scope: !11721)
!11733 = !DILocation(line: 3878, column: 29, scope: !11721)
!11734 = !DILocation(line: 3878, column: 32, scope: !11721)
!11735 = !DILocation(line: 0, scope: !11721)
!11736 = !DILocation(line: 3879, column: 7, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 3878, column: 40)
!11738 = !DILocation(line: 3880, column: 5, scope: !11737)
!11739 = distinct !{!11739, !11724, !11740}
!11740 = !DILocation(line: 3881, column: 3, scope: !11721)
!11741 = !DILocation(line: 3885, column: 6, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3885, column: 6)
!11743 = !DILocation(line: 3885, column: 10, scope: !11742)
!11744 = !DILocation(line: 3885, column: 6, scope: !11616)
!11745 = !DILocation(line: 3886, column: 3, scope: !11742)
!11746 = !DILocation(line: 3889, column: 6, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3889, column: 6)
!11748 = !DILocation(line: 3889, column: 10, scope: !11747)
!11749 = !DILocation(line: 3889, column: 16, scope: !11747)
!11750 = !DILocation(line: 3889, column: 14, scope: !11747)
!11751 = !DILocation(line: 3889, column: 6, scope: !11616)
!11752 = !DILocation(line: 3890, column: 9, scope: !11747)
!11753 = !DILocation(line: 3890, column: 7, scope: !11747)
!11754 = !DILocation(line: 3890, column: 3, scope: !11747)
!11755 = !DILocation(line: 3892, column: 9, scope: !11747)
!11756 = !DILocation(line: 3892, column: 37, scope: !11747)
!11757 = !DILocation(line: 3892, column: 41, scope: !11747)
!11758 = !DILocation(line: 3892, column: 36, scope: !11747)
!11759 = !DILocation(line: 3892, column: 34, scope: !11747)
!11760 = !DILocation(line: 3892, column: 7, scope: !11747)
!11761 = !DILocation(line: 3895, column: 6, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3895, column: 6)
!11763 = !DILocation(line: 3895, column: 6, scope: !11616)
!11764 = !DILocation(line: 3896, column: 13, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 3896, column: 3)
!11766 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 3895, column: 15)
!11767 = !DILocation(line: 3896, column: 12, scope: !11765)
!11768 = !DILocation(line: 3896, column: 10, scope: !11765)
!11769 = !DILocation(line: 3896, column: 21, scope: !11765)
!11770 = !DILocation(line: 3896, column: 28, scope: !11765)
!11771 = !DILocation(line: 3896, column: 8, scope: !11765)
!11772 = !DILocation(line: 3896, column: 33, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11765, file: !3, line: 3896, column: 3)
!11774 = !DILocation(line: 3896, column: 37, scope: !11773)
!11775 = !DILocation(line: 3896, column: 35, scope: !11773)
!11776 = !DILocation(line: 3896, column: 3, scope: !11765)
!11777 = !DILocation(line: 3897, column: 9, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 3897, column: 8)
!11779 = distinct !DILexicalBlock(scope: !11773, file: !3, line: 3896, column: 52)
!11780 = !DILocation(line: 3897, column: 8, scope: !11778)
!11781 = !DILocation(line: 3897, column: 11, scope: !11778)
!11782 = !DILocation(line: 3897, column: 19, scope: !11778)
!11783 = !DILocation(line: 3897, column: 24, scope: !11778)
!11784 = !DILocation(line: 3897, column: 26, scope: !11778)
!11785 = !DILocation(line: 3897, column: 22, scope: !11778)
!11786 = !DILocation(line: 3897, column: 34, scope: !11778)
!11787 = !DILocation(line: 3897, column: 31, scope: !11778)
!11788 = !DILocation(line: 3897, column: 8, scope: !11779)
!11789 = !DILocation(line: 3897, column: 42, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11778, file: !3, line: 3897, column: 41)
!11791 = !DILocation(line: 3898, column: 21, scope: !11778)
!11792 = !DILocation(line: 3898, column: 20, scope: !11778)
!11793 = !DILocation(line: 3898, column: 9, scope: !11778)
!11794 = !DILocation(line: 3898, column: 14, scope: !11778)
!11795 = !DILocation(line: 3898, column: 18, scope: !11778)
!11796 = !DILocation(line: 3899, column: 3, scope: !11779)
!11797 = !DILocation(line: 3896, column: 43, scope: !11773)
!11798 = !DILocation(line: 3896, column: 48, scope: !11773)
!11799 = !DILocation(line: 3896, column: 3, scope: !11773)
!11800 = distinct !{!11800, !11776, !11801}
!11801 = !DILocation(line: 3899, column: 3, scope: !11765)
!11802 = !DILocation(line: 3901, column: 3, scope: !11766)
!11803 = !DILocation(line: 3901, column: 7, scope: !11766)
!11804 = !DILocation(line: 3901, column: 10, scope: !11766)
!11805 = !DILocation(line: 3902, column: 2, scope: !11766)
!11806 = !DILocation(line: 3904, column: 10, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11762, file: !3, line: 3903, column: 7)
!11808 = !DILocation(line: 3904, column: 16, scope: !11807)
!11809 = !DILocation(line: 3904, column: 15, scope: !11807)
!11810 = !DILocation(line: 3904, column: 37, scope: !11807)
!11811 = !DILocation(line: 3904, column: 35, scope: !11807)
!11812 = !DILocation(line: 3904, column: 3, scope: !11807)
!11813 = !DILocation(line: 3905, column: 3, scope: !11807)
!11814 = !DILocation(line: 3905, column: 7, scope: !11807)
!11815 = !DILocation(line: 3905, column: 12, scope: !11807)
!11816 = !DILocation(line: 3909, column: 7, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3909, column: 6)
!11818 = !DILocation(line: 3909, column: 6, scope: !11817)
!11819 = !DILocation(line: 3909, column: 9, scope: !11817)
!11820 = !DILocation(line: 3909, column: 6, scope: !11616)
!11821 = !DILocation(line: 3909, column: 18, scope: !11817)
!11822 = !DILocation(line: 3909, column: 17, scope: !11817)
!11823 = !DILocation(line: 3910, column: 7, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3910, column: 6)
!11825 = !DILocation(line: 3910, column: 6, scope: !11824)
!11826 = !DILocation(line: 3910, column: 9, scope: !11824)
!11827 = !DILocation(line: 3910, column: 6, scope: !11616)
!11828 = !DILocation(line: 3910, column: 18, scope: !11824)
!11829 = !DILocation(line: 3910, column: 17, scope: !11824)
!11830 = !DILocation(line: 3911, column: 10, scope: !11616)
!11831 = !DILocation(line: 3911, column: 3, scope: !11616)
!11832 = !DILocation(line: 3911, column: 8, scope: !11616)
!11833 = !DILocation(line: 3913, column: 9, scope: !11616)
!11834 = !DILocation(line: 3913, column: 2, scope: !11616)
!11835 = !DILocation(line: 3914, column: 1, scope: !11616)
!11836 = distinct !DISubprogram(name: "RNA_path_from_ID_to_struct", scope: !3, file: !3, line: 4521, type: !11837, scopeLine: 4522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{!1091, !1349}
!11839 = !DILocalVariable(name: "ptr", arg: 1, scope: !11836, file: !3, line: 4521, type: !1349)
!11840 = !DILocation(line: 4521, column: 46, scope: !11836)
!11841 = !DILocalVariable(name: "ptrpath", scope: !11836, file: !3, line: 4523, type: !1091)
!11842 = !DILocation(line: 4523, column: 8, scope: !11836)
!11843 = !DILocation(line: 4525, column: 7, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 4525, column: 6)
!11845 = !DILocation(line: 4525, column: 12, scope: !11844)
!11846 = !DILocation(line: 4525, column: 15, scope: !11844)
!11847 = !DILocation(line: 4525, column: 20, scope: !11844)
!11848 = !DILocation(line: 4525, column: 24, scope: !11844)
!11849 = !DILocation(line: 4525, column: 29, scope: !11844)
!11850 = !DILocation(line: 4525, column: 6, scope: !11836)
!11851 = !DILocation(line: 4526, column: 3, scope: !11844)
!11852 = !DILocation(line: 4528, column: 24, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11836, file: !3, line: 4528, column: 6)
!11854 = !DILocation(line: 4528, column: 29, scope: !11853)
!11855 = !DILocation(line: 4528, column: 7, scope: !11853)
!11856 = !DILocation(line: 4528, column: 6, scope: !11836)
!11857 = !DILocation(line: 4529, column: 7, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 4529, column: 7)
!11859 = distinct !DILexicalBlock(scope: !11853, file: !3, line: 4528, column: 36)
!11860 = !DILocation(line: 4529, column: 12, scope: !11858)
!11861 = !DILocation(line: 4529, column: 18, scope: !11858)
!11862 = !DILocation(line: 4529, column: 7, scope: !11859)
!11863 = !DILocation(line: 4531, column: 14, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11858, file: !3, line: 4529, column: 24)
!11865 = !DILocation(line: 4531, column: 19, scope: !11864)
!11866 = !DILocation(line: 4531, column: 25, scope: !11864)
!11867 = !DILocation(line: 4531, column: 30, scope: !11864)
!11868 = !DILocation(line: 4531, column: 12, scope: !11864)
!11869 = !DILocation(line: 4532, column: 3, scope: !11864)
!11870 = !DILocation(line: 4533, column: 12, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11858, file: !3, line: 4533, column: 12)
!11872 = !DILocation(line: 4533, column: 17, scope: !11871)
!11873 = !DILocation(line: 4533, column: 23, scope: !11871)
!11874 = !DILocation(line: 4533, column: 30, scope: !11871)
!11875 = !DILocation(line: 4533, column: 50, scope: !11871)
!11876 = !DILocation(line: 4533, column: 55, scope: !11871)
!11877 = !DILocation(line: 4533, column: 61, scope: !11871)
!11878 = !DILocation(line: 4533, column: 33, scope: !11871)
!11879 = !DILocation(line: 4533, column: 12, scope: !11858)
!11880 = !DILocalVariable(name: "parentptr", scope: !11881, file: !3, line: 4534, type: !1350)
!11881 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 4533, column: 70)
!11882 = !DILocation(line: 4534, column: 15, scope: !11881)
!11883 = !DILocalVariable(name: "userprop", scope: !11881, file: !3, line: 4535, type: !1021)
!11884 = !DILocation(line: 4535, column: 17, scope: !11881)
!11885 = !DILocation(line: 4540, column: 26, scope: !11881)
!11886 = !DILocation(line: 4540, column: 31, scope: !11881)
!11887 = !DILocation(line: 4540, column: 34, scope: !11881)
!11888 = !DILocation(line: 4540, column: 4, scope: !11881)
!11889 = !DILocation(line: 4541, column: 50, scope: !11881)
!11890 = !DILocation(line: 4541, column: 55, scope: !11881)
!11891 = !DILocation(line: 4541, column: 15, scope: !11881)
!11892 = !DILocation(line: 4541, column: 13, scope: !11881)
!11893 = !DILocation(line: 4543, column: 8, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11881, file: !3, line: 4543, column: 8)
!11895 = !DILocation(line: 4543, column: 8, scope: !11881)
!11896 = !DILocation(line: 4544, column: 50, scope: !11894)
!11897 = !DILocation(line: 4544, column: 26, scope: !11894)
!11898 = !DILocation(line: 4544, column: 15, scope: !11894)
!11899 = !DILocation(line: 4544, column: 13, scope: !11894)
!11900 = !DILocation(line: 4544, column: 5, scope: !11894)
!11901 = !DILocation(line: 4546, column: 5, scope: !11894)
!11902 = !DILocation(line: 4547, column: 3, scope: !11881)
!11903 = !DILocation(line: 4548, column: 28, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 4548, column: 12)
!11905 = !DILocation(line: 4548, column: 33, scope: !11904)
!11906 = !DILocation(line: 4548, column: 12, scope: !11904)
!11907 = !DILocation(line: 4548, column: 12, scope: !11871)
!11908 = !DILocation(line: 4550, column: 40, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 4548, column: 60)
!11910 = !DILocation(line: 4550, column: 11, scope: !11909)
!11911 = !DILocation(line: 4550, column: 4, scope: !11909)
!11912 = !DILocation(line: 4553, column: 4, scope: !11904)
!11913 = !DILocation(line: 4554, column: 2, scope: !11859)
!11914 = !DILocation(line: 4556, column: 9, scope: !11836)
!11915 = !DILocation(line: 4556, column: 2, scope: !11836)
!11916 = !DILocation(line: 4557, column: 1, scope: !11836)
!11917 = distinct !DISubprogram(name: "RNA_struct_find_nested", scope: !3, file: !3, line: 645, type: !11918, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!1021, !1349, !2639}
!11920 = !DILocalVariable(name: "ptr", arg: 1, scope: !11917, file: !3, line: 645, type: !1349)
!11921 = !DILocation(line: 645, column: 56, scope: !11917)
!11922 = !DILocalVariable(name: "srna", arg: 2, scope: !11917, file: !3, line: 645, type: !2639)
!11923 = !DILocation(line: 645, column: 72, scope: !11917)
!11924 = !DILocalVariable(name: "prop", scope: !11917, file: !3, line: 647, type: !1021)
!11925 = !DILocation(line: 647, column: 15, scope: !11917)
!11926 = !DILocalVariable(name: "rna_macro_iter", scope: !11927, file: !3, line: 649, type: !3774)
!11927 = distinct !DILexicalBlock(scope: !11917, file: !3, line: 649, column: 2)
!11928 = !DILocation(line: 649, column: 2, scope: !11927)
!11929 = !DILocation(line: 649, column: 2, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11927, file: !3, line: 649, column: 2)
!11931 = !DILocation(line: 649, column: 2, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 649, column: 2)
!11933 = !DILocalVariable(name: "iprop", scope: !11934, file: !3, line: 649, type: !1021)
!11934 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 649, column: 2)
!11935 = !DILocation(line: 649, column: 2, scope: !11934)
!11936 = !DILocation(line: 652, column: 33, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !3, line: 652, column: 7)
!11938 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 650, column: 2)
!11939 = !DILocation(line: 652, column: 38, scope: !11937)
!11940 = !DILocation(line: 652, column: 7, scope: !11937)
!11941 = !DILocation(line: 652, column: 48, scope: !11937)
!11942 = !DILocation(line: 652, column: 45, scope: !11937)
!11943 = !DILocation(line: 652, column: 7, scope: !11938)
!11944 = !DILocation(line: 653, column: 11, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11937, file: !3, line: 652, column: 54)
!11946 = !DILocation(line: 653, column: 9, scope: !11945)
!11947 = !DILocation(line: 654, column: 4, scope: !11945)
!11948 = !DILocation(line: 657, column: 2, scope: !11934)
!11949 = distinct !{!11949, !11929, !11950}
!11950 = !DILocation(line: 657, column: 2, scope: !11930)
!11951 = !DILocation(line: 657, column: 2, scope: !11927)
!11952 = !DILocation(line: 659, column: 9, scope: !11917)
!11953 = !DILocation(line: 659, column: 2, scope: !11917)
!11954 = distinct !DISubprogram(name: "rna_path_from_ID_to_idpgroup", scope: !3, file: !3, line: 4498, type: !11837, scopeLine: 4499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11955 = !DILocalVariable(name: "ptr", arg: 1, scope: !11954, file: !3, line: 4498, type: !1349)
!11956 = !DILocation(line: 4498, column: 55, scope: !11954)
!11957 = !DILocalVariable(name: "id_ptr", scope: !11954, file: !3, line: 4500, type: !1350)
!11958 = !DILocation(line: 4500, column: 13, scope: !11954)
!11959 = !DILocalVariable(name: "haystack", scope: !11954, file: !3, line: 4501, type: !987)
!11960 = !DILocation(line: 4501, column: 14, scope: !11954)
!11961 = !DILocalVariable(name: "needle", scope: !11954, file: !3, line: 4502, type: !987)
!11962 = !DILocation(line: 4502, column: 14, scope: !11954)
!11963 = !DILocation(line: 4509, column: 24, scope: !11954)
!11964 = !DILocation(line: 4509, column: 29, scope: !11954)
!11965 = !DILocation(line: 4509, column: 32, scope: !11954)
!11966 = !DILocation(line: 4509, column: 2, scope: !11954)
!11967 = !DILocation(line: 4511, column: 13, scope: !11954)
!11968 = !DILocation(line: 4511, column: 11, scope: !11954)
!11969 = !DILocation(line: 4512, column: 6, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 4512, column: 6)
!11971 = !DILocation(line: 4512, column: 6, scope: !11954)
!11972 = !DILocation(line: 4513, column: 12, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 4512, column: 16)
!11974 = !DILocation(line: 4513, column: 17, scope: !11973)
!11975 = !DILocation(line: 4513, column: 10, scope: !11973)
!11976 = !DILocation(line: 4514, column: 32, scope: !11973)
!11977 = !DILocation(line: 4514, column: 42, scope: !11973)
!11978 = !DILocation(line: 4514, column: 10, scope: !11973)
!11979 = !DILocation(line: 4514, column: 3, scope: !11973)
!11980 = !DILocation(line: 4517, column: 3, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 4516, column: 7)
!11982 = !DILocation(line: 4519, column: 1, scope: !11954)
!11983 = distinct !DISubprogram(name: "RNA_path_resolve_from_type_to_property", scope: !3, file: !3, line: 4604, type: !11984, scopeLine: 4607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!11984 = !DISubroutineType(types: !11985)
!11985 = !{!1091, !1349, !1021, !3496}
!11986 = !DILocalVariable(name: "ptr", arg: 1, scope: !11983, file: !3, line: 4605, type: !1349)
!11987 = !DILocation(line: 4605, column: 21, scope: !11983)
!11988 = !DILocalVariable(name: "prop", arg: 2, scope: !11983, file: !3, line: 4605, type: !1021)
!11989 = !DILocation(line: 4605, column: 39, scope: !11983)
!11990 = !DILocalVariable(name: "type", arg: 3, scope: !11983, file: !3, line: 4606, type: !3496)
!11991 = !DILocation(line: 4606, column: 26, scope: !11983)
!11992 = !DILocalVariable(name: "idptr", scope: !11983, file: !3, line: 4610, type: !1350)
!11993 = !DILocation(line: 4610, column: 13, scope: !11983)
!11994 = !DILocalVariable(name: "path_elems", scope: !11983, file: !3, line: 4611, type: !1011)
!11995 = !DILocation(line: 4611, column: 11, scope: !11983)
!11996 = !DILocalVariable(name: "path", scope: !11983, file: !3, line: 4612, type: !1091)
!11997 = !DILocation(line: 4612, column: 8, scope: !11983)
!11998 = !DILocalVariable(name: "full_path", scope: !11983, file: !3, line: 4613, type: !1091)
!11999 = !DILocation(line: 4613, column: 8, scope: !11983)
!12000 = !DILocation(line: 4613, column: 49, scope: !11983)
!12001 = !DILocation(line: 4613, column: 54, scope: !11983)
!12002 = !DILocation(line: 4613, column: 20, scope: !11983)
!12003 = !DILocation(line: 4615, column: 6, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 4615, column: 6)
!12005 = !DILocation(line: 4615, column: 16, scope: !12004)
!12006 = !DILocation(line: 4615, column: 6, scope: !11983)
!12007 = !DILocation(line: 4616, column: 3, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12004, file: !3, line: 4615, column: 25)
!12009 = !DILocation(line: 4619, column: 24, scope: !11983)
!12010 = !DILocation(line: 4619, column: 29, scope: !11983)
!12011 = !DILocation(line: 4619, column: 32, scope: !11983)
!12012 = !DILocation(line: 4619, column: 2, scope: !11983)
!12013 = !DILocation(line: 4621, column: 40, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 4621, column: 6)
!12015 = !DILocation(line: 4621, column: 6, scope: !12014)
!12016 = !DILocation(line: 4621, column: 6, scope: !11983)
!12017 = !DILocalVariable(name: "prop_elem", scope: !12018, file: !3, line: 4622, type: !11073)
!12018 = distinct !DILexicalBlock(scope: !12014, file: !3, line: 4621, column: 65)
!12019 = !DILocation(line: 4622, column: 20, scope: !12018)
!12020 = !DILocation(line: 4624, column: 31, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 4624, column: 3)
!12022 = !DILocation(line: 4624, column: 20, scope: !12021)
!12023 = !DILocation(line: 4624, column: 18, scope: !12021)
!12024 = !DILocation(line: 4624, column: 8, scope: !12021)
!12025 = !DILocation(line: 4624, column: 37, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 4624, column: 3)
!12027 = !DILocation(line: 4624, column: 3, scope: !12021)
!12028 = !DILocation(line: 4625, column: 24, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 4625, column: 8)
!12030 = distinct !DILexicalBlock(scope: !12026, file: !3, line: 4624, column: 77)
!12031 = !DILocation(line: 4625, column: 35, scope: !12029)
!12032 = !DILocation(line: 4625, column: 39, scope: !12029)
!12033 = !DILocation(line: 4625, column: 45, scope: !12029)
!12034 = !DILocation(line: 4625, column: 8, scope: !12029)
!12035 = !DILocation(line: 4625, column: 8, scope: !12030)
!12036 = !DILocalVariable(name: "ref_path", scope: !12037, file: !3, line: 4626, type: !1091)
!12037 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 4625, column: 52)
!12038 = !DILocation(line: 4626, column: 11, scope: !12037)
!12039 = !DILocation(line: 4626, column: 50, scope: !12037)
!12040 = !DILocation(line: 4626, column: 61, scope: !12037)
!12041 = !DILocation(line: 4626, column: 22, scope: !12037)
!12042 = !DILocation(line: 4627, column: 9, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 4627, column: 9)
!12044 = !DILocation(line: 4627, column: 9, scope: !12037)
!12045 = !DILocation(line: 4628, column: 24, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 4627, column: 19)
!12047 = !DILocation(line: 4628, column: 43, scope: !12046)
!12048 = !DILocation(line: 4628, column: 36, scope: !12046)
!12049 = !DILocation(line: 4628, column: 34, scope: !12046)
!12050 = !DILocation(line: 4628, column: 53, scope: !12046)
!12051 = !DILocation(line: 4628, column: 13, scope: !12046)
!12052 = !DILocation(line: 4628, column: 11, scope: !12046)
!12053 = !DILocation(line: 4629, column: 6, scope: !12046)
!12054 = !DILocation(line: 4629, column: 16, scope: !12046)
!12055 = !DILocation(line: 4630, column: 5, scope: !12046)
!12056 = !DILocation(line: 4631, column: 5, scope: !12037)
!12057 = !DILocation(line: 4633, column: 3, scope: !12030)
!12058 = !DILocation(line: 4624, column: 60, scope: !12026)
!12059 = !DILocation(line: 4624, column: 71, scope: !12026)
!12060 = !DILocation(line: 4624, column: 58, scope: !12026)
!12061 = !DILocation(line: 4624, column: 3, scope: !12026)
!12062 = distinct !{!12062, !12027, !12063}
!12063 = !DILocation(line: 4633, column: 3, scope: !12021)
!12064 = !DILocation(line: 4635, column: 3, scope: !12018)
!12065 = !DILocation(line: 4636, column: 2, scope: !12018)
!12066 = !DILocation(line: 4638, column: 2, scope: !11983)
!12067 = !DILocation(line: 4638, column: 12, scope: !11983)
!12068 = !DILocation(line: 4639, column: 9, scope: !11983)
!12069 = !DILocation(line: 4639, column: 2, scope: !11983)
!12070 = !DILocation(line: 4640, column: 1, scope: !11983)
!12071 = distinct !DISubprogram(name: "RNA_path_full_ID_py", scope: !3, file: !3, line: 4646, type: !12072, scopeLine: 4647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12072 = !DISubroutineType(types: !12073)
!12073 = !{!1091, !1145}
!12074 = !DILocalVariable(name: "id", arg: 1, scope: !12071, file: !3, line: 4646, type: !1145)
!12075 = !DILocation(line: 4646, column: 31, scope: !12071)
!12076 = !DILocalVariable(name: "id_esc", scope: !12071, file: !3, line: 4648, type: !2118)
!12077 = !DILocation(line: 4648, column: 7, scope: !12071)
!12078 = !DILocation(line: 4650, column: 16, scope: !12071)
!12079 = !DILocation(line: 4650, column: 24, scope: !12071)
!12080 = !DILocation(line: 4650, column: 28, scope: !12071)
!12081 = !DILocation(line: 4650, column: 33, scope: !12071)
!12082 = !DILocation(line: 4650, column: 2, scope: !12071)
!12083 = !DILocation(line: 4652, column: 71, scope: !12071)
!12084 = !DILocation(line: 4652, column: 45, scope: !12071)
!12085 = !DILocation(line: 4652, column: 86, scope: !12071)
!12086 = !DILocation(line: 4652, column: 9, scope: !12071)
!12087 = !DILocation(line: 4652, column: 2, scope: !12071)
!12088 = distinct !DISubprogram(name: "RNA_path_full_struct_py", scope: !3, file: !3, line: 4659, type: !1089, scopeLine: 4660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12089 = !DILocalVariable(name: "ptr", arg: 1, scope: !12088, file: !3, line: 4659, type: !1047)
!12090 = !DILocation(line: 4659, column: 50, scope: !12088)
!12091 = !DILocalVariable(name: "id_path", scope: !12088, file: !3, line: 4661, type: !1091)
!12092 = !DILocation(line: 4661, column: 8, scope: !12088)
!12093 = !DILocalVariable(name: "data_path", scope: !12088, file: !3, line: 4662, type: !1091)
!12094 = !DILocation(line: 4662, column: 8, scope: !12088)
!12095 = !DILocalVariable(name: "ret", scope: !12088, file: !3, line: 4664, type: !1091)
!12096 = !DILocation(line: 4664, column: 8, scope: !12088)
!12097 = !DILocation(line: 4666, column: 7, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 4666, column: 6)
!12099 = !DILocation(line: 4666, column: 12, scope: !12098)
!12100 = !DILocation(line: 4666, column: 15, scope: !12098)
!12101 = !DILocation(line: 4666, column: 6, scope: !12088)
!12102 = !DILocation(line: 4667, column: 3, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 4666, column: 21)
!12104 = !DILocation(line: 4671, column: 32, scope: !12088)
!12105 = !DILocation(line: 4671, column: 37, scope: !12088)
!12106 = !DILocation(line: 4671, column: 40, scope: !12088)
!12107 = !DILocation(line: 4671, column: 12, scope: !12088)
!12108 = !DILocation(line: 4671, column: 10, scope: !12088)
!12109 = !DILocation(line: 4673, column: 41, scope: !12088)
!12110 = !DILocation(line: 4673, column: 14, scope: !12088)
!12111 = !DILocation(line: 4673, column: 12, scope: !12088)
!12112 = !DILocation(line: 4676, column: 30, scope: !12088)
!12113 = !DILocation(line: 4676, column: 39, scope: !12088)
!12114 = !DILocation(line: 4676, column: 8, scope: !12088)
!12115 = !DILocation(line: 4676, column: 6, scope: !12088)
!12116 = !DILocation(line: 4678, column: 6, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 4678, column: 6)
!12118 = !DILocation(line: 4678, column: 6, scope: !12088)
!12119 = !DILocation(line: 4679, column: 3, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12117, file: !3, line: 4678, column: 17)
!12121 = !DILocation(line: 4679, column: 13, scope: !12120)
!12122 = !DILocation(line: 4680, column: 2, scope: !12120)
!12123 = !DILocation(line: 4681, column: 2, scope: !12088)
!12124 = !DILocation(line: 4681, column: 12, scope: !12088)
!12125 = !DILocation(line: 4683, column: 9, scope: !12088)
!12126 = !DILocation(line: 4683, column: 2, scope: !12088)
!12127 = !DILocation(line: 4684, column: 1, scope: !12088)
!12128 = distinct !DISubprogram(name: "RNA_path_full_property_py", scope: !3, file: !3, line: 4690, type: !12129, scopeLine: 4691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12129 = !DISubroutineType(types: !12130)
!12130 = !{!1091, !1349, !1021, !48}
!12131 = !DILocalVariable(name: "ptr", arg: 1, scope: !12128, file: !3, line: 4690, type: !1349)
!12132 = !DILocation(line: 4690, column: 45, scope: !12128)
!12133 = !DILocalVariable(name: "prop", arg: 2, scope: !12128, file: !3, line: 4690, type: !1021)
!12134 = !DILocation(line: 4690, column: 63, scope: !12128)
!12135 = !DILocalVariable(name: "index", arg: 3, scope: !12128, file: !3, line: 4690, type: !48)
!12136 = !DILocation(line: 4690, column: 73, scope: !12128)
!12137 = !DILocalVariable(name: "id_path", scope: !12128, file: !3, line: 4692, type: !1091)
!12138 = !DILocation(line: 4692, column: 8, scope: !12128)
!12139 = !DILocalVariable(name: "data_path", scope: !12128, file: !3, line: 4693, type: !1091)
!12140 = !DILocation(line: 4693, column: 8, scope: !12128)
!12141 = !DILocalVariable(name: "ret", scope: !12128, file: !3, line: 4695, type: !1091)
!12142 = !DILocation(line: 4695, column: 8, scope: !12128)
!12143 = !DILocation(line: 4697, column: 7, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 4697, column: 6)
!12145 = !DILocation(line: 4697, column: 12, scope: !12144)
!12146 = !DILocation(line: 4697, column: 15, scope: !12144)
!12147 = !DILocation(line: 4697, column: 6, scope: !12128)
!12148 = !DILocation(line: 4698, column: 3, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12144, file: !3, line: 4697, column: 21)
!12150 = !DILocation(line: 4702, column: 32, scope: !12128)
!12151 = !DILocation(line: 4702, column: 37, scope: !12128)
!12152 = !DILocation(line: 4702, column: 40, scope: !12128)
!12153 = !DILocation(line: 4702, column: 12, scope: !12128)
!12154 = !DILocation(line: 4702, column: 10, scope: !12128)
!12155 = !DILocation(line: 4704, column: 43, scope: !12128)
!12156 = !DILocation(line: 4704, column: 48, scope: !12128)
!12157 = !DILocation(line: 4704, column: 14, scope: !12128)
!12158 = !DILocation(line: 4704, column: 12, scope: !12128)
!12159 = !DILocation(line: 4706, column: 7, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 4706, column: 6)
!12161 = !DILocation(line: 4706, column: 13, scope: !12160)
!12162 = !DILocation(line: 4706, column: 20, scope: !12160)
!12163 = !DILocation(line: 4706, column: 49, scope: !12160)
!12164 = !DILocation(line: 4706, column: 24, scope: !12160)
!12165 = !DILocation(line: 4706, column: 55, scope: !12160)
!12166 = !DILocation(line: 4706, column: 6, scope: !12128)
!12167 = !DILocation(line: 4708, column: 22, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 4706, column: 66)
!12169 = !DILocation(line: 4708, column: 31, scope: !12168)
!12170 = !DILocation(line: 4707, column: 9, scope: !12168)
!12171 = !DILocation(line: 4707, column: 7, scope: !12168)
!12172 = !DILocation(line: 4709, column: 2, scope: !12168)
!12173 = !DILocation(line: 4712, column: 22, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 4710, column: 7)
!12175 = !DILocation(line: 4712, column: 31, scope: !12174)
!12176 = !DILocation(line: 4712, column: 42, scope: !12174)
!12177 = !DILocation(line: 4711, column: 9, scope: !12174)
!12178 = !DILocation(line: 4711, column: 7, scope: !12174)
!12179 = !DILocation(line: 4714, column: 2, scope: !12128)
!12180 = !DILocation(line: 4714, column: 12, scope: !12128)
!12181 = !DILocation(line: 4715, column: 6, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 4715, column: 6)
!12183 = !DILocation(line: 4715, column: 6, scope: !12128)
!12184 = !DILocation(line: 4716, column: 3, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 4715, column: 17)
!12186 = !DILocation(line: 4716, column: 13, scope: !12185)
!12187 = !DILocation(line: 4717, column: 2, scope: !12185)
!12188 = !DILocation(line: 4719, column: 9, scope: !12128)
!12189 = !DILocation(line: 4719, column: 2, scope: !12128)
!12190 = !DILocation(line: 4720, column: 1, scope: !12128)
!12191 = distinct !DISubprogram(name: "RNA_path_struct_property_py", scope: !3, file: !3, line: 4726, type: !12129, scopeLine: 4727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12192 = !DILocalVariable(name: "ptr", arg: 1, scope: !12191, file: !3, line: 4726, type: !1349)
!12193 = !DILocation(line: 4726, column: 47, scope: !12191)
!12194 = !DILocalVariable(name: "prop", arg: 2, scope: !12191, file: !3, line: 4726, type: !1021)
!12195 = !DILocation(line: 4726, column: 65, scope: !12191)
!12196 = !DILocalVariable(name: "index", arg: 3, scope: !12191, file: !3, line: 4726, type: !48)
!12197 = !DILocation(line: 4726, column: 75, scope: !12191)
!12198 = !DILocalVariable(name: "data_path", scope: !12191, file: !3, line: 4728, type: !1091)
!12199 = !DILocation(line: 4728, column: 8, scope: !12191)
!12200 = !DILocalVariable(name: "ret", scope: !12191, file: !3, line: 4730, type: !1091)
!12201 = !DILocation(line: 4730, column: 8, scope: !12191)
!12202 = !DILocation(line: 4732, column: 7, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 4732, column: 6)
!12204 = !DILocation(line: 4732, column: 12, scope: !12203)
!12205 = !DILocation(line: 4732, column: 15, scope: !12203)
!12206 = !DILocation(line: 4732, column: 6, scope: !12191)
!12207 = !DILocation(line: 4733, column: 3, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 4732, column: 21)
!12209 = !DILocation(line: 4736, column: 43, scope: !12191)
!12210 = !DILocation(line: 4736, column: 48, scope: !12191)
!12211 = !DILocation(line: 4736, column: 14, scope: !12191)
!12212 = !DILocation(line: 4736, column: 12, scope: !12191)
!12213 = !DILocation(line: 4738, column: 6, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 4738, column: 6)
!12215 = !DILocation(line: 4738, column: 16, scope: !12214)
!12216 = !DILocation(line: 4738, column: 6, scope: !12191)
!12217 = !DILocation(line: 4741, column: 25, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12219, file: !3, line: 4741, column: 7)
!12219 = distinct !DILexicalBlock(scope: !12214, file: !3, line: 4738, column: 25)
!12220 = !DILocation(line: 4741, column: 30, scope: !12218)
!12221 = !DILocation(line: 4741, column: 8, scope: !12218)
!12222 = !DILocation(line: 4741, column: 7, scope: !12219)
!12223 = !DILocation(line: 4742, column: 33, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !3, line: 4742, column: 8)
!12225 = distinct !DILexicalBlock(scope: !12218, file: !3, line: 4741, column: 37)
!12226 = !DILocation(line: 4742, column: 62, scope: !12224)
!12227 = !DILocation(line: 4742, column: 38, scope: !12224)
!12228 = !DILocation(line: 4742, column: 8, scope: !12224)
!12229 = !DILocation(line: 4742, column: 72, scope: !12224)
!12230 = !DILocation(line: 4742, column: 69, scope: !12224)
!12231 = !DILocation(line: 4742, column: 8, scope: !12225)
!12232 = !DILocation(line: 4743, column: 52, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12224, file: !3, line: 4742, column: 78)
!12234 = !DILocation(line: 4743, column: 28, scope: !12233)
!12235 = !DILocation(line: 4743, column: 17, scope: !12233)
!12236 = !DILocation(line: 4743, column: 15, scope: !12233)
!12237 = !DILocation(line: 4744, column: 4, scope: !12233)
!12238 = !DILocation(line: 4745, column: 3, scope: !12225)
!12239 = !DILocation(line: 4746, column: 2, scope: !12219)
!12240 = !DILocation(line: 4748, column: 7, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 4748, column: 6)
!12242 = !DILocation(line: 4748, column: 13, scope: !12241)
!12243 = !DILocation(line: 4748, column: 20, scope: !12241)
!12244 = !DILocation(line: 4748, column: 49, scope: !12241)
!12245 = !DILocation(line: 4748, column: 24, scope: !12241)
!12246 = !DILocation(line: 4748, column: 55, scope: !12241)
!12247 = !DILocation(line: 4748, column: 6, scope: !12191)
!12248 = !DILocation(line: 4750, column: 22, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 4748, column: 66)
!12250 = !DILocation(line: 4749, column: 9, scope: !12249)
!12251 = !DILocation(line: 4749, column: 7, scope: !12249)
!12252 = !DILocation(line: 4751, column: 2, scope: !12249)
!12253 = !DILocation(line: 4754, column: 22, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 4752, column: 7)
!12255 = !DILocation(line: 4754, column: 33, scope: !12254)
!12256 = !DILocation(line: 4753, column: 9, scope: !12254)
!12257 = !DILocation(line: 4753, column: 7, scope: !12254)
!12258 = !DILocation(line: 4757, column: 6, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 4757, column: 6)
!12260 = !DILocation(line: 4757, column: 6, scope: !12191)
!12261 = !DILocation(line: 4758, column: 3, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12259, file: !3, line: 4757, column: 17)
!12263 = !DILocation(line: 4758, column: 13, scope: !12262)
!12264 = !DILocation(line: 4759, column: 2, scope: !12262)
!12265 = !DILocation(line: 4761, column: 9, scope: !12191)
!12266 = !DILocation(line: 4761, column: 2, scope: !12191)
!12267 = !DILocation(line: 4762, column: 1, scope: !12191)
!12268 = distinct !DISubprogram(name: "RNA_path_property_py", scope: !3, file: !3, line: 4768, type: !12129, scopeLine: 4769, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12269 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !12268, file: !3, line: 4768, type: !1349)
!12270 = !DILocation(line: 4768, column: 40, scope: !12268)
!12271 = !DILocalVariable(name: "prop", arg: 2, scope: !12268, file: !3, line: 4768, type: !1021)
!12272 = !DILocation(line: 4768, column: 66, scope: !12268)
!12273 = !DILocalVariable(name: "index", arg: 3, scope: !12268, file: !3, line: 4768, type: !48)
!12274 = !DILocation(line: 4768, column: 76, scope: !12268)
!12275 = !DILocalVariable(name: "ret", scope: !12268, file: !3, line: 4770, type: !1091)
!12276 = !DILocation(line: 4770, column: 8, scope: !12268)
!12277 = !DILocation(line: 4772, column: 7, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12268, file: !3, line: 4772, column: 6)
!12279 = !DILocation(line: 4772, column: 13, scope: !12278)
!12280 = !DILocation(line: 4772, column: 20, scope: !12278)
!12281 = !DILocation(line: 4772, column: 49, scope: !12278)
!12282 = !DILocation(line: 4772, column: 24, scope: !12278)
!12283 = !DILocation(line: 4772, column: 55, scope: !12278)
!12284 = !DILocation(line: 4772, column: 6, scope: !12268)
!12285 = !DILocation(line: 4774, column: 46, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 4772, column: 66)
!12287 = !DILocation(line: 4774, column: 22, scope: !12286)
!12288 = !DILocation(line: 4773, column: 9, scope: !12286)
!12289 = !DILocation(line: 4773, column: 7, scope: !12286)
!12290 = !DILocation(line: 4775, column: 2, scope: !12286)
!12291 = !DILocation(line: 4778, column: 46, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 4776, column: 7)
!12293 = !DILocation(line: 4778, column: 22, scope: !12292)
!12294 = !DILocation(line: 4778, column: 53, scope: !12292)
!12295 = !DILocation(line: 4777, column: 9, scope: !12292)
!12296 = !DILocation(line: 4777, column: 7, scope: !12292)
!12297 = !DILocation(line: 4781, column: 9, scope: !12268)
!12298 = !DILocation(line: 4781, column: 2, scope: !12268)
!12299 = distinct !DISubprogram(name: "RNA_boolean_get", scope: !3, file: !3, line: 4786, type: !12300, scopeLine: 4787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12300 = !DISubroutineType(types: !12301)
!12301 = !{!48, !1349, !1031}
!12302 = !DILocalVariable(name: "ptr", arg: 1, scope: !12299, file: !3, line: 4786, type: !1349)
!12303 = !DILocation(line: 4786, column: 33, scope: !12299)
!12304 = !DILocalVariable(name: "name", arg: 2, scope: !12299, file: !3, line: 4786, type: !1031)
!12305 = !DILocation(line: 4786, column: 50, scope: !12299)
!12306 = !DILocalVariable(name: "prop", scope: !12299, file: !3, line: 4788, type: !1021)
!12307 = !DILocation(line: 4788, column: 15, scope: !12299)
!12308 = !DILocation(line: 4788, column: 47, scope: !12299)
!12309 = !DILocation(line: 4788, column: 52, scope: !12299)
!12310 = !DILocation(line: 4788, column: 22, scope: !12299)
!12311 = !DILocation(line: 4790, column: 6, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 4790, column: 6)
!12313 = !DILocation(line: 4790, column: 6, scope: !12299)
!12314 = !DILocation(line: 4791, column: 35, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 4790, column: 12)
!12316 = !DILocation(line: 4791, column: 40, scope: !12315)
!12317 = !DILocation(line: 4791, column: 10, scope: !12315)
!12318 = !DILocation(line: 4791, column: 3, scope: !12315)
!12319 = !DILocation(line: 4797, column: 3, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 4793, column: 7)
!12321 = !DILocation(line: 4799, column: 1, scope: !12299)
!12322 = distinct !DISubprogram(name: "RNA_boolean_set", scope: !3, file: !3, line: 4801, type: !12323, scopeLine: 4802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12323 = !DISubroutineType(types: !12324)
!12324 = !{null, !1349, !1031, !48}
!12325 = !DILocalVariable(name: "ptr", arg: 1, scope: !12322, file: !3, line: 4801, type: !1349)
!12326 = !DILocation(line: 4801, column: 34, scope: !12322)
!12327 = !DILocalVariable(name: "name", arg: 2, scope: !12322, file: !3, line: 4801, type: !1031)
!12328 = !DILocation(line: 4801, column: 51, scope: !12322)
!12329 = !DILocalVariable(name: "value", arg: 3, scope: !12322, file: !3, line: 4801, type: !48)
!12330 = !DILocation(line: 4801, column: 61, scope: !12322)
!12331 = !DILocalVariable(name: "prop", scope: !12322, file: !3, line: 4803, type: !1021)
!12332 = !DILocation(line: 4803, column: 15, scope: !12322)
!12333 = !DILocation(line: 4803, column: 47, scope: !12322)
!12334 = !DILocation(line: 4803, column: 52, scope: !12322)
!12335 = !DILocation(line: 4803, column: 22, scope: !12322)
!12336 = !DILocation(line: 4805, column: 6, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 4805, column: 6)
!12338 = !DILocation(line: 4805, column: 6, scope: !12322)
!12339 = !DILocation(line: 4806, column: 28, scope: !12337)
!12340 = !DILocation(line: 4806, column: 33, scope: !12337)
!12341 = !DILocation(line: 4806, column: 39, scope: !12337)
!12342 = !DILocation(line: 4806, column: 3, scope: !12337)
!12343 = !DILocation(line: 4811, column: 1, scope: !12322)
!12344 = distinct !DISubprogram(name: "RNA_boolean_get_array", scope: !3, file: !3, line: 4813, type: !12345, scopeLine: 4814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12345 = !DISubroutineType(types: !12346)
!12346 = !{null, !1349, !1031, !1330}
!12347 = !DILocalVariable(name: "ptr", arg: 1, scope: !12344, file: !3, line: 4813, type: !1349)
!12348 = !DILocation(line: 4813, column: 40, scope: !12344)
!12349 = !DILocalVariable(name: "name", arg: 2, scope: !12344, file: !3, line: 4813, type: !1031)
!12350 = !DILocation(line: 4813, column: 57, scope: !12344)
!12351 = !DILocalVariable(name: "values", arg: 3, scope: !12344, file: !3, line: 4813, type: !1330)
!12352 = !DILocation(line: 4813, column: 68, scope: !12344)
!12353 = !DILocalVariable(name: "prop", scope: !12344, file: !3, line: 4815, type: !1021)
!12354 = !DILocation(line: 4815, column: 15, scope: !12344)
!12355 = !DILocation(line: 4815, column: 47, scope: !12344)
!12356 = !DILocation(line: 4815, column: 52, scope: !12344)
!12357 = !DILocation(line: 4815, column: 22, scope: !12344)
!12358 = !DILocation(line: 4817, column: 6, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 4817, column: 6)
!12360 = !DILocation(line: 4817, column: 6, scope: !12344)
!12361 = !DILocation(line: 4818, column: 34, scope: !12359)
!12362 = !DILocation(line: 4818, column: 39, scope: !12359)
!12363 = !DILocation(line: 4818, column: 45, scope: !12359)
!12364 = !DILocation(line: 4818, column: 3, scope: !12359)
!12365 = !DILocation(line: 4823, column: 1, scope: !12344)
!12366 = distinct !DISubprogram(name: "RNA_boolean_set_array", scope: !3, file: !3, line: 4825, type: !12367, scopeLine: 4826, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12367 = !DISubroutineType(types: !12368)
!12368 = !{null, !1349, !1031, !2481}
!12369 = !DILocalVariable(name: "ptr", arg: 1, scope: !12366, file: !3, line: 4825, type: !1349)
!12370 = !DILocation(line: 4825, column: 40, scope: !12366)
!12371 = !DILocalVariable(name: "name", arg: 2, scope: !12366, file: !3, line: 4825, type: !1031)
!12372 = !DILocation(line: 4825, column: 57, scope: !12366)
!12373 = !DILocalVariable(name: "values", arg: 3, scope: !12366, file: !3, line: 4825, type: !2481)
!12374 = !DILocation(line: 4825, column: 74, scope: !12366)
!12375 = !DILocalVariable(name: "prop", scope: !12366, file: !3, line: 4827, type: !1021)
!12376 = !DILocation(line: 4827, column: 15, scope: !12366)
!12377 = !DILocation(line: 4827, column: 47, scope: !12366)
!12378 = !DILocation(line: 4827, column: 52, scope: !12366)
!12379 = !DILocation(line: 4827, column: 22, scope: !12366)
!12380 = !DILocation(line: 4829, column: 6, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 4829, column: 6)
!12382 = !DILocation(line: 4829, column: 6, scope: !12366)
!12383 = !DILocation(line: 4830, column: 34, scope: !12381)
!12384 = !DILocation(line: 4830, column: 39, scope: !12381)
!12385 = !DILocation(line: 4830, column: 45, scope: !12381)
!12386 = !DILocation(line: 4830, column: 3, scope: !12381)
!12387 = !DILocation(line: 4835, column: 1, scope: !12366)
!12388 = distinct !DISubprogram(name: "RNA_int_get", scope: !3, file: !3, line: 4837, type: !12300, scopeLine: 4838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12389 = !DILocalVariable(name: "ptr", arg: 1, scope: !12388, file: !3, line: 4837, type: !1349)
!12390 = !DILocation(line: 4837, column: 29, scope: !12388)
!12391 = !DILocalVariable(name: "name", arg: 2, scope: !12388, file: !3, line: 4837, type: !1031)
!12392 = !DILocation(line: 4837, column: 46, scope: !12388)
!12393 = !DILocalVariable(name: "prop", scope: !12388, file: !3, line: 4839, type: !1021)
!12394 = !DILocation(line: 4839, column: 15, scope: !12388)
!12395 = !DILocation(line: 4839, column: 47, scope: !12388)
!12396 = !DILocation(line: 4839, column: 52, scope: !12388)
!12397 = !DILocation(line: 4839, column: 22, scope: !12388)
!12398 = !DILocation(line: 4841, column: 6, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 4841, column: 6)
!12400 = !DILocation(line: 4841, column: 6, scope: !12388)
!12401 = !DILocation(line: 4842, column: 31, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12399, file: !3, line: 4841, column: 12)
!12403 = !DILocation(line: 4842, column: 36, scope: !12402)
!12404 = !DILocation(line: 4842, column: 10, scope: !12402)
!12405 = !DILocation(line: 4842, column: 3, scope: !12402)
!12406 = !DILocation(line: 4848, column: 3, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12399, file: !3, line: 4844, column: 7)
!12408 = !DILocation(line: 4850, column: 1, scope: !12388)
!12409 = distinct !DISubprogram(name: "RNA_int_set", scope: !3, file: !3, line: 4852, type: !12323, scopeLine: 4853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12410 = !DILocalVariable(name: "ptr", arg: 1, scope: !12409, file: !3, line: 4852, type: !1349)
!12411 = !DILocation(line: 4852, column: 30, scope: !12409)
!12412 = !DILocalVariable(name: "name", arg: 2, scope: !12409, file: !3, line: 4852, type: !1031)
!12413 = !DILocation(line: 4852, column: 47, scope: !12409)
!12414 = !DILocalVariable(name: "value", arg: 3, scope: !12409, file: !3, line: 4852, type: !48)
!12415 = !DILocation(line: 4852, column: 57, scope: !12409)
!12416 = !DILocalVariable(name: "prop", scope: !12409, file: !3, line: 4854, type: !1021)
!12417 = !DILocation(line: 4854, column: 15, scope: !12409)
!12418 = !DILocation(line: 4854, column: 47, scope: !12409)
!12419 = !DILocation(line: 4854, column: 52, scope: !12409)
!12420 = !DILocation(line: 4854, column: 22, scope: !12409)
!12421 = !DILocation(line: 4856, column: 6, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12409, file: !3, line: 4856, column: 6)
!12423 = !DILocation(line: 4856, column: 6, scope: !12409)
!12424 = !DILocation(line: 4857, column: 24, scope: !12422)
!12425 = !DILocation(line: 4857, column: 29, scope: !12422)
!12426 = !DILocation(line: 4857, column: 35, scope: !12422)
!12427 = !DILocation(line: 4857, column: 3, scope: !12422)
!12428 = !DILocation(line: 4862, column: 1, scope: !12409)
!12429 = distinct !DISubprogram(name: "RNA_int_get_array", scope: !3, file: !3, line: 4864, type: !12345, scopeLine: 4865, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12430 = !DILocalVariable(name: "ptr", arg: 1, scope: !12429, file: !3, line: 4864, type: !1349)
!12431 = !DILocation(line: 4864, column: 36, scope: !12429)
!12432 = !DILocalVariable(name: "name", arg: 2, scope: !12429, file: !3, line: 4864, type: !1031)
!12433 = !DILocation(line: 4864, column: 53, scope: !12429)
!12434 = !DILocalVariable(name: "values", arg: 3, scope: !12429, file: !3, line: 4864, type: !1330)
!12435 = !DILocation(line: 4864, column: 64, scope: !12429)
!12436 = !DILocalVariable(name: "prop", scope: !12429, file: !3, line: 4866, type: !1021)
!12437 = !DILocation(line: 4866, column: 15, scope: !12429)
!12438 = !DILocation(line: 4866, column: 47, scope: !12429)
!12439 = !DILocation(line: 4866, column: 52, scope: !12429)
!12440 = !DILocation(line: 4866, column: 22, scope: !12429)
!12441 = !DILocation(line: 4868, column: 6, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12429, file: !3, line: 4868, column: 6)
!12443 = !DILocation(line: 4868, column: 6, scope: !12429)
!12444 = !DILocation(line: 4869, column: 30, scope: !12442)
!12445 = !DILocation(line: 4869, column: 35, scope: !12442)
!12446 = !DILocation(line: 4869, column: 41, scope: !12442)
!12447 = !DILocation(line: 4869, column: 3, scope: !12442)
!12448 = !DILocation(line: 4874, column: 1, scope: !12429)
!12449 = distinct !DISubprogram(name: "RNA_int_set_array", scope: !3, file: !3, line: 4876, type: !12367, scopeLine: 4877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12450 = !DILocalVariable(name: "ptr", arg: 1, scope: !12449, file: !3, line: 4876, type: !1349)
!12451 = !DILocation(line: 4876, column: 36, scope: !12449)
!12452 = !DILocalVariable(name: "name", arg: 2, scope: !12449, file: !3, line: 4876, type: !1031)
!12453 = !DILocation(line: 4876, column: 53, scope: !12449)
!12454 = !DILocalVariable(name: "values", arg: 3, scope: !12449, file: !3, line: 4876, type: !2481)
!12455 = !DILocation(line: 4876, column: 70, scope: !12449)
!12456 = !DILocalVariable(name: "prop", scope: !12449, file: !3, line: 4878, type: !1021)
!12457 = !DILocation(line: 4878, column: 15, scope: !12449)
!12458 = !DILocation(line: 4878, column: 47, scope: !12449)
!12459 = !DILocation(line: 4878, column: 52, scope: !12449)
!12460 = !DILocation(line: 4878, column: 22, scope: !12449)
!12461 = !DILocation(line: 4880, column: 6, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12449, file: !3, line: 4880, column: 6)
!12463 = !DILocation(line: 4880, column: 6, scope: !12449)
!12464 = !DILocation(line: 4881, column: 30, scope: !12462)
!12465 = !DILocation(line: 4881, column: 35, scope: !12462)
!12466 = !DILocation(line: 4881, column: 41, scope: !12462)
!12467 = !DILocation(line: 4881, column: 3, scope: !12462)
!12468 = !DILocation(line: 4886, column: 1, scope: !12449)
!12469 = distinct !DISubprogram(name: "RNA_float_get", scope: !3, file: !3, line: 4888, type: !12470, scopeLine: 4889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12470 = !DISubroutineType(types: !12471)
!12471 = !{!1285, !1349, !1031}
!12472 = !DILocalVariable(name: "ptr", arg: 1, scope: !12469, file: !3, line: 4888, type: !1349)
!12473 = !DILocation(line: 4888, column: 33, scope: !12469)
!12474 = !DILocalVariable(name: "name", arg: 2, scope: !12469, file: !3, line: 4888, type: !1031)
!12475 = !DILocation(line: 4888, column: 50, scope: !12469)
!12476 = !DILocalVariable(name: "prop", scope: !12469, file: !3, line: 4890, type: !1021)
!12477 = !DILocation(line: 4890, column: 15, scope: !12469)
!12478 = !DILocation(line: 4890, column: 47, scope: !12469)
!12479 = !DILocation(line: 4890, column: 52, scope: !12469)
!12480 = !DILocation(line: 4890, column: 22, scope: !12469)
!12481 = !DILocation(line: 4892, column: 6, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 4892, column: 6)
!12483 = !DILocation(line: 4892, column: 6, scope: !12469)
!12484 = !DILocation(line: 4893, column: 33, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 4892, column: 12)
!12486 = !DILocation(line: 4893, column: 38, scope: !12485)
!12487 = !DILocation(line: 4893, column: 10, scope: !12485)
!12488 = !DILocation(line: 4893, column: 3, scope: !12485)
!12489 = !DILocation(line: 4899, column: 3, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 4895, column: 7)
!12491 = !DILocation(line: 4901, column: 1, scope: !12469)
!12492 = distinct !DISubprogram(name: "RNA_float_set", scope: !3, file: !3, line: 4903, type: !12493, scopeLine: 4904, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12493 = !DISubroutineType(types: !12494)
!12494 = !{null, !1349, !1031, !1285}
!12495 = !DILocalVariable(name: "ptr", arg: 1, scope: !12492, file: !3, line: 4903, type: !1349)
!12496 = !DILocation(line: 4903, column: 32, scope: !12492)
!12497 = !DILocalVariable(name: "name", arg: 2, scope: !12492, file: !3, line: 4903, type: !1031)
!12498 = !DILocation(line: 4903, column: 49, scope: !12492)
!12499 = !DILocalVariable(name: "value", arg: 3, scope: !12492, file: !3, line: 4903, type: !1285)
!12500 = !DILocation(line: 4903, column: 61, scope: !12492)
!12501 = !DILocalVariable(name: "prop", scope: !12492, file: !3, line: 4905, type: !1021)
!12502 = !DILocation(line: 4905, column: 15, scope: !12492)
!12503 = !DILocation(line: 4905, column: 47, scope: !12492)
!12504 = !DILocation(line: 4905, column: 52, scope: !12492)
!12505 = !DILocation(line: 4905, column: 22, scope: !12492)
!12506 = !DILocation(line: 4907, column: 6, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 4907, column: 6)
!12508 = !DILocation(line: 4907, column: 6, scope: !12492)
!12509 = !DILocation(line: 4908, column: 26, scope: !12507)
!12510 = !DILocation(line: 4908, column: 31, scope: !12507)
!12511 = !DILocation(line: 4908, column: 37, scope: !12507)
!12512 = !DILocation(line: 4908, column: 3, scope: !12507)
!12513 = !DILocation(line: 4913, column: 1, scope: !12492)
!12514 = distinct !DISubprogram(name: "RNA_float_get_array", scope: !3, file: !3, line: 4915, type: !12515, scopeLine: 4916, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12515 = !DISubroutineType(types: !12516)
!12516 = !{null, !1349, !1031, !2540}
!12517 = !DILocalVariable(name: "ptr", arg: 1, scope: !12514, file: !3, line: 4915, type: !1349)
!12518 = !DILocation(line: 4915, column: 38, scope: !12514)
!12519 = !DILocalVariable(name: "name", arg: 2, scope: !12514, file: !3, line: 4915, type: !1031)
!12520 = !DILocation(line: 4915, column: 55, scope: !12514)
!12521 = !DILocalVariable(name: "values", arg: 3, scope: !12514, file: !3, line: 4915, type: !2540)
!12522 = !DILocation(line: 4915, column: 68, scope: !12514)
!12523 = !DILocalVariable(name: "prop", scope: !12514, file: !3, line: 4917, type: !1021)
!12524 = !DILocation(line: 4917, column: 15, scope: !12514)
!12525 = !DILocation(line: 4917, column: 47, scope: !12514)
!12526 = !DILocation(line: 4917, column: 52, scope: !12514)
!12527 = !DILocation(line: 4917, column: 22, scope: !12514)
!12528 = !DILocation(line: 4919, column: 6, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12514, file: !3, line: 4919, column: 6)
!12530 = !DILocation(line: 4919, column: 6, scope: !12514)
!12531 = !DILocation(line: 4920, column: 32, scope: !12529)
!12532 = !DILocation(line: 4920, column: 37, scope: !12529)
!12533 = !DILocation(line: 4920, column: 43, scope: !12529)
!12534 = !DILocation(line: 4920, column: 3, scope: !12529)
!12535 = !DILocation(line: 4925, column: 1, scope: !12514)
!12536 = distinct !DISubprogram(name: "RNA_float_set_array", scope: !3, file: !3, line: 4927, type: !12537, scopeLine: 4928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12537 = !DISubroutineType(types: !12538)
!12538 = !{null, !1349, !1031, !2546}
!12539 = !DILocalVariable(name: "ptr", arg: 1, scope: !12536, file: !3, line: 4927, type: !1349)
!12540 = !DILocation(line: 4927, column: 38, scope: !12536)
!12541 = !DILocalVariable(name: "name", arg: 2, scope: !12536, file: !3, line: 4927, type: !1031)
!12542 = !DILocation(line: 4927, column: 55, scope: !12536)
!12543 = !DILocalVariable(name: "values", arg: 3, scope: !12536, file: !3, line: 4927, type: !2546)
!12544 = !DILocation(line: 4927, column: 74, scope: !12536)
!12545 = !DILocalVariable(name: "prop", scope: !12536, file: !3, line: 4929, type: !1021)
!12546 = !DILocation(line: 4929, column: 15, scope: !12536)
!12547 = !DILocation(line: 4929, column: 47, scope: !12536)
!12548 = !DILocation(line: 4929, column: 52, scope: !12536)
!12549 = !DILocation(line: 4929, column: 22, scope: !12536)
!12550 = !DILocation(line: 4931, column: 6, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12536, file: !3, line: 4931, column: 6)
!12552 = !DILocation(line: 4931, column: 6, scope: !12536)
!12553 = !DILocation(line: 4932, column: 32, scope: !12551)
!12554 = !DILocation(line: 4932, column: 37, scope: !12551)
!12555 = !DILocation(line: 4932, column: 43, scope: !12551)
!12556 = !DILocation(line: 4932, column: 3, scope: !12551)
!12557 = !DILocation(line: 4937, column: 1, scope: !12536)
!12558 = distinct !DISubprogram(name: "RNA_enum_get", scope: !3, file: !3, line: 4939, type: !12300, scopeLine: 4940, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12559 = !DILocalVariable(name: "ptr", arg: 1, scope: !12558, file: !3, line: 4939, type: !1349)
!12560 = !DILocation(line: 4939, column: 30, scope: !12558)
!12561 = !DILocalVariable(name: "name", arg: 2, scope: !12558, file: !3, line: 4939, type: !1031)
!12562 = !DILocation(line: 4939, column: 47, scope: !12558)
!12563 = !DILocalVariable(name: "prop", scope: !12558, file: !3, line: 4941, type: !1021)
!12564 = !DILocation(line: 4941, column: 15, scope: !12558)
!12565 = !DILocation(line: 4941, column: 47, scope: !12558)
!12566 = !DILocation(line: 4941, column: 52, scope: !12558)
!12567 = !DILocation(line: 4941, column: 22, scope: !12558)
!12568 = !DILocation(line: 4943, column: 6, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12558, file: !3, line: 4943, column: 6)
!12570 = !DILocation(line: 4943, column: 6, scope: !12558)
!12571 = !DILocation(line: 4944, column: 32, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12569, file: !3, line: 4943, column: 12)
!12573 = !DILocation(line: 4944, column: 37, scope: !12572)
!12574 = !DILocation(line: 4944, column: 10, scope: !12572)
!12575 = !DILocation(line: 4944, column: 3, scope: !12572)
!12576 = !DILocation(line: 4950, column: 3, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12569, file: !3, line: 4946, column: 7)
!12578 = !DILocation(line: 4952, column: 1, scope: !12558)
!12579 = distinct !DISubprogram(name: "RNA_enum_set", scope: !3, file: !3, line: 4954, type: !12323, scopeLine: 4955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12580 = !DILocalVariable(name: "ptr", arg: 1, scope: !12579, file: !3, line: 4954, type: !1349)
!12581 = !DILocation(line: 4954, column: 31, scope: !12579)
!12582 = !DILocalVariable(name: "name", arg: 2, scope: !12579, file: !3, line: 4954, type: !1031)
!12583 = !DILocation(line: 4954, column: 48, scope: !12579)
!12584 = !DILocalVariable(name: "value", arg: 3, scope: !12579, file: !3, line: 4954, type: !48)
!12585 = !DILocation(line: 4954, column: 58, scope: !12579)
!12586 = !DILocalVariable(name: "prop", scope: !12579, file: !3, line: 4956, type: !1021)
!12587 = !DILocation(line: 4956, column: 15, scope: !12579)
!12588 = !DILocation(line: 4956, column: 47, scope: !12579)
!12589 = !DILocation(line: 4956, column: 52, scope: !12579)
!12590 = !DILocation(line: 4956, column: 22, scope: !12579)
!12591 = !DILocation(line: 4958, column: 6, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12579, file: !3, line: 4958, column: 6)
!12593 = !DILocation(line: 4958, column: 6, scope: !12579)
!12594 = !DILocation(line: 4959, column: 25, scope: !12592)
!12595 = !DILocation(line: 4959, column: 30, scope: !12592)
!12596 = !DILocation(line: 4959, column: 36, scope: !12592)
!12597 = !DILocation(line: 4959, column: 3, scope: !12592)
!12598 = !DILocation(line: 4964, column: 1, scope: !12579)
!12599 = distinct !DISubprogram(name: "RNA_enum_set_identifier", scope: !3, file: !3, line: 4966, type: !12600, scopeLine: 4967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12600 = !DISubroutineType(types: !12601)
!12601 = !{null, !1349, !1031, !1031}
!12602 = !DILocalVariable(name: "ptr", arg: 1, scope: !12599, file: !3, line: 4966, type: !1349)
!12603 = !DILocation(line: 4966, column: 42, scope: !12599)
!12604 = !DILocalVariable(name: "name", arg: 2, scope: !12599, file: !3, line: 4966, type: !1031)
!12605 = !DILocation(line: 4966, column: 59, scope: !12599)
!12606 = !DILocalVariable(name: "id", arg: 3, scope: !12599, file: !3, line: 4966, type: !1031)
!12607 = !DILocation(line: 4966, column: 77, scope: !12599)
!12608 = !DILocalVariable(name: "prop", scope: !12599, file: !3, line: 4968, type: !1021)
!12609 = !DILocation(line: 4968, column: 15, scope: !12599)
!12610 = !DILocation(line: 4968, column: 47, scope: !12599)
!12611 = !DILocation(line: 4968, column: 52, scope: !12599)
!12612 = !DILocation(line: 4968, column: 22, scope: !12599)
!12613 = !DILocation(line: 4970, column: 6, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12599, file: !3, line: 4970, column: 6)
!12615 = !DILocation(line: 4970, column: 6, scope: !12599)
!12616 = !DILocalVariable(name: "value", scope: !12617, file: !3, line: 4971, type: !48)
!12617 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 4970, column: 12)
!12618 = !DILocation(line: 4971, column: 7, scope: !12617)
!12619 = !DILocation(line: 4972, column: 37, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12617, file: !3, line: 4972, column: 7)
!12621 = !DILocation(line: 4972, column: 42, scope: !12620)
!12622 = !DILocation(line: 4972, column: 48, scope: !12620)
!12623 = !DILocation(line: 4972, column: 7, scope: !12620)
!12624 = !DILocation(line: 4972, column: 7, scope: !12617)
!12625 = !DILocation(line: 4973, column: 26, scope: !12620)
!12626 = !DILocation(line: 4973, column: 31, scope: !12620)
!12627 = !DILocation(line: 4973, column: 37, scope: !12620)
!12628 = !DILocation(line: 4973, column: 4, scope: !12620)
!12629 = !DILocation(line: 4975, column: 57, scope: !12620)
!12630 = !DILocation(line: 4975, column: 62, scope: !12620)
!12631 = !DILocation(line: 4975, column: 68, scope: !12620)
!12632 = !DILocation(line: 4975, column: 80, scope: !12620)
!12633 = !DILocation(line: 4975, column: 86, scope: !12620)
!12634 = !DILocation(line: 4975, column: 4, scope: !12620)
!12635 = !DILocation(line: 4976, column: 2, scope: !12617)
!12636 = !DILocation(line: 4983, column: 1, scope: !12599)
!12637 = distinct !DISubprogram(name: "RNA_enum_is_equal", scope: !3, file: !3, line: 4985, type: !12638, scopeLine: 4986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12638 = !DISubroutineType(types: !12639)
!12639 = !{!1381, !5451, !1349, !1031, !1031}
!12640 = !DILocalVariable(name: "C", arg: 1, scope: !12637, file: !3, line: 4985, type: !5451)
!12641 = !DILocation(line: 4985, column: 34, scope: !12637)
!12642 = !DILocalVariable(name: "ptr", arg: 2, scope: !12637, file: !3, line: 4985, type: !1349)
!12643 = !DILocation(line: 4985, column: 49, scope: !12637)
!12644 = !DILocalVariable(name: "name", arg: 3, scope: !12637, file: !3, line: 4985, type: !1031)
!12645 = !DILocation(line: 4985, column: 66, scope: !12637)
!12646 = !DILocalVariable(name: "enumname", arg: 4, scope: !12637, file: !3, line: 4985, type: !1031)
!12647 = !DILocation(line: 4985, column: 84, scope: !12637)
!12648 = !DILocalVariable(name: "prop", scope: !12637, file: !3, line: 4987, type: !1021)
!12649 = !DILocation(line: 4987, column: 15, scope: !12637)
!12650 = !DILocation(line: 4987, column: 47, scope: !12637)
!12651 = !DILocation(line: 4987, column: 52, scope: !12637)
!12652 = !DILocation(line: 4987, column: 22, scope: !12637)
!12653 = !DILocalVariable(name: "item", scope: !12637, file: !3, line: 4988, type: !2742)
!12654 = !DILocation(line: 4988, column: 20, scope: !12637)
!12655 = !DILocalVariable(name: "free", scope: !12637, file: !3, line: 4989, type: !1381)
!12656 = !DILocation(line: 4989, column: 7, scope: !12637)
!12657 = !DILocation(line: 4991, column: 6, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 4991, column: 6)
!12659 = !DILocation(line: 4991, column: 6, scope: !12637)
!12660 = !DILocalVariable(name: "i", scope: !12661, file: !3, line: 4992, type: !48)
!12661 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 4991, column: 12)
!12662 = !DILocation(line: 4992, column: 7, scope: !12661)
!12663 = !DILocalVariable(name: "cmp", scope: !12661, file: !3, line: 4993, type: !1381)
!12664 = !DILocation(line: 4993, column: 8, scope: !12661)
!12665 = !DILocation(line: 4995, column: 27, scope: !12661)
!12666 = !DILocation(line: 4995, column: 30, scope: !12661)
!12667 = !DILocation(line: 4995, column: 35, scope: !12661)
!12668 = !DILocation(line: 4995, column: 3, scope: !12661)
!12669 = !DILocation(line: 4996, column: 32, scope: !12661)
!12670 = !DILocation(line: 4996, column: 38, scope: !12661)
!12671 = !DILocation(line: 4996, column: 7, scope: !12661)
!12672 = !DILocation(line: 4996, column: 5, scope: !12661)
!12673 = !DILocation(line: 4997, column: 7, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 4997, column: 7)
!12675 = !DILocation(line: 4997, column: 9, scope: !12674)
!12676 = !DILocation(line: 4997, column: 7, scope: !12661)
!12677 = !DILocation(line: 4998, column: 11, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4997, column: 16)
!12679 = !DILocation(line: 4998, column: 16, scope: !12678)
!12680 = !DILocation(line: 4998, column: 19, scope: !12678)
!12681 = !DILocation(line: 4998, column: 50, scope: !12678)
!12682 = !DILocation(line: 4998, column: 55, scope: !12678)
!12683 = !DILocation(line: 4998, column: 28, scope: !12678)
!12684 = !DILocation(line: 4998, column: 25, scope: !12678)
!12685 = !DILocation(line: 4998, column: 10, scope: !12678)
!12686 = !DILocation(line: 4998, column: 8, scope: !12678)
!12687 = !DILocation(line: 4999, column: 3, scope: !12678)
!12688 = !DILocation(line: 5001, column: 7, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 5001, column: 7)
!12690 = !DILocation(line: 5001, column: 7, scope: !12661)
!12691 = !DILocation(line: 5002, column: 4, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 5001, column: 13)
!12693 = !DILocation(line: 5002, column: 14, scope: !12692)
!12694 = !DILocation(line: 5003, column: 3, scope: !12692)
!12695 = !DILocation(line: 5005, column: 7, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 5005, column: 7)
!12697 = !DILocation(line: 5005, column: 9, scope: !12696)
!12698 = !DILocation(line: 5005, column: 7, scope: !12661)
!12699 = !DILocation(line: 5006, column: 11, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12696, file: !3, line: 5005, column: 16)
!12701 = !DILocation(line: 5006, column: 4, scope: !12700)
!12702 = !DILocation(line: 5009, column: 54, scope: !12661)
!12703 = !DILocation(line: 5009, column: 59, scope: !12661)
!12704 = !DILocation(line: 5009, column: 65, scope: !12661)
!12705 = !DILocation(line: 5009, column: 77, scope: !12661)
!12706 = !DILocation(line: 5009, column: 83, scope: !12661)
!12707 = !DILocation(line: 5009, column: 3, scope: !12661)
!12708 = !DILocation(line: 5010, column: 3, scope: !12661)
!12709 = !DILocation(line: 5016, column: 3, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 5012, column: 7)
!12711 = !DILocation(line: 5018, column: 1, scope: !12637)
!12712 = distinct !DISubprogram(name: "RNA_enum_value_from_id", scope: !3, file: !3, line: 5020, type: !12713, scopeLine: 5021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12713 = !DISubroutineType(types: !12714)
!12714 = !{!1381, !2742, !1031, !1330}
!12715 = !DILocalVariable(name: "item", arg: 1, scope: !12712, file: !3, line: 5020, type: !2742)
!12716 = !DILocation(line: 5020, column: 47, scope: !12712)
!12717 = !DILocalVariable(name: "identifier", arg: 2, scope: !12712, file: !3, line: 5020, type: !1031)
!12718 = !DILocation(line: 5020, column: 65, scope: !12712)
!12719 = !DILocalVariable(name: "r_value", arg: 3, scope: !12712, file: !3, line: 5020, type: !1330)
!12720 = !DILocation(line: 5020, column: 82, scope: !12712)
!12721 = !DILocalVariable(name: "i", scope: !12712, file: !3, line: 5022, type: !2482)
!12722 = !DILocation(line: 5022, column: 12, scope: !12712)
!12723 = !DILocation(line: 5022, column: 41, scope: !12712)
!12724 = !DILocation(line: 5022, column: 47, scope: !12712)
!12725 = !DILocation(line: 5022, column: 16, scope: !12712)
!12726 = !DILocation(line: 5023, column: 6, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12712, file: !3, line: 5023, column: 6)
!12728 = !DILocation(line: 5023, column: 8, scope: !12727)
!12729 = !DILocation(line: 5023, column: 6, scope: !12712)
!12730 = !DILocation(line: 5024, column: 14, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 5023, column: 15)
!12732 = !DILocation(line: 5024, column: 19, scope: !12731)
!12733 = !DILocation(line: 5024, column: 22, scope: !12731)
!12734 = !DILocation(line: 5024, column: 4, scope: !12731)
!12735 = !DILocation(line: 5024, column: 12, scope: !12731)
!12736 = !DILocation(line: 5025, column: 3, scope: !12731)
!12737 = !DILocation(line: 5028, column: 3, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 5027, column: 7)
!12739 = !DILocation(line: 5030, column: 1, scope: !12712)
!12740 = distinct !DISubprogram(name: "RNA_enum_id_from_value", scope: !3, file: !3, line: 5032, type: !12741, scopeLine: 5033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12741 = !DISubroutineType(types: !12742)
!12742 = !{!1381, !2742, !48, !5808}
!12743 = !DILocalVariable(name: "item", arg: 1, scope: !12740, file: !3, line: 5032, type: !2742)
!12744 = !DILocation(line: 5032, column: 47, scope: !12740)
!12745 = !DILocalVariable(name: "value", arg: 2, scope: !12740, file: !3, line: 5032, type: !48)
!12746 = !DILocation(line: 5032, column: 57, scope: !12740)
!12747 = !DILocalVariable(name: "r_identifier", arg: 3, scope: !12740, file: !3, line: 5032, type: !5808)
!12748 = !DILocation(line: 5032, column: 77, scope: !12740)
!12749 = !DILocalVariable(name: "i", scope: !12740, file: !3, line: 5034, type: !2482)
!12750 = !DILocation(line: 5034, column: 12, scope: !12740)
!12751 = !DILocation(line: 5034, column: 36, scope: !12740)
!12752 = !DILocation(line: 5034, column: 42, scope: !12740)
!12753 = !DILocation(line: 5034, column: 16, scope: !12740)
!12754 = !DILocation(line: 5035, column: 6, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12740, file: !3, line: 5035, column: 6)
!12756 = !DILocation(line: 5035, column: 8, scope: !12755)
!12757 = !DILocation(line: 5035, column: 6, scope: !12740)
!12758 = !DILocation(line: 5036, column: 19, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 5035, column: 15)
!12760 = !DILocation(line: 5036, column: 24, scope: !12759)
!12761 = !DILocation(line: 5036, column: 27, scope: !12759)
!12762 = !DILocation(line: 5036, column: 4, scope: !12759)
!12763 = !DILocation(line: 5036, column: 17, scope: !12759)
!12764 = !DILocation(line: 5037, column: 3, scope: !12759)
!12765 = !DILocation(line: 5040, column: 3, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 5039, column: 7)
!12767 = !DILocation(line: 5042, column: 1, scope: !12740)
!12768 = distinct !DISubprogram(name: "RNA_enum_icon_from_value", scope: !3, file: !3, line: 5044, type: !12769, scopeLine: 5045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12769 = !DISubroutineType(types: !12770)
!12770 = !{!1381, !2742, !48, !1330}
!12771 = !DILocalVariable(name: "item", arg: 1, scope: !12768, file: !3, line: 5044, type: !2742)
!12772 = !DILocation(line: 5044, column: 49, scope: !12768)
!12773 = !DILocalVariable(name: "value", arg: 2, scope: !12768, file: !3, line: 5044, type: !48)
!12774 = !DILocation(line: 5044, column: 59, scope: !12768)
!12775 = !DILocalVariable(name: "r_icon", arg: 3, scope: !12768, file: !3, line: 5044, type: !1330)
!12776 = !DILocation(line: 5044, column: 71, scope: !12768)
!12777 = !DILocalVariable(name: "i", scope: !12768, file: !3, line: 5046, type: !2482)
!12778 = !DILocation(line: 5046, column: 12, scope: !12768)
!12779 = !DILocation(line: 5046, column: 36, scope: !12768)
!12780 = !DILocation(line: 5046, column: 42, scope: !12768)
!12781 = !DILocation(line: 5046, column: 16, scope: !12768)
!12782 = !DILocation(line: 5047, column: 6, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 5047, column: 6)
!12784 = !DILocation(line: 5047, column: 8, scope: !12783)
!12785 = !DILocation(line: 5047, column: 6, scope: !12768)
!12786 = !DILocation(line: 5048, column: 13, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 5047, column: 15)
!12788 = !DILocation(line: 5048, column: 18, scope: !12787)
!12789 = !DILocation(line: 5048, column: 21, scope: !12787)
!12790 = !DILocation(line: 5048, column: 4, scope: !12787)
!12791 = !DILocation(line: 5048, column: 11, scope: !12787)
!12792 = !DILocation(line: 5049, column: 3, scope: !12787)
!12793 = !DILocation(line: 5052, column: 3, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 5051, column: 7)
!12795 = !DILocation(line: 5054, column: 1, scope: !12768)
!12796 = distinct !DISubprogram(name: "RNA_enum_name_from_value", scope: !3, file: !3, line: 5056, type: !12741, scopeLine: 5057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12797 = !DILocalVariable(name: "item", arg: 1, scope: !12796, file: !3, line: 5056, type: !2742)
!12798 = !DILocation(line: 5056, column: 49, scope: !12796)
!12799 = !DILocalVariable(name: "value", arg: 2, scope: !12796, file: !3, line: 5056, type: !48)
!12800 = !DILocation(line: 5056, column: 59, scope: !12796)
!12801 = !DILocalVariable(name: "r_name", arg: 3, scope: !12796, file: !3, line: 5056, type: !5808)
!12802 = !DILocation(line: 5056, column: 79, scope: !12796)
!12803 = !DILocalVariable(name: "i", scope: !12796, file: !3, line: 5058, type: !2482)
!12804 = !DILocation(line: 5058, column: 12, scope: !12796)
!12805 = !DILocation(line: 5058, column: 36, scope: !12796)
!12806 = !DILocation(line: 5058, column: 42, scope: !12796)
!12807 = !DILocation(line: 5058, column: 16, scope: !12796)
!12808 = !DILocation(line: 5059, column: 6, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 5059, column: 6)
!12810 = !DILocation(line: 5059, column: 8, scope: !12809)
!12811 = !DILocation(line: 5059, column: 6, scope: !12796)
!12812 = !DILocation(line: 5060, column: 13, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 5059, column: 15)
!12814 = !DILocation(line: 5060, column: 18, scope: !12813)
!12815 = !DILocation(line: 5060, column: 21, scope: !12813)
!12816 = !DILocation(line: 5060, column: 4, scope: !12813)
!12817 = !DILocation(line: 5060, column: 11, scope: !12813)
!12818 = !DILocation(line: 5061, column: 3, scope: !12813)
!12819 = !DILocation(line: 5064, column: 3, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 5063, column: 7)
!12821 = !DILocation(line: 5066, column: 1, scope: !12796)
!12822 = distinct !DISubprogram(name: "RNA_string_get", scope: !3, file: !3, line: 5068, type: !12823, scopeLine: 5069, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12823 = !DISubroutineType(types: !12824)
!12824 = !{null, !1349, !1031, !1091}
!12825 = !DILocalVariable(name: "ptr", arg: 1, scope: !12822, file: !3, line: 5068, type: !1349)
!12826 = !DILocation(line: 5068, column: 33, scope: !12822)
!12827 = !DILocalVariable(name: "name", arg: 2, scope: !12822, file: !3, line: 5068, type: !1031)
!12828 = !DILocation(line: 5068, column: 50, scope: !12822)
!12829 = !DILocalVariable(name: "value", arg: 3, scope: !12822, file: !3, line: 5068, type: !1091)
!12830 = !DILocation(line: 5068, column: 62, scope: !12822)
!12831 = !DILocalVariable(name: "prop", scope: !12822, file: !3, line: 5070, type: !1021)
!12832 = !DILocation(line: 5070, column: 15, scope: !12822)
!12833 = !DILocation(line: 5070, column: 47, scope: !12822)
!12834 = !DILocation(line: 5070, column: 52, scope: !12822)
!12835 = !DILocation(line: 5070, column: 22, scope: !12822)
!12836 = !DILocation(line: 5072, column: 6, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 5072, column: 6)
!12838 = !DILocation(line: 5072, column: 6, scope: !12822)
!12839 = !DILocation(line: 5073, column: 27, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12837, file: !3, line: 5072, column: 12)
!12841 = !DILocation(line: 5073, column: 32, scope: !12840)
!12842 = !DILocation(line: 5073, column: 38, scope: !12840)
!12843 = !DILocation(line: 5073, column: 3, scope: !12840)
!12844 = !DILocation(line: 5074, column: 2, scope: !12840)
!12845 = !DILocation(line: 5079, column: 3, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12837, file: !3, line: 5075, column: 7)
!12847 = !DILocation(line: 5079, column: 12, scope: !12846)
!12848 = !DILocation(line: 5081, column: 1, scope: !12822)
!12849 = distinct !DISubprogram(name: "RNA_string_get_alloc", scope: !3, file: !3, line: 5083, type: !12850, scopeLine: 5084, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12850 = !DISubroutineType(types: !12851)
!12851 = !{!1091, !1349, !1031, !1091, !48}
!12852 = !DILocalVariable(name: "ptr", arg: 1, scope: !12849, file: !3, line: 5083, type: !1349)
!12853 = !DILocation(line: 5083, column: 40, scope: !12849)
!12854 = !DILocalVariable(name: "name", arg: 2, scope: !12849, file: !3, line: 5083, type: !1031)
!12855 = !DILocation(line: 5083, column: 57, scope: !12849)
!12856 = !DILocalVariable(name: "fixedbuf", arg: 3, scope: !12849, file: !3, line: 5083, type: !1091)
!12857 = !DILocation(line: 5083, column: 69, scope: !12849)
!12858 = !DILocalVariable(name: "fixedlen", arg: 4, scope: !12849, file: !3, line: 5083, type: !48)
!12859 = !DILocation(line: 5083, column: 83, scope: !12849)
!12860 = !DILocalVariable(name: "prop", scope: !12849, file: !3, line: 5085, type: !1021)
!12861 = !DILocation(line: 5085, column: 15, scope: !12849)
!12862 = !DILocation(line: 5085, column: 47, scope: !12849)
!12863 = !DILocation(line: 5085, column: 52, scope: !12849)
!12864 = !DILocation(line: 5085, column: 22, scope: !12849)
!12865 = !DILocation(line: 5087, column: 6, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 5087, column: 6)
!12867 = !DILocation(line: 5087, column: 6, scope: !12849)
!12868 = !DILocation(line: 5088, column: 40, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12866, file: !3, line: 5087, column: 12)
!12870 = !DILocation(line: 5088, column: 45, scope: !12869)
!12871 = !DILocation(line: 5088, column: 51, scope: !12869)
!12872 = !DILocation(line: 5088, column: 61, scope: !12869)
!12873 = !DILocation(line: 5088, column: 10, scope: !12869)
!12874 = !DILocation(line: 5088, column: 3, scope: !12869)
!12875 = !DILocation(line: 5094, column: 3, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12866, file: !3, line: 5090, column: 7)
!12877 = !DILocation(line: 5096, column: 1, scope: !12849)
!12878 = distinct !DISubprogram(name: "RNA_string_length", scope: !3, file: !3, line: 5098, type: !12300, scopeLine: 5099, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12879 = !DILocalVariable(name: "ptr", arg: 1, scope: !12878, file: !3, line: 5098, type: !1349)
!12880 = !DILocation(line: 5098, column: 35, scope: !12878)
!12881 = !DILocalVariable(name: "name", arg: 2, scope: !12878, file: !3, line: 5098, type: !1031)
!12882 = !DILocation(line: 5098, column: 52, scope: !12878)
!12883 = !DILocalVariable(name: "prop", scope: !12878, file: !3, line: 5100, type: !1021)
!12884 = !DILocation(line: 5100, column: 15, scope: !12878)
!12885 = !DILocation(line: 5100, column: 47, scope: !12878)
!12886 = !DILocation(line: 5100, column: 52, scope: !12878)
!12887 = !DILocation(line: 5100, column: 22, scope: !12878)
!12888 = !DILocation(line: 5102, column: 6, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12878, file: !3, line: 5102, column: 6)
!12890 = !DILocation(line: 5102, column: 6, scope: !12878)
!12891 = !DILocation(line: 5103, column: 37, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12889, file: !3, line: 5102, column: 12)
!12893 = !DILocation(line: 5103, column: 42, scope: !12892)
!12894 = !DILocation(line: 5103, column: 10, scope: !12892)
!12895 = !DILocation(line: 5103, column: 3, scope: !12892)
!12896 = !DILocation(line: 5109, column: 3, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12889, file: !3, line: 5105, column: 7)
!12898 = !DILocation(line: 5111, column: 1, scope: !12878)
!12899 = distinct !DISubprogram(name: "RNA_string_set", scope: !3, file: !3, line: 5113, type: !12600, scopeLine: 5114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12900 = !DILocalVariable(name: "ptr", arg: 1, scope: !12899, file: !3, line: 5113, type: !1349)
!12901 = !DILocation(line: 5113, column: 33, scope: !12899)
!12902 = !DILocalVariable(name: "name", arg: 2, scope: !12899, file: !3, line: 5113, type: !1031)
!12903 = !DILocation(line: 5113, column: 50, scope: !12899)
!12904 = !DILocalVariable(name: "value", arg: 3, scope: !12899, file: !3, line: 5113, type: !1031)
!12905 = !DILocation(line: 5113, column: 68, scope: !12899)
!12906 = !DILocalVariable(name: "prop", scope: !12899, file: !3, line: 5115, type: !1021)
!12907 = !DILocation(line: 5115, column: 15, scope: !12899)
!12908 = !DILocation(line: 5115, column: 47, scope: !12899)
!12909 = !DILocation(line: 5115, column: 52, scope: !12899)
!12910 = !DILocation(line: 5115, column: 22, scope: !12899)
!12911 = !DILocation(line: 5117, column: 6, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 5117, column: 6)
!12913 = !DILocation(line: 5117, column: 6, scope: !12899)
!12914 = !DILocation(line: 5118, column: 27, scope: !12912)
!12915 = !DILocation(line: 5118, column: 32, scope: !12912)
!12916 = !DILocation(line: 5118, column: 38, scope: !12912)
!12917 = !DILocation(line: 5118, column: 3, scope: !12912)
!12918 = !DILocation(line: 5123, column: 1, scope: !12899)
!12919 = distinct !DISubprogram(name: "RNA_pointer_get", scope: !3, file: !3, line: 5125, type: !12920, scopeLine: 5126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12920 = !DISubroutineType(types: !12921)
!12921 = !{!1350, !1349, !1031}
!12922 = !DILocalVariable(name: "ptr", arg: 1, scope: !12919, file: !3, line: 5125, type: !1349)
!12923 = !DILocation(line: 5125, column: 40, scope: !12919)
!12924 = !DILocalVariable(name: "name", arg: 2, scope: !12919, file: !3, line: 5125, type: !1031)
!12925 = !DILocation(line: 5125, column: 57, scope: !12919)
!12926 = !DILocalVariable(name: "prop", scope: !12919, file: !3, line: 5127, type: !1021)
!12927 = !DILocation(line: 5127, column: 15, scope: !12919)
!12928 = !DILocation(line: 5127, column: 47, scope: !12919)
!12929 = !DILocation(line: 5127, column: 52, scope: !12919)
!12930 = !DILocation(line: 5127, column: 22, scope: !12919)
!12931 = !DILocation(line: 5129, column: 6, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12919, file: !3, line: 5129, column: 6)
!12933 = !DILocation(line: 5129, column: 6, scope: !12919)
!12934 = !DILocation(line: 5130, column: 35, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 5129, column: 12)
!12936 = !DILocation(line: 5130, column: 40, scope: !12935)
!12937 = !DILocation(line: 5130, column: 10, scope: !12935)
!12938 = !DILocation(line: 5130, column: 3, scope: !12935)
!12939 = !DILocation(line: 5137, column: 10, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 5132, column: 7)
!12941 = !DILocation(line: 5137, column: 3, scope: !12940)
!12942 = !DILocation(line: 5139, column: 1, scope: !12919)
!12943 = distinct !DISubprogram(name: "RNA_pointer_set", scope: !3, file: !3, line: 5141, type: !12944, scopeLine: 5142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12944 = !DISubroutineType(types: !12945)
!12945 = !{null, !1349, !1031, !1350}
!12946 = !DILocalVariable(name: "ptr", arg: 1, scope: !12943, file: !3, line: 5141, type: !1349)
!12947 = !DILocation(line: 5141, column: 34, scope: !12943)
!12948 = !DILocalVariable(name: "name", arg: 2, scope: !12943, file: !3, line: 5141, type: !1031)
!12949 = !DILocation(line: 5141, column: 51, scope: !12943)
!12950 = !DILocalVariable(name: "ptr_value", arg: 3, scope: !12943, file: !3, line: 5141, type: !1350)
!12951 = !DILocation(line: 5141, column: 68, scope: !12943)
!12952 = !DILocalVariable(name: "prop", scope: !12943, file: !3, line: 5143, type: !1021)
!12953 = !DILocation(line: 5143, column: 15, scope: !12943)
!12954 = !DILocation(line: 5143, column: 47, scope: !12943)
!12955 = !DILocation(line: 5143, column: 52, scope: !12943)
!12956 = !DILocation(line: 5143, column: 22, scope: !12943)
!12957 = !DILocation(line: 5145, column: 6, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12943, file: !3, line: 5145, column: 6)
!12959 = !DILocation(line: 5145, column: 6, scope: !12943)
!12960 = !DILocation(line: 5146, column: 28, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 5145, column: 12)
!12962 = !DILocation(line: 5146, column: 33, scope: !12961)
!12963 = !DILocation(line: 5146, column: 3, scope: !12961)
!12964 = !DILocation(line: 5147, column: 2, scope: !12961)
!12965 = !DILocation(line: 5154, column: 1, scope: !12943)
!12966 = distinct !DISubprogram(name: "RNA_pointer_add", scope: !3, file: !3, line: 5156, type: !12967, scopeLine: 5157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{null, !1349, !1031}
!12969 = !DILocalVariable(name: "ptr", arg: 1, scope: !12966, file: !3, line: 5156, type: !1349)
!12970 = !DILocation(line: 5156, column: 34, scope: !12966)
!12971 = !DILocalVariable(name: "name", arg: 2, scope: !12966, file: !3, line: 5156, type: !1031)
!12972 = !DILocation(line: 5156, column: 51, scope: !12966)
!12973 = !DILocalVariable(name: "prop", scope: !12966, file: !3, line: 5158, type: !1021)
!12974 = !DILocation(line: 5158, column: 15, scope: !12966)
!12975 = !DILocation(line: 5158, column: 47, scope: !12966)
!12976 = !DILocation(line: 5158, column: 52, scope: !12966)
!12977 = !DILocation(line: 5158, column: 22, scope: !12966)
!12978 = !DILocation(line: 5160, column: 6, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12966, file: !3, line: 5160, column: 6)
!12980 = !DILocation(line: 5160, column: 6, scope: !12966)
!12981 = !DILocation(line: 5161, column: 28, scope: !12979)
!12982 = !DILocation(line: 5161, column: 33, scope: !12979)
!12983 = !DILocation(line: 5161, column: 3, scope: !12979)
!12984 = !DILocation(line: 5166, column: 1, scope: !12966)
!12985 = distinct !DISubprogram(name: "RNA_collection_begin", scope: !3, file: !3, line: 5168, type: !12986, scopeLine: 5169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{null, !1349, !1031, !3905}
!12988 = !DILocalVariable(name: "ptr", arg: 1, scope: !12985, file: !3, line: 5168, type: !1349)
!12989 = !DILocation(line: 5168, column: 39, scope: !12985)
!12990 = !DILocalVariable(name: "name", arg: 2, scope: !12985, file: !3, line: 5168, type: !1031)
!12991 = !DILocation(line: 5168, column: 56, scope: !12985)
!12992 = !DILocalVariable(name: "iter", arg: 3, scope: !12985, file: !3, line: 5168, type: !3905)
!12993 = !DILocation(line: 5168, column: 90, scope: !12985)
!12994 = !DILocalVariable(name: "prop", scope: !12985, file: !3, line: 5170, type: !1021)
!12995 = !DILocation(line: 5170, column: 15, scope: !12985)
!12996 = !DILocation(line: 5170, column: 47, scope: !12985)
!12997 = !DILocation(line: 5170, column: 52, scope: !12985)
!12998 = !DILocation(line: 5170, column: 22, scope: !12985)
!12999 = !DILocation(line: 5172, column: 6, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 5172, column: 6)
!13001 = !DILocation(line: 5172, column: 6, scope: !12985)
!13002 = !DILocation(line: 5173, column: 33, scope: !13000)
!13003 = !DILocation(line: 5173, column: 38, scope: !13000)
!13004 = !DILocation(line: 5173, column: 44, scope: !13000)
!13005 = !DILocation(line: 5173, column: 3, scope: !13000)
!13006 = !DILocation(line: 5178, column: 1, scope: !12985)
!13007 = distinct !DISubprogram(name: "RNA_collection_add", scope: !3, file: !3, line: 5180, type: !13008, scopeLine: 5181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13008 = !DISubroutineType(types: !13009)
!13009 = !{null, !1349, !1031, !1349}
!13010 = !DILocalVariable(name: "ptr", arg: 1, scope: !13007, file: !3, line: 5180, type: !1349)
!13011 = !DILocation(line: 5180, column: 37, scope: !13007)
!13012 = !DILocalVariable(name: "name", arg: 2, scope: !13007, file: !3, line: 5180, type: !1031)
!13013 = !DILocation(line: 5180, column: 54, scope: !13007)
!13014 = !DILocalVariable(name: "r_value", arg: 3, scope: !13007, file: !3, line: 5180, type: !1349)
!13015 = !DILocation(line: 5180, column: 72, scope: !13007)
!13016 = !DILocalVariable(name: "prop", scope: !13007, file: !3, line: 5182, type: !1021)
!13017 = !DILocation(line: 5182, column: 15, scope: !13007)
!13018 = !DILocation(line: 5182, column: 47, scope: !13007)
!13019 = !DILocation(line: 5182, column: 52, scope: !13007)
!13020 = !DILocation(line: 5182, column: 22, scope: !13007)
!13021 = !DILocation(line: 5184, column: 6, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13007, file: !3, line: 5184, column: 6)
!13023 = !DILocation(line: 5184, column: 6, scope: !13007)
!13024 = !DILocation(line: 5185, column: 31, scope: !13022)
!13025 = !DILocation(line: 5185, column: 36, scope: !13022)
!13026 = !DILocation(line: 5185, column: 42, scope: !13022)
!13027 = !DILocation(line: 5185, column: 3, scope: !13022)
!13028 = !DILocation(line: 5190, column: 1, scope: !13007)
!13029 = distinct !DISubprogram(name: "RNA_collection_clear", scope: !3, file: !3, line: 5192, type: !12967, scopeLine: 5193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13030 = !DILocalVariable(name: "ptr", arg: 1, scope: !13029, file: !3, line: 5192, type: !1349)
!13031 = !DILocation(line: 5192, column: 39, scope: !13029)
!13032 = !DILocalVariable(name: "name", arg: 2, scope: !13029, file: !3, line: 5192, type: !1031)
!13033 = !DILocation(line: 5192, column: 56, scope: !13029)
!13034 = !DILocalVariable(name: "prop", scope: !13029, file: !3, line: 5194, type: !1021)
!13035 = !DILocation(line: 5194, column: 15, scope: !13029)
!13036 = !DILocation(line: 5194, column: 47, scope: !13029)
!13037 = !DILocation(line: 5194, column: 52, scope: !13029)
!13038 = !DILocation(line: 5194, column: 22, scope: !13029)
!13039 = !DILocation(line: 5196, column: 6, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13029, file: !3, line: 5196, column: 6)
!13041 = !DILocation(line: 5196, column: 6, scope: !13029)
!13042 = !DILocation(line: 5197, column: 33, scope: !13040)
!13043 = !DILocation(line: 5197, column: 38, scope: !13040)
!13044 = !DILocation(line: 5197, column: 3, scope: !13040)
!13045 = !DILocation(line: 5202, column: 1, scope: !13029)
!13046 = distinct !DISubprogram(name: "RNA_collection_length", scope: !3, file: !3, line: 5204, type: !12300, scopeLine: 5205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13047 = !DILocalVariable(name: "ptr", arg: 1, scope: !13046, file: !3, line: 5204, type: !1349)
!13048 = !DILocation(line: 5204, column: 39, scope: !13046)
!13049 = !DILocalVariable(name: "name", arg: 2, scope: !13046, file: !3, line: 5204, type: !1031)
!13050 = !DILocation(line: 5204, column: 56, scope: !13046)
!13051 = !DILocalVariable(name: "prop", scope: !13046, file: !3, line: 5206, type: !1021)
!13052 = !DILocation(line: 5206, column: 15, scope: !13046)
!13053 = !DILocation(line: 5206, column: 47, scope: !13046)
!13054 = !DILocation(line: 5206, column: 52, scope: !13046)
!13055 = !DILocation(line: 5206, column: 22, scope: !13046)
!13056 = !DILocation(line: 5208, column: 6, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13046, file: !3, line: 5208, column: 6)
!13058 = !DILocation(line: 5208, column: 6, scope: !13046)
!13059 = !DILocation(line: 5209, column: 41, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 5208, column: 12)
!13061 = !DILocation(line: 5209, column: 46, scope: !13060)
!13062 = !DILocation(line: 5209, column: 10, scope: !13060)
!13063 = !DILocation(line: 5209, column: 3, scope: !13060)
!13064 = !DILocation(line: 5215, column: 3, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 5211, column: 7)
!13066 = !DILocation(line: 5217, column: 1, scope: !13046)
!13067 = distinct !DISubprogram(name: "RNA_property_is_set_ex", scope: !3, file: !3, line: 5219, type: !13068, scopeLine: 5220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13068 = !DISubroutineType(types: !13069)
!13069 = !{!1381, !1349, !1021, !1381}
!13070 = !DILocalVariable(name: "ptr", arg: 1, scope: !13067, file: !3, line: 5219, type: !1349)
!13071 = !DILocation(line: 5219, column: 41, scope: !13067)
!13072 = !DILocalVariable(name: "prop", arg: 2, scope: !13067, file: !3, line: 5219, type: !1021)
!13073 = !DILocation(line: 5219, column: 59, scope: !13067)
!13074 = !DILocalVariable(name: "use_ghost", arg: 3, scope: !13067, file: !3, line: 5219, type: !1381)
!13075 = !DILocation(line: 5219, column: 70, scope: !13067)
!13076 = !DILocation(line: 5221, column: 29, scope: !13067)
!13077 = !DILocation(line: 5221, column: 9, scope: !13067)
!13078 = !DILocation(line: 5221, column: 7, scope: !13067)
!13079 = !DILocation(line: 5222, column: 6, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13067, file: !3, line: 5222, column: 6)
!13081 = !DILocation(line: 5222, column: 12, scope: !13080)
!13082 = !DILocation(line: 5222, column: 17, scope: !13080)
!13083 = !DILocation(line: 5222, column: 6, scope: !13067)
!13084 = !DILocalVariable(name: "idprop", scope: !13085, file: !3, line: 5223, type: !987)
!13085 = distinct !DILexicalBlock(scope: !13080, file: !3, line: 5222, column: 36)
!13086 = !DILocation(line: 5223, column: 15, scope: !13085)
!13087 = !DILocation(line: 5223, column: 44, scope: !13085)
!13088 = !DILocation(line: 5223, column: 49, scope: !13085)
!13089 = !DILocation(line: 5223, column: 55, scope: !13085)
!13090 = !DILocation(line: 5223, column: 24, scope: !13085)
!13091 = !DILocation(line: 5224, column: 12, scope: !13085)
!13092 = !DILocation(line: 5224, column: 19, scope: !13085)
!13093 = !DILocation(line: 5224, column: 28, scope: !13085)
!13094 = !DILocation(line: 5224, column: 32, scope: !13085)
!13095 = !DILocation(line: 5224, column: 42, scope: !13085)
!13096 = !DILocation(line: 5224, column: 51, scope: !13085)
!13097 = !DILocation(line: 5224, column: 56, scope: !13085)
!13098 = !DILocation(line: 5224, column: 64, scope: !13085)
!13099 = !DILocation(line: 5224, column: 69, scope: !13085)
!13100 = !DILocation(line: 5224, column: 54, scope: !13085)
!13101 = !DILocation(line: 0, scope: !13085)
!13102 = !DILocation(line: 5224, column: 10, scope: !13085)
!13103 = !DILocation(line: 5224, column: 3, scope: !13085)
!13104 = !DILocation(line: 5227, column: 3, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13080, file: !3, line: 5226, column: 7)
!13106 = !DILocation(line: 5229, column: 1, scope: !13067)
!13107 = distinct !DISubprogram(name: "RNA_property_is_set", scope: !3, file: !3, line: 5231, type: !3862, scopeLine: 5232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13108 = !DILocalVariable(name: "ptr", arg: 1, scope: !13107, file: !3, line: 5231, type: !1349)
!13109 = !DILocation(line: 5231, column: 38, scope: !13107)
!13110 = !DILocalVariable(name: "prop", arg: 2, scope: !13107, file: !3, line: 5231, type: !1021)
!13111 = !DILocation(line: 5231, column: 56, scope: !13107)
!13112 = !DILocation(line: 5233, column: 29, scope: !13107)
!13113 = !DILocation(line: 5233, column: 9, scope: !13107)
!13114 = !DILocation(line: 5233, column: 7, scope: !13107)
!13115 = !DILocation(line: 5234, column: 6, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 5234, column: 6)
!13117 = !DILocation(line: 5234, column: 12, scope: !13116)
!13118 = !DILocation(line: 5234, column: 17, scope: !13116)
!13119 = !DILocation(line: 5234, column: 6, scope: !13107)
!13120 = !DILocalVariable(name: "idprop", scope: !13121, file: !3, line: 5235, type: !987)
!13121 = distinct !DILexicalBlock(scope: !13116, file: !3, line: 5234, column: 36)
!13122 = !DILocation(line: 5235, column: 15, scope: !13121)
!13123 = !DILocation(line: 5235, column: 44, scope: !13121)
!13124 = !DILocation(line: 5235, column: 49, scope: !13121)
!13125 = !DILocation(line: 5235, column: 55, scope: !13121)
!13126 = !DILocation(line: 5235, column: 24, scope: !13121)
!13127 = !DILocation(line: 5236, column: 12, scope: !13121)
!13128 = !DILocation(line: 5236, column: 19, scope: !13121)
!13129 = !DILocation(line: 5236, column: 28, scope: !13121)
!13130 = !DILocation(line: 5236, column: 33, scope: !13121)
!13131 = !DILocation(line: 5236, column: 41, scope: !13121)
!13132 = !DILocation(line: 5236, column: 46, scope: !13121)
!13133 = !DILocation(line: 5236, column: 31, scope: !13121)
!13134 = !DILocation(line: 0, scope: !13121)
!13135 = !DILocation(line: 5236, column: 10, scope: !13121)
!13136 = !DILocation(line: 5236, column: 3, scope: !13121)
!13137 = !DILocation(line: 5239, column: 3, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13116, file: !3, line: 5238, column: 7)
!13139 = !DILocation(line: 5241, column: 1, scope: !13107)
!13140 = distinct !DISubprogram(name: "RNA_property_unset", scope: !3, file: !3, line: 5243, type: !6665, scopeLine: 5244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13141 = !DILocalVariable(name: "ptr", arg: 1, scope: !13140, file: !3, line: 5243, type: !1349)
!13142 = !DILocation(line: 5243, column: 37, scope: !13140)
!13143 = !DILocalVariable(name: "prop", arg: 2, scope: !13140, file: !3, line: 5243, type: !1021)
!13144 = !DILocation(line: 5243, column: 55, scope: !13140)
!13145 = !DILocation(line: 5245, column: 29, scope: !13140)
!13146 = !DILocation(line: 5245, column: 9, scope: !13140)
!13147 = !DILocation(line: 5245, column: 7, scope: !13140)
!13148 = !DILocation(line: 5246, column: 6, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13140, file: !3, line: 5246, column: 6)
!13150 = !DILocation(line: 5246, column: 12, scope: !13149)
!13151 = !DILocation(line: 5246, column: 17, scope: !13149)
!13152 = !DILocation(line: 5246, column: 6, scope: !13140)
!13153 = !DILocation(line: 5247, column: 23, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13149, file: !3, line: 5246, column: 36)
!13155 = !DILocation(line: 5247, column: 28, scope: !13154)
!13156 = !DILocation(line: 5247, column: 34, scope: !13154)
!13157 = !DILocation(line: 5247, column: 3, scope: !13154)
!13158 = !DILocation(line: 5248, column: 2, scope: !13154)
!13159 = !DILocation(line: 5249, column: 1, scope: !13140)
!13160 = distinct !DISubprogram(name: "rna_idproperty_free", scope: !3, file: !3, line: 287, type: !12967, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13161 = !DILocalVariable(name: "ptr", arg: 1, scope: !13160, file: !3, line: 287, type: !1349)
!13162 = !DILocation(line: 287, column: 45, scope: !13160)
!13163 = !DILocalVariable(name: "name", arg: 2, scope: !13160, file: !3, line: 287, type: !1031)
!13164 = !DILocation(line: 287, column: 62, scope: !13160)
!13165 = !DILocalVariable(name: "group", scope: !13160, file: !3, line: 289, type: !987)
!13166 = !DILocation(line: 289, column: 14, scope: !13160)
!13167 = !DILocation(line: 289, column: 41, scope: !13160)
!13168 = !DILocation(line: 289, column: 22, scope: !13160)
!13169 = !DILocation(line: 291, column: 6, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13160, file: !3, line: 291, column: 6)
!13171 = !DILocation(line: 291, column: 6, scope: !13160)
!13172 = !DILocalVariable(name: "idprop", scope: !13173, file: !3, line: 292, type: !987)
!13173 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 291, column: 13)
!13174 = !DILocation(line: 292, column: 15, scope: !13173)
!13175 = !DILocation(line: 292, column: 49, scope: !13173)
!13176 = !DILocation(line: 292, column: 56, scope: !13173)
!13177 = !DILocation(line: 292, column: 24, scope: !13173)
!13178 = !DILocation(line: 293, column: 7, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13173, file: !3, line: 293, column: 7)
!13180 = !DILocation(line: 293, column: 7, scope: !13173)
!13181 = !DILocation(line: 294, column: 22, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13179, file: !3, line: 293, column: 15)
!13183 = !DILocation(line: 294, column: 29, scope: !13182)
!13184 = !DILocation(line: 294, column: 4, scope: !13182)
!13185 = !DILocation(line: 295, column: 3, scope: !13182)
!13186 = !DILocation(line: 296, column: 2, scope: !13173)
!13187 = !DILocation(line: 297, column: 1, scope: !13160)
!13188 = distinct !DISubprogram(name: "RNA_struct_property_is_set_ex", scope: !3, file: !3, line: 5251, type: !13189, scopeLine: 5252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13189 = !DISubroutineType(types: !13190)
!13190 = !{!1381, !1349, !1031, !1381}
!13191 = !DILocalVariable(name: "ptr", arg: 1, scope: !13188, file: !3, line: 5251, type: !1349)
!13192 = !DILocation(line: 5251, column: 48, scope: !13188)
!13193 = !DILocalVariable(name: "identifier", arg: 2, scope: !13188, file: !3, line: 5251, type: !1031)
!13194 = !DILocation(line: 5251, column: 65, scope: !13188)
!13195 = !DILocalVariable(name: "use_ghost", arg: 3, scope: !13188, file: !3, line: 5251, type: !1381)
!13196 = !DILocation(line: 5251, column: 82, scope: !13188)
!13197 = !DILocalVariable(name: "prop", scope: !13188, file: !3, line: 5253, type: !1021)
!13198 = !DILocation(line: 5253, column: 15, scope: !13188)
!13199 = !DILocation(line: 5253, column: 47, scope: !13188)
!13200 = !DILocation(line: 5253, column: 52, scope: !13188)
!13201 = !DILocation(line: 5253, column: 22, scope: !13188)
!13202 = !DILocation(line: 5255, column: 6, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13188, file: !3, line: 5255, column: 6)
!13204 = !DILocation(line: 5255, column: 6, scope: !13188)
!13205 = !DILocation(line: 5256, column: 33, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 5255, column: 12)
!13207 = !DILocation(line: 5256, column: 38, scope: !13206)
!13208 = !DILocation(line: 5256, column: 44, scope: !13206)
!13209 = !DILocation(line: 5256, column: 10, scope: !13206)
!13210 = !DILocation(line: 5256, column: 3, scope: !13206)
!13211 = !DILocation(line: 5261, column: 3, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 5258, column: 7)
!13213 = !DILocation(line: 5263, column: 1, scope: !13188)
!13214 = distinct !DISubprogram(name: "RNA_struct_property_is_set", scope: !3, file: !3, line: 5265, type: !3596, scopeLine: 5266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13215 = !DILocalVariable(name: "ptr", arg: 1, scope: !13214, file: !3, line: 5265, type: !1349)
!13216 = !DILocation(line: 5265, column: 45, scope: !13214)
!13217 = !DILocalVariable(name: "identifier", arg: 2, scope: !13214, file: !3, line: 5265, type: !1031)
!13218 = !DILocation(line: 5265, column: 62, scope: !13214)
!13219 = !DILocalVariable(name: "prop", scope: !13214, file: !3, line: 5267, type: !1021)
!13220 = !DILocation(line: 5267, column: 15, scope: !13214)
!13221 = !DILocation(line: 5267, column: 47, scope: !13214)
!13222 = !DILocation(line: 5267, column: 52, scope: !13214)
!13223 = !DILocation(line: 5267, column: 22, scope: !13214)
!13224 = !DILocation(line: 5269, column: 6, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13214, file: !3, line: 5269, column: 6)
!13226 = !DILocation(line: 5269, column: 6, scope: !13214)
!13227 = !DILocation(line: 5270, column: 30, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 5269, column: 12)
!13229 = !DILocation(line: 5270, column: 35, scope: !13228)
!13230 = !DILocation(line: 5270, column: 10, scope: !13228)
!13231 = !DILocation(line: 5270, column: 3, scope: !13228)
!13232 = !DILocation(line: 5275, column: 3, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 5272, column: 7)
!13234 = !DILocation(line: 5277, column: 1, scope: !13214)
!13235 = distinct !DISubprogram(name: "RNA_struct_property_unset", scope: !3, file: !3, line: 5279, type: !12967, scopeLine: 5280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13236 = !DILocalVariable(name: "ptr", arg: 1, scope: !13235, file: !3, line: 5279, type: !1349)
!13237 = !DILocation(line: 5279, column: 44, scope: !13235)
!13238 = !DILocalVariable(name: "identifier", arg: 2, scope: !13235, file: !3, line: 5279, type: !1031)
!13239 = !DILocation(line: 5279, column: 61, scope: !13235)
!13240 = !DILocalVariable(name: "prop", scope: !13235, file: !3, line: 5281, type: !1021)
!13241 = !DILocation(line: 5281, column: 15, scope: !13235)
!13242 = !DILocation(line: 5281, column: 47, scope: !13235)
!13243 = !DILocation(line: 5281, column: 52, scope: !13235)
!13244 = !DILocation(line: 5281, column: 22, scope: !13235)
!13245 = !DILocation(line: 5283, column: 6, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13235, file: !3, line: 5283, column: 6)
!13247 = !DILocation(line: 5283, column: 6, scope: !13235)
!13248 = !DILocation(line: 5284, column: 22, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13246, file: !3, line: 5283, column: 12)
!13250 = !DILocation(line: 5284, column: 27, scope: !13249)
!13251 = !DILocation(line: 5284, column: 3, scope: !13249)
!13252 = !DILocation(line: 5285, column: 2, scope: !13249)
!13253 = !DILocation(line: 5286, column: 1, scope: !13235)
!13254 = distinct !DISubprogram(name: "RNA_property_is_idprop", scope: !3, file: !3, line: 5288, type: !4461, scopeLine: 5289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13255 = !DILocalVariable(name: "prop", arg: 1, scope: !13254, file: !3, line: 5288, type: !1021)
!13256 = !DILocation(line: 5288, column: 42, scope: !13254)
!13257 = !DILocation(line: 5290, column: 10, scope: !13254)
!13258 = !DILocation(line: 5290, column: 16, scope: !13254)
!13259 = !DILocation(line: 5290, column: 22, scope: !13254)
!13260 = !DILocation(line: 5290, column: 9, scope: !13254)
!13261 = !DILocation(line: 5290, column: 2, scope: !13254)
!13262 = distinct !DISubprogram(name: "RNA_property_is_unlink", scope: !3, file: !3, line: 5294, type: !4461, scopeLine: 5295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13263 = !DILocalVariable(name: "prop", arg: 1, scope: !13262, file: !3, line: 5294, type: !1021)
!13264 = !DILocation(line: 5294, column: 42, scope: !13262)
!13265 = !DILocalVariable(name: "flag", scope: !13262, file: !3, line: 5296, type: !2482)
!13266 = !DILocation(line: 5296, column: 12, scope: !13262)
!13267 = !DILocation(line: 5296, column: 37, scope: !13262)
!13268 = !DILocation(line: 5296, column: 19, scope: !13262)
!13269 = !DILocation(line: 5297, column: 24, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13262, file: !3, line: 5297, column: 6)
!13271 = !DILocation(line: 5297, column: 6, scope: !13270)
!13272 = !DILocation(line: 5297, column: 30, scope: !13270)
!13273 = !DILocation(line: 5297, column: 6, scope: !13262)
!13274 = !DILocation(line: 5298, column: 11, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 5297, column: 46)
!13276 = !DILocation(line: 5298, column: 16, scope: !13275)
!13277 = !DILocation(line: 5298, column: 37, scope: !13275)
!13278 = !DILocation(line: 5298, column: 10, scope: !13275)
!13279 = !DILocation(line: 5298, column: 3, scope: !13275)
!13280 = !DILocation(line: 5301, column: 11, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 5300, column: 7)
!13282 = !DILocation(line: 5301, column: 16, scope: !13281)
!13283 = !DILocation(line: 5301, column: 57, scope: !13281)
!13284 = !DILocation(line: 5301, column: 10, scope: !13281)
!13285 = !DILocation(line: 5301, column: 3, scope: !13281)
!13286 = !DILocation(line: 5303, column: 1, scope: !13262)
!13287 = distinct !DISubprogram(name: "RNA_pointer_as_string_id", scope: !3, file: !3, line: 5308, type: !13288, scopeLine: 5309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13288 = !DISubroutineType(types: !13289)
!13289 = !{!1091, !5451, !1349}
!13290 = !DILocalVariable(name: "C", arg: 1, scope: !13287, file: !3, line: 5308, type: !5451)
!13291 = !DILocation(line: 5308, column: 42, scope: !13287)
!13292 = !DILocalVariable(name: "ptr", arg: 2, scope: !13287, file: !3, line: 5308, type: !1349)
!13293 = !DILocation(line: 5308, column: 57, scope: !13287)
!13294 = !DILocalVariable(name: "dynstr", scope: !13287, file: !3, line: 5310, type: !11421)
!13295 = !DILocation(line: 5310, column: 10, scope: !13287)
!13296 = !DILocation(line: 5310, column: 19, scope: !13287)
!13297 = !DILocalVariable(name: "cstring", scope: !13287, file: !3, line: 5311, type: !1091)
!13298 = !DILocation(line: 5311, column: 8, scope: !13287)
!13299 = !DILocalVariable(name: "propname", scope: !13287, file: !3, line: 5313, type: !1031)
!13300 = !DILocation(line: 5313, column: 14, scope: !13287)
!13301 = !DILocalVariable(name: "first_time", scope: !13287, file: !3, line: 5314, type: !48)
!13302 = !DILocation(line: 5314, column: 6, scope: !13287)
!13303 = !DILocation(line: 5316, column: 20, scope: !13287)
!13304 = !DILocation(line: 5316, column: 2, scope: !13287)
!13305 = !DILocalVariable(name: "rna_macro_iter", scope: !13306, file: !3, line: 5318, type: !3774)
!13306 = distinct !DILexicalBlock(scope: !13287, file: !3, line: 5318, column: 2)
!13307 = !DILocation(line: 5318, column: 2, scope: !13306)
!13308 = !DILocation(line: 5318, column: 2, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13306, file: !3, line: 5318, column: 2)
!13310 = !DILocation(line: 5318, column: 2, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13309, file: !3, line: 5318, column: 2)
!13312 = !DILocalVariable(name: "prop", scope: !13313, file: !3, line: 5318, type: !1021)
!13313 = distinct !DILexicalBlock(scope: !13311, file: !3, line: 5318, column: 2)
!13314 = !DILocation(line: 5318, column: 2, scope: !13313)
!13315 = !DILocation(line: 5320, column: 38, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 5319, column: 2)
!13317 = !DILocation(line: 5320, column: 14, scope: !13316)
!13318 = !DILocation(line: 5320, column: 12, scope: !13316)
!13319 = !DILocation(line: 5322, column: 14, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13316, file: !3, line: 5322, column: 7)
!13321 = !DILocation(line: 5322, column: 7, scope: !13320)
!13322 = !DILocation(line: 5322, column: 36, scope: !13320)
!13323 = !DILocation(line: 5322, column: 7, scope: !13316)
!13324 = !DILocation(line: 5323, column: 4, scope: !13320)
!13325 = !DILocation(line: 5325, column: 7, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13316, file: !3, line: 5325, column: 7)
!13327 = !DILocation(line: 5325, column: 18, scope: !13326)
!13328 = !DILocation(line: 5325, column: 7, scope: !13316)
!13329 = !DILocation(line: 5326, column: 22, scope: !13326)
!13330 = !DILocation(line: 5326, column: 4, scope: !13326)
!13331 = !DILocation(line: 5327, column: 14, scope: !13316)
!13332 = !DILocation(line: 5329, column: 36, scope: !13316)
!13333 = !DILocation(line: 5329, column: 39, scope: !13316)
!13334 = !DILocation(line: 5329, column: 44, scope: !13316)
!13335 = !DILocation(line: 5329, column: 13, scope: !13316)
!13336 = !DILocation(line: 5329, column: 11, scope: !13316)
!13337 = !DILocation(line: 5330, column: 22, scope: !13316)
!13338 = !DILocation(line: 5330, column: 43, scope: !13316)
!13339 = !DILocation(line: 5330, column: 53, scope: !13316)
!13340 = !DILocation(line: 5330, column: 3, scope: !13316)
!13341 = !DILocation(line: 5331, column: 3, scope: !13316)
!13342 = !DILocation(line: 5331, column: 13, scope: !13316)
!13343 = !DILocation(line: 5333, column: 2, scope: !13313)
!13344 = distinct !{!13344, !13308, !13345}
!13345 = !DILocation(line: 5333, column: 2, scope: !13309)
!13346 = !DILocation(line: 5333, column: 2, scope: !13306)
!13347 = !DILocation(line: 5335, column: 20, scope: !13287)
!13348 = !DILocation(line: 5335, column: 2, scope: !13287)
!13349 = !DILocation(line: 5338, column: 35, scope: !13287)
!13350 = !DILocation(line: 5338, column: 12, scope: !13287)
!13351 = !DILocation(line: 5338, column: 10, scope: !13287)
!13352 = !DILocation(line: 5339, column: 18, scope: !13287)
!13353 = !DILocation(line: 5339, column: 2, scope: !13287)
!13354 = !DILocation(line: 5340, column: 9, scope: !13287)
!13355 = !DILocation(line: 5340, column: 2, scope: !13287)
!13356 = distinct !DISubprogram(name: "RNA_property_as_string", scope: !3, file: !3, line: 5478, type: !13357, scopeLine: 5479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13357 = !DISubroutineType(types: !13358)
!13358 = !{!1091, !5451, !1349, !1021, !48, !48}
!13359 = !DILocalVariable(name: "C", arg: 1, scope: !13356, file: !3, line: 5478, type: !5451)
!13360 = !DILocation(line: 5478, column: 40, scope: !13356)
!13361 = !DILocalVariable(name: "ptr", arg: 2, scope: !13356, file: !3, line: 5478, type: !1349)
!13362 = !DILocation(line: 5478, column: 55, scope: !13356)
!13363 = !DILocalVariable(name: "prop", arg: 3, scope: !13356, file: !3, line: 5478, type: !1021)
!13364 = !DILocation(line: 5478, column: 73, scope: !13356)
!13365 = !DILocalVariable(name: "index", arg: 4, scope: !13356, file: !3, line: 5478, type: !48)
!13366 = !DILocation(line: 5478, column: 83, scope: !13356)
!13367 = !DILocalVariable(name: "max_prop_length", arg: 5, scope: !13356, file: !3, line: 5478, type: !48)
!13368 = !DILocation(line: 5478, column: 94, scope: !13356)
!13369 = !DILocalVariable(name: "type", scope: !13356, file: !3, line: 5480, type: !48)
!13370 = !DILocation(line: 5480, column: 6, scope: !13356)
!13371 = !DILocation(line: 5480, column: 31, scope: !13356)
!13372 = !DILocation(line: 5480, column: 13, scope: !13356)
!13373 = !DILocalVariable(name: "len", scope: !13356, file: !3, line: 5481, type: !48)
!13374 = !DILocation(line: 5481, column: 6, scope: !13356)
!13375 = !DILocation(line: 5481, column: 38, scope: !13356)
!13376 = !DILocation(line: 5481, column: 43, scope: !13356)
!13377 = !DILocation(line: 5481, column: 12, scope: !13356)
!13378 = !DILocalVariable(name: "i", scope: !13356, file: !3, line: 5482, type: !48)
!13379 = !DILocation(line: 5482, column: 6, scope: !13356)
!13380 = !DILocalVariable(name: "dynstr", scope: !13356, file: !3, line: 5484, type: !11421)
!13381 = !DILocation(line: 5484, column: 10, scope: !13356)
!13382 = !DILocation(line: 5484, column: 19, scope: !13356)
!13383 = !DILocalVariable(name: "cstring", scope: !13356, file: !3, line: 5485, type: !1091)
!13384 = !DILocation(line: 5485, column: 8, scope: !13356)
!13385 = !DILocation(line: 5489, column: 10, scope: !13356)
!13386 = !DILocation(line: 5489, column: 2, scope: !13356)
!13387 = !DILocation(line: 5491, column: 8, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 5491, column: 8)
!13389 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 5489, column: 16)
!13390 = !DILocation(line: 5491, column: 12, scope: !13388)
!13391 = !DILocation(line: 5491, column: 8, scope: !13389)
!13392 = !DILocation(line: 5492, column: 23, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13388, file: !3, line: 5491, column: 18)
!13394 = !DILocation(line: 5492, column: 74, scope: !13393)
!13395 = !DILocation(line: 5492, column: 79, scope: !13393)
!13396 = !DILocation(line: 5492, column: 49, scope: !13393)
!13397 = !DILocation(line: 5492, column: 31, scope: !13393)
!13398 = !DILocation(line: 5492, column: 5, scope: !13393)
!13399 = !DILocation(line: 5493, column: 4, scope: !13393)
!13400 = !DILocation(line: 5495, column: 9, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13402, file: !3, line: 5495, column: 9)
!13402 = distinct !DILexicalBlock(scope: !13388, file: !3, line: 5494, column: 9)
!13403 = !DILocation(line: 5495, column: 15, scope: !13401)
!13404 = !DILocation(line: 5495, column: 9, scope: !13402)
!13405 = !DILocation(line: 5496, column: 24, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13401, file: !3, line: 5495, column: 22)
!13407 = !DILocation(line: 5496, column: 81, scope: !13406)
!13408 = !DILocation(line: 5496, column: 86, scope: !13406)
!13409 = !DILocation(line: 5496, column: 92, scope: !13406)
!13410 = !DILocation(line: 5496, column: 50, scope: !13406)
!13411 = !DILocation(line: 5496, column: 32, scope: !13406)
!13412 = !DILocation(line: 5496, column: 6, scope: !13406)
!13413 = !DILocation(line: 5497, column: 5, scope: !13406)
!13414 = !DILocation(line: 5499, column: 24, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !13401, file: !3, line: 5498, column: 10)
!13416 = !DILocation(line: 5499, column: 6, scope: !13415)
!13417 = !DILocation(line: 5500, column: 13, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 5500, column: 6)
!13419 = !DILocation(line: 5500, column: 11, scope: !13418)
!13420 = !DILocation(line: 5500, column: 18, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13418, file: !3, line: 5500, column: 6)
!13422 = !DILocation(line: 5500, column: 22, scope: !13421)
!13423 = !DILocation(line: 5500, column: 20, scope: !13421)
!13424 = !DILocation(line: 5500, column: 6, scope: !13418)
!13425 = !DILocation(line: 5501, column: 26, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 5500, column: 32)
!13427 = !DILocation(line: 5501, column: 34, scope: !13426)
!13428 = !DILocation(line: 5502, column: 75, scope: !13426)
!13429 = !DILocation(line: 5502, column: 80, scope: !13426)
!13430 = !DILocation(line: 5502, column: 86, scope: !13426)
!13431 = !DILocation(line: 5502, column: 44, scope: !13426)
!13432 = !DILocation(line: 5502, column: 26, scope: !13426)
!13433 = !DILocation(line: 5501, column: 7, scope: !13426)
!13434 = !DILocation(line: 5503, column: 6, scope: !13426)
!13435 = !DILocation(line: 5500, column: 28, scope: !13421)
!13436 = !DILocation(line: 5500, column: 6, scope: !13421)
!13437 = distinct !{!13437, !13424, !13438}
!13438 = !DILocation(line: 5503, column: 6, scope: !13418)
!13439 = !DILocation(line: 5504, column: 10, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13415, file: !3, line: 5504, column: 10)
!13441 = !DILocation(line: 5504, column: 14, scope: !13440)
!13442 = !DILocation(line: 5504, column: 10, scope: !13415)
!13443 = !DILocation(line: 5505, column: 25, scope: !13440)
!13444 = !DILocation(line: 5505, column: 7, scope: !13440)
!13445 = !DILocation(line: 5506, column: 24, scope: !13415)
!13446 = !DILocation(line: 5506, column: 6, scope: !13415)
!13447 = !DILocation(line: 5509, column: 4, scope: !13389)
!13448 = !DILocation(line: 5511, column: 8, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 5511, column: 8)
!13450 = !DILocation(line: 5511, column: 12, scope: !13449)
!13451 = !DILocation(line: 5511, column: 8, scope: !13389)
!13452 = !DILocation(line: 5512, column: 24, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 5511, column: 18)
!13454 = !DILocation(line: 5512, column: 59, scope: !13453)
!13455 = !DILocation(line: 5512, column: 64, scope: !13453)
!13456 = !DILocation(line: 5512, column: 38, scope: !13453)
!13457 = !DILocation(line: 5512, column: 5, scope: !13453)
!13458 = !DILocation(line: 5513, column: 4, scope: !13453)
!13459 = !DILocation(line: 5515, column: 9, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13461, file: !3, line: 5515, column: 9)
!13461 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 5514, column: 9)
!13462 = !DILocation(line: 5515, column: 15, scope: !13460)
!13463 = !DILocation(line: 5515, column: 9, scope: !13461)
!13464 = !DILocation(line: 5516, column: 25, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13460, file: !3, line: 5515, column: 22)
!13466 = !DILocation(line: 5516, column: 66, scope: !13465)
!13467 = !DILocation(line: 5516, column: 71, scope: !13465)
!13468 = !DILocation(line: 5516, column: 77, scope: !13465)
!13469 = !DILocation(line: 5516, column: 39, scope: !13465)
!13470 = !DILocation(line: 5516, column: 6, scope: !13465)
!13471 = !DILocation(line: 5517, column: 5, scope: !13465)
!13472 = !DILocation(line: 5519, column: 24, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13460, file: !3, line: 5518, column: 10)
!13474 = !DILocation(line: 5519, column: 6, scope: !13473)
!13475 = !DILocation(line: 5520, column: 13, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 5520, column: 6)
!13477 = !DILocation(line: 5520, column: 11, scope: !13476)
!13478 = !DILocation(line: 5520, column: 18, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13476, file: !3, line: 5520, column: 6)
!13480 = !DILocation(line: 5520, column: 22, scope: !13479)
!13481 = !DILocation(line: 5520, column: 20, scope: !13479)
!13482 = !DILocation(line: 5520, column: 6, scope: !13476)
!13483 = !DILocation(line: 5521, column: 26, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 5520, column: 32)
!13485 = !DILocation(line: 5521, column: 34, scope: !13484)
!13486 = !DILocation(line: 5521, column: 80, scope: !13484)
!13487 = !DILocation(line: 5521, column: 85, scope: !13484)
!13488 = !DILocation(line: 5521, column: 91, scope: !13484)
!13489 = !DILocation(line: 5521, column: 53, scope: !13484)
!13490 = !DILocation(line: 5521, column: 7, scope: !13484)
!13491 = !DILocation(line: 5522, column: 6, scope: !13484)
!13492 = !DILocation(line: 5520, column: 28, scope: !13479)
!13493 = !DILocation(line: 5520, column: 6, scope: !13479)
!13494 = distinct !{!13494, !13482, !13495}
!13495 = !DILocation(line: 5522, column: 6, scope: !13476)
!13496 = !DILocation(line: 5523, column: 10, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 5523, column: 10)
!13498 = !DILocation(line: 5523, column: 14, scope: !13497)
!13499 = !DILocation(line: 5523, column: 10, scope: !13473)
!13500 = !DILocation(line: 5524, column: 25, scope: !13497)
!13501 = !DILocation(line: 5524, column: 7, scope: !13497)
!13502 = !DILocation(line: 5525, column: 24, scope: !13473)
!13503 = !DILocation(line: 5525, column: 6, scope: !13473)
!13504 = !DILocation(line: 5528, column: 4, scope: !13389)
!13505 = !DILocation(line: 5530, column: 8, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 5530, column: 8)
!13507 = !DILocation(line: 5530, column: 12, scope: !13506)
!13508 = !DILocation(line: 5530, column: 8, scope: !13389)
!13509 = !DILocation(line: 5531, column: 24, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13506, file: !3, line: 5530, column: 18)
!13511 = !DILocation(line: 5531, column: 61, scope: !13510)
!13512 = !DILocation(line: 5531, column: 66, scope: !13510)
!13513 = !DILocation(line: 5531, column: 38, scope: !13510)
!13514 = !DILocation(line: 5531, column: 5, scope: !13510)
!13515 = !DILocation(line: 5532, column: 4, scope: !13510)
!13516 = !DILocation(line: 5534, column: 9, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13518, file: !3, line: 5534, column: 9)
!13518 = distinct !DILexicalBlock(scope: !13506, file: !3, line: 5533, column: 9)
!13519 = !DILocation(line: 5534, column: 15, scope: !13517)
!13520 = !DILocation(line: 5534, column: 9, scope: !13518)
!13521 = !DILocation(line: 5535, column: 25, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13517, file: !3, line: 5534, column: 22)
!13523 = !DILocation(line: 5535, column: 68, scope: !13522)
!13524 = !DILocation(line: 5535, column: 73, scope: !13522)
!13525 = !DILocation(line: 5535, column: 79, scope: !13522)
!13526 = !DILocation(line: 5535, column: 39, scope: !13522)
!13527 = !DILocation(line: 5535, column: 6, scope: !13522)
!13528 = !DILocation(line: 5536, column: 5, scope: !13522)
!13529 = !DILocation(line: 5538, column: 24, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13517, file: !3, line: 5537, column: 10)
!13531 = !DILocation(line: 5538, column: 6, scope: !13530)
!13532 = !DILocation(line: 5539, column: 13, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 5539, column: 6)
!13534 = !DILocation(line: 5539, column: 11, scope: !13533)
!13535 = !DILocation(line: 5539, column: 18, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13533, file: !3, line: 5539, column: 6)
!13537 = !DILocation(line: 5539, column: 22, scope: !13536)
!13538 = !DILocation(line: 5539, column: 20, scope: !13536)
!13539 = !DILocation(line: 5539, column: 6, scope: !13533)
!13540 = !DILocation(line: 5540, column: 26, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13536, file: !3, line: 5539, column: 32)
!13542 = !DILocation(line: 5540, column: 34, scope: !13541)
!13543 = !DILocation(line: 5540, column: 82, scope: !13541)
!13544 = !DILocation(line: 5540, column: 87, scope: !13541)
!13545 = !DILocation(line: 5540, column: 93, scope: !13541)
!13546 = !DILocation(line: 5540, column: 53, scope: !13541)
!13547 = !DILocation(line: 5540, column: 7, scope: !13541)
!13548 = !DILocation(line: 5541, column: 6, scope: !13541)
!13549 = !DILocation(line: 5539, column: 28, scope: !13536)
!13550 = !DILocation(line: 5539, column: 6, scope: !13536)
!13551 = distinct !{!13551, !13539, !13552}
!13552 = !DILocation(line: 5541, column: 6, scope: !13533)
!13553 = !DILocation(line: 5542, column: 10, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 5542, column: 10)
!13555 = !DILocation(line: 5542, column: 14, scope: !13554)
!13556 = !DILocation(line: 5542, column: 10, scope: !13530)
!13557 = !DILocation(line: 5543, column: 25, scope: !13554)
!13558 = !DILocation(line: 5543, column: 7, scope: !13554)
!13559 = !DILocation(line: 5544, column: 24, scope: !13530)
!13560 = !DILocation(line: 5544, column: 6, scope: !13530)
!13561 = !DILocation(line: 5547, column: 4, scope: !13389)
!13562 = !DILocalVariable(name: "buf_esc", scope: !13563, file: !3, line: 5550, type: !1091)
!13563 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 5549, column: 3)
!13564 = !DILocation(line: 5550, column: 10, scope: !13563)
!13565 = !DILocalVariable(name: "buf", scope: !13563, file: !3, line: 5551, type: !1091)
!13566 = !DILocation(line: 5551, column: 10, scope: !13563)
!13567 = !DILocalVariable(name: "length", scope: !13563, file: !3, line: 5552, type: !48)
!13568 = !DILocation(line: 5552, column: 8, scope: !13563)
!13569 = !DILocation(line: 5554, column: 40, scope: !13563)
!13570 = !DILocation(line: 5554, column: 45, scope: !13563)
!13571 = !DILocation(line: 5554, column: 13, scope: !13563)
!13572 = !DILocation(line: 5554, column: 11, scope: !13563)
!13573 = !DILocation(line: 5555, column: 10, scope: !13563)
!13574 = !DILocation(line: 5555, column: 38, scope: !13563)
!13575 = !DILocation(line: 5555, column: 45, scope: !13563)
!13576 = !DILocation(line: 5555, column: 37, scope: !13563)
!13577 = !DILocation(line: 5555, column: 35, scope: !13563)
!13578 = !DILocation(line: 5555, column: 8, scope: !13563)
!13579 = !DILocation(line: 5556, column: 14, scope: !13563)
!13580 = !DILocation(line: 5556, column: 42, scope: !13563)
!13581 = !DILocation(line: 5556, column: 49, scope: !13563)
!13582 = !DILocation(line: 5556, column: 53, scope: !13563)
!13583 = !DILocation(line: 5556, column: 41, scope: !13563)
!13584 = !DILocation(line: 5556, column: 39, scope: !13563)
!13585 = !DILocation(line: 5556, column: 12, scope: !13563)
!13586 = !DILocation(line: 5557, column: 28, scope: !13563)
!13587 = !DILocation(line: 5557, column: 33, scope: !13563)
!13588 = !DILocation(line: 5557, column: 39, scope: !13563)
!13589 = !DILocation(line: 5557, column: 4, scope: !13563)
!13590 = !DILocation(line: 5558, column: 18, scope: !13563)
!13591 = !DILocation(line: 5558, column: 27, scope: !13563)
!13592 = !DILocation(line: 5558, column: 32, scope: !13563)
!13593 = !DILocation(line: 5558, column: 39, scope: !13563)
!13594 = !DILocation(line: 5558, column: 43, scope: !13563)
!13595 = !DILocation(line: 5558, column: 4, scope: !13563)
!13596 = !DILocation(line: 5559, column: 4, scope: !13563)
!13597 = !DILocation(line: 5559, column: 14, scope: !13563)
!13598 = !DILocation(line: 5560, column: 23, scope: !13563)
!13599 = !DILocation(line: 5560, column: 41, scope: !13563)
!13600 = !DILocation(line: 5560, column: 4, scope: !13563)
!13601 = !DILocation(line: 5561, column: 4, scope: !13563)
!13602 = !DILocation(line: 5561, column: 14, scope: !13563)
!13603 = !DILocation(line: 5562, column: 4, scope: !13563)
!13604 = !DILocalVariable(name: "identifier", scope: !13605, file: !3, line: 5567, type: !1031)
!13605 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 5565, column: 3)
!13606 = !DILocation(line: 5567, column: 16, scope: !13605)
!13607 = !DILocalVariable(name: "val", scope: !13605, file: !3, line: 5568, type: !48)
!13608 = !DILocation(line: 5568, column: 8, scope: !13605)
!13609 = !DILocation(line: 5568, column: 36, scope: !13605)
!13610 = !DILocation(line: 5568, column: 41, scope: !13605)
!13611 = !DILocation(line: 5568, column: 14, scope: !13605)
!13612 = !DILocation(line: 5570, column: 26, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13605, file: !3, line: 5570, column: 8)
!13614 = !DILocation(line: 5570, column: 8, scope: !13613)
!13615 = !DILocation(line: 5570, column: 32, scope: !13613)
!13616 = !DILocation(line: 5570, column: 8, scope: !13605)
!13617 = !DILocation(line: 5572, column: 9, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 5572, column: 9)
!13619 = distinct !DILexicalBlock(scope: !13613, file: !3, line: 5570, column: 50)
!13620 = !DILocation(line: 5572, column: 9, scope: !13619)
!13621 = !DILocalVariable(name: "item_array", scope: !13622, file: !3, line: 5573, type: !2742)
!13622 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 5572, column: 14)
!13623 = !DILocation(line: 5573, column: 24, scope: !13622)
!13624 = !DILocalVariable(name: "free", scope: !13622, file: !3, line: 5574, type: !1381)
!13625 = !DILocation(line: 5574, column: 11, scope: !13622)
!13626 = !DILocation(line: 5576, column: 24, scope: !13622)
!13627 = !DILocation(line: 5576, column: 6, scope: !13622)
!13628 = !DILocation(line: 5578, column: 30, scope: !13622)
!13629 = !DILocation(line: 5578, column: 33, scope: !13622)
!13630 = !DILocation(line: 5578, column: 38, scope: !13622)
!13631 = !DILocation(line: 5578, column: 6, scope: !13622)
!13632 = !DILocation(line: 5579, column: 10, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13622, file: !3, line: 5579, column: 10)
!13634 = !DILocation(line: 5579, column: 10, scope: !13622)
!13635 = !DILocalVariable(name: "item", scope: !13636, file: !3, line: 5580, type: !2742)
!13636 = distinct !DILexicalBlock(scope: !13633, file: !3, line: 5579, column: 22)
!13637 = !DILocation(line: 5580, column: 25, scope: !13636)
!13638 = !DILocation(line: 5580, column: 32, scope: !13636)
!13639 = !DILocalVariable(name: "is_first", scope: !13636, file: !3, line: 5581, type: !1381)
!13640 = !DILocation(line: 5581, column: 12, scope: !13636)
!13641 = !DILocation(line: 5582, column: 7, scope: !13636)
!13642 = !DILocation(line: 5582, column: 14, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 5582, column: 7)
!13644 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 5582, column: 7)
!13645 = !DILocation(line: 5582, column: 20, scope: !13643)
!13646 = !DILocation(line: 5582, column: 7, scope: !13644)
!13647 = !DILocation(line: 5583, column: 12, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 5583, column: 12)
!13649 = distinct !DILexicalBlock(scope: !13643, file: !3, line: 5582, column: 40)
!13650 = !DILocation(line: 5583, column: 18, scope: !13648)
!13651 = !DILocation(line: 5583, column: 32, scope: !13648)
!13652 = !DILocation(line: 5583, column: 35, scope: !13648)
!13653 = !DILocation(line: 5583, column: 41, scope: !13648)
!13654 = !DILocation(line: 5583, column: 49, scope: !13648)
!13655 = !DILocation(line: 5583, column: 47, scope: !13648)
!13656 = !DILocation(line: 5583, column: 12, scope: !13649)
!13657 = !DILocation(line: 5584, column: 28, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13648, file: !3, line: 5583, column: 54)
!13659 = !DILocation(line: 5584, column: 36, scope: !13658)
!13660 = !DILocation(line: 5584, column: 66, scope: !13658)
!13661 = !DILocation(line: 5584, column: 72, scope: !13658)
!13662 = !DILocation(line: 5584, column: 9, scope: !13658)
!13663 = !DILocation(line: 5585, column: 18, scope: !13658)
!13664 = !DILocation(line: 5586, column: 8, scope: !13658)
!13665 = !DILocation(line: 5587, column: 7, scope: !13649)
!13666 = !DILocation(line: 5582, column: 36, scope: !13643)
!13667 = !DILocation(line: 5582, column: 7, scope: !13643)
!13668 = distinct !{!13668, !13646, !13669}
!13669 = !DILocation(line: 5587, column: 7, scope: !13644)
!13670 = !DILocation(line: 5589, column: 11, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 5589, column: 11)
!13672 = !DILocation(line: 5589, column: 11, scope: !13636)
!13673 = !DILocation(line: 5590, column: 8, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13671, file: !3, line: 5589, column: 17)
!13675 = !DILocation(line: 5590, column: 18, scope: !13674)
!13676 = !DILocation(line: 5591, column: 7, scope: !13674)
!13677 = !DILocation(line: 5592, column: 6, scope: !13636)
!13678 = !DILocation(line: 5594, column: 24, scope: !13622)
!13679 = !DILocation(line: 5594, column: 6, scope: !13622)
!13680 = !DILocation(line: 5595, column: 5, scope: !13622)
!13681 = !DILocation(line: 5598, column: 24, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 5596, column: 10)
!13683 = !DILocation(line: 5598, column: 6, scope: !13682)
!13684 = !DILocation(line: 5600, column: 4, scope: !13619)
!13685 = !DILocation(line: 5601, column: 42, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13613, file: !3, line: 5601, column: 13)
!13687 = !DILocation(line: 5601, column: 45, scope: !13686)
!13688 = !DILocation(line: 5601, column: 50, scope: !13686)
!13689 = !DILocation(line: 5601, column: 56, scope: !13686)
!13690 = !DILocation(line: 5601, column: 13, scope: !13686)
!13691 = !DILocation(line: 5601, column: 13, scope: !13613)
!13692 = !DILocation(line: 5602, column: 24, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 5601, column: 75)
!13694 = !DILocation(line: 5602, column: 40, scope: !13693)
!13695 = !DILocation(line: 5602, column: 5, scope: !13693)
!13696 = !DILocation(line: 5603, column: 4, scope: !13693)
!13697 = !DILocation(line: 5605, column: 23, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 5604, column: 9)
!13699 = !DILocation(line: 5605, column: 5, scope: !13698)
!13700 = !DILocation(line: 5607, column: 4, scope: !13605)
!13701 = !DILocalVariable(name: "tptr", scope: !13702, file: !3, line: 5611, type: !1350)
!13702 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 5610, column: 3)
!13703 = !DILocation(line: 5611, column: 15, scope: !13702)
!13704 = !DILocation(line: 5611, column: 47, scope: !13702)
!13705 = !DILocation(line: 5611, column: 52, scope: !13702)
!13706 = !DILocation(line: 5611, column: 22, scope: !13702)
!13707 = !DILocation(line: 5612, column: 36, scope: !13702)
!13708 = !DILocation(line: 5612, column: 39, scope: !13702)
!13709 = !DILocation(line: 5612, column: 44, scope: !13702)
!13710 = !DILocation(line: 5612, column: 14, scope: !13702)
!13711 = !DILocation(line: 5612, column: 12, scope: !13702)
!13712 = !DILocation(line: 5613, column: 22, scope: !13702)
!13713 = !DILocation(line: 5613, column: 30, scope: !13702)
!13714 = !DILocation(line: 5613, column: 4, scope: !13702)
!13715 = !DILocation(line: 5614, column: 4, scope: !13702)
!13716 = !DILocation(line: 5614, column: 14, scope: !13702)
!13717 = !DILocation(line: 5615, column: 4, scope: !13702)
!13718 = !DILocalVariable(name: "i", scope: !13719, file: !3, line: 5619, type: !48)
!13719 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 5618, column: 3)
!13720 = !DILocation(line: 5619, column: 8, scope: !13719)
!13721 = !DILocalVariable(name: "collect_iter", scope: !13719, file: !3, line: 5620, type: !3774)
!13722 = !DILocation(line: 5620, column: 31, scope: !13719)
!13723 = !DILocation(line: 5621, column: 22, scope: !13719)
!13724 = !DILocation(line: 5621, column: 4, scope: !13719)
!13725 = !DILocation(line: 5623, column: 39, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13719, file: !3, line: 5623, column: 4)
!13727 = !DILocation(line: 5623, column: 44, scope: !13726)
!13728 = !DILocation(line: 5623, column: 9, scope: !13726)
!13729 = !DILocation(line: 5624, column: 10, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 5623, column: 4)
!13731 = !DILocation(line: 5624, column: 14, scope: !13730)
!13732 = !DILocation(line: 5624, column: 12, scope: !13730)
!13733 = !DILocation(line: 5624, column: 31, scope: !13730)
!13734 = !DILocation(line: 5624, column: 47, scope: !13730)
!13735 = !DILocation(line: 0, scope: !13730)
!13736 = !DILocation(line: 5623, column: 4, scope: !13726)
!13737 = !DILocalVariable(name: "itemptr", scope: !13738, file: !3, line: 5627, type: !1350)
!13738 = distinct !DILexicalBlock(scope: !13730, file: !3, line: 5626, column: 4)
!13739 = !DILocation(line: 5627, column: 16, scope: !13738)
!13740 = !DILocation(line: 5627, column: 39, scope: !13738)
!13741 = !DILocation(line: 5629, column: 9, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 5629, column: 9)
!13743 = !DILocation(line: 5629, column: 11, scope: !13742)
!13744 = !DILocation(line: 5629, column: 9, scope: !13738)
!13745 = !DILocation(line: 5630, column: 24, scope: !13742)
!13746 = !DILocation(line: 5630, column: 6, scope: !13742)
!13747 = !DILocation(line: 5633, column: 37, scope: !13738)
!13748 = !DILocation(line: 5633, column: 40, scope: !13738)
!13749 = !DILocation(line: 5633, column: 45, scope: !13738)
!13750 = !DILocation(line: 5633, column: 15, scope: !13738)
!13751 = !DILocation(line: 5633, column: 13, scope: !13738)
!13752 = !DILocation(line: 5634, column: 23, scope: !13738)
!13753 = !DILocation(line: 5634, column: 31, scope: !13738)
!13754 = !DILocation(line: 5634, column: 5, scope: !13738)
!13755 = !DILocation(line: 5635, column: 5, scope: !13738)
!13756 = !DILocation(line: 5635, column: 15, scope: !13738)
!13757 = !DILocation(line: 5636, column: 4, scope: !13738)
!13758 = !DILocation(line: 5625, column: 9, scope: !13730)
!13759 = !DILocation(line: 5625, column: 55, scope: !13730)
!13760 = !DILocation(line: 5623, column: 4, scope: !13730)
!13761 = distinct !{!13761, !13736, !13762}
!13762 = !DILocation(line: 5636, column: 4, scope: !13726)
!13763 = !DILocation(line: 5638, column: 4, scope: !13719)
!13764 = !DILocation(line: 5639, column: 22, scope: !13719)
!13765 = !DILocation(line: 5639, column: 4, scope: !13719)
!13766 = !DILocation(line: 5640, column: 4, scope: !13719)
!13767 = !DILocation(line: 5643, column: 22, scope: !13389)
!13768 = !DILocation(line: 5643, column: 4, scope: !13389)
!13769 = !DILocation(line: 5644, column: 4, scope: !13389)
!13770 = !DILocation(line: 5647, column: 35, scope: !13356)
!13771 = !DILocation(line: 5647, column: 12, scope: !13356)
!13772 = !DILocation(line: 5647, column: 10, scope: !13356)
!13773 = !DILocation(line: 5648, column: 18, scope: !13356)
!13774 = !DILocation(line: 5648, column: 2, scope: !13356)
!13775 = !DILocation(line: 5649, column: 9, scope: !13356)
!13776 = !DILocation(line: 5649, column: 2, scope: !13356)
!13777 = distinct !DISubprogram(name: "RNA_pointer_as_string", scope: !3, file: !3, line: 5356, type: !13778, scopeLine: 5357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13778 = !DISubroutineType(types: !13779)
!13779 = !{!1091, !5451, !1349, !1021, !1349}
!13780 = !DILocalVariable(name: "C", arg: 1, scope: !13777, file: !3, line: 5356, type: !5451)
!13781 = !DILocation(line: 5356, column: 39, scope: !13777)
!13782 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !13777, file: !3, line: 5356, type: !1349)
!13783 = !DILocation(line: 5356, column: 54, scope: !13777)
!13784 = !DILocalVariable(name: "prop_ptr", arg: 3, scope: !13777, file: !3, line: 5356, type: !1021)
!13785 = !DILocation(line: 5356, column: 80, scope: !13777)
!13786 = !DILocalVariable(name: "ptr_prop", arg: 4, scope: !13777, file: !3, line: 5356, type: !1349)
!13787 = !DILocation(line: 5356, column: 102, scope: !13777)
!13788 = !DILocation(line: 5358, column: 24, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13777, file: !3, line: 5358, column: 6)
!13790 = !DILocation(line: 5358, column: 6, scope: !13789)
!13791 = !DILocation(line: 5358, column: 34, scope: !13789)
!13792 = !DILocation(line: 5358, column: 6, scope: !13777)
!13793 = !DILocation(line: 5359, column: 35, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 5358, column: 53)
!13795 = !DILocation(line: 5359, column: 38, scope: !13794)
!13796 = !DILocation(line: 5359, column: 10, scope: !13794)
!13797 = !DILocation(line: 5359, column: 3, scope: !13794)
!13798 = !DILocation(line: 5362, column: 40, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 5361, column: 7)
!13800 = !DILocation(line: 5362, column: 10, scope: !13799)
!13801 = !DILocation(line: 5362, column: 3, scope: !13799)
!13802 = !DILocation(line: 5364, column: 1, scope: !13777)
!13803 = distinct !DISubprogram(name: "rna_pointer_as_string__bldata", scope: !3, file: !3, line: 5343, type: !11837, scopeLine: 5344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13804 = !DILocalVariable(name: "ptr", arg: 1, scope: !13803, file: !3, line: 5343, type: !1349)
!13805 = !DILocation(line: 5343, column: 56, scope: !13803)
!13806 = !DILocation(line: 5345, column: 6, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13803, file: !3, line: 5345, column: 6)
!13808 = !DILocation(line: 5345, column: 11, scope: !13807)
!13809 = !DILocation(line: 5345, column: 16, scope: !13807)
!13810 = !DILocation(line: 5345, column: 6, scope: !13803)
!13811 = !DILocation(line: 5346, column: 10, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 5345, column: 25)
!13813 = !DILocation(line: 5346, column: 3, scope: !13812)
!13814 = !DILocation(line: 5348, column: 28, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 5348, column: 11)
!13816 = !DILocation(line: 5348, column: 33, scope: !13815)
!13817 = !DILocation(line: 5348, column: 11, scope: !13815)
!13818 = !DILocation(line: 5348, column: 11, scope: !13807)
!13819 = !DILocation(line: 5349, column: 30, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13815, file: !3, line: 5348, column: 40)
!13821 = !DILocation(line: 5349, column: 35, scope: !13820)
!13822 = !DILocation(line: 5349, column: 38, scope: !13820)
!13823 = !DILocation(line: 5349, column: 10, scope: !13820)
!13824 = !DILocation(line: 5349, column: 3, scope: !13820)
!13825 = !DILocation(line: 5352, column: 34, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13815, file: !3, line: 5351, column: 7)
!13827 = !DILocation(line: 5352, column: 10, scope: !13826)
!13828 = !DILocation(line: 5352, column: 3, scope: !13826)
!13829 = !DILocation(line: 5354, column: 1, scope: !13803)
!13830 = distinct !DISubprogram(name: "RNA_pointer_as_string_keywords_ex", scope: !3, file: !3, line: 5367, type: !13831, scopeLine: 5371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13831 = !DISubroutineType(types: !13832)
!13832 = !{!1091, !5451, !1349, !6433, !6433, !6433, !2482, !1021}
!13833 = !DILocalVariable(name: "C", arg: 1, scope: !13830, file: !3, line: 5367, type: !5451)
!13834 = !DILocation(line: 5367, column: 51, scope: !13830)
!13835 = !DILocalVariable(name: "ptr", arg: 2, scope: !13830, file: !3, line: 5367, type: !1349)
!13836 = !DILocation(line: 5367, column: 66, scope: !13830)
!13837 = !DILocalVariable(name: "as_function", arg: 3, scope: !13830, file: !3, line: 5368, type: !6433)
!13838 = !DILocation(line: 5368, column: 52, scope: !13830)
!13839 = !DILocalVariable(name: "all_args", arg: 4, scope: !13830, file: !3, line: 5368, type: !6433)
!13840 = !DILocation(line: 5368, column: 76, scope: !13830)
!13841 = !DILocalVariable(name: "nested_args", arg: 5, scope: !13830, file: !3, line: 5368, type: !6433)
!13842 = !DILocation(line: 5368, column: 97, scope: !13830)
!13843 = !DILocalVariable(name: "max_prop_length", arg: 6, scope: !13830, file: !3, line: 5369, type: !2482)
!13844 = !DILocation(line: 5369, column: 51, scope: !13830)
!13845 = !DILocalVariable(name: "iterprop", arg: 7, scope: !13830, file: !3, line: 5370, type: !1021)
!13846 = !DILocation(line: 5370, column: 54, scope: !13830)
!13847 = !DILocalVariable(name: "arg_name", scope: !13830, file: !3, line: 5372, type: !1031)
!13848 = !DILocation(line: 5372, column: 14, scope: !13830)
!13849 = !DILocalVariable(name: "prop", scope: !13830, file: !3, line: 5374, type: !1021)
!13850 = !DILocation(line: 5374, column: 15, scope: !13830)
!13851 = !DILocalVariable(name: "dynstr", scope: !13830, file: !3, line: 5376, type: !11421)
!13852 = !DILocation(line: 5376, column: 10, scope: !13830)
!13853 = !DILocation(line: 5376, column: 19, scope: !13830)
!13854 = !DILocalVariable(name: "cstring", scope: !13830, file: !3, line: 5377, type: !1091)
!13855 = !DILocation(line: 5377, column: 8, scope: !13830)
!13856 = !DILocalVariable(name: "buf", scope: !13830, file: !3, line: 5377, type: !1091)
!13857 = !DILocation(line: 5377, column: 18, scope: !13830)
!13858 = !DILocalVariable(name: "first_iter", scope: !13830, file: !3, line: 5378, type: !1381)
!13859 = !DILocation(line: 5378, column: 7, scope: !13830)
!13860 = !DILocalVariable(name: "flag", scope: !13830, file: !3, line: 5379, type: !48)
!13861 = !DILocation(line: 5379, column: 6, scope: !13830)
!13862 = !DILocalVariable(name: "rna_macro_iter", scope: !13863, file: !3, line: 5381, type: !3774)
!13863 = distinct !DILexicalBlock(scope: !13830, file: !3, line: 5381, column: 2)
!13864 = !DILocation(line: 5381, column: 2, scope: !13863)
!13865 = !DILocation(line: 5381, column: 2, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13863, file: !3, line: 5381, column: 2)
!13867 = !DILocation(line: 5381, column: 2, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13866, file: !3, line: 5381, column: 2)
!13869 = !DILocalVariable(name: "propptr", scope: !13870, file: !3, line: 5381, type: !1350)
!13870 = distinct !DILexicalBlock(scope: !13868, file: !3, line: 5381, column: 2)
!13871 = !DILocation(line: 5381, column: 2, scope: !13870)
!13872 = !DILocation(line: 5383, column: 18, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13870, file: !3, line: 5382, column: 2)
!13874 = !DILocation(line: 5383, column: 10, scope: !13873)
!13875 = !DILocation(line: 5383, column: 8, scope: !13873)
!13876 = !DILocation(line: 5385, column: 28, scope: !13873)
!13877 = !DILocation(line: 5385, column: 10, scope: !13873)
!13878 = !DILocation(line: 5385, column: 8, scope: !13873)
!13879 = !DILocation(line: 5387, column: 7, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13873, file: !3, line: 5387, column: 7)
!13881 = !DILocation(line: 5387, column: 19, scope: !13880)
!13882 = !DILocation(line: 5387, column: 23, scope: !13880)
!13883 = !DILocation(line: 5387, column: 28, scope: !13880)
!13884 = !DILocation(line: 5387, column: 7, scope: !13873)
!13885 = !DILocation(line: 5388, column: 4, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13880, file: !3, line: 5387, column: 44)
!13887 = !DILocation(line: 5391, column: 38, scope: !13873)
!13888 = !DILocation(line: 5391, column: 14, scope: !13873)
!13889 = !DILocation(line: 5391, column: 12, scope: !13873)
!13890 = !DILocation(line: 5393, column: 14, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13873, file: !3, line: 5393, column: 7)
!13892 = !DILocation(line: 5393, column: 7, scope: !13891)
!13893 = !DILocation(line: 5393, column: 36, scope: !13891)
!13894 = !DILocation(line: 5393, column: 7, scope: !13873)
!13895 = !DILocation(line: 5394, column: 4, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13891, file: !3, line: 5393, column: 42)
!13897 = !DILocation(line: 5397, column: 8, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13873, file: !3, line: 5397, column: 7)
!13899 = !DILocation(line: 5397, column: 20, scope: !13898)
!13900 = !DILocation(line: 5397, column: 30, scope: !13898)
!13901 = !DILocation(line: 5397, column: 52, scope: !13898)
!13902 = !DILocation(line: 5397, column: 34, scope: !13898)
!13903 = !DILocation(line: 5397, column: 58, scope: !13898)
!13904 = !DILocation(line: 5397, column: 7, scope: !13873)
!13905 = !DILocation(line: 5398, column: 4, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 5397, column: 76)
!13907 = !DILocation(line: 5401, column: 7, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13873, file: !3, line: 5401, column: 7)
!13909 = !DILocation(line: 5401, column: 19, scope: !13908)
!13910 = !DILocation(line: 5401, column: 23, scope: !13908)
!13911 = !DILocation(line: 5401, column: 28, scope: !13908)
!13912 = !DILocation(line: 5401, column: 7, scope: !13873)
!13913 = !DILocation(line: 5403, column: 23, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13908, file: !3, line: 5401, column: 46)
!13915 = !DILocation(line: 5403, column: 31, scope: !13914)
!13916 = !DILocation(line: 5403, column: 59, scope: !13914)
!13917 = !DILocation(line: 5403, column: 4, scope: !13914)
!13918 = !DILocation(line: 5404, column: 15, scope: !13914)
!13919 = !DILocation(line: 5405, column: 3, scope: !13914)
!13920 = !DILocalVariable(name: "ok", scope: !13921, file: !3, line: 5407, type: !1381)
!13921 = distinct !DILexicalBlock(scope: !13908, file: !3, line: 5406, column: 8)
!13922 = !DILocation(line: 5407, column: 9, scope: !13921)
!13923 = !DILocation(line: 5409, column: 8, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 5409, column: 8)
!13925 = !DILocation(line: 5409, column: 17, scope: !13924)
!13926 = !DILocation(line: 5409, column: 8, scope: !13921)
!13927 = !DILocation(line: 5411, column: 4, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 5409, column: 26)
!13929 = !DILocation(line: 5412, column: 38, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 5412, column: 13)
!13931 = !DILocation(line: 5412, column: 43, scope: !13930)
!13932 = !DILocation(line: 5412, column: 13, scope: !13930)
!13933 = !DILocation(line: 5412, column: 13, scope: !13924)
!13934 = !DILocation(line: 5413, column: 30, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13930, file: !3, line: 5412, column: 50)
!13936 = !DILocation(line: 5413, column: 35, scope: !13935)
!13937 = !DILocation(line: 5413, column: 10, scope: !13935)
!13938 = !DILocation(line: 5413, column: 8, scope: !13935)
!13939 = !DILocation(line: 5414, column: 4, scope: !13935)
!13940 = !DILocation(line: 5416, column: 8, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 5416, column: 8)
!13942 = !DILocation(line: 5416, column: 8, scope: !13921)
!13943 = !DILocation(line: 5417, column: 9, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13945, file: !3, line: 5417, column: 9)
!13945 = distinct !DILexicalBlock(scope: !13941, file: !3, line: 5416, column: 12)
!13946 = !DILocation(line: 5417, column: 21, scope: !13944)
!13947 = !DILocation(line: 5417, column: 42, scope: !13944)
!13948 = !DILocation(line: 5417, column: 24, scope: !13944)
!13949 = !DILocation(line: 5417, column: 48, scope: !13944)
!13950 = !DILocation(line: 5417, column: 9, scope: !13945)
!13951 = !DILocation(line: 5419, column: 10, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13953, file: !3, line: 5419, column: 10)
!13953 = distinct !DILexicalBlock(scope: !13944, file: !3, line: 5417, column: 65)
!13954 = !DILocation(line: 5419, column: 15, scope: !13952)
!13955 = !DILocation(line: 5419, column: 10, scope: !13953)
!13956 = !DILocation(line: 5421, column: 24, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 5419, column: 34)
!13958 = !DILocation(line: 5421, column: 13, scope: !13957)
!13959 = !DILocation(line: 5421, column: 11, scope: !13957)
!13960 = !DILocation(line: 5422, column: 6, scope: !13957)
!13961 = !DILocation(line: 5424, column: 13, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 5423, column: 11)
!13963 = !DILocation(line: 5424, column: 11, scope: !13962)
!13964 = !DILocation(line: 5426, column: 5, scope: !13953)
!13965 = !DILocation(line: 5428, column: 35, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13944, file: !3, line: 5427, column: 10)
!13967 = !DILocation(line: 5428, column: 38, scope: !13966)
!13968 = !DILocation(line: 5428, column: 43, scope: !13966)
!13969 = !DILocation(line: 5428, column: 53, scope: !13966)
!13970 = !DILocation(line: 5428, column: 12, scope: !13966)
!13971 = !DILocation(line: 5428, column: 10, scope: !13966)
!13972 = !DILocation(line: 5431, column: 24, scope: !13945)
!13973 = !DILocation(line: 5431, column: 32, scope: !13945)
!13974 = !DILocation(line: 5431, column: 66, scope: !13945)
!13975 = !DILocation(line: 5431, column: 76, scope: !13945)
!13976 = !DILocation(line: 5431, column: 5, scope: !13945)
!13977 = !DILocation(line: 5432, column: 16, scope: !13945)
!13978 = !DILocation(line: 5433, column: 5, scope: !13945)
!13979 = !DILocation(line: 5433, column: 15, scope: !13945)
!13980 = !DILocation(line: 5434, column: 4, scope: !13945)
!13981 = !DILocation(line: 5437, column: 2, scope: !13870)
!13982 = distinct !{!13982, !13865, !13983}
!13983 = !DILocation(line: 5437, column: 2, scope: !13866)
!13984 = !DILocation(line: 5437, column: 2, scope: !13863)
!13985 = !DILocation(line: 5439, column: 35, scope: !13830)
!13986 = !DILocation(line: 5439, column: 12, scope: !13830)
!13987 = !DILocation(line: 5439, column: 10, scope: !13830)
!13988 = !DILocation(line: 5440, column: 18, scope: !13830)
!13989 = !DILocation(line: 5440, column: 2, scope: !13830)
!13990 = !DILocation(line: 5441, column: 9, scope: !13830)
!13991 = !DILocation(line: 5441, column: 2, scope: !13830)
!13992 = distinct !DISubprogram(name: "RNA_pointer_as_string_keywords", scope: !3, file: !3, line: 5444, type: !13993, scopeLine: 5447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!13993 = !DISubroutineType(types: !13994)
!13994 = !{!1091, !5451, !1349, !6433, !6433, !6433, !2482}
!13995 = !DILocalVariable(name: "C", arg: 1, scope: !13992, file: !3, line: 5444, type: !5451)
!13996 = !DILocation(line: 5444, column: 48, scope: !13992)
!13997 = !DILocalVariable(name: "ptr", arg: 2, scope: !13992, file: !3, line: 5444, type: !1349)
!13998 = !DILocation(line: 5444, column: 63, scope: !13992)
!13999 = !DILocalVariable(name: "as_function", arg: 3, scope: !13992, file: !3, line: 5445, type: !6433)
!14000 = !DILocation(line: 5445, column: 49, scope: !13992)
!14001 = !DILocalVariable(name: "all_args", arg: 4, scope: !13992, file: !3, line: 5445, type: !6433)
!14002 = !DILocation(line: 5445, column: 73, scope: !13992)
!14003 = !DILocalVariable(name: "nested_args", arg: 5, scope: !13992, file: !3, line: 5445, type: !6433)
!14004 = !DILocation(line: 5445, column: 94, scope: !13992)
!14005 = !DILocalVariable(name: "max_prop_length", arg: 6, scope: !13992, file: !3, line: 5446, type: !2482)
!14006 = !DILocation(line: 5446, column: 48, scope: !13992)
!14007 = !DILocalVariable(name: "iterprop", scope: !13992, file: !3, line: 5448, type: !1021)
!14008 = !DILocation(line: 5448, column: 15, scope: !13992)
!14009 = !DILocation(line: 5450, column: 42, scope: !13992)
!14010 = !DILocation(line: 5450, column: 47, scope: !13992)
!14011 = !DILocation(line: 5450, column: 13, scope: !13992)
!14012 = !DILocation(line: 5450, column: 11, scope: !13992)
!14013 = !DILocation(line: 5452, column: 43, scope: !13992)
!14014 = !DILocation(line: 5452, column: 46, scope: !13992)
!14015 = !DILocation(line: 5452, column: 51, scope: !13992)
!14016 = !DILocation(line: 5452, column: 64, scope: !13992)
!14017 = !DILocation(line: 5452, column: 74, scope: !13992)
!14018 = !DILocation(line: 5453, column: 43, scope: !13992)
!14019 = !DILocation(line: 5453, column: 60, scope: !13992)
!14020 = !DILocation(line: 5452, column: 9, scope: !13992)
!14021 = !DILocation(line: 5452, column: 2, scope: !13992)
!14022 = distinct !DISubprogram(name: "RNA_function_as_string_keywords", scope: !3, file: !3, line: 5456, type: !14023, scopeLine: 5459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14023 = !DISubroutineType(types: !14024)
!14024 = !{!1091, !5451, !2457, !6433, !6433, !2482}
!14025 = !DILocalVariable(name: "C", arg: 1, scope: !14022, file: !3, line: 5456, type: !5451)
!14026 = !DILocation(line: 5456, column: 49, scope: !14022)
!14027 = !DILocalVariable(name: "func", arg: 2, scope: !14022, file: !3, line: 5456, type: !2457)
!14028 = !DILocation(line: 5456, column: 65, scope: !14022)
!14029 = !DILocalVariable(name: "as_function", arg: 3, scope: !14022, file: !3, line: 5457, type: !6433)
!14030 = !DILocation(line: 5457, column: 50, scope: !14022)
!14031 = !DILocalVariable(name: "all_args", arg: 4, scope: !14022, file: !3, line: 5457, type: !6433)
!14032 = !DILocation(line: 5457, column: 74, scope: !14022)
!14033 = !DILocalVariable(name: "max_prop_length", arg: 5, scope: !14022, file: !3, line: 5458, type: !2482)
!14034 = !DILocation(line: 5458, column: 49, scope: !14022)
!14035 = !DILocalVariable(name: "funcptr", scope: !14022, file: !3, line: 5460, type: !1350)
!14036 = !DILocation(line: 5460, column: 13, scope: !14022)
!14037 = !DILocalVariable(name: "iterprop", scope: !14022, file: !3, line: 5461, type: !1021)
!14038 = !DILocation(line: 5461, column: 15, scope: !14022)
!14039 = !DILocation(line: 5463, column: 42, scope: !14022)
!14040 = !DILocation(line: 5463, column: 2, scope: !14022)
!14041 = !DILocation(line: 5465, column: 13, scope: !14022)
!14042 = !DILocation(line: 5465, column: 11, scope: !14022)
!14043 = !DILocation(line: 5467, column: 39, scope: !14022)
!14044 = !DILocation(line: 5467, column: 2, scope: !14022)
!14045 = !DILocation(line: 5469, column: 43, scope: !14022)
!14046 = !DILocation(line: 5469, column: 56, scope: !14022)
!14047 = !DILocation(line: 5469, column: 69, scope: !14022)
!14048 = !DILocation(line: 5470, column: 43, scope: !14022)
!14049 = !DILocation(line: 5470, column: 60, scope: !14022)
!14050 = !DILocation(line: 5469, column: 9, scope: !14022)
!14051 = !DILocation(line: 5469, column: 2, scope: !14022)
!14052 = distinct !DISubprogram(name: "bool_as_py_string", scope: !3, file: !3, line: 5473, type: !14053, scopeLine: 5474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14053 = !DISubroutineType(types: !14054)
!14054 = !{!1031, !2482}
!14055 = !DILocalVariable(name: "var", arg: 1, scope: !14052, file: !3, line: 5473, type: !2482)
!14056 = !DILocation(line: 5473, column: 48, scope: !14052)
!14057 = !DILocation(line: 5475, column: 9, scope: !14052)
!14058 = !DILocation(line: 5475, column: 2, scope: !14052)
!14059 = distinct !DISubprogram(name: "RNA_function_identifier", scope: !3, file: !3, line: 5654, type: !14060, scopeLine: 5655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14060 = !DISubroutineType(types: !14061)
!14061 = !{!1031, !2457}
!14062 = !DILocalVariable(name: "func", arg: 1, scope: !14059, file: !3, line: 5654, type: !2457)
!14063 = !DILocation(line: 5654, column: 50, scope: !14059)
!14064 = !DILocation(line: 5656, column: 9, scope: !14059)
!14065 = !DILocation(line: 5656, column: 15, scope: !14059)
!14066 = !DILocation(line: 5656, column: 2, scope: !14059)
!14067 = distinct !DISubprogram(name: "RNA_function_ui_description", scope: !3, file: !3, line: 5659, type: !14060, scopeLine: 5660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14068 = !DILocalVariable(name: "func", arg: 1, scope: !14067, file: !3, line: 5659, type: !2457)
!14069 = !DILocation(line: 5659, column: 54, scope: !14067)
!14070 = !DILocation(line: 5661, column: 9, scope: !14067)
!14071 = !DILocation(line: 5661, column: 2, scope: !14067)
!14072 = distinct !DISubprogram(name: "RNA_function_ui_description_raw", scope: !3, file: !3, line: 5664, type: !14060, scopeLine: 5665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14073 = !DILocalVariable(name: "func", arg: 1, scope: !14072, file: !3, line: 5664, type: !2457)
!14074 = !DILocation(line: 5664, column: 58, scope: !14072)
!14075 = !DILocation(line: 5666, column: 9, scope: !14072)
!14076 = !DILocation(line: 5666, column: 15, scope: !14072)
!14077 = !DILocation(line: 5666, column: 2, scope: !14072)
!14078 = distinct !DISubprogram(name: "RNA_function_flag", scope: !3, file: !3, line: 5669, type: !14079, scopeLine: 5670, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14079 = !DISubroutineType(types: !14080)
!14080 = !{!48, !2457}
!14081 = !DILocalVariable(name: "func", arg: 1, scope: !14078, file: !3, line: 5669, type: !2457)
!14082 = !DILocation(line: 5669, column: 36, scope: !14078)
!14083 = !DILocation(line: 5671, column: 9, scope: !14078)
!14084 = !DILocation(line: 5671, column: 15, scope: !14078)
!14085 = !DILocation(line: 5671, column: 2, scope: !14078)
!14086 = distinct !DISubprogram(name: "RNA_function_defined", scope: !3, file: !3, line: 5674, type: !14079, scopeLine: 5675, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14087 = !DILocalVariable(name: "func", arg: 1, scope: !14086, file: !3, line: 5674, type: !2457)
!14088 = !DILocation(line: 5674, column: 39, scope: !14086)
!14089 = !DILocation(line: 5676, column: 9, scope: !14086)
!14090 = !DILocation(line: 5676, column: 15, scope: !14086)
!14091 = !DILocation(line: 5676, column: 20, scope: !14086)
!14092 = !DILocation(line: 5676, column: 2, scope: !14086)
!14093 = distinct !DISubprogram(name: "RNA_function_get_parameter", scope: !3, file: !3, line: 5679, type: !14094, scopeLine: 5680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{!1021, !1349, !2457, !48}
!14096 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !14093, file: !3, line: 5679, type: !1349)
!14097 = !DILocation(line: 5679, column: 53, scope: !14093)
!14098 = !DILocalVariable(name: "func", arg: 2, scope: !14093, file: !3, line: 5679, type: !2457)
!14099 = !DILocation(line: 5679, column: 79, scope: !14093)
!14100 = !DILocalVariable(name: "index", arg: 3, scope: !14093, file: !3, line: 5679, type: !48)
!14101 = !DILocation(line: 5679, column: 89, scope: !14093)
!14102 = !DILocation(line: 5681, column: 23, scope: !14093)
!14103 = !DILocation(line: 5681, column: 29, scope: !14093)
!14104 = !DILocation(line: 5681, column: 34, scope: !14093)
!14105 = !DILocation(line: 5681, column: 46, scope: !14093)
!14106 = !DILocation(line: 5681, column: 9, scope: !14093)
!14107 = !DILocation(line: 5681, column: 2, scope: !14093)
!14108 = distinct !DISubprogram(name: "RNA_function_find_parameter", scope: !3, file: !3, line: 5684, type: !14109, scopeLine: 5685, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14109 = !DISubroutineType(types: !14110)
!14110 = !{!1021, !1349, !2457, !1031}
!14111 = !DILocalVariable(name: "UNUSED_ptr", arg: 1, scope: !14108, file: !3, line: 5684, type: !1349)
!14112 = !DILocation(line: 5684, column: 54, scope: !14108)
!14113 = !DILocalVariable(name: "func", arg: 2, scope: !14108, file: !3, line: 5684, type: !2457)
!14114 = !DILocation(line: 5684, column: 80, scope: !14108)
!14115 = !DILocalVariable(name: "identifier", arg: 3, scope: !14108, file: !3, line: 5684, type: !1031)
!14116 = !DILocation(line: 5684, column: 98, scope: !14108)
!14117 = !DILocalVariable(name: "parm", scope: !14108, file: !3, line: 5686, type: !1021)
!14118 = !DILocation(line: 5686, column: 15, scope: !14108)
!14119 = !DILocation(line: 5688, column: 9, scope: !14108)
!14120 = !DILocation(line: 5688, column: 15, scope: !14108)
!14121 = !DILocation(line: 5688, column: 20, scope: !14108)
!14122 = !DILocation(line: 5688, column: 31, scope: !14108)
!14123 = !DILocation(line: 5688, column: 7, scope: !14108)
!14124 = !DILocation(line: 5689, column: 2, scope: !14108)
!14125 = !DILocation(line: 5689, column: 9, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14127, file: !3, line: 5689, column: 2)
!14127 = distinct !DILexicalBlock(scope: !14108, file: !3, line: 5689, column: 2)
!14128 = !DILocation(line: 5689, column: 2, scope: !14127)
!14129 = !DILocation(line: 5690, column: 38, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14126, file: !3, line: 5690, column: 7)
!14131 = !DILocation(line: 5690, column: 14, scope: !14130)
!14132 = !DILocation(line: 5690, column: 45, scope: !14130)
!14133 = !DILocation(line: 5690, column: 7, scope: !14130)
!14134 = !DILocation(line: 5690, column: 57, scope: !14130)
!14135 = !DILocation(line: 5690, column: 7, scope: !14126)
!14136 = !DILocation(line: 5691, column: 4, scope: !14130)
!14137 = !DILocation(line: 5690, column: 60, scope: !14130)
!14138 = !DILocation(line: 5689, column: 22, scope: !14126)
!14139 = !DILocation(line: 5689, column: 28, scope: !14126)
!14140 = !DILocation(line: 5689, column: 20, scope: !14126)
!14141 = !DILocation(line: 5689, column: 2, scope: !14126)
!14142 = distinct !{!14142, !14128, !14143}
!14143 = !DILocation(line: 5691, column: 4, scope: !14127)
!14144 = !DILocation(line: 5693, column: 9, scope: !14108)
!14145 = !DILocation(line: 5693, column: 2, scope: !14108)
!14146 = distinct !DISubprogram(name: "RNA_function_defined_parameters", scope: !3, file: !3, line: 5696, type: !14147, scopeLine: 5697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!4015, !2457}
!14149 = !DILocalVariable(name: "func", arg: 1, scope: !14146, file: !3, line: 5696, type: !2457)
!14150 = !DILocation(line: 5696, column: 62, scope: !14146)
!14151 = !DILocation(line: 5698, column: 10, scope: !14146)
!14152 = !DILocation(line: 5698, column: 16, scope: !14146)
!14153 = !DILocation(line: 5698, column: 21, scope: !14146)
!14154 = !DILocation(line: 5698, column: 2, scope: !14146)
!14155 = distinct !DISubprogram(name: "RNA_parameter_list_create", scope: !3, file: !3, line: 5703, type: !14156, scopeLine: 5704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14156 = !DISubroutineType(types: !14157)
!14157 = !{!1351, !1351, !1349, !2457}
!14158 = !DILocalVariable(name: "parms", arg: 1, scope: !14155, file: !3, line: 5703, type: !1351)
!14159 = !DILocation(line: 5703, column: 57, scope: !14155)
!14160 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !14155, file: !3, line: 5703, type: !1349)
!14161 = !DILocation(line: 5703, column: 76, scope: !14155)
!14162 = !DILocalVariable(name: "func", arg: 3, scope: !14155, file: !3, line: 5703, type: !2457)
!14163 = !DILocation(line: 5703, column: 102, scope: !14155)
!14164 = !DILocalVariable(name: "parm", scope: !14155, file: !3, line: 5705, type: !1021)
!14165 = !DILocation(line: 5705, column: 15, scope: !14155)
!14166 = !DILocalVariable(name: "data", scope: !14155, file: !3, line: 5706, type: !986)
!14167 = !DILocation(line: 5706, column: 8, scope: !14155)
!14168 = !DILocalVariable(name: "alloc_size", scope: !14155, file: !3, line: 5707, type: !48)
!14169 = !DILocation(line: 5707, column: 6, scope: !14155)
!14170 = !DILocalVariable(name: "size", scope: !14155, file: !3, line: 5707, type: !48)
!14171 = !DILocation(line: 5707, column: 22, scope: !14155)
!14172 = !DILocation(line: 5709, column: 2, scope: !14155)
!14173 = !DILocation(line: 5709, column: 9, scope: !14155)
!14174 = !DILocation(line: 5709, column: 19, scope: !14155)
!14175 = !DILocation(line: 5710, column: 2, scope: !14155)
!14176 = !DILocation(line: 5710, column: 9, scope: !14155)
!14177 = !DILocation(line: 5710, column: 19, scope: !14155)
!14178 = !DILocation(line: 5713, column: 14, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14155, file: !3, line: 5713, column: 2)
!14180 = !DILocation(line: 5713, column: 20, scope: !14179)
!14181 = !DILocation(line: 5713, column: 25, scope: !14179)
!14182 = !DILocation(line: 5713, column: 36, scope: !14179)
!14183 = !DILocation(line: 5713, column: 12, scope: !14179)
!14184 = !DILocation(line: 5713, column: 7, scope: !14179)
!14185 = !DILocation(line: 5713, column: 43, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14179, file: !3, line: 5713, column: 2)
!14187 = !DILocation(line: 5713, column: 2, scope: !14179)
!14188 = !DILocation(line: 5714, column: 36, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14186, file: !3, line: 5713, column: 68)
!14190 = !DILocation(line: 5714, column: 17, scope: !14189)
!14191 = !DILocation(line: 5714, column: 14, scope: !14189)
!14192 = !DILocation(line: 5716, column: 7, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14189, file: !3, line: 5716, column: 7)
!14194 = !DILocation(line: 5716, column: 13, scope: !14193)
!14195 = !DILocation(line: 5716, column: 18, scope: !14193)
!14196 = !DILocation(line: 5716, column: 7, scope: !14189)
!14197 = !DILocation(line: 5717, column: 4, scope: !14193)
!14198 = !DILocation(line: 5717, column: 11, scope: !14193)
!14199 = !DILocation(line: 5717, column: 20, scope: !14193)
!14200 = !DILocation(line: 5719, column: 4, scope: !14193)
!14201 = !DILocation(line: 5719, column: 11, scope: !14193)
!14202 = !DILocation(line: 5719, column: 20, scope: !14193)
!14203 = !DILocation(line: 5720, column: 2, scope: !14189)
!14204 = !DILocation(line: 5713, column: 56, scope: !14186)
!14205 = !DILocation(line: 5713, column: 62, scope: !14186)
!14206 = !DILocation(line: 5713, column: 54, scope: !14186)
!14207 = !DILocation(line: 5713, column: 2, scope: !14186)
!14208 = distinct !{!14208, !14187, !14209}
!14209 = !DILocation(line: 5720, column: 2, scope: !14179)
!14210 = !DILocation(line: 5722, column: 16, scope: !14155)
!14211 = !DILocation(line: 5722, column: 28, scope: !14155)
!14212 = !DILocation(line: 5722, column: 2, scope: !14155)
!14213 = !DILocation(line: 5722, column: 9, scope: !14155)
!14214 = !DILocation(line: 5722, column: 14, scope: !14155)
!14215 = !DILocation(line: 5723, column: 16, scope: !14155)
!14216 = !DILocation(line: 5723, column: 2, scope: !14155)
!14217 = !DILocation(line: 5723, column: 9, scope: !14155)
!14218 = !DILocation(line: 5723, column: 14, scope: !14155)
!14219 = !DILocation(line: 5724, column: 22, scope: !14155)
!14220 = !DILocation(line: 5724, column: 2, scope: !14155)
!14221 = !DILocation(line: 5724, column: 9, scope: !14155)
!14222 = !DILocation(line: 5724, column: 20, scope: !14155)
!14223 = !DILocation(line: 5727, column: 9, scope: !14155)
!14224 = !DILocation(line: 5727, column: 16, scope: !14155)
!14225 = !DILocation(line: 5727, column: 7, scope: !14155)
!14226 = !DILocation(line: 5729, column: 14, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14155, file: !3, line: 5729, column: 2)
!14228 = !DILocation(line: 5729, column: 20, scope: !14227)
!14229 = !DILocation(line: 5729, column: 25, scope: !14227)
!14230 = !DILocation(line: 5729, column: 36, scope: !14227)
!14231 = !DILocation(line: 5729, column: 12, scope: !14227)
!14232 = !DILocation(line: 5729, column: 7, scope: !14227)
!14233 = !DILocation(line: 5729, column: 43, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14227, file: !3, line: 5729, column: 2)
!14235 = !DILocation(line: 5729, column: 2, scope: !14227)
!14236 = !DILocation(line: 5730, column: 29, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14234, file: !3, line: 5729, column: 68)
!14238 = !DILocation(line: 5730, column: 10, scope: !14237)
!14239 = !DILocation(line: 5730, column: 8, scope: !14237)
!14240 = !DILocation(line: 5733, column: 7, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 5733, column: 7)
!14242 = !DILocation(line: 5733, column: 13, scope: !14241)
!14243 = !DILocation(line: 5733, column: 18, scope: !14241)
!14244 = !DILocation(line: 5733, column: 7, scope: !14237)
!14245 = !DILocalVariable(name: "data_alloc", scope: !14246, file: !3, line: 5734, type: !2784)
!14246 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 5733, column: 34)
!14247 = !DILocation(line: 5734, column: 23, scope: !14246)
!14248 = !DILocation(line: 5734, column: 36, scope: !14246)
!14249 = !DILocation(line: 5735, column: 4, scope: !14246)
!14250 = !DILocation(line: 5735, column: 16, scope: !14246)
!14251 = !DILocation(line: 5735, column: 26, scope: !14246)
!14252 = !DILocation(line: 5736, column: 4, scope: !14246)
!14253 = !DILocation(line: 5736, column: 16, scope: !14246)
!14254 = !DILocation(line: 5736, column: 22, scope: !14246)
!14255 = !DILocation(line: 5737, column: 3, scope: !14246)
!14256 = !DILocation(line: 5739, column: 9, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 5739, column: 7)
!14258 = !DILocation(line: 5739, column: 15, scope: !14257)
!14259 = !DILocation(line: 5739, column: 20, scope: !14257)
!14260 = !DILocation(line: 5739, column: 37, scope: !14257)
!14261 = !DILocation(line: 5739, column: 42, scope: !14257)
!14262 = !DILocation(line: 5739, column: 48, scope: !14257)
!14263 = !DILocation(line: 5739, column: 53, scope: !14257)
!14264 = !DILocation(line: 5739, column: 7, scope: !14237)
!14265 = !DILocation(line: 5740, column: 12, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14257, file: !3, line: 5739, column: 70)
!14267 = !DILocation(line: 5740, column: 18, scope: !14266)
!14268 = !DILocation(line: 5740, column: 4, scope: !14266)
!14269 = !DILocation(line: 5742, column: 10, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 5742, column: 10)
!14271 = distinct !DILexicalBlock(scope: !14266, file: !3, line: 5740, column: 24)
!14272 = !DILocation(line: 5742, column: 16, scope: !14270)
!14273 = !DILocation(line: 5742, column: 10, scope: !14271)
!14274 = !DILocation(line: 5742, column: 39, scope: !14270)
!14275 = !DILocation(line: 5742, column: 65, scope: !14270)
!14276 = !DILocation(line: 5742, column: 72, scope: !14270)
!14277 = !DILocation(line: 5742, column: 32, scope: !14270)
!14278 = !DILocation(line: 5742, column: 86, scope: !14270)
!14279 = !DILocation(line: 5743, column: 18, scope: !14270)
!14280 = !DILocation(line: 5743, column: 45, scope: !14270)
!14281 = !DILocation(line: 5743, column: 52, scope: !14270)
!14282 = !DILocation(line: 5743, column: 11, scope: !14270)
!14283 = !DILocation(line: 5743, column: 66, scope: !14270)
!14284 = !DILocation(line: 5744, column: 6, scope: !14271)
!14285 = !DILocation(line: 5746, column: 10, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 5746, column: 10)
!14287 = !DILocation(line: 5746, column: 16, scope: !14286)
!14288 = !DILocation(line: 5746, column: 10, scope: !14271)
!14289 = !DILocation(line: 5746, column: 39, scope: !14286)
!14290 = !DILocation(line: 5746, column: 64, scope: !14286)
!14291 = !DILocation(line: 5746, column: 71, scope: !14286)
!14292 = !DILocation(line: 5746, column: 32, scope: !14286)
!14293 = !DILocation(line: 5746, column: 85, scope: !14286)
!14294 = !DILocation(line: 5747, column: 18, scope: !14286)
!14295 = !DILocation(line: 5747, column: 44, scope: !14286)
!14296 = !DILocation(line: 5747, column: 51, scope: !14286)
!14297 = !DILocation(line: 5747, column: 11, scope: !14286)
!14298 = !DILocation(line: 5747, column: 65, scope: !14286)
!14299 = !DILocation(line: 5748, column: 6, scope: !14271)
!14300 = !DILocation(line: 5750, column: 10, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 5750, column: 10)
!14302 = !DILocation(line: 5750, column: 16, scope: !14301)
!14303 = !DILocation(line: 5750, column: 10, scope: !14271)
!14304 = !DILocation(line: 5750, column: 39, scope: !14301)
!14305 = !DILocation(line: 5750, column: 66, scope: !14301)
!14306 = !DILocation(line: 5750, column: 73, scope: !14301)
!14307 = !DILocation(line: 5750, column: 32, scope: !14301)
!14308 = !DILocation(line: 5750, column: 87, scope: !14301)
!14309 = !DILocation(line: 5751, column: 18, scope: !14301)
!14310 = !DILocation(line: 5751, column: 46, scope: !14301)
!14311 = !DILocation(line: 5751, column: 53, scope: !14301)
!14312 = !DILocation(line: 5751, column: 11, scope: !14301)
!14313 = !DILocation(line: 5751, column: 67, scope: !14301)
!14314 = !DILocation(line: 5752, column: 6, scope: !14271)
!14315 = !DILocation(line: 5754, column: 13, scope: !14271)
!14316 = !DILocation(line: 5754, column: 40, scope: !14271)
!14317 = !DILocation(line: 5754, column: 47, scope: !14271)
!14318 = !DILocation(line: 5754, column: 6, scope: !14271)
!14319 = !DILocation(line: 5754, column: 61, scope: !14271)
!14320 = !DILocation(line: 5755, column: 6, scope: !14271)
!14321 = !DILocalVariable(name: "defvalue", scope: !14322, file: !3, line: 5758, type: !1031)
!14322 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 5757, column: 5)
!14323 = !DILocation(line: 5758, column: 18, scope: !14322)
!14324 = !DILocation(line: 5758, column: 51, scope: !14322)
!14325 = !DILocation(line: 5758, column: 58, scope: !14322)
!14326 = !DILocation(line: 5759, column: 10, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14322, file: !3, line: 5759, column: 10)
!14328 = !DILocation(line: 5759, column: 19, scope: !14327)
!14329 = !DILocation(line: 5759, column: 22, scope: !14327)
!14330 = !DILocation(line: 5759, column: 10, scope: !14322)
!14331 = !DILocation(line: 5765, column: 14, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14327, file: !3, line: 5759, column: 35)
!14333 = !DILocation(line: 5765, column: 7, scope: !14332)
!14334 = !DILocation(line: 5765, column: 31, scope: !14332)
!14335 = !DILocation(line: 5767, column: 6, scope: !14332)
!14336 = !DILocation(line: 5768, column: 6, scope: !14322)
!14337 = !DILocation(line: 5772, column: 6, scope: !14271)
!14338 = !DILocation(line: 5774, column: 3, scope: !14266)
!14339 = !DILocation(line: 5776, column: 19, scope: !14237)
!14340 = !DILocation(line: 5776, column: 46, scope: !14237)
!14341 = !DILocation(line: 5776, column: 27, scope: !14237)
!14342 = !DILocation(line: 5776, column: 25, scope: !14237)
!14343 = !DILocation(line: 5776, column: 8, scope: !14237)
!14344 = !DILocation(line: 5777, column: 2, scope: !14237)
!14345 = !DILocation(line: 5729, column: 56, scope: !14234)
!14346 = !DILocation(line: 5729, column: 62, scope: !14234)
!14347 = !DILocation(line: 5729, column: 54, scope: !14234)
!14348 = !DILocation(line: 5729, column: 2, scope: !14234)
!14349 = distinct !{!14349, !14235, !14350}
!14350 = !DILocation(line: 5777, column: 2, scope: !14227)
!14351 = !DILocation(line: 5779, column: 9, scope: !14155)
!14352 = !DILocation(line: 5779, column: 2, scope: !14155)
!14353 = distinct !DISubprogram(name: "RNA_parameter_list_free", scope: !3, file: !3, line: 5782, type: !14354, scopeLine: 5783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14354 = !DISubroutineType(types: !14355)
!14355 = !{null, !1351}
!14356 = !DILocalVariable(name: "parms", arg: 1, scope: !14353, file: !3, line: 5782, type: !1351)
!14357 = !DILocation(line: 5782, column: 45, scope: !14353)
!14358 = !DILocalVariable(name: "parm", scope: !14353, file: !3, line: 5784, type: !1021)
!14359 = !DILocation(line: 5784, column: 15, scope: !14353)
!14360 = !DILocalVariable(name: "tot", scope: !14353, file: !3, line: 5785, type: !48)
!14361 = !DILocation(line: 5785, column: 6, scope: !14353)
!14362 = !DILocation(line: 5787, column: 9, scope: !14353)
!14363 = !DILocation(line: 5787, column: 16, scope: !14353)
!14364 = !DILocation(line: 5787, column: 22, scope: !14353)
!14365 = !DILocation(line: 5787, column: 27, scope: !14353)
!14366 = !DILocation(line: 5787, column: 38, scope: !14353)
!14367 = !DILocation(line: 5787, column: 7, scope: !14353)
!14368 = !DILocation(line: 5788, column: 11, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 5788, column: 2)
!14370 = !DILocation(line: 5788, column: 7, scope: !14369)
!14371 = !DILocation(line: 5788, column: 16, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 5788, column: 2)
!14373 = !DILocation(line: 5788, column: 2, scope: !14369)
!14374 = !DILocation(line: 5789, column: 7, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14376, file: !3, line: 5789, column: 7)
!14376 = distinct !DILexicalBlock(scope: !14372, file: !3, line: 5788, column: 41)
!14377 = !DILocation(line: 5789, column: 13, scope: !14375)
!14378 = !DILocation(line: 5789, column: 18, scope: !14375)
!14379 = !DILocation(line: 5789, column: 7, scope: !14376)
!14380 = !DILocation(line: 5790, column: 39, scope: !14375)
!14381 = !DILocation(line: 5790, column: 46, scope: !14375)
!14382 = !DILocation(line: 5790, column: 53, scope: !14375)
!14383 = !DILocation(line: 5790, column: 51, scope: !14375)
!14384 = !DILocation(line: 5790, column: 18, scope: !14375)
!14385 = !DILocation(line: 5790, column: 4, scope: !14375)
!14386 = !DILocation(line: 5791, column: 12, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14375, file: !3, line: 5791, column: 12)
!14388 = !DILocation(line: 5791, column: 18, scope: !14387)
!14389 = !DILocation(line: 5791, column: 23, scope: !14387)
!14390 = !DILocation(line: 5791, column: 12, scope: !14375)
!14391 = !DILocalVariable(name: "data_alloc", scope: !14392, file: !3, line: 5793, type: !2784)
!14392 = distinct !DILexicalBlock(scope: !14387, file: !3, line: 5791, column: 39)
!14393 = !DILocation(line: 5793, column: 23, scope: !14392)
!14394 = !DILocation(line: 5793, column: 54, scope: !14392)
!14395 = !DILocation(line: 5793, column: 61, scope: !14392)
!14396 = !DILocation(line: 5793, column: 69, scope: !14392)
!14397 = !DILocation(line: 5793, column: 67, scope: !14392)
!14398 = !DILocation(line: 5793, column: 36, scope: !14392)
!14399 = !DILocation(line: 5794, column: 8, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14392, file: !3, line: 5794, column: 8)
!14401 = !DILocation(line: 5794, column: 20, scope: !14400)
!14402 = !DILocation(line: 5794, column: 8, scope: !14392)
!14403 = !DILocation(line: 5795, column: 5, scope: !14400)
!14404 = !DILocation(line: 5795, column: 15, scope: !14400)
!14405 = !DILocation(line: 5795, column: 27, scope: !14400)
!14406 = !DILocation(line: 5796, column: 3, scope: !14392)
!14407 = !DILocation(line: 5798, column: 29, scope: !14376)
!14408 = !DILocation(line: 5798, column: 10, scope: !14376)
!14409 = !DILocation(line: 5798, column: 7, scope: !14376)
!14410 = !DILocation(line: 5799, column: 2, scope: !14376)
!14411 = !DILocation(line: 5788, column: 29, scope: !14372)
!14412 = !DILocation(line: 5788, column: 35, scope: !14372)
!14413 = !DILocation(line: 5788, column: 27, scope: !14372)
!14414 = !DILocation(line: 5788, column: 2, scope: !14372)
!14415 = distinct !{!14415, !14373, !14416}
!14416 = !DILocation(line: 5799, column: 2, scope: !14369)
!14417 = !DILocation(line: 5801, column: 2, scope: !14353)
!14418 = !DILocation(line: 5801, column: 12, scope: !14353)
!14419 = !DILocation(line: 5801, column: 19, scope: !14353)
!14420 = !DILocation(line: 5802, column: 2, scope: !14353)
!14421 = !DILocation(line: 5802, column: 9, scope: !14353)
!14422 = !DILocation(line: 5802, column: 14, scope: !14353)
!14423 = !DILocation(line: 5804, column: 2, scope: !14353)
!14424 = !DILocation(line: 5804, column: 9, scope: !14353)
!14425 = !DILocation(line: 5804, column: 14, scope: !14353)
!14426 = !DILocation(line: 5805, column: 1, scope: !14353)
!14427 = distinct !DISubprogram(name: "RNA_parameter_list_size", scope: !3, file: !3, line: 5807, type: !14428, scopeLine: 5808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14428 = !DISubroutineType(types: !14429)
!14429 = !{!48, !1351}
!14430 = !DILocalVariable(name: "parms", arg: 1, scope: !14427, file: !3, line: 5807, type: !1351)
!14431 = !DILocation(line: 5807, column: 45, scope: !14427)
!14432 = !DILocation(line: 5809, column: 9, scope: !14427)
!14433 = !DILocation(line: 5809, column: 16, scope: !14427)
!14434 = !DILocation(line: 5809, column: 2, scope: !14427)
!14435 = distinct !DISubprogram(name: "RNA_parameter_list_arg_count", scope: !3, file: !3, line: 5812, type: !14428, scopeLine: 5813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14436 = !DILocalVariable(name: "parms", arg: 1, scope: !14435, file: !3, line: 5812, type: !1351)
!14437 = !DILocation(line: 5812, column: 50, scope: !14435)
!14438 = !DILocation(line: 5814, column: 9, scope: !14435)
!14439 = !DILocation(line: 5814, column: 16, scope: !14435)
!14440 = !DILocation(line: 5814, column: 2, scope: !14435)
!14441 = distinct !DISubprogram(name: "RNA_parameter_list_ret_count", scope: !3, file: !3, line: 5817, type: !14428, scopeLine: 5818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14442 = !DILocalVariable(name: "parms", arg: 1, scope: !14441, file: !3, line: 5817, type: !1351)
!14443 = !DILocation(line: 5817, column: 50, scope: !14441)
!14444 = !DILocation(line: 5819, column: 9, scope: !14441)
!14445 = !DILocation(line: 5819, column: 16, scope: !14441)
!14446 = !DILocation(line: 5819, column: 2, scope: !14441)
!14447 = distinct !DISubprogram(name: "RNA_parameter_list_begin", scope: !3, file: !3, line: 5822, type: !14448, scopeLine: 5823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14448 = !DISubroutineType(types: !14449)
!14449 = !{null, !1351, !14450}
!14450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14451, size: 64)
!14451 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterIterator", file: !6, line: 358, baseType: !14452)
!14452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterIterator", file: !6, line: 350, size: 320, elements: !14453)
!14453 = !{!14454, !14456, !14457, !14458, !14459, !14460}
!14454 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !14452, file: !6, line: 351, baseType: !14455, size: 64)
!14455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!14456 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14452, file: !6, line: 353, baseType: !986, size: 64, offset: 64)
!14457 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14452, file: !6, line: 354, baseType: !48, size: 32, offset: 128)
!14458 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !14452, file: !6, line: 354, baseType: !48, size: 32, offset: 160)
!14459 = !DIDerivedType(tag: DW_TAG_member, name: "parm", scope: !14452, file: !6, line: 356, baseType: !1021, size: 64, offset: 192)
!14460 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !14452, file: !6, line: 357, baseType: !48, size: 32, offset: 256)
!14461 = !DILocalVariable(name: "parms", arg: 1, scope: !14447, file: !3, line: 5822, type: !1351)
!14462 = !DILocation(line: 5822, column: 46, scope: !14447)
!14463 = !DILocalVariable(name: "iter", arg: 2, scope: !14447, file: !3, line: 5822, type: !14450)
!14464 = !DILocation(line: 5822, column: 72, scope: !14447)
!14465 = !DILocation(line: 5827, column: 16, scope: !14447)
!14466 = !DILocation(line: 5827, column: 2, scope: !14447)
!14467 = !DILocation(line: 5827, column: 8, scope: !14447)
!14468 = !DILocation(line: 5827, column: 14, scope: !14447)
!14469 = !DILocation(line: 5828, column: 15, scope: !14447)
!14470 = !DILocation(line: 5828, column: 22, scope: !14447)
!14471 = !DILocation(line: 5828, column: 28, scope: !14447)
!14472 = !DILocation(line: 5828, column: 33, scope: !14447)
!14473 = !DILocation(line: 5828, column: 44, scope: !14447)
!14474 = !DILocation(line: 5828, column: 2, scope: !14447)
!14475 = !DILocation(line: 5828, column: 8, scope: !14447)
!14476 = !DILocation(line: 5828, column: 13, scope: !14447)
!14477 = !DILocation(line: 5829, column: 16, scope: !14447)
!14478 = !DILocation(line: 5829, column: 22, scope: !14447)
!14479 = !DILocation(line: 5829, column: 27, scope: !14447)
!14480 = !DILocation(line: 5829, column: 2, scope: !14447)
!14481 = !DILocation(line: 5829, column: 8, scope: !14447)
!14482 = !DILocation(line: 5829, column: 14, scope: !14447)
!14483 = !DILocation(line: 5830, column: 2, scope: !14447)
!14484 = !DILocation(line: 5830, column: 8, scope: !14447)
!14485 = !DILocation(line: 5830, column: 15, scope: !14447)
!14486 = !DILocation(line: 5832, column: 6, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14447, file: !3, line: 5832, column: 6)
!14488 = !DILocation(line: 5832, column: 12, scope: !14487)
!14489 = !DILocation(line: 5832, column: 6, scope: !14447)
!14490 = !DILocation(line: 5833, column: 35, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14487, file: !3, line: 5832, column: 19)
!14492 = !DILocation(line: 5833, column: 41, scope: !14491)
!14493 = !DILocation(line: 5833, column: 16, scope: !14491)
!14494 = !DILocation(line: 5833, column: 3, scope: !14491)
!14495 = !DILocation(line: 5833, column: 9, scope: !14491)
!14496 = !DILocation(line: 5833, column: 14, scope: !14491)
!14497 = !DILocation(line: 5834, column: 26, scope: !14491)
!14498 = !DILocation(line: 5834, column: 32, scope: !14491)
!14499 = !DILocation(line: 5834, column: 39, scope: !14491)
!14500 = !DILocation(line: 5834, column: 3, scope: !14491)
!14501 = !DILocation(line: 5834, column: 9, scope: !14491)
!14502 = !DILocation(line: 5834, column: 14, scope: !14491)
!14503 = !DILocation(line: 5835, column: 2, scope: !14491)
!14504 = !DILocation(line: 5836, column: 1, scope: !14447)
!14505 = distinct !DISubprogram(name: "RNA_parameter_list_next", scope: !3, file: !3, line: 5838, type: !14506, scopeLine: 5839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14506 = !DISubroutineType(types: !14507)
!14507 = !{null, !14450}
!14508 = !DILocalVariable(name: "iter", arg: 1, scope: !14505, file: !3, line: 5838, type: !14450)
!14509 = !DILocation(line: 5838, column: 49, scope: !14505)
!14510 = !DILocation(line: 5840, column: 18, scope: !14505)
!14511 = !DILocation(line: 5840, column: 24, scope: !14505)
!14512 = !DILocation(line: 5840, column: 2, scope: !14505)
!14513 = !DILocation(line: 5840, column: 8, scope: !14505)
!14514 = !DILocation(line: 5840, column: 15, scope: !14505)
!14515 = !DILocation(line: 5841, column: 15, scope: !14505)
!14516 = !DILocation(line: 5841, column: 21, scope: !14505)
!14517 = !DILocation(line: 5841, column: 27, scope: !14505)
!14518 = !DILocation(line: 5841, column: 2, scope: !14505)
!14519 = !DILocation(line: 5841, column: 8, scope: !14505)
!14520 = !DILocation(line: 5841, column: 13, scope: !14505)
!14521 = !DILocation(line: 5842, column: 16, scope: !14505)
!14522 = !DILocation(line: 5842, column: 22, scope: !14505)
!14523 = !DILocation(line: 5842, column: 27, scope: !14505)
!14524 = !DILocation(line: 5842, column: 2, scope: !14505)
!14525 = !DILocation(line: 5842, column: 8, scope: !14505)
!14526 = !DILocation(line: 5842, column: 14, scope: !14505)
!14527 = !DILocation(line: 5844, column: 6, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14505, file: !3, line: 5844, column: 6)
!14529 = !DILocation(line: 5844, column: 12, scope: !14528)
!14530 = !DILocation(line: 5844, column: 6, scope: !14505)
!14531 = !DILocation(line: 5845, column: 35, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14528, file: !3, line: 5844, column: 19)
!14533 = !DILocation(line: 5845, column: 41, scope: !14532)
!14534 = !DILocation(line: 5845, column: 16, scope: !14532)
!14535 = !DILocation(line: 5845, column: 3, scope: !14532)
!14536 = !DILocation(line: 5845, column: 9, scope: !14532)
!14537 = !DILocation(line: 5845, column: 14, scope: !14532)
!14538 = !DILocation(line: 5846, column: 26, scope: !14532)
!14539 = !DILocation(line: 5846, column: 32, scope: !14532)
!14540 = !DILocation(line: 5846, column: 39, scope: !14532)
!14541 = !DILocation(line: 5846, column: 47, scope: !14532)
!14542 = !DILocation(line: 5846, column: 53, scope: !14532)
!14543 = !DILocation(line: 5846, column: 45, scope: !14532)
!14544 = !DILocation(line: 5846, column: 3, scope: !14532)
!14545 = !DILocation(line: 5846, column: 9, scope: !14532)
!14546 = !DILocation(line: 5846, column: 14, scope: !14532)
!14547 = !DILocation(line: 5847, column: 2, scope: !14532)
!14548 = !DILocation(line: 5848, column: 1, scope: !14505)
!14549 = distinct !DISubprogram(name: "RNA_parameter_list_end", scope: !3, file: !3, line: 5850, type: !14506, scopeLine: 5851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14550 = !DILocalVariable(name: "UNUSED_iter", arg: 1, scope: !14549, file: !3, line: 5850, type: !14450)
!14551 = !DILocation(line: 5850, column: 48, scope: !14549)
!14552 = !DILocation(line: 5853, column: 1, scope: !14549)
!14553 = distinct !DISubprogram(name: "RNA_parameter_get", scope: !3, file: !3, line: 5855, type: !14554, scopeLine: 5856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14554 = !DISubroutineType(types: !14555)
!14555 = !{null, !1351, !1021, !1375}
!14556 = !DILocalVariable(name: "parms", arg: 1, scope: !14553, file: !3, line: 5855, type: !1351)
!14557 = !DILocation(line: 5855, column: 39, scope: !14553)
!14558 = !DILocalVariable(name: "parm", arg: 2, scope: !14553, file: !3, line: 5855, type: !1021)
!14559 = !DILocation(line: 5855, column: 59, scope: !14553)
!14560 = !DILocalVariable(name: "value", arg: 3, scope: !14553, file: !3, line: 5855, type: !1375)
!14561 = !DILocation(line: 5855, column: 72, scope: !14553)
!14562 = !DILocalVariable(name: "iter", scope: !14553, file: !3, line: 5857, type: !14451)
!14563 = !DILocation(line: 5857, column: 20, scope: !14553)
!14564 = !DILocation(line: 5859, column: 27, scope: !14553)
!14565 = !DILocation(line: 5859, column: 2, scope: !14553)
!14566 = !DILocation(line: 5861, column: 2, scope: !14553)
!14567 = !DILocation(line: 5861, column: 14, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14569, file: !3, line: 5861, column: 2)
!14569 = distinct !DILexicalBlock(scope: !14553, file: !3, line: 5861, column: 2)
!14570 = !DILocation(line: 5861, column: 2, scope: !14569)
!14571 = !DILocation(line: 5862, column: 12, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14568, file: !3, line: 5862, column: 7)
!14573 = !DILocation(line: 5862, column: 20, scope: !14572)
!14574 = !DILocation(line: 5862, column: 17, scope: !14572)
!14575 = !DILocation(line: 5862, column: 7, scope: !14568)
!14576 = !DILocation(line: 5863, column: 4, scope: !14572)
!14577 = !DILocation(line: 5861, column: 21, scope: !14568)
!14578 = !DILocation(line: 5861, column: 2, scope: !14568)
!14579 = distinct !{!14579, !14570, !14580}
!14580 = !DILocation(line: 5863, column: 4, scope: !14569)
!14581 = !DILocation(line: 5865, column: 11, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14553, file: !3, line: 5865, column: 6)
!14583 = !DILocation(line: 5865, column: 6, scope: !14582)
!14584 = !DILocation(line: 5865, column: 6, scope: !14553)
!14585 = !DILocation(line: 5866, column: 7, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14587, file: !3, line: 5866, column: 7)
!14587 = distinct !DILexicalBlock(scope: !14582, file: !3, line: 5865, column: 18)
!14588 = !DILocation(line: 5866, column: 13, scope: !14586)
!14589 = !DILocation(line: 5866, column: 18, scope: !14586)
!14590 = !DILocation(line: 5866, column: 7, scope: !14587)
!14591 = !DILocalVariable(name: "data_alloc", scope: !14592, file: !3, line: 5868, type: !2784)
!14592 = distinct !DILexicalBlock(scope: !14586, file: !3, line: 5866, column: 34)
!14593 = !DILocation(line: 5868, column: 23, scope: !14592)
!14594 = !DILocation(line: 5868, column: 41, scope: !14592)
!14595 = !DILocation(line: 5868, column: 36, scope: !14592)
!14596 = !DILocation(line: 5869, column: 13, scope: !14592)
!14597 = !DILocation(line: 5869, column: 25, scope: !14592)
!14598 = !DILocation(line: 5869, column: 5, scope: !14592)
!14599 = !DILocation(line: 5869, column: 11, scope: !14592)
!14600 = !DILocation(line: 5870, column: 3, scope: !14592)
!14601 = !DILocation(line: 5872, column: 18, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14586, file: !3, line: 5871, column: 8)
!14603 = !DILocation(line: 5872, column: 5, scope: !14602)
!14604 = !DILocation(line: 5872, column: 11, scope: !14602)
!14605 = !DILocation(line: 5874, column: 2, scope: !14587)
!14606 = !DILocation(line: 5876, column: 4, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14582, file: !3, line: 5875, column: 7)
!14608 = !DILocation(line: 5876, column: 10, scope: !14607)
!14609 = !DILocation(line: 5879, column: 2, scope: !14553)
!14610 = !DILocation(line: 5880, column: 1, scope: !14553)
!14611 = distinct !DISubprogram(name: "RNA_parameter_get_lookup", scope: !3, file: !3, line: 5882, type: !14612, scopeLine: 5883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14612 = !DISubroutineType(types: !14613)
!14613 = !{null, !1351, !1031, !1375}
!14614 = !DILocalVariable(name: "parms", arg: 1, scope: !14611, file: !3, line: 5882, type: !1351)
!14615 = !DILocation(line: 5882, column: 46, scope: !14611)
!14616 = !DILocalVariable(name: "identifier", arg: 2, scope: !14611, file: !3, line: 5882, type: !1031)
!14617 = !DILocation(line: 5882, column: 65, scope: !14611)
!14618 = !DILocalVariable(name: "value", arg: 3, scope: !14611, file: !3, line: 5882, type: !1375)
!14619 = !DILocation(line: 5882, column: 84, scope: !14611)
!14620 = !DILocalVariable(name: "parm", scope: !14611, file: !3, line: 5884, type: !1021)
!14621 = !DILocation(line: 5884, column: 15, scope: !14611)
!14622 = !DILocation(line: 5886, column: 9, scope: !14611)
!14623 = !DILocation(line: 5886, column: 16, scope: !14611)
!14624 = !DILocation(line: 5886, column: 22, scope: !14611)
!14625 = !DILocation(line: 5886, column: 27, scope: !14611)
!14626 = !DILocation(line: 5886, column: 38, scope: !14611)
!14627 = !DILocation(line: 5886, column: 7, scope: !14611)
!14628 = !DILocation(line: 5887, column: 2, scope: !14611)
!14629 = !DILocation(line: 5887, column: 9, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14631, file: !3, line: 5887, column: 2)
!14631 = distinct !DILexicalBlock(scope: !14611, file: !3, line: 5887, column: 2)
!14632 = !DILocation(line: 5887, column: 2, scope: !14631)
!14633 = !DILocation(line: 5888, column: 38, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14630, file: !3, line: 5888, column: 7)
!14635 = !DILocation(line: 5888, column: 14, scope: !14634)
!14636 = !DILocation(line: 5888, column: 45, scope: !14634)
!14637 = !DILocation(line: 5888, column: 7, scope: !14634)
!14638 = !DILocation(line: 5888, column: 57, scope: !14634)
!14639 = !DILocation(line: 5888, column: 7, scope: !14630)
!14640 = !DILocation(line: 5889, column: 4, scope: !14634)
!14641 = !DILocation(line: 5888, column: 60, scope: !14634)
!14642 = !DILocation(line: 5887, column: 22, scope: !14630)
!14643 = !DILocation(line: 5887, column: 28, scope: !14630)
!14644 = !DILocation(line: 5887, column: 20, scope: !14630)
!14645 = !DILocation(line: 5887, column: 2, scope: !14630)
!14646 = distinct !{!14646, !14632, !14647}
!14647 = !DILocation(line: 5889, column: 4, scope: !14631)
!14648 = !DILocation(line: 5891, column: 6, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14611, file: !3, line: 5891, column: 6)
!14650 = !DILocation(line: 5891, column: 6, scope: !14611)
!14651 = !DILocation(line: 5892, column: 21, scope: !14649)
!14652 = !DILocation(line: 5892, column: 28, scope: !14649)
!14653 = !DILocation(line: 5892, column: 34, scope: !14649)
!14654 = !DILocation(line: 5892, column: 3, scope: !14649)
!14655 = !DILocation(line: 5893, column: 1, scope: !14611)
!14656 = distinct !DISubprogram(name: "RNA_parameter_set", scope: !3, file: !3, line: 5895, type: !14657, scopeLine: 5896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14657 = !DISubroutineType(types: !14658)
!14658 = !{null, !1351, !1021, !14659}
!14659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14660, size: 64)
!14660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!14661 = !DILocalVariable(name: "parms", arg: 1, scope: !14656, file: !3, line: 5895, type: !1351)
!14662 = !DILocation(line: 5895, column: 39, scope: !14656)
!14663 = !DILocalVariable(name: "parm", arg: 2, scope: !14656, file: !3, line: 5895, type: !1021)
!14664 = !DILocation(line: 5895, column: 59, scope: !14656)
!14665 = !DILocalVariable(name: "value", arg: 3, scope: !14656, file: !3, line: 5895, type: !14659)
!14666 = !DILocation(line: 5895, column: 77, scope: !14656)
!14667 = !DILocalVariable(name: "iter", scope: !14656, file: !3, line: 5897, type: !14451)
!14668 = !DILocation(line: 5897, column: 20, scope: !14656)
!14669 = !DILocation(line: 5899, column: 27, scope: !14656)
!14670 = !DILocation(line: 5899, column: 2, scope: !14656)
!14671 = !DILocation(line: 5901, column: 2, scope: !14656)
!14672 = !DILocation(line: 5901, column: 14, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 5901, column: 2)
!14674 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 5901, column: 2)
!14675 = !DILocation(line: 5901, column: 2, scope: !14674)
!14676 = !DILocation(line: 5902, column: 12, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14673, file: !3, line: 5902, column: 7)
!14678 = !DILocation(line: 5902, column: 20, scope: !14677)
!14679 = !DILocation(line: 5902, column: 17, scope: !14677)
!14680 = !DILocation(line: 5902, column: 7, scope: !14673)
!14681 = !DILocation(line: 5903, column: 4, scope: !14677)
!14682 = !DILocation(line: 5901, column: 21, scope: !14673)
!14683 = !DILocation(line: 5901, column: 2, scope: !14673)
!14684 = distinct !{!14684, !14675, !14685}
!14685 = !DILocation(line: 5903, column: 4, scope: !14674)
!14686 = !DILocation(line: 5905, column: 11, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 5905, column: 6)
!14688 = !DILocation(line: 5905, column: 6, scope: !14687)
!14689 = !DILocation(line: 5905, column: 6, scope: !14656)
!14690 = !DILocation(line: 5906, column: 7, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14692, file: !3, line: 5906, column: 7)
!14692 = distinct !DILexicalBlock(scope: !14687, file: !3, line: 5905, column: 18)
!14693 = !DILocation(line: 5906, column: 13, scope: !14691)
!14694 = !DILocation(line: 5906, column: 18, scope: !14691)
!14695 = !DILocation(line: 5906, column: 7, scope: !14692)
!14696 = !DILocalVariable(name: "data_alloc", scope: !14697, file: !3, line: 5908, type: !2784)
!14697 = distinct !DILexicalBlock(scope: !14691, file: !3, line: 5906, column: 34)
!14698 = !DILocation(line: 5908, column: 23, scope: !14697)
!14699 = !DILocation(line: 5908, column: 41, scope: !14697)
!14700 = !DILocation(line: 5908, column: 36, scope: !14697)
!14701 = !DILocalVariable(name: "size", scope: !14697, file: !3, line: 5909, type: !14702)
!14702 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !14703, line: 46, baseType: !1116)
!14703 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!14704 = !DILocation(line: 5909, column: 11, scope: !14697)
!14705 = !DILocation(line: 5910, column: 12, scope: !14697)
!14706 = !DILocation(line: 5910, column: 18, scope: !14697)
!14707 = !DILocation(line: 5910, column: 4, scope: !14697)
!14708 = !DILocation(line: 5912, column: 11, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14697, file: !3, line: 5910, column: 24)
!14710 = !DILocation(line: 5913, column: 6, scope: !14709)
!14711 = !DILocation(line: 5916, column: 11, scope: !14709)
!14712 = !DILocation(line: 5917, column: 6, scope: !14709)
!14713 = !DILocation(line: 5919, column: 11, scope: !14709)
!14714 = !DILocation(line: 5920, column: 6, scope: !14709)
!14715 = !DILocation(line: 5922, column: 6, scope: !14709)
!14716 = !DILocation(line: 5924, column: 12, scope: !14697)
!14717 = !DILocation(line: 5924, column: 24, scope: !14697)
!14718 = !DILocation(line: 5924, column: 9, scope: !14697)
!14719 = !DILocation(line: 5925, column: 8, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14697, file: !3, line: 5925, column: 8)
!14721 = !DILocation(line: 5925, column: 20, scope: !14720)
!14722 = !DILocation(line: 5925, column: 8, scope: !14697)
!14723 = !DILocation(line: 5926, column: 5, scope: !14720)
!14724 = !DILocation(line: 5926, column: 15, scope: !14720)
!14725 = !DILocation(line: 5926, column: 27, scope: !14720)
!14726 = !DILocation(line: 5927, column: 24, scope: !14697)
!14727 = !DILocation(line: 5927, column: 36, scope: !14697)
!14728 = !DILocation(line: 5927, column: 4, scope: !14697)
!14729 = !DILocation(line: 5927, column: 16, scope: !14697)
!14730 = !DILocation(line: 5927, column: 22, scope: !14697)
!14731 = !DILocation(line: 5928, column: 11, scope: !14697)
!14732 = !DILocation(line: 5928, column: 23, scope: !14697)
!14733 = !DILocation(line: 5928, column: 30, scope: !14697)
!14734 = !DILocation(line: 5928, column: 37, scope: !14697)
!14735 = !DILocation(line: 5928, column: 4, scope: !14697)
!14736 = !DILocation(line: 5929, column: 3, scope: !14697)
!14737 = !DILocation(line: 5931, column: 16, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14691, file: !3, line: 5930, column: 8)
!14739 = !DILocation(line: 5931, column: 22, scope: !14738)
!14740 = !DILocation(line: 5931, column: 34, scope: !14738)
!14741 = !DILocation(line: 5931, column: 29, scope: !14738)
!14742 = !DILocation(line: 5931, column: 4, scope: !14738)
!14743 = !DILocation(line: 5933, column: 2, scope: !14692)
!14744 = !DILocation(line: 5935, column: 2, scope: !14656)
!14745 = !DILocation(line: 5936, column: 1, scope: !14656)
!14746 = distinct !DISubprogram(name: "RNA_parameter_set_lookup", scope: !3, file: !3, line: 5938, type: !14747, scopeLine: 5939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14747 = !DISubroutineType(types: !14748)
!14748 = !{null, !1351, !1031, !14659}
!14749 = !DILocalVariable(name: "parms", arg: 1, scope: !14746, file: !3, line: 5938, type: !1351)
!14750 = !DILocation(line: 5938, column: 46, scope: !14746)
!14751 = !DILocalVariable(name: "identifier", arg: 2, scope: !14746, file: !3, line: 5938, type: !1031)
!14752 = !DILocation(line: 5938, column: 65, scope: !14746)
!14753 = !DILocalVariable(name: "value", arg: 3, scope: !14746, file: !3, line: 5938, type: !14659)
!14754 = !DILocation(line: 5938, column: 89, scope: !14746)
!14755 = !DILocalVariable(name: "parm", scope: !14746, file: !3, line: 5940, type: !1021)
!14756 = !DILocation(line: 5940, column: 15, scope: !14746)
!14757 = !DILocation(line: 5942, column: 9, scope: !14746)
!14758 = !DILocation(line: 5942, column: 16, scope: !14746)
!14759 = !DILocation(line: 5942, column: 22, scope: !14746)
!14760 = !DILocation(line: 5942, column: 27, scope: !14746)
!14761 = !DILocation(line: 5942, column: 38, scope: !14746)
!14762 = !DILocation(line: 5942, column: 7, scope: !14746)
!14763 = !DILocation(line: 5943, column: 2, scope: !14746)
!14764 = !DILocation(line: 5943, column: 9, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14766, file: !3, line: 5943, column: 2)
!14766 = distinct !DILexicalBlock(scope: !14746, file: !3, line: 5943, column: 2)
!14767 = !DILocation(line: 5943, column: 2, scope: !14766)
!14768 = !DILocation(line: 5944, column: 38, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14765, file: !3, line: 5944, column: 7)
!14770 = !DILocation(line: 5944, column: 14, scope: !14769)
!14771 = !DILocation(line: 5944, column: 45, scope: !14769)
!14772 = !DILocation(line: 5944, column: 7, scope: !14769)
!14773 = !DILocation(line: 5944, column: 57, scope: !14769)
!14774 = !DILocation(line: 5944, column: 7, scope: !14765)
!14775 = !DILocation(line: 5945, column: 4, scope: !14769)
!14776 = !DILocation(line: 5944, column: 60, scope: !14769)
!14777 = !DILocation(line: 5943, column: 22, scope: !14765)
!14778 = !DILocation(line: 5943, column: 28, scope: !14765)
!14779 = !DILocation(line: 5943, column: 20, scope: !14765)
!14780 = !DILocation(line: 5943, column: 2, scope: !14765)
!14781 = distinct !{!14781, !14767, !14782}
!14782 = !DILocation(line: 5945, column: 4, scope: !14766)
!14783 = !DILocation(line: 5947, column: 6, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14746, file: !3, line: 5947, column: 6)
!14785 = !DILocation(line: 5947, column: 6, scope: !14746)
!14786 = !DILocation(line: 5948, column: 21, scope: !14784)
!14787 = !DILocation(line: 5948, column: 28, scope: !14784)
!14788 = !DILocation(line: 5948, column: 34, scope: !14784)
!14789 = !DILocation(line: 5948, column: 3, scope: !14784)
!14790 = !DILocation(line: 5949, column: 1, scope: !14746)
!14791 = distinct !DISubprogram(name: "RNA_parameter_dynamic_length_get", scope: !3, file: !3, line: 5951, type: !14792, scopeLine: 5952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14792 = !DISubroutineType(types: !14793)
!14793 = !{!48, !1351, !1021}
!14794 = !DILocalVariable(name: "parms", arg: 1, scope: !14791, file: !3, line: 5951, type: !1351)
!14795 = !DILocation(line: 5951, column: 53, scope: !14791)
!14796 = !DILocalVariable(name: "parm", arg: 2, scope: !14791, file: !3, line: 5951, type: !1021)
!14797 = !DILocation(line: 5951, column: 73, scope: !14791)
!14798 = !DILocalVariable(name: "iter", scope: !14791, file: !3, line: 5953, type: !14451)
!14799 = !DILocation(line: 5953, column: 20, scope: !14791)
!14800 = !DILocalVariable(name: "len", scope: !14791, file: !3, line: 5954, type: !48)
!14801 = !DILocation(line: 5954, column: 6, scope: !14791)
!14802 = !DILocation(line: 5956, column: 27, scope: !14791)
!14803 = !DILocation(line: 5956, column: 2, scope: !14791)
!14804 = !DILocation(line: 5958, column: 2, scope: !14791)
!14805 = !DILocation(line: 5958, column: 14, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14807, file: !3, line: 5958, column: 2)
!14807 = distinct !DILexicalBlock(scope: !14791, file: !3, line: 5958, column: 2)
!14808 = !DILocation(line: 5958, column: 2, scope: !14807)
!14809 = !DILocation(line: 5959, column: 12, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14806, file: !3, line: 5959, column: 7)
!14811 = !DILocation(line: 5959, column: 20, scope: !14810)
!14812 = !DILocation(line: 5959, column: 17, scope: !14810)
!14813 = !DILocation(line: 5959, column: 7, scope: !14806)
!14814 = !DILocation(line: 5960, column: 4, scope: !14810)
!14815 = !DILocation(line: 5958, column: 21, scope: !14806)
!14816 = !DILocation(line: 5958, column: 2, scope: !14806)
!14817 = distinct !{!14817, !14808, !14818}
!14818 = !DILocation(line: 5960, column: 4, scope: !14807)
!14819 = !DILocation(line: 5962, column: 11, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14791, file: !3, line: 5962, column: 6)
!14821 = !DILocation(line: 5962, column: 6, scope: !14820)
!14822 = !DILocation(line: 5962, column: 6, scope: !14791)
!14823 = !DILocation(line: 5963, column: 47, scope: !14820)
!14824 = !DILocation(line: 5963, column: 54, scope: !14820)
!14825 = !DILocation(line: 5963, column: 65, scope: !14820)
!14826 = !DILocation(line: 5963, column: 9, scope: !14820)
!14827 = !DILocation(line: 5963, column: 7, scope: !14820)
!14828 = !DILocation(line: 5963, column: 3, scope: !14820)
!14829 = !DILocation(line: 5965, column: 2, scope: !14791)
!14830 = !DILocation(line: 5967, column: 9, scope: !14791)
!14831 = !DILocation(line: 5967, column: 2, scope: !14791)
!14832 = distinct !DISubprogram(name: "RNA_parameter_dynamic_length_get_data", scope: !3, file: !3, line: 5986, type: !14833, scopeLine: 5987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14833 = !DISubroutineType(types: !14834)
!14834 = !{!48, !1351, !1021, !986}
!14835 = !DILocalVariable(name: "UNUSED_parms", arg: 1, scope: !14832, file: !3, line: 5986, type: !1351)
!14836 = !DILocation(line: 5986, column: 58, scope: !14832)
!14837 = !DILocalVariable(name: "parm", arg: 2, scope: !14832, file: !3, line: 5986, type: !1021)
!14838 = !DILocation(line: 5986, column: 86, scope: !14832)
!14839 = !DILocalVariable(name: "data", arg: 3, scope: !14832, file: !3, line: 5986, type: !986)
!14840 = !DILocation(line: 5986, column: 98, scope: !14832)
!14841 = !DILocation(line: 5988, column: 6, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14832, file: !3, line: 5988, column: 6)
!14843 = !DILocation(line: 5988, column: 12, scope: !14842)
!14844 = !DILocation(line: 5988, column: 17, scope: !14842)
!14845 = !DILocation(line: 5988, column: 6, scope: !14832)
!14846 = !DILocation(line: 5989, column: 37, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14842, file: !3, line: 5988, column: 33)
!14848 = !DILocation(line: 5989, column: 16, scope: !14847)
!14849 = !DILocation(line: 5989, column: 44, scope: !14847)
!14850 = !DILocation(line: 5989, column: 10, scope: !14847)
!14851 = !DILocation(line: 5989, column: 3, scope: !14847)
!14852 = !DILocation(line: 5991, column: 2, scope: !14832)
!14853 = !DILocation(line: 5992, column: 1, scope: !14832)
!14854 = distinct !DISubprogram(name: "RNA_parameter_dynamic_length_set", scope: !3, file: !3, line: 5970, type: !14855, scopeLine: 5971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14855 = !DISubroutineType(types: !14856)
!14856 = !{null, !1351, !1021, !48}
!14857 = !DILocalVariable(name: "parms", arg: 1, scope: !14854, file: !3, line: 5970, type: !1351)
!14858 = !DILocation(line: 5970, column: 54, scope: !14854)
!14859 = !DILocalVariable(name: "parm", arg: 2, scope: !14854, file: !3, line: 5970, type: !1021)
!14860 = !DILocation(line: 5970, column: 74, scope: !14854)
!14861 = !DILocalVariable(name: "length", arg: 3, scope: !14854, file: !3, line: 5970, type: !48)
!14862 = !DILocation(line: 5970, column: 84, scope: !14854)
!14863 = !DILocalVariable(name: "iter", scope: !14854, file: !3, line: 5972, type: !14451)
!14864 = !DILocation(line: 5972, column: 20, scope: !14854)
!14865 = !DILocation(line: 5974, column: 27, scope: !14854)
!14866 = !DILocation(line: 5974, column: 2, scope: !14854)
!14867 = !DILocation(line: 5976, column: 2, scope: !14854)
!14868 = !DILocation(line: 5976, column: 14, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14870, file: !3, line: 5976, column: 2)
!14870 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 5976, column: 2)
!14871 = !DILocation(line: 5976, column: 2, scope: !14870)
!14872 = !DILocation(line: 5977, column: 12, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 5977, column: 7)
!14874 = !DILocation(line: 5977, column: 20, scope: !14873)
!14875 = !DILocation(line: 5977, column: 17, scope: !14873)
!14876 = !DILocation(line: 5977, column: 7, scope: !14869)
!14877 = !DILocation(line: 5978, column: 4, scope: !14873)
!14878 = !DILocation(line: 5976, column: 21, scope: !14869)
!14879 = !DILocation(line: 5976, column: 2, scope: !14869)
!14880 = distinct !{!14880, !14871, !14881}
!14881 = !DILocation(line: 5978, column: 4, scope: !14870)
!14882 = !DILocation(line: 5980, column: 11, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 5980, column: 6)
!14884 = !DILocation(line: 5980, column: 6, scope: !14883)
!14885 = !DILocation(line: 5980, column: 6, scope: !14854)
!14886 = !DILocation(line: 5981, column: 41, scope: !14883)
!14887 = !DILocation(line: 5981, column: 48, scope: !14883)
!14888 = !DILocation(line: 5981, column: 59, scope: !14883)
!14889 = !DILocation(line: 5981, column: 65, scope: !14883)
!14890 = !DILocation(line: 5981, column: 3, scope: !14883)
!14891 = !DILocation(line: 5983, column: 2, scope: !14854)
!14892 = !DILocation(line: 5984, column: 1, scope: !14854)
!14893 = distinct !DISubprogram(name: "RNA_parameter_dynamic_length_set_data", scope: !3, file: !3, line: 5994, type: !14894, scopeLine: 5995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14894 = !DISubroutineType(types: !14895)
!14895 = !{null, !1351, !1021, !986, !48}
!14896 = !DILocalVariable(name: "UNUSED_parms", arg: 1, scope: !14893, file: !3, line: 5994, type: !1351)
!14897 = !DILocation(line: 5994, column: 59, scope: !14893)
!14898 = !DILocalVariable(name: "parm", arg: 2, scope: !14893, file: !3, line: 5994, type: !1021)
!14899 = !DILocation(line: 5994, column: 87, scope: !14893)
!14900 = !DILocalVariable(name: "data", arg: 3, scope: !14893, file: !3, line: 5994, type: !986)
!14901 = !DILocation(line: 5994, column: 99, scope: !14893)
!14902 = !DILocalVariable(name: "length", arg: 4, scope: !14893, file: !3, line: 5994, type: !48)
!14903 = !DILocation(line: 5994, column: 109, scope: !14893)
!14904 = !DILocation(line: 5996, column: 6, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14893, file: !3, line: 5996, column: 6)
!14906 = !DILocation(line: 5996, column: 12, scope: !14905)
!14907 = !DILocation(line: 5996, column: 17, scope: !14905)
!14908 = !DILocation(line: 5996, column: 6, scope: !14893)
!14909 = !DILocation(line: 5997, column: 54, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14905, file: !3, line: 5996, column: 33)
!14911 = !DILocation(line: 5997, column: 44, scope: !14910)
!14912 = !DILocation(line: 5997, column: 25, scope: !14910)
!14913 = !DILocation(line: 5997, column: 4, scope: !14910)
!14914 = !DILocation(line: 5997, column: 32, scope: !14910)
!14915 = !DILocation(line: 5997, column: 42, scope: !14910)
!14916 = !DILocation(line: 5998, column: 2, scope: !14910)
!14917 = !DILocation(line: 5999, column: 1, scope: !14893)
!14918 = distinct !DISubprogram(name: "RNA_function_call", scope: !3, file: !3, line: 6001, type: !14919, scopeLine: 6002, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14919 = !DISubroutineType(types: !14920)
!14920 = !{!48, !5451, !10188, !1349, !2457, !1351}
!14921 = !DILocalVariable(name: "C", arg: 1, scope: !14918, file: !3, line: 6001, type: !5451)
!14922 = !DILocation(line: 6001, column: 33, scope: !14918)
!14923 = !DILocalVariable(name: "reports", arg: 2, scope: !14918, file: !3, line: 6001, type: !10188)
!14924 = !DILocation(line: 6001, column: 48, scope: !14918)
!14925 = !DILocalVariable(name: "ptr", arg: 3, scope: !14918, file: !3, line: 6001, type: !1349)
!14926 = !DILocation(line: 6001, column: 69, scope: !14918)
!14927 = !DILocalVariable(name: "func", arg: 4, scope: !14918, file: !3, line: 6001, type: !2457)
!14928 = !DILocation(line: 6001, column: 87, scope: !14918)
!14929 = !DILocalVariable(name: "parms", arg: 5, scope: !14918, file: !3, line: 6001, type: !1351)
!14930 = !DILocation(line: 6001, column: 108, scope: !14918)
!14931 = !DILocation(line: 6003, column: 6, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14918, file: !3, line: 6003, column: 6)
!14933 = !DILocation(line: 6003, column: 12, scope: !14932)
!14934 = !DILocation(line: 6003, column: 6, scope: !14918)
!14935 = !DILocation(line: 6004, column: 3, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14932, file: !3, line: 6003, column: 18)
!14937 = !DILocation(line: 6004, column: 9, scope: !14936)
!14938 = !DILocation(line: 6004, column: 14, scope: !14936)
!14939 = !DILocation(line: 6004, column: 17, scope: !14936)
!14940 = !DILocation(line: 6004, column: 26, scope: !14936)
!14941 = !DILocation(line: 6004, column: 31, scope: !14936)
!14942 = !DILocation(line: 6006, column: 3, scope: !14936)
!14943 = !DILocation(line: 6009, column: 2, scope: !14918)
!14944 = !DILocation(line: 6010, column: 1, scope: !14918)
!14945 = distinct !DISubprogram(name: "RNA_function_call_lookup", scope: !3, file: !3, line: 6012, type: !14946, scopeLine: 6014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14946 = !DISubroutineType(types: !14947)
!14947 = !{!48, !5451, !10188, !1349, !1031, !1351}
!14948 = !DILocalVariable(name: "C", arg: 1, scope: !14945, file: !3, line: 6012, type: !5451)
!14949 = !DILocation(line: 6012, column: 40, scope: !14945)
!14950 = !DILocalVariable(name: "reports", arg: 2, scope: !14945, file: !3, line: 6012, type: !10188)
!14951 = !DILocation(line: 6012, column: 55, scope: !14945)
!14952 = !DILocalVariable(name: "ptr", arg: 3, scope: !14945, file: !3, line: 6012, type: !1349)
!14953 = !DILocation(line: 6012, column: 76, scope: !14945)
!14954 = !DILocalVariable(name: "identifier", arg: 4, scope: !14945, file: !3, line: 6012, type: !1031)
!14955 = !DILocation(line: 6012, column: 93, scope: !14945)
!14956 = !DILocalVariable(name: "parms", arg: 5, scope: !14945, file: !3, line: 6013, type: !1351)
!14957 = !DILocation(line: 6013, column: 45, scope: !14945)
!14958 = !DILocalVariable(name: "func", scope: !14945, file: !3, line: 6015, type: !2457)
!14959 = !DILocation(line: 6015, column: 15, scope: !14945)
!14960 = !DILocation(line: 6017, column: 34, scope: !14945)
!14961 = !DILocation(line: 6017, column: 39, scope: !14945)
!14962 = !DILocation(line: 6017, column: 45, scope: !14945)
!14963 = !DILocation(line: 6017, column: 9, scope: !14945)
!14964 = !DILocation(line: 6017, column: 7, scope: !14945)
!14965 = !DILocation(line: 6019, column: 6, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14945, file: !3, line: 6019, column: 6)
!14967 = !DILocation(line: 6019, column: 6, scope: !14945)
!14968 = !DILocation(line: 6020, column: 28, scope: !14966)
!14969 = !DILocation(line: 6020, column: 31, scope: !14966)
!14970 = !DILocation(line: 6020, column: 40, scope: !14966)
!14971 = !DILocation(line: 6020, column: 45, scope: !14966)
!14972 = !DILocation(line: 6020, column: 51, scope: !14966)
!14973 = !DILocation(line: 6020, column: 10, scope: !14966)
!14974 = !DILocation(line: 6020, column: 3, scope: !14966)
!14975 = !DILocation(line: 6022, column: 2, scope: !14945)
!14976 = !DILocation(line: 6023, column: 1, scope: !14945)
!14977 = distinct !DISubprogram(name: "RNA_function_call_direct", scope: !3, file: !3, line: 6025, type: !14978, scopeLine: 6027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!14978 = !DISubroutineType(types: !14979)
!14979 = !{!48, !5451, !10188, !1349, !2457, !1031, null}
!14980 = !DILocalVariable(name: "C", arg: 1, scope: !14977, file: !3, line: 6025, type: !5451)
!14981 = !DILocation(line: 6025, column: 40, scope: !14977)
!14982 = !DILocalVariable(name: "reports", arg: 2, scope: !14977, file: !3, line: 6025, type: !10188)
!14983 = !DILocation(line: 6025, column: 55, scope: !14977)
!14984 = !DILocalVariable(name: "ptr", arg: 3, scope: !14977, file: !3, line: 6025, type: !1349)
!14985 = !DILocation(line: 6025, column: 76, scope: !14977)
!14986 = !DILocalVariable(name: "func", arg: 4, scope: !14977, file: !3, line: 6025, type: !2457)
!14987 = !DILocation(line: 6025, column: 94, scope: !14977)
!14988 = !DILocalVariable(name: "format", arg: 5, scope: !14977, file: !3, line: 6026, type: !1031)
!14989 = !DILocation(line: 6026, column: 42, scope: !14977)
!14990 = !DILocalVariable(name: "args", scope: !14977, file: !3, line: 6028, type: !14991)
!14991 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !14992, line: 52, baseType: !14993)
!14992 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!14993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !14994, line: 32, baseType: !14995)
!14994 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stdarg.h", directory: "/home/venkat/IF-DV")
!14995 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 6028, baseType: !14996)
!14996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14997, size: 192, elements: !1712)
!14997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 6028, size: 192, elements: !14998)
!14998 = !{!14999, !15000, !15001, !15002}
!14999 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !14997, file: !3, line: 6028, baseType: !7, size: 32)
!15000 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !14997, file: !3, line: 6028, baseType: !7, size: 32, offset: 32)
!15001 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !14997, file: !3, line: 6028, baseType: !986, size: 64, offset: 64)
!15002 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !14997, file: !3, line: 6028, baseType: !986, size: 64, offset: 128)
!15003 = !DILocation(line: 6028, column: 10, scope: !14977)
!15004 = !DILocalVariable(name: "ret", scope: !14977, file: !3, line: 6029, type: !48)
!15005 = !DILocation(line: 6029, column: 6, scope: !14977)
!15006 = !DILocation(line: 6031, column: 2, scope: !14977)
!15007 = !DILocation(line: 6033, column: 36, scope: !14977)
!15008 = !DILocation(line: 6033, column: 39, scope: !14977)
!15009 = !DILocation(line: 6033, column: 48, scope: !14977)
!15010 = !DILocation(line: 6033, column: 53, scope: !14977)
!15011 = !DILocation(line: 6033, column: 59, scope: !14977)
!15012 = !DILocation(line: 6033, column: 67, scope: !14977)
!15013 = !DILocation(line: 6033, column: 8, scope: !14977)
!15014 = !DILocation(line: 6033, column: 6, scope: !14977)
!15015 = !DILocation(line: 6035, column: 2, scope: !14977)
!15016 = !DILocation(line: 6037, column: 9, scope: !14977)
!15017 = !DILocation(line: 6037, column: 2, scope: !14977)
!15018 = distinct !DISubprogram(name: "RNA_function_call_direct_va", scope: !3, file: !3, line: 6229, type: !15019, scopeLine: 6231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!15019 = !DISubroutineType(types: !15020)
!15020 = !{!48, !5451, !10188, !1349, !2457, !1031, !15021}
!15021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14997, size: 64)
!15022 = !DILocalVariable(name: "C", arg: 1, scope: !15018, file: !3, line: 6229, type: !5451)
!15023 = !DILocation(line: 6229, column: 43, scope: !15018)
!15024 = !DILocalVariable(name: "reports", arg: 2, scope: !15018, file: !3, line: 6229, type: !10188)
!15025 = !DILocation(line: 6229, column: 58, scope: !15018)
!15026 = !DILocalVariable(name: "ptr", arg: 3, scope: !15018, file: !3, line: 6229, type: !1349)
!15027 = !DILocation(line: 6229, column: 79, scope: !15018)
!15028 = !DILocalVariable(name: "func", arg: 4, scope: !15018, file: !3, line: 6229, type: !2457)
!15029 = !DILocation(line: 6229, column: 97, scope: !15018)
!15030 = !DILocalVariable(name: "format", arg: 5, scope: !15018, file: !3, line: 6230, type: !1031)
!15031 = !DILocation(line: 6230, column: 45, scope: !15018)
!15032 = !DILocalVariable(name: "args", arg: 6, scope: !15018, file: !3, line: 6230, type: !15021)
!15033 = !DILocation(line: 6230, column: 61, scope: !15018)
!15034 = !DILocalVariable(name: "funcptr", scope: !15018, file: !3, line: 6232, type: !1350)
!15035 = !DILocation(line: 6232, column: 13, scope: !15018)
!15036 = !DILocalVariable(name: "parms", scope: !15018, file: !3, line: 6233, type: !1352)
!15037 = !DILocation(line: 6233, column: 16, scope: !15018)
!15038 = !DILocalVariable(name: "iter", scope: !15018, file: !3, line: 6234, type: !14451)
!15039 = !DILocation(line: 6234, column: 20, scope: !15018)
!15040 = !DILocalVariable(name: "pret", scope: !15018, file: !3, line: 6235, type: !1021)
!15041 = !DILocation(line: 6235, column: 15, scope: !15018)
!15042 = !DILocalVariable(name: "parm", scope: !15018, file: !3, line: 6235, type: !1021)
!15043 = !DILocation(line: 6235, column: 22, scope: !15018)
!15044 = !DILocalVariable(name: "type", scope: !15018, file: !3, line: 6236, type: !1039)
!15045 = !DILocation(line: 6236, column: 15, scope: !15018)
!15046 = !DILocalVariable(name: "i", scope: !15018, file: !3, line: 6237, type: !48)
!15047 = !DILocation(line: 6237, column: 6, scope: !15018)
!15048 = !DILocalVariable(name: "ofs", scope: !15018, file: !3, line: 6237, type: !48)
!15049 = !DILocation(line: 6237, column: 9, scope: !15018)
!15050 = !DILocalVariable(name: "flen", scope: !15018, file: !3, line: 6237, type: !48)
!15051 = !DILocation(line: 6237, column: 14, scope: !15018)
!15052 = !DILocalVariable(name: "flag", scope: !15018, file: !3, line: 6237, type: !48)
!15053 = !DILocation(line: 6237, column: 20, scope: !15018)
!15054 = !DILocalVariable(name: "len", scope: !15018, file: !3, line: 6237, type: !48)
!15055 = !DILocation(line: 6237, column: 26, scope: !15018)
!15056 = !DILocalVariable(name: "alen", scope: !15018, file: !3, line: 6237, type: !48)
!15057 = !DILocation(line: 6237, column: 31, scope: !15018)
!15058 = !DILocalVariable(name: "err", scope: !15018, file: !3, line: 6237, type: !48)
!15059 = !DILocation(line: 6237, column: 37, scope: !15018)
!15060 = !DILocalVariable(name: "tid", scope: !15018, file: !3, line: 6238, type: !1031)
!15061 = !DILocation(line: 6238, column: 14, scope: !15018)
!15062 = !DILocalVariable(name: "fid", scope: !15018, file: !3, line: 6238, type: !1031)
!15063 = !DILocation(line: 6238, column: 20, scope: !15018)
!15064 = !DILocalVariable(name: "pid", scope: !15018, file: !3, line: 6238, type: !1031)
!15065 = !DILocation(line: 6238, column: 26, scope: !15018)
!15066 = !DILocalVariable(name: "ftype", scope: !15018, file: !3, line: 6239, type: !996)
!15067 = !DILocation(line: 6239, column: 7, scope: !15018)
!15068 = !DILocalVariable(name: "retdata", scope: !15018, file: !3, line: 6240, type: !1375)
!15069 = !DILocation(line: 6240, column: 9, scope: !15018)
!15070 = !DILocation(line: 6242, column: 42, scope: !15018)
!15071 = !DILocation(line: 6242, column: 2, scope: !15018)
!15072 = !DILocation(line: 6244, column: 30, scope: !15018)
!15073 = !DILocation(line: 6244, column: 35, scope: !15018)
!15074 = !DILocation(line: 6244, column: 8, scope: !15018)
!15075 = !DILocation(line: 6244, column: 6, scope: !15018)
!15076 = !DILocation(line: 6245, column: 32, scope: !15018)
!15077 = !DILocation(line: 6245, column: 8, scope: !15018)
!15078 = !DILocation(line: 6245, column: 6, scope: !15018)
!15079 = !DILocation(line: 6246, column: 9, scope: !15018)
!15080 = !DILocation(line: 6246, column: 15, scope: !15018)
!15081 = !DILocation(line: 6246, column: 7, scope: !15018)
!15082 = !DILocation(line: 6247, column: 16, scope: !15018)
!15083 = !DILocation(line: 6247, column: 9, scope: !15018)
!15084 = !DILocation(line: 6247, column: 7, scope: !15018)
!15085 = !DILocation(line: 6249, column: 36, scope: !15018)
!15086 = !DILocation(line: 6249, column: 41, scope: !15018)
!15087 = !DILocation(line: 6249, column: 2, scope: !15018)
!15088 = !DILocation(line: 6250, column: 2, scope: !15018)
!15089 = !DILocation(line: 6252, column: 9, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 6252, column: 2)
!15091 = !DILocation(line: 6252, column: 18, scope: !15090)
!15092 = !DILocation(line: 6252, column: 7, scope: !15090)
!15093 = !DILocation(line: 6252, column: 28, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 6252, column: 2)
!15095 = !DILocation(line: 6252, column: 2, scope: !15090)
!15096 = !DILocation(line: 6253, column: 15, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15094, file: !3, line: 6252, column: 72)
!15098 = !DILocation(line: 6253, column: 8, scope: !15097)
!15099 = !DILocation(line: 6254, column: 28, scope: !15097)
!15100 = !DILocation(line: 6254, column: 10, scope: !15097)
!15101 = !DILocation(line: 6254, column: 8, scope: !15097)
!15102 = !DILocation(line: 6256, column: 7, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 6256, column: 7)
!15104 = !DILocation(line: 6256, column: 15, scope: !15103)
!15105 = !DILocation(line: 6256, column: 12, scope: !15103)
!15106 = !DILocation(line: 6256, column: 7, scope: !15097)
!15107 = !DILocation(line: 6257, column: 19, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 6256, column: 21)
!15109 = !DILocation(line: 6257, column: 14, scope: !15108)
!15110 = !DILocation(line: 6257, column: 12, scope: !15108)
!15111 = !DILocation(line: 6258, column: 4, scope: !15108)
!15112 = !DILocation(line: 6260, column: 12, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 6260, column: 12)
!15114 = !DILocation(line: 6260, column: 17, scope: !15113)
!15115 = !DILocation(line: 6260, column: 12, scope: !15103)
!15116 = !DILocation(line: 6261, column: 4, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15113, file: !3, line: 6260, column: 32)
!15118 = !DILocation(line: 6264, column: 33, scope: !15097)
!15119 = !DILocation(line: 6264, column: 9, scope: !15097)
!15120 = !DILocation(line: 6264, column: 7, scope: !15097)
!15121 = !DILocation(line: 6266, column: 7, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 6266, column: 7)
!15123 = !DILocation(line: 6266, column: 14, scope: !15122)
!15124 = !DILocation(line: 6266, column: 11, scope: !15122)
!15125 = !DILocation(line: 6266, column: 19, scope: !15122)
!15126 = !DILocation(line: 6266, column: 22, scope: !15122)
!15127 = !DILocation(line: 6266, column: 29, scope: !15122)
!15128 = !DILocation(line: 6266, column: 34, scope: !15122)
!15129 = !DILocation(line: 6266, column: 7, scope: !15097)
!15130 = !DILocation(line: 6267, column: 8, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 6267, column: 8)
!15132 = distinct !DILexicalBlock(scope: !15122, file: !3, line: 6266, column: 42)
!15133 = !DILocation(line: 6267, column: 13, scope: !15131)
!15134 = !DILocation(line: 6267, column: 8, scope: !15132)
!15135 = !DILocation(line: 6268, column: 9, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15131, file: !3, line: 6267, column: 30)
!15137 = !DILocation(line: 6269, column: 13, scope: !15136)
!15138 = !DILocation(line: 6269, column: 63, scope: !15136)
!15139 = !DILocation(line: 6269, column: 68, scope: !15136)
!15140 = !DILocation(line: 6269, column: 73, scope: !15136)
!15141 = !DILocation(line: 6269, column: 5, scope: !15136)
!15142 = !DILocation(line: 6270, column: 5, scope: !15136)
!15143 = !DILocation(line: 6272, column: 7, scope: !15132)
!15144 = !DILocation(line: 6273, column: 4, scope: !15132)
!15145 = !DILocation(line: 6276, column: 28, scope: !15097)
!15146 = !DILocation(line: 6276, column: 10, scope: !15097)
!15147 = !DILocation(line: 6276, column: 8, scope: !15097)
!15148 = !DILocation(line: 6277, column: 11, scope: !15097)
!15149 = !DILocation(line: 6277, column: 21, scope: !15097)
!15150 = !DILocation(line: 6277, column: 9, scope: !15097)
!15151 = !DILocation(line: 6278, column: 45, scope: !15097)
!15152 = !DILocation(line: 6278, column: 9, scope: !15097)
!15153 = !DILocation(line: 6278, column: 7, scope: !15097)
!15154 = !DILocation(line: 6279, column: 43, scope: !15097)
!15155 = !DILocation(line: 6279, column: 51, scope: !15097)
!15156 = !DILocation(line: 6279, column: 56, scope: !15097)
!15157 = !DILocation(line: 6279, column: 10, scope: !15097)
!15158 = !DILocation(line: 6279, column: 8, scope: !15097)
!15159 = !DILocation(line: 6281, column: 7, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 6281, column: 7)
!15161 = !DILocation(line: 6281, column: 14, scope: !15160)
!15162 = !DILocation(line: 6281, column: 11, scope: !15160)
!15163 = !DILocation(line: 6281, column: 7, scope: !15097)
!15164 = !DILocation(line: 6282, column: 8, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15160, file: !3, line: 6281, column: 20)
!15166 = !DILocation(line: 6283, column: 12, scope: !15165)
!15167 = !DILocation(line: 6286, column: 12, scope: !15165)
!15168 = !DILocation(line: 6286, column: 17, scope: !15165)
!15169 = !DILocation(line: 6286, column: 22, scope: !15165)
!15170 = !DILocation(line: 6286, column: 27, scope: !15165)
!15171 = !DILocation(line: 6286, column: 32, scope: !15165)
!15172 = !DILocation(line: 6283, column: 4, scope: !15165)
!15173 = !DILocation(line: 6287, column: 4, scope: !15165)
!15174 = !DILocation(line: 6290, column: 11, scope: !15097)
!15175 = !DILocation(line: 6290, column: 3, scope: !15097)
!15176 = !DILocalVariable(name: "arg", scope: !15177, file: !3, line: 6295, type: !48)
!15177 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 6294, column: 4)
!15178 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 6290, column: 17)
!15179 = !DILocation(line: 6295, column: 9, scope: !15177)
!15180 = !DILocation(line: 6295, column: 15, scope: !15177)
!15181 = !DILocation(line: 6296, column: 50, scope: !15177)
!15182 = !DILocation(line: 6296, column: 56, scope: !15177)
!15183 = !DILocation(line: 6296, column: 62, scope: !15177)
!15184 = !DILocation(line: 6296, column: 69, scope: !15177)
!15185 = !DILocation(line: 6296, column: 79, scope: !15177)
!15186 = !DILocation(line: 6296, column: 85, scope: !15177)
!15187 = !DILocation(line: 6297, column: 46, scope: !15177)
!15188 = !DILocation(line: 6297, column: 51, scope: !15177)
!15189 = !DILocation(line: 6297, column: 56, scope: !15177)
!15190 = !DILocation(line: 6296, column: 11, scope: !15177)
!15191 = !DILocation(line: 6296, column: 9, scope: !15177)
!15192 = !DILocation(line: 6298, column: 5, scope: !15177)
!15193 = !DILocalVariable(name: "arg", scope: !15194, file: !3, line: 6302, type: !1269)
!15194 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 6301, column: 4)
!15195 = !DILocation(line: 6302, column: 12, scope: !15194)
!15196 = !DILocation(line: 6302, column: 18, scope: !15194)
!15197 = !DILocation(line: 6303, column: 50, scope: !15194)
!15198 = !DILocation(line: 6303, column: 56, scope: !15194)
!15199 = !DILocation(line: 6303, column: 62, scope: !15194)
!15200 = !DILocation(line: 6303, column: 69, scope: !15194)
!15201 = !DILocation(line: 6303, column: 79, scope: !15194)
!15202 = !DILocation(line: 6303, column: 85, scope: !15194)
!15203 = !DILocation(line: 6304, column: 46, scope: !15194)
!15204 = !DILocation(line: 6304, column: 51, scope: !15194)
!15205 = !DILocation(line: 6304, column: 56, scope: !15194)
!15206 = !DILocation(line: 6303, column: 11, scope: !15194)
!15207 = !DILocation(line: 6303, column: 9, scope: !15194)
!15208 = !DILocation(line: 6305, column: 5, scope: !15194)
!15209 = !DILocalVariable(name: "arg", scope: !15210, file: !3, line: 6309, type: !1031)
!15210 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 6308, column: 4)
!15211 = !DILocation(line: 6309, column: 17, scope: !15210)
!15212 = !DILocation(line: 6309, column: 23, scope: !15210)
!15213 = !DILocation(line: 6310, column: 50, scope: !15210)
!15214 = !DILocation(line: 6310, column: 56, scope: !15210)
!15215 = !DILocation(line: 6310, column: 62, scope: !15210)
!15216 = !DILocation(line: 6310, column: 69, scope: !15210)
!15217 = !DILocation(line: 6310, column: 79, scope: !15210)
!15218 = !DILocation(line: 6310, column: 85, scope: !15210)
!15219 = !DILocation(line: 6311, column: 46, scope: !15210)
!15220 = !DILocation(line: 6311, column: 51, scope: !15210)
!15221 = !DILocation(line: 6311, column: 56, scope: !15210)
!15222 = !DILocation(line: 6310, column: 11, scope: !15210)
!15223 = !DILocation(line: 6310, column: 9, scope: !15210)
!15224 = !DILocation(line: 6312, column: 5, scope: !15210)
!15225 = !DILocalVariable(name: "srna", scope: !15226, file: !3, line: 6316, type: !2639)
!15226 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 6315, column: 4)
!15227 = !DILocation(line: 6316, column: 16, scope: !15226)
!15228 = !DILocation(line: 6316, column: 23, scope: !15226)
!15229 = !DILocalVariable(name: "arg", scope: !15226, file: !3, line: 6317, type: !986)
!15230 = !DILocation(line: 6317, column: 11, scope: !15226)
!15231 = !DILocation(line: 6317, column: 17, scope: !15226)
!15232 = !DILocation(line: 6318, column: 50, scope: !15226)
!15233 = !DILocation(line: 6318, column: 56, scope: !15226)
!15234 = !DILocation(line: 6318, column: 62, scope: !15226)
!15235 = !DILocation(line: 6318, column: 69, scope: !15226)
!15236 = !DILocation(line: 6318, column: 79, scope: !15226)
!15237 = !DILocation(line: 6318, column: 85, scope: !15226)
!15238 = !DILocation(line: 6319, column: 40, scope: !15226)
!15239 = !DILocation(line: 6319, column: 46, scope: !15226)
!15240 = !DILocation(line: 6319, column: 51, scope: !15226)
!15241 = !DILocation(line: 6319, column: 56, scope: !15226)
!15242 = !DILocation(line: 6318, column: 11, scope: !15226)
!15243 = !DILocation(line: 6318, column: 9, scope: !15226)
!15244 = !DILocation(line: 6320, column: 5, scope: !15226)
!15245 = !DILocalVariable(name: "srna", scope: !15246, file: !3, line: 6324, type: !2639)
!15246 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 6323, column: 4)
!15247 = !DILocation(line: 6324, column: 16, scope: !15246)
!15248 = !DILocation(line: 6324, column: 23, scope: !15246)
!15249 = !DILocalVariable(name: "arg", scope: !15246, file: !3, line: 6325, type: !1642)
!15250 = !DILocation(line: 6325, column: 15, scope: !15246)
!15251 = !DILocation(line: 6325, column: 21, scope: !15246)
!15252 = !DILocation(line: 6326, column: 50, scope: !15246)
!15253 = !DILocation(line: 6326, column: 56, scope: !15246)
!15254 = !DILocation(line: 6326, column: 62, scope: !15246)
!15255 = !DILocation(line: 6326, column: 69, scope: !15246)
!15256 = !DILocation(line: 6326, column: 79, scope: !15246)
!15257 = !DILocation(line: 6326, column: 85, scope: !15246)
!15258 = !DILocation(line: 6327, column: 40, scope: !15246)
!15259 = !DILocation(line: 6327, column: 46, scope: !15246)
!15260 = !DILocation(line: 6327, column: 51, scope: !15246)
!15261 = !DILocation(line: 6327, column: 56, scope: !15246)
!15262 = !DILocation(line: 6326, column: 11, scope: !15246)
!15263 = !DILocation(line: 6326, column: 9, scope: !15246)
!15264 = !DILocation(line: 6328, column: 5, scope: !15246)
!15265 = !DILocation(line: 6333, column: 50, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 6331, column: 4)
!15267 = !DILocation(line: 6333, column: 56, scope: !15266)
!15268 = !DILocation(line: 6333, column: 62, scope: !15266)
!15269 = !DILocation(line: 6333, column: 69, scope: !15266)
!15270 = !DILocation(line: 6333, column: 79, scope: !15266)
!15271 = !DILocation(line: 6334, column: 46, scope: !15266)
!15272 = !DILocation(line: 6334, column: 51, scope: !15266)
!15273 = !DILocation(line: 6334, column: 56, scope: !15266)
!15274 = !DILocation(line: 6333, column: 11, scope: !15266)
!15275 = !DILocation(line: 6333, column: 9, scope: !15266)
!15276 = !DILocation(line: 6335, column: 5, scope: !15266)
!15277 = !DILocation(line: 6339, column: 7, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 6339, column: 7)
!15279 = !DILocation(line: 6339, column: 11, scope: !15278)
!15280 = !DILocation(line: 6339, column: 7, scope: !15097)
!15281 = !DILocation(line: 6340, column: 4, scope: !15278)
!15282 = !DILocation(line: 6341, column: 2, scope: !15097)
!15283 = !DILocation(line: 6252, column: 35, scope: !15094)
!15284 = !DILocation(line: 6252, column: 68, scope: !15094)
!15285 = !DILocation(line: 6252, column: 2, scope: !15094)
!15286 = distinct !{!15286, !15095, !15287}
!15287 = !DILocation(line: 6341, column: 2, scope: !15090)
!15288 = !DILocation(line: 6343, column: 6, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 6343, column: 6)
!15290 = !DILocation(line: 6343, column: 10, scope: !15289)
!15291 = !DILocation(line: 6343, column: 6, scope: !15018)
!15292 = !DILocation(line: 6344, column: 27, scope: !15289)
!15293 = !DILocation(line: 6344, column: 30, scope: !15289)
!15294 = !DILocation(line: 6344, column: 39, scope: !15289)
!15295 = !DILocation(line: 6344, column: 44, scope: !15289)
!15296 = !DILocation(line: 6344, column: 9, scope: !15289)
!15297 = !DILocation(line: 6344, column: 7, scope: !15289)
!15298 = !DILocation(line: 6344, column: 3, scope: !15289)
!15299 = !DILocation(line: 6347, column: 6, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 6347, column: 6)
!15301 = !DILocation(line: 6347, column: 10, scope: !15300)
!15302 = !DILocation(line: 6347, column: 15, scope: !15300)
!15303 = !DILocation(line: 6347, column: 18, scope: !15300)
!15304 = !DILocation(line: 6347, column: 23, scope: !15300)
!15305 = !DILocation(line: 6347, column: 26, scope: !15300)
!15306 = !DILocation(line: 6347, column: 32, scope: !15300)
!15307 = !DILocation(line: 6347, column: 30, scope: !15300)
!15308 = !DILocation(line: 6347, column: 37, scope: !15300)
!15309 = !DILocation(line: 6347, column: 40, scope: !15300)
!15310 = !DILocation(line: 6347, column: 50, scope: !15300)
!15311 = !DILocation(line: 6347, column: 54, scope: !15300)
!15312 = !DILocation(line: 6347, column: 6, scope: !15018)
!15313 = !DILocation(line: 6348, column: 10, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15300, file: !3, line: 6347, column: 62)
!15315 = !DILocation(line: 6348, column: 8, scope: !15314)
!15316 = !DILocation(line: 6350, column: 28, scope: !15314)
!15317 = !DILocation(line: 6350, column: 10, scope: !15314)
!15318 = !DILocation(line: 6350, column: 8, scope: !15314)
!15319 = !DILocation(line: 6351, column: 11, scope: !15314)
!15320 = !DILocation(line: 6351, column: 21, scope: !15314)
!15321 = !DILocation(line: 6351, column: 9, scope: !15314)
!15322 = !DILocation(line: 6352, column: 45, scope: !15314)
!15323 = !DILocation(line: 6352, column: 9, scope: !15314)
!15324 = !DILocation(line: 6352, column: 7, scope: !15314)
!15325 = !DILocation(line: 6353, column: 43, scope: !15314)
!15326 = !DILocation(line: 6353, column: 51, scope: !15314)
!15327 = !DILocation(line: 6353, column: 56, scope: !15314)
!15328 = !DILocation(line: 6353, column: 10, scope: !15314)
!15329 = !DILocation(line: 6353, column: 8, scope: !15314)
!15330 = !DILocation(line: 6355, column: 7, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15314, file: !3, line: 6355, column: 7)
!15332 = !DILocation(line: 6355, column: 14, scope: !15331)
!15333 = !DILocation(line: 6355, column: 11, scope: !15331)
!15334 = !DILocation(line: 6355, column: 7, scope: !15314)
!15335 = !DILocation(line: 6356, column: 8, scope: !15336)
!15336 = distinct !DILexicalBlock(scope: !15331, file: !3, line: 6355, column: 20)
!15337 = !DILocation(line: 6357, column: 12, scope: !15336)
!15338 = !DILocation(line: 6359, column: 12, scope: !15336)
!15339 = !DILocation(line: 6359, column: 17, scope: !15336)
!15340 = !DILocation(line: 6359, column: 22, scope: !15336)
!15341 = !DILocation(line: 6359, column: 27, scope: !15336)
!15342 = !DILocation(line: 6359, column: 32, scope: !15336)
!15343 = !DILocation(line: 6357, column: 4, scope: !15336)
!15344 = !DILocation(line: 6360, column: 3, scope: !15336)
!15345 = !DILocation(line: 6362, column: 12, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15331, file: !3, line: 6361, column: 8)
!15347 = !DILocation(line: 6362, column: 4, scope: !15346)
!15348 = !DILocalVariable(name: "arg", scope: !15349, file: !3, line: 6367, type: !1330)
!15349 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 6366, column: 5)
!15350 = distinct !DILexicalBlock(scope: !15346, file: !3, line: 6362, column: 18)
!15351 = !DILocation(line: 6367, column: 11, scope: !15349)
!15352 = !DILocation(line: 6367, column: 17, scope: !15349)
!15353 = !DILocation(line: 6368, column: 51, scope: !15349)
!15354 = !DILocation(line: 6368, column: 57, scope: !15349)
!15355 = !DILocation(line: 6368, column: 63, scope: !15349)
!15356 = !DILocation(line: 6368, column: 70, scope: !15349)
!15357 = !DILocation(line: 6368, column: 75, scope: !15349)
!15358 = !DILocation(line: 6368, column: 80, scope: !15349)
!15359 = !DILocation(line: 6369, column: 47, scope: !15349)
!15360 = !DILocation(line: 6369, column: 52, scope: !15349)
!15361 = !DILocation(line: 6369, column: 57, scope: !15349)
!15362 = !DILocation(line: 6368, column: 12, scope: !15349)
!15363 = !DILocation(line: 6368, column: 10, scope: !15349)
!15364 = !DILocation(line: 6370, column: 6, scope: !15349)
!15365 = !DILocalVariable(name: "arg", scope: !15366, file: !3, line: 6374, type: !2540)
!15366 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 6373, column: 5)
!15367 = !DILocation(line: 6374, column: 13, scope: !15366)
!15368 = !DILocation(line: 6374, column: 19, scope: !15366)
!15369 = !DILocation(line: 6375, column: 51, scope: !15366)
!15370 = !DILocation(line: 6375, column: 57, scope: !15366)
!15371 = !DILocation(line: 6375, column: 63, scope: !15366)
!15372 = !DILocation(line: 6375, column: 70, scope: !15366)
!15373 = !DILocation(line: 6375, column: 75, scope: !15366)
!15374 = !DILocation(line: 6375, column: 80, scope: !15366)
!15375 = !DILocation(line: 6376, column: 47, scope: !15366)
!15376 = !DILocation(line: 6376, column: 52, scope: !15366)
!15377 = !DILocation(line: 6376, column: 57, scope: !15366)
!15378 = !DILocation(line: 6375, column: 12, scope: !15366)
!15379 = !DILocation(line: 6375, column: 10, scope: !15366)
!15380 = !DILocation(line: 6377, column: 6, scope: !15366)
!15381 = !DILocalVariable(name: "arg", scope: !15382, file: !3, line: 6381, type: !5808)
!15382 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 6380, column: 5)
!15383 = !DILocation(line: 6381, column: 19, scope: !15382)
!15384 = !DILocation(line: 6381, column: 25, scope: !15382)
!15385 = !DILocation(line: 6382, column: 51, scope: !15382)
!15386 = !DILocation(line: 6382, column: 57, scope: !15382)
!15387 = !DILocation(line: 6382, column: 63, scope: !15382)
!15388 = !DILocation(line: 6382, column: 70, scope: !15382)
!15389 = !DILocation(line: 6382, column: 75, scope: !15382)
!15390 = !DILocation(line: 6382, column: 80, scope: !15382)
!15391 = !DILocation(line: 6383, column: 47, scope: !15382)
!15392 = !DILocation(line: 6383, column: 52, scope: !15382)
!15393 = !DILocation(line: 6383, column: 57, scope: !15382)
!15394 = !DILocation(line: 6382, column: 12, scope: !15382)
!15395 = !DILocation(line: 6382, column: 10, scope: !15382)
!15396 = !DILocation(line: 6384, column: 6, scope: !15382)
!15397 = !DILocalVariable(name: "srna", scope: !15398, file: !3, line: 6388, type: !2639)
!15398 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 6387, column: 5)
!15399 = !DILocation(line: 6388, column: 17, scope: !15398)
!15400 = !DILocation(line: 6388, column: 24, scope: !15398)
!15401 = !DILocalVariable(name: "arg", scope: !15398, file: !3, line: 6389, type: !1375)
!15402 = !DILocation(line: 6389, column: 13, scope: !15398)
!15403 = !DILocation(line: 6389, column: 19, scope: !15398)
!15404 = !DILocation(line: 6390, column: 51, scope: !15398)
!15405 = !DILocation(line: 6390, column: 57, scope: !15398)
!15406 = !DILocation(line: 6390, column: 63, scope: !15398)
!15407 = !DILocation(line: 6390, column: 70, scope: !15398)
!15408 = !DILocation(line: 6390, column: 75, scope: !15398)
!15409 = !DILocation(line: 6390, column: 80, scope: !15398)
!15410 = !DILocation(line: 6391, column: 41, scope: !15398)
!15411 = !DILocation(line: 6391, column: 47, scope: !15398)
!15412 = !DILocation(line: 6391, column: 52, scope: !15398)
!15413 = !DILocation(line: 6391, column: 57, scope: !15398)
!15414 = !DILocation(line: 6390, column: 12, scope: !15398)
!15415 = !DILocation(line: 6390, column: 10, scope: !15398)
!15416 = !DILocation(line: 6392, column: 6, scope: !15398)
!15417 = !DILocalVariable(name: "srna", scope: !15418, file: !3, line: 6396, type: !2639)
!15418 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 6395, column: 5)
!15419 = !DILocation(line: 6396, column: 17, scope: !15418)
!15420 = !DILocation(line: 6396, column: 24, scope: !15418)
!15421 = !DILocalVariable(name: "arg", scope: !15418, file: !3, line: 6397, type: !15422)
!15422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!15423 = !DILocation(line: 6397, column: 17, scope: !15418)
!15424 = !DILocation(line: 6397, column: 23, scope: !15418)
!15425 = !DILocation(line: 6398, column: 51, scope: !15418)
!15426 = !DILocation(line: 6398, column: 57, scope: !15418)
!15427 = !DILocation(line: 6398, column: 63, scope: !15418)
!15428 = !DILocation(line: 6398, column: 70, scope: !15418)
!15429 = !DILocation(line: 6398, column: 75, scope: !15418)
!15430 = !DILocation(line: 6398, column: 80, scope: !15418)
!15431 = !DILocation(line: 6399, column: 41, scope: !15418)
!15432 = !DILocation(line: 6399, column: 47, scope: !15418)
!15433 = !DILocation(line: 6399, column: 52, scope: !15418)
!15434 = !DILocation(line: 6399, column: 57, scope: !15418)
!15435 = !DILocation(line: 6398, column: 12, scope: !15418)
!15436 = !DILocation(line: 6398, column: 10, scope: !15418)
!15437 = !DILocation(line: 6400, column: 6, scope: !15418)
!15438 = !DILocation(line: 6405, column: 51, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 6403, column: 5)
!15440 = !DILocation(line: 6405, column: 57, scope: !15439)
!15441 = !DILocation(line: 6405, column: 63, scope: !15439)
!15442 = !DILocation(line: 6405, column: 70, scope: !15439)
!15443 = !DILocation(line: 6406, column: 47, scope: !15439)
!15444 = !DILocation(line: 6406, column: 52, scope: !15439)
!15445 = !DILocation(line: 6406, column: 57, scope: !15439)
!15446 = !DILocation(line: 6405, column: 12, scope: !15439)
!15447 = !DILocation(line: 6405, column: 10, scope: !15439)
!15448 = !DILocation(line: 6407, column: 6, scope: !15439)
!15449 = !DILocation(line: 6411, column: 2, scope: !15314)
!15450 = !DILocation(line: 6413, column: 2, scope: !15018)
!15451 = !DILocation(line: 6414, column: 2, scope: !15018)
!15452 = !DILocation(line: 6416, column: 9, scope: !15018)
!15453 = !DILocation(line: 6416, column: 2, scope: !15018)
!15454 = distinct !DISubprogram(name: "RNA_function_call_direct_lookup", scope: !3, file: !3, line: 6040, type: !15455, scopeLine: 6042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!15455 = !DISubroutineType(types: !15456)
!15456 = !{!48, !5451, !10188, !1349, !1031, !1031, null}
!15457 = !DILocalVariable(name: "C", arg: 1, scope: !15454, file: !3, line: 6040, type: !5451)
!15458 = !DILocation(line: 6040, column: 47, scope: !15454)
!15459 = !DILocalVariable(name: "reports", arg: 2, scope: !15454, file: !3, line: 6040, type: !10188)
!15460 = !DILocation(line: 6040, column: 62, scope: !15454)
!15461 = !DILocalVariable(name: "ptr", arg: 3, scope: !15454, file: !3, line: 6040, type: !1349)
!15462 = !DILocation(line: 6040, column: 83, scope: !15454)
!15463 = !DILocalVariable(name: "identifier", arg: 4, scope: !15454, file: !3, line: 6040, type: !1031)
!15464 = !DILocation(line: 6040, column: 100, scope: !15454)
!15465 = !DILocalVariable(name: "format", arg: 5, scope: !15454, file: !3, line: 6041, type: !1031)
!15466 = !DILocation(line: 6041, column: 49, scope: !15454)
!15467 = !DILocalVariable(name: "func", scope: !15454, file: !3, line: 6043, type: !2457)
!15468 = !DILocation(line: 6043, column: 15, scope: !15454)
!15469 = !DILocation(line: 6045, column: 34, scope: !15454)
!15470 = !DILocation(line: 6045, column: 39, scope: !15454)
!15471 = !DILocation(line: 6045, column: 45, scope: !15454)
!15472 = !DILocation(line: 6045, column: 9, scope: !15454)
!15473 = !DILocation(line: 6045, column: 7, scope: !15454)
!15474 = !DILocation(line: 6047, column: 6, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15454, file: !3, line: 6047, column: 6)
!15476 = !DILocation(line: 6047, column: 6, scope: !15454)
!15477 = !DILocalVariable(name: "args", scope: !15478, file: !3, line: 6048, type: !14991)
!15478 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 6047, column: 12)
!15479 = !DILocation(line: 6048, column: 11, scope: !15478)
!15480 = !DILocalVariable(name: "ret", scope: !15478, file: !3, line: 6049, type: !48)
!15481 = !DILocation(line: 6049, column: 7, scope: !15478)
!15482 = !DILocation(line: 6051, column: 3, scope: !15478)
!15483 = !DILocation(line: 6053, column: 37, scope: !15478)
!15484 = !DILocation(line: 6053, column: 40, scope: !15478)
!15485 = !DILocation(line: 6053, column: 49, scope: !15478)
!15486 = !DILocation(line: 6053, column: 54, scope: !15478)
!15487 = !DILocation(line: 6053, column: 60, scope: !15478)
!15488 = !DILocation(line: 6053, column: 68, scope: !15478)
!15489 = !DILocation(line: 6053, column: 9, scope: !15478)
!15490 = !DILocation(line: 6053, column: 7, scope: !15478)
!15491 = !DILocation(line: 6055, column: 3, scope: !15478)
!15492 = !DILocation(line: 6057, column: 10, scope: !15478)
!15493 = !DILocation(line: 6057, column: 3, scope: !15478)
!15494 = !DILocation(line: 6060, column: 2, scope: !15454)
!15495 = !DILocation(line: 6061, column: 1, scope: !15454)
!15496 = distinct !DISubprogram(name: "rna_function_format_array_length", scope: !3, file: !3, line: 6063, type: !15497, scopeLine: 6064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!15497 = !DISubroutineType(types: !15498)
!15498 = !{!48, !1031, !48, !48}
!15499 = !DILocalVariable(name: "format", arg: 1, scope: !15496, file: !3, line: 6063, type: !1031)
!15500 = !DILocation(line: 6063, column: 57, scope: !15496)
!15501 = !DILocalVariable(name: "ofs", arg: 2, scope: !15496, file: !3, line: 6063, type: !48)
!15502 = !DILocation(line: 6063, column: 69, scope: !15496)
!15503 = !DILocalVariable(name: "flen", arg: 3, scope: !15496, file: !3, line: 6063, type: !48)
!15504 = !DILocation(line: 6063, column: 78, scope: !15496)
!15505 = !DILocalVariable(name: "lenbuf", scope: !15496, file: !3, line: 6065, type: !1118)
!15506 = !DILocation(line: 6065, column: 7, scope: !15496)
!15507 = !DILocalVariable(name: "idx", scope: !15496, file: !3, line: 6066, type: !48)
!15508 = !DILocation(line: 6066, column: 6, scope: !15496)
!15509 = !DILocation(line: 6068, column: 6, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15496, file: !3, line: 6068, column: 6)
!15511 = !DILocation(line: 6068, column: 16, scope: !15510)
!15512 = !DILocation(line: 6068, column: 20, scope: !15510)
!15513 = !DILocation(line: 6068, column: 6, scope: !15496)
!15514 = !DILocation(line: 6072, column: 3, scope: !15510)
!15515 = !DILocation(line: 6072, column: 10, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 6072, column: 3)
!15517 = distinct !DILexicalBlock(scope: !15510, file: !3, line: 6072, column: 3)
!15518 = !DILocation(line: 6072, column: 16, scope: !15516)
!15519 = !DILocation(line: 6072, column: 14, scope: !15516)
!15520 = !DILocation(line: 6072, column: 21, scope: !15516)
!15521 = !DILocation(line: 6072, column: 24, scope: !15516)
!15522 = !DILocation(line: 6072, column: 31, scope: !15516)
!15523 = !DILocation(line: 6072, column: 36, scope: !15516)
!15524 = !DILocation(line: 6072, column: 43, scope: !15516)
!15525 = !DILocation(line: 6072, column: 46, scope: !15516)
!15526 = !DILocation(line: 6072, column: 50, scope: !15516)
!15527 = !DILocation(line: 0, scope: !15516)
!15528 = !DILocation(line: 6072, column: 3, scope: !15517)
!15529 = !DILocation(line: 6074, column: 18, scope: !15516)
!15530 = !DILocation(line: 6074, column: 25, scope: !15516)
!15531 = !DILocation(line: 6074, column: 11, scope: !15516)
!15532 = !DILocation(line: 6074, column: 4, scope: !15516)
!15533 = !DILocation(line: 6074, column: 16, scope: !15516)
!15534 = !DILocation(line: 6072, column: 93, scope: !15516)
!15535 = !DILocation(line: 6072, column: 100, scope: !15516)
!15536 = !DILocation(line: 6072, column: 3, scope: !15516)
!15537 = distinct !{!15537, !15528, !15538}
!15538 = !DILocation(line: 6074, column: 28, scope: !15517)
!15539 = !DILocation(line: 6076, column: 6, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !15496, file: !3, line: 6076, column: 6)
!15541 = !DILocation(line: 6076, column: 12, scope: !15540)
!15542 = !DILocation(line: 6076, column: 10, scope: !15540)
!15543 = !DILocation(line: 6076, column: 17, scope: !15540)
!15544 = !DILocation(line: 6076, column: 20, scope: !15540)
!15545 = !DILocation(line: 6076, column: 27, scope: !15540)
!15546 = !DILocation(line: 6076, column: 31, scope: !15540)
!15547 = !DILocation(line: 6076, column: 36, scope: !15540)
!15548 = !DILocation(line: 6076, column: 6, scope: !15496)
!15549 = !DILocation(line: 6078, column: 10, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15540, file: !3, line: 6076, column: 44)
!15551 = !DILocation(line: 6078, column: 3, scope: !15550)
!15552 = !DILocation(line: 6078, column: 15, scope: !15550)
!15553 = !DILocation(line: 6079, column: 15, scope: !15550)
!15554 = !DILocation(line: 6079, column: 10, scope: !15550)
!15555 = !DILocation(line: 6079, column: 3, scope: !15550)
!15556 = !DILocation(line: 6082, column: 2, scope: !15496)
!15557 = !DILocation(line: 6083, column: 1, scope: !15496)
!15558 = distinct !DISubprogram(name: "rna_function_parameter_parse", scope: !3, file: !3, line: 6085, type: !15559, scopeLine: 6088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!15559 = !DISubroutineType(types: !15560)
!15560 = !{!48, !1349, !1021, !1039, !996, !48, !986, !986, !2639, !1031, !1031, !1031}
!15561 = !DILocalVariable(name: "ptr", arg: 1, scope: !15558, file: !3, line: 6085, type: !1349)
!15562 = !DILocation(line: 6085, column: 53, scope: !15558)
!15563 = !DILocalVariable(name: "prop", arg: 2, scope: !15558, file: !3, line: 6085, type: !1021)
!15564 = !DILocation(line: 6085, column: 71, scope: !15558)
!15565 = !DILocalVariable(name: "type", arg: 3, scope: !15558, file: !3, line: 6085, type: !1039)
!15566 = !DILocation(line: 6085, column: 90, scope: !15558)
!15567 = !DILocalVariable(name: "ftype", arg: 4, scope: !15558, file: !3, line: 6086, type: !996)
!15568 = !DILocation(line: 6086, column: 46, scope: !15558)
!15569 = !DILocalVariable(name: "len", arg: 5, scope: !15558, file: !3, line: 6086, type: !48)
!15570 = !DILocation(line: 6086, column: 57, scope: !15558)
!15571 = !DILocalVariable(name: "dest", arg: 6, scope: !15558, file: !3, line: 6086, type: !986)
!15572 = !DILocation(line: 6086, column: 68, scope: !15558)
!15573 = !DILocalVariable(name: "src", arg: 7, scope: !15558, file: !3, line: 6086, type: !986)
!15574 = !DILocation(line: 6086, column: 80, scope: !15558)
!15575 = !DILocalVariable(name: "srna", arg: 8, scope: !15558, file: !3, line: 6086, type: !2639)
!15576 = !DILocation(line: 6086, column: 96, scope: !15558)
!15577 = !DILocalVariable(name: "tid", arg: 9, scope: !15558, file: !3, line: 6087, type: !1031)
!15578 = !DILocation(line: 6087, column: 53, scope: !15558)
!15579 = !DILocalVariable(name: "fid", arg: 10, scope: !15558, file: !3, line: 6087, type: !1031)
!15580 = !DILocation(line: 6087, column: 70, scope: !15558)
!15581 = !DILocalVariable(name: "pid", arg: 11, scope: !15558, file: !3, line: 6087, type: !1031)
!15582 = !DILocation(line: 6087, column: 87, scope: !15558)
!15583 = !DILocation(line: 6091, column: 10, scope: !15558)
!15584 = !DILocation(line: 6091, column: 2, scope: !15558)
!15585 = !DILocation(line: 6094, column: 8, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 6094, column: 8)
!15587 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6093, column: 3)
!15588 = distinct !DILexicalBlock(scope: !15558, file: !3, line: 6091, column: 16)
!15589 = !DILocation(line: 6094, column: 14, scope: !15586)
!15590 = !DILocation(line: 6094, column: 8, scope: !15587)
!15591 = !DILocation(line: 6095, column: 13, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15586, file: !3, line: 6094, column: 22)
!15593 = !DILocation(line: 6095, column: 85, scope: !15592)
!15594 = !DILocation(line: 6095, column: 90, scope: !15592)
!15595 = !DILocation(line: 6095, column: 95, scope: !15592)
!15596 = !DILocation(line: 6095, column: 5, scope: !15592)
!15597 = !DILocation(line: 6096, column: 5, scope: !15592)
!15598 = !DILocation(line: 6099, column: 8, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 6099, column: 8)
!15600 = !DILocation(line: 6099, column: 12, scope: !15599)
!15601 = !DILocation(line: 6099, column: 8, scope: !15587)
!15602 = !DILocation(line: 6100, column: 31, scope: !15599)
!15603 = !DILocation(line: 6100, column: 24, scope: !15599)
!15604 = !DILocation(line: 6100, column: 22, scope: !15599)
!15605 = !DILocation(line: 6100, column: 14, scope: !15599)
!15606 = !DILocation(line: 6100, column: 7, scope: !15599)
!15607 = !DILocation(line: 6100, column: 20, scope: !15599)
!15608 = !DILocation(line: 6100, column: 5, scope: !15599)
!15609 = !DILocation(line: 6102, column: 12, scope: !15599)
!15610 = !DILocation(line: 6102, column: 18, scope: !15599)
!15611 = !DILocation(line: 6102, column: 23, scope: !15599)
!15612 = !DILocation(line: 6102, column: 27, scope: !15599)
!15613 = !DILocation(line: 6102, column: 5, scope: !15599)
!15614 = !DILocation(line: 6104, column: 4, scope: !15587)
!15615 = !DILocation(line: 6108, column: 8, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15617, file: !3, line: 6108, column: 8)
!15617 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6107, column: 3)
!15618 = !DILocation(line: 6108, column: 14, scope: !15616)
!15619 = !DILocation(line: 6108, column: 8, scope: !15617)
!15620 = !DILocation(line: 6109, column: 13, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 6108, column: 22)
!15622 = !DILocation(line: 6109, column: 86, scope: !15621)
!15623 = !DILocation(line: 6109, column: 91, scope: !15621)
!15624 = !DILocation(line: 6109, column: 96, scope: !15621)
!15625 = !DILocation(line: 6109, column: 5, scope: !15621)
!15626 = !DILocation(line: 6110, column: 5, scope: !15621)
!15627 = !DILocation(line: 6113, column: 8, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15617, file: !3, line: 6113, column: 8)
!15629 = !DILocation(line: 6113, column: 12, scope: !15628)
!15630 = !DILocation(line: 6113, column: 8, scope: !15617)
!15631 = !DILocation(line: 6114, column: 31, scope: !15628)
!15632 = !DILocation(line: 6114, column: 24, scope: !15628)
!15633 = !DILocation(line: 6114, column: 22, scope: !15628)
!15634 = !DILocation(line: 6114, column: 14, scope: !15628)
!15635 = !DILocation(line: 6114, column: 7, scope: !15628)
!15636 = !DILocation(line: 6114, column: 20, scope: !15628)
!15637 = !DILocation(line: 6114, column: 5, scope: !15628)
!15638 = !DILocation(line: 6116, column: 12, scope: !15628)
!15639 = !DILocation(line: 6116, column: 18, scope: !15628)
!15640 = !DILocation(line: 6116, column: 23, scope: !15628)
!15641 = !DILocation(line: 6116, column: 27, scope: !15628)
!15642 = !DILocation(line: 6116, column: 5, scope: !15628)
!15643 = !DILocation(line: 6118, column: 4, scope: !15617)
!15644 = !DILocation(line: 6122, column: 8, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !3, line: 6122, column: 8)
!15646 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6121, column: 3)
!15647 = !DILocation(line: 6122, column: 14, scope: !15645)
!15648 = !DILocation(line: 6122, column: 8, scope: !15646)
!15649 = !DILocation(line: 6123, column: 13, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15645, file: !3, line: 6122, column: 22)
!15651 = !DILocation(line: 6123, column: 83, scope: !15650)
!15652 = !DILocation(line: 6123, column: 88, scope: !15650)
!15653 = !DILocation(line: 6123, column: 93, scope: !15650)
!15654 = !DILocation(line: 6123, column: 5, scope: !15650)
!15655 = !DILocation(line: 6124, column: 5, scope: !15650)
!15656 = !DILocation(line: 6127, column: 8, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15646, file: !3, line: 6127, column: 8)
!15658 = !DILocation(line: 6127, column: 12, scope: !15657)
!15659 = !DILocation(line: 6127, column: 8, scope: !15646)
!15660 = !DILocation(line: 6128, column: 35, scope: !15657)
!15661 = !DILocation(line: 6128, column: 26, scope: !15657)
!15662 = !DILocation(line: 6128, column: 24, scope: !15657)
!15663 = !DILocation(line: 6128, column: 16, scope: !15657)
!15664 = !DILocation(line: 6128, column: 7, scope: !15657)
!15665 = !DILocation(line: 6128, column: 22, scope: !15657)
!15666 = !DILocation(line: 6128, column: 5, scope: !15657)
!15667 = !DILocation(line: 6130, column: 12, scope: !15657)
!15668 = !DILocation(line: 6130, column: 18, scope: !15657)
!15669 = !DILocation(line: 6130, column: 23, scope: !15657)
!15670 = !DILocation(line: 6130, column: 27, scope: !15657)
!15671 = !DILocation(line: 6130, column: 5, scope: !15657)
!15672 = !DILocation(line: 6132, column: 4, scope: !15646)
!15673 = !DILocation(line: 6136, column: 8, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 6136, column: 8)
!15675 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6135, column: 3)
!15676 = !DILocation(line: 6136, column: 14, scope: !15674)
!15677 = !DILocation(line: 6136, column: 8, scope: !15675)
!15678 = !DILocation(line: 6137, column: 13, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15674, file: !3, line: 6136, column: 22)
!15680 = !DILocation(line: 6137, column: 84, scope: !15679)
!15681 = !DILocation(line: 6137, column: 89, scope: !15679)
!15682 = !DILocation(line: 6137, column: 94, scope: !15679)
!15683 = !DILocation(line: 6137, column: 5, scope: !15679)
!15684 = !DILocation(line: 6138, column: 5, scope: !15679)
!15685 = !DILocation(line: 6141, column: 34, scope: !15675)
!15686 = !DILocation(line: 6141, column: 25, scope: !15675)
!15687 = !DILocation(line: 6141, column: 23, scope: !15675)
!15688 = !DILocation(line: 6141, column: 15, scope: !15675)
!15689 = !DILocation(line: 6141, column: 6, scope: !15675)
!15690 = !DILocation(line: 6141, column: 21, scope: !15675)
!15691 = !DILocation(line: 6143, column: 4, scope: !15675)
!15692 = !DILocation(line: 6147, column: 8, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15694, file: !3, line: 6147, column: 8)
!15694 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6146, column: 3)
!15695 = !DILocation(line: 6147, column: 14, scope: !15693)
!15696 = !DILocation(line: 6147, column: 8, scope: !15694)
!15697 = !DILocation(line: 6148, column: 13, scope: !15698)
!15698 = distinct !DILexicalBlock(scope: !15693, file: !3, line: 6147, column: 22)
!15699 = !DILocation(line: 6148, column: 83, scope: !15698)
!15700 = !DILocation(line: 6148, column: 88, scope: !15698)
!15701 = !DILocation(line: 6148, column: 93, scope: !15698)
!15702 = !DILocation(line: 6148, column: 5, scope: !15698)
!15703 = !DILocation(line: 6149, column: 5, scope: !15698)
!15704 = !DILocation(line: 6152, column: 30, scope: !15694)
!15705 = !DILocation(line: 6152, column: 23, scope: !15694)
!15706 = !DILocation(line: 6152, column: 21, scope: !15694)
!15707 = !DILocation(line: 6152, column: 13, scope: !15694)
!15708 = !DILocation(line: 6152, column: 6, scope: !15694)
!15709 = !DILocation(line: 6152, column: 19, scope: !15694)
!15710 = !DILocation(line: 6154, column: 4, scope: !15694)
!15711 = !DILocalVariable(name: "ptype", scope: !15712, file: !3, line: 6158, type: !2639)
!15712 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6157, column: 3)
!15713 = !DILocation(line: 6158, column: 15, scope: !15712)
!15714 = !DILocation(line: 6160, column: 8, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15712, file: !3, line: 6160, column: 8)
!15716 = !DILocation(line: 6160, column: 14, scope: !15715)
!15717 = !DILocation(line: 6160, column: 8, scope: !15712)
!15718 = !DILocation(line: 6161, column: 13, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15715, file: !3, line: 6160, column: 22)
!15720 = !DILocation(line: 6161, column: 85, scope: !15719)
!15721 = !DILocation(line: 6161, column: 90, scope: !15719)
!15722 = !DILocation(line: 6161, column: 95, scope: !15719)
!15723 = !DILocation(line: 6161, column: 5, scope: !15719)
!15724 = !DILocation(line: 6162, column: 5, scope: !15719)
!15725 = !DILocation(line: 6165, column: 38, scope: !15712)
!15726 = !DILocation(line: 6165, column: 43, scope: !15712)
!15727 = !DILocation(line: 6165, column: 12, scope: !15712)
!15728 = !DILocation(line: 6165, column: 10, scope: !15712)
!15729 = !DILocation(line: 6167, column: 8, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15712, file: !3, line: 6167, column: 8)
!15731 = !DILocation(line: 6167, column: 14, scope: !15730)
!15732 = !DILocation(line: 6167, column: 19, scope: !15730)
!15733 = !DILocation(line: 6167, column: 8, scope: !15712)
!15734 = !DILocation(line: 6168, column: 21, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15730, file: !3, line: 6167, column: 34)
!15736 = !DILocation(line: 6168, column: 7, scope: !15735)
!15737 = !DILocation(line: 6168, column: 45, scope: !15735)
!15738 = !DILocation(line: 6168, column: 31, scope: !15735)
!15739 = !DILocation(line: 6168, column: 29, scope: !15735)
!15740 = !DILocation(line: 6169, column: 5, scope: !15735)
!15741 = !DILocation(line: 6172, column: 8, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15712, file: !3, line: 6172, column: 8)
!15743 = !DILocation(line: 6172, column: 17, scope: !15742)
!15744 = !DILocation(line: 6172, column: 14, scope: !15742)
!15745 = !DILocation(line: 6172, column: 22, scope: !15742)
!15746 = !DILocation(line: 6172, column: 42, scope: !15742)
!15747 = !DILocation(line: 6172, column: 48, scope: !15742)
!15748 = !DILocation(line: 6172, column: 26, scope: !15742)
!15749 = !DILocation(line: 6172, column: 8, scope: !15712)
!15750 = !DILocation(line: 6173, column: 13, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15742, file: !3, line: 6172, column: 56)
!15752 = !DILocation(line: 6175, column: 13, scope: !15751)
!15753 = !DILocation(line: 6175, column: 18, scope: !15751)
!15754 = !DILocation(line: 6175, column: 23, scope: !15751)
!15755 = !DILocation(line: 6175, column: 50, scope: !15751)
!15756 = !DILocation(line: 6175, column: 28, scope: !15751)
!15757 = !DILocation(line: 6175, column: 80, scope: !15751)
!15758 = !DILocation(line: 6175, column: 58, scope: !15751)
!15759 = !DILocation(line: 6173, column: 5, scope: !15751)
!15760 = !DILocation(line: 6176, column: 5, scope: !15751)
!15761 = !DILocation(line: 6179, column: 34, scope: !15712)
!15762 = !DILocation(line: 6179, column: 25, scope: !15712)
!15763 = !DILocation(line: 6179, column: 23, scope: !15712)
!15764 = !DILocation(line: 6179, column: 15, scope: !15712)
!15765 = !DILocation(line: 6179, column: 6, scope: !15712)
!15766 = !DILocation(line: 6179, column: 21, scope: !15712)
!15767 = !DILocation(line: 6181, column: 4, scope: !15712)
!15768 = !DILocalVariable(name: "ptype", scope: !15769, file: !3, line: 6185, type: !2639)
!15769 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6184, column: 3)
!15770 = !DILocation(line: 6185, column: 15, scope: !15769)
!15771 = !DILocalVariable(name: "lb", scope: !15769, file: !3, line: 6186, type: !1642)
!15772 = !DILocation(line: 6186, column: 14, scope: !15769)
!15773 = !DILocalVariable(name: "clb", scope: !15769, file: !3, line: 6186, type: !1642)
!15774 = !DILocation(line: 6186, column: 19, scope: !15769)
!15775 = !DILocalVariable(name: "link", scope: !15769, file: !3, line: 6187, type: !15776)
!15776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15777, size: 64)
!15777 = !DIDerivedType(tag: DW_TAG_typedef, name: "Link", file: !1012, line: 59, baseType: !2686)
!15778 = !DILocation(line: 6187, column: 10, scope: !15769)
!15779 = !DILocalVariable(name: "clink", scope: !15769, file: !3, line: 6188, type: !15780)
!15780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15781, size: 64)
!15781 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPointerLink", file: !6, line: 284, baseType: !15782)
!15782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPointerLink", file: !6, line: 281, size: 320, elements: !15783)
!15783 = !{!15784, !15786, !15787}
!15784 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15782, file: !6, line: 282, baseType: !15785, size: 64)
!15785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15782, size: 64)
!15786 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15782, file: !6, line: 282, baseType: !15785, size: 64, offset: 64)
!15787 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !15782, file: !6, line: 283, baseType: !1350, size: 192, offset: 128)
!15788 = !DILocation(line: 6188, column: 27, scope: !15769)
!15789 = !DILocation(line: 6190, column: 8, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15769, file: !3, line: 6190, column: 8)
!15791 = !DILocation(line: 6190, column: 14, scope: !15790)
!15792 = !DILocation(line: 6190, column: 8, scope: !15769)
!15793 = !DILocation(line: 6191, column: 13, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15790, file: !3, line: 6190, column: 22)
!15795 = !DILocation(line: 6191, column: 88, scope: !15794)
!15796 = !DILocation(line: 6191, column: 93, scope: !15794)
!15797 = !DILocation(line: 6191, column: 98, scope: !15794)
!15798 = !DILocation(line: 6191, column: 5, scope: !15794)
!15799 = !DILocation(line: 6192, column: 5, scope: !15794)
!15800 = !DILocation(line: 6195, column: 21, scope: !15769)
!15801 = !DILocation(line: 6195, column: 9, scope: !15769)
!15802 = !DILocation(line: 6195, column: 7, scope: !15769)
!15803 = !DILocation(line: 6196, column: 22, scope: !15769)
!15804 = !DILocation(line: 6196, column: 10, scope: !15769)
!15805 = !DILocation(line: 6196, column: 8, scope: !15769)
!15806 = !DILocation(line: 6197, column: 38, scope: !15769)
!15807 = !DILocation(line: 6197, column: 43, scope: !15769)
!15808 = !DILocation(line: 6197, column: 12, scope: !15769)
!15809 = !DILocation(line: 6197, column: 10, scope: !15769)
!15810 = !DILocation(line: 6199, column: 8, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15769, file: !3, line: 6199, column: 8)
!15812 = !DILocation(line: 6199, column: 17, scope: !15811)
!15813 = !DILocation(line: 6199, column: 14, scope: !15811)
!15814 = !DILocation(line: 6199, column: 22, scope: !15811)
!15815 = !DILocation(line: 6199, column: 42, scope: !15811)
!15816 = !DILocation(line: 6199, column: 48, scope: !15811)
!15817 = !DILocation(line: 6199, column: 26, scope: !15811)
!15818 = !DILocation(line: 6199, column: 8, scope: !15769)
!15819 = !DILocation(line: 6200, column: 13, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 6199, column: 56)
!15821 = !DILocation(line: 6203, column: 13, scope: !15820)
!15822 = !DILocation(line: 6203, column: 18, scope: !15820)
!15823 = !DILocation(line: 6203, column: 23, scope: !15820)
!15824 = !DILocation(line: 6203, column: 50, scope: !15820)
!15825 = !DILocation(line: 6203, column: 28, scope: !15820)
!15826 = !DILocation(line: 6203, column: 80, scope: !15820)
!15827 = !DILocation(line: 6203, column: 58, scope: !15820)
!15828 = !DILocation(line: 6200, column: 5, scope: !15820)
!15829 = !DILocation(line: 6204, column: 5, scope: !15820)
!15830 = !DILocation(line: 6207, column: 16, scope: !15831)
!15831 = distinct !DILexicalBlock(scope: !15769, file: !3, line: 6207, column: 4)
!15832 = !DILocation(line: 6207, column: 20, scope: !15831)
!15833 = !DILocation(line: 6207, column: 14, scope: !15831)
!15834 = !DILocation(line: 6207, column: 9, scope: !15831)
!15835 = !DILocation(line: 6207, column: 27, scope: !15836)
!15836 = distinct !DILexicalBlock(scope: !15831, file: !3, line: 6207, column: 4)
!15837 = !DILocation(line: 6207, column: 4, scope: !15831)
!15838 = !DILocation(line: 6208, column: 13, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15836, file: !3, line: 6207, column: 52)
!15840 = !DILocation(line: 6208, column: 11, scope: !15839)
!15841 = !DILocation(line: 6209, column: 30, scope: !15839)
!15842 = !DILocation(line: 6209, column: 36, scope: !15839)
!15843 = !DILocation(line: 6209, column: 43, scope: !15839)
!15844 = !DILocation(line: 6209, column: 50, scope: !15839)
!15845 = !DILocation(line: 6209, column: 5, scope: !15839)
!15846 = !DILocation(line: 6210, column: 17, scope: !15839)
!15847 = !DILocation(line: 6210, column: 22, scope: !15839)
!15848 = !DILocation(line: 6210, column: 5, scope: !15839)
!15849 = !DILocation(line: 6211, column: 4, scope: !15839)
!15850 = !DILocation(line: 6207, column: 40, scope: !15836)
!15851 = !DILocation(line: 6207, column: 46, scope: !15836)
!15852 = !DILocation(line: 6207, column: 38, scope: !15836)
!15853 = !DILocation(line: 6207, column: 4, scope: !15836)
!15854 = distinct !{!15854, !15837, !15855}
!15855 = !DILocation(line: 6211, column: 4, scope: !15831)
!15856 = !DILocation(line: 6213, column: 4, scope: !15769)
!15857 = !DILocation(line: 6217, column: 8, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 6217, column: 8)
!15859 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6216, column: 3)
!15860 = !DILocation(line: 6217, column: 12, scope: !15858)
!15861 = !DILocation(line: 6217, column: 8, scope: !15859)
!15862 = !DILocation(line: 6218, column: 13, scope: !15858)
!15863 = !DILocation(line: 6218, column: 63, scope: !15858)
!15864 = !DILocation(line: 6218, column: 68, scope: !15858)
!15865 = !DILocation(line: 6218, column: 73, scope: !15858)
!15866 = !DILocation(line: 6218, column: 5, scope: !15858)
!15867 = !DILocation(line: 6220, column: 13, scope: !15858)
!15868 = !DILocation(line: 6220, column: 69, scope: !15858)
!15869 = !DILocation(line: 6220, column: 74, scope: !15858)
!15870 = !DILocation(line: 6220, column: 79, scope: !15858)
!15871 = !DILocation(line: 6220, column: 5, scope: !15858)
!15872 = !DILocation(line: 6222, column: 4, scope: !15859)
!15873 = !DILocation(line: 6226, column: 2, scope: !15558)
!15874 = !DILocation(line: 6227, column: 1, scope: !15558)
!15875 = distinct !DISubprogram(name: "RNA_function_call_direct_va_lookup", scope: !3, file: !3, line: 6419, type: !15876, scopeLine: 6421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!15876 = !DISubroutineType(types: !15877)
!15877 = !{!48, !5451, !10188, !1349, !1031, !1031, !15021}
!15878 = !DILocalVariable(name: "C", arg: 1, scope: !15875, file: !3, line: 6419, type: !5451)
!15879 = !DILocation(line: 6419, column: 50, scope: !15875)
!15880 = !DILocalVariable(name: "reports", arg: 2, scope: !15875, file: !3, line: 6419, type: !10188)
!15881 = !DILocation(line: 6419, column: 65, scope: !15875)
!15882 = !DILocalVariable(name: "ptr", arg: 3, scope: !15875, file: !3, line: 6419, type: !1349)
!15883 = !DILocation(line: 6419, column: 86, scope: !15875)
!15884 = !DILocalVariable(name: "identifier", arg: 4, scope: !15875, file: !3, line: 6420, type: !1031)
!15885 = !DILocation(line: 6420, column: 52, scope: !15875)
!15886 = !DILocalVariable(name: "format", arg: 5, scope: !15875, file: !3, line: 6420, type: !1031)
!15887 = !DILocation(line: 6420, column: 76, scope: !15875)
!15888 = !DILocalVariable(name: "args", arg: 6, scope: !15875, file: !3, line: 6420, type: !15021)
!15889 = !DILocation(line: 6420, column: 92, scope: !15875)
!15890 = !DILocalVariable(name: "func", scope: !15875, file: !3, line: 6422, type: !2457)
!15891 = !DILocation(line: 6422, column: 15, scope: !15875)
!15892 = !DILocation(line: 6424, column: 34, scope: !15875)
!15893 = !DILocation(line: 6424, column: 39, scope: !15875)
!15894 = !DILocation(line: 6424, column: 45, scope: !15875)
!15895 = !DILocation(line: 6424, column: 9, scope: !15875)
!15896 = !DILocation(line: 6424, column: 7, scope: !15875)
!15897 = !DILocation(line: 6426, column: 6, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15875, file: !3, line: 6426, column: 6)
!15899 = !DILocation(line: 6426, column: 6, scope: !15875)
!15900 = !DILocation(line: 6427, column: 38, scope: !15898)
!15901 = !DILocation(line: 6427, column: 41, scope: !15898)
!15902 = !DILocation(line: 6427, column: 50, scope: !15898)
!15903 = !DILocation(line: 6427, column: 55, scope: !15898)
!15904 = !DILocation(line: 6427, column: 61, scope: !15898)
!15905 = !DILocation(line: 6427, column: 69, scope: !15898)
!15906 = !DILocation(line: 6427, column: 10, scope: !15898)
!15907 = !DILocation(line: 6427, column: 3, scope: !15898)
!15908 = !DILocation(line: 6429, column: 2, scope: !15875)
!15909 = !DILocation(line: 6430, column: 1, scope: !15875)
!15910 = distinct !DISubprogram(name: "RNA_property_reset", scope: !3, file: !3, line: 6432, type: !6253, scopeLine: 6433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!15911 = !DILocalVariable(name: "ptr", arg: 1, scope: !15910, file: !3, line: 6432, type: !1349)
!15912 = !DILocation(line: 6432, column: 37, scope: !15910)
!15913 = !DILocalVariable(name: "prop", arg: 2, scope: !15910, file: !3, line: 6432, type: !1021)
!15914 = !DILocation(line: 6432, column: 55, scope: !15910)
!15915 = !DILocalVariable(name: "index", arg: 3, scope: !15910, file: !3, line: 6432, type: !48)
!15916 = !DILocation(line: 6432, column: 65, scope: !15910)
!15917 = !DILocalVariable(name: "len", scope: !15910, file: !3, line: 6434, type: !48)
!15918 = !DILocation(line: 6434, column: 6, scope: !15910)
!15919 = !DILocation(line: 6437, column: 34, scope: !15910)
!15920 = !DILocation(line: 6437, column: 39, scope: !15910)
!15921 = !DILocation(line: 6437, column: 8, scope: !15910)
!15922 = !DILocation(line: 6437, column: 6, scope: !15910)
!15923 = !DILocation(line: 6440, column: 28, scope: !15910)
!15924 = !DILocation(line: 6440, column: 10, scope: !15910)
!15925 = !DILocation(line: 6440, column: 2, scope: !15910)
!15926 = !DILocation(line: 6442, column: 8, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15928, file: !3, line: 6442, column: 8)
!15928 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 6440, column: 35)
!15929 = !DILocation(line: 6442, column: 8, scope: !15928)
!15930 = !DILocation(line: 6443, column: 9, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15932, file: !3, line: 6443, column: 9)
!15932 = distinct !DILexicalBlock(scope: !15927, file: !3, line: 6442, column: 13)
!15933 = !DILocation(line: 6443, column: 15, scope: !15931)
!15934 = !DILocation(line: 6443, column: 9, scope: !15932)
!15935 = !DILocalVariable(name: "tmparray", scope: !15936, file: !3, line: 6444, type: !1330)
!15936 = distinct !DILexicalBlock(scope: !15931, file: !3, line: 6443, column: 22)
!15937 = !DILocation(line: 6444, column: 11, scope: !15936)
!15938 = !DILocation(line: 6444, column: 22, scope: !15936)
!15939 = !DILocation(line: 6444, column: 48, scope: !15936)
!15940 = !DILocation(line: 6444, column: 46, scope: !15936)
!15941 = !DILocation(line: 6446, column: 45, scope: !15936)
!15942 = !DILocation(line: 6446, column: 50, scope: !15936)
!15943 = !DILocation(line: 6446, column: 56, scope: !15936)
!15944 = !DILocation(line: 6446, column: 6, scope: !15936)
!15945 = !DILocation(line: 6447, column: 37, scope: !15936)
!15946 = !DILocation(line: 6447, column: 42, scope: !15936)
!15947 = !DILocation(line: 6447, column: 48, scope: !15936)
!15948 = !DILocation(line: 6447, column: 6, scope: !15936)
!15949 = !DILocation(line: 6449, column: 6, scope: !15936)
!15950 = !DILocation(line: 6449, column: 16, scope: !15936)
!15951 = !DILocation(line: 6450, column: 5, scope: !15936)
!15952 = !DILocalVariable(name: "value", scope: !15953, file: !3, line: 6452, type: !48)
!15953 = distinct !DILexicalBlock(scope: !15931, file: !3, line: 6451, column: 10)
!15954 = !DILocation(line: 6452, column: 10, scope: !15953)
!15955 = !DILocation(line: 6452, column: 57, scope: !15953)
!15956 = !DILocation(line: 6452, column: 62, scope: !15953)
!15957 = !DILocation(line: 6452, column: 68, scope: !15953)
!15958 = !DILocation(line: 6452, column: 18, scope: !15953)
!15959 = !DILocation(line: 6453, column: 37, scope: !15953)
!15960 = !DILocation(line: 6453, column: 42, scope: !15953)
!15961 = !DILocation(line: 6453, column: 48, scope: !15953)
!15962 = !DILocation(line: 6453, column: 55, scope: !15953)
!15963 = !DILocation(line: 6453, column: 6, scope: !15953)
!15964 = !DILocation(line: 6455, column: 4, scope: !15932)
!15965 = !DILocalVariable(name: "value", scope: !15966, file: !3, line: 6457, type: !48)
!15966 = distinct !DILexicalBlock(scope: !15927, file: !3, line: 6456, column: 9)
!15967 = !DILocation(line: 6457, column: 9, scope: !15966)
!15968 = !DILocation(line: 6457, column: 50, scope: !15966)
!15969 = !DILocation(line: 6457, column: 55, scope: !15966)
!15970 = !DILocation(line: 6457, column: 17, scope: !15966)
!15971 = !DILocation(line: 6458, column: 30, scope: !15966)
!15972 = !DILocation(line: 6458, column: 35, scope: !15966)
!15973 = !DILocation(line: 6458, column: 41, scope: !15966)
!15974 = !DILocation(line: 6458, column: 5, scope: !15966)
!15975 = !DILocation(line: 6460, column: 4, scope: !15928)
!15976 = !DILocation(line: 6462, column: 8, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15928, file: !3, line: 6462, column: 8)
!15978 = !DILocation(line: 6462, column: 8, scope: !15928)
!15979 = !DILocation(line: 6463, column: 9, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15981, file: !3, line: 6463, column: 9)
!15981 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 6462, column: 13)
!15982 = !DILocation(line: 6463, column: 15, scope: !15980)
!15983 = !DILocation(line: 6463, column: 9, scope: !15981)
!15984 = !DILocalVariable(name: "tmparray", scope: !15985, file: !3, line: 6464, type: !1330)
!15985 = distinct !DILexicalBlock(scope: !15980, file: !3, line: 6463, column: 22)
!15986 = !DILocation(line: 6464, column: 11, scope: !15985)
!15987 = !DILocation(line: 6464, column: 22, scope: !15985)
!15988 = !DILocation(line: 6464, column: 48, scope: !15985)
!15989 = !DILocation(line: 6464, column: 46, scope: !15985)
!15990 = !DILocation(line: 6466, column: 41, scope: !15985)
!15991 = !DILocation(line: 6466, column: 46, scope: !15985)
!15992 = !DILocation(line: 6466, column: 52, scope: !15985)
!15993 = !DILocation(line: 6466, column: 6, scope: !15985)
!15994 = !DILocation(line: 6467, column: 33, scope: !15985)
!15995 = !DILocation(line: 6467, column: 38, scope: !15985)
!15996 = !DILocation(line: 6467, column: 44, scope: !15985)
!15997 = !DILocation(line: 6467, column: 6, scope: !15985)
!15998 = !DILocation(line: 6469, column: 6, scope: !15985)
!15999 = !DILocation(line: 6469, column: 16, scope: !15985)
!16000 = !DILocation(line: 6470, column: 5, scope: !15985)
!16001 = !DILocalVariable(name: "value", scope: !16002, file: !3, line: 6472, type: !48)
!16002 = distinct !DILexicalBlock(scope: !15980, file: !3, line: 6471, column: 10)
!16003 = !DILocation(line: 6472, column: 10, scope: !16002)
!16004 = !DILocation(line: 6472, column: 53, scope: !16002)
!16005 = !DILocation(line: 6472, column: 58, scope: !16002)
!16006 = !DILocation(line: 6472, column: 64, scope: !16002)
!16007 = !DILocation(line: 6472, column: 18, scope: !16002)
!16008 = !DILocation(line: 6473, column: 33, scope: !16002)
!16009 = !DILocation(line: 6473, column: 38, scope: !16002)
!16010 = !DILocation(line: 6473, column: 44, scope: !16002)
!16011 = !DILocation(line: 6473, column: 51, scope: !16002)
!16012 = !DILocation(line: 6473, column: 6, scope: !16002)
!16013 = !DILocation(line: 6475, column: 4, scope: !15981)
!16014 = !DILocalVariable(name: "value", scope: !16015, file: !3, line: 6477, type: !48)
!16015 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 6476, column: 9)
!16016 = !DILocation(line: 6477, column: 9, scope: !16015)
!16017 = !DILocation(line: 6477, column: 46, scope: !16015)
!16018 = !DILocation(line: 6477, column: 51, scope: !16015)
!16019 = !DILocation(line: 6477, column: 17, scope: !16015)
!16020 = !DILocation(line: 6478, column: 26, scope: !16015)
!16021 = !DILocation(line: 6478, column: 31, scope: !16015)
!16022 = !DILocation(line: 6478, column: 37, scope: !16015)
!16023 = !DILocation(line: 6478, column: 5, scope: !16015)
!16024 = !DILocation(line: 6480, column: 4, scope: !15928)
!16025 = !DILocation(line: 6482, column: 8, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !15928, file: !3, line: 6482, column: 8)
!16027 = !DILocation(line: 6482, column: 8, scope: !15928)
!16028 = !DILocation(line: 6483, column: 9, scope: !16029)
!16029 = distinct !DILexicalBlock(scope: !16030, file: !3, line: 6483, column: 9)
!16030 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 6482, column: 13)
!16031 = !DILocation(line: 6483, column: 15, scope: !16029)
!16032 = !DILocation(line: 6483, column: 9, scope: !16030)
!16033 = !DILocalVariable(name: "tmparray", scope: !16034, file: !3, line: 6484, type: !2540)
!16034 = distinct !DILexicalBlock(scope: !16029, file: !3, line: 6483, column: 22)
!16035 = !DILocation(line: 6484, column: 13, scope: !16034)
!16036 = !DILocation(line: 6484, column: 24, scope: !16034)
!16037 = !DILocation(line: 6484, column: 52, scope: !16034)
!16038 = !DILocation(line: 6484, column: 50, scope: !16034)
!16039 = !DILocation(line: 6486, column: 43, scope: !16034)
!16040 = !DILocation(line: 6486, column: 48, scope: !16034)
!16041 = !DILocation(line: 6486, column: 54, scope: !16034)
!16042 = !DILocation(line: 6486, column: 6, scope: !16034)
!16043 = !DILocation(line: 6487, column: 35, scope: !16034)
!16044 = !DILocation(line: 6487, column: 40, scope: !16034)
!16045 = !DILocation(line: 6487, column: 46, scope: !16034)
!16046 = !DILocation(line: 6487, column: 6, scope: !16034)
!16047 = !DILocation(line: 6489, column: 6, scope: !16034)
!16048 = !DILocation(line: 6489, column: 16, scope: !16034)
!16049 = !DILocation(line: 6490, column: 5, scope: !16034)
!16050 = !DILocalVariable(name: "value", scope: !16051, file: !3, line: 6492, type: !1285)
!16051 = distinct !DILexicalBlock(scope: !16029, file: !3, line: 6491, column: 10)
!16052 = !DILocation(line: 6492, column: 12, scope: !16051)
!16053 = !DILocation(line: 6492, column: 57, scope: !16051)
!16054 = !DILocation(line: 6492, column: 62, scope: !16051)
!16055 = !DILocation(line: 6492, column: 68, scope: !16051)
!16056 = !DILocation(line: 6492, column: 20, scope: !16051)
!16057 = !DILocation(line: 6493, column: 35, scope: !16051)
!16058 = !DILocation(line: 6493, column: 40, scope: !16051)
!16059 = !DILocation(line: 6493, column: 46, scope: !16051)
!16060 = !DILocation(line: 6493, column: 53, scope: !16051)
!16061 = !DILocation(line: 6493, column: 6, scope: !16051)
!16062 = !DILocation(line: 6495, column: 4, scope: !16030)
!16063 = !DILocalVariable(name: "value", scope: !16064, file: !3, line: 6497, type: !1285)
!16064 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 6496, column: 9)
!16065 = !DILocation(line: 6497, column: 11, scope: !16064)
!16066 = !DILocation(line: 6497, column: 50, scope: !16064)
!16067 = !DILocation(line: 6497, column: 55, scope: !16064)
!16068 = !DILocation(line: 6497, column: 19, scope: !16064)
!16069 = !DILocation(line: 6498, column: 28, scope: !16064)
!16070 = !DILocation(line: 6498, column: 33, scope: !16064)
!16071 = !DILocation(line: 6498, column: 39, scope: !16064)
!16072 = !DILocation(line: 6498, column: 5, scope: !16064)
!16073 = !DILocation(line: 6500, column: 4, scope: !15928)
!16074 = !DILocalVariable(name: "value", scope: !16075, file: !3, line: 6503, type: !48)
!16075 = distinct !DILexicalBlock(scope: !15928, file: !3, line: 6502, column: 3)
!16076 = !DILocation(line: 6503, column: 8, scope: !16075)
!16077 = !DILocation(line: 6503, column: 46, scope: !16075)
!16078 = !DILocation(line: 6503, column: 51, scope: !16075)
!16079 = !DILocation(line: 6503, column: 16, scope: !16075)
!16080 = !DILocation(line: 6504, column: 26, scope: !16075)
!16081 = !DILocation(line: 6504, column: 31, scope: !16075)
!16082 = !DILocation(line: 6504, column: 37, scope: !16075)
!16083 = !DILocation(line: 6504, column: 4, scope: !16075)
!16084 = !DILocation(line: 6505, column: 4, scope: !16075)
!16085 = !DILocalVariable(name: "value", scope: !16086, file: !3, line: 6510, type: !1091)
!16086 = distinct !DILexicalBlock(scope: !15928, file: !3, line: 6509, column: 3)
!16087 = !DILocation(line: 6510, column: 10, scope: !16086)
!16088 = !DILocation(line: 6510, column: 56, scope: !16086)
!16089 = !DILocation(line: 6510, column: 61, scope: !16086)
!16090 = !DILocation(line: 6510, column: 18, scope: !16086)
!16091 = !DILocation(line: 6511, column: 28, scope: !16086)
!16092 = !DILocation(line: 6511, column: 33, scope: !16086)
!16093 = !DILocation(line: 6511, column: 39, scope: !16086)
!16094 = !DILocation(line: 6511, column: 4, scope: !16086)
!16095 = !DILocation(line: 6512, column: 4, scope: !16086)
!16096 = !DILocation(line: 6512, column: 14, scope: !16086)
!16097 = !DILocation(line: 6513, column: 4, scope: !16086)
!16098 = !DILocalVariable(name: "value", scope: !16099, file: !3, line: 6518, type: !1350)
!16099 = distinct !DILexicalBlock(scope: !15928, file: !3, line: 6517, column: 3)
!16100 = !DILocation(line: 6518, column: 15, scope: !16099)
!16101 = !DILocation(line: 6518, column: 56, scope: !16099)
!16102 = !DILocation(line: 6518, column: 61, scope: !16099)
!16103 = !DILocation(line: 6518, column: 23, scope: !16099)
!16104 = !DILocation(line: 6519, column: 29, scope: !16099)
!16105 = !DILocation(line: 6519, column: 34, scope: !16099)
!16106 = !DILocation(line: 6519, column: 4, scope: !16099)
!16107 = !DILocation(line: 6520, column: 4, scope: !16099)
!16108 = !DILocation(line: 6525, column: 4, scope: !15928)
!16109 = !DILocation(line: 6527, column: 1, scope: !15910)
!16110 = distinct !DISubprogram(name: "RNA_property_copy", scope: !3, file: !3, line: 6529, type: !16111, scopeLine: 6530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!16111 = !DISubroutineType(types: !16112)
!16112 = !{!1381, !1349, !1349, !1021, !48}
!16113 = !DILocalVariable(name: "ptr", arg: 1, scope: !16110, file: !3, line: 6529, type: !1349)
!16114 = !DILocation(line: 6529, column: 36, scope: !16110)
!16115 = !DILocalVariable(name: "fromptr", arg: 2, scope: !16110, file: !3, line: 6529, type: !1349)
!16116 = !DILocation(line: 6529, column: 53, scope: !16110)
!16117 = !DILocalVariable(name: "prop", arg: 3, scope: !16110, file: !3, line: 6529, type: !1021)
!16118 = !DILocation(line: 6529, column: 75, scope: !16110)
!16119 = !DILocalVariable(name: "index", arg: 4, scope: !16110, file: !3, line: 6529, type: !48)
!16120 = !DILocation(line: 6529, column: 85, scope: !16110)
!16121 = !DILocalVariable(name: "len", scope: !16110, file: !3, line: 6531, type: !48)
!16122 = !DILocation(line: 6531, column: 6, scope: !16110)
!16123 = !DILocalVariable(name: "fromlen", scope: !16110, file: !3, line: 6531, type: !48)
!16124 = !DILocation(line: 6531, column: 11, scope: !16110)
!16125 = !DILocalVariable(name: "fromprop", scope: !16110, file: !3, line: 6532, type: !1021)
!16126 = !DILocation(line: 6532, column: 15, scope: !16110)
!16127 = !DILocation(line: 6532, column: 26, scope: !16110)
!16128 = !DILocation(line: 6534, column: 6, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16110, file: !3, line: 6534, column: 6)
!16130 = !DILocation(line: 6534, column: 12, scope: !16129)
!16131 = !DILocation(line: 6534, column: 18, scope: !16129)
!16132 = !DILocation(line: 6534, column: 6, scope: !16110)
!16133 = !DILocation(line: 6537, column: 45, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16129, file: !3, line: 6534, column: 32)
!16135 = !DILocation(line: 6537, column: 65, scope: !16134)
!16136 = !DILocation(line: 6537, column: 76, scope: !16134)
!16137 = !DILocation(line: 6537, column: 50, scope: !16134)
!16138 = !DILocation(line: 6537, column: 25, scope: !16134)
!16139 = !DILocation(line: 6537, column: 10, scope: !16134)
!16140 = !DILocation(line: 6537, column: 8, scope: !16134)
!16141 = !DILocation(line: 6539, column: 7, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16134, file: !3, line: 6539, column: 7)
!16143 = !DILocation(line: 6539, column: 15, scope: !16142)
!16144 = !DILocation(line: 6539, column: 12, scope: !16142)
!16145 = !DILocation(line: 6539, column: 7, scope: !16134)
!16146 = !DILocation(line: 6540, column: 50, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16142, file: !3, line: 6539, column: 25)
!16148 = !DILocation(line: 6540, column: 74, scope: !16147)
!16149 = !DILocation(line: 6540, column: 81, scope: !16147)
!16150 = !DILocation(line: 6540, column: 59, scope: !16147)
!16151 = !DILocation(line: 6540, column: 30, scope: !16147)
!16152 = !DILocation(line: 6540, column: 15, scope: !16147)
!16153 = !DILocation(line: 6540, column: 13, scope: !16147)
!16154 = !DILocation(line: 6541, column: 3, scope: !16147)
!16155 = !DILocation(line: 6542, column: 2, scope: !16134)
!16156 = !DILocation(line: 6545, column: 34, scope: !16110)
!16157 = !DILocation(line: 6545, column: 39, scope: !16110)
!16158 = !DILocation(line: 6545, column: 8, scope: !16110)
!16159 = !DILocation(line: 6545, column: 6, scope: !16110)
!16160 = !DILocation(line: 6546, column: 38, scope: !16110)
!16161 = !DILocation(line: 6546, column: 47, scope: !16110)
!16162 = !DILocation(line: 6546, column: 12, scope: !16110)
!16163 = !DILocation(line: 6546, column: 10, scope: !16110)
!16164 = !DILocation(line: 6548, column: 6, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16110, file: !3, line: 6548, column: 6)
!16166 = !DILocation(line: 6548, column: 13, scope: !16165)
!16167 = !DILocation(line: 6548, column: 10, scope: !16165)
!16168 = !DILocation(line: 6548, column: 6, scope: !16110)
!16169 = !DILocation(line: 6549, column: 3, scope: !16165)
!16170 = !DILocation(line: 6552, column: 28, scope: !16110)
!16171 = !DILocation(line: 6552, column: 10, scope: !16110)
!16172 = !DILocation(line: 6552, column: 2, scope: !16110)
!16173 = !DILocation(line: 6554, column: 8, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 6554, column: 8)
!16175 = distinct !DILexicalBlock(scope: !16110, file: !3, line: 6552, column: 35)
!16176 = !DILocation(line: 6554, column: 8, scope: !16175)
!16177 = !DILocation(line: 6555, column: 9, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16179, file: !3, line: 6555, column: 9)
!16179 = distinct !DILexicalBlock(scope: !16174, file: !3, line: 6554, column: 13)
!16180 = !DILocation(line: 6555, column: 15, scope: !16178)
!16181 = !DILocation(line: 6555, column: 9, scope: !16179)
!16182 = !DILocalVariable(name: "tmparray", scope: !16183, file: !3, line: 6556, type: !1330)
!16183 = distinct !DILexicalBlock(scope: !16178, file: !3, line: 6555, column: 22)
!16184 = !DILocation(line: 6556, column: 11, scope: !16183)
!16185 = !DILocation(line: 6556, column: 22, scope: !16183)
!16186 = !DILocation(line: 6556, column: 48, scope: !16183)
!16187 = !DILocation(line: 6556, column: 46, scope: !16183)
!16188 = !DILocation(line: 6558, column: 37, scope: !16183)
!16189 = !DILocation(line: 6558, column: 46, scope: !16183)
!16190 = !DILocation(line: 6558, column: 56, scope: !16183)
!16191 = !DILocation(line: 6558, column: 6, scope: !16183)
!16192 = !DILocation(line: 6559, column: 37, scope: !16183)
!16193 = !DILocation(line: 6559, column: 42, scope: !16183)
!16194 = !DILocation(line: 6559, column: 48, scope: !16183)
!16195 = !DILocation(line: 6559, column: 6, scope: !16183)
!16196 = !DILocation(line: 6561, column: 6, scope: !16183)
!16197 = !DILocation(line: 6561, column: 16, scope: !16183)
!16198 = !DILocation(line: 6562, column: 5, scope: !16183)
!16199 = !DILocalVariable(name: "value", scope: !16200, file: !3, line: 6564, type: !48)
!16200 = distinct !DILexicalBlock(scope: !16178, file: !3, line: 6563, column: 10)
!16201 = !DILocation(line: 6564, column: 10, scope: !16200)
!16202 = !DILocation(line: 6564, column: 49, scope: !16200)
!16203 = !DILocation(line: 6564, column: 58, scope: !16200)
!16204 = !DILocation(line: 6564, column: 68, scope: !16200)
!16205 = !DILocation(line: 6564, column: 18, scope: !16200)
!16206 = !DILocation(line: 6565, column: 37, scope: !16200)
!16207 = !DILocation(line: 6565, column: 42, scope: !16200)
!16208 = !DILocation(line: 6565, column: 48, scope: !16200)
!16209 = !DILocation(line: 6565, column: 55, scope: !16200)
!16210 = !DILocation(line: 6565, column: 6, scope: !16200)
!16211 = !DILocation(line: 6567, column: 4, scope: !16179)
!16212 = !DILocalVariable(name: "value", scope: !16213, file: !3, line: 6569, type: !48)
!16213 = distinct !DILexicalBlock(scope: !16174, file: !3, line: 6568, column: 9)
!16214 = !DILocation(line: 6569, column: 9, scope: !16213)
!16215 = !DILocation(line: 6569, column: 42, scope: !16213)
!16216 = !DILocation(line: 6569, column: 51, scope: !16213)
!16217 = !DILocation(line: 6569, column: 17, scope: !16213)
!16218 = !DILocation(line: 6570, column: 30, scope: !16213)
!16219 = !DILocation(line: 6570, column: 35, scope: !16213)
!16220 = !DILocation(line: 6570, column: 41, scope: !16213)
!16221 = !DILocation(line: 6570, column: 5, scope: !16213)
!16222 = !DILocation(line: 6572, column: 4, scope: !16175)
!16223 = !DILocation(line: 6574, column: 8, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 6574, column: 8)
!16225 = !DILocation(line: 6574, column: 8, scope: !16175)
!16226 = !DILocation(line: 6575, column: 9, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16228, file: !3, line: 6575, column: 9)
!16228 = distinct !DILexicalBlock(scope: !16224, file: !3, line: 6574, column: 13)
!16229 = !DILocation(line: 6575, column: 15, scope: !16227)
!16230 = !DILocation(line: 6575, column: 9, scope: !16228)
!16231 = !DILocalVariable(name: "tmparray", scope: !16232, file: !3, line: 6576, type: !1330)
!16232 = distinct !DILexicalBlock(scope: !16227, file: !3, line: 6575, column: 22)
!16233 = !DILocation(line: 6576, column: 11, scope: !16232)
!16234 = !DILocation(line: 6576, column: 22, scope: !16232)
!16235 = !DILocation(line: 6576, column: 48, scope: !16232)
!16236 = !DILocation(line: 6576, column: 46, scope: !16232)
!16237 = !DILocation(line: 6578, column: 33, scope: !16232)
!16238 = !DILocation(line: 6578, column: 42, scope: !16232)
!16239 = !DILocation(line: 6578, column: 52, scope: !16232)
!16240 = !DILocation(line: 6578, column: 6, scope: !16232)
!16241 = !DILocation(line: 6579, column: 33, scope: !16232)
!16242 = !DILocation(line: 6579, column: 38, scope: !16232)
!16243 = !DILocation(line: 6579, column: 44, scope: !16232)
!16244 = !DILocation(line: 6579, column: 6, scope: !16232)
!16245 = !DILocation(line: 6581, column: 6, scope: !16232)
!16246 = !DILocation(line: 6581, column: 16, scope: !16232)
!16247 = !DILocation(line: 6582, column: 5, scope: !16232)
!16248 = !DILocalVariable(name: "value", scope: !16249, file: !3, line: 6584, type: !48)
!16249 = distinct !DILexicalBlock(scope: !16227, file: !3, line: 6583, column: 10)
!16250 = !DILocation(line: 6584, column: 10, scope: !16249)
!16251 = !DILocation(line: 6584, column: 45, scope: !16249)
!16252 = !DILocation(line: 6584, column: 54, scope: !16249)
!16253 = !DILocation(line: 6584, column: 64, scope: !16249)
!16254 = !DILocation(line: 6584, column: 18, scope: !16249)
!16255 = !DILocation(line: 6585, column: 33, scope: !16249)
!16256 = !DILocation(line: 6585, column: 38, scope: !16249)
!16257 = !DILocation(line: 6585, column: 44, scope: !16249)
!16258 = !DILocation(line: 6585, column: 51, scope: !16249)
!16259 = !DILocation(line: 6585, column: 6, scope: !16249)
!16260 = !DILocation(line: 6587, column: 4, scope: !16228)
!16261 = !DILocalVariable(name: "value", scope: !16262, file: !3, line: 6589, type: !48)
!16262 = distinct !DILexicalBlock(scope: !16224, file: !3, line: 6588, column: 9)
!16263 = !DILocation(line: 6589, column: 9, scope: !16262)
!16264 = !DILocation(line: 6589, column: 38, scope: !16262)
!16265 = !DILocation(line: 6589, column: 47, scope: !16262)
!16266 = !DILocation(line: 6589, column: 17, scope: !16262)
!16267 = !DILocation(line: 6590, column: 26, scope: !16262)
!16268 = !DILocation(line: 6590, column: 31, scope: !16262)
!16269 = !DILocation(line: 6590, column: 37, scope: !16262)
!16270 = !DILocation(line: 6590, column: 5, scope: !16262)
!16271 = !DILocation(line: 6592, column: 4, scope: !16175)
!16272 = !DILocation(line: 6594, column: 8, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 6594, column: 8)
!16274 = !DILocation(line: 6594, column: 8, scope: !16175)
!16275 = !DILocation(line: 6595, column: 9, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16277, file: !3, line: 6595, column: 9)
!16277 = distinct !DILexicalBlock(scope: !16273, file: !3, line: 6594, column: 13)
!16278 = !DILocation(line: 6595, column: 15, scope: !16276)
!16279 = !DILocation(line: 6595, column: 9, scope: !16277)
!16280 = !DILocalVariable(name: "tmparray", scope: !16281, file: !3, line: 6596, type: !2540)
!16281 = distinct !DILexicalBlock(scope: !16276, file: !3, line: 6595, column: 22)
!16282 = !DILocation(line: 6596, column: 13, scope: !16281)
!16283 = !DILocation(line: 6596, column: 24, scope: !16281)
!16284 = !DILocation(line: 6596, column: 52, scope: !16281)
!16285 = !DILocation(line: 6596, column: 50, scope: !16281)
!16286 = !DILocation(line: 6598, column: 35, scope: !16281)
!16287 = !DILocation(line: 6598, column: 44, scope: !16281)
!16288 = !DILocation(line: 6598, column: 54, scope: !16281)
!16289 = !DILocation(line: 6598, column: 6, scope: !16281)
!16290 = !DILocation(line: 6599, column: 35, scope: !16281)
!16291 = !DILocation(line: 6599, column: 40, scope: !16281)
!16292 = !DILocation(line: 6599, column: 46, scope: !16281)
!16293 = !DILocation(line: 6599, column: 6, scope: !16281)
!16294 = !DILocation(line: 6601, column: 6, scope: !16281)
!16295 = !DILocation(line: 6601, column: 16, scope: !16281)
!16296 = !DILocation(line: 6602, column: 5, scope: !16281)
!16297 = !DILocalVariable(name: "value", scope: !16298, file: !3, line: 6604, type: !1285)
!16298 = distinct !DILexicalBlock(scope: !16276, file: !3, line: 6603, column: 10)
!16299 = !DILocation(line: 6604, column: 12, scope: !16298)
!16300 = !DILocation(line: 6604, column: 49, scope: !16298)
!16301 = !DILocation(line: 6604, column: 58, scope: !16298)
!16302 = !DILocation(line: 6604, column: 68, scope: !16298)
!16303 = !DILocation(line: 6604, column: 20, scope: !16298)
!16304 = !DILocation(line: 6605, column: 35, scope: !16298)
!16305 = !DILocation(line: 6605, column: 40, scope: !16298)
!16306 = !DILocation(line: 6605, column: 46, scope: !16298)
!16307 = !DILocation(line: 6605, column: 53, scope: !16298)
!16308 = !DILocation(line: 6605, column: 6, scope: !16298)
!16309 = !DILocation(line: 6607, column: 4, scope: !16277)
!16310 = !DILocalVariable(name: "value", scope: !16311, file: !3, line: 6609, type: !1285)
!16311 = distinct !DILexicalBlock(scope: !16273, file: !3, line: 6608, column: 9)
!16312 = !DILocation(line: 6609, column: 11, scope: !16311)
!16313 = !DILocation(line: 6609, column: 42, scope: !16311)
!16314 = !DILocation(line: 6609, column: 51, scope: !16311)
!16315 = !DILocation(line: 6609, column: 19, scope: !16311)
!16316 = !DILocation(line: 6610, column: 28, scope: !16311)
!16317 = !DILocation(line: 6610, column: 33, scope: !16311)
!16318 = !DILocation(line: 6610, column: 39, scope: !16311)
!16319 = !DILocation(line: 6610, column: 5, scope: !16311)
!16320 = !DILocation(line: 6612, column: 4, scope: !16175)
!16321 = !DILocalVariable(name: "value", scope: !16322, file: !3, line: 6615, type: !48)
!16322 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 6614, column: 3)
!16323 = !DILocation(line: 6615, column: 8, scope: !16322)
!16324 = !DILocation(line: 6615, column: 38, scope: !16322)
!16325 = !DILocation(line: 6615, column: 47, scope: !16322)
!16326 = !DILocation(line: 6615, column: 16, scope: !16322)
!16327 = !DILocation(line: 6616, column: 26, scope: !16322)
!16328 = !DILocation(line: 6616, column: 31, scope: !16322)
!16329 = !DILocation(line: 6616, column: 37, scope: !16322)
!16330 = !DILocation(line: 6616, column: 4, scope: !16322)
!16331 = !DILocation(line: 6617, column: 4, scope: !16322)
!16332 = !DILocalVariable(name: "value", scope: !16333, file: !3, line: 6621, type: !1350)
!16333 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 6620, column: 3)
!16334 = !DILocation(line: 6621, column: 15, scope: !16333)
!16335 = !DILocation(line: 6621, column: 48, scope: !16333)
!16336 = !DILocation(line: 6621, column: 57, scope: !16333)
!16337 = !DILocation(line: 6621, column: 23, scope: !16333)
!16338 = !DILocation(line: 6622, column: 29, scope: !16333)
!16339 = !DILocation(line: 6622, column: 34, scope: !16333)
!16340 = !DILocation(line: 6622, column: 4, scope: !16333)
!16341 = !DILocation(line: 6623, column: 4, scope: !16333)
!16342 = !DILocalVariable(name: "value", scope: !16343, file: !3, line: 6627, type: !1091)
!16343 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 6626, column: 3)
!16344 = !DILocation(line: 6627, column: 10, scope: !16343)
!16345 = !DILocation(line: 6627, column: 48, scope: !16343)
!16346 = !DILocation(line: 6627, column: 57, scope: !16343)
!16347 = !DILocation(line: 6627, column: 18, scope: !16343)
!16348 = !DILocation(line: 6628, column: 28, scope: !16343)
!16349 = !DILocation(line: 6628, column: 33, scope: !16343)
!16350 = !DILocation(line: 6628, column: 39, scope: !16343)
!16351 = !DILocation(line: 6628, column: 4, scope: !16343)
!16352 = !DILocation(line: 6629, column: 4, scope: !16343)
!16353 = !DILocation(line: 6629, column: 14, scope: !16343)
!16354 = !DILocation(line: 6630, column: 4, scope: !16343)
!16355 = !DILocation(line: 6633, column: 4, scope: !16175)
!16356 = !DILocation(line: 6637, column: 1, scope: !16110)
!16357 = distinct !DISubprogram(name: "_RNA_warning", scope: !3, file: !3, line: 6640, type: !16358, scopeLine: 6641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!16358 = !DISubroutineType(types: !16359)
!16359 = !{null, !1031, null}
!16360 = !DILocalVariable(name: "format", arg: 1, scope: !16357, file: !3, line: 6640, type: !1031)
!16361 = !DILocation(line: 6640, column: 31, scope: !16357)
!16362 = !DILocalVariable(name: "args", scope: !16357, file: !3, line: 6642, type: !14991)
!16363 = !DILocation(line: 6642, column: 10, scope: !16357)
!16364 = !DILocation(line: 6644, column: 2, scope: !16357)
!16365 = !DILocation(line: 6645, column: 10, scope: !16357)
!16366 = !DILocation(line: 6645, column: 18, scope: !16357)
!16367 = !DILocation(line: 6645, column: 2, scope: !16357)
!16368 = !DILocation(line: 6646, column: 2, scope: !16357)
!16369 = !DILocation(line: 6659, column: 1, scope: !16357)
!16370 = distinct !DISubprogram(name: "RNA_property_equals", scope: !3, file: !3, line: 6661, type: !16371, scopeLine: 6662, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!16371 = !DISubroutineType(types: !16372)
!16372 = !{!1381, !1349, !1349, !1021, !16373}
!16373 = !DIDerivedType(tag: DW_TAG_typedef, name: "eRNAEqualsMode", file: !961, line: 1160, baseType: !960)
!16374 = !DILocalVariable(name: "a", arg: 1, scope: !16370, file: !3, line: 6661, type: !1349)
!16375 = !DILocation(line: 6661, column: 38, scope: !16370)
!16376 = !DILocalVariable(name: "b", arg: 2, scope: !16370, file: !3, line: 6661, type: !1349)
!16377 = !DILocation(line: 6661, column: 53, scope: !16370)
!16378 = !DILocalVariable(name: "prop", arg: 3, scope: !16370, file: !3, line: 6661, type: !1021)
!16379 = !DILocation(line: 6661, column: 69, scope: !16370)
!16380 = !DILocalVariable(name: "mode", arg: 4, scope: !16370, file: !3, line: 6661, type: !16373)
!16381 = !DILocation(line: 6661, column: 90, scope: !16370)
!16382 = !DILocalVariable(name: "len", scope: !16370, file: !3, line: 6663, type: !48)
!16383 = !DILocation(line: 6663, column: 6, scope: !16370)
!16384 = !DILocalVariable(name: "fromlen", scope: !16370, file: !3, line: 6663, type: !48)
!16385 = !DILocation(line: 6663, column: 11, scope: !16370)
!16386 = !DILocation(line: 6665, column: 6, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16370, file: !3, line: 6665, column: 6)
!16388 = !DILocation(line: 6665, column: 11, scope: !16387)
!16389 = !DILocation(line: 6665, column: 6, scope: !16370)
!16390 = !DILocation(line: 6667, column: 28, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16392, file: !3, line: 6667, column: 7)
!16392 = distinct !DILexicalBlock(scope: !16387, file: !3, line: 6665, column: 38)
!16393 = !DILocation(line: 6667, column: 31, scope: !16391)
!16394 = !DILocation(line: 6667, column: 8, scope: !16391)
!16395 = !DILocation(line: 6667, column: 37, scope: !16391)
!16396 = !DILocation(line: 6667, column: 61, scope: !16391)
!16397 = !DILocation(line: 6667, column: 64, scope: !16391)
!16398 = !DILocation(line: 6667, column: 41, scope: !16391)
!16399 = !DILocation(line: 6667, column: 7, scope: !16392)
!16400 = !DILocation(line: 6668, column: 4, scope: !16391)
!16401 = !DILocation(line: 6669, column: 2, scope: !16392)
!16402 = !DILocation(line: 6670, column: 11, scope: !16403)
!16403 = distinct !DILexicalBlock(scope: !16387, file: !3, line: 6670, column: 11)
!16404 = !DILocation(line: 6670, column: 16, scope: !16403)
!16405 = !DILocation(line: 6670, column: 11, scope: !16387)
!16406 = !DILocation(line: 6672, column: 27, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16408, file: !3, line: 6672, column: 7)
!16408 = distinct !DILexicalBlock(scope: !16403, file: !3, line: 6670, column: 44)
!16409 = !DILocation(line: 6672, column: 30, scope: !16407)
!16410 = !DILocation(line: 6672, column: 7, scope: !16407)
!16411 = !DILocation(line: 6672, column: 59, scope: !16407)
!16412 = !DILocation(line: 6672, column: 62, scope: !16407)
!16413 = !DILocation(line: 6672, column: 39, scope: !16407)
!16414 = !DILocation(line: 6672, column: 36, scope: !16407)
!16415 = !DILocation(line: 6672, column: 7, scope: !16408)
!16416 = !DILocation(line: 6673, column: 4, scope: !16407)
!16417 = !DILocation(line: 6674, column: 2, scope: !16408)
!16418 = !DILocation(line: 6677, column: 34, scope: !16370)
!16419 = !DILocation(line: 6677, column: 37, scope: !16370)
!16420 = !DILocation(line: 6677, column: 8, scope: !16370)
!16421 = !DILocation(line: 6677, column: 6, scope: !16370)
!16422 = !DILocation(line: 6678, column: 38, scope: !16370)
!16423 = !DILocation(line: 6678, column: 41, scope: !16370)
!16424 = !DILocation(line: 6678, column: 12, scope: !16370)
!16425 = !DILocation(line: 6678, column: 10, scope: !16370)
!16426 = !DILocation(line: 6680, column: 6, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16370, file: !3, line: 6680, column: 6)
!16428 = !DILocation(line: 6680, column: 13, scope: !16427)
!16429 = !DILocation(line: 6680, column: 10, scope: !16427)
!16430 = !DILocation(line: 6680, column: 6, scope: !16370)
!16431 = !DILocation(line: 6681, column: 3, scope: !16427)
!16432 = !DILocation(line: 6684, column: 28, scope: !16370)
!16433 = !DILocation(line: 6684, column: 10, scope: !16370)
!16434 = !DILocation(line: 6684, column: 2, scope: !16370)
!16435 = !DILocation(line: 6687, column: 8, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !16437, file: !3, line: 6687, column: 8)
!16437 = distinct !DILexicalBlock(scope: !16438, file: !3, line: 6686, column: 3)
!16438 = distinct !DILexicalBlock(scope: !16370, file: !3, line: 6684, column: 35)
!16439 = !DILocation(line: 6687, column: 8, scope: !16437)
!16440 = !DILocalVariable(name: "fixed_a", scope: !16441, file: !3, line: 6688, type: !16442)
!16441 = distinct !DILexicalBlock(scope: !16436, file: !3, line: 6687, column: 13)
!16442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 512, elements: !1119)
!16443 = !DILocation(line: 6688, column: 9, scope: !16441)
!16444 = !DILocalVariable(name: "fixed_b", scope: !16441, file: !3, line: 6688, type: !16442)
!16445 = !DILocation(line: 6688, column: 22, scope: !16441)
!16446 = !DILocalVariable(name: "array_a", scope: !16441, file: !3, line: 6689, type: !1330)
!16447 = !DILocation(line: 6689, column: 10, scope: !16441)
!16448 = !DILocalVariable(name: "array_b", scope: !16441, file: !3, line: 6689, type: !1330)
!16449 = !DILocation(line: 6689, column: 20, scope: !16441)
!16450 = !DILocalVariable(name: "equals", scope: !16441, file: !3, line: 6690, type: !1381)
!16451 = !DILocation(line: 6690, column: 10, scope: !16441)
!16452 = !DILocation(line: 6692, column: 16, scope: !16441)
!16453 = !DILocation(line: 6692, column: 20, scope: !16441)
!16454 = !DILocation(line: 6692, column: 15, scope: !16441)
!16455 = !DILocation(line: 6692, column: 28, scope: !16441)
!16456 = !DILocation(line: 6692, column: 54, scope: !16441)
!16457 = !DILocation(line: 6692, column: 52, scope: !16441)
!16458 = !DILocation(line: 6692, column: 75, scope: !16441)
!16459 = !DILocation(line: 6692, column: 13, scope: !16441)
!16460 = !DILocation(line: 6693, column: 16, scope: !16441)
!16461 = !DILocation(line: 6693, column: 20, scope: !16441)
!16462 = !DILocation(line: 6693, column: 15, scope: !16441)
!16463 = !DILocation(line: 6693, column: 28, scope: !16441)
!16464 = !DILocation(line: 6693, column: 54, scope: !16441)
!16465 = !DILocation(line: 6693, column: 52, scope: !16441)
!16466 = !DILocation(line: 6693, column: 75, scope: !16441)
!16467 = !DILocation(line: 6693, column: 13, scope: !16441)
!16468 = !DILocation(line: 6695, column: 36, scope: !16441)
!16469 = !DILocation(line: 6695, column: 39, scope: !16441)
!16470 = !DILocation(line: 6695, column: 45, scope: !16441)
!16471 = !DILocation(line: 6695, column: 5, scope: !16441)
!16472 = !DILocation(line: 6696, column: 36, scope: !16441)
!16473 = !DILocation(line: 6696, column: 39, scope: !16441)
!16474 = !DILocation(line: 6696, column: 45, scope: !16441)
!16475 = !DILocation(line: 6696, column: 5, scope: !16441)
!16476 = !DILocation(line: 6698, column: 21, scope: !16441)
!16477 = !DILocation(line: 6698, column: 30, scope: !16441)
!16478 = !DILocation(line: 6698, column: 53, scope: !16441)
!16479 = !DILocation(line: 6698, column: 51, scope: !16441)
!16480 = !DILocation(line: 6698, column: 14, scope: !16441)
!16481 = !DILocation(line: 6698, column: 58, scope: !16441)
!16482 = !DILocation(line: 6698, column: 12, scope: !16441)
!16483 = !DILocation(line: 6700, column: 9, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16441, file: !3, line: 6700, column: 9)
!16485 = !DILocation(line: 6700, column: 20, scope: !16484)
!16486 = !DILocation(line: 6700, column: 17, scope: !16484)
!16487 = !DILocation(line: 6700, column: 9, scope: !16441)
!16488 = !DILocation(line: 6700, column: 29, scope: !16484)
!16489 = !DILocation(line: 6700, column: 39, scope: !16484)
!16490 = !DILocation(line: 6701, column: 9, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16441, file: !3, line: 6701, column: 9)
!16492 = !DILocation(line: 6701, column: 20, scope: !16491)
!16493 = !DILocation(line: 6701, column: 17, scope: !16491)
!16494 = !DILocation(line: 6701, column: 9, scope: !16441)
!16495 = !DILocation(line: 6701, column: 29, scope: !16491)
!16496 = !DILocation(line: 6701, column: 39, scope: !16491)
!16497 = !DILocation(line: 6703, column: 12, scope: !16441)
!16498 = !DILocation(line: 6703, column: 5, scope: !16441)
!16499 = !DILocalVariable(name: "value", scope: !16500, file: !3, line: 6706, type: !48)
!16500 = distinct !DILexicalBlock(scope: !16436, file: !3, line: 6705, column: 9)
!16501 = !DILocation(line: 6706, column: 9, scope: !16500)
!16502 = !DILocation(line: 6706, column: 42, scope: !16500)
!16503 = !DILocation(line: 6706, column: 45, scope: !16500)
!16504 = !DILocation(line: 6706, column: 17, scope: !16500)
!16505 = !DILocation(line: 6707, column: 12, scope: !16500)
!16506 = !DILocation(line: 6707, column: 46, scope: !16500)
!16507 = !DILocation(line: 6707, column: 49, scope: !16500)
!16508 = !DILocation(line: 6707, column: 21, scope: !16500)
!16509 = !DILocation(line: 6707, column: 18, scope: !16500)
!16510 = !DILocation(line: 6707, column: 5, scope: !16500)
!16511 = !DILocation(line: 6713, column: 8, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !16513, file: !3, line: 6713, column: 8)
!16513 = distinct !DILexicalBlock(scope: !16438, file: !3, line: 6712, column: 3)
!16514 = !DILocation(line: 6713, column: 8, scope: !16513)
!16515 = !DILocalVariable(name: "fixed_a", scope: !16516, file: !3, line: 6714, type: !16442)
!16516 = distinct !DILexicalBlock(scope: !16512, file: !3, line: 6713, column: 13)
!16517 = !DILocation(line: 6714, column: 9, scope: !16516)
!16518 = !DILocalVariable(name: "fixed_b", scope: !16516, file: !3, line: 6714, type: !16442)
!16519 = !DILocation(line: 6714, column: 22, scope: !16516)
!16520 = !DILocalVariable(name: "array_a", scope: !16516, file: !3, line: 6715, type: !1330)
!16521 = !DILocation(line: 6715, column: 10, scope: !16516)
!16522 = !DILocalVariable(name: "array_b", scope: !16516, file: !3, line: 6715, type: !1330)
!16523 = !DILocation(line: 6715, column: 20, scope: !16516)
!16524 = !DILocalVariable(name: "equals", scope: !16516, file: !3, line: 6716, type: !1381)
!16525 = !DILocation(line: 6716, column: 10, scope: !16516)
!16526 = !DILocation(line: 6718, column: 16, scope: !16516)
!16527 = !DILocation(line: 6718, column: 20, scope: !16516)
!16528 = !DILocation(line: 6718, column: 15, scope: !16516)
!16529 = !DILocation(line: 6718, column: 28, scope: !16516)
!16530 = !DILocation(line: 6718, column: 54, scope: !16516)
!16531 = !DILocation(line: 6718, column: 52, scope: !16516)
!16532 = !DILocation(line: 6718, column: 75, scope: !16516)
!16533 = !DILocation(line: 6718, column: 13, scope: !16516)
!16534 = !DILocation(line: 6719, column: 16, scope: !16516)
!16535 = !DILocation(line: 6719, column: 20, scope: !16516)
!16536 = !DILocation(line: 6719, column: 15, scope: !16516)
!16537 = !DILocation(line: 6719, column: 28, scope: !16516)
!16538 = !DILocation(line: 6719, column: 54, scope: !16516)
!16539 = !DILocation(line: 6719, column: 52, scope: !16516)
!16540 = !DILocation(line: 6719, column: 75, scope: !16516)
!16541 = !DILocation(line: 6719, column: 13, scope: !16516)
!16542 = !DILocation(line: 6721, column: 32, scope: !16516)
!16543 = !DILocation(line: 6721, column: 35, scope: !16516)
!16544 = !DILocation(line: 6721, column: 41, scope: !16516)
!16545 = !DILocation(line: 6721, column: 5, scope: !16516)
!16546 = !DILocation(line: 6722, column: 32, scope: !16516)
!16547 = !DILocation(line: 6722, column: 35, scope: !16516)
!16548 = !DILocation(line: 6722, column: 41, scope: !16516)
!16549 = !DILocation(line: 6722, column: 5, scope: !16516)
!16550 = !DILocation(line: 6724, column: 21, scope: !16516)
!16551 = !DILocation(line: 6724, column: 30, scope: !16516)
!16552 = !DILocation(line: 6724, column: 53, scope: !16516)
!16553 = !DILocation(line: 6724, column: 51, scope: !16516)
!16554 = !DILocation(line: 6724, column: 14, scope: !16516)
!16555 = !DILocation(line: 6724, column: 58, scope: !16516)
!16556 = !DILocation(line: 6724, column: 12, scope: !16516)
!16557 = !DILocation(line: 6726, column: 9, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16516, file: !3, line: 6726, column: 9)
!16559 = !DILocation(line: 6726, column: 20, scope: !16558)
!16560 = !DILocation(line: 6726, column: 17, scope: !16558)
!16561 = !DILocation(line: 6726, column: 9, scope: !16516)
!16562 = !DILocation(line: 6726, column: 29, scope: !16558)
!16563 = !DILocation(line: 6726, column: 39, scope: !16558)
!16564 = !DILocation(line: 6727, column: 9, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16516, file: !3, line: 6727, column: 9)
!16566 = !DILocation(line: 6727, column: 20, scope: !16565)
!16567 = !DILocation(line: 6727, column: 17, scope: !16565)
!16568 = !DILocation(line: 6727, column: 9, scope: !16516)
!16569 = !DILocation(line: 6727, column: 29, scope: !16565)
!16570 = !DILocation(line: 6727, column: 39, scope: !16565)
!16571 = !DILocation(line: 6729, column: 12, scope: !16516)
!16572 = !DILocation(line: 6729, column: 5, scope: !16516)
!16573 = !DILocalVariable(name: "value", scope: !16574, file: !3, line: 6732, type: !48)
!16574 = distinct !DILexicalBlock(scope: !16512, file: !3, line: 6731, column: 9)
!16575 = !DILocation(line: 6732, column: 9, scope: !16574)
!16576 = !DILocation(line: 6732, column: 38, scope: !16574)
!16577 = !DILocation(line: 6732, column: 41, scope: !16574)
!16578 = !DILocation(line: 6732, column: 17, scope: !16574)
!16579 = !DILocation(line: 6733, column: 12, scope: !16574)
!16580 = !DILocation(line: 6733, column: 42, scope: !16574)
!16581 = !DILocation(line: 6733, column: 45, scope: !16574)
!16582 = !DILocation(line: 6733, column: 21, scope: !16574)
!16583 = !DILocation(line: 6733, column: 18, scope: !16574)
!16584 = !DILocation(line: 6733, column: 5, scope: !16574)
!16585 = !DILocation(line: 6739, column: 8, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16587, file: !3, line: 6739, column: 8)
!16587 = distinct !DILexicalBlock(scope: !16438, file: !3, line: 6738, column: 3)
!16588 = !DILocation(line: 6739, column: 8, scope: !16587)
!16589 = !DILocalVariable(name: "fixed_a", scope: !16590, file: !3, line: 6740, type: !16591)
!16590 = distinct !DILexicalBlock(scope: !16586, file: !3, line: 6739, column: 13)
!16591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1285, size: 512, elements: !1119)
!16592 = !DILocation(line: 6740, column: 11, scope: !16590)
!16593 = !DILocalVariable(name: "fixed_b", scope: !16590, file: !3, line: 6740, type: !16591)
!16594 = !DILocation(line: 6740, column: 24, scope: !16590)
!16595 = !DILocalVariable(name: "array_a", scope: !16590, file: !3, line: 6741, type: !2540)
!16596 = !DILocation(line: 6741, column: 12, scope: !16590)
!16597 = !DILocalVariable(name: "array_b", scope: !16590, file: !3, line: 6741, type: !2540)
!16598 = !DILocation(line: 6741, column: 22, scope: !16590)
!16599 = !DILocalVariable(name: "equals", scope: !16590, file: !3, line: 6742, type: !1381)
!16600 = !DILocation(line: 6742, column: 10, scope: !16590)
!16601 = !DILocation(line: 6744, column: 16, scope: !16590)
!16602 = !DILocation(line: 6744, column: 20, scope: !16590)
!16603 = !DILocation(line: 6744, column: 15, scope: !16590)
!16604 = !DILocation(line: 6744, column: 28, scope: !16590)
!16605 = !DILocation(line: 6744, column: 56, scope: !16590)
!16606 = !DILocation(line: 6744, column: 54, scope: !16590)
!16607 = !DILocation(line: 6744, column: 77, scope: !16590)
!16608 = !DILocation(line: 6744, column: 13, scope: !16590)
!16609 = !DILocation(line: 6745, column: 16, scope: !16590)
!16610 = !DILocation(line: 6745, column: 20, scope: !16590)
!16611 = !DILocation(line: 6745, column: 15, scope: !16590)
!16612 = !DILocation(line: 6745, column: 28, scope: !16590)
!16613 = !DILocation(line: 6745, column: 56, scope: !16590)
!16614 = !DILocation(line: 6745, column: 54, scope: !16590)
!16615 = !DILocation(line: 6745, column: 77, scope: !16590)
!16616 = !DILocation(line: 6745, column: 13, scope: !16590)
!16617 = !DILocation(line: 6747, column: 34, scope: !16590)
!16618 = !DILocation(line: 6747, column: 37, scope: !16590)
!16619 = !DILocation(line: 6747, column: 43, scope: !16590)
!16620 = !DILocation(line: 6747, column: 5, scope: !16590)
!16621 = !DILocation(line: 6748, column: 34, scope: !16590)
!16622 = !DILocation(line: 6748, column: 37, scope: !16590)
!16623 = !DILocation(line: 6748, column: 43, scope: !16590)
!16624 = !DILocation(line: 6748, column: 5, scope: !16590)
!16625 = !DILocation(line: 6750, column: 21, scope: !16590)
!16626 = !DILocation(line: 6750, column: 30, scope: !16590)
!16627 = !DILocation(line: 6750, column: 55, scope: !16590)
!16628 = !DILocation(line: 6750, column: 53, scope: !16590)
!16629 = !DILocation(line: 6750, column: 14, scope: !16590)
!16630 = !DILocation(line: 6750, column: 60, scope: !16590)
!16631 = !DILocation(line: 6750, column: 12, scope: !16590)
!16632 = !DILocation(line: 6752, column: 9, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16590, file: !3, line: 6752, column: 9)
!16634 = !DILocation(line: 6752, column: 20, scope: !16633)
!16635 = !DILocation(line: 6752, column: 17, scope: !16633)
!16636 = !DILocation(line: 6752, column: 9, scope: !16590)
!16637 = !DILocation(line: 6752, column: 29, scope: !16633)
!16638 = !DILocation(line: 6752, column: 39, scope: !16633)
!16639 = !DILocation(line: 6753, column: 9, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16590, file: !3, line: 6753, column: 9)
!16641 = !DILocation(line: 6753, column: 20, scope: !16640)
!16642 = !DILocation(line: 6753, column: 17, scope: !16640)
!16643 = !DILocation(line: 6753, column: 9, scope: !16590)
!16644 = !DILocation(line: 6753, column: 29, scope: !16640)
!16645 = !DILocation(line: 6753, column: 39, scope: !16640)
!16646 = !DILocation(line: 6755, column: 12, scope: !16590)
!16647 = !DILocation(line: 6755, column: 5, scope: !16590)
!16648 = !DILocalVariable(name: "value", scope: !16649, file: !3, line: 6758, type: !1285)
!16649 = distinct !DILexicalBlock(scope: !16586, file: !3, line: 6757, column: 9)
!16650 = !DILocation(line: 6758, column: 11, scope: !16649)
!16651 = !DILocation(line: 6758, column: 42, scope: !16649)
!16652 = !DILocation(line: 6758, column: 45, scope: !16649)
!16653 = !DILocation(line: 6758, column: 19, scope: !16649)
!16654 = !DILocation(line: 6759, column: 12, scope: !16649)
!16655 = !DILocation(line: 6759, column: 44, scope: !16649)
!16656 = !DILocation(line: 6759, column: 47, scope: !16649)
!16657 = !DILocation(line: 6759, column: 21, scope: !16649)
!16658 = !DILocation(line: 6759, column: 18, scope: !16649)
!16659 = !DILocation(line: 6759, column: 5, scope: !16649)
!16660 = !DILocalVariable(name: "value", scope: !16661, file: !3, line: 6765, type: !48)
!16661 = distinct !DILexicalBlock(scope: !16438, file: !3, line: 6764, column: 3)
!16662 = !DILocation(line: 6765, column: 8, scope: !16661)
!16663 = !DILocation(line: 6765, column: 38, scope: !16661)
!16664 = !DILocation(line: 6765, column: 41, scope: !16661)
!16665 = !DILocation(line: 6765, column: 16, scope: !16661)
!16666 = !DILocation(line: 6766, column: 11, scope: !16661)
!16667 = !DILocation(line: 6766, column: 42, scope: !16661)
!16668 = !DILocation(line: 6766, column: 45, scope: !16661)
!16669 = !DILocation(line: 6766, column: 20, scope: !16661)
!16670 = !DILocation(line: 6766, column: 17, scope: !16661)
!16671 = !DILocation(line: 6766, column: 4, scope: !16661)
!16672 = !DILocalVariable(name: "fixed_a", scope: !16673, file: !3, line: 6771, type: !2118)
!16673 = distinct !DILexicalBlock(scope: !16438, file: !3, line: 6770, column: 3)
!16674 = !DILocation(line: 6771, column: 9, scope: !16673)
!16675 = !DILocalVariable(name: "fixed_b", scope: !16673, file: !3, line: 6771, type: !2118)
!16676 = !DILocation(line: 6771, column: 23, scope: !16673)
!16677 = !DILocalVariable(name: "len_a", scope: !16673, file: !3, line: 6772, type: !48)
!16678 = !DILocation(line: 6772, column: 8, scope: !16673)
!16679 = !DILocalVariable(name: "len_b", scope: !16673, file: !3, line: 6772, type: !48)
!16680 = !DILocation(line: 6772, column: 15, scope: !16673)
!16681 = !DILocalVariable(name: "value_a", scope: !16673, file: !3, line: 6773, type: !1091)
!16682 = !DILocation(line: 6773, column: 10, scope: !16673)
!16683 = !DILocation(line: 6773, column: 50, scope: !16673)
!16684 = !DILocation(line: 6773, column: 53, scope: !16673)
!16685 = !DILocation(line: 6773, column: 59, scope: !16673)
!16686 = !DILocation(line: 6773, column: 20, scope: !16673)
!16687 = !DILocalVariable(name: "value_b", scope: !16673, file: !3, line: 6774, type: !1091)
!16688 = !DILocation(line: 6774, column: 10, scope: !16673)
!16689 = !DILocation(line: 6774, column: 50, scope: !16673)
!16690 = !DILocation(line: 6774, column: 53, scope: !16673)
!16691 = !DILocation(line: 6774, column: 59, scope: !16673)
!16692 = !DILocation(line: 6774, column: 20, scope: !16673)
!16693 = !DILocalVariable(name: "equals", scope: !16673, file: !3, line: 6775, type: !1381)
!16694 = !DILocation(line: 6775, column: 9, scope: !16673)
!16695 = !DILocation(line: 6775, column: 25, scope: !16673)
!16696 = !DILocation(line: 6775, column: 34, scope: !16673)
!16697 = !DILocation(line: 6775, column: 18, scope: !16673)
!16698 = !DILocation(line: 6775, column: 43, scope: !16673)
!16699 = !DILocation(line: 6777, column: 8, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 6777, column: 8)
!16701 = !DILocation(line: 6777, column: 19, scope: !16700)
!16702 = !DILocation(line: 6777, column: 16, scope: !16700)
!16703 = !DILocation(line: 6777, column: 8, scope: !16673)
!16704 = !DILocation(line: 6777, column: 28, scope: !16700)
!16705 = !DILocation(line: 6777, column: 38, scope: !16700)
!16706 = !DILocation(line: 6778, column: 8, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 6778, column: 8)
!16708 = !DILocation(line: 6778, column: 19, scope: !16707)
!16709 = !DILocation(line: 6778, column: 16, scope: !16707)
!16710 = !DILocation(line: 6778, column: 8, scope: !16673)
!16711 = !DILocation(line: 6778, column: 28, scope: !16707)
!16712 = !DILocation(line: 6778, column: 38, scope: !16707)
!16713 = !DILocation(line: 6780, column: 11, scope: !16673)
!16714 = !DILocation(line: 6780, column: 4, scope: !16673)
!16715 = !DILocation(line: 6785, column: 9, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 6785, column: 8)
!16717 = distinct !DILexicalBlock(scope: !16438, file: !3, line: 6784, column: 3)
!16718 = !DILocation(line: 6785, column: 8, scope: !16717)
!16719 = !DILocalVariable(name: "propptr_a", scope: !16720, file: !3, line: 6786, type: !1350)
!16720 = distinct !DILexicalBlock(scope: !16716, file: !3, line: 6785, column: 59)
!16721 = !DILocation(line: 6786, column: 16, scope: !16720)
!16722 = !DILocation(line: 6786, column: 53, scope: !16720)
!16723 = !DILocation(line: 6786, column: 56, scope: !16720)
!16724 = !DILocation(line: 6786, column: 28, scope: !16720)
!16725 = !DILocalVariable(name: "propptr_b", scope: !16720, file: !3, line: 6787, type: !1350)
!16726 = !DILocation(line: 6787, column: 16, scope: !16720)
!16727 = !DILocation(line: 6787, column: 53, scope: !16720)
!16728 = !DILocation(line: 6787, column: 56, scope: !16720)
!16729 = !DILocation(line: 6787, column: 28, scope: !16720)
!16730 = !DILocation(line: 6788, column: 54, scope: !16720)
!16731 = !DILocation(line: 6788, column: 12, scope: !16720)
!16732 = !DILocation(line: 6788, column: 5, scope: !16720)
!16733 = !DILocation(line: 6790, column: 4, scope: !16717)
!16734 = !DILocation(line: 6794, column: 4, scope: !16438)
!16735 = !DILocation(line: 6797, column: 2, scope: !16370)
!16736 = !DILocation(line: 6798, column: 1, scope: !16370)
!16737 = distinct !DISubprogram(name: "RNA_struct_equals", scope: !3, file: !3, line: 6800, type: !16738, scopeLine: 6801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!16738 = !DISubroutineType(types: !16739)
!16739 = !{!1381, !1349, !1349, !16373}
!16740 = !DILocalVariable(name: "a", arg: 1, scope: !16737, file: !3, line: 6800, type: !1349)
!16741 = !DILocation(line: 6800, column: 36, scope: !16737)
!16742 = !DILocalVariable(name: "b", arg: 2, scope: !16737, file: !3, line: 6800, type: !1349)
!16743 = !DILocation(line: 6800, column: 51, scope: !16737)
!16744 = !DILocalVariable(name: "mode", arg: 3, scope: !16737, file: !3, line: 6800, type: !16373)
!16745 = !DILocation(line: 6800, column: 69, scope: !16737)
!16746 = !DILocalVariable(name: "iter", scope: !16737, file: !3, line: 6802, type: !3774)
!16747 = !DILocation(line: 6802, column: 29, scope: !16737)
!16748 = !DILocalVariable(name: "iterprop", scope: !16737, file: !3, line: 6804, type: !1021)
!16749 = !DILocation(line: 6804, column: 15, scope: !16737)
!16750 = !DILocalVariable(name: "equals", scope: !16737, file: !3, line: 6805, type: !1381)
!16751 = !DILocation(line: 6805, column: 7, scope: !16737)
!16752 = !DILocation(line: 6807, column: 6, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16737, file: !3, line: 6807, column: 6)
!16754 = !DILocation(line: 6807, column: 8, scope: !16753)
!16755 = !DILocation(line: 6807, column: 16, scope: !16753)
!16756 = !DILocation(line: 6807, column: 19, scope: !16753)
!16757 = !DILocation(line: 6807, column: 21, scope: !16753)
!16758 = !DILocation(line: 6807, column: 6, scope: !16737)
!16759 = !DILocation(line: 6808, column: 3, scope: !16753)
!16760 = !DILocation(line: 6809, column: 11, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16753, file: !3, line: 6809, column: 11)
!16762 = !DILocation(line: 6809, column: 13, scope: !16761)
!16763 = !DILocation(line: 6809, column: 21, scope: !16761)
!16764 = !DILocation(line: 6809, column: 24, scope: !16761)
!16765 = !DILocation(line: 6809, column: 26, scope: !16761)
!16766 = !DILocation(line: 6809, column: 11, scope: !16753)
!16767 = !DILocation(line: 6810, column: 3, scope: !16761)
!16768 = !DILocation(line: 6811, column: 11, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16761, file: !3, line: 6811, column: 11)
!16770 = !DILocation(line: 6811, column: 14, scope: !16769)
!16771 = !DILocation(line: 6811, column: 22, scope: !16769)
!16772 = !DILocation(line: 6811, column: 25, scope: !16769)
!16773 = !DILocation(line: 6811, column: 19, scope: !16769)
!16774 = !DILocation(line: 6811, column: 11, scope: !16761)
!16775 = !DILocation(line: 6812, column: 3, scope: !16769)
!16776 = !DILocation(line: 6814, column: 42, scope: !16737)
!16777 = !DILocation(line: 6814, column: 45, scope: !16737)
!16778 = !DILocation(line: 6814, column: 13, scope: !16737)
!16779 = !DILocation(line: 6814, column: 11, scope: !16737)
!16780 = !DILocation(line: 6817, column: 32, scope: !16737)
!16781 = !DILocation(line: 6817, column: 35, scope: !16737)
!16782 = !DILocation(line: 6817, column: 2, scope: !16737)
!16783 = !DILocation(line: 6818, column: 2, scope: !16737)
!16784 = !DILocation(line: 6818, column: 14, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16786, file: !3, line: 6818, column: 2)
!16786 = distinct !DILexicalBlock(scope: !16737, file: !3, line: 6818, column: 2)
!16787 = !DILocation(line: 6818, column: 2, scope: !16786)
!16788 = !DILocalVariable(name: "prop", scope: !16789, file: !3, line: 6819, type: !1021)
!16789 = distinct !DILexicalBlock(scope: !16785, file: !3, line: 6818, column: 58)
!16790 = !DILocation(line: 6819, column: 16, scope: !16789)
!16791 = !DILocation(line: 6819, column: 28, scope: !16789)
!16792 = !DILocation(line: 6819, column: 32, scope: !16789)
!16793 = !DILocation(line: 6819, column: 23, scope: !16789)
!16794 = !DILocation(line: 6821, column: 28, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 6821, column: 7)
!16796 = !DILocation(line: 6821, column: 31, scope: !16795)
!16797 = !DILocation(line: 6821, column: 34, scope: !16795)
!16798 = !DILocation(line: 6821, column: 40, scope: !16795)
!16799 = !DILocation(line: 6821, column: 8, scope: !16795)
!16800 = !DILocation(line: 6821, column: 7, scope: !16789)
!16801 = !DILocation(line: 6822, column: 11, scope: !16802)
!16802 = distinct !DILexicalBlock(scope: !16795, file: !3, line: 6821, column: 47)
!16803 = !DILocation(line: 6823, column: 4, scope: !16802)
!16804 = !DILocation(line: 6825, column: 2, scope: !16789)
!16805 = !DILocation(line: 6818, column: 21, scope: !16785)
!16806 = !DILocation(line: 6818, column: 2, scope: !16785)
!16807 = distinct !{!16807, !16787, !16808}
!16808 = !DILocation(line: 6825, column: 2, scope: !16786)
!16809 = !DILocation(line: 6826, column: 2, scope: !16737)
!16810 = !DILocation(line: 6828, column: 9, scope: !16737)
!16811 = !DILocation(line: 6828, column: 2, scope: !16737)
!16812 = !DILocation(line: 6829, column: 1, scope: !16737)
!16813 = distinct !DISubprogram(name: "rna_property_array_length_all_dimensions", scope: !3, file: !3, line: 3348, type: !4409, scopeLine: 3349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!16814 = !DILocalVariable(name: "ptr", arg: 1, scope: !16813, file: !3, line: 3348, type: !1349)
!16815 = !DILocation(line: 3348, column: 65, scope: !16813)
!16816 = !DILocalVariable(name: "prop", arg: 2, scope: !16813, file: !3, line: 3348, type: !1021)
!16817 = !DILocation(line: 3348, column: 83, scope: !16813)
!16818 = !DILocalVariable(name: "i", scope: !16813, file: !3, line: 3350, type: !48)
!16819 = !DILocation(line: 3350, column: 6, scope: !16813)
!16820 = !DILocalVariable(name: "len", scope: !16813, file: !3, line: 3350, type: !1763)
!16821 = !DILocation(line: 3350, column: 9, scope: !16813)
!16822 = !DILocalVariable(name: "dim", scope: !16813, file: !3, line: 3351, type: !2482)
!16823 = !DILocation(line: 3351, column: 12, scope: !16813)
!16824 = !DILocation(line: 3351, column: 47, scope: !16813)
!16825 = !DILocation(line: 3351, column: 52, scope: !16813)
!16826 = !DILocation(line: 3351, column: 58, scope: !16813)
!16827 = !DILocation(line: 3351, column: 18, scope: !16813)
!16828 = !DILocalVariable(name: "size", scope: !16813, file: !3, line: 3352, type: !48)
!16829 = !DILocation(line: 3352, column: 6, scope: !16813)
!16830 = !DILocation(line: 3354, column: 6, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16813, file: !3, line: 3354, column: 6)
!16832 = !DILocation(line: 3354, column: 10, scope: !16831)
!16833 = !DILocation(line: 3354, column: 6, scope: !16813)
!16834 = !DILocation(line: 3355, column: 3, scope: !16831)
!16835 = !DILocation(line: 3357, column: 12, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16813, file: !3, line: 3357, column: 2)
!16837 = !DILocation(line: 3357, column: 19, scope: !16836)
!16838 = !DILocation(line: 3357, column: 7, scope: !16836)
!16839 = !DILocation(line: 3357, column: 24, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16836, file: !3, line: 3357, column: 2)
!16841 = !DILocation(line: 3357, column: 28, scope: !16840)
!16842 = !DILocation(line: 3357, column: 26, scope: !16840)
!16843 = !DILocation(line: 3357, column: 2, scope: !16836)
!16844 = !DILocation(line: 3358, column: 15, scope: !16840)
!16845 = !DILocation(line: 3358, column: 11, scope: !16840)
!16846 = !DILocation(line: 3358, column: 8, scope: !16840)
!16847 = !DILocation(line: 3358, column: 3, scope: !16840)
!16848 = !DILocation(line: 3357, column: 34, scope: !16840)
!16849 = !DILocation(line: 3357, column: 2, scope: !16840)
!16850 = distinct !{!16850, !16843, !16851}
!16851 = !DILocation(line: 3358, column: 16, scope: !16836)
!16852 = !DILocation(line: 3360, column: 9, scope: !16813)
!16853 = !DILocation(line: 3360, column: 2, scope: !16813)
!16854 = !DILocation(line: 3361, column: 1, scope: !16813)
!16855 = distinct !DISubprogram(name: "rna_token_strip_quotes", scope: !3, file: !3, line: 3916, type: !16856, scopeLine: 3917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!16856 = !DISubroutineType(types: !16857)
!16857 = !{!48, !1091}
!16858 = !DILocalVariable(name: "token", arg: 1, scope: !16855, file: !3, line: 3916, type: !1091)
!16859 = !DILocation(line: 3916, column: 41, scope: !16855)
!16860 = !DILocation(line: 3918, column: 6, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16855, file: !3, line: 3918, column: 6)
!16862 = !DILocation(line: 3918, column: 15, scope: !16861)
!16863 = !DILocation(line: 3918, column: 6, scope: !16855)
!16864 = !DILocalVariable(name: "len", scope: !16865, file: !3, line: 3919, type: !48)
!16865 = distinct !DILexicalBlock(scope: !16861, file: !3, line: 3918, column: 23)
!16866 = !DILocation(line: 3919, column: 7, scope: !16865)
!16867 = !DILocation(line: 3919, column: 20, scope: !16865)
!16868 = !DILocation(line: 3919, column: 13, scope: !16865)
!16869 = !DILocation(line: 3920, column: 7, scope: !16870)
!16870 = distinct !DILexicalBlock(scope: !16865, file: !3, line: 3920, column: 7)
!16871 = !DILocation(line: 3920, column: 11, scope: !16870)
!16872 = !DILocation(line: 3920, column: 16, scope: !16870)
!16873 = !DILocation(line: 3920, column: 19, scope: !16870)
!16874 = !DILocation(line: 3920, column: 25, scope: !16870)
!16875 = !DILocation(line: 3920, column: 29, scope: !16870)
!16876 = !DILocation(line: 3920, column: 34, scope: !16870)
!16877 = !DILocation(line: 3920, column: 7, scope: !16865)
!16878 = !DILocation(line: 3922, column: 4, scope: !16879)
!16879 = distinct !DILexicalBlock(scope: !16870, file: !3, line: 3920, column: 42)
!16880 = !DILocation(line: 3922, column: 10, scope: !16879)
!16881 = !DILocation(line: 3922, column: 14, scope: !16879)
!16882 = !DILocation(line: 3922, column: 19, scope: !16879)
!16883 = !DILocation(line: 3923, column: 4, scope: !16879)
!16884 = !DILocation(line: 3925, column: 2, scope: !16865)
!16885 = !DILocation(line: 3926, column: 2, scope: !16855)
!16886 = !DILocation(line: 3927, column: 1, scope: !16855)
!16887 = distinct !DISubprogram(name: "rna_path_parse_collection_key", scope: !3, file: !3, line: 3929, type: !16888, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!16888 = !DISubroutineType(types: !16889)
!16889 = !{!1381, !5808, !1349, !1021, !1349}
!16890 = !DILocalVariable(name: "path", arg: 1, scope: !16887, file: !3, line: 3929, type: !5808)
!16891 = !DILocation(line: 3929, column: 56, scope: !16887)
!16892 = !DILocalVariable(name: "ptr", arg: 2, scope: !16887, file: !3, line: 3929, type: !1349)
!16893 = !DILocation(line: 3929, column: 74, scope: !16887)
!16894 = !DILocalVariable(name: "prop", arg: 3, scope: !16887, file: !3, line: 3929, type: !1021)
!16895 = !DILocation(line: 3929, column: 92, scope: !16887)
!16896 = !DILocalVariable(name: "r_nextptr", arg: 4, scope: !16887, file: !3, line: 3929, type: !1349)
!16897 = !DILocation(line: 3929, column: 110, scope: !16887)
!16898 = !DILocalVariable(name: "fixedbuf", scope: !16887, file: !3, line: 3931, type: !1190)
!16899 = !DILocation(line: 3931, column: 7, scope: !16887)
!16900 = !DILocalVariable(name: "intkey", scope: !16887, file: !3, line: 3932, type: !48)
!16901 = !DILocation(line: 3932, column: 6, scope: !16887)
!16902 = !DILocation(line: 3934, column: 3, scope: !16887)
!16903 = !DILocation(line: 3934, column: 16, scope: !16887)
!16904 = !DILocation(line: 3934, column: 15, scope: !16887)
!16905 = !DILocation(line: 3937, column: 10, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 3937, column: 6)
!16907 = !DILocation(line: 3937, column: 9, scope: !16906)
!16908 = !DILocation(line: 3937, column: 8, scope: !16906)
!16909 = !DILocation(line: 3937, column: 7, scope: !16906)
!16910 = !DILocation(line: 3937, column: 6, scope: !16887)
!16911 = !DILocation(line: 3938, column: 3, scope: !16906)
!16912 = !DILocation(line: 3940, column: 8, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16887, file: !3, line: 3940, column: 6)
!16914 = !DILocation(line: 3940, column: 7, scope: !16913)
!16915 = !DILocation(line: 3940, column: 6, scope: !16913)
!16916 = !DILocation(line: 3940, column: 13, scope: !16913)
!16917 = !DILocation(line: 3940, column: 6, scope: !16887)
!16918 = !DILocalVariable(name: "token", scope: !16919, file: !3, line: 3941, type: !1091)
!16919 = distinct !DILexicalBlock(scope: !16913, file: !3, line: 3940, column: 21)
!16920 = !DILocation(line: 3941, column: 9, scope: !16919)
!16921 = !DILocation(line: 3944, column: 26, scope: !16919)
!16922 = !DILocation(line: 3944, column: 32, scope: !16919)
!16923 = !DILocation(line: 3944, column: 11, scope: !16919)
!16924 = !DILocation(line: 3944, column: 9, scope: !16919)
!16925 = !DILocation(line: 3946, column: 8, scope: !16926)
!16926 = distinct !DILexicalBlock(scope: !16919, file: !3, line: 3946, column: 7)
!16927 = !DILocation(line: 3946, column: 7, scope: !16919)
!16928 = !DILocation(line: 3947, column: 4, scope: !16926)
!16929 = !DILocation(line: 3950, column: 30, scope: !16930)
!16930 = distinct !DILexicalBlock(scope: !16919, file: !3, line: 3950, column: 7)
!16931 = !DILocation(line: 3950, column: 7, scope: !16930)
!16932 = !DILocation(line: 3950, column: 7, scope: !16919)
!16933 = !DILocation(line: 3951, column: 46, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16935, file: !3, line: 3951, column: 8)
!16935 = distinct !DILexicalBlock(scope: !16930, file: !3, line: 3950, column: 38)
!16936 = !DILocation(line: 3951, column: 51, scope: !16934)
!16937 = !DILocation(line: 3951, column: 57, scope: !16934)
!16938 = !DILocation(line: 3951, column: 63, scope: !16934)
!16939 = !DILocation(line: 3951, column: 68, scope: !16934)
!16940 = !DILocation(line: 3951, column: 8, scope: !16934)
!16941 = !DILocation(line: 3951, column: 8, scope: !16935)
!16942 = !DILocation(line: 3953, column: 4, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16934, file: !3, line: 3951, column: 80)
!16944 = !DILocation(line: 3955, column: 5, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16934, file: !3, line: 3954, column: 9)
!16946 = !DILocation(line: 3955, column: 16, scope: !16945)
!16947 = !DILocation(line: 3955, column: 21, scope: !16945)
!16948 = !DILocation(line: 3957, column: 3, scope: !16935)
!16949 = !DILocation(line: 3960, column: 18, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16930, file: !3, line: 3958, column: 8)
!16951 = !DILocation(line: 3960, column: 13, scope: !16950)
!16952 = !DILocation(line: 3960, column: 11, scope: !16950)
!16953 = !DILocation(line: 3961, column: 8, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16950, file: !3, line: 3961, column: 8)
!16955 = !DILocation(line: 3961, column: 15, scope: !16954)
!16956 = !DILocation(line: 3961, column: 20, scope: !16954)
!16957 = !DILocation(line: 3961, column: 24, scope: !16954)
!16958 = !DILocation(line: 3961, column: 33, scope: !16954)
!16959 = !DILocation(line: 3961, column: 40, scope: !16954)
!16960 = !DILocation(line: 3961, column: 43, scope: !16954)
!16961 = !DILocation(line: 3961, column: 52, scope: !16954)
!16962 = !DILocation(line: 3961, column: 8, scope: !16950)
!16963 = !DILocation(line: 3962, column: 5, scope: !16964)
!16964 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 3961, column: 62)
!16965 = !DILocation(line: 3964, column: 43, scope: !16966)
!16966 = distinct !DILexicalBlock(scope: !16950, file: !3, line: 3964, column: 8)
!16967 = !DILocation(line: 3964, column: 48, scope: !16966)
!16968 = !DILocation(line: 3964, column: 54, scope: !16966)
!16969 = !DILocation(line: 3964, column: 62, scope: !16966)
!16970 = !DILocation(line: 3964, column: 8, scope: !16966)
!16971 = !DILocation(line: 3964, column: 8, scope: !16950)
!16972 = !DILocation(line: 3966, column: 4, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16966, file: !3, line: 3964, column: 74)
!16974 = !DILocation(line: 3968, column: 5, scope: !16975)
!16975 = distinct !DILexicalBlock(scope: !16966, file: !3, line: 3967, column: 9)
!16976 = !DILocation(line: 3968, column: 16, scope: !16975)
!16977 = !DILocation(line: 3968, column: 21, scope: !16975)
!16978 = !DILocation(line: 3972, column: 7, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16919, file: !3, line: 3972, column: 7)
!16980 = !DILocation(line: 3972, column: 16, scope: !16979)
!16981 = !DILocation(line: 3972, column: 13, scope: !16979)
!16982 = !DILocation(line: 3972, column: 7, scope: !16919)
!16983 = !DILocation(line: 3973, column: 4, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16979, file: !3, line: 3972, column: 26)
!16985 = !DILocation(line: 3973, column: 14, scope: !16984)
!16986 = !DILocation(line: 3974, column: 3, scope: !16984)
!16987 = !DILocation(line: 3975, column: 2, scope: !16919)
!16988 = !DILocation(line: 3977, column: 40, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 3977, column: 7)
!16990 = distinct !DILexicalBlock(scope: !16913, file: !3, line: 3976, column: 7)
!16991 = !DILocation(line: 3977, column: 45, scope: !16989)
!16992 = !DILocation(line: 3977, column: 51, scope: !16989)
!16993 = !DILocation(line: 3977, column: 7, scope: !16989)
!16994 = !DILocation(line: 3977, column: 7, scope: !16990)
!16995 = !DILocation(line: 3979, column: 3, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16989, file: !3, line: 3977, column: 63)
!16997 = !DILocation(line: 3982, column: 4, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16989, file: !3, line: 3980, column: 8)
!16999 = !DILocation(line: 3982, column: 15, scope: !16998)
!17000 = !DILocation(line: 3982, column: 20, scope: !16998)
!17001 = !DILocation(line: 3986, column: 2, scope: !16887)
!17002 = !DILocation(line: 3987, column: 1, scope: !16887)
!17003 = distinct !DISubprogram(name: "rna_path_parse_array_index", scope: !3, file: !3, line: 3989, type: !17004, scopeLine: 3990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!17004 = !DISubroutineType(types: !17005)
!17005 = !{!1381, !5808, !1349, !1021, !1330}
!17006 = !DILocalVariable(name: "path", arg: 1, scope: !17003, file: !3, line: 3989, type: !5808)
!17007 = !DILocation(line: 3989, column: 53, scope: !17003)
!17008 = !DILocalVariable(name: "ptr", arg: 2, scope: !17003, file: !3, line: 3989, type: !1349)
!17009 = !DILocation(line: 3989, column: 71, scope: !17003)
!17010 = !DILocalVariable(name: "prop", arg: 3, scope: !17003, file: !3, line: 3989, type: !1021)
!17011 = !DILocation(line: 3989, column: 89, scope: !17003)
!17012 = !DILocalVariable(name: "r_index", arg: 4, scope: !17003, file: !3, line: 3989, type: !1330)
!17013 = !DILocation(line: 3989, column: 100, scope: !17003)
!17014 = !DILocalVariable(name: "fixedbuf", scope: !17003, file: !3, line: 3991, type: !1190)
!17015 = !DILocation(line: 3991, column: 7, scope: !17003)
!17016 = !DILocalVariable(name: "index_arr", scope: !17003, file: !3, line: 3992, type: !1763)
!17017 = !DILocation(line: 3992, column: 6, scope: !17003)
!17018 = !DILocalVariable(name: "len", scope: !17003, file: !3, line: 3993, type: !1763)
!17019 = !DILocation(line: 3993, column: 6, scope: !17003)
!17020 = !DILocalVariable(name: "dim", scope: !17003, file: !3, line: 3994, type: !2482)
!17021 = !DILocation(line: 3994, column: 12, scope: !17003)
!17022 = !DILocation(line: 3994, column: 47, scope: !17003)
!17023 = !DILocation(line: 3994, column: 52, scope: !17003)
!17024 = !DILocation(line: 3994, column: 58, scope: !17003)
!17025 = !DILocation(line: 3994, column: 18, scope: !17003)
!17026 = !DILocalVariable(name: "i", scope: !17003, file: !3, line: 3995, type: !48)
!17027 = !DILocation(line: 3995, column: 6, scope: !17003)
!17028 = !DILocation(line: 3997, column: 3, scope: !17003)
!17029 = !DILocation(line: 3997, column: 11, scope: !17003)
!17030 = !DILocation(line: 4000, column: 10, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !17003, file: !3, line: 4000, column: 6)
!17032 = !DILocation(line: 4000, column: 9, scope: !17031)
!17033 = !DILocation(line: 4000, column: 8, scope: !17031)
!17034 = !DILocation(line: 4000, column: 7, scope: !17031)
!17035 = !DILocation(line: 4000, column: 6, scope: !17003)
!17036 = !DILocation(line: 4001, column: 3, scope: !17031)
!17037 = !DILocation(line: 4003, column: 9, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17003, file: !3, line: 4003, column: 2)
!17039 = !DILocation(line: 4003, column: 7, scope: !17038)
!17040 = !DILocation(line: 4003, column: 14, scope: !17041)
!17041 = distinct !DILexicalBlock(scope: !17038, file: !3, line: 4003, column: 2)
!17042 = !DILocation(line: 4003, column: 18, scope: !17041)
!17043 = !DILocation(line: 4003, column: 16, scope: !17041)
!17044 = !DILocation(line: 4003, column: 2, scope: !17038)
!17045 = !DILocalVariable(name: "temp_index", scope: !17046, file: !3, line: 4004, type: !48)
!17046 = distinct !DILexicalBlock(scope: !17041, file: !3, line: 4003, column: 28)
!17047 = !DILocation(line: 4004, column: 7, scope: !17046)
!17048 = !DILocalVariable(name: "token", scope: !17046, file: !3, line: 4005, type: !1091)
!17049 = !DILocation(line: 4005, column: 9, scope: !17046)
!17050 = !DILocation(line: 4008, column: 9, scope: !17051)
!17051 = distinct !DILexicalBlock(scope: !17046, file: !3, line: 4008, column: 7)
!17052 = !DILocation(line: 4008, column: 8, scope: !17051)
!17053 = !DILocation(line: 4008, column: 7, scope: !17051)
!17054 = !DILocation(line: 4008, column: 14, scope: !17051)
!17055 = !DILocation(line: 4008, column: 7, scope: !17046)
!17056 = !DILocation(line: 4009, column: 27, scope: !17057)
!17057 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 4008, column: 22)
!17058 = !DILocation(line: 4009, column: 33, scope: !17057)
!17059 = !DILocation(line: 4009, column: 12, scope: !17057)
!17060 = !DILocation(line: 4009, column: 10, scope: !17057)
!17061 = !DILocation(line: 4011, column: 8, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17057, file: !3, line: 4011, column: 8)
!17063 = !DILocation(line: 4011, column: 14, scope: !17062)
!17064 = !DILocation(line: 4011, column: 8, scope: !17057)
!17065 = !DILocation(line: 4013, column: 5, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17062, file: !3, line: 4011, column: 23)
!17067 = !DILocation(line: 4016, column: 36, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17062, file: !3, line: 4016, column: 13)
!17069 = !DILocation(line: 4016, column: 13, scope: !17068)
!17070 = !DILocation(line: 4016, column: 13, scope: !17062)
!17071 = !DILocation(line: 4017, column: 48, scope: !17072)
!17072 = distinct !DILexicalBlock(scope: !17068, file: !3, line: 4016, column: 44)
!17073 = !DILocation(line: 4017, column: 56, scope: !17072)
!17074 = !DILocation(line: 4017, column: 62, scope: !17072)
!17075 = !DILocation(line: 4017, column: 54, scope: !17072)
!17076 = !DILocation(line: 4017, column: 18, scope: !17072)
!17077 = !DILocation(line: 4017, column: 16, scope: !17072)
!17078 = !DILocation(line: 4018, column: 4, scope: !17072)
!17079 = !DILocation(line: 4021, column: 23, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17068, file: !3, line: 4019, column: 9)
!17081 = !DILocation(line: 4021, column: 18, scope: !17080)
!17082 = !DILocation(line: 4021, column: 16, scope: !17080)
!17083 = !DILocation(line: 4023, column: 9, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17080, file: !3, line: 4023, column: 9)
!17085 = !DILocation(line: 4023, column: 20, scope: !17084)
!17086 = !DILocation(line: 4023, column: 25, scope: !17084)
!17087 = !DILocation(line: 4023, column: 29, scope: !17084)
!17088 = !DILocation(line: 4023, column: 38, scope: !17084)
!17089 = !DILocation(line: 4023, column: 45, scope: !17084)
!17090 = !DILocation(line: 4023, column: 48, scope: !17084)
!17091 = !DILocation(line: 4023, column: 57, scope: !17084)
!17092 = !DILocation(line: 4023, column: 9, scope: !17080)
!17093 = !DILocation(line: 4024, column: 10, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !17095, file: !3, line: 4024, column: 10)
!17095 = distinct !DILexicalBlock(scope: !17084, file: !3, line: 4023, column: 67)
!17096 = !DILocation(line: 4024, column: 19, scope: !17094)
!17097 = !DILocation(line: 4024, column: 16, scope: !17094)
!17098 = !DILocation(line: 4024, column: 10, scope: !17095)
!17099 = !DILocation(line: 4025, column: 7, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17094, file: !3, line: 4024, column: 29)
!17101 = !DILocation(line: 4025, column: 17, scope: !17100)
!17102 = !DILocation(line: 4026, column: 6, scope: !17100)
!17103 = !DILocation(line: 4028, column: 6, scope: !17095)
!17104 = !DILocation(line: 4031, column: 3, scope: !17057)
!17105 = !DILocation(line: 4032, column: 12, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 4032, column: 12)
!17107 = !DILocation(line: 4032, column: 16, scope: !17106)
!17108 = !DILocation(line: 4032, column: 12, scope: !17051)
!17109 = !DILocation(line: 4034, column: 27, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17106, file: !3, line: 4032, column: 22)
!17111 = !DILocation(line: 4034, column: 33, scope: !17110)
!17112 = !DILocation(line: 4034, column: 12, scope: !17110)
!17113 = !DILocation(line: 4034, column: 10, scope: !17110)
!17114 = !DILocation(line: 4035, column: 8, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17110, file: !3, line: 4035, column: 8)
!17116 = !DILocation(line: 4035, column: 14, scope: !17115)
!17117 = !DILocation(line: 4035, column: 8, scope: !17110)
!17118 = !DILocation(line: 4037, column: 5, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17115, file: !3, line: 4035, column: 23)
!17120 = !DILocation(line: 4039, column: 47, scope: !17110)
!17121 = !DILocation(line: 4039, column: 54, scope: !17110)
!17122 = !DILocation(line: 4039, column: 53, scope: !17110)
!17123 = !DILocation(line: 4039, column: 17, scope: !17110)
!17124 = !DILocation(line: 4039, column: 15, scope: !17110)
!17125 = !DILocation(line: 4040, column: 3, scope: !17110)
!17126 = !DILocation(line: 4043, column: 12, scope: !17127)
!17127 = distinct !DILexicalBlock(scope: !17106, file: !3, line: 4041, column: 8)
!17128 = !DILocation(line: 4043, column: 10, scope: !17127)
!17129 = !DILocation(line: 4046, column: 7, scope: !17130)
!17130 = distinct !DILexicalBlock(scope: !17046, file: !3, line: 4046, column: 7)
!17131 = !DILocation(line: 4046, column: 16, scope: !17130)
!17132 = !DILocation(line: 4046, column: 13, scope: !17130)
!17133 = !DILocation(line: 4046, column: 7, scope: !17046)
!17134 = !DILocation(line: 4047, column: 4, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17130, file: !3, line: 4046, column: 26)
!17136 = !DILocation(line: 4047, column: 14, scope: !17135)
!17137 = !DILocation(line: 4048, column: 3, scope: !17135)
!17138 = !DILocation(line: 4051, column: 7, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17046, file: !3, line: 4051, column: 7)
!17140 = !DILocation(line: 4051, column: 18, scope: !17139)
!17141 = !DILocation(line: 4051, column: 22, scope: !17139)
!17142 = !DILocation(line: 4051, column: 25, scope: !17139)
!17143 = !DILocation(line: 4051, column: 43, scope: !17139)
!17144 = !DILocation(line: 4051, column: 39, scope: !17139)
!17145 = !DILocation(line: 4051, column: 36, scope: !17139)
!17146 = !DILocation(line: 4051, column: 7, scope: !17046)
!17147 = !DILocation(line: 4052, column: 4, scope: !17139)
!17148 = !DILocation(line: 4054, column: 18, scope: !17046)
!17149 = !DILocation(line: 4054, column: 13, scope: !17046)
!17150 = !DILocation(line: 4054, column: 3, scope: !17046)
!17151 = !DILocation(line: 4054, column: 16, scope: !17046)
!17152 = !DILocation(line: 4056, column: 2, scope: !17046)
!17153 = !DILocation(line: 4003, column: 24, scope: !17041)
!17154 = !DILocation(line: 4003, column: 2, scope: !17041)
!17155 = distinct !{!17155, !17044, !17156}
!17156 = !DILocation(line: 4056, column: 2, scope: !17038)
!17157 = !DILocation(line: 4059, column: 8, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17003, file: !3, line: 4059, column: 6)
!17159 = !DILocation(line: 4059, column: 7, scope: !17158)
!17160 = !DILocation(line: 4059, column: 6, scope: !17158)
!17161 = !DILocation(line: 4059, column: 6, scope: !17003)
!17162 = !DILocation(line: 4060, column: 3, scope: !17158)
!17163 = !DILocalVariable(name: "totdim", scope: !17164, file: !3, line: 4064, type: !48)
!17164 = distinct !DILexicalBlock(scope: !17003, file: !3, line: 4063, column: 2)
!17165 = !DILocation(line: 4064, column: 7, scope: !17164)
!17166 = !DILocalVariable(name: "flat_index", scope: !17164, file: !3, line: 4065, type: !48)
!17167 = !DILocation(line: 4065, column: 7, scope: !17164)
!17168 = !DILocation(line: 4067, column: 12, scope: !17169)
!17169 = distinct !DILexicalBlock(scope: !17164, file: !3, line: 4067, column: 3)
!17170 = !DILocation(line: 4067, column: 16, scope: !17169)
!17171 = !DILocation(line: 4067, column: 10, scope: !17169)
!17172 = !DILocation(line: 4067, column: 8, scope: !17169)
!17173 = !DILocation(line: 4067, column: 21, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17169, file: !3, line: 4067, column: 3)
!17175 = !DILocation(line: 4067, column: 23, scope: !17174)
!17176 = !DILocation(line: 4067, column: 3, scope: !17169)
!17177 = !DILocation(line: 4068, column: 28, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !17174, file: !3, line: 4067, column: 34)
!17179 = !DILocation(line: 4068, column: 18, scope: !17178)
!17180 = !DILocation(line: 4068, column: 33, scope: !17178)
!17181 = !DILocation(line: 4068, column: 31, scope: !17178)
!17182 = !DILocation(line: 4068, column: 15, scope: !17178)
!17183 = !DILocation(line: 4069, column: 18, scope: !17178)
!17184 = !DILocation(line: 4069, column: 14, scope: !17178)
!17185 = !DILocation(line: 4069, column: 11, scope: !17178)
!17186 = !DILocation(line: 4070, column: 3, scope: !17178)
!17187 = !DILocation(line: 4067, column: 30, scope: !17174)
!17188 = !DILocation(line: 4067, column: 3, scope: !17174)
!17189 = distinct !{!17189, !17176, !17190}
!17190 = !DILocation(line: 4070, column: 3, scope: !17169)
!17191 = !DILocation(line: 4072, column: 14, scope: !17164)
!17192 = !DILocation(line: 4072, column: 4, scope: !17164)
!17193 = !DILocation(line: 4072, column: 12, scope: !17164)
!17194 = !DILocation(line: 4074, column: 2, scope: !17003)
!17195 = !DILocation(line: 4075, column: 1, scope: !17003)
!17196 = distinct !DISubprogram(name: "rna_idp_path", scope: !3, file: !3, line: 4429, type: !17197, scopeLine: 4430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!17197 = !DISubroutineType(types: !17198)
!17198 = !{!1091, !1349, !987, !987, !17199}
!17199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17200, size: 64)
!17200 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDP_Chain", file: !3, line: 4384, baseType: !17201)
!17201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDP_Chain", file: !3, line: 4378, size: 192, elements: !17202)
!17202 = !{!17203, !17205, !17206}
!17203 = !DIDerivedType(tag: DW_TAG_member, name: "up", scope: !17201, file: !3, line: 4379, baseType: !17204, size: 64)
!17204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17201, size: 64)
!17205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17201, file: !3, line: 4381, baseType: !1031, size: 64, offset: 64)
!17206 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !17201, file: !3, line: 4382, baseType: !48, size: 32, offset: 128)
!17207 = !DILocalVariable(name: "ptr", arg: 1, scope: !17196, file: !3, line: 4429, type: !1349)
!17208 = !DILocation(line: 4429, column: 39, scope: !17196)
!17209 = !DILocalVariable(name: "haystack", arg: 2, scope: !17196, file: !3, line: 4429, type: !987)
!17210 = !DILocation(line: 4429, column: 56, scope: !17196)
!17211 = !DILocalVariable(name: "needle", arg: 3, scope: !17196, file: !3, line: 4429, type: !987)
!17212 = !DILocation(line: 4429, column: 78, scope: !17196)
!17213 = !DILocalVariable(name: "parent_link", arg: 4, scope: !17196, file: !3, line: 4429, type: !17199)
!17214 = !DILocation(line: 4429, column: 97, scope: !17196)
!17215 = !DILocalVariable(name: "path", scope: !17196, file: !3, line: 4431, type: !1091)
!17216 = !DILocation(line: 4431, column: 8, scope: !17196)
!17217 = !DILocalVariable(name: "link", scope: !17196, file: !3, line: 4432, type: !17200)
!17218 = !DILocation(line: 4432, column: 12, scope: !17196)
!17219 = !DILocalVariable(name: "iter", scope: !17196, file: !3, line: 4434, type: !987)
!17220 = !DILocation(line: 4434, column: 14, scope: !17196)
!17221 = !DILocalVariable(name: "i", scope: !17196, file: !3, line: 4435, type: !48)
!17222 = !DILocation(line: 4435, column: 6, scope: !17196)
!17223 = !DILocation(line: 4439, column: 12, scope: !17196)
!17224 = !DILocation(line: 4439, column: 7, scope: !17196)
!17225 = !DILocation(line: 4439, column: 10, scope: !17196)
!17226 = !DILocation(line: 4442, column: 7, scope: !17196)
!17227 = !DILocation(line: 4442, column: 12, scope: !17196)
!17228 = !DILocation(line: 4443, column: 7, scope: !17196)
!17229 = !DILocation(line: 4443, column: 13, scope: !17196)
!17230 = !DILocation(line: 4445, column: 9, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17196, file: !3, line: 4445, column: 2)
!17232 = !DILocation(line: 4445, column: 21, scope: !17231)
!17233 = !DILocation(line: 4445, column: 31, scope: !17231)
!17234 = !DILocation(line: 4445, column: 36, scope: !17231)
!17235 = !DILocation(line: 4445, column: 42, scope: !17231)
!17236 = !DILocation(line: 4445, column: 19, scope: !17231)
!17237 = !DILocation(line: 4445, column: 7, scope: !17231)
!17238 = !DILocation(line: 4445, column: 49, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17231, file: !3, line: 4445, column: 2)
!17240 = !DILocation(line: 4445, column: 2, scope: !17231)
!17241 = !DILocation(line: 4446, column: 7, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17243, file: !3, line: 4446, column: 7)
!17243 = distinct !DILexicalBlock(scope: !17239, file: !3, line: 4445, column: 79)
!17244 = !DILocation(line: 4446, column: 17, scope: !17242)
!17245 = !DILocation(line: 4446, column: 14, scope: !17242)
!17246 = !DILocation(line: 4446, column: 7, scope: !17243)
!17247 = !DILocation(line: 4447, column: 16, scope: !17248)
!17248 = distinct !DILexicalBlock(scope: !17242, file: !3, line: 4446, column: 23)
!17249 = !DILocation(line: 4447, column: 22, scope: !17248)
!17250 = !DILocation(line: 4447, column: 9, scope: !17248)
!17251 = !DILocation(line: 4447, column: 14, scope: !17248)
!17252 = !DILocation(line: 4448, column: 9, scope: !17248)
!17253 = !DILocation(line: 4448, column: 15, scope: !17248)
!17254 = !DILocation(line: 4449, column: 11, scope: !17248)
!17255 = !DILocation(line: 4449, column: 9, scope: !17248)
!17256 = !DILocation(line: 4450, column: 4, scope: !17248)
!17257 = !DILocation(line: 4453, column: 8, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17259, file: !3, line: 4453, column: 8)
!17259 = distinct !DILexicalBlock(scope: !17242, file: !3, line: 4452, column: 8)
!17260 = !DILocation(line: 4453, column: 14, scope: !17258)
!17261 = !DILocation(line: 4453, column: 19, scope: !17258)
!17262 = !DILocation(line: 4453, column: 8, scope: !17259)
!17263 = !DILocalVariable(name: "prop", scope: !17264, file: !3, line: 4455, type: !1021)
!17264 = distinct !DILexicalBlock(scope: !17258, file: !3, line: 4453, column: 33)
!17265 = !DILocation(line: 4455, column: 18, scope: !17264)
!17266 = !DILocation(line: 4455, column: 50, scope: !17264)
!17267 = !DILocation(line: 4455, column: 55, scope: !17264)
!17268 = !DILocation(line: 4455, column: 61, scope: !17264)
!17269 = !DILocation(line: 4455, column: 25, scope: !17264)
!17270 = !DILocation(line: 4456, column: 9, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17264, file: !3, line: 4456, column: 9)
!17272 = !DILocation(line: 4456, column: 14, scope: !17271)
!17273 = !DILocation(line: 4456, column: 17, scope: !17271)
!17274 = !DILocation(line: 4456, column: 23, scope: !17271)
!17275 = !DILocation(line: 4456, column: 28, scope: !17271)
!17276 = !DILocation(line: 4456, column: 9, scope: !17264)
!17277 = !DILocalVariable(name: "child_ptr", scope: !17278, file: !3, line: 4457, type: !1350)
!17278 = distinct !DILexicalBlock(scope: !17271, file: !3, line: 4456, column: 45)
!17279 = !DILocation(line: 4457, column: 17, scope: !17278)
!17280 = !DILocation(line: 4457, column: 54, scope: !17278)
!17281 = !DILocation(line: 4457, column: 59, scope: !17278)
!17282 = !DILocation(line: 4457, column: 29, scope: !17278)
!17283 = !DILocation(line: 4458, column: 18, scope: !17278)
!17284 = !DILocation(line: 4458, column: 24, scope: !17278)
!17285 = !DILocation(line: 4458, column: 11, scope: !17278)
!17286 = !DILocation(line: 4458, column: 16, scope: !17278)
!17287 = !DILocation(line: 4459, column: 11, scope: !17278)
!17288 = !DILocation(line: 4459, column: 17, scope: !17278)
!17289 = !DILocation(line: 4460, column: 43, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17278, file: !3, line: 4460, column: 10)
!17291 = !DILocation(line: 4460, column: 49, scope: !17290)
!17292 = !DILocation(line: 4460, column: 18, scope: !17290)
!17293 = !DILocation(line: 4460, column: 16, scope: !17290)
!17294 = !DILocation(line: 4460, column: 10, scope: !17278)
!17295 = !DILocation(line: 4461, column: 7, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17290, file: !3, line: 4460, column: 66)
!17297 = !DILocation(line: 4463, column: 5, scope: !17278)
!17298 = !DILocation(line: 4464, column: 4, scope: !17264)
!17299 = !DILocation(line: 4465, column: 13, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17258, file: !3, line: 4465, column: 13)
!17301 = !DILocation(line: 4465, column: 19, scope: !17300)
!17302 = !DILocation(line: 4465, column: 24, scope: !17300)
!17303 = !DILocation(line: 4465, column: 13, scope: !17258)
!17304 = !DILocalVariable(name: "prop", scope: !17305, file: !3, line: 4466, type: !1021)
!17305 = distinct !DILexicalBlock(scope: !17300, file: !3, line: 4465, column: 41)
!17306 = !DILocation(line: 4466, column: 18, scope: !17305)
!17307 = !DILocation(line: 4466, column: 50, scope: !17305)
!17308 = !DILocation(line: 4466, column: 55, scope: !17305)
!17309 = !DILocation(line: 4466, column: 61, scope: !17305)
!17310 = !DILocation(line: 4466, column: 25, scope: !17305)
!17311 = !DILocation(line: 4467, column: 9, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17305, file: !3, line: 4467, column: 9)
!17313 = !DILocation(line: 4467, column: 14, scope: !17312)
!17314 = !DILocation(line: 4467, column: 17, scope: !17312)
!17315 = !DILocation(line: 4467, column: 23, scope: !17312)
!17316 = !DILocation(line: 4467, column: 28, scope: !17312)
!17317 = !DILocation(line: 4467, column: 9, scope: !17305)
!17318 = !DILocalVariable(name: "array", scope: !17319, file: !3, line: 4468, type: !987)
!17319 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 4467, column: 48)
!17320 = !DILocation(line: 4468, column: 18, scope: !17319)
!17321 = !DILocation(line: 4468, column: 26, scope: !17319)
!17322 = !DILocation(line: 4469, column: 10, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17319, file: !3, line: 4469, column: 10)
!17324 = !DILocation(line: 4469, column: 20, scope: !17323)
!17325 = !DILocation(line: 4469, column: 17, scope: !17323)
!17326 = !DILocation(line: 4469, column: 26, scope: !17323)
!17327 = !DILocation(line: 4469, column: 29, scope: !17323)
!17328 = !DILocation(line: 4469, column: 39, scope: !17323)
!17329 = !DILocation(line: 4469, column: 45, scope: !17323)
!17330 = !DILocation(line: 4469, column: 51, scope: !17323)
!17331 = !DILocation(line: 4469, column: 49, scope: !17323)
!17332 = !DILocation(line: 4469, column: 36, scope: !17323)
!17333 = !DILocation(line: 4469, column: 10, scope: !17319)
!17334 = !DILocation(line: 4470, column: 19, scope: !17335)
!17335 = distinct !DILexicalBlock(scope: !17323, file: !3, line: 4469, column: 59)
!17336 = !DILocation(line: 4470, column: 25, scope: !17335)
!17337 = !DILocation(line: 4470, column: 12, scope: !17335)
!17338 = !DILocation(line: 4470, column: 17, scope: !17335)
!17339 = !DILocation(line: 4471, column: 26, scope: !17335)
!17340 = !DILocation(line: 4471, column: 35, scope: !17335)
!17341 = !DILocation(line: 4471, column: 33, scope: !17335)
!17342 = !DILocation(line: 4471, column: 20, scope: !17335)
!17343 = !DILocation(line: 4471, column: 12, scope: !17335)
!17344 = !DILocation(line: 4471, column: 18, scope: !17335)
!17345 = !DILocation(line: 4472, column: 14, scope: !17335)
!17346 = !DILocation(line: 4472, column: 12, scope: !17335)
!17347 = !DILocation(line: 4473, column: 7, scope: !17335)
!17348 = !DILocalVariable(name: "i", scope: !17349, file: !3, line: 4476, type: !48)
!17349 = distinct !DILexicalBlock(scope: !17323, file: !3, line: 4475, column: 11)
!17350 = !DILocation(line: 4476, column: 11, scope: !17349)
!17351 = !DILocation(line: 4477, column: 19, scope: !17349)
!17352 = !DILocation(line: 4477, column: 25, scope: !17349)
!17353 = !DILocation(line: 4477, column: 12, scope: !17349)
!17354 = !DILocation(line: 4477, column: 17, scope: !17349)
!17355 = !DILocation(line: 4478, column: 14, scope: !17356)
!17356 = distinct !DILexicalBlock(scope: !17349, file: !3, line: 4478, column: 7)
!17357 = !DILocation(line: 4478, column: 12, scope: !17356)
!17358 = !DILocation(line: 4478, column: 19, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17356, file: !3, line: 4478, column: 7)
!17360 = !DILocation(line: 4478, column: 23, scope: !17359)
!17361 = !DILocation(line: 4478, column: 29, scope: !17359)
!17362 = !DILocation(line: 4478, column: 21, scope: !17359)
!17363 = !DILocation(line: 4478, column: 7, scope: !17356)
!17364 = !DILocalVariable(name: "child_ptr", scope: !17365, file: !3, line: 4479, type: !1350)
!17365 = distinct !DILexicalBlock(scope: !17359, file: !3, line: 4478, column: 48)
!17366 = !DILocation(line: 4479, column: 19, scope: !17365)
!17367 = !DILocation(line: 4480, column: 47, scope: !17368)
!17368 = distinct !DILexicalBlock(scope: !17365, file: !3, line: 4480, column: 12)
!17369 = !DILocation(line: 4480, column: 52, scope: !17368)
!17370 = !DILocation(line: 4480, column: 58, scope: !17368)
!17371 = !DILocation(line: 4480, column: 12, scope: !17368)
!17372 = !DILocation(line: 4480, column: 12, scope: !17365)
!17373 = !DILocation(line: 4481, column: 22, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17368, file: !3, line: 4480, column: 74)
!17375 = !DILocation(line: 4481, column: 14, scope: !17374)
!17376 = !DILocation(line: 4481, column: 20, scope: !17374)
!17377 = !DILocation(line: 4482, column: 46, scope: !17378)
!17378 = distinct !DILexicalBlock(scope: !17374, file: !3, line: 4482, column: 13)
!17379 = !DILocation(line: 4482, column: 53, scope: !17378)
!17380 = !DILocation(line: 4482, column: 21, scope: !17378)
!17381 = !DILocation(line: 4482, column: 19, scope: !17378)
!17382 = !DILocation(line: 4482, column: 13, scope: !17374)
!17383 = !DILocation(line: 4483, column: 10, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17378, file: !3, line: 4482, column: 70)
!17385 = !DILocation(line: 4485, column: 8, scope: !17374)
!17386 = !DILocation(line: 4486, column: 7, scope: !17365)
!17387 = !DILocation(line: 4478, column: 35, scope: !17359)
!17388 = !DILocation(line: 4478, column: 44, scope: !17359)
!17389 = !DILocation(line: 4478, column: 7, scope: !17359)
!17390 = distinct !{!17390, !17363, !17391}
!17391 = !DILocation(line: 4486, column: 7, scope: !17356)
!17392 = !DILocation(line: 4487, column: 11, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17349, file: !3, line: 4487, column: 11)
!17394 = !DILocation(line: 4487, column: 11, scope: !17349)
!17395 = !DILocation(line: 4488, column: 8, scope: !17393)
!17396 = !DILocation(line: 4490, column: 5, scope: !17319)
!17397 = !DILocation(line: 4491, column: 4, scope: !17305)
!17398 = !DILocation(line: 4493, column: 2, scope: !17243)
!17399 = !DILocation(line: 4445, column: 62, scope: !17239)
!17400 = !DILocation(line: 4445, column: 68, scope: !17239)
!17401 = !DILocation(line: 4445, column: 60, scope: !17239)
!17402 = !DILocation(line: 4445, column: 75, scope: !17239)
!17403 = !DILocation(line: 4445, column: 2, scope: !17239)
!17404 = distinct !{!17404, !17240, !17405}
!17405 = !DILocation(line: 4493, column: 2, scope: !17231)
!17406 = !DILocation(line: 4495, column: 9, scope: !17196)
!17407 = !DILocation(line: 4495, column: 2, scope: !17196)
!17408 = distinct !DISubprogram(name: "rna_idp_path_create", scope: !3, file: !3, line: 4386, type: !17409, scopeLine: 4387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2825)
!17409 = !DISubroutineType(types: !17410)
!17410 = !{!1091, !17199}
!17411 = !DILocalVariable(name: "child_link", arg: 1, scope: !17408, file: !3, line: 4386, type: !17199)
!17412 = !DILocation(line: 4386, column: 45, scope: !17408)
!17413 = !DILocalVariable(name: "dynstr", scope: !17408, file: !3, line: 4388, type: !11421)
!17414 = !DILocation(line: 4388, column: 10, scope: !17408)
!17415 = !DILocation(line: 4388, column: 19, scope: !17408)
!17416 = !DILocalVariable(name: "path", scope: !17408, file: !3, line: 4389, type: !1091)
!17417 = !DILocation(line: 4389, column: 8, scope: !17408)
!17418 = !DILocalVariable(name: "is_first", scope: !17408, file: !3, line: 4390, type: !1381)
!17419 = !DILocation(line: 4390, column: 7, scope: !17408)
!17420 = !DILocalVariable(name: "tot", scope: !17408, file: !3, line: 4392, type: !48)
!17421 = !DILocation(line: 4392, column: 6, scope: !17408)
!17422 = !DILocalVariable(name: "link", scope: !17408, file: !3, line: 4393, type: !17199)
!17423 = !DILocation(line: 4393, column: 13, scope: !17408)
!17424 = !DILocation(line: 4393, column: 20, scope: !17408)
!17425 = !DILocalVariable(name: "link_prev", scope: !17408, file: !3, line: 4396, type: !17199)
!17426 = !DILocation(line: 4396, column: 13, scope: !17408)
!17427 = !DILocation(line: 4397, column: 12, scope: !17408)
!17428 = !DILocation(line: 4398, column: 2, scope: !17408)
!17429 = !DILocation(line: 4398, column: 9, scope: !17408)
!17430 = !DILocalVariable(name: "link_next", scope: !17431, file: !3, line: 4399, type: !17199)
!17431 = distinct !DILexicalBlock(scope: !17408, file: !3, line: 4398, column: 15)
!17432 = !DILocation(line: 4399, column: 14, scope: !17431)
!17433 = !DILocation(line: 4399, column: 26, scope: !17431)
!17434 = !DILocation(line: 4399, column: 32, scope: !17431)
!17435 = !DILocation(line: 4400, column: 14, scope: !17431)
!17436 = !DILocation(line: 4400, column: 3, scope: !17431)
!17437 = !DILocation(line: 4400, column: 9, scope: !17431)
!17438 = !DILocation(line: 4400, column: 12, scope: !17431)
!17439 = !DILocation(line: 4401, column: 15, scope: !17431)
!17440 = !DILocation(line: 4401, column: 13, scope: !17431)
!17441 = !DILocation(line: 4402, column: 10, scope: !17431)
!17442 = !DILocation(line: 4402, column: 8, scope: !17431)
!17443 = !DILocation(line: 4403, column: 6, scope: !17431)
!17444 = distinct !{!17444, !17428, !17445}
!17445 = !DILocation(line: 4404, column: 2, scope: !17408)
!17446 = !DILocation(line: 4406, column: 14, scope: !17447)
!17447 = distinct !DILexicalBlock(scope: !17408, file: !3, line: 4406, column: 2)
!17448 = !DILocation(line: 4406, column: 12, scope: !17447)
!17449 = !DILocation(line: 4406, column: 7, scope: !17447)
!17450 = !DILocation(line: 4406, column: 25, scope: !17451)
!17451 = distinct !DILexicalBlock(scope: !17447, file: !3, line: 4406, column: 2)
!17452 = !DILocation(line: 4406, column: 2, scope: !17447)
!17453 = !DILocation(line: 4408, column: 7, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17455, file: !3, line: 4408, column: 7)
!17455 = distinct !DILexicalBlock(scope: !17451, file: !3, line: 4406, column: 48)
!17456 = !DILocation(line: 4408, column: 13, scope: !17454)
!17457 = !DILocation(line: 4408, column: 19, scope: !17454)
!17458 = !DILocation(line: 4408, column: 7, scope: !17455)
!17459 = !DILocation(line: 4409, column: 23, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17454, file: !3, line: 4408, column: 25)
!17461 = !DILocation(line: 4409, column: 31, scope: !17460)
!17462 = !DILocation(line: 4409, column: 64, scope: !17460)
!17463 = !DILocation(line: 4409, column: 70, scope: !17460)
!17464 = !DILocation(line: 4409, column: 76, scope: !17460)
!17465 = !DILocation(line: 4409, column: 82, scope: !17460)
!17466 = !DILocation(line: 4409, column: 4, scope: !17460)
!17467 = !DILocation(line: 4410, column: 3, scope: !17460)
!17468 = !DILocation(line: 4412, column: 23, scope: !17469)
!17469 = distinct !DILexicalBlock(scope: !17454, file: !3, line: 4411, column: 8)
!17470 = !DILocation(line: 4412, column: 31, scope: !17469)
!17471 = !DILocation(line: 4412, column: 56, scope: !17469)
!17472 = !DILocation(line: 4412, column: 62, scope: !17469)
!17473 = !DILocation(line: 4412, column: 4, scope: !17469)
!17474 = !DILocation(line: 4415, column: 12, scope: !17455)
!17475 = !DILocation(line: 4416, column: 2, scope: !17455)
!17476 = !DILocation(line: 4406, column: 38, scope: !17451)
!17477 = !DILocation(line: 4406, column: 44, scope: !17451)
!17478 = !DILocation(line: 4406, column: 36, scope: !17451)
!17479 = !DILocation(line: 4406, column: 2, scope: !17451)
!17480 = distinct !{!17480, !17452, !17481}
!17481 = !DILocation(line: 4416, column: 2, scope: !17447)
!17482 = !DILocation(line: 4418, column: 32, scope: !17408)
!17483 = !DILocation(line: 4418, column: 9, scope: !17408)
!17484 = !DILocation(line: 4418, column: 7, scope: !17408)
!17485 = !DILocation(line: 4419, column: 18, scope: !17408)
!17486 = !DILocation(line: 4419, column: 2, scope: !17408)
!17487 = !DILocation(line: 4421, column: 7, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17408, file: !3, line: 4421, column: 6)
!17489 = !DILocation(line: 4421, column: 6, scope: !17488)
!17490 = !DILocation(line: 4421, column: 12, scope: !17488)
!17491 = !DILocation(line: 4421, column: 6, scope: !17408)
!17492 = !DILocation(line: 4422, column: 3, scope: !17493)
!17493 = distinct !DILexicalBlock(scope: !17488, file: !3, line: 4421, column: 21)
!17494 = !DILocation(line: 4422, column: 13, scope: !17493)
!17495 = !DILocation(line: 4423, column: 8, scope: !17493)
!17496 = !DILocation(line: 4424, column: 2, scope: !17493)
!17497 = !DILocation(line: 4426, column: 9, scope: !17408)
!17498 = !DILocation(line: 4426, column: 2, scope: !17408)
