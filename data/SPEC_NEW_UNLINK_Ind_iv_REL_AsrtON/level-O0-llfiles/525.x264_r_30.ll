; ModuleID = 'x264_src/output/flv.c'
source_filename = "x264_src/output/flv.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cli_output_t = type { i32 (i8*, i8**)*, i32 (i8*, %struct.x264_param_t*)*, i32 (i8*, %struct.x264_nal_t*)*, i32 (i8*, i8*, i32, %struct.x264_picture_t*)*, i32 (i8*, i64, i64)* }
%struct.x264_param_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, [16 x i8], [16 x i8], [16 x i8], [16 x i8], [64 x i8], [64 x i8], void (i8*, i32, i8*, %struct.__va_list_tag*)*, i8*, i32, i32, i8*, %struct.anon.0, %struct.anon.1, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, void (i8*)* }
%struct.anon = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.anon.0 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, i32, [2 x i32], i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, float, float, float, i32, i32, float, float, float, i32, float, i32, i32, i32, i8*, i32, i8*, float, float, float, %struct.x264_zone_t*, i32, i8* }
%struct.x264_zone_t = type { i32, i32, i32, i32, float, %struct.x264_param_t* }
%struct.x264_nal_t = type { i32, i32, i32, i8* }
%struct.x264_picture_t = type { i32, i32, i32, i32, i64, i64, %struct.x264_param_t*, %struct.x264_image_t, %struct.x264_hrd_t, i8* }
%struct.x264_image_t = type { i32, i32, [4 x i32], [4 x i8*] }
%struct.x264_hrd_t = type { double, double, double, double }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.flv_hnd_t = type { %struct.flv_buffer*, i8*, i32, i64, i64, i64, i64, i64, i64, i64, i8, i64, i64, i32, i32, i32, i32 }
%struct.flv_buffer = type { i8*, i32, i32, %struct._IO_FILE*, i64 }

@flv_output = dso_local constant %struct.cli_output_t { i32 (i8*, i8**)* @open_file, i32 (i8*, %struct.x264_param_t*)* @set_param, i32 (i8*, %struct.x264_nal_t*)* @write_headers, i32 (i8*, i8*, i32, %struct.x264_picture_t*)* @write_frame, i32 (i8*, i64, i64)* @close_file }, align 8, !dbg !0
@.str = private unnamed_addr constant [4 x i8] c"FLV\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"onMetaData\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"framerate\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"videocodecid\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"duration\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"filesize\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"videodatarate\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.10 = private unnamed_addr constant [117 x i8] c"flv [warning]: duplicate DTS %ld generated by rounding\0A               current internal decoding framerate: %.6f fps\0A\00", align 1
@.str.11 = private unnamed_addr constant [120 x i8] c"flv [warning]: duplicate CTS %ld generated by rounding\0A               current internal composition framerate: %.6f fps\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define internal i32 @open_file(i8* %psz_filename, i8** %p_handle) #0 !dbg !296 {
entry:
  %retval = alloca i32, align 4
  %psz_filename.addr = alloca i8*, align 8
  %p_handle.addr = alloca i8**, align 8
  %p_flv = alloca %struct.flv_hnd_t*, align 8
  store i8* %psz_filename, i8** %psz_filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psz_filename.addr, metadata !298, metadata !DIExpression()), !dbg !299
  store i8** %p_handle, i8*** %p_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %p_handle.addr, metadata !300, metadata !DIExpression()), !dbg !301
  call void @llvm.dbg.declare(metadata %struct.flv_hnd_t** %p_flv, metadata !302, metadata !DIExpression()), !dbg !389
  %call = call noalias i8* @malloc(i64 120) #5, !dbg !390
  %0 = bitcast i8* %call to %struct.flv_hnd_t*, !dbg !390
  store %struct.flv_hnd_t* %0, %struct.flv_hnd_t** %p_flv, align 8, !dbg !389
  %1 = load i8**, i8*** %p_handle.addr, align 8, !dbg !391
  store i8* null, i8** %1, align 8, !dbg !392
  %2 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !393
  %tobool = icmp ne %struct.flv_hnd_t* %2, null, !dbg !393
  br i1 %tobool, label %if.end, label %if.then, !dbg !395

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !396
  br label %return, !dbg !396

if.end:                                           ; preds = %entry
  %3 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !397
  %4 = bitcast %struct.flv_hnd_t* %3 to i8*, !dbg !398
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 120, i1 false), !dbg !398
  %5 = load i8*, i8** %psz_filename.addr, align 8, !dbg !399
  %call1 = call %struct.flv_buffer* @flv_create_writer(i8* %5), !dbg !400
  %6 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !401
  %c = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %6, i32 0, i32 0, !dbg !402
  store %struct.flv_buffer* %call1, %struct.flv_buffer** %c, align 8, !dbg !403
  %7 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !404
  %c2 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %7, i32 0, i32 0, !dbg !406
  %8 = load %struct.flv_buffer*, %struct.flv_buffer** %c2, align 8, !dbg !406
  %tobool3 = icmp ne %struct.flv_buffer* %8, null, !dbg !404
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !407

if.then4:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !408
  br label %return, !dbg !408

if.end5:                                          ; preds = %if.end
  br label %do.body, !dbg !409

do.body:                                          ; preds = %if.end5
  %9 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !410
  %c6 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %9, i32 0, i32 0, !dbg !410
  %10 = load %struct.flv_buffer*, %struct.flv_buffer** %c6, align 8, !dbg !410
  %call7 = call i32 @write_header(%struct.flv_buffer* %10), !dbg !410
  %cmp = icmp slt i32 %call7, 0, !dbg !410
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !413

if.then8:                                         ; preds = %do.body
  store i32 -1, i32* %retval, align 4, !dbg !410
  br label %return, !dbg !410

if.end9:                                          ; preds = %do.body
  br label %do.end, !dbg !413

do.end:                                           ; preds = %if.end9
  %11 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !414
  %12 = bitcast %struct.flv_hnd_t* %11 to i8*, !dbg !414
  %13 = load i8**, i8*** %p_handle.addr, align 8, !dbg !415
  store i8* %12, i8** %13, align 8, !dbg !416
  store i32 0, i32* %retval, align 4, !dbg !417
  br label %return, !dbg !417

return:                                           ; preds = %do.end, %if.then8, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !418
  ret i32 %14, !dbg !418
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @set_param(i8* %handle, %struct.x264_param_t* %p_param) #0 !dbg !419 {
entry:
  %handle.addr = alloca i8*, align 8
  %p_param.addr = alloca %struct.x264_param_t*, align 8
  %p_flv = alloca %struct.flv_hnd_t*, align 8
  %c = alloca %struct.flv_buffer*, align 8
  %start = alloca i32, align 4
  %length = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !420, metadata !DIExpression()), !dbg !421
  store %struct.x264_param_t* %p_param, %struct.x264_param_t** %p_param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_param_t** %p_param.addr, metadata !422, metadata !DIExpression()), !dbg !423
  call void @llvm.dbg.declare(metadata %struct.flv_hnd_t** %p_flv, metadata !424, metadata !DIExpression()), !dbg !425
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !426
  %1 = bitcast i8* %0 to %struct.flv_hnd_t*, !dbg !426
  store %struct.flv_hnd_t* %1, %struct.flv_hnd_t** %p_flv, align 8, !dbg !425
  call void @llvm.dbg.declare(metadata %struct.flv_buffer** %c, metadata !427, metadata !DIExpression()), !dbg !428
  %2 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !429
  %c1 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %2, i32 0, i32 0, !dbg !430
  %3 = load %struct.flv_buffer*, %struct.flv_buffer** %c1, align 8, !dbg !430
  store %struct.flv_buffer* %3, %struct.flv_buffer** %c, align 8, !dbg !428
  %4 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !431
  call void @x264_put_byte(%struct.flv_buffer* %4, i8 zeroext 18), !dbg !432
  call void @llvm.dbg.declare(metadata i32* %start, metadata !433, metadata !DIExpression()), !dbg !434
  %5 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !435
  %d_cur = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %5, i32 0, i32 1, !dbg !436
  %6 = load i32, i32* %d_cur, align 8, !dbg !436
  store i32 %6, i32* %start, align 4, !dbg !434
  %7 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !437
  call void @x264_put_be24(%struct.flv_buffer* %7, i32 0), !dbg !438
  %8 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !439
  call void @x264_put_be24(%struct.flv_buffer* %8, i32 0), !dbg !440
  %9 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !441
  call void @x264_put_be32(%struct.flv_buffer* %9, i32 0), !dbg !442
  %10 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !443
  call void @x264_put_byte(%struct.flv_buffer* %10, i8 zeroext 2), !dbg !444
  %11 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !445
  call void @x264_put_amf_string(%struct.flv_buffer* %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)), !dbg !446
  %12 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !447
  call void @x264_put_byte(%struct.flv_buffer* %12, i8 zeroext 8), !dbg !448
  %13 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !449
  call void @x264_put_be32(%struct.flv_buffer* %13, i32 7), !dbg !450
  %14 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !451
  call void @x264_put_amf_string(%struct.flv_buffer* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)), !dbg !452
  %15 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !453
  %16 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !454
  %i_width = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %16, i32 0, i32 5, !dbg !455
  %17 = load i32, i32* %i_width, align 4, !dbg !455
  %conv = sitofp i32 %17 to double, !dbg !454
  call void @x264_put_amf_double(%struct.flv_buffer* %15, double %conv), !dbg !456
  %18 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !457
  call void @x264_put_amf_string(%struct.flv_buffer* %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)), !dbg !458
  %19 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !459
  %20 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !460
  %i_height = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %20, i32 0, i32 6, !dbg !461
  %21 = load i32, i32* %i_height, align 8, !dbg !461
  %conv2 = sitofp i32 %21 to double, !dbg !460
  call void @x264_put_amf_double(%struct.flv_buffer* %19, double %conv2), !dbg !462
  %22 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !463
  call void @x264_put_amf_string(%struct.flv_buffer* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)), !dbg !464
  %23 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !465
  %b_vfr_input = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %23, i32 0, i32 47, !dbg !467
  %24 = load i32, i32* %b_vfr_input, align 8, !dbg !467
  %tobool = icmp ne i32 %24, 0, !dbg !465
  br i1 %tobool, label %if.else, label %if.then, !dbg !468

if.then:                                          ; preds = %entry
  %25 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !469
  %26 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !470
  %i_fps_num = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %26, i32 0, i32 48, !dbg !471
  %27 = load i32, i32* %i_fps_num, align 4, !dbg !471
  %conv3 = uitofp i32 %27 to double, !dbg !472
  %28 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !473
  %i_fps_den = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %28, i32 0, i32 49, !dbg !474
  %29 = load i32, i32* %i_fps_den, align 8, !dbg !474
  %conv4 = uitofp i32 %29 to double, !dbg !473
  %div = fdiv double %conv3, %conv4, !dbg !475
  call void @x264_put_amf_double(%struct.flv_buffer* %25, double %div), !dbg !476
  br label %if.end, !dbg !476

if.else:                                          ; preds = %entry
  %30 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !477
  %d_cur5 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %30, i32 0, i32 1, !dbg !479
  %31 = load i32, i32* %d_cur5, align 8, !dbg !479
  %conv6 = zext i32 %31 to i64, !dbg !477
  %32 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !480
  %d_total = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %32, i32 0, i32 4, !dbg !481
  %33 = load i64, i64* %d_total, align 8, !dbg !481
  %add = add i64 %conv6, %33, !dbg !482
  %add7 = add i64 %add, 1, !dbg !483
  %34 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !484
  %i_framerate_pos = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %34, i32 0, i32 6, !dbg !485
  store i64 %add7, i64* %i_framerate_pos, align 8, !dbg !486
  %35 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !487
  call void @x264_put_amf_double(%struct.flv_buffer* %35, double 0.000000e+00), !dbg !488
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %36 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !489
  call void @x264_put_amf_string(%struct.flv_buffer* %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)), !dbg !490
  %37 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !491
  call void @x264_put_amf_double(%struct.flv_buffer* %37, double 7.000000e+00), !dbg !492
  %38 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !493
  call void @x264_put_amf_string(%struct.flv_buffer* %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)), !dbg !494
  %39 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !495
  %d_cur8 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %39, i32 0, i32 1, !dbg !496
  %40 = load i32, i32* %d_cur8, align 8, !dbg !496
  %conv9 = zext i32 %40 to i64, !dbg !495
  %41 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !497
  %d_total10 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %41, i32 0, i32 4, !dbg !498
  %42 = load i64, i64* %d_total10, align 8, !dbg !498
  %add11 = add i64 %conv9, %42, !dbg !499
  %add12 = add i64 %add11, 1, !dbg !500
  %43 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !501
  %i_duration_pos = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %43, i32 0, i32 7, !dbg !502
  store i64 %add12, i64* %i_duration_pos, align 8, !dbg !503
  %44 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !504
  call void @x264_put_amf_double(%struct.flv_buffer* %44, double 0.000000e+00), !dbg !505
  %45 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !506
  call void @x264_put_amf_string(%struct.flv_buffer* %45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)), !dbg !507
  %46 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !508
  %d_cur13 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %46, i32 0, i32 1, !dbg !509
  %47 = load i32, i32* %d_cur13, align 8, !dbg !509
  %conv14 = zext i32 %47 to i64, !dbg !508
  %48 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !510
  %d_total15 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %48, i32 0, i32 4, !dbg !511
  %49 = load i64, i64* %d_total15, align 8, !dbg !511
  %add16 = add i64 %conv14, %49, !dbg !512
  %add17 = add i64 %add16, 1, !dbg !513
  %50 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !514
  %i_filesize_pos = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %50, i32 0, i32 8, !dbg !515
  store i64 %add17, i64* %i_filesize_pos, align 8, !dbg !516
  %51 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !517
  call void @x264_put_amf_double(%struct.flv_buffer* %51, double 0.000000e+00), !dbg !518
  %52 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !519
  call void @x264_put_amf_string(%struct.flv_buffer* %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)), !dbg !520
  %53 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !521
  %d_cur18 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %53, i32 0, i32 1, !dbg !522
  %54 = load i32, i32* %d_cur18, align 8, !dbg !522
  %conv19 = zext i32 %54 to i64, !dbg !521
  %55 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !523
  %d_total20 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %55, i32 0, i32 4, !dbg !524
  %56 = load i64, i64* %d_total20, align 8, !dbg !524
  %add21 = add i64 %conv19, %56, !dbg !525
  %add22 = add i64 %add21, 1, !dbg !526
  %57 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !527
  %i_bitrate_pos = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %57, i32 0, i32 9, !dbg !528
  store i64 %add22, i64* %i_bitrate_pos, align 8, !dbg !529
  %58 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !530
  call void @x264_put_amf_double(%struct.flv_buffer* %58, double 0.000000e+00), !dbg !531
  %59 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !532
  call void @x264_put_amf_string(%struct.flv_buffer* %59, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0)), !dbg !533
  %60 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !534
  call void @x264_put_byte(%struct.flv_buffer* %60, i8 zeroext 9), !dbg !535
  call void @llvm.dbg.declare(metadata i32* %length, metadata !536, metadata !DIExpression()), !dbg !537
  %61 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !538
  %d_cur23 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %61, i32 0, i32 1, !dbg !539
  %62 = load i32, i32* %d_cur23, align 8, !dbg !539
  %63 = load i32, i32* %start, align 4, !dbg !540
  %sub = sub i32 %62, %63, !dbg !541
  store i32 %sub, i32* %length, align 4, !dbg !537
  %64 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !542
  %65 = load i32, i32* %length, align 4, !dbg !543
  %sub24 = sub i32 %65, 10, !dbg !544
  %66 = load i32, i32* %start, align 4, !dbg !545
  call void @rewrite_amf_be24(%struct.flv_buffer* %64, i32 %sub24, i32 %66), !dbg !546
  %67 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !547
  %68 = load i32, i32* %length, align 4, !dbg !548
  %add25 = add i32 %68, 1, !dbg !549
  call void @x264_put_be32(%struct.flv_buffer* %67, i32 %add25), !dbg !550
  %69 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !551
  %i_fps_num26 = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %69, i32 0, i32 48, !dbg !552
  %70 = load i32, i32* %i_fps_num26, align 4, !dbg !552
  %conv27 = zext i32 %70 to i64, !dbg !551
  %71 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !553
  %i_fps_num28 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %71, i32 0, i32 3, !dbg !554
  store i64 %conv27, i64* %i_fps_num28, align 8, !dbg !555
  %72 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !556
  %i_fps_den29 = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %72, i32 0, i32 49, !dbg !557
  %73 = load i32, i32* %i_fps_den29, align 8, !dbg !557
  %conv30 = zext i32 %73 to i64, !dbg !556
  %74 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !558
  %i_fps_den31 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %74, i32 0, i32 4, !dbg !559
  store i64 %conv30, i64* %i_fps_den31, align 8, !dbg !560
  %75 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !561
  %i_timebase_num = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %75, i32 0, i32 50, !dbg !562
  %76 = load i32, i32* %i_timebase_num, align 4, !dbg !562
  %77 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !563
  %i_timebase_num32 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %77, i32 0, i32 13, !dbg !564
  store i32 %76, i32* %i_timebase_num32, align 8, !dbg !565
  %78 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !566
  %i_timebase_den = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %78, i32 0, i32 51, !dbg !567
  %79 = load i32, i32* %i_timebase_den, align 8, !dbg !567
  %80 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !568
  %i_timebase_den33 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %80, i32 0, i32 14, !dbg !569
  store i32 %79, i32* %i_timebase_den33, align 4, !dbg !570
  %81 = load %struct.x264_param_t*, %struct.x264_param_t** %p_param.addr, align 8, !dbg !571
  %b_vfr_input34 = getelementptr inbounds %struct.x264_param_t, %struct.x264_param_t* %81, i32 0, i32 47, !dbg !572
  %82 = load i32, i32* %b_vfr_input34, align 8, !dbg !572
  %83 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !573
  %b_vfr_input35 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %83, i32 0, i32 15, !dbg !574
  store i32 %82, i32* %b_vfr_input35, align 8, !dbg !575
  ret i32 0, !dbg !576
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @write_headers(i8* %handle, %struct.x264_nal_t* %p_nal) #0 !dbg !577 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %p_nal.addr = alloca %struct.x264_nal_t*, align 8
  %p_flv = alloca %struct.flv_hnd_t*, align 8
  %c = alloca %struct.flv_buffer*, align 8
  %sps_size = alloca i32, align 4
  %pps_size = alloca i32, align 4
  %sei_size = alloca i32, align 4
  %sps = alloca i8*, align 8
  %length = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !578, metadata !DIExpression()), !dbg !579
  store %struct.x264_nal_t* %p_nal, %struct.x264_nal_t** %p_nal.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_nal_t** %p_nal.addr, metadata !580, metadata !DIExpression()), !dbg !581
  call void @llvm.dbg.declare(metadata %struct.flv_hnd_t** %p_flv, metadata !582, metadata !DIExpression()), !dbg !583
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !584
  %1 = bitcast i8* %0 to %struct.flv_hnd_t*, !dbg !584
  store %struct.flv_hnd_t* %1, %struct.flv_hnd_t** %p_flv, align 8, !dbg !583
  call void @llvm.dbg.declare(metadata %struct.flv_buffer** %c, metadata !585, metadata !DIExpression()), !dbg !586
  %2 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !587
  %c1 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %2, i32 0, i32 0, !dbg !588
  %3 = load %struct.flv_buffer*, %struct.flv_buffer** %c1, align 8, !dbg !588
  store %struct.flv_buffer* %3, %struct.flv_buffer** %c, align 8, !dbg !586
  call void @llvm.dbg.declare(metadata i32* %sps_size, metadata !589, metadata !DIExpression()), !dbg !590
  %4 = load %struct.x264_nal_t*, %struct.x264_nal_t** %p_nal.addr, align 8, !dbg !591
  %arrayidx = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %4, i64 0, !dbg !591
  %i_payload = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %arrayidx, i32 0, i32 2, !dbg !592
  %5 = load i32, i32* %i_payload, align 8, !dbg !592
  store i32 %5, i32* %sps_size, align 4, !dbg !590
  call void @llvm.dbg.declare(metadata i32* %pps_size, metadata !593, metadata !DIExpression()), !dbg !594
  %6 = load %struct.x264_nal_t*, %struct.x264_nal_t** %p_nal.addr, align 8, !dbg !595
  %arrayidx2 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %6, i64 1, !dbg !595
  %i_payload3 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %arrayidx2, i32 0, i32 2, !dbg !596
  %7 = load i32, i32* %i_payload3, align 8, !dbg !596
  store i32 %7, i32* %pps_size, align 4, !dbg !594
  call void @llvm.dbg.declare(metadata i32* %sei_size, metadata !597, metadata !DIExpression()), !dbg !598
  %8 = load %struct.x264_nal_t*, %struct.x264_nal_t** %p_nal.addr, align 8, !dbg !599
  %arrayidx4 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %8, i64 2, !dbg !599
  %i_payload5 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %arrayidx4, i32 0, i32 2, !dbg !600
  %9 = load i32, i32* %i_payload5, align 8, !dbg !600
  store i32 %9, i32* %sei_size, align 4, !dbg !598
  %10 = load i32, i32* %sei_size, align 4, !dbg !601
  %conv = sext i32 %10 to i64, !dbg !601
  %call = call noalias i8* @malloc(i64 %conv) #5, !dbg !602
  %11 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !603
  %sei = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %11, i32 0, i32 1, !dbg !604
  store i8* %call, i8** %sei, align 8, !dbg !605
  %12 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !606
  %sei6 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %12, i32 0, i32 1, !dbg !608
  %13 = load i8*, i8** %sei6, align 8, !dbg !608
  %tobool = icmp ne i8* %13, null, !dbg !606
  br i1 %tobool, label %if.end, label %if.then, !dbg !609

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !610
  br label %return, !dbg !610

if.end:                                           ; preds = %entry
  %14 = load i32, i32* %sei_size, align 4, !dbg !611
  %15 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !612
  %sei_len = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %15, i32 0, i32 2, !dbg !613
  store i32 %14, i32* %sei_len, align 8, !dbg !614
  %16 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !615
  %sei7 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %16, i32 0, i32 1, !dbg !616
  %17 = load i8*, i8** %sei7, align 8, !dbg !616
  %18 = load %struct.x264_nal_t*, %struct.x264_nal_t** %p_nal.addr, align 8, !dbg !617
  %arrayidx8 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %18, i64 2, !dbg !617
  %p_payload = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %arrayidx8, i32 0, i32 3, !dbg !618
  %19 = load i8*, i8** %p_payload, align 8, !dbg !618
  %20 = load i32, i32* %sei_size, align 4, !dbg !619
  %conv9 = sext i32 %20 to i64, !dbg !619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %19, i64 %conv9, i1 false), !dbg !620
  call void @llvm.dbg.declare(metadata i8** %sps, metadata !621, metadata !DIExpression()), !dbg !622
  %21 = load %struct.x264_nal_t*, %struct.x264_nal_t** %p_nal.addr, align 8, !dbg !623
  %arrayidx10 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %21, i64 0, !dbg !623
  %p_payload11 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %arrayidx10, i32 0, i32 3, !dbg !624
  %22 = load i8*, i8** %p_payload11, align 8, !dbg !624
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 4, !dbg !625
  store i8* %add.ptr, i8** %sps, align 8, !dbg !622
  %23 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !626
  call void @x264_put_byte(%struct.flv_buffer* %23, i8 zeroext 9), !dbg !627
  %24 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !628
  call void @x264_put_be24(%struct.flv_buffer* %24, i32 0), !dbg !629
  %25 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !630
  call void @x264_put_be24(%struct.flv_buffer* %25, i32 0), !dbg !631
  %26 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !632
  call void @x264_put_byte(%struct.flv_buffer* %26, i8 zeroext 0), !dbg !633
  %27 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !634
  call void @x264_put_be24(%struct.flv_buffer* %27, i32 0), !dbg !635
  %28 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !636
  %d_cur = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %28, i32 0, i32 1, !dbg !637
  %29 = load i32, i32* %d_cur, align 8, !dbg !637
  %30 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !638
  %start = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %30, i32 0, i32 16, !dbg !639
  store i32 %29, i32* %start, align 4, !dbg !640
  %31 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !641
  call void @x264_put_byte(%struct.flv_buffer* %31, i8 zeroext 23), !dbg !642
  %32 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !643
  call void @x264_put_byte(%struct.flv_buffer* %32, i8 zeroext 0), !dbg !644
  %33 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !645
  call void @x264_put_be24(%struct.flv_buffer* %33, i32 0), !dbg !646
  %34 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !647
  call void @x264_put_byte(%struct.flv_buffer* %34, i8 zeroext 1), !dbg !648
  %35 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !649
  %36 = load i8*, i8** %sps, align 8, !dbg !650
  %arrayidx12 = getelementptr inbounds i8, i8* %36, i64 1, !dbg !650
  %37 = load i8, i8* %arrayidx12, align 1, !dbg !650
  call void @x264_put_byte(%struct.flv_buffer* %35, i8 zeroext %37), !dbg !651
  %38 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !652
  %39 = load i8*, i8** %sps, align 8, !dbg !653
  %arrayidx13 = getelementptr inbounds i8, i8* %39, i64 2, !dbg !653
  %40 = load i8, i8* %arrayidx13, align 1, !dbg !653
  call void @x264_put_byte(%struct.flv_buffer* %38, i8 zeroext %40), !dbg !654
  %41 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !655
  %42 = load i8*, i8** %sps, align 8, !dbg !656
  %arrayidx14 = getelementptr inbounds i8, i8* %42, i64 3, !dbg !656
  %43 = load i8, i8* %arrayidx14, align 1, !dbg !656
  call void @x264_put_byte(%struct.flv_buffer* %41, i8 zeroext %43), !dbg !657
  %44 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !658
  call void @x264_put_byte(%struct.flv_buffer* %44, i8 zeroext -1), !dbg !659
  %45 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !660
  call void @x264_put_byte(%struct.flv_buffer* %45, i8 zeroext -31), !dbg !661
  %46 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !662
  %47 = load i32, i32* %sps_size, align 4, !dbg !663
  %sub = sub nsw i32 %47, 4, !dbg !664
  %conv15 = trunc i32 %sub to i16, !dbg !663
  call void @x264_put_be16(%struct.flv_buffer* %46, i16 zeroext %conv15), !dbg !665
  %48 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !666
  %49 = load i8*, i8** %sps, align 8, !dbg !667
  %50 = load i32, i32* %sps_size, align 4, !dbg !668
  %sub16 = sub nsw i32 %50, 4, !dbg !669
  %call17 = call i32 @flv_append_data(%struct.flv_buffer* %48, i8* %49, i32 %sub16), !dbg !670
  %51 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !671
  call void @x264_put_byte(%struct.flv_buffer* %51, i8 zeroext 1), !dbg !672
  %52 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !673
  %53 = load i32, i32* %pps_size, align 4, !dbg !674
  %sub18 = sub nsw i32 %53, 4, !dbg !675
  %conv19 = trunc i32 %sub18 to i16, !dbg !674
  call void @x264_put_be16(%struct.flv_buffer* %52, i16 zeroext %conv19), !dbg !676
  %54 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !677
  %55 = load %struct.x264_nal_t*, %struct.x264_nal_t** %p_nal.addr, align 8, !dbg !678
  %arrayidx20 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %55, i64 1, !dbg !678
  %p_payload21 = getelementptr inbounds %struct.x264_nal_t, %struct.x264_nal_t* %arrayidx20, i32 0, i32 3, !dbg !679
  %56 = load i8*, i8** %p_payload21, align 8, !dbg !679
  %add.ptr22 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !680
  %57 = load i32, i32* %pps_size, align 4, !dbg !681
  %sub23 = sub nsw i32 %57, 4, !dbg !682
  %call24 = call i32 @flv_append_data(%struct.flv_buffer* %54, i8* %add.ptr22, i32 %sub23), !dbg !683
  call void @llvm.dbg.declare(metadata i32* %length, metadata !684, metadata !DIExpression()), !dbg !685
  %58 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !686
  %d_cur25 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %58, i32 0, i32 1, !dbg !687
  %59 = load i32, i32* %d_cur25, align 8, !dbg !687
  %60 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !688
  %start26 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %60, i32 0, i32 16, !dbg !689
  %61 = load i32, i32* %start26, align 4, !dbg !689
  %sub27 = sub i32 %59, %61, !dbg !690
  store i32 %sub27, i32* %length, align 4, !dbg !685
  %62 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !691
  %63 = load i32, i32* %length, align 4, !dbg !692
  %64 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !693
  %start28 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %64, i32 0, i32 16, !dbg !694
  %65 = load i32, i32* %start28, align 4, !dbg !694
  %sub29 = sub i32 %65, 10, !dbg !695
  call void @rewrite_amf_be24(%struct.flv_buffer* %62, i32 %63, i32 %sub29), !dbg !696
  %66 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !697
  %67 = load i32, i32* %length, align 4, !dbg !698
  %add = add i32 %67, 11, !dbg !699
  call void @x264_put_be32(%struct.flv_buffer* %66, i32 %add), !dbg !700
  br label %do.body, !dbg !701

do.body:                                          ; preds = %if.end
  %68 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !702
  %call30 = call i32 @flv_flush_data(%struct.flv_buffer* %68), !dbg !702
  %cmp = icmp slt i32 %call30, 0, !dbg !702
  br i1 %cmp, label %if.then32, label %if.end33, !dbg !705

if.then32:                                        ; preds = %do.body
  store i32 -1, i32* %retval, align 4, !dbg !702
  br label %return, !dbg !702

if.end33:                                         ; preds = %do.body
  br label %do.end, !dbg !705

do.end:                                           ; preds = %if.end33
  %69 = load i32, i32* %sei_size, align 4, !dbg !706
  %70 = load i32, i32* %sps_size, align 4, !dbg !707
  %add34 = add nsw i32 %69, %70, !dbg !708
  %71 = load i32, i32* %pps_size, align 4, !dbg !709
  %add35 = add nsw i32 %add34, %71, !dbg !710
  store i32 %add35, i32* %retval, align 4, !dbg !711
  br label %return, !dbg !711

return:                                           ; preds = %do.end, %if.then32, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !712
  ret i32 %72, !dbg !712
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @write_frame(i8* %handle, i8* %p_nalu, i32 %i_size, %struct.x264_picture_t* %p_picture) #0 !dbg !713 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %p_nalu.addr = alloca i8*, align 8
  %i_size.addr = alloca i32, align 4
  %p_picture.addr = alloca %struct.x264_picture_t*, align 8
  %p_flv = alloca %struct.flv_hnd_t*, align 8
  %c = alloca %struct.flv_buffer*, align 8
  %dts = alloca i64, align 8
  %cts = alloca i64, align 8
  %offset = alloca i64, align 8
  %prev_dts = alloca i64, align 8
  %prev_cts = alloca i64, align 8
  %fps = alloca double, align 8
  %fps51 = alloca double, align 8
  %length = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !714, metadata !DIExpression()), !dbg !715
  store i8* %p_nalu, i8** %p_nalu.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_nalu.addr, metadata !716, metadata !DIExpression()), !dbg !717
  store i32 %i_size, i32* %i_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i_size.addr, metadata !718, metadata !DIExpression()), !dbg !719
  store %struct.x264_picture_t* %p_picture, %struct.x264_picture_t** %p_picture.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.x264_picture_t** %p_picture.addr, metadata !720, metadata !DIExpression()), !dbg !721
  call void @llvm.dbg.declare(metadata %struct.flv_hnd_t** %p_flv, metadata !722, metadata !DIExpression()), !dbg !723
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !724
  %1 = bitcast i8* %0 to %struct.flv_hnd_t*, !dbg !724
  store %struct.flv_hnd_t* %1, %struct.flv_hnd_t** %p_flv, align 8, !dbg !723
  call void @llvm.dbg.declare(metadata %struct.flv_buffer** %c, metadata !725, metadata !DIExpression()), !dbg !726
  %2 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !727
  %c1 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %2, i32 0, i32 0, !dbg !728
  %3 = load %struct.flv_buffer*, %struct.flv_buffer** %c1, align 8, !dbg !728
  store %struct.flv_buffer* %3, %struct.flv_buffer** %c, align 8, !dbg !726
  call void @llvm.dbg.declare(metadata i64* %dts, metadata !729, metadata !DIExpression()), !dbg !730
  %4 = load %struct.x264_picture_t*, %struct.x264_picture_t** %p_picture.addr, align 8, !dbg !731
  %i_dts = getelementptr inbounds %struct.x264_picture_t, %struct.x264_picture_t* %4, i32 0, i32 5, !dbg !732
  %5 = load i64, i64* %i_dts, align 8, !dbg !732
  %mul = mul nsw i64 %5, 1000, !dbg !733
  %conv = sitofp i64 %mul to double, !dbg !731
  %6 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !734
  %i_timebase_num = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %6, i32 0, i32 13, !dbg !735
  %7 = load i32, i32* %i_timebase_num, align 8, !dbg !735
  %conv2 = uitofp i32 %7 to double, !dbg !736
  %8 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !737
  %i_timebase_den = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %8, i32 0, i32 14, !dbg !738
  %9 = load i32, i32* %i_timebase_den, align 4, !dbg !738
  %conv3 = uitofp i32 %9 to double, !dbg !737
  %div = fdiv double %conv2, %conv3, !dbg !739
  %mul4 = fmul double %conv, %div, !dbg !740
  %add = fadd double %mul4, 5.000000e-01, !dbg !741
  %conv5 = fptosi double %add to i64, !dbg !742
  store i64 %conv5, i64* %dts, align 8, !dbg !730
  call void @llvm.dbg.declare(metadata i64* %cts, metadata !743, metadata !DIExpression()), !dbg !744
  %10 = load %struct.x264_picture_t*, %struct.x264_picture_t** %p_picture.addr, align 8, !dbg !745
  %i_pts = getelementptr inbounds %struct.x264_picture_t, %struct.x264_picture_t* %10, i32 0, i32 4, !dbg !746
  %11 = load i64, i64* %i_pts, align 8, !dbg !746
  %mul6 = mul nsw i64 %11, 1000, !dbg !747
  %conv7 = sitofp i64 %mul6 to double, !dbg !745
  %12 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !748
  %i_timebase_num8 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %12, i32 0, i32 13, !dbg !749
  %13 = load i32, i32* %i_timebase_num8, align 8, !dbg !749
  %conv9 = uitofp i32 %13 to double, !dbg !750
  %14 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !751
  %i_timebase_den10 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %14, i32 0, i32 14, !dbg !752
  %15 = load i32, i32* %i_timebase_den10, align 4, !dbg !752
  %conv11 = uitofp i32 %15 to double, !dbg !751
  %div12 = fdiv double %conv9, %conv11, !dbg !753
  %mul13 = fmul double %conv7, %div12, !dbg !754
  %add14 = fadd double %mul13, 5.000000e-01, !dbg !755
  %conv15 = fptosi double %add14 to i64, !dbg !756
  store i64 %conv15, i64* %cts, align 8, !dbg !744
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !757, metadata !DIExpression()), !dbg !758
  %16 = load i64, i64* %cts, align 8, !dbg !759
  %17 = load i64, i64* %dts, align 8, !dbg !760
  %sub = sub nsw i64 %16, %17, !dbg !761
  store i64 %sub, i64* %offset, align 8, !dbg !758
  %18 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !762
  %i_framenum = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %18, i32 0, i32 5, !dbg !764
  %19 = load i64, i64* %i_framenum, align 8, !dbg !764
  %tobool = icmp ne i64 %19, 0, !dbg !762
  br i1 %tobool, label %if.then, label %if.end64, !dbg !765

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %prev_dts, metadata !766, metadata !DIExpression()), !dbg !768
  %20 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !769
  %i_prev_dts = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %20, i32 0, i32 11, !dbg !770
  %21 = load i64, i64* %i_prev_dts, align 8, !dbg !770
  %mul16 = mul nsw i64 %21, 1000, !dbg !771
  %conv17 = sitofp i64 %mul16 to double, !dbg !769
  %22 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !772
  %i_timebase_num18 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %22, i32 0, i32 13, !dbg !773
  %23 = load i32, i32* %i_timebase_num18, align 8, !dbg !773
  %conv19 = uitofp i32 %23 to double, !dbg !774
  %24 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !775
  %i_timebase_den20 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %24, i32 0, i32 14, !dbg !776
  %25 = load i32, i32* %i_timebase_den20, align 4, !dbg !776
  %conv21 = uitofp i32 %25 to double, !dbg !775
  %div22 = fdiv double %conv19, %conv21, !dbg !777
  %mul23 = fmul double %conv17, %div22, !dbg !778
  %add24 = fadd double %mul23, 5.000000e-01, !dbg !779
  %conv25 = fptosi double %add24 to i64, !dbg !780
  store i64 %conv25, i64* %prev_dts, align 8, !dbg !768
  call void @llvm.dbg.declare(metadata i64* %prev_cts, metadata !781, metadata !DIExpression()), !dbg !782
  %26 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !783
  %i_prev_pts = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %26, i32 0, i32 12, !dbg !784
  %27 = load i64, i64* %i_prev_pts, align 8, !dbg !784
  %mul26 = mul nsw i64 %27, 1000, !dbg !785
  %conv27 = sitofp i64 %mul26 to double, !dbg !783
  %28 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !786
  %i_timebase_num28 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %28, i32 0, i32 13, !dbg !787
  %29 = load i32, i32* %i_timebase_num28, align 8, !dbg !787
  %conv29 = uitofp i32 %29 to double, !dbg !788
  %30 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !789
  %i_timebase_den30 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %30, i32 0, i32 14, !dbg !790
  %31 = load i32, i32* %i_timebase_den30, align 4, !dbg !790
  %conv31 = uitofp i32 %31 to double, !dbg !789
  %div32 = fdiv double %conv29, %conv31, !dbg !791
  %mul33 = fmul double %conv27, %div32, !dbg !792
  %add34 = fadd double %mul33, 5.000000e-01, !dbg !793
  %conv35 = fptosi double %add34 to i64, !dbg !794
  store i64 %conv35, i64* %prev_cts, align 8, !dbg !782
  %32 = load i64, i64* %prev_dts, align 8, !dbg !795
  %33 = load i64, i64* %dts, align 8, !dbg !797
  %cmp = icmp eq i64 %32, %33, !dbg !798
  br i1 %cmp, label %if.then37, label %if.end, !dbg !799

if.then37:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata double* %fps, metadata !800, metadata !DIExpression()), !dbg !802
  %34 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !803
  %i_timebase_den38 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %34, i32 0, i32 14, !dbg !804
  %35 = load i32, i32* %i_timebase_den38, align 4, !dbg !804
  %conv39 = uitofp i32 %35 to double, !dbg !805
  %36 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !806
  %i_timebase_num40 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %36, i32 0, i32 13, !dbg !807
  %37 = load i32, i32* %i_timebase_num40, align 8, !dbg !807
  %conv41 = uitofp i32 %37 to double, !dbg !806
  %div42 = fdiv double %conv39, %conv41, !dbg !808
  %38 = load %struct.x264_picture_t*, %struct.x264_picture_t** %p_picture.addr, align 8, !dbg !809
  %i_dts43 = getelementptr inbounds %struct.x264_picture_t, %struct.x264_picture_t* %38, i32 0, i32 5, !dbg !810
  %39 = load i64, i64* %i_dts43, align 8, !dbg !810
  %40 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !811
  %i_prev_dts44 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %40, i32 0, i32 11, !dbg !812
  %41 = load i64, i64* %i_prev_dts44, align 8, !dbg !812
  %sub45 = sub nsw i64 %39, %41, !dbg !813
  %conv46 = sitofp i64 %sub45 to double, !dbg !814
  %div47 = fdiv double %div42, %conv46, !dbg !815
  store double %div47, double* %fps, align 8, !dbg !802
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !816
  %43 = load i64, i64* %dts, align 8, !dbg !817
  %44 = load double, double* %fps, align 8, !dbg !818
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.10, i64 0, i64 0), i64 %43, double %44), !dbg !819
  br label %if.end, !dbg !820

if.end:                                           ; preds = %if.then37, %if.then
  %45 = load i64, i64* %prev_cts, align 8, !dbg !821
  %46 = load i64, i64* %cts, align 8, !dbg !823
  %cmp48 = icmp eq i64 %45, %46, !dbg !824
  br i1 %cmp48, label %if.then50, label %if.end63, !dbg !825

if.then50:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata double* %fps51, metadata !826, metadata !DIExpression()), !dbg !828
  %47 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !829
  %i_timebase_den52 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %47, i32 0, i32 14, !dbg !830
  %48 = load i32, i32* %i_timebase_den52, align 4, !dbg !830
  %conv53 = uitofp i32 %48 to double, !dbg !831
  %49 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !832
  %i_timebase_num54 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %49, i32 0, i32 13, !dbg !833
  %50 = load i32, i32* %i_timebase_num54, align 8, !dbg !833
  %conv55 = uitofp i32 %50 to double, !dbg !832
  %div56 = fdiv double %conv53, %conv55, !dbg !834
  %51 = load %struct.x264_picture_t*, %struct.x264_picture_t** %p_picture.addr, align 8, !dbg !835
  %i_pts57 = getelementptr inbounds %struct.x264_picture_t, %struct.x264_picture_t* %51, i32 0, i32 4, !dbg !836
  %52 = load i64, i64* %i_pts57, align 8, !dbg !836
  %53 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !837
  %i_prev_pts58 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %53, i32 0, i32 12, !dbg !838
  %54 = load i64, i64* %i_prev_pts58, align 8, !dbg !838
  %sub59 = sub nsw i64 %52, %54, !dbg !839
  %conv60 = sitofp i64 %sub59 to double, !dbg !840
  %div61 = fdiv double %div56, %conv60, !dbg !841
  store double %div61, double* %fps51, align 8, !dbg !828
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !842
  %56 = load i64, i64* %cts, align 8, !dbg !843
  %57 = load double, double* %fps51, align 8, !dbg !844
  %call62 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.11, i64 0, i64 0), i64 %56, double %57), !dbg !845
  br label %if.end63, !dbg !846

if.end63:                                         ; preds = %if.then50, %if.end
  br label %if.end64, !dbg !847

if.end64:                                         ; preds = %if.end63, %entry
  %58 = load %struct.x264_picture_t*, %struct.x264_picture_t** %p_picture.addr, align 8, !dbg !848
  %i_dts65 = getelementptr inbounds %struct.x264_picture_t, %struct.x264_picture_t* %58, i32 0, i32 5, !dbg !849
  %59 = load i64, i64* %i_dts65, align 8, !dbg !849
  %60 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !850
  %i_prev_dts66 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %60, i32 0, i32 11, !dbg !851
  store i64 %59, i64* %i_prev_dts66, align 8, !dbg !852
  %61 = load %struct.x264_picture_t*, %struct.x264_picture_t** %p_picture.addr, align 8, !dbg !853
  %i_pts67 = getelementptr inbounds %struct.x264_picture_t, %struct.x264_picture_t* %61, i32 0, i32 4, !dbg !854
  %62 = load i64, i64* %i_pts67, align 8, !dbg !854
  %63 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !855
  %i_prev_pts68 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %63, i32 0, i32 12, !dbg !856
  store i64 %62, i64* %i_prev_pts68, align 8, !dbg !857
  %64 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !858
  call void @x264_put_byte(%struct.flv_buffer* %64, i8 zeroext 9), !dbg !859
  %65 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !860
  call void @x264_put_be24(%struct.flv_buffer* %65, i32 0), !dbg !861
  %66 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !862
  %67 = load i64, i64* %dts, align 8, !dbg !863
  %conv69 = trunc i64 %67 to i32, !dbg !863
  call void @x264_put_be24(%struct.flv_buffer* %66, i32 %conv69), !dbg !864
  %68 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !865
  %69 = load i64, i64* %dts, align 8, !dbg !866
  %shr = ashr i64 %69, 24, !dbg !867
  %conv70 = trunc i64 %shr to i8, !dbg !866
  call void @x264_put_byte(%struct.flv_buffer* %68, i8 zeroext %conv70), !dbg !868
  %70 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !869
  call void @x264_put_be24(%struct.flv_buffer* %70, i32 0), !dbg !870
  %71 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !871
  %d_cur = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %71, i32 0, i32 1, !dbg !872
  %72 = load i32, i32* %d_cur, align 8, !dbg !872
  %73 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !873
  %start = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %73, i32 0, i32 16, !dbg !874
  store i32 %72, i32* %start, align 4, !dbg !875
  %74 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !876
  %75 = load %struct.x264_picture_t*, %struct.x264_picture_t** %p_picture.addr, align 8, !dbg !877
  %b_keyframe = getelementptr inbounds %struct.x264_picture_t, %struct.x264_picture_t* %75, i32 0, i32 3, !dbg !878
  %76 = load i32, i32* %b_keyframe, align 4, !dbg !878
  %tobool71 = icmp ne i32 %76, 0, !dbg !877
  %77 = zext i1 %tobool71 to i64, !dbg !877
  %cond = select i1 %tobool71, i32 23, i32 39, !dbg !877
  %conv72 = trunc i32 %cond to i8, !dbg !877
  call void @x264_put_byte(%struct.flv_buffer* %74, i8 zeroext %conv72), !dbg !879
  %78 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !880
  call void @x264_put_byte(%struct.flv_buffer* %78, i8 zeroext 1), !dbg !881
  %79 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !882
  %80 = load i64, i64* %offset, align 8, !dbg !883
  %conv73 = trunc i64 %80 to i32, !dbg !883
  call void @x264_put_be24(%struct.flv_buffer* %79, i32 %conv73), !dbg !884
  %81 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !885
  %sei = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %81, i32 0, i32 1, !dbg !887
  %82 = load i8*, i8** %sei, align 8, !dbg !887
  %tobool74 = icmp ne i8* %82, null, !dbg !885
  br i1 %tobool74, label %if.then75, label %if.end80, !dbg !888

if.then75:                                        ; preds = %if.end64
  %83 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !889
  %84 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !891
  %sei76 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %84, i32 0, i32 1, !dbg !892
  %85 = load i8*, i8** %sei76, align 8, !dbg !892
  %86 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !893
  %sei_len = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %86, i32 0, i32 2, !dbg !894
  %87 = load i32, i32* %sei_len, align 8, !dbg !894
  %call77 = call i32 @flv_append_data(%struct.flv_buffer* %83, i8* %85, i32 %87), !dbg !895
  %88 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !896
  %sei78 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %88, i32 0, i32 1, !dbg !897
  %89 = load i8*, i8** %sei78, align 8, !dbg !897
  call void @free(i8* %89) #5, !dbg !898
  %90 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !899
  %sei79 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %90, i32 0, i32 1, !dbg !900
  store i8* null, i8** %sei79, align 8, !dbg !901
  br label %if.end80, !dbg !902

if.end80:                                         ; preds = %if.then75, %if.end64
  %91 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !903
  %92 = load i8*, i8** %p_nalu.addr, align 8, !dbg !904
  %93 = load i32, i32* %i_size.addr, align 4, !dbg !905
  %call81 = call i32 @flv_append_data(%struct.flv_buffer* %91, i8* %92, i32 %93), !dbg !906
  call void @llvm.dbg.declare(metadata i32* %length, metadata !907, metadata !DIExpression()), !dbg !908
  %94 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !909
  %d_cur82 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %94, i32 0, i32 1, !dbg !910
  %95 = load i32, i32* %d_cur82, align 8, !dbg !910
  %96 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !911
  %start83 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %96, i32 0, i32 16, !dbg !912
  %97 = load i32, i32* %start83, align 4, !dbg !912
  %sub84 = sub i32 %95, %97, !dbg !913
  store i32 %sub84, i32* %length, align 4, !dbg !908
  %98 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !914
  %99 = load i32, i32* %length, align 4, !dbg !915
  %100 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !916
  %start85 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %100, i32 0, i32 16, !dbg !917
  %101 = load i32, i32* %start85, align 4, !dbg !917
  %sub86 = sub i32 %101, 10, !dbg !918
  call void @rewrite_amf_be24(%struct.flv_buffer* %98, i32 %99, i32 %sub86), !dbg !919
  %102 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !920
  %103 = load i32, i32* %length, align 4, !dbg !921
  %add87 = add i32 11, %103, !dbg !922
  call void @x264_put_be32(%struct.flv_buffer* %102, i32 %add87), !dbg !923
  br label %do.body, !dbg !924

do.body:                                          ; preds = %if.end80
  %104 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !925
  %call88 = call i32 @flv_flush_data(%struct.flv_buffer* %104), !dbg !925
  %cmp89 = icmp slt i32 %call88, 0, !dbg !925
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !928

if.then91:                                        ; preds = %do.body
  store i32 -1, i32* %retval, align 4, !dbg !925
  br label %return, !dbg !925

if.end92:                                         ; preds = %do.body
  br label %do.end, !dbg !928

do.end:                                           ; preds = %if.end92
  %105 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !929
  %i_framenum93 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %105, i32 0, i32 5, !dbg !930
  %106 = load i64, i64* %i_framenum93, align 8, !dbg !931
  %inc = add nsw i64 %106, 1, !dbg !931
  store i64 %inc, i64* %i_framenum93, align 8, !dbg !931
  %107 = load i32, i32* %i_size.addr, align 4, !dbg !932
  store i32 %107, i32* %retval, align 4, !dbg !933
  br label %return, !dbg !933

return:                                           ; preds = %do.end, %if.then91
  %108 = load i32, i32* %retval, align 4, !dbg !934
  ret i32 %108, !dbg !934
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @close_file(i8* %handle, i64 %largest_pts, i64 %second_largest_pts) #0 !dbg !935 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %largest_pts.addr = alloca i64, align 8
  %second_largest_pts.addr = alloca i64, align 8
  %p_flv = alloca %struct.flv_hnd_t*, align 8
  %c = alloca %struct.flv_buffer*, align 8
  %total_duration = alloca double, align 8
  %framerate = alloca double, align 8
  %filesize = alloca i64, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !936, metadata !DIExpression()), !dbg !937
  store i64 %largest_pts, i64* %largest_pts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %largest_pts.addr, metadata !938, metadata !DIExpression()), !dbg !939
  store i64 %second_largest_pts, i64* %second_largest_pts.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %second_largest_pts.addr, metadata !940, metadata !DIExpression()), !dbg !941
  call void @llvm.dbg.declare(metadata %struct.flv_hnd_t** %p_flv, metadata !942, metadata !DIExpression()), !dbg !943
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !944
  %1 = bitcast i8* %0 to %struct.flv_hnd_t*, !dbg !944
  store %struct.flv_hnd_t* %1, %struct.flv_hnd_t** %p_flv, align 8, !dbg !943
  call void @llvm.dbg.declare(metadata %struct.flv_buffer** %c, metadata !945, metadata !DIExpression()), !dbg !946
  %2 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !947
  %c1 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %2, i32 0, i32 0, !dbg !948
  %3 = load %struct.flv_buffer*, %struct.flv_buffer** %c1, align 8, !dbg !948
  store %struct.flv_buffer* %3, %struct.flv_buffer** %c, align 8, !dbg !946
  br label %do.body, !dbg !949

do.body:                                          ; preds = %entry
  %4 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !950
  %call = call i32 @flv_flush_data(%struct.flv_buffer* %4), !dbg !950
  %cmp = icmp slt i32 %call, 0, !dbg !950
  br i1 %cmp, label %if.then, label %if.end, !dbg !953

if.then:                                          ; preds = %do.body
  store i32 -1, i32* %retval, align 4, !dbg !950
  br label %return, !dbg !950

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !953

do.end:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata double* %total_duration, metadata !954, metadata !DIExpression()), !dbg !955
  %5 = load i64, i64* %largest_pts.addr, align 8, !dbg !956
  %mul = mul nsw i64 2, %5, !dbg !957
  %6 = load i64, i64* %second_largest_pts.addr, align 8, !dbg !958
  %sub = sub nsw i64 %mul, %6, !dbg !959
  %conv = sitofp i64 %sub to double, !dbg !960
  %7 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !961
  %i_timebase_num = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %7, i32 0, i32 13, !dbg !962
  %8 = load i32, i32* %i_timebase_num, align 8, !dbg !962
  %conv2 = uitofp i32 %8 to double, !dbg !961
  %mul3 = fmul double %conv, %conv2, !dbg !963
  %9 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !964
  %i_timebase_den = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %9, i32 0, i32 14, !dbg !965
  %10 = load i32, i32* %i_timebase_den, align 4, !dbg !965
  %conv4 = uitofp i32 %10 to double, !dbg !964
  %div = fdiv double %mul3, %conv4, !dbg !966
  store double %div, double* %total_duration, align 8, !dbg !955
  %11 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !967
  %fp = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %11, i32 0, i32 3, !dbg !969
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !969
  %call5 = call zeroext i8 @x264_is_regular_file(%struct._IO_FILE* %12), !dbg !970
  %tobool = icmp ne i8 %call5, 0, !dbg !970
  br i1 %tobool, label %if.then6, label %if.end24, !dbg !971

if.then6:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata double* %framerate, metadata !972, metadata !DIExpression()), !dbg !974
  call void @llvm.dbg.declare(metadata i64* %filesize, metadata !975, metadata !DIExpression()), !dbg !976
  %13 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !977
  %fp7 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %13, i32 0, i32 3, !dbg !978
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp7, align 8, !dbg !978
  %call8 = call i64 @ftell(%struct._IO_FILE* %14), !dbg !979
  store i64 %call8, i64* %filesize, align 8, !dbg !976
  %15 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !980
  %i_framerate_pos = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %15, i32 0, i32 6, !dbg !982
  %16 = load i64, i64* %i_framerate_pos, align 8, !dbg !982
  %tobool9 = icmp ne i64 %16, 0, !dbg !980
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !983

if.then10:                                        ; preds = %if.then6
  %17 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !984
  %i_framenum = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %17, i32 0, i32 5, !dbg !986
  %18 = load i64, i64* %i_framenum, align 8, !dbg !986
  %conv11 = sitofp i64 %18 to double, !dbg !987
  %19 = load double, double* %total_duration, align 8, !dbg !988
  %div12 = fdiv double %conv11, %19, !dbg !989
  store double %div12, double* %framerate, align 8, !dbg !990
  %20 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !991
  %fp13 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %20, i32 0, i32 3, !dbg !992
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %fp13, align 8, !dbg !992
  %22 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !993
  %i_framerate_pos14 = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %22, i32 0, i32 6, !dbg !994
  %23 = load i64, i64* %i_framerate_pos14, align 8, !dbg !994
  %24 = load double, double* %framerate, align 8, !dbg !995
  call void @rewrite_amf_double(%struct._IO_FILE* %21, i64 %23, double %24), !dbg !996
  br label %if.end15, !dbg !997

if.end15:                                         ; preds = %if.then10, %if.then6
  %25 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !998
  %fp16 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %25, i32 0, i32 3, !dbg !999
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %fp16, align 8, !dbg !999
  %27 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !1000
  %i_duration_pos = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %27, i32 0, i32 7, !dbg !1001
  %28 = load i64, i64* %i_duration_pos, align 8, !dbg !1001
  %29 = load double, double* %total_duration, align 8, !dbg !1002
  call void @rewrite_amf_double(%struct._IO_FILE* %26, i64 %28, double %29), !dbg !1003
  %30 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !1004
  %fp17 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %30, i32 0, i32 3, !dbg !1005
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %fp17, align 8, !dbg !1005
  %32 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !1006
  %i_filesize_pos = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %32, i32 0, i32 8, !dbg !1007
  %33 = load i64, i64* %i_filesize_pos, align 8, !dbg !1007
  %34 = load i64, i64* %filesize, align 8, !dbg !1008
  %conv18 = uitofp i64 %34 to double, !dbg !1008
  call void @rewrite_amf_double(%struct._IO_FILE* %31, i64 %33, double %conv18), !dbg !1009
  %35 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !1010
  %fp19 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %35, i32 0, i32 3, !dbg !1011
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %fp19, align 8, !dbg !1011
  %37 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !1012
  %i_bitrate_pos = getelementptr inbounds %struct.flv_hnd_t, %struct.flv_hnd_t* %37, i32 0, i32 9, !dbg !1013
  %38 = load i64, i64* %i_bitrate_pos, align 8, !dbg !1013
  %39 = load i64, i64* %filesize, align 8, !dbg !1014
  %mul20 = mul i64 %39, 8, !dbg !1015
  %conv21 = uitofp i64 %mul20 to double, !dbg !1014
  %40 = load double, double* %total_duration, align 8, !dbg !1016
  %mul22 = fmul double %40, 1.000000e+03, !dbg !1017
  %div23 = fdiv double %conv21, %mul22, !dbg !1018
  call void @rewrite_amf_double(%struct._IO_FILE* %36, i64 %38, double %div23), !dbg !1019
  br label %if.end24, !dbg !1020

if.end24:                                         ; preds = %if.end15, %do.end
  %41 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !1021
  %fp25 = getelementptr inbounds %struct.flv_buffer, %struct.flv_buffer* %41, i32 0, i32 3, !dbg !1022
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %fp25, align 8, !dbg !1022
  %call26 = call i32 @fclose(%struct._IO_FILE* %42), !dbg !1023
  %43 = load %struct.flv_hnd_t*, %struct.flv_hnd_t** %p_flv, align 8, !dbg !1024
  %44 = bitcast %struct.flv_hnd_t* %43 to i8*, !dbg !1024
  call void @free(i8* %44) #5, !dbg !1025
  %45 = load %struct.flv_buffer*, %struct.flv_buffer** %c, align 8, !dbg !1026
  %46 = bitcast %struct.flv_buffer* %45 to i8*, !dbg !1026
  call void @free(i8* %46) #5, !dbg !1027
  store i32 0, i32* %retval, align 4, !dbg !1028
  br label %return, !dbg !1028

return:                                           ; preds = %if.end24, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !1029
  ret i32 %47, !dbg !1029
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local %struct.flv_buffer* @flv_create_writer(i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @write_header(%struct.flv_buffer* %c) #0 !dbg !1030 {
entry:
  %c.addr = alloca %struct.flv_buffer*, align 8
  store %struct.flv_buffer* %c, %struct.flv_buffer** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.flv_buffer** %c.addr, metadata !1033, metadata !DIExpression()), !dbg !1034
  %0 = load %struct.flv_buffer*, %struct.flv_buffer** %c.addr, align 8, !dbg !1035
  call void @x264_put_tag(%struct.flv_buffer* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)), !dbg !1036
  %1 = load %struct.flv_buffer*, %struct.flv_buffer** %c.addr, align 8, !dbg !1037
  call void @x264_put_byte(%struct.flv_buffer* %1, i8 zeroext 1), !dbg !1038
  %2 = load %struct.flv_buffer*, %struct.flv_buffer** %c.addr, align 8, !dbg !1039
  call void @x264_put_byte(%struct.flv_buffer* %2, i8 zeroext 1), !dbg !1040
  %3 = load %struct.flv_buffer*, %struct.flv_buffer** %c.addr, align 8, !dbg !1041
  call void @x264_put_be32(%struct.flv_buffer* %3, i32 9), !dbg !1042
  %4 = load %struct.flv_buffer*, %struct.flv_buffer** %c.addr, align 8, !dbg !1043
  call void @x264_put_be32(%struct.flv_buffer* %4, i32 0), !dbg !1044
  %5 = load %struct.flv_buffer*, %struct.flv_buffer** %c.addr, align 8, !dbg !1045
  %call = call i32 @flv_flush_data(%struct.flv_buffer* %5), !dbg !1046
  ret i32 %call, !dbg !1047
}

declare dso_local void @x264_put_tag(%struct.flv_buffer*, i8*) #4

declare dso_local void @x264_put_byte(%struct.flv_buffer*, i8 zeroext) #4

declare dso_local void @x264_put_be32(%struct.flv_buffer*, i32) #4

declare dso_local i32 @flv_flush_data(%struct.flv_buffer*) #4

declare dso_local void @x264_put_be24(%struct.flv_buffer*, i32) #4

declare dso_local void @x264_put_amf_string(%struct.flv_buffer*, i8*) #4

declare dso_local void @x264_put_amf_double(%struct.flv_buffer*, double) #4

declare dso_local void @rewrite_amf_be24(%struct.flv_buffer*, i32, i32) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @x264_put_be16(%struct.flv_buffer*, i16 zeroext) #4

declare dso_local i32 @flv_append_data(%struct.flv_buffer*, i8*, i32) #4

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #4

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @x264_is_regular_file(%struct._IO_FILE* %filehandle) #0 !dbg !1048 {
entry:
  %filehandle.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %filehandle, %struct._IO_FILE** %filehandle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %filehandle.addr, metadata !1052, metadata !DIExpression()), !dbg !1053
  ret i8 1, !dbg !1054
}

declare dso_local i64 @ftell(%struct._IO_FILE*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @rewrite_amf_double(%struct._IO_FILE* %fp, i64 %position, double %value) #0 !dbg !1055 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %position.addr = alloca i64, align 8
  %value.addr = alloca double, align 8
  %x = alloca i64, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !1058, metadata !DIExpression()), !dbg !1059
  store i64 %position, i64* %position.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %position.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1064, metadata !DIExpression()), !dbg !1065
  %0 = load double, double* %value.addr, align 8, !dbg !1066
  %call = call i64 @dbl2int(double %0), !dbg !1067
  %call1 = call i64 @endian_fix64(i64 %call), !dbg !1068
  store i64 %call1, i64* %x, align 8, !dbg !1065
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !1069
  %2 = load i64, i64* %position.addr, align 8, !dbg !1070
  %call2 = call i32 @fseek(%struct._IO_FILE* %1, i64 %2, i32 0), !dbg !1071
  %3 = bitcast i64* %x to i8*, !dbg !1072
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !1073
  %call3 = call i64 @fwrite(i8* %3, i64 8, i64 1, %struct._IO_FILE* %4), !dbg !1074
  ret void, !dbg !1075
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #4

; Function Attrs: noinline nounwind uwtable
define internal i64 @endian_fix64(i64 %x) #0 !dbg !1076 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1079, metadata !DIExpression()), !dbg !1080
  %0 = load i64, i64* %x.addr, align 8, !dbg !1081
  %shr = lshr i64 %0, 32, !dbg !1082
  %conv = trunc i64 %shr to i32, !dbg !1081
  %call = call i32 @endian_fix32(i32 %conv), !dbg !1083
  %conv1 = zext i32 %call to i64, !dbg !1083
  %1 = load i64, i64* %x.addr, align 8, !dbg !1084
  %conv2 = trunc i64 %1 to i32, !dbg !1084
  %call3 = call i32 @endian_fix32(i32 %conv2), !dbg !1085
  %conv4 = zext i32 %call3 to i64, !dbg !1086
  %shl = shl i64 %conv4, 32, !dbg !1087
  %add = add i64 %conv1, %shl, !dbg !1088
  ret i64 %add, !dbg !1089
}

declare dso_local i64 @dbl2int(double) #4

declare dso_local i32 @fseek(%struct._IO_FILE*, i64, i32) #4

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @endian_fix32(i32 %x) #0 !dbg !1090 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !1093, metadata !DIExpression()), !dbg !1094
  %0 = load i32, i32* %x.addr, align 4, !dbg !1095
  %shl = shl i32 %0, 24, !dbg !1096
  %1 = load i32, i32* %x.addr, align 4, !dbg !1097
  %shl1 = shl i32 %1, 8, !dbg !1098
  %and = and i32 %shl1, 16711680, !dbg !1099
  %add = add i32 %shl, %and, !dbg !1100
  %2 = load i32, i32* %x.addr, align 4, !dbg !1101
  %shr = lshr i32 %2, 8, !dbg !1102
  %and2 = and i32 %shr, 65280, !dbg !1103
  %add3 = add i32 %add, %and2, !dbg !1104
  %3 = load i32, i32* %x.addr, align 4, !dbg !1105
  %shr4 = lshr i32 %3, 24, !dbg !1106
  %add5 = add i32 %add3, %shr4, !dbg !1107
  ret i32 %add5, !dbg !1108
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!292, !293, !294}
!llvm.ident = !{!295}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "flv_output", scope: !2, file: !3, line: 308, type: !47, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !34, globals: !46, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "x264_src/output/flv.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !27, !30}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 48, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "x264_src/output/flv_bytestream.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "FLV_TAG_TYPE_AUDIO", value: 8, isUnsigned: true)
!10 = !DIEnumerator(name: "FLV_TAG_TYPE_VIDEO", value: 9, isUnsigned: true)
!11 = !DIEnumerator(name: "FLV_TAG_TYPE_META", value: 18, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 92, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26}
!14 = !DIEnumerator(name: "AMF_DATA_TYPE_NUMBER", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "AMF_DATA_TYPE_BOOL", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "AMF_DATA_TYPE_STRING", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "AMF_DATA_TYPE_OBJECT", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "AMF_DATA_TYPE_NULL", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "AMF_DATA_TYPE_UNDEFINED", value: 6, isUnsigned: true)
!20 = !DIEnumerator(name: "AMF_DATA_TYPE_REFERENCE", value: 7, isUnsigned: true)
!21 = !DIEnumerator(name: "AMF_DATA_TYPE_MIXEDARRAY", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "AMF_DATA_TYPE_OBJECT_END", value: 9, isUnsigned: true)
!23 = !DIEnumerator(name: "AMF_DATA_TYPE_ARRAY", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "AMF_DATA_TYPE_DATE", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "AMF_DATA_TYPE_LONG_STRING", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "AMF_DATA_TYPE_UNSUPPORTED", value: 13, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 81, baseType: !7, size: 32, elements: !28)
!28 = !{!29}
!29 = !DIEnumerator(name: "FLV_CODECID_H264", value: 7, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 86, baseType: !7, size: 32, elements: !31)
!31 = !{!32, !33}
!32 = !DIEnumerator(name: "FLV_FRAME_KEY", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "FLV_FRAME_INTER", value: 39, isUnsigned: true)
!34 = !{!35, !36, !37, !42}
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!36 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !38, line: 27, baseType: !39)
!38 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !40, line: 44, baseType: !41)
!40 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!41 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !43, line: 27, baseType: !44)
!43 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !40, line: 45, baseType: !45)
!45 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!46 = !{!0}
!47 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "cli_output_t", file: !49, line: 34, baseType: !50)
!49 = !DIFile(filename: "x264_src/output/output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!50 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !49, line: 27, size: 320, elements: !51)
!51 = !{!52, !62, !239, !252, !288}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "open_file", scope: !50, file: !49, line: 29, baseType: !53, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!54 = !DISubroutineType(types: !55)
!55 = !{!56, !57, !59}
!56 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!58 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "hnd_t", file: !61, line: 30, baseType: !35)
!61 = !DIFile(filename: "x264_src/muxers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!62 = !DIDerivedType(tag: DW_TAG_member, name: "set_param", scope: !50, file: !49, line: 30, baseType: !63, size: 64, offset: 64)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64)
!64 = !DISubroutineType(types: !65)
!65 = !{!56, !60, !66}
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_param_t", file: !68, line: 376, baseType: !69)
!68 = !DIFile(filename: "x264_src/x264.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!69 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_param_t", file: !68, line: 176, size: 5632, elements: !70)
!70 = !{!71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !119, !120, !121, !122, !126, !127, !140, !141, !142, !143, !144, !175, !217, !218, !219, !220, !221, !222, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235}
!71 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !69, file: !68, line: 179, baseType: !7, size: 32)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "i_threads", scope: !69, file: !68, line: 180, baseType: !56, size: 32, offset: 32)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "b_sliced_threads", scope: !69, file: !68, line: 181, baseType: !56, size: 32, offset: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "b_deterministic", scope: !69, file: !68, line: 182, baseType: !56, size: 32, offset: 96)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "i_sync_lookahead", scope: !69, file: !68, line: 183, baseType: !56, size: 32, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "i_width", scope: !69, file: !68, line: 186, baseType: !56, size: 32, offset: 160)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "i_height", scope: !69, file: !68, line: 187, baseType: !56, size: 32, offset: 192)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "i_csp", scope: !69, file: !68, line: 188, baseType: !56, size: 32, offset: 224)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "i_level_idc", scope: !69, file: !68, line: 189, baseType: !56, size: 32, offset: 256)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_total", scope: !69, file: !68, line: 190, baseType: !56, size: 32, offset: 288)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal_hrd", scope: !69, file: !68, line: 198, baseType: !56, size: 32, offset: 320)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "vui", scope: !69, file: !68, line: 215, baseType: !83, size: 288, offset: 352)
!83 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !69, file: !68, line: 200, size: 288, elements: !84)
!84 = !{!85, !86, !87, !88, !89, !90, !91, !92, !93}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_height", scope: !83, file: !68, line: 203, baseType: !56, size: 32)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_width", scope: !83, file: !68, line: 204, baseType: !56, size: 32, offset: 32)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "i_overscan", scope: !83, file: !68, line: 206, baseType: !56, size: 32, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "i_vidformat", scope: !83, file: !68, line: 209, baseType: !56, size: 32, offset: 96)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "b_fullrange", scope: !83, file: !68, line: 210, baseType: !56, size: 32, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "i_colorprim", scope: !83, file: !68, line: 211, baseType: !56, size: 32, offset: 160)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "i_transfer", scope: !83, file: !68, line: 212, baseType: !56, size: 32, offset: 192)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "i_colmatrix", scope: !83, file: !68, line: 213, baseType: !56, size: 32, offset: 224)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_loc", scope: !83, file: !68, line: 214, baseType: !56, size: 32, offset: 256)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_reference", scope: !69, file: !68, line: 218, baseType: !56, size: 32, offset: 640)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "i_keyint_max", scope: !69, file: !68, line: 219, baseType: !56, size: 32, offset: 672)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "i_keyint_min", scope: !69, file: !68, line: 220, baseType: !56, size: 32, offset: 704)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "i_scenecut_threshold", scope: !69, file: !68, line: 221, baseType: !56, size: 32, offset: 736)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "b_intra_refresh", scope: !69, file: !68, line: 222, baseType: !56, size: 32, offset: 768)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe", scope: !69, file: !68, line: 224, baseType: !56, size: 32, offset: 800)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_adaptive", scope: !69, file: !68, line: 225, baseType: !56, size: 32, offset: 832)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_bias", scope: !69, file: !68, line: 226, baseType: !56, size: 32, offset: 864)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_pyramid", scope: !69, file: !68, line: 227, baseType: !56, size: 32, offset: 896)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "b_deblocking_filter", scope: !69, file: !68, line: 229, baseType: !56, size: 32, offset: 928)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "i_deblocking_filter_alphac0", scope: !69, file: !68, line: 230, baseType: !56, size: 32, offset: 960)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "i_deblocking_filter_beta", scope: !69, file: !68, line: 231, baseType: !56, size: 32, offset: 992)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "b_cabac", scope: !69, file: !68, line: 233, baseType: !56, size: 32, offset: 1024)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "i_cabac_init_idc", scope: !69, file: !68, line: 234, baseType: !56, size: 32, offset: 1056)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "b_interlaced", scope: !69, file: !68, line: 236, baseType: !56, size: 32, offset: 1088)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "b_constrained_intra", scope: !69, file: !68, line: 237, baseType: !56, size: 32, offset: 1120)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "i_cqm_preset", scope: !69, file: !68, line: 239, baseType: !56, size: 32, offset: 1152)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "psz_cqm_file", scope: !69, file: !68, line: 240, baseType: !57, size: 64, offset: 1216)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4iy", scope: !69, file: !68, line: 241, baseType: !113, size: 128, offset: 1280)
!113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 128, elements: !117)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !43, line: 24, baseType: !115)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !40, line: 38, baseType: !116)
!116 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!117 = !{!118}
!118 = !DISubrange(count: 16)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4ic", scope: !69, file: !68, line: 242, baseType: !113, size: 128, offset: 1408)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4py", scope: !69, file: !68, line: 243, baseType: !113, size: 128, offset: 1536)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4pc", scope: !69, file: !68, line: 244, baseType: !113, size: 128, offset: 1664)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_8iy", scope: !69, file: !68, line: 245, baseType: !123, size: 512, offset: 1792)
!123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 512, elements: !124)
!124 = !{!125}
!125 = !DISubrange(count: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_8py", scope: !69, file: !68, line: 246, baseType: !123, size: 512, offset: 2304)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "pf_log", scope: !69, file: !68, line: 249, baseType: !128, size: 64, offset: 2816)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DISubroutineType(types: !130)
!130 = !{null, !35, !56, !131, !133}
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 308, size: 192, elements: !135)
!135 = !{!136, !137, !138, !139}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !134, file: !3, line: 308, baseType: !7, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !134, file: !3, line: 308, baseType: !7, size: 32, offset: 32)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !134, file: !3, line: 308, baseType: !35, size: 64, offset: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !134, file: !3, line: 308, baseType: !35, size: 64, offset: 128)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "p_log_private", scope: !69, file: !68, line: 250, baseType: !35, size: 64, offset: 2880)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "i_log_level", scope: !69, file: !68, line: 251, baseType: !56, size: 32, offset: 2944)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "b_visualize", scope: !69, file: !68, line: 252, baseType: !56, size: 32, offset: 2976)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "psz_dump_yuv", scope: !69, file: !68, line: 253, baseType: !57, size: 64, offset: 3008)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "analyse", scope: !69, file: !68, line: 287, baseType: !145, size: 800, offset: 3072)
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !69, file: !68, line: 256, size: 800, elements: !146)
!146 = !{!147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !167, !168, !169, !173, !174}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "intra", scope: !145, file: !68, line: 258, baseType: !7, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "inter", scope: !145, file: !68, line: 259, baseType: !7, size: 32, offset: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "b_transform_8x8", scope: !145, file: !68, line: 261, baseType: !56, size: 32, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "i_weighted_pred", scope: !145, file: !68, line: 262, baseType: !56, size: 32, offset: 96)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "b_weighted_bipred", scope: !145, file: !68, line: 263, baseType: !56, size: 32, offset: 128)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_mv_pred", scope: !145, file: !68, line: 264, baseType: !56, size: 32, offset: 160)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_qp_offset", scope: !145, file: !68, line: 265, baseType: !56, size: 32, offset: 192)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "i_me_method", scope: !145, file: !68, line: 267, baseType: !56, size: 32, offset: 224)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "i_me_range", scope: !145, file: !68, line: 268, baseType: !56, size: 32, offset: 256)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "i_mv_range", scope: !145, file: !68, line: 269, baseType: !56, size: 32, offset: 288)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "i_mv_range_thread", scope: !145, file: !68, line: 270, baseType: !56, size: 32, offset: 320)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "i_subpel_refine", scope: !145, file: !68, line: 271, baseType: !56, size: 32, offset: 352)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "b_chroma_me", scope: !145, file: !68, line: 272, baseType: !56, size: 32, offset: 384)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "b_mixed_references", scope: !145, file: !68, line: 273, baseType: !56, size: 32, offset: 416)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "i_trellis", scope: !145, file: !68, line: 274, baseType: !56, size: 32, offset: 448)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "b_fast_pskip", scope: !145, file: !68, line: 275, baseType: !56, size: 32, offset: 480)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "b_dct_decimate", scope: !145, file: !68, line: 276, baseType: !56, size: 32, offset: 512)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "i_noise_reduction", scope: !145, file: !68, line: 277, baseType: !56, size: 32, offset: 544)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "f_psy_rd", scope: !145, file: !68, line: 278, baseType: !166, size: 32, offset: 576)
!166 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "f_psy_trellis", scope: !145, file: !68, line: 279, baseType: !166, size: 32, offset: 608)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "b_psy", scope: !145, file: !68, line: 280, baseType: !56, size: 32, offset: 640)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "i_luma_deadzone", scope: !145, file: !68, line: 283, baseType: !170, size: 64, offset: 672)
!170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 64, elements: !171)
!171 = !{!172}
!172 = !DISubrange(count: 2)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "b_psnr", scope: !145, file: !68, line: 285, baseType: !56, size: 32, offset: 736)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "b_ssim", scope: !145, file: !68, line: 286, baseType: !56, size: 32, offset: 768)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !69, file: !68, line: 327, baseType: !176, size: 1152, offset: 3904)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !69, file: !68, line: 290, size: 1152, elements: !177)
!177 = !{!178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !215, !216}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "i_rc_method", scope: !176, file: !68, line: 292, baseType: !56, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_constant", scope: !176, file: !68, line: 294, baseType: !56, size: 32, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_min", scope: !176, file: !68, line: 295, baseType: !56, size: 32, offset: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_max", scope: !176, file: !68, line: 296, baseType: !56, size: 32, offset: 96)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_step", scope: !176, file: !68, line: 297, baseType: !56, size: 32, offset: 128)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "i_bitrate", scope: !176, file: !68, line: 299, baseType: !56, size: 32, offset: 160)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "f_rf_constant", scope: !176, file: !68, line: 300, baseType: !166, size: 32, offset: 192)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "f_rf_constant_max", scope: !176, file: !68, line: 301, baseType: !166, size: 32, offset: 224)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "f_rate_tolerance", scope: !176, file: !68, line: 302, baseType: !166, size: 32, offset: 256)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "i_vbv_max_bitrate", scope: !176, file: !68, line: 303, baseType: !56, size: 32, offset: 288)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "i_vbv_buffer_size", scope: !176, file: !68, line: 304, baseType: !56, size: 32, offset: 320)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "f_vbv_buffer_init", scope: !176, file: !68, line: 305, baseType: !166, size: 32, offset: 352)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "f_ip_factor", scope: !176, file: !68, line: 306, baseType: !166, size: 32, offset: 384)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "f_pb_factor", scope: !176, file: !68, line: 307, baseType: !166, size: 32, offset: 416)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "i_aq_mode", scope: !176, file: !68, line: 309, baseType: !56, size: 32, offset: 448)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "f_aq_strength", scope: !176, file: !68, line: 310, baseType: !166, size: 32, offset: 480)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "b_mb_tree", scope: !176, file: !68, line: 311, baseType: !56, size: 32, offset: 512)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "i_lookahead", scope: !176, file: !68, line: 312, baseType: !56, size: 32, offset: 544)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "b_stat_write", scope: !176, file: !68, line: 315, baseType: !56, size: 32, offset: 576)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "psz_stat_out", scope: !176, file: !68, line: 316, baseType: !57, size: 64, offset: 640)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "b_stat_read", scope: !176, file: !68, line: 317, baseType: !56, size: 32, offset: 704)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "psz_stat_in", scope: !176, file: !68, line: 318, baseType: !57, size: 64, offset: 768)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "f_qcompress", scope: !176, file: !68, line: 321, baseType: !166, size: 32, offset: 832)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "f_qblur", scope: !176, file: !68, line: 322, baseType: !166, size: 32, offset: 864)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "f_complexity_blur", scope: !176, file: !68, line: 323, baseType: !166, size: 32, offset: 896)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "zones", scope: !176, file: !68, line: 324, baseType: !204, size: 64, offset: 960)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_zone_t", file: !68, line: 174, baseType: !206)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 167, size: 256, elements: !207)
!207 = !{!208, !209, !210, !211, !212, !213}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "i_start", scope: !206, file: !68, line: 169, baseType: !56, size: 32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "i_end", scope: !206, file: !68, line: 169, baseType: !56, size: 32, offset: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "b_force_qp", scope: !206, file: !68, line: 170, baseType: !56, size: 32, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp", scope: !206, file: !68, line: 171, baseType: !56, size: 32, offset: 96)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "f_bitrate_factor", scope: !206, file: !68, line: 172, baseType: !166, size: 32, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !206, file: !68, line: 173, baseType: !214, size: 64, offset: 192)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "i_zones", scope: !176, file: !68, line: 325, baseType: !56, size: 32, offset: 1024)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "psz_zones", scope: !176, file: !68, line: 326, baseType: !57, size: 64, offset: 1088)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "b_aud", scope: !69, file: !68, line: 330, baseType: !56, size: 32, offset: 5056)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "b_repeat_headers", scope: !69, file: !68, line: 331, baseType: !56, size: 32, offset: 5088)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "b_annexb", scope: !69, file: !68, line: 332, baseType: !56, size: 32, offset: 5120)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "i_sps_id", scope: !69, file: !68, line: 334, baseType: !56, size: 32, offset: 5152)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "b_vfr_input", scope: !69, file: !68, line: 335, baseType: !56, size: 32, offset: 5184)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "i_fps_num", scope: !69, file: !68, line: 336, baseType: !223, size: 32, offset: 5216)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !43, line: 26, baseType: !224)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !40, line: 42, baseType: !7)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "i_fps_den", scope: !69, file: !68, line: 337, baseType: !223, size: 32, offset: 5248)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "i_timebase_num", scope: !69, file: !68, line: 338, baseType: !223, size: 32, offset: 5280)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "i_timebase_den", scope: !69, file: !68, line: 339, baseType: !223, size: 32, offset: 5312)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "b_dts_compress", scope: !69, file: !68, line: 340, baseType: !56, size: 32, offset: 5344)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "b_tff", scope: !69, file: !68, line: 344, baseType: !56, size: 32, offset: 5376)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "b_pic_struct", scope: !69, file: !68, line: 356, baseType: !56, size: 32, offset: 5408)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "b_fake_interlaced", scope: !69, file: !68, line: 364, baseType: !56, size: 32, offset: 5440)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_max_size", scope: !69, file: !68, line: 367, baseType: !56, size: 32, offset: 5472)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_max_mbs", scope: !69, file: !68, line: 368, baseType: !56, size: 32, offset: 5504)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_count", scope: !69, file: !68, line: 369, baseType: !56, size: 32, offset: 5536)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "param_free", scope: !69, file: !68, line: 375, baseType: !236, size: 64, offset: 5568)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!237 = !DISubroutineType(types: !238)
!238 = !{null, !35}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "write_headers", scope: !50, file: !49, line: 31, baseType: !240, size: 64, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!241 = !DISubroutineType(types: !242)
!242 = !{!56, !60, !243}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_nal_t", file: !68, line: 604, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 593, size: 192, elements: !246)
!246 = !{!247, !248, !249, !250}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref_idc", scope: !245, file: !68, line: 595, baseType: !56, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !245, file: !68, line: 596, baseType: !56, size: 32, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "i_payload", scope: !245, file: !68, line: 599, baseType: !56, size: 32, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "p_payload", scope: !245, file: !68, line: 603, baseType: !251, size: 64, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "write_frame", scope: !50, file: !49, line: 32, baseType: !253, size: 64, offset: 192)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{!56, !60, !251, !56, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_picture_t", file: !68, line: 549, baseType: !258)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 513, size: 1088, elements: !259)
!259 = !{!260, !261, !262, !263, !264, !265, !266, !267, !279, !287}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !258, file: !68, line: 521, baseType: !56, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "i_qpplus1", scope: !258, file: !68, line: 523, baseType: !56, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "i_pic_struct", scope: !258, file: !68, line: 526, baseType: !56, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "b_keyframe", scope: !258, file: !68, line: 529, baseType: !56, size: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "i_pts", scope: !258, file: !68, line: 531, baseType: !37, size: 64, offset: 128)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "i_dts", scope: !258, file: !68, line: 534, baseType: !37, size: 64, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !258, file: !68, line: 541, baseType: !66, size: 64, offset: 256)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "img", scope: !258, file: !68, line: 543, baseType: !268, size: 448, offset: 320)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_image_t", file: !68, line: 511, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 505, size: 448, elements: !270)
!270 = !{!271, !272, !273, !277}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "i_csp", scope: !269, file: !68, line: 507, baseType: !56, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "i_plane", scope: !269, file: !68, line: 508, baseType: !56, size: 32, offset: 32)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "i_stride", scope: !269, file: !68, line: 509, baseType: !274, size: 128, offset: 64)
!274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 128, elements: !275)
!275 = !{!276}
!276 = !DISubrange(count: 4)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !269, file: !68, line: 510, baseType: !278, size: 256, offset: 192)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !251, size: 256, elements: !275)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "hrd_timing", scope: !258, file: !68, line: 545, baseType: !280, size: 256, offset: 768)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_hrd_t", file: !68, line: 503, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !68, line: 496, size: 256, elements: !282)
!282 = !{!283, !284, !285, !286}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_initial_arrival_time", scope: !281, file: !68, line: 498, baseType: !36, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_final_arrival_time", scope: !281, file: !68, line: 499, baseType: !36, size: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_removal_time", scope: !281, file: !68, line: 500, baseType: !36, size: 64, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "dpb_output_time", scope: !281, file: !68, line: 502, baseType: !36, size: 64, offset: 192)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !258, file: !68, line: 548, baseType: !35, size: 64, offset: 1024)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "close_file", scope: !50, file: !49, line: 33, baseType: !289, size: 64, offset: 256)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DISubroutineType(types: !291)
!291 = !{!56, !60, !37, !37}
!292 = !{i32 7, !"Dwarf Version", i32 4}
!293 = !{i32 2, !"Debug Info Version", i32 3}
!294 = !{i32 1, !"wchar_size", i32 4}
!295 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!296 = distinct !DISubprogram(name: "open_file", scope: !3, file: !3, line: 68, type: !54, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!297 = !{}
!298 = !DILocalVariable(name: "psz_filename", arg: 1, scope: !296, file: !3, line: 68, type: !57)
!299 = !DILocation(line: 68, column: 29, scope: !296)
!300 = !DILocalVariable(name: "p_handle", arg: 2, scope: !296, file: !3, line: 68, type: !59)
!301 = !DILocation(line: 68, column: 50, scope: !296)
!302 = !DILocalVariable(name: "p_flv", scope: !296, file: !3, line: 70, type: !303)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "flv_hnd_t", file: !3, line: 55, baseType: !305)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 30, size: 960, elements: !306)
!306 = !{!307, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !305, file: !3, line: 32, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "flv_buffer", file: !6, line: 116, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flv_buffer", file: !6, line: 109, size: 256, elements: !311)
!311 = !{!312, !313, !314, !315, !372}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !310, file: !6, line: 111, baseType: !251, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "d_cur", scope: !310, file: !6, line: 112, baseType: !7, size: 32, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "d_max", scope: !310, file: !6, line: 113, baseType: !7, size: 32, offset: 96)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !310, file: !6, line: 114, baseType: !316, size: 64, offset: 128)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !318, line: 7, baseType: !319)
!318 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !320, line: 49, size: 1728, elements: !321)
!320 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!321 = !{!322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !337, !339, !340, !341, !343, !345, !347, !351, !354, !356, !359, !362, !363, !364, !367, !368}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !319, file: !320, line: 51, baseType: !56, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !319, file: !320, line: 54, baseType: !57, size: 64, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !319, file: !320, line: 55, baseType: !57, size: 64, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !319, file: !320, line: 56, baseType: !57, size: 64, offset: 192)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !319, file: !320, line: 57, baseType: !57, size: 64, offset: 256)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !319, file: !320, line: 58, baseType: !57, size: 64, offset: 320)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !319, file: !320, line: 59, baseType: !57, size: 64, offset: 384)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !319, file: !320, line: 60, baseType: !57, size: 64, offset: 448)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !319, file: !320, line: 61, baseType: !57, size: 64, offset: 512)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !319, file: !320, line: 64, baseType: !57, size: 64, offset: 576)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !319, file: !320, line: 65, baseType: !57, size: 64, offset: 640)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !319, file: !320, line: 66, baseType: !57, size: 64, offset: 704)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !319, file: !320, line: 68, baseType: !335, size: 64, offset: 768)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !320, line: 36, flags: DIFlagFwdDecl)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !319, file: !320, line: 70, baseType: !338, size: 64, offset: 832)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !319, file: !320, line: 72, baseType: !56, size: 32, offset: 896)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !319, file: !320, line: 73, baseType: !56, size: 32, offset: 928)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !319, file: !320, line: 74, baseType: !342, size: 64, offset: 960)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !40, line: 152, baseType: !41)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !319, file: !320, line: 77, baseType: !344, size: 16, offset: 1024)
!344 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !319, file: !320, line: 78, baseType: !346, size: 8, offset: 1040)
!346 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !319, file: !320, line: 79, baseType: !348, size: 8, offset: 1048)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 8, elements: !349)
!349 = !{!350}
!350 = !DISubrange(count: 1)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !319, file: !320, line: 81, baseType: !352, size: 64, offset: 1088)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !320, line: 43, baseType: null)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !319, file: !320, line: 89, baseType: !355, size: 64, offset: 1152)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !40, line: 153, baseType: !41)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !319, file: !320, line: 91, baseType: !357, size: 64, offset: 1216)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !320, line: 37, flags: DIFlagFwdDecl)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !319, file: !320, line: 92, baseType: !360, size: 64, offset: 1280)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !320, line: 38, flags: DIFlagFwdDecl)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !319, file: !320, line: 93, baseType: !338, size: 64, offset: 1344)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !319, file: !320, line: 94, baseType: !35, size: 64, offset: 1408)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !319, file: !320, line: 95, baseType: !365, size: 64, offset: 1472)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !366, line: 46, baseType: !45)
!366 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!367 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !319, file: !320, line: 96, baseType: !56, size: 32, offset: 1536)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !319, file: !320, line: 98, baseType: !369, size: 160, offset: 1568)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 160, elements: !370)
!370 = !{!371}
!371 = !DISubrange(count: 20)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "d_total", scope: !310, file: !6, line: 115, baseType: !42, size: 64, offset: 192)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "sei", scope: !305, file: !3, line: 34, baseType: !251, size: 64, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "sei_len", scope: !305, file: !3, line: 35, baseType: !56, size: 32, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "i_fps_num", scope: !305, file: !3, line: 37, baseType: !37, size: 64, offset: 192)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "i_fps_den", scope: !305, file: !3, line: 38, baseType: !37, size: 64, offset: 256)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "i_framenum", scope: !305, file: !3, line: 39, baseType: !37, size: 64, offset: 320)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "i_framerate_pos", scope: !305, file: !3, line: 41, baseType: !42, size: 64, offset: 384)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "i_duration_pos", scope: !305, file: !3, line: 42, baseType: !42, size: 64, offset: 448)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "i_filesize_pos", scope: !305, file: !3, line: 43, baseType: !42, size: 64, offset: 512)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "i_bitrate_pos", scope: !305, file: !3, line: 44, baseType: !42, size: 64, offset: 576)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "b_write_length", scope: !305, file: !3, line: 46, baseType: !114, size: 8, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "i_prev_dts", scope: !305, file: !3, line: 47, baseType: !37, size: 64, offset: 704)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "i_prev_pts", scope: !305, file: !3, line: 48, baseType: !37, size: 64, offset: 768)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "i_timebase_num", scope: !305, file: !3, line: 50, baseType: !223, size: 32, offset: 832)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "i_timebase_den", scope: !305, file: !3, line: 51, baseType: !223, size: 32, offset: 864)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "b_vfr_input", scope: !305, file: !3, line: 52, baseType: !56, size: 32, offset: 896)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !305, file: !3, line: 54, baseType: !7, size: 32, offset: 928)
!389 = !DILocation(line: 70, column: 16, scope: !296)
!390 = !DILocation(line: 70, column: 24, scope: !296)
!391 = !DILocation(line: 71, column: 6, scope: !296)
!392 = !DILocation(line: 71, column: 15, scope: !296)
!393 = !DILocation(line: 72, column: 10, scope: !394)
!394 = distinct !DILexicalBlock(scope: !296, file: !3, line: 72, column: 9)
!395 = !DILocation(line: 72, column: 9, scope: !296)
!396 = !DILocation(line: 73, column: 9, scope: !394)
!397 = !DILocation(line: 74, column: 13, scope: !296)
!398 = !DILocation(line: 74, column: 5, scope: !296)
!399 = !DILocation(line: 76, column: 35, scope: !296)
!400 = !DILocation(line: 76, column: 16, scope: !296)
!401 = !DILocation(line: 76, column: 5, scope: !296)
!402 = !DILocation(line: 76, column: 12, scope: !296)
!403 = !DILocation(line: 76, column: 14, scope: !296)
!404 = !DILocation(line: 77, column: 10, scope: !405)
!405 = distinct !DILexicalBlock(scope: !296, file: !3, line: 77, column: 9)
!406 = !DILocation(line: 77, column: 17, scope: !405)
!407 = !DILocation(line: 77, column: 9, scope: !296)
!408 = !DILocation(line: 78, column: 9, scope: !405)
!409 = !DILocation(line: 80, column: 5, scope: !296)
!410 = !DILocation(line: 80, column: 5, scope: !411)
!411 = distinct !DILexicalBlock(scope: !412, file: !3, line: 80, column: 5)
!412 = distinct !DILexicalBlock(scope: !296, file: !3, line: 80, column: 5)
!413 = !DILocation(line: 80, column: 5, scope: !412)
!414 = !DILocation(line: 81, column: 17, scope: !296)
!415 = !DILocation(line: 81, column: 6, scope: !296)
!416 = !DILocation(line: 81, column: 15, scope: !296)
!417 = !DILocation(line: 83, column: 5, scope: !296)
!418 = !DILocation(line: 84, column: 1, scope: !296)
!419 = distinct !DISubprogram(name: "set_param", scope: !3, file: !3, line: 86, type: !64, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!420 = !DILocalVariable(name: "handle", arg: 1, scope: !419, file: !3, line: 86, type: !60)
!421 = !DILocation(line: 86, column: 29, scope: !419)
!422 = !DILocalVariable(name: "p_param", arg: 2, scope: !419, file: !3, line: 86, type: !66)
!423 = !DILocation(line: 86, column: 51, scope: !419)
!424 = !DILocalVariable(name: "p_flv", scope: !419, file: !3, line: 88, type: !303)
!425 = !DILocation(line: 88, column: 16, scope: !419)
!426 = !DILocation(line: 88, column: 24, scope: !419)
!427 = !DILocalVariable(name: "c", scope: !419, file: !3, line: 89, type: !308)
!428 = !DILocation(line: 89, column: 17, scope: !419)
!429 = !DILocation(line: 89, column: 21, scope: !419)
!430 = !DILocation(line: 89, column: 28, scope: !419)
!431 = !DILocation(line: 91, column: 20, scope: !419)
!432 = !DILocation(line: 91, column: 5, scope: !419)
!433 = !DILocalVariable(name: "start", scope: !419, file: !3, line: 93, type: !56)
!434 = !DILocation(line: 93, column: 9, scope: !419)
!435 = !DILocation(line: 93, column: 17, scope: !419)
!436 = !DILocation(line: 93, column: 20, scope: !419)
!437 = !DILocation(line: 94, column: 20, scope: !419)
!438 = !DILocation(line: 94, column: 5, scope: !419)
!439 = !DILocation(line: 95, column: 20, scope: !419)
!440 = !DILocation(line: 95, column: 5, scope: !419)
!441 = !DILocation(line: 96, column: 20, scope: !419)
!442 = !DILocation(line: 96, column: 5, scope: !419)
!443 = !DILocation(line: 98, column: 20, scope: !419)
!444 = !DILocation(line: 98, column: 5, scope: !419)
!445 = !DILocation(line: 99, column: 26, scope: !419)
!446 = !DILocation(line: 99, column: 5, scope: !419)
!447 = !DILocation(line: 101, column: 20, scope: !419)
!448 = !DILocation(line: 101, column: 5, scope: !419)
!449 = !DILocation(line: 102, column: 20, scope: !419)
!450 = !DILocation(line: 102, column: 5, scope: !419)
!451 = !DILocation(line: 104, column: 26, scope: !419)
!452 = !DILocation(line: 104, column: 5, scope: !419)
!453 = !DILocation(line: 105, column: 26, scope: !419)
!454 = !DILocation(line: 105, column: 29, scope: !419)
!455 = !DILocation(line: 105, column: 38, scope: !419)
!456 = !DILocation(line: 105, column: 5, scope: !419)
!457 = !DILocation(line: 107, column: 26, scope: !419)
!458 = !DILocation(line: 107, column: 5, scope: !419)
!459 = !DILocation(line: 108, column: 26, scope: !419)
!460 = !DILocation(line: 108, column: 29, scope: !419)
!461 = !DILocation(line: 108, column: 38, scope: !419)
!462 = !DILocation(line: 108, column: 5, scope: !419)
!463 = !DILocation(line: 110, column: 26, scope: !419)
!464 = !DILocation(line: 110, column: 5, scope: !419)
!465 = !DILocation(line: 112, column: 10, scope: !466)
!466 = distinct !DILexicalBlock(scope: !419, file: !3, line: 112, column: 9)
!467 = !DILocation(line: 112, column: 19, scope: !466)
!468 = !DILocation(line: 112, column: 9, scope: !419)
!469 = !DILocation(line: 113, column: 30, scope: !466)
!470 = !DILocation(line: 113, column: 41, scope: !466)
!471 = !DILocation(line: 113, column: 50, scope: !466)
!472 = !DILocation(line: 113, column: 33, scope: !466)
!473 = !DILocation(line: 113, column: 62, scope: !466)
!474 = !DILocation(line: 113, column: 71, scope: !466)
!475 = !DILocation(line: 113, column: 60, scope: !466)
!476 = !DILocation(line: 113, column: 9, scope: !466)
!477 = !DILocation(line: 116, column: 34, scope: !478)
!478 = distinct !DILexicalBlock(scope: !466, file: !3, line: 115, column: 5)
!479 = !DILocation(line: 116, column: 37, scope: !478)
!480 = !DILocation(line: 116, column: 45, scope: !478)
!481 = !DILocation(line: 116, column: 48, scope: !478)
!482 = !DILocation(line: 116, column: 43, scope: !478)
!483 = !DILocation(line: 116, column: 56, scope: !478)
!484 = !DILocation(line: 116, column: 9, scope: !478)
!485 = !DILocation(line: 116, column: 16, scope: !478)
!486 = !DILocation(line: 116, column: 32, scope: !478)
!487 = !DILocation(line: 117, column: 30, scope: !478)
!488 = !DILocation(line: 117, column: 9, scope: !478)
!489 = !DILocation(line: 120, column: 26, scope: !419)
!490 = !DILocation(line: 120, column: 5, scope: !419)
!491 = !DILocation(line: 121, column: 26, scope: !419)
!492 = !DILocation(line: 121, column: 5, scope: !419)
!493 = !DILocation(line: 123, column: 26, scope: !419)
!494 = !DILocation(line: 123, column: 5, scope: !419)
!495 = !DILocation(line: 124, column: 29, scope: !419)
!496 = !DILocation(line: 124, column: 32, scope: !419)
!497 = !DILocation(line: 124, column: 40, scope: !419)
!498 = !DILocation(line: 124, column: 43, scope: !419)
!499 = !DILocation(line: 124, column: 38, scope: !419)
!500 = !DILocation(line: 124, column: 51, scope: !419)
!501 = !DILocation(line: 124, column: 5, scope: !419)
!502 = !DILocation(line: 124, column: 12, scope: !419)
!503 = !DILocation(line: 124, column: 27, scope: !419)
!504 = !DILocation(line: 125, column: 26, scope: !419)
!505 = !DILocation(line: 125, column: 5, scope: !419)
!506 = !DILocation(line: 127, column: 26, scope: !419)
!507 = !DILocation(line: 127, column: 5, scope: !419)
!508 = !DILocation(line: 128, column: 29, scope: !419)
!509 = !DILocation(line: 128, column: 32, scope: !419)
!510 = !DILocation(line: 128, column: 40, scope: !419)
!511 = !DILocation(line: 128, column: 43, scope: !419)
!512 = !DILocation(line: 128, column: 38, scope: !419)
!513 = !DILocation(line: 128, column: 51, scope: !419)
!514 = !DILocation(line: 128, column: 5, scope: !419)
!515 = !DILocation(line: 128, column: 12, scope: !419)
!516 = !DILocation(line: 128, column: 27, scope: !419)
!517 = !DILocation(line: 129, column: 26, scope: !419)
!518 = !DILocation(line: 129, column: 5, scope: !419)
!519 = !DILocation(line: 131, column: 26, scope: !419)
!520 = !DILocation(line: 131, column: 5, scope: !419)
!521 = !DILocation(line: 132, column: 28, scope: !419)
!522 = !DILocation(line: 132, column: 31, scope: !419)
!523 = !DILocation(line: 132, column: 39, scope: !419)
!524 = !DILocation(line: 132, column: 42, scope: !419)
!525 = !DILocation(line: 132, column: 37, scope: !419)
!526 = !DILocation(line: 132, column: 50, scope: !419)
!527 = !DILocation(line: 132, column: 5, scope: !419)
!528 = !DILocation(line: 132, column: 12, scope: !419)
!529 = !DILocation(line: 132, column: 26, scope: !419)
!530 = !DILocation(line: 133, column: 26, scope: !419)
!531 = !DILocation(line: 133, column: 5, scope: !419)
!532 = !DILocation(line: 135, column: 26, scope: !419)
!533 = !DILocation(line: 135, column: 5, scope: !419)
!534 = !DILocation(line: 136, column: 20, scope: !419)
!535 = !DILocation(line: 136, column: 5, scope: !419)
!536 = !DILocalVariable(name: "length", scope: !419, file: !3, line: 138, type: !7)
!537 = !DILocation(line: 138, column: 14, scope: !419)
!538 = !DILocation(line: 138, column: 23, scope: !419)
!539 = !DILocation(line: 138, column: 26, scope: !419)
!540 = !DILocation(line: 138, column: 34, scope: !419)
!541 = !DILocation(line: 138, column: 32, scope: !419)
!542 = !DILocation(line: 139, column: 23, scope: !419)
!543 = !DILocation(line: 139, column: 26, scope: !419)
!544 = !DILocation(line: 139, column: 33, scope: !419)
!545 = !DILocation(line: 139, column: 39, scope: !419)
!546 = !DILocation(line: 139, column: 5, scope: !419)
!547 = !DILocation(line: 141, column: 20, scope: !419)
!548 = !DILocation(line: 141, column: 23, scope: !419)
!549 = !DILocation(line: 141, column: 30, scope: !419)
!550 = !DILocation(line: 141, column: 5, scope: !419)
!551 = !DILocation(line: 143, column: 24, scope: !419)
!552 = !DILocation(line: 143, column: 33, scope: !419)
!553 = !DILocation(line: 143, column: 5, scope: !419)
!554 = !DILocation(line: 143, column: 12, scope: !419)
!555 = !DILocation(line: 143, column: 22, scope: !419)
!556 = !DILocation(line: 144, column: 24, scope: !419)
!557 = !DILocation(line: 144, column: 33, scope: !419)
!558 = !DILocation(line: 144, column: 5, scope: !419)
!559 = !DILocation(line: 144, column: 12, scope: !419)
!560 = !DILocation(line: 144, column: 22, scope: !419)
!561 = !DILocation(line: 145, column: 29, scope: !419)
!562 = !DILocation(line: 145, column: 38, scope: !419)
!563 = !DILocation(line: 145, column: 5, scope: !419)
!564 = !DILocation(line: 145, column: 12, scope: !419)
!565 = !DILocation(line: 145, column: 27, scope: !419)
!566 = !DILocation(line: 146, column: 29, scope: !419)
!567 = !DILocation(line: 146, column: 38, scope: !419)
!568 = !DILocation(line: 146, column: 5, scope: !419)
!569 = !DILocation(line: 146, column: 12, scope: !419)
!570 = !DILocation(line: 146, column: 27, scope: !419)
!571 = !DILocation(line: 147, column: 26, scope: !419)
!572 = !DILocation(line: 147, column: 35, scope: !419)
!573 = !DILocation(line: 147, column: 5, scope: !419)
!574 = !DILocation(line: 147, column: 12, scope: !419)
!575 = !DILocation(line: 147, column: 24, scope: !419)
!576 = !DILocation(line: 149, column: 5, scope: !419)
!577 = distinct !DISubprogram(name: "write_headers", scope: !3, file: !3, line: 152, type: !241, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!578 = !DILocalVariable(name: "handle", arg: 1, scope: !577, file: !3, line: 152, type: !60)
!579 = !DILocation(line: 152, column: 33, scope: !577)
!580 = !DILocalVariable(name: "p_nal", arg: 2, scope: !577, file: !3, line: 152, type: !243)
!581 = !DILocation(line: 152, column: 53, scope: !577)
!582 = !DILocalVariable(name: "p_flv", scope: !577, file: !3, line: 154, type: !303)
!583 = !DILocation(line: 154, column: 16, scope: !577)
!584 = !DILocation(line: 154, column: 24, scope: !577)
!585 = !DILocalVariable(name: "c", scope: !577, file: !3, line: 155, type: !308)
!586 = !DILocation(line: 155, column: 17, scope: !577)
!587 = !DILocation(line: 155, column: 21, scope: !577)
!588 = !DILocation(line: 155, column: 28, scope: !577)
!589 = !DILocalVariable(name: "sps_size", scope: !577, file: !3, line: 157, type: !56)
!590 = !DILocation(line: 157, column: 9, scope: !577)
!591 = !DILocation(line: 157, column: 20, scope: !577)
!592 = !DILocation(line: 157, column: 29, scope: !577)
!593 = !DILocalVariable(name: "pps_size", scope: !577, file: !3, line: 158, type: !56)
!594 = !DILocation(line: 158, column: 9, scope: !577)
!595 = !DILocation(line: 158, column: 20, scope: !577)
!596 = !DILocation(line: 158, column: 29, scope: !577)
!597 = !DILocalVariable(name: "sei_size", scope: !577, file: !3, line: 159, type: !56)
!598 = !DILocation(line: 159, column: 9, scope: !577)
!599 = !DILocation(line: 159, column: 20, scope: !577)
!600 = !DILocation(line: 159, column: 29, scope: !577)
!601 = !DILocation(line: 165, column: 26, scope: !577)
!602 = !DILocation(line: 165, column: 18, scope: !577)
!603 = !DILocation(line: 165, column: 5, scope: !577)
!604 = !DILocation(line: 165, column: 12, scope: !577)
!605 = !DILocation(line: 165, column: 16, scope: !577)
!606 = !DILocation(line: 166, column: 10, scope: !607)
!607 = distinct !DILexicalBlock(scope: !577, file: !3, line: 166, column: 9)
!608 = !DILocation(line: 166, column: 17, scope: !607)
!609 = !DILocation(line: 166, column: 9, scope: !577)
!610 = !DILocation(line: 167, column: 9, scope: !607)
!611 = !DILocation(line: 168, column: 22, scope: !577)
!612 = !DILocation(line: 168, column: 5, scope: !577)
!613 = !DILocation(line: 168, column: 12, scope: !577)
!614 = !DILocation(line: 168, column: 20, scope: !577)
!615 = !DILocation(line: 170, column: 13, scope: !577)
!616 = !DILocation(line: 170, column: 20, scope: !577)
!617 = !DILocation(line: 170, column: 25, scope: !577)
!618 = !DILocation(line: 170, column: 34, scope: !577)
!619 = !DILocation(line: 170, column: 45, scope: !577)
!620 = !DILocation(line: 170, column: 5, scope: !577)
!621 = !DILocalVariable(name: "sps", scope: !577, file: !3, line: 173, type: !251)
!622 = !DILocation(line: 173, column: 14, scope: !577)
!623 = !DILocation(line: 173, column: 20, scope: !577)
!624 = !DILocation(line: 173, column: 29, scope: !577)
!625 = !DILocation(line: 173, column: 39, scope: !577)
!626 = !DILocation(line: 175, column: 20, scope: !577)
!627 = !DILocation(line: 175, column: 5, scope: !577)
!628 = !DILocation(line: 176, column: 20, scope: !577)
!629 = !DILocation(line: 176, column: 5, scope: !577)
!630 = !DILocation(line: 177, column: 20, scope: !577)
!631 = !DILocation(line: 177, column: 5, scope: !577)
!632 = !DILocation(line: 178, column: 20, scope: !577)
!633 = !DILocation(line: 178, column: 5, scope: !577)
!634 = !DILocation(line: 179, column: 20, scope: !577)
!635 = !DILocation(line: 179, column: 5, scope: !577)
!636 = !DILocation(line: 180, column: 20, scope: !577)
!637 = !DILocation(line: 180, column: 23, scope: !577)
!638 = !DILocation(line: 180, column: 5, scope: !577)
!639 = !DILocation(line: 180, column: 12, scope: !577)
!640 = !DILocation(line: 180, column: 18, scope: !577)
!641 = !DILocation(line: 182, column: 20, scope: !577)
!642 = !DILocation(line: 182, column: 5, scope: !577)
!643 = !DILocation(line: 183, column: 20, scope: !577)
!644 = !DILocation(line: 183, column: 5, scope: !577)
!645 = !DILocation(line: 184, column: 20, scope: !577)
!646 = !DILocation(line: 184, column: 5, scope: !577)
!647 = !DILocation(line: 186, column: 20, scope: !577)
!648 = !DILocation(line: 186, column: 5, scope: !577)
!649 = !DILocation(line: 187, column: 20, scope: !577)
!650 = !DILocation(line: 187, column: 23, scope: !577)
!651 = !DILocation(line: 187, column: 5, scope: !577)
!652 = !DILocation(line: 188, column: 20, scope: !577)
!653 = !DILocation(line: 188, column: 23, scope: !577)
!654 = !DILocation(line: 188, column: 5, scope: !577)
!655 = !DILocation(line: 189, column: 20, scope: !577)
!656 = !DILocation(line: 189, column: 23, scope: !577)
!657 = !DILocation(line: 189, column: 5, scope: !577)
!658 = !DILocation(line: 190, column: 20, scope: !577)
!659 = !DILocation(line: 190, column: 5, scope: !577)
!660 = !DILocation(line: 191, column: 20, scope: !577)
!661 = !DILocation(line: 191, column: 5, scope: !577)
!662 = !DILocation(line: 193, column: 20, scope: !577)
!663 = !DILocation(line: 193, column: 23, scope: !577)
!664 = !DILocation(line: 193, column: 32, scope: !577)
!665 = !DILocation(line: 193, column: 5, scope: !577)
!666 = !DILocation(line: 194, column: 22, scope: !577)
!667 = !DILocation(line: 194, column: 25, scope: !577)
!668 = !DILocation(line: 194, column: 30, scope: !577)
!669 = !DILocation(line: 194, column: 39, scope: !577)
!670 = !DILocation(line: 194, column: 5, scope: !577)
!671 = !DILocation(line: 197, column: 20, scope: !577)
!672 = !DILocation(line: 197, column: 5, scope: !577)
!673 = !DILocation(line: 198, column: 20, scope: !577)
!674 = !DILocation(line: 198, column: 23, scope: !577)
!675 = !DILocation(line: 198, column: 32, scope: !577)
!676 = !DILocation(line: 198, column: 5, scope: !577)
!677 = !DILocation(line: 199, column: 22, scope: !577)
!678 = !DILocation(line: 199, column: 25, scope: !577)
!679 = !DILocation(line: 199, column: 34, scope: !577)
!680 = !DILocation(line: 199, column: 44, scope: !577)
!681 = !DILocation(line: 199, column: 49, scope: !577)
!682 = !DILocation(line: 199, column: 58, scope: !577)
!683 = !DILocation(line: 199, column: 5, scope: !577)
!684 = !DILocalVariable(name: "length", scope: !577, file: !3, line: 202, type: !7)
!685 = !DILocation(line: 202, column: 14, scope: !577)
!686 = !DILocation(line: 202, column: 23, scope: !577)
!687 = !DILocation(line: 202, column: 26, scope: !577)
!688 = !DILocation(line: 202, column: 34, scope: !577)
!689 = !DILocation(line: 202, column: 41, scope: !577)
!690 = !DILocation(line: 202, column: 32, scope: !577)
!691 = !DILocation(line: 203, column: 23, scope: !577)
!692 = !DILocation(line: 203, column: 26, scope: !577)
!693 = !DILocation(line: 203, column: 34, scope: !577)
!694 = !DILocation(line: 203, column: 41, scope: !577)
!695 = !DILocation(line: 203, column: 47, scope: !577)
!696 = !DILocation(line: 203, column: 5, scope: !577)
!697 = !DILocation(line: 204, column: 20, scope: !577)
!698 = !DILocation(line: 204, column: 23, scope: !577)
!699 = !DILocation(line: 204, column: 30, scope: !577)
!700 = !DILocation(line: 204, column: 5, scope: !577)
!701 = !DILocation(line: 205, column: 5, scope: !577)
!702 = !DILocation(line: 205, column: 5, scope: !703)
!703 = distinct !DILexicalBlock(scope: !704, file: !3, line: 205, column: 5)
!704 = distinct !DILexicalBlock(scope: !577, file: !3, line: 205, column: 5)
!705 = !DILocation(line: 205, column: 5, scope: !704)
!706 = !DILocation(line: 207, column: 12, scope: !577)
!707 = !DILocation(line: 207, column: 23, scope: !577)
!708 = !DILocation(line: 207, column: 21, scope: !577)
!709 = !DILocation(line: 207, column: 34, scope: !577)
!710 = !DILocation(line: 207, column: 32, scope: !577)
!711 = !DILocation(line: 207, column: 5, scope: !577)
!712 = !DILocation(line: 208, column: 1, scope: !577)
!713 = distinct !DISubprogram(name: "write_frame", scope: !3, file: !3, line: 210, type: !254, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!714 = !DILocalVariable(name: "handle", arg: 1, scope: !713, file: !3, line: 210, type: !60)
!715 = !DILocation(line: 210, column: 31, scope: !713)
!716 = !DILocalVariable(name: "p_nalu", arg: 2, scope: !713, file: !3, line: 210, type: !251)
!717 = !DILocation(line: 210, column: 48, scope: !713)
!718 = !DILocalVariable(name: "i_size", arg: 3, scope: !713, file: !3, line: 210, type: !56)
!719 = !DILocation(line: 210, column: 60, scope: !713)
!720 = !DILocalVariable(name: "p_picture", arg: 4, scope: !713, file: !3, line: 210, type: !256)
!721 = !DILocation(line: 210, column: 84, scope: !713)
!722 = !DILocalVariable(name: "p_flv", scope: !713, file: !3, line: 212, type: !303)
!723 = !DILocation(line: 212, column: 16, scope: !713)
!724 = !DILocation(line: 212, column: 24, scope: !713)
!725 = !DILocalVariable(name: "c", scope: !713, file: !3, line: 213, type: !308)
!726 = !DILocation(line: 213, column: 17, scope: !713)
!727 = !DILocation(line: 213, column: 21, scope: !713)
!728 = !DILocation(line: 213, column: 28, scope: !713)
!729 = !DILocalVariable(name: "dts", scope: !713, file: !3, line: 215, type: !37)
!730 = !DILocation(line: 215, column: 13, scope: !713)
!731 = !DILocation(line: 215, column: 31, scope: !713)
!732 = !DILocation(line: 215, column: 42, scope: !713)
!733 = !DILocation(line: 215, column: 48, scope: !713)
!734 = !DILocation(line: 215, column: 66, scope: !713)
!735 = !DILocation(line: 215, column: 73, scope: !713)
!736 = !DILocation(line: 215, column: 58, scope: !713)
!737 = !DILocation(line: 215, column: 90, scope: !713)
!738 = !DILocation(line: 215, column: 97, scope: !713)
!739 = !DILocation(line: 215, column: 88, scope: !713)
!740 = !DILocation(line: 215, column: 55, scope: !713)
!741 = !DILocation(line: 215, column: 114, scope: !713)
!742 = !DILocation(line: 215, column: 19, scope: !713)
!743 = !DILocalVariable(name: "cts", scope: !713, file: !3, line: 216, type: !37)
!744 = !DILocation(line: 216, column: 13, scope: !713)
!745 = !DILocation(line: 216, column: 31, scope: !713)
!746 = !DILocation(line: 216, column: 42, scope: !713)
!747 = !DILocation(line: 216, column: 48, scope: !713)
!748 = !DILocation(line: 216, column: 66, scope: !713)
!749 = !DILocation(line: 216, column: 73, scope: !713)
!750 = !DILocation(line: 216, column: 58, scope: !713)
!751 = !DILocation(line: 216, column: 90, scope: !713)
!752 = !DILocation(line: 216, column: 97, scope: !713)
!753 = !DILocation(line: 216, column: 88, scope: !713)
!754 = !DILocation(line: 216, column: 55, scope: !713)
!755 = !DILocation(line: 216, column: 114, scope: !713)
!756 = !DILocation(line: 216, column: 19, scope: !713)
!757 = !DILocalVariable(name: "offset", scope: !713, file: !3, line: 217, type: !37)
!758 = !DILocation(line: 217, column: 13, scope: !713)
!759 = !DILocation(line: 217, column: 22, scope: !713)
!760 = !DILocation(line: 217, column: 28, scope: !713)
!761 = !DILocation(line: 217, column: 26, scope: !713)
!762 = !DILocation(line: 219, column: 9, scope: !763)
!763 = distinct !DILexicalBlock(scope: !713, file: !3, line: 219, column: 9)
!764 = !DILocation(line: 219, column: 16, scope: !763)
!765 = !DILocation(line: 219, column: 9, scope: !713)
!766 = !DILocalVariable(name: "prev_dts", scope: !767, file: !3, line: 221, type: !37)
!767 = distinct !DILexicalBlock(scope: !763, file: !3, line: 220, column: 5)
!768 = !DILocation(line: 221, column: 17, scope: !767)
!769 = !DILocation(line: 221, column: 40, scope: !767)
!770 = !DILocation(line: 221, column: 47, scope: !767)
!771 = !DILocation(line: 221, column: 58, scope: !767)
!772 = !DILocation(line: 221, column: 76, scope: !767)
!773 = !DILocation(line: 221, column: 83, scope: !767)
!774 = !DILocation(line: 221, column: 68, scope: !767)
!775 = !DILocation(line: 221, column: 100, scope: !767)
!776 = !DILocation(line: 221, column: 107, scope: !767)
!777 = !DILocation(line: 221, column: 98, scope: !767)
!778 = !DILocation(line: 221, column: 65, scope: !767)
!779 = !DILocation(line: 221, column: 124, scope: !767)
!780 = !DILocation(line: 221, column: 28, scope: !767)
!781 = !DILocalVariable(name: "prev_cts", scope: !767, file: !3, line: 222, type: !37)
!782 = !DILocation(line: 222, column: 17, scope: !767)
!783 = !DILocation(line: 222, column: 40, scope: !767)
!784 = !DILocation(line: 222, column: 47, scope: !767)
!785 = !DILocation(line: 222, column: 58, scope: !767)
!786 = !DILocation(line: 222, column: 76, scope: !767)
!787 = !DILocation(line: 222, column: 83, scope: !767)
!788 = !DILocation(line: 222, column: 68, scope: !767)
!789 = !DILocation(line: 222, column: 100, scope: !767)
!790 = !DILocation(line: 222, column: 107, scope: !767)
!791 = !DILocation(line: 222, column: 98, scope: !767)
!792 = !DILocation(line: 222, column: 65, scope: !767)
!793 = !DILocation(line: 222, column: 124, scope: !767)
!794 = !DILocation(line: 222, column: 28, scope: !767)
!795 = !DILocation(line: 223, column: 13, scope: !796)
!796 = distinct !DILexicalBlock(scope: !767, file: !3, line: 223, column: 13)
!797 = !DILocation(line: 223, column: 25, scope: !796)
!798 = !DILocation(line: 223, column: 22, scope: !796)
!799 = !DILocation(line: 223, column: 13, scope: !767)
!800 = !DILocalVariable(name: "fps", scope: !801, file: !3, line: 225, type: !36)
!801 = distinct !DILexicalBlock(scope: !796, file: !3, line: 224, column: 9)
!802 = !DILocation(line: 225, column: 20, scope: !801)
!803 = !DILocation(line: 225, column: 35, scope: !801)
!804 = !DILocation(line: 225, column: 42, scope: !801)
!805 = !DILocation(line: 225, column: 27, scope: !801)
!806 = !DILocation(line: 225, column: 59, scope: !801)
!807 = !DILocation(line: 225, column: 66, scope: !801)
!808 = !DILocation(line: 225, column: 57, scope: !801)
!809 = !DILocation(line: 225, column: 85, scope: !801)
!810 = !DILocation(line: 225, column: 96, scope: !801)
!811 = !DILocation(line: 225, column: 104, scope: !801)
!812 = !DILocation(line: 225, column: 111, scope: !801)
!813 = !DILocation(line: 225, column: 102, scope: !801)
!814 = !DILocation(line: 225, column: 84, scope: !801)
!815 = !DILocation(line: 225, column: 82, scope: !801)
!816 = !DILocation(line: 226, column: 22, scope: !801)
!817 = !DILocation(line: 227, column: 96, scope: !801)
!818 = !DILocation(line: 227, column: 101, scope: !801)
!819 = !DILocation(line: 226, column: 13, scope: !801)
!820 = !DILocation(line: 228, column: 9, scope: !801)
!821 = !DILocation(line: 229, column: 13, scope: !822)
!822 = distinct !DILexicalBlock(scope: !767, file: !3, line: 229, column: 13)
!823 = !DILocation(line: 229, column: 25, scope: !822)
!824 = !DILocation(line: 229, column: 22, scope: !822)
!825 = !DILocation(line: 229, column: 13, scope: !767)
!826 = !DILocalVariable(name: "fps", scope: !827, file: !3, line: 231, type: !36)
!827 = distinct !DILexicalBlock(scope: !822, file: !3, line: 230, column: 9)
!828 = !DILocation(line: 231, column: 20, scope: !827)
!829 = !DILocation(line: 231, column: 35, scope: !827)
!830 = !DILocation(line: 231, column: 42, scope: !827)
!831 = !DILocation(line: 231, column: 27, scope: !827)
!832 = !DILocation(line: 231, column: 59, scope: !827)
!833 = !DILocation(line: 231, column: 66, scope: !827)
!834 = !DILocation(line: 231, column: 57, scope: !827)
!835 = !DILocation(line: 231, column: 85, scope: !827)
!836 = !DILocation(line: 231, column: 96, scope: !827)
!837 = !DILocation(line: 231, column: 104, scope: !827)
!838 = !DILocation(line: 231, column: 111, scope: !827)
!839 = !DILocation(line: 231, column: 102, scope: !827)
!840 = !DILocation(line: 231, column: 84, scope: !827)
!841 = !DILocation(line: 231, column: 82, scope: !827)
!842 = !DILocation(line: 232, column: 22, scope: !827)
!843 = !DILocation(line: 233, column: 99, scope: !827)
!844 = !DILocation(line: 233, column: 104, scope: !827)
!845 = !DILocation(line: 232, column: 13, scope: !827)
!846 = !DILocation(line: 234, column: 9, scope: !827)
!847 = !DILocation(line: 235, column: 5, scope: !767)
!848 = !DILocation(line: 236, column: 25, scope: !713)
!849 = !DILocation(line: 236, column: 36, scope: !713)
!850 = !DILocation(line: 236, column: 5, scope: !713)
!851 = !DILocation(line: 236, column: 12, scope: !713)
!852 = !DILocation(line: 236, column: 23, scope: !713)
!853 = !DILocation(line: 237, column: 25, scope: !713)
!854 = !DILocation(line: 237, column: 36, scope: !713)
!855 = !DILocation(line: 237, column: 5, scope: !713)
!856 = !DILocation(line: 237, column: 12, scope: !713)
!857 = !DILocation(line: 237, column: 23, scope: !713)
!858 = !DILocation(line: 240, column: 20, scope: !713)
!859 = !DILocation(line: 240, column: 5, scope: !713)
!860 = !DILocation(line: 241, column: 20, scope: !713)
!861 = !DILocation(line: 241, column: 5, scope: !713)
!862 = !DILocation(line: 242, column: 20, scope: !713)
!863 = !DILocation(line: 242, column: 23, scope: !713)
!864 = !DILocation(line: 242, column: 5, scope: !713)
!865 = !DILocation(line: 243, column: 20, scope: !713)
!866 = !DILocation(line: 243, column: 23, scope: !713)
!867 = !DILocation(line: 243, column: 27, scope: !713)
!868 = !DILocation(line: 243, column: 5, scope: !713)
!869 = !DILocation(line: 244, column: 20, scope: !713)
!870 = !DILocation(line: 244, column: 5, scope: !713)
!871 = !DILocation(line: 246, column: 20, scope: !713)
!872 = !DILocation(line: 246, column: 23, scope: !713)
!873 = !DILocation(line: 246, column: 5, scope: !713)
!874 = !DILocation(line: 246, column: 12, scope: !713)
!875 = !DILocation(line: 246, column: 18, scope: !713)
!876 = !DILocation(line: 247, column: 20, scope: !713)
!877 = !DILocation(line: 247, column: 23, scope: !713)
!878 = !DILocation(line: 247, column: 34, scope: !713)
!879 = !DILocation(line: 247, column: 5, scope: !713)
!880 = !DILocation(line: 248, column: 20, scope: !713)
!881 = !DILocation(line: 248, column: 5, scope: !713)
!882 = !DILocation(line: 249, column: 20, scope: !713)
!883 = !DILocation(line: 249, column: 23, scope: !713)
!884 = !DILocation(line: 249, column: 5, scope: !713)
!885 = !DILocation(line: 251, column: 9, scope: !886)
!886 = distinct !DILexicalBlock(scope: !713, file: !3, line: 251, column: 9)
!887 = !DILocation(line: 251, column: 16, scope: !886)
!888 = !DILocation(line: 251, column: 9, scope: !713)
!889 = !DILocation(line: 253, column: 26, scope: !890)
!890 = distinct !DILexicalBlock(scope: !886, file: !3, line: 252, column: 5)
!891 = !DILocation(line: 253, column: 29, scope: !890)
!892 = !DILocation(line: 253, column: 36, scope: !890)
!893 = !DILocation(line: 253, column: 41, scope: !890)
!894 = !DILocation(line: 253, column: 48, scope: !890)
!895 = !DILocation(line: 253, column: 9, scope: !890)
!896 = !DILocation(line: 254, column: 15, scope: !890)
!897 = !DILocation(line: 254, column: 22, scope: !890)
!898 = !DILocation(line: 254, column: 9, scope: !890)
!899 = !DILocation(line: 255, column: 9, scope: !890)
!900 = !DILocation(line: 255, column: 16, scope: !890)
!901 = !DILocation(line: 255, column: 20, scope: !890)
!902 = !DILocation(line: 256, column: 5, scope: !890)
!903 = !DILocation(line: 257, column: 22, scope: !713)
!904 = !DILocation(line: 257, column: 25, scope: !713)
!905 = !DILocation(line: 257, column: 33, scope: !713)
!906 = !DILocation(line: 257, column: 5, scope: !713)
!907 = !DILocalVariable(name: "length", scope: !713, file: !3, line: 259, type: !7)
!908 = !DILocation(line: 259, column: 14, scope: !713)
!909 = !DILocation(line: 259, column: 23, scope: !713)
!910 = !DILocation(line: 259, column: 26, scope: !713)
!911 = !DILocation(line: 259, column: 34, scope: !713)
!912 = !DILocation(line: 259, column: 41, scope: !713)
!913 = !DILocation(line: 259, column: 32, scope: !713)
!914 = !DILocation(line: 260, column: 23, scope: !713)
!915 = !DILocation(line: 260, column: 26, scope: !713)
!916 = !DILocation(line: 260, column: 34, scope: !713)
!917 = !DILocation(line: 260, column: 41, scope: !713)
!918 = !DILocation(line: 260, column: 47, scope: !713)
!919 = !DILocation(line: 260, column: 5, scope: !713)
!920 = !DILocation(line: 261, column: 20, scope: !713)
!921 = !DILocation(line: 261, column: 28, scope: !713)
!922 = !DILocation(line: 261, column: 26, scope: !713)
!923 = !DILocation(line: 261, column: 5, scope: !713)
!924 = !DILocation(line: 262, column: 5, scope: !713)
!925 = !DILocation(line: 262, column: 5, scope: !926)
!926 = distinct !DILexicalBlock(scope: !927, file: !3, line: 262, column: 5)
!927 = distinct !DILexicalBlock(scope: !713, file: !3, line: 262, column: 5)
!928 = !DILocation(line: 262, column: 5, scope: !927)
!929 = !DILocation(line: 264, column: 5, scope: !713)
!930 = !DILocation(line: 264, column: 12, scope: !713)
!931 = !DILocation(line: 264, column: 22, scope: !713)
!932 = !DILocation(line: 266, column: 12, scope: !713)
!933 = !DILocation(line: 266, column: 5, scope: !713)
!934 = !DILocation(line: 267, column: 1, scope: !713)
!935 = distinct !DISubprogram(name: "close_file", scope: !3, file: !3, line: 276, type: !290, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!936 = !DILocalVariable(name: "handle", arg: 1, scope: !935, file: !3, line: 276, type: !60)
!937 = !DILocation(line: 276, column: 30, scope: !935)
!938 = !DILocalVariable(name: "largest_pts", arg: 2, scope: !935, file: !3, line: 276, type: !37)
!939 = !DILocation(line: 276, column: 46, scope: !935)
!940 = !DILocalVariable(name: "second_largest_pts", arg: 3, scope: !935, file: !3, line: 276, type: !37)
!941 = !DILocation(line: 276, column: 67, scope: !935)
!942 = !DILocalVariable(name: "p_flv", scope: !935, file: !3, line: 278, type: !303)
!943 = !DILocation(line: 278, column: 16, scope: !935)
!944 = !DILocation(line: 278, column: 24, scope: !935)
!945 = !DILocalVariable(name: "c", scope: !935, file: !3, line: 279, type: !308)
!946 = !DILocation(line: 279, column: 17, scope: !935)
!947 = !DILocation(line: 279, column: 21, scope: !935)
!948 = !DILocation(line: 279, column: 28, scope: !935)
!949 = !DILocation(line: 281, column: 5, scope: !935)
!950 = !DILocation(line: 281, column: 5, scope: !951)
!951 = distinct !DILexicalBlock(scope: !952, file: !3, line: 281, column: 5)
!952 = distinct !DILexicalBlock(scope: !935, file: !3, line: 281, column: 5)
!953 = !DILocation(line: 281, column: 5, scope: !952)
!954 = !DILocalVariable(name: "total_duration", scope: !935, file: !3, line: 283, type: !36)
!955 = !DILocation(line: 283, column: 12, scope: !935)
!956 = !DILocation(line: 283, column: 42, scope: !935)
!957 = !DILocation(line: 283, column: 40, scope: !935)
!958 = !DILocation(line: 283, column: 56, scope: !935)
!959 = !DILocation(line: 283, column: 54, scope: !935)
!960 = !DILocation(line: 283, column: 29, scope: !935)
!961 = !DILocation(line: 283, column: 78, scope: !935)
!962 = !DILocation(line: 283, column: 85, scope: !935)
!963 = !DILocation(line: 283, column: 76, scope: !935)
!964 = !DILocation(line: 283, column: 102, scope: !935)
!965 = !DILocation(line: 283, column: 109, scope: !935)
!966 = !DILocation(line: 283, column: 100, scope: !935)
!967 = !DILocation(line: 285, column: 31, scope: !968)
!968 = distinct !DILexicalBlock(scope: !935, file: !3, line: 285, column: 9)
!969 = !DILocation(line: 285, column: 34, scope: !968)
!970 = !DILocation(line: 285, column: 9, scope: !968)
!971 = !DILocation(line: 285, column: 9, scope: !935)
!972 = !DILocalVariable(name: "framerate", scope: !973, file: !3, line: 287, type: !36)
!973 = distinct !DILexicalBlock(scope: !968, file: !3, line: 286, column: 5)
!974 = !DILocation(line: 287, column: 16, scope: !973)
!975 = !DILocalVariable(name: "filesize", scope: !973, file: !3, line: 288, type: !42)
!976 = !DILocation(line: 288, column: 18, scope: !973)
!977 = !DILocation(line: 288, column: 36, scope: !973)
!978 = !DILocation(line: 288, column: 39, scope: !973)
!979 = !DILocation(line: 288, column: 29, scope: !973)
!980 = !DILocation(line: 290, column: 13, scope: !981)
!981 = distinct !DILexicalBlock(scope: !973, file: !3, line: 290, column: 13)
!982 = !DILocation(line: 290, column: 20, scope: !981)
!983 = !DILocation(line: 290, column: 13, scope: !973)
!984 = !DILocation(line: 292, column: 33, scope: !985)
!985 = distinct !DILexicalBlock(scope: !981, file: !3, line: 291, column: 9)
!986 = !DILocation(line: 292, column: 40, scope: !985)
!987 = !DILocation(line: 292, column: 25, scope: !985)
!988 = !DILocation(line: 292, column: 53, scope: !985)
!989 = !DILocation(line: 292, column: 51, scope: !985)
!990 = !DILocation(line: 292, column: 23, scope: !985)
!991 = !DILocation(line: 293, column: 33, scope: !985)
!992 = !DILocation(line: 293, column: 36, scope: !985)
!993 = !DILocation(line: 293, column: 40, scope: !985)
!994 = !DILocation(line: 293, column: 47, scope: !985)
!995 = !DILocation(line: 293, column: 64, scope: !985)
!996 = !DILocation(line: 293, column: 13, scope: !985)
!997 = !DILocation(line: 294, column: 9, scope: !985)
!998 = !DILocation(line: 296, column: 29, scope: !973)
!999 = !DILocation(line: 296, column: 32, scope: !973)
!1000 = !DILocation(line: 296, column: 36, scope: !973)
!1001 = !DILocation(line: 296, column: 43, scope: !973)
!1002 = !DILocation(line: 296, column: 59, scope: !973)
!1003 = !DILocation(line: 296, column: 9, scope: !973)
!1004 = !DILocation(line: 297, column: 29, scope: !973)
!1005 = !DILocation(line: 297, column: 32, scope: !973)
!1006 = !DILocation(line: 297, column: 36, scope: !973)
!1007 = !DILocation(line: 297, column: 43, scope: !973)
!1008 = !DILocation(line: 297, column: 59, scope: !973)
!1009 = !DILocation(line: 297, column: 9, scope: !973)
!1010 = !DILocation(line: 298, column: 29, scope: !973)
!1011 = !DILocation(line: 298, column: 32, scope: !973)
!1012 = !DILocation(line: 298, column: 36, scope: !973)
!1013 = !DILocation(line: 298, column: 43, scope: !973)
!1014 = !DILocation(line: 298, column: 58, scope: !973)
!1015 = !DILocation(line: 298, column: 67, scope: !973)
!1016 = !DILocation(line: 298, column: 75, scope: !973)
!1017 = !DILocation(line: 298, column: 90, scope: !973)
!1018 = !DILocation(line: 298, column: 71, scope: !973)
!1019 = !DILocation(line: 298, column: 9, scope: !973)
!1020 = !DILocation(line: 299, column: 5, scope: !973)
!1021 = !DILocation(line: 301, column: 13, scope: !935)
!1022 = !DILocation(line: 301, column: 16, scope: !935)
!1023 = !DILocation(line: 301, column: 5, scope: !935)
!1024 = !DILocation(line: 302, column: 11, scope: !935)
!1025 = !DILocation(line: 302, column: 5, scope: !935)
!1026 = !DILocation(line: 303, column: 11, scope: !935)
!1027 = !DILocation(line: 303, column: 5, scope: !935)
!1028 = !DILocation(line: 305, column: 5, scope: !935)
!1029 = !DILocation(line: 306, column: 1, scope: !935)
!1030 = distinct !DISubprogram(name: "write_header", scope: !3, file: !3, line: 57, type: !1031, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!56, !308}
!1033 = !DILocalVariable(name: "c", arg: 1, scope: !1030, file: !3, line: 57, type: !308)
!1034 = !DILocation(line: 57, column: 38, scope: !1030)
!1035 = !DILocation(line: 59, column: 19, scope: !1030)
!1036 = !DILocation(line: 59, column: 5, scope: !1030)
!1037 = !DILocation(line: 60, column: 20, scope: !1030)
!1038 = !DILocation(line: 60, column: 5, scope: !1030)
!1039 = !DILocation(line: 61, column: 20, scope: !1030)
!1040 = !DILocation(line: 61, column: 5, scope: !1030)
!1041 = !DILocation(line: 62, column: 20, scope: !1030)
!1042 = !DILocation(line: 62, column: 5, scope: !1030)
!1043 = !DILocation(line: 63, column: 20, scope: !1030)
!1044 = !DILocation(line: 63, column: 5, scope: !1030)
!1045 = !DILocation(line: 65, column: 28, scope: !1030)
!1046 = !DILocation(line: 65, column: 12, scope: !1030)
!1047 = !DILocation(line: 65, column: 5, scope: !1030)
!1048 = distinct !DISubprogram(name: "x264_is_regular_file", scope: !1049, file: !1049, line: 354, type: !1050, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!1049 = !DIFile(filename: "x264_src/common/osdep.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/525.x264_r/build/build_base_ld-loop-ext-m64.0000")
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!114, !316}
!1052 = !DILocalVariable(name: "filehandle", arg: 1, scope: !1048, file: !1049, line: 354, type: !316)
!1053 = !DILocation(line: 354, column: 51, scope: !1048)
!1054 = !DILocation(line: 357, column: 5, scope: !1048)
!1055 = distinct !DISubprogram(name: "rewrite_amf_double", scope: !3, file: !3, line: 269, type: !1056, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !316, !42, !36}
!1058 = !DILocalVariable(name: "fp", arg: 1, scope: !1055, file: !3, line: 269, type: !316)
!1059 = !DILocation(line: 269, column: 39, scope: !1055)
!1060 = !DILocalVariable(name: "position", arg: 2, scope: !1055, file: !3, line: 269, type: !42)
!1061 = !DILocation(line: 269, column: 52, scope: !1055)
!1062 = !DILocalVariable(name: "value", arg: 3, scope: !1055, file: !3, line: 269, type: !36)
!1063 = !DILocation(line: 269, column: 69, scope: !1055)
!1064 = !DILocalVariable(name: "x", scope: !1055, file: !3, line: 271, type: !42)
!1065 = !DILocation(line: 271, column: 14, scope: !1055)
!1066 = !DILocation(line: 271, column: 41, scope: !1055)
!1067 = !DILocation(line: 271, column: 32, scope: !1055)
!1068 = !DILocation(line: 271, column: 18, scope: !1055)
!1069 = !DILocation(line: 272, column: 12, scope: !1055)
!1070 = !DILocation(line: 272, column: 16, scope: !1055)
!1071 = !DILocation(line: 272, column: 5, scope: !1055)
!1072 = !DILocation(line: 273, column: 13, scope: !1055)
!1073 = !DILocation(line: 273, column: 23, scope: !1055)
!1074 = !DILocation(line: 273, column: 5, scope: !1055)
!1075 = !DILocation(line: 274, column: 1, scope: !1055)
!1076 = distinct !DISubprogram(name: "endian_fix64", scope: !1049, file: !1049, line: 275, type: !1077, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!42, !42}
!1079 = !DILocalVariable(name: "x", arg: 1, scope: !1076, file: !1049, line: 275, type: !42)
!1080 = !DILocation(line: 275, column: 54, scope: !1076)
!1081 = !DILocation(line: 277, column: 25, scope: !1076)
!1082 = !DILocation(line: 277, column: 26, scope: !1076)
!1083 = !DILocation(line: 277, column: 12, scope: !1076)
!1084 = !DILocation(line: 277, column: 58, scope: !1076)
!1085 = !DILocation(line: 277, column: 45, scope: !1076)
!1086 = !DILocation(line: 277, column: 35, scope: !1076)
!1087 = !DILocation(line: 277, column: 60, scope: !1076)
!1088 = !DILocation(line: 277, column: 32, scope: !1076)
!1089 = !DILocation(line: 277, column: 5, scope: !1076)
!1090 = distinct !DISubprogram(name: "endian_fix32", scope: !1049, file: !1049, line: 262, type: !1091, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !297)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!223, !223}
!1093 = !DILocalVariable(name: "x", arg: 1, scope: !1090, file: !1049, line: 262, type: !223)
!1094 = !DILocation(line: 262, column: 54, scope: !1090)
!1095 = !DILocation(line: 264, column: 13, scope: !1090)
!1096 = !DILocation(line: 264, column: 14, scope: !1090)
!1097 = !DILocation(line: 264, column: 24, scope: !1090)
!1098 = !DILocation(line: 264, column: 25, scope: !1090)
!1099 = !DILocation(line: 264, column: 29, scope: !1090)
!1100 = !DILocation(line: 264, column: 20, scope: !1090)
!1101 = !DILocation(line: 264, column: 44, scope: !1090)
!1102 = !DILocation(line: 264, column: 45, scope: !1090)
!1103 = !DILocation(line: 264, column: 49, scope: !1090)
!1104 = !DILocation(line: 264, column: 40, scope: !1090)
!1105 = !DILocation(line: 264, column: 61, scope: !1090)
!1106 = !DILocation(line: 264, column: 62, scope: !1090)
!1107 = !DILocation(line: 264, column: 58, scope: !1090)
!1108 = !DILocation(line: 264, column: 5, scope: !1090)
