; ModuleID = 'blender/source/blender/blenkernel/intern/seqeffects.c'
source_filename = "blender/source/blender/blenkernel/intern/seqeffects.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.StructRNA = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.rctf = type { float, float, float, float }
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Material = type opaque
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Ipo = type opaque
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.SpeedControlVars = type { float*, float, i32, i32, i32 }
%struct.FCurve = type { %struct.FCurve*, %struct.FCurve*, %struct.bActionGroup*, %struct.ChannelDriver*, %struct.ListBase, %struct.BezTriple*, %struct.FPoint*, i32, float, i16, i16, i32, i8*, i32, [3 x float], float, float }
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.ChannelDriver = type { %struct.ListBase, [256 x i8], i8*, float, float, i32, i32 }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.FPoint = type { [2 x float], i32, i32 }
%struct.SeqEffectHandle = type { i8, i8, void (%struct.Sequence*)*, i32 ()*, void (%struct.Sequence*)*, void (%struct.Sequence*, %struct.Sequence*)*, void (%struct.Sequence*)*, i32 (%struct.Sequence*, float, float)*, void (%struct.Sequence*, i16, float*, float*)*, void (%struct.Sequence*, float, float*, float*)*, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)*, %struct.ImBuf* (%struct.SeqRenderData*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)*, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* }
%struct.SeqRenderData = type { %struct.EvaluationContext*, %struct.Main*, %struct.Scene*, i32, i32, i32, i32, float, i8, i8 }
%struct.EvaluationContext = type opaque
%struct.Main = type opaque
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.GlowVars = type { float, float, float, float, i32, i32 }
%struct.TransformVars = type { float, float, float, float, float, i32, i32, i32 }
%struct.SolidColorVars = type { [3 x float], float }
%struct.GaussianBlurVars = type { float, float }
%struct.WipeZone = type { float, i32, i32, i32, i32, float }
%struct.WipeVars = type { float, float, i16, i16 }

@RNA_Sequence = external dso_local global %struct.StructRNA, align 1
@.str = private unnamed_addr constant [13 x i8] c"speed_factor\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [22 x i8] c"speedcontrol frameMap\00", align 1
@gamma_tabs_init = internal global i8 0, align 1, !dbg !0
@gamtab = internal global [65536 x i16] zeroinitializer, align 16, !dbg !128
@igamtab1 = internal global [256 x i16] zeroinitializer, align 16, !dbg !134
@valid_gamma = internal global float 0.000000e+00, align 4, !dbg !139
@valid_inv_gamma = internal global float 0.000000e+00, align 4, !dbg !141
@color_step = internal global float 0.000000e+00, align 4, !dbg !143
@inv_color_step = internal global float 0.000000e+00, align 4, !dbg !145
@color_domain_table = internal global [401 x float] zeroinitializer, align 16, !dbg !147
@gamma_range_table = internal global [401 x float] zeroinitializer, align 16, !dbg !152
@inv_gamma_range_table = internal global [401 x float] zeroinitializer, align 16, !dbg !154
@gamfactor_table = internal global [400 x float] zeroinitializer, align 16, !dbg !156
@inv_gamfactor_table = internal global [400 x float] zeroinitializer, align 16, !dbg !161
@.str.2 = private unnamed_addr constant [9 x i8] c"wipevars\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"glowvars\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.4 = private unnamed_addr constant [15 x i8] c"blurbitmaptemp\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"blurbitmapfilter\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"glow effect input\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"glow effect output\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"transformvars\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"speedcontrolvars\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"solidcolor\00", align 1
@__func__.make_gaussian_blur_kernel = private unnamed_addr constant [26 x i8] c"make_gaussian_blur_kernel\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_sequence_effect_speed_rebuild_map(%struct.Scene* %scene, %struct.Sequence* %seq, i8 zeroext %force) #0 !dbg !167 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %force.addr = alloca i8, align 1
  %cfra = alloca i32, align 4
  %fallback_fac = alloca float, align 4
  %v = alloca %struct.SpeedControlVars*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %flags = alloca i32, align 4
  %tmp = alloca %struct.SeqEffectHandle, align 8
  %cursor = alloca float, align 4
  %facf = alloca float, align 4
  %facf93 = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !1286, metadata !DIExpression()), !dbg !1287
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !1288, metadata !DIExpression()), !dbg !1289
  store i8 %force, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !1290, metadata !DIExpression()), !dbg !1291
  call void @llvm.dbg.declare(metadata i32* %cfra, metadata !1292, metadata !DIExpression()), !dbg !1293
  call void @llvm.dbg.declare(metadata float* %fallback_fac, metadata !1294, metadata !DIExpression()), !dbg !1295
  store float 1.000000e+00, float* %fallback_fac, align 4, !dbg !1295
  call void @llvm.dbg.declare(metadata %struct.SpeedControlVars** %v, metadata !1296, metadata !DIExpression()), !dbg !1297
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1298
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !1299
  %1 = load i8*, i8** %effectdata, align 8, !dbg !1299
  %2 = bitcast i8* %1 to %struct.SpeedControlVars*, !dbg !1300
  store %struct.SpeedControlVars* %2, %struct.SpeedControlVars** %v, align 8, !dbg !1297
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !1301, metadata !DIExpression()), !dbg !1387
  store %struct.FCurve* null, %struct.FCurve** %fcu, align 8, !dbg !1387
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !1388, metadata !DIExpression()), !dbg !1389
  %3 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1390
  %flags1 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %3, i32 0, i32 2, !dbg !1391
  %4 = load i32, i32* %flags1, align 4, !dbg !1391
  store i32 %4, i32* %flags, align 4, !dbg !1389
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1392
  call void @BKE_sequence_get_effect(%struct.SeqEffectHandle* sret %tmp, %struct.Sequence* %5), !dbg !1393
  %6 = load i8, i8* %force.addr, align 1, !dbg !1394
  %conv = zext i8 %6 to i32, !dbg !1394
  %cmp = icmp eq i32 %conv, 0, !dbg !1396
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1397

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1398
  %len = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 7, !dbg !1399
  %8 = load i32, i32* %len, align 8, !dbg !1399
  %9 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1400
  %length = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %9, i32 0, i32 3, !dbg !1401
  %10 = load i32, i32* %length, align 8, !dbg !1401
  %cmp3 = icmp eq i32 %8, %10, !dbg !1402
  br i1 %cmp3, label %land.lhs.true5, label %if.end, !dbg !1403

land.lhs.true5:                                   ; preds = %land.lhs.true
  %11 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1404
  %frameMap = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %11, i32 0, i32 0, !dbg !1405
  %12 = load float*, float** %frameMap, align 8, !dbg !1405
  %cmp6 = icmp ne float* %12, null, !dbg !1406
  br i1 %cmp6, label %if.then, label %if.end, !dbg !1407

if.then:                                          ; preds = %land.lhs.true5
  br label %if.end137, !dbg !1408

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true, %entry
  %13 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1410
  %seq1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %13, i32 0, i32 33, !dbg !1412
  %14 = load %struct.Sequence*, %struct.Sequence** %seq1, align 8, !dbg !1412
  %cmp8 = icmp eq %struct.Sequence* %14, null, !dbg !1413
  br i1 %cmp8, label %if.then13, label %lor.lhs.false, !dbg !1414

lor.lhs.false:                                    ; preds = %if.end
  %15 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1415
  %len10 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %15, i32 0, i32 7, !dbg !1416
  %16 = load i32, i32* %len10, align 8, !dbg !1416
  %cmp11 = icmp slt i32 %16, 1, !dbg !1417
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !1418

if.then13:                                        ; preds = %lor.lhs.false, %if.end
  br label %if.end137, !dbg !1419

if.end14:                                         ; preds = %lor.lhs.false
  %17 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !1421
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 0, !dbg !1422
  %18 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1423
  %19 = bitcast %struct.Sequence* %18 to i8*, !dbg !1423
  %call = call %struct.FCurve* @id_data_find_fcurve(%struct.ID* %id, i8* %19, %struct.StructRNA* @RNA_Sequence, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 0, i8* null), !dbg !1424
  store %struct.FCurve* %call, %struct.FCurve** %fcu, align 8, !dbg !1425
  %20 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1426
  %frameMap15 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %20, i32 0, i32 0, !dbg !1428
  %21 = load float*, float** %frameMap15, align 8, !dbg !1428
  %tobool = icmp ne float* %21, null, !dbg !1426
  br i1 %tobool, label %lor.lhs.false16, label %if.then21, !dbg !1429

lor.lhs.false16:                                  ; preds = %if.end14
  %22 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1430
  %length17 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %22, i32 0, i32 3, !dbg !1431
  %23 = load i32, i32* %length17, align 8, !dbg !1431
  %24 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1432
  %len18 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %24, i32 0, i32 7, !dbg !1433
  %25 = load i32, i32* %len18, align 8, !dbg !1433
  %cmp19 = icmp ne i32 %23, %25, !dbg !1434
  br i1 %cmp19, label %if.then21, label %if.end33, !dbg !1435

if.then21:                                        ; preds = %lor.lhs.false16, %if.end14
  %26 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1436
  %frameMap22 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %26, i32 0, i32 0, !dbg !1439
  %27 = load float*, float** %frameMap22, align 8, !dbg !1439
  %tobool23 = icmp ne float* %27, null, !dbg !1436
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !1440

if.then24:                                        ; preds = %if.then21
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1441
  %29 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1442
  %frameMap25 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %29, i32 0, i32 0, !dbg !1443
  %30 = load float*, float** %frameMap25, align 8, !dbg !1443
  %31 = bitcast float* %30 to i8*, !dbg !1442
  call void %28(i8* %31), !dbg !1441
  br label %if.end26, !dbg !1441

if.end26:                                         ; preds = %if.then24, %if.then21
  %32 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1444
  %len27 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %32, i32 0, i32 7, !dbg !1445
  %33 = load i32, i32* %len27, align 8, !dbg !1445
  %34 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1446
  %length28 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %34, i32 0, i32 3, !dbg !1447
  store i32 %33, i32* %length28, align 8, !dbg !1448
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1449
  %36 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1450
  %length29 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %36, i32 0, i32 3, !dbg !1451
  %37 = load i32, i32* %length29, align 8, !dbg !1451
  %conv30 = sext i32 %37 to i64, !dbg !1450
  %mul = mul i64 4, %conv30, !dbg !1452
  %call31 = call i8* %35(i64 %mul, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)), !dbg !1449
  %38 = bitcast i8* %call31 to float*, !dbg !1449
  %39 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1453
  %frameMap32 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %39, i32 0, i32 0, !dbg !1454
  store float* %38, float** %frameMap32, align 8, !dbg !1455
  br label %if.end33, !dbg !1456

if.end33:                                         ; preds = %if.end26, %lor.lhs.false16
  store float 1.000000e+00, float* %fallback_fac, align 4, !dbg !1457
  %40 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1458
  %flag = getelementptr inbounds %struct.Sequence, %struct.Sequence* %40, i32 0, i32 5, !dbg !1460
  %41 = load i32, i32* %flag, align 8, !dbg !1460
  %and = and i32 %41, 4194304, !dbg !1461
  %tobool34 = icmp ne i32 %and, 0, !dbg !1461
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !1462

if.then35:                                        ; preds = %if.end33
  %42 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1463
  %seq136 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %42, i32 0, i32 33, !dbg !1466
  %43 = load %struct.Sequence*, %struct.Sequence** %seq136, align 8, !dbg !1466
  %enddisp = getelementptr inbounds %struct.Sequence, %struct.Sequence* %43, i32 0, i32 16, !dbg !1467
  %44 = load i32, i32* %enddisp, align 4, !dbg !1467
  %45 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1468
  %seq137 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %45, i32 0, i32 33, !dbg !1469
  %46 = load %struct.Sequence*, %struct.Sequence** %seq137, align 8, !dbg !1469
  %start = getelementptr inbounds %struct.Sequence, %struct.Sequence* %46, i32 0, i32 8, !dbg !1470
  %47 = load i32, i32* %start, align 4, !dbg !1470
  %cmp38 = icmp ne i32 %44, %47, !dbg !1471
  br i1 %cmp38, label %land.lhs.true40, label %if.end54, !dbg !1472

land.lhs.true40:                                  ; preds = %if.then35
  %48 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1473
  %seq141 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %48, i32 0, i32 33, !dbg !1474
  %49 = load %struct.Sequence*, %struct.Sequence** %seq141, align 8, !dbg !1474
  %len42 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %49, i32 0, i32 7, !dbg !1475
  %50 = load i32, i32* %len42, align 8, !dbg !1475
  %cmp43 = icmp ne i32 %50, 0, !dbg !1476
  br i1 %cmp43, label %if.then45, label %if.end54, !dbg !1477

if.then45:                                        ; preds = %land.lhs.true40
  %51 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1478
  %seq146 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %51, i32 0, i32 33, !dbg !1480
  %52 = load %struct.Sequence*, %struct.Sequence** %seq146, align 8, !dbg !1480
  %len47 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %52, i32 0, i32 7, !dbg !1481
  %53 = load i32, i32* %len47, align 8, !dbg !1481
  %conv48 = sitofp i32 %53 to float, !dbg !1482
  %54 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1483
  %seq149 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %54, i32 0, i32 33, !dbg !1484
  %55 = load %struct.Sequence*, %struct.Sequence** %seq149, align 8, !dbg !1484
  %enddisp50 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %55, i32 0, i32 16, !dbg !1485
  %56 = load i32, i32* %enddisp50, align 4, !dbg !1485
  %57 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1486
  %seq151 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %57, i32 0, i32 33, !dbg !1487
  %58 = load %struct.Sequence*, %struct.Sequence** %seq151, align 8, !dbg !1487
  %start52 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %58, i32 0, i32 8, !dbg !1488
  %59 = load i32, i32* %start52, align 4, !dbg !1488
  %sub = sub nsw i32 %56, %59, !dbg !1489
  %conv53 = sitofp i32 %sub to float, !dbg !1490
  %div = fdiv float %conv48, %conv53, !dbg !1491
  store float %div, float* %fallback_fac, align 4, !dbg !1492
  store i32 1, i32* %flags, align 4, !dbg !1493
  store %struct.FCurve* null, %struct.FCurve** %fcu, align 8, !dbg !1494
  br label %if.end54, !dbg !1495

if.end54:                                         ; preds = %if.then45, %land.lhs.true40, %if.then35
  br label %if.end58, !dbg !1496

if.else:                                          ; preds = %if.end33
  %60 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !1497
  %tobool55 = icmp ne %struct.FCurve* %60, null, !dbg !1497
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !1500

if.then56:                                        ; preds = %if.else
  %61 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1501
  %speed_fader = getelementptr inbounds %struct.Sequence, %struct.Sequence* %61, i32 0, i32 32, !dbg !1503
  %62 = load float, float* %speed_fader, align 4, !dbg !1503
  store float %62, float* %fallback_fac, align 4, !dbg !1504
  br label %if.end57, !dbg !1505

if.end57:                                         ; preds = %if.then56, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end54
  %63 = load i32, i32* %flags, align 4, !dbg !1506
  %and59 = and i32 %63, 1, !dbg !1508
  %tobool60 = icmp ne i32 %and59, 0, !dbg !1508
  br i1 %tobool60, label %if.then61, label %if.else92, !dbg !1509

if.then61:                                        ; preds = %if.end58
  call void @llvm.dbg.declare(metadata float* %cursor, metadata !1510, metadata !DIExpression()), !dbg !1512
  store float 0.000000e+00, float* %cursor, align 4, !dbg !1512
  call void @llvm.dbg.declare(metadata float* %facf, metadata !1513, metadata !DIExpression()), !dbg !1514
  %64 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1515
  %frameMap62 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %64, i32 0, i32 0, !dbg !1516
  %65 = load float*, float** %frameMap62, align 8, !dbg !1516
  %arrayidx = getelementptr inbounds float, float* %65, i64 0, !dbg !1515
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !1517
  %66 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1518
  %lastValidFrame = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %66, i32 0, i32 4, !dbg !1519
  store i32 0, i32* %lastValidFrame, align 4, !dbg !1520
  store i32 1, i32* %cfra, align 4, !dbg !1521
  br label %for.cond, !dbg !1523

for.cond:                                         ; preds = %for.inc, %if.then61
  %67 = load i32, i32* %cfra, align 4, !dbg !1524
  %68 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1526
  %length63 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %68, i32 0, i32 3, !dbg !1527
  %69 = load i32, i32* %length63, align 8, !dbg !1527
  %cmp64 = icmp slt i32 %67, %69, !dbg !1528
  br i1 %cmp64, label %for.body, label %for.end, !dbg !1529

for.body:                                         ; preds = %for.cond
  %70 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !1530
  %tobool66 = icmp ne %struct.FCurve* %70, null, !dbg !1530
  br i1 %tobool66, label %if.then67, label %if.else70, !dbg !1533

if.then67:                                        ; preds = %for.body
  %71 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !1534
  %72 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1536
  %startdisp = getelementptr inbounds %struct.Sequence, %struct.Sequence* %72, i32 0, i32 15, !dbg !1537
  %73 = load i32, i32* %startdisp, align 8, !dbg !1537
  %74 = load i32, i32* %cfra, align 4, !dbg !1538
  %add = add nsw i32 %73, %74, !dbg !1539
  %conv68 = sitofp i32 %add to float, !dbg !1536
  %call69 = call float @evaluate_fcurve(%struct.FCurve* %71, float %conv68), !dbg !1540
  store float %call69, float* %facf, align 4, !dbg !1541
  br label %if.end71, !dbg !1542

if.else70:                                        ; preds = %for.body
  %75 = load float, float* %fallback_fac, align 4, !dbg !1543
  store float %75, float* %facf, align 4, !dbg !1545
  br label %if.end71

if.end71:                                         ; preds = %if.else70, %if.then67
  %76 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1546
  %globalSpeed = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %76, i32 0, i32 1, !dbg !1547
  %77 = load float, float* %globalSpeed, align 8, !dbg !1547
  %78 = load float, float* %facf, align 4, !dbg !1548
  %mul72 = fmul float %78, %77, !dbg !1548
  store float %mul72, float* %facf, align 4, !dbg !1548
  %79 = load float, float* %facf, align 4, !dbg !1549
  %80 = load float, float* %cursor, align 4, !dbg !1550
  %add73 = fadd float %80, %79, !dbg !1550
  store float %add73, float* %cursor, align 4, !dbg !1550
  %81 = load float, float* %cursor, align 4, !dbg !1551
  %82 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1553
  %seq174 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %82, i32 0, i32 33, !dbg !1554
  %83 = load %struct.Sequence*, %struct.Sequence** %seq174, align 8, !dbg !1554
  %len75 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %83, i32 0, i32 7, !dbg !1555
  %84 = load i32, i32* %len75, align 8, !dbg !1555
  %conv76 = sitofp i32 %84 to float, !dbg !1553
  %cmp77 = fcmp oge float %81, %conv76, !dbg !1556
  br i1 %cmp77, label %if.then79, label %if.else86, !dbg !1557

if.then79:                                        ; preds = %if.end71
  %85 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1558
  %seq180 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %85, i32 0, i32 33, !dbg !1560
  %86 = load %struct.Sequence*, %struct.Sequence** %seq180, align 8, !dbg !1560
  %len81 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %86, i32 0, i32 7, !dbg !1561
  %87 = load i32, i32* %len81, align 8, !dbg !1561
  %sub82 = sub nsw i32 %87, 1, !dbg !1562
  %conv83 = sitofp i32 %sub82 to float, !dbg !1558
  %88 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1563
  %frameMap84 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %88, i32 0, i32 0, !dbg !1564
  %89 = load float*, float** %frameMap84, align 8, !dbg !1564
  %90 = load i32, i32* %cfra, align 4, !dbg !1565
  %idxprom = sext i32 %90 to i64, !dbg !1563
  %arrayidx85 = getelementptr inbounds float, float* %89, i64 %idxprom, !dbg !1563
  store float %conv83, float* %arrayidx85, align 4, !dbg !1566
  br label %if.end91, !dbg !1567

if.else86:                                        ; preds = %if.end71
  %91 = load float, float* %cursor, align 4, !dbg !1568
  %92 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1570
  %frameMap87 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %92, i32 0, i32 0, !dbg !1571
  %93 = load float*, float** %frameMap87, align 8, !dbg !1571
  %94 = load i32, i32* %cfra, align 4, !dbg !1572
  %idxprom88 = sext i32 %94 to i64, !dbg !1570
  %arrayidx89 = getelementptr inbounds float, float* %93, i64 %idxprom88, !dbg !1570
  store float %91, float* %arrayidx89, align 4, !dbg !1573
  %95 = load i32, i32* %cfra, align 4, !dbg !1574
  %96 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1575
  %lastValidFrame90 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %96, i32 0, i32 4, !dbg !1576
  store i32 %95, i32* %lastValidFrame90, align 4, !dbg !1577
  br label %if.end91

if.end91:                                         ; preds = %if.else86, %if.then79
  br label %for.inc, !dbg !1578

for.inc:                                          ; preds = %if.end91
  %97 = load i32, i32* %cfra, align 4, !dbg !1579
  %inc = add nsw i32 %97, 1, !dbg !1579
  store i32 %inc, i32* %cfra, align 4, !dbg !1579
  br label %for.cond, !dbg !1580, !llvm.loop !1581

for.end:                                          ; preds = %for.cond
  br label %if.end137, !dbg !1583

if.else92:                                        ; preds = %if.end58
  call void @llvm.dbg.declare(metadata float* %facf93, metadata !1584, metadata !DIExpression()), !dbg !1586
  %98 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1587
  %lastValidFrame94 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %98, i32 0, i32 4, !dbg !1588
  store i32 0, i32* %lastValidFrame94, align 4, !dbg !1589
  store i32 0, i32* %cfra, align 4, !dbg !1590
  br label %for.cond95, !dbg !1592

for.cond95:                                       ; preds = %for.inc134, %if.else92
  %99 = load i32, i32* %cfra, align 4, !dbg !1593
  %100 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1595
  %length96 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %100, i32 0, i32 3, !dbg !1596
  %101 = load i32, i32* %length96, align 8, !dbg !1596
  %cmp97 = icmp slt i32 %99, %101, !dbg !1597
  br i1 %cmp97, label %for.body99, label %for.end136, !dbg !1598

for.body99:                                       ; preds = %for.cond95
  %102 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !1599
  %tobool100 = icmp ne %struct.FCurve* %102, null, !dbg !1599
  br i1 %tobool100, label %if.then101, label %if.else106, !dbg !1602

if.then101:                                       ; preds = %for.body99
  %103 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !1603
  %104 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1605
  %startdisp102 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %104, i32 0, i32 15, !dbg !1606
  %105 = load i32, i32* %startdisp102, align 8, !dbg !1606
  %106 = load i32, i32* %cfra, align 4, !dbg !1607
  %add103 = add nsw i32 %105, %106, !dbg !1608
  %conv104 = sitofp i32 %add103 to float, !dbg !1605
  %call105 = call float @evaluate_fcurve(%struct.FCurve* %103, float %conv104), !dbg !1609
  store float %call105, float* %facf93, align 4, !dbg !1610
  br label %if.end107, !dbg !1611

if.else106:                                       ; preds = %for.body99
  %107 = load float, float* %fallback_fac, align 4, !dbg !1612
  store float %107, float* %facf93, align 4, !dbg !1614
  br label %if.end107

if.end107:                                        ; preds = %if.else106, %if.then101
  %108 = load i32, i32* %flags, align 4, !dbg !1615
  %and108 = and i32 %108, 4, !dbg !1617
  %tobool109 = icmp ne i32 %and108, 0, !dbg !1617
  br i1 %tobool109, label %if.then110, label %if.end115, !dbg !1618

if.then110:                                       ; preds = %if.end107
  %109 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1619
  %seq1111 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %109, i32 0, i32 33, !dbg !1621
  %110 = load %struct.Sequence*, %struct.Sequence** %seq1111, align 8, !dbg !1621
  %len112 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %110, i32 0, i32 7, !dbg !1622
  %111 = load i32, i32* %len112, align 8, !dbg !1622
  %conv113 = sitofp i32 %111 to float, !dbg !1619
  %112 = load float, float* %facf93, align 4, !dbg !1623
  %mul114 = fmul float %112, %conv113, !dbg !1623
  store float %mul114, float* %facf93, align 4, !dbg !1623
  br label %if.end115, !dbg !1624

if.end115:                                        ; preds = %if.then110, %if.end107
  %113 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1625
  %globalSpeed116 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %113, i32 0, i32 1, !dbg !1626
  %114 = load float, float* %globalSpeed116, align 8, !dbg !1626
  %115 = load float, float* %facf93, align 4, !dbg !1627
  %mul117 = fmul float %115, %114, !dbg !1627
  store float %mul117, float* %facf93, align 4, !dbg !1627
  %116 = load float, float* %facf93, align 4, !dbg !1628
  %117 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1630
  %seq1118 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %117, i32 0, i32 33, !dbg !1631
  %118 = load %struct.Sequence*, %struct.Sequence** %seq1118, align 8, !dbg !1631
  %len119 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %118, i32 0, i32 7, !dbg !1632
  %119 = load i32, i32* %len119, align 8, !dbg !1632
  %conv120 = sitofp i32 %119 to float, !dbg !1630
  %cmp121 = fcmp oge float %116, %conv120, !dbg !1633
  br i1 %cmp121, label %if.then123, label %if.else128, !dbg !1634

if.then123:                                       ; preds = %if.end115
  %120 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1635
  %seq1124 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %120, i32 0, i32 33, !dbg !1637
  %121 = load %struct.Sequence*, %struct.Sequence** %seq1124, align 8, !dbg !1637
  %len125 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %121, i32 0, i32 7, !dbg !1638
  %122 = load i32, i32* %len125, align 8, !dbg !1638
  %sub126 = sub nsw i32 %122, 1, !dbg !1639
  %conv127 = sitofp i32 %sub126 to float, !dbg !1635
  store float %conv127, float* %facf93, align 4, !dbg !1640
  br label %if.end130, !dbg !1641

if.else128:                                       ; preds = %if.end115
  %123 = load i32, i32* %cfra, align 4, !dbg !1642
  %124 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1644
  %lastValidFrame129 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %124, i32 0, i32 4, !dbg !1645
  store i32 %123, i32* %lastValidFrame129, align 4, !dbg !1646
  br label %if.end130

if.end130:                                        ; preds = %if.else128, %if.then123
  %125 = load float, float* %facf93, align 4, !dbg !1647
  %126 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !1648
  %frameMap131 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %126, i32 0, i32 0, !dbg !1649
  %127 = load float*, float** %frameMap131, align 8, !dbg !1649
  %128 = load i32, i32* %cfra, align 4, !dbg !1650
  %idxprom132 = sext i32 %128 to i64, !dbg !1648
  %arrayidx133 = getelementptr inbounds float, float* %127, i64 %idxprom132, !dbg !1648
  store float %125, float* %arrayidx133, align 4, !dbg !1651
  br label %for.inc134, !dbg !1652

for.inc134:                                       ; preds = %if.end130
  %129 = load i32, i32* %cfra, align 4, !dbg !1653
  %inc135 = add nsw i32 %129, 1, !dbg !1653
  store i32 %inc135, i32* %cfra, align 4, !dbg !1653
  br label %for.cond95, !dbg !1654, !llvm.loop !1655

for.end136:                                       ; preds = %for.cond95
  br label %if.end137

if.end137:                                        ; preds = %if.then, %if.then13, %for.end136, %for.end
  ret void, !dbg !1657
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_sequence_get_effect(%struct.SeqEffectHandle* noalias sret %agg.result, %struct.Sequence* %seq) #0 !dbg !1658 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %tmp = alloca %struct.SeqEffectHandle, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !1786, metadata !DIExpression()), !dbg !1787
  call void @llvm.dbg.declare(metadata %struct.SeqEffectHandle* %agg.result, metadata !1788, metadata !DIExpression()), !dbg !1789
  %0 = bitcast %struct.SeqEffectHandle* %agg.result to i8*, !dbg !1789
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 96, i1 false), !dbg !1789
  %1 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1790
  %type = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 6, !dbg !1792
  %2 = load i32, i32* %type, align 4, !dbg !1792
  %and = and i32 %2, 8, !dbg !1793
  %tobool = icmp ne i32 %and, 0, !dbg !1793
  br i1 %tobool, label %if.then, label %if.end6, !dbg !1794

if.then:                                          ; preds = %entry
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1795
  %type1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 6, !dbg !1797
  %4 = load i32, i32* %type1, align 4, !dbg !1797
  call void @get_sequence_effect_impl(%struct.SeqEffectHandle* sret %tmp, i32 %4), !dbg !1798
  %5 = bitcast %struct.SeqEffectHandle* %agg.result to i8*, !dbg !1798
  %6 = bitcast %struct.SeqEffectHandle* %tmp to i8*, !dbg !1798
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 96, i1 false), !dbg !1798
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1799
  %flag = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 5, !dbg !1801
  %8 = load i32, i32* %flag, align 8, !dbg !1801
  %and2 = and i32 %8, 512, !dbg !1802
  %cmp = icmp ne i32 %and2, 0, !dbg !1803
  br i1 %cmp, label %if.then3, label %if.end, !dbg !1804

if.then3:                                         ; preds = %if.then
  %load = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 4, !dbg !1805
  %9 = load void (%struct.Sequence*)*, void (%struct.Sequence*)** %load, align 8, !dbg !1805
  %10 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1807
  call void %9(%struct.Sequence* %10), !dbg !1808
  %11 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !1809
  %flag4 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %11, i32 0, i32 5, !dbg !1810
  %12 = load i32, i32* %flag4, align 8, !dbg !1811
  %and5 = and i32 %12, -513, !dbg !1811
  store i32 %and5, i32* %flag4, align 8, !dbg !1811
  br label %if.end, !dbg !1812

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !1813

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !1814
}

declare dso_local %struct.FCurve* @id_data_find_fcurve(%struct.ID*, i8*, %struct.StructRNA*, i8*, i32, i8*) #2

declare dso_local float @evaluate_fcurve(%struct.FCurve*, float) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @get_sequence_effect_impl(%struct.SeqEffectHandle* noalias sret %agg.result, i32 %seq_type) #0 !dbg !1815 {
entry:
  %seq_type.addr = alloca i32, align 4
  %sequence_type = alloca i32, align 4
  store i32 %seq_type, i32* %seq_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seq_type.addr, metadata !1818, metadata !DIExpression()), !dbg !1819
  call void @llvm.dbg.declare(metadata %struct.SeqEffectHandle* %agg.result, metadata !1820, metadata !DIExpression()), !dbg !1821
  call void @llvm.dbg.declare(metadata i32* %sequence_type, metadata !1822, metadata !DIExpression()), !dbg !1823
  %0 = load i32, i32* %seq_type.addr, align 4, !dbg !1824
  store i32 %0, i32* %sequence_type, align 4, !dbg !1823
  %multithreaded = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1825
  store i8 0, i8* %multithreaded, align 8, !dbg !1826
  %supports_mask = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 1, !dbg !1827
  store i8 0, i8* %supports_mask, align 1, !dbg !1828
  %init = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1829
  store void (%struct.Sequence*)* @init_noop, void (%struct.Sequence*)** %init, align 8, !dbg !1830
  %num_inputs = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !1831
  store i32 ()* @num_inputs_default, i32 ()** %num_inputs, align 8, !dbg !1832
  %load = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 4, !dbg !1833
  store void (%struct.Sequence*)* @load_noop, void (%struct.Sequence*)** %load, align 8, !dbg !1834
  %free = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 6, !dbg !1835
  store void (%struct.Sequence*)* @free_noop, void (%struct.Sequence*)** %free, align 8, !dbg !1836
  %early_out = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1837
  store i32 (%struct.Sequence*, float, float)* @early_out_noop, i32 (%struct.Sequence*, float, float)** %early_out, align 8, !dbg !1838
  %get_default_fac = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 9, !dbg !1839
  store void (%struct.Sequence*, float, float*, float*)* @get_default_fac_noop, void (%struct.Sequence*, float, float*, float*)** %get_default_fac, align 8, !dbg !1840
  %store_icu_yrange = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 8, !dbg !1841
  store void (%struct.Sequence*, i16, float*, float*)* @store_icu_yrange_noop, void (%struct.Sequence*, i16, float*, float*)** %store_icu_yrange, align 8, !dbg !1842
  %execute = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 10, !dbg !1843
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* null, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute, align 8, !dbg !1844
  %init_execution = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 11, !dbg !1845
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @init_execution, %struct.ImBuf* (%struct.SeqRenderData*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %init_execution, align 8, !dbg !1846
  %execute_slice = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1847
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* null, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice, align 8, !dbg !1848
  %copy = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 5, !dbg !1849
  store void (%struct.Sequence*, %struct.Sequence*)* null, void (%struct.Sequence*, %struct.Sequence*)** %copy, align 8, !dbg !1850
  %1 = load i32, i32* %sequence_type, align 4, !dbg !1851
  switch i32 %1, label %sw.epilog [
    i32 8, label %sw.bb
    i32 13, label %sw.bb5
    i32 9, label %sw.bb14
    i32 10, label %sw.bb18
    i32 14, label %sw.bb22
    i32 11, label %sw.bb26
    i32 15, label %sw.bb30
    i32 12, label %sw.bb33
    i32 25, label %sw.bb37
    i32 26, label %sw.bb45
    i32 27, label %sw.bb51
    i32 29, label %sw.bb57
    i32 28, label %sw.bb66
    i32 30, label %sw.bb73
    i32 31, label %sw.bb77
    i32 40, label %sw.bb82
  ], !dbg !1852

sw.bb:                                            ; preds = %entry
  %multithreaded1 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1853
  store i8 1, i8* %multithreaded1, align 8, !dbg !1855
  %execute_slice2 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1856
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_cross_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice2, align 8, !dbg !1857
  %early_out3 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1858
  store i32 (%struct.Sequence*, float, float)* @early_out_fade, i32 (%struct.Sequence*, float, float)** %early_out3, align 8, !dbg !1859
  %get_default_fac4 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 9, !dbg !1860
  store void (%struct.Sequence*, float, float*, float*)* @get_default_fac_fade, void (%struct.Sequence*, float, float*, float*)** %get_default_fac4, align 8, !dbg !1861
  br label %sw.epilog, !dbg !1862

sw.bb5:                                           ; preds = %entry
  %multithreaded6 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1863
  store i8 1, i8* %multithreaded6, align 8, !dbg !1864
  %init7 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1865
  store void (%struct.Sequence*)* @init_gammacross, void (%struct.Sequence*)** %init7, align 8, !dbg !1866
  %load8 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 4, !dbg !1867
  store void (%struct.Sequence*)* @load_gammacross, void (%struct.Sequence*)** %load8, align 8, !dbg !1868
  %free9 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 6, !dbg !1869
  store void (%struct.Sequence*)* @free_gammacross, void (%struct.Sequence*)** %free9, align 8, !dbg !1870
  %early_out10 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1871
  store i32 (%struct.Sequence*, float, float)* @early_out_fade, i32 (%struct.Sequence*, float, float)** %early_out10, align 8, !dbg !1872
  %get_default_fac11 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 9, !dbg !1873
  store void (%struct.Sequence*, float, float*, float*)* @get_default_fac_fade, void (%struct.Sequence*, float, float*, float*)** %get_default_fac11, align 8, !dbg !1874
  %init_execution12 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 11, !dbg !1875
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @gammacross_init_execution, %struct.ImBuf* (%struct.SeqRenderData*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %init_execution12, align 8, !dbg !1876
  %execute_slice13 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1877
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_gammacross_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice13, align 8, !dbg !1878
  br label %sw.epilog, !dbg !1879

sw.bb14:                                          ; preds = %entry
  %multithreaded15 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1880
  store i8 1, i8* %multithreaded15, align 8, !dbg !1881
  %execute_slice16 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1882
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_add_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice16, align 8, !dbg !1883
  %early_out17 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1884
  store i32 (%struct.Sequence*, float, float)* @early_out_mul_input2, i32 (%struct.Sequence*, float, float)** %early_out17, align 8, !dbg !1885
  br label %sw.epilog, !dbg !1886

sw.bb18:                                          ; preds = %entry
  %multithreaded19 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1887
  store i8 1, i8* %multithreaded19, align 8, !dbg !1888
  %execute_slice20 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1889
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_sub_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice20, align 8, !dbg !1890
  %early_out21 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1891
  store i32 (%struct.Sequence*, float, float)* @early_out_mul_input2, i32 (%struct.Sequence*, float, float)** %early_out21, align 8, !dbg !1892
  br label %sw.epilog, !dbg !1893

sw.bb22:                                          ; preds = %entry
  %multithreaded23 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1894
  store i8 1, i8* %multithreaded23, align 8, !dbg !1895
  %execute_slice24 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1896
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_mul_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice24, align 8, !dbg !1897
  %early_out25 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1898
  store i32 (%struct.Sequence*, float, float)* @early_out_mul_input2, i32 (%struct.Sequence*, float, float)** %early_out25, align 8, !dbg !1899
  br label %sw.epilog, !dbg !1900

sw.bb26:                                          ; preds = %entry
  %multithreaded27 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1901
  store i8 1, i8* %multithreaded27, align 8, !dbg !1902
  %init28 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1903
  store void (%struct.Sequence*)* @init_alpha_over_or_under, void (%struct.Sequence*)** %init28, align 8, !dbg !1904
  %execute_slice29 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1905
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_alphaover_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice29, align 8, !dbg !1906
  br label %sw.epilog, !dbg !1907

sw.bb30:                                          ; preds = %entry
  %multithreaded31 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1908
  store i8 1, i8* %multithreaded31, align 8, !dbg !1909
  %execute_slice32 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1910
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_overdrop_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice32, align 8, !dbg !1911
  br label %sw.epilog, !dbg !1912

sw.bb33:                                          ; preds = %entry
  %multithreaded34 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !1913
  store i8 1, i8* %multithreaded34, align 8, !dbg !1914
  %init35 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1915
  store void (%struct.Sequence*)* @init_alpha_over_or_under, void (%struct.Sequence*)** %init35, align 8, !dbg !1916
  %execute_slice36 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !1917
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_alphaunder_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice36, align 8, !dbg !1918
  br label %sw.epilog, !dbg !1919

sw.bb37:                                          ; preds = %entry
  %init38 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1920
  store void (%struct.Sequence*)* @init_wipe_effect, void (%struct.Sequence*)** %init38, align 8, !dbg !1921
  %num_inputs39 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !1922
  store i32 ()* @num_inputs_wipe, i32 ()** %num_inputs39, align 8, !dbg !1923
  %free40 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 6, !dbg !1924
  store void (%struct.Sequence*)* @free_wipe_effect, void (%struct.Sequence*)** %free40, align 8, !dbg !1925
  %copy41 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 5, !dbg !1926
  store void (%struct.Sequence*, %struct.Sequence*)* @copy_wipe_effect, void (%struct.Sequence*, %struct.Sequence*)** %copy41, align 8, !dbg !1927
  %early_out42 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1928
  store i32 (%struct.Sequence*, float, float)* @early_out_fade, i32 (%struct.Sequence*, float, float)** %early_out42, align 8, !dbg !1929
  %get_default_fac43 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 9, !dbg !1930
  store void (%struct.Sequence*, float, float*, float*)* @get_default_fac_fade, void (%struct.Sequence*, float, float*, float*)** %get_default_fac43, align 8, !dbg !1931
  %execute44 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 10, !dbg !1932
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @do_wipe_effect, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute44, align 8, !dbg !1933
  br label %sw.epilog, !dbg !1934

sw.bb45:                                          ; preds = %entry
  %init46 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1935
  store void (%struct.Sequence*)* @init_glow_effect, void (%struct.Sequence*)** %init46, align 8, !dbg !1936
  %num_inputs47 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !1937
  store i32 ()* @num_inputs_glow, i32 ()** %num_inputs47, align 8, !dbg !1938
  %free48 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 6, !dbg !1939
  store void (%struct.Sequence*)* @free_glow_effect, void (%struct.Sequence*)** %free48, align 8, !dbg !1940
  %copy49 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 5, !dbg !1941
  store void (%struct.Sequence*, %struct.Sequence*)* @copy_glow_effect, void (%struct.Sequence*, %struct.Sequence*)** %copy49, align 8, !dbg !1942
  %execute50 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 10, !dbg !1943
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @do_glow_effect, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute50, align 8, !dbg !1944
  br label %sw.epilog, !dbg !1945

sw.bb51:                                          ; preds = %entry
  %init52 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1946
  store void (%struct.Sequence*)* @init_transform_effect, void (%struct.Sequence*)** %init52, align 8, !dbg !1947
  %num_inputs53 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !1948
  store i32 ()* @num_inputs_transform, i32 ()** %num_inputs53, align 8, !dbg !1949
  %free54 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 6, !dbg !1950
  store void (%struct.Sequence*)* @free_transform_effect, void (%struct.Sequence*)** %free54, align 8, !dbg !1951
  %copy55 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 5, !dbg !1952
  store void (%struct.Sequence*, %struct.Sequence*)* @copy_transform_effect, void (%struct.Sequence*, %struct.Sequence*)** %copy55, align 8, !dbg !1953
  %execute56 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 10, !dbg !1954
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @do_transform_effect, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute56, align 8, !dbg !1955
  br label %sw.epilog, !dbg !1956

sw.bb57:                                          ; preds = %entry
  %init58 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1957
  store void (%struct.Sequence*)* @init_speed_effect, void (%struct.Sequence*)** %init58, align 8, !dbg !1958
  %num_inputs59 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !1959
  store i32 ()* @num_inputs_speed, i32 ()** %num_inputs59, align 8, !dbg !1960
  %load60 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 4, !dbg !1961
  store void (%struct.Sequence*)* @load_speed_effect, void (%struct.Sequence*)** %load60, align 8, !dbg !1962
  %free61 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 6, !dbg !1963
  store void (%struct.Sequence*)* @free_speed_effect, void (%struct.Sequence*)** %free61, align 8, !dbg !1964
  %copy62 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 5, !dbg !1965
  store void (%struct.Sequence*, %struct.Sequence*)* @copy_speed_effect, void (%struct.Sequence*, %struct.Sequence*)** %copy62, align 8, !dbg !1966
  %execute63 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 10, !dbg !1967
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @do_speed_effect, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute63, align 8, !dbg !1968
  %early_out64 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1969
  store i32 (%struct.Sequence*, float, float)* @early_out_speed, i32 (%struct.Sequence*, float, float)** %early_out64, align 8, !dbg !1970
  %store_icu_yrange65 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 8, !dbg !1971
  store void (%struct.Sequence*, i16, float*, float*)* @store_icu_yrange_speed, void (%struct.Sequence*, i16, float*, float*)** %store_icu_yrange65, align 8, !dbg !1972
  br label %sw.epilog, !dbg !1973

sw.bb66:                                          ; preds = %entry
  %init67 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !1974
  store void (%struct.Sequence*)* @init_solid_color, void (%struct.Sequence*)** %init67, align 8, !dbg !1975
  %num_inputs68 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !1976
  store i32 ()* @num_inputs_color, i32 ()** %num_inputs68, align 8, !dbg !1977
  %early_out69 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1978
  store i32 (%struct.Sequence*, float, float)* @early_out_color, i32 (%struct.Sequence*, float, float)** %early_out69, align 8, !dbg !1979
  %free70 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 6, !dbg !1980
  store void (%struct.Sequence*)* @free_solid_color, void (%struct.Sequence*)** %free70, align 8, !dbg !1981
  %copy71 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 5, !dbg !1982
  store void (%struct.Sequence*, %struct.Sequence*)* @copy_solid_color, void (%struct.Sequence*, %struct.Sequence*)** %copy71, align 8, !dbg !1983
  %execute72 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 10, !dbg !1984
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @do_solid_color, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute72, align 8, !dbg !1985
  br label %sw.epilog, !dbg !1986

sw.bb73:                                          ; preds = %entry
  %num_inputs74 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !1987
  store i32 ()* @num_inputs_multicam, i32 ()** %num_inputs74, align 8, !dbg !1988
  %early_out75 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1989
  store i32 (%struct.Sequence*, float, float)* @early_out_multicam, i32 (%struct.Sequence*, float, float)** %early_out75, align 8, !dbg !1990
  %execute76 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 10, !dbg !1991
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @do_multicam, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute76, align 8, !dbg !1992
  br label %sw.epilog, !dbg !1993

sw.bb77:                                          ; preds = %entry
  %supports_mask78 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 1, !dbg !1994
  store i8 1, i8* %supports_mask78, align 1, !dbg !1995
  %num_inputs79 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !1996
  store i32 ()* @num_inputs_adjustment, i32 ()** %num_inputs79, align 8, !dbg !1997
  %early_out80 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !1998
  store i32 (%struct.Sequence*, float, float)* @early_out_adjustment, i32 (%struct.Sequence*, float, float)** %early_out80, align 8, !dbg !1999
  %execute81 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 10, !dbg !2000
  store %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* @do_adjustment, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute81, align 8, !dbg !2001
  br label %sw.epilog, !dbg !2002

sw.bb82:                                          ; preds = %entry
  %multithreaded83 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 0, !dbg !2003
  store i8 1, i8* %multithreaded83, align 8, !dbg !2004
  %init84 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 2, !dbg !2005
  store void (%struct.Sequence*)* @init_gaussian_blur_effect, void (%struct.Sequence*)** %init84, align 8, !dbg !2006
  %num_inputs85 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 3, !dbg !2007
  store i32 ()* @num_inputs_gaussian_blur, i32 ()** %num_inputs85, align 8, !dbg !2008
  %free86 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 6, !dbg !2009
  store void (%struct.Sequence*)* @free_gaussian_blur_effect, void (%struct.Sequence*)** %free86, align 8, !dbg !2010
  %copy87 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 5, !dbg !2011
  store void (%struct.Sequence*, %struct.Sequence*)* @copy_gaussian_blur_effect, void (%struct.Sequence*, %struct.Sequence*)** %copy87, align 8, !dbg !2012
  %early_out88 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 7, !dbg !2013
  store i32 (%struct.Sequence*, float, float)* @early_out_gaussian_blur, i32 (%struct.Sequence*, float, float)** %early_out88, align 8, !dbg !2014
  %execute_slice89 = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 12, !dbg !2015
  store void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* @do_gaussian_blur_effect, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice89, align 8, !dbg !2016
  br label %sw.epilog, !dbg !2017

sw.epilog:                                        ; preds = %entry, %sw.bb82, %sw.bb77, %sw.bb73, %sw.bb66, %sw.bb57, %sw.bb51, %sw.bb45, %sw.bb37, %sw.bb33, %sw.bb30, %sw.bb26, %sw.bb22, %sw.bb18, %sw.bb14, %sw.bb5, %sw.bb
  ret void, !dbg !2018
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_sequence_get_blend(%struct.SeqEffectHandle* noalias sret %agg.result, %struct.Sequence* %seq) #0 !dbg !2019 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %tmp = alloca %struct.SeqEffectHandle, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !2020, metadata !DIExpression()), !dbg !2021
  call void @llvm.dbg.declare(metadata %struct.SeqEffectHandle* %agg.result, metadata !2022, metadata !DIExpression()), !dbg !2023
  %0 = bitcast %struct.SeqEffectHandle* %agg.result to i8*, !dbg !2023
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 96, i1 false), !dbg !2023
  %1 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2024
  %blend_mode = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 46, !dbg !2026
  %2 = load i32, i32* %blend_mode, align 8, !dbg !2026
  %cmp = icmp ne i32 %2, 0, !dbg !2027
  br i1 %cmp, label %if.then, label %if.end6, !dbg !2028

if.then:                                          ; preds = %entry
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2029
  %blend_mode1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 46, !dbg !2031
  %4 = load i32, i32* %blend_mode1, align 8, !dbg !2031
  call void @get_sequence_effect_impl(%struct.SeqEffectHandle* sret %tmp, i32 %4), !dbg !2032
  %5 = bitcast %struct.SeqEffectHandle* %agg.result to i8*, !dbg !2032
  %6 = bitcast %struct.SeqEffectHandle* %tmp to i8*, !dbg !2032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 96, i1 false), !dbg !2032
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2033
  %flag = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 5, !dbg !2035
  %8 = load i32, i32* %flag, align 8, !dbg !2035
  %and = and i32 %8, 512, !dbg !2036
  %cmp2 = icmp ne i32 %and, 0, !dbg !2037
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !2038

if.then3:                                         ; preds = %if.then
  %load = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %agg.result, i32 0, i32 4, !dbg !2039
  %9 = load void (%struct.Sequence*)*, void (%struct.Sequence*)** %load, align 8, !dbg !2039
  %10 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2041
  call void %9(%struct.Sequence* %10), !dbg !2042
  %11 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2043
  %flag4 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %11, i32 0, i32 5, !dbg !2044
  %12 = load i32, i32* %flag4, align 8, !dbg !2045
  %and5 = and i32 %12, -513, !dbg !2045
  store i32 %and5, i32* %flag4, align 8, !dbg !2045
  br label %if.end, !dbg !2046

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !2047

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !2048
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_sequence_effect_get_num_inputs(i32 %seq_type) #0 !dbg !2049 {
entry:
  %retval = alloca i32, align 4
  %seq_type.addr = alloca i32, align 4
  %rval = alloca %struct.SeqEffectHandle, align 8
  %cnt = alloca i32, align 4
  store i32 %seq_type, i32* %seq_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seq_type.addr, metadata !2052, metadata !DIExpression()), !dbg !2053
  call void @llvm.dbg.declare(metadata %struct.SeqEffectHandle* %rval, metadata !2054, metadata !DIExpression()), !dbg !2055
  %0 = load i32, i32* %seq_type.addr, align 4, !dbg !2056
  call void @get_sequence_effect_impl(%struct.SeqEffectHandle* sret %rval, i32 %0), !dbg !2057
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !2058, metadata !DIExpression()), !dbg !2059
  %num_inputs = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %rval, i32 0, i32 3, !dbg !2060
  %1 = load i32 ()*, i32 ()** %num_inputs, align 8, !dbg !2060
  %call = call i32 %1(), !dbg !2061
  store i32 %call, i32* %cnt, align 4, !dbg !2059
  %execute = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %rval, i32 0, i32 10, !dbg !2062
  %2 = load %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)*, %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %execute, align 8, !dbg !2062
  %tobool = icmp ne %struct.ImBuf* (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* %2, null, !dbg !2064
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !2065

lor.lhs.false:                                    ; preds = %entry
  %execute_slice = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %rval, i32 0, i32 12, !dbg !2066
  %3 = load void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)*, void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)** %execute_slice, align 8, !dbg !2066
  %tobool1 = icmp ne void (%struct.SeqRenderData*, %struct.Sequence*, float, float, float, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, i32, i32, %struct.ImBuf*)* %3, null, !dbg !2067
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !2068

land.lhs.true:                                    ; preds = %lor.lhs.false
  %init_execution = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %rval, i32 0, i32 11, !dbg !2069
  %4 = load %struct.ImBuf* (%struct.SeqRenderData*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)*, %struct.ImBuf* (%struct.SeqRenderData*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)** %init_execution, align 8, !dbg !2069
  %tobool2 = icmp ne %struct.ImBuf* (%struct.SeqRenderData*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*)* %4, null, !dbg !2070
  br i1 %tobool2, label %if.then, label %if.end, !dbg !2071

if.then:                                          ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* %cnt, align 4, !dbg !2072
  store i32 %5, i32* %retval, align 4, !dbg !2074
  br label %return, !dbg !2074

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !2075
  br label %return, !dbg !2075

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !2076
  ret i32 %6, !dbg !2076
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_sequence_effect_get_supports_mask(i32 %seq_type) #0 !dbg !2077 {
entry:
  %seq_type.addr = alloca i32, align 4
  %rval = alloca %struct.SeqEffectHandle, align 8
  store i32 %seq_type, i32* %seq_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seq_type.addr, metadata !2078, metadata !DIExpression()), !dbg !2079
  call void @llvm.dbg.declare(metadata %struct.SeqEffectHandle* %rval, metadata !2080, metadata !DIExpression()), !dbg !2081
  %0 = load i32, i32* %seq_type.addr, align 4, !dbg !2082
  call void @get_sequence_effect_impl(%struct.SeqEffectHandle* sret %rval, i32 %0), !dbg !2083
  %supports_mask = getelementptr inbounds %struct.SeqEffectHandle, %struct.SeqEffectHandle* %rval, i32 0, i32 1, !dbg !2084
  %1 = load i8, i8* %supports_mask, align 1, !dbg !2084
  %conv = zext i8 %1 to i32, !dbg !2085
  ret i32 %conv, !dbg !2086
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_noop(%struct.Sequence* %UNUSED_seq) #0 !dbg !2087 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2090, metadata !DIExpression()), !dbg !2091
  ret void, !dbg !2092
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_default() #0 !dbg !2093 {
entry:
  ret i32 2, !dbg !2094
}

; Function Attrs: noinline nounwind uwtable
define internal void @load_noop(%struct.Sequence* %UNUSED_seq) #0 !dbg !2095 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2096, metadata !DIExpression()), !dbg !2097
  ret void, !dbg !2098
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_noop(%struct.Sequence* %UNUSED_seq) #0 !dbg !2099 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2100, metadata !DIExpression()), !dbg !2101
  ret void, !dbg !2102
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @early_out_noop(%struct.Sequence* %UNUSED_seq, float %UNUSED_facf0, float %UNUSED_facf1) #0 !dbg !2103 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2106, metadata !DIExpression()), !dbg !2107
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !2108, metadata !DIExpression()), !dbg !2109
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !2110, metadata !DIExpression()), !dbg !2111
  ret i32 0, !dbg !2112
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_default_fac_noop(%struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float* %facf0, float* %facf1) #0 !dbg !2113 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float*, align 8
  %facf1.addr = alloca float*, align 8
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2116, metadata !DIExpression()), !dbg !2117
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2118, metadata !DIExpression()), !dbg !2119
  store float* %facf0, float** %facf0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %facf0.addr, metadata !2120, metadata !DIExpression()), !dbg !2121
  store float* %facf1, float** %facf1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %facf1.addr, metadata !2122, metadata !DIExpression()), !dbg !2123
  %0 = load float*, float** %facf1.addr, align 8, !dbg !2124
  store float 1.000000e+00, float* %0, align 4, !dbg !2125
  %1 = load float*, float** %facf0.addr, align 8, !dbg !2126
  store float 1.000000e+00, float* %1, align 4, !dbg !2127
  ret void, !dbg !2128
}

; Function Attrs: noinline nounwind uwtable
define internal void @store_icu_yrange_noop(%struct.Sequence* %UNUSED_seq, i16 signext %UNUSED_adrcode, float* %UNUSED_ymin, float* %UNUSED_ymax) #0 !dbg !2129 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_adrcode.addr = alloca i16, align 2
  %UNUSED_ymin.addr = alloca float*, align 8
  %UNUSED_ymax.addr = alloca float*, align 8
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2132, metadata !DIExpression()), !dbg !2133
  store i16 %UNUSED_adrcode, i16* %UNUSED_adrcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %UNUSED_adrcode.addr, metadata !2134, metadata !DIExpression()), !dbg !2135
  store float* %UNUSED_ymin, float** %UNUSED_ymin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_ymin.addr, metadata !2136, metadata !DIExpression()), !dbg !2137
  store float* %UNUSED_ymax, float** %UNUSED_ymax.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_ymax.addr, metadata !2138, metadata !DIExpression()), !dbg !2139
  ret void, !dbg !2140
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @init_execution(%struct.SeqRenderData* %context, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3) #0 !dbg !2141 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2146, metadata !DIExpression()), !dbg !2147
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2148, metadata !DIExpression()), !dbg !2149
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2150, metadata !DIExpression()), !dbg !2151
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !2152, metadata !DIExpression()), !dbg !2153
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !2154, metadata !DIExpression()), !dbg !2155
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2156
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2157
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2158
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !2159
  %call = call %struct.ImBuf* @prepare_effect_imbufs(%struct.SeqRenderData* %0, %struct.ImBuf* %1, %struct.ImBuf* %2, %struct.ImBuf* %3), !dbg !2160
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !2155
  %4 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !2161
  ret %struct.ImBuf* %4, !dbg !2162
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_cross_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !2163 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect11 = alloca i8*, align 8
  %rect22 = alloca i8*, align 8
  %rect_out3 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2166, metadata !DIExpression()), !dbg !2167
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2168, metadata !DIExpression()), !dbg !2169
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2170, metadata !DIExpression()), !dbg !2171
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2172, metadata !DIExpression()), !dbg !2173
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2174, metadata !DIExpression()), !dbg !2175
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2176, metadata !DIExpression()), !dbg !2177
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2178, metadata !DIExpression()), !dbg !2179
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !2180, metadata !DIExpression()), !dbg !2181
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !2182, metadata !DIExpression()), !dbg !2183
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !2184, metadata !DIExpression()), !dbg !2185
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !2186, metadata !DIExpression()), !dbg !2187
  %0 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2188
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !2190
  %1 = load float*, float** %rect_float, align 8, !dbg !2190
  %tobool = icmp ne float* %1, null, !dbg !2188
  br i1 %tobool, label %if.then, label %if.else, !dbg !2191

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !2192, metadata !DIExpression()), !dbg !2194
  store float* null, float** %rect1, align 8, !dbg !2194
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !2195, metadata !DIExpression()), !dbg !2196
  store float* null, float** %rect2, align 8, !dbg !2196
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !2197, metadata !DIExpression()), !dbg !2198
  store float* null, float** %rect_out, align 8, !dbg !2198
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2199
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2200
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2201
  %5 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2202
  %6 = load i32, i32* %start_line.addr, align 4, !dbg !2203
  call void @slice_get_float_buffers(%struct.SeqRenderData* %2, %struct.ImBuf* %3, %struct.ImBuf* %4, %struct.ImBuf* null, %struct.ImBuf* %5, i32 %6, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !2204
  %7 = load float, float* %facf0.addr, align 4, !dbg !2205
  %8 = load float, float* %facf1.addr, align 4, !dbg !2206
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2207
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !2208
  %10 = load i32, i32* %rectx, align 8, !dbg !2208
  %11 = load i32, i32* %total_lines.addr, align 4, !dbg !2209
  %12 = load float*, float** %rect1, align 8, !dbg !2210
  %13 = load float*, float** %rect2, align 8, !dbg !2211
  %14 = load float*, float** %rect_out, align 8, !dbg !2212
  call void @do_cross_effect_float(float %7, float %8, i32 %10, i32 %11, float* %12, float* %13, float* %14), !dbg !2213
  br label %if.end, !dbg !2214

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect11, metadata !2215, metadata !DIExpression()), !dbg !2217
  store i8* null, i8** %rect11, align 8, !dbg !2217
  call void @llvm.dbg.declare(metadata i8** %rect22, metadata !2218, metadata !DIExpression()), !dbg !2219
  store i8* null, i8** %rect22, align 8, !dbg !2219
  call void @llvm.dbg.declare(metadata i8** %rect_out3, metadata !2220, metadata !DIExpression()), !dbg !2221
  store i8* null, i8** %rect_out3, align 8, !dbg !2221
  %15 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2222
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2223
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2224
  %18 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2225
  %19 = load i32, i32* %start_line.addr, align 4, !dbg !2226
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %15, %struct.ImBuf* %16, %struct.ImBuf* %17, %struct.ImBuf* null, %struct.ImBuf* %18, i32 %19, i8** %rect11, i8** %rect22, i8** null, i8** %rect_out3), !dbg !2227
  %20 = load float, float* %facf0.addr, align 4, !dbg !2228
  %21 = load float, float* %facf1.addr, align 4, !dbg !2229
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2230
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 3, !dbg !2231
  %23 = load i32, i32* %rectx4, align 8, !dbg !2231
  %24 = load i32, i32* %total_lines.addr, align 4, !dbg !2232
  %25 = load i8*, i8** %rect11, align 8, !dbg !2233
  %26 = load i8*, i8** %rect22, align 8, !dbg !2234
  %27 = load i8*, i8** %rect_out3, align 8, !dbg !2235
  call void @do_cross_effect_byte(float %20, float %21, i32 %23, i32 %24, i8* %25, i8* %26, i8* %27), !dbg !2236
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2237
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @early_out_fade(%struct.Sequence* %UNUSED_seq, float %facf0, float %facf1) #0 !dbg !2238 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2239, metadata !DIExpression()), !dbg !2240
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2241, metadata !DIExpression()), !dbg !2242
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2243, metadata !DIExpression()), !dbg !2244
  %0 = load float, float* %facf0.addr, align 4, !dbg !2245
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !2247
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2248

land.lhs.true:                                    ; preds = %entry
  %1 = load float, float* %facf1.addr, align 4, !dbg !2249
  %cmp1 = fcmp oeq float %1, 0.000000e+00, !dbg !2250
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2251

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !2252
  br label %return, !dbg !2252

if.else:                                          ; preds = %land.lhs.true, %entry
  %2 = load float, float* %facf0.addr, align 4, !dbg !2254
  %cmp2 = fcmp oeq float %2, 1.000000e+00, !dbg !2256
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !2257

land.lhs.true3:                                   ; preds = %if.else
  %3 = load float, float* %facf1.addr, align 4, !dbg !2258
  %cmp4 = fcmp oeq float %3, 1.000000e+00, !dbg !2259
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !2260

if.then5:                                         ; preds = %land.lhs.true3
  store i32 2, i32* %retval, align 4, !dbg !2261
  br label %return, !dbg !2261

if.end:                                           ; preds = %land.lhs.true3, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2263
  br label %return, !dbg !2263

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !2264
  ret i32 %4, !dbg !2264
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_default_fac_fade(%struct.Sequence* %seq, float %cfra, float* %facf0, float* %facf1) #0 !dbg !2265 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %cfra.addr = alloca float, align 4
  %facf0.addr = alloca float*, align 8
  %facf1.addr = alloca float*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !2266, metadata !DIExpression()), !dbg !2267
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !2268, metadata !DIExpression()), !dbg !2269
  store float* %facf0, float** %facf0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %facf0.addr, metadata !2270, metadata !DIExpression()), !dbg !2271
  store float* %facf1, float** %facf1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %facf1.addr, metadata !2272, metadata !DIExpression()), !dbg !2273
  %0 = load float, float* %cfra.addr, align 4, !dbg !2274
  %1 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2275
  %startdisp = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 15, !dbg !2276
  %2 = load i32, i32* %startdisp, align 8, !dbg !2276
  %conv = sitofp i32 %2 to float, !dbg !2275
  %sub = fsub float %0, %conv, !dbg !2277
  %3 = load float*, float** %facf0.addr, align 8, !dbg !2278
  store float %sub, float* %3, align 4, !dbg !2279
  %4 = load float*, float** %facf0.addr, align 8, !dbg !2280
  %5 = load float, float* %4, align 4, !dbg !2281
  %add = fadd float %5, 5.000000e-01, !dbg !2282
  %6 = load float*, float** %facf1.addr, align 8, !dbg !2283
  store float %add, float* %6, align 4, !dbg !2284
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2285
  %len = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 7, !dbg !2286
  %8 = load i32, i32* %len, align 8, !dbg !2286
  %conv1 = sitofp i32 %8 to float, !dbg !2285
  %9 = load float*, float** %facf0.addr, align 8, !dbg !2287
  %10 = load float, float* %9, align 4, !dbg !2288
  %div = fdiv float %10, %conv1, !dbg !2288
  store float %div, float* %9, align 4, !dbg !2288
  %11 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2289
  %len2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %11, i32 0, i32 7, !dbg !2290
  %12 = load i32, i32* %len2, align 8, !dbg !2290
  %conv3 = sitofp i32 %12 to float, !dbg !2289
  %13 = load float*, float** %facf1.addr, align 8, !dbg !2291
  %14 = load float, float* %13, align 4, !dbg !2292
  %div4 = fdiv float %14, %conv3, !dbg !2292
  store float %div4, float* %13, align 4, !dbg !2292
  ret void, !dbg !2293
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_gammacross(%struct.Sequence* %UNUSED_seq) #0 !dbg !2294 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2295, metadata !DIExpression()), !dbg !2296
  ret void, !dbg !2297
}

; Function Attrs: noinline nounwind uwtable
define internal void @load_gammacross(%struct.Sequence* %UNUSED_seq) #0 !dbg !2298 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2299, metadata !DIExpression()), !dbg !2300
  ret void, !dbg !2301
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_gammacross(%struct.Sequence* %UNUSED_seq) #0 !dbg !2302 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2303, metadata !DIExpression()), !dbg !2304
  ret void, !dbg !2305
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @gammacross_init_execution(%struct.SeqRenderData* %context, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3) #0 !dbg !2306 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2307, metadata !DIExpression()), !dbg !2308
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2309, metadata !DIExpression()), !dbg !2310
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2311, metadata !DIExpression()), !dbg !2312
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !2313, metadata !DIExpression()), !dbg !2314
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !2315, metadata !DIExpression()), !dbg !2316
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2317
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2318
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2319
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !2320
  %call = call %struct.ImBuf* @prepare_effect_imbufs(%struct.SeqRenderData* %0, %struct.ImBuf* %1, %struct.ImBuf* %2, %struct.ImBuf* %3), !dbg !2321
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !2316
  call void @build_gammatabs(), !dbg !2322
  %4 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !2323
  ret %struct.ImBuf* %4, !dbg !2324
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_gammacross_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !2325 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect11 = alloca i8*, align 8
  %rect22 = alloca i8*, align 8
  %rect_out3 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2326, metadata !DIExpression()), !dbg !2327
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2328, metadata !DIExpression()), !dbg !2329
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2330, metadata !DIExpression()), !dbg !2331
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2332, metadata !DIExpression()), !dbg !2333
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2334, metadata !DIExpression()), !dbg !2335
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2336, metadata !DIExpression()), !dbg !2337
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2338, metadata !DIExpression()), !dbg !2339
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !2340, metadata !DIExpression()), !dbg !2341
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !2342, metadata !DIExpression()), !dbg !2343
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !2344, metadata !DIExpression()), !dbg !2345
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !2346, metadata !DIExpression()), !dbg !2347
  %0 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2348
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !2350
  %1 = load float*, float** %rect_float, align 8, !dbg !2350
  %tobool = icmp ne float* %1, null, !dbg !2348
  br i1 %tobool, label %if.then, label %if.else, !dbg !2351

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !2352, metadata !DIExpression()), !dbg !2354
  store float* null, float** %rect1, align 8, !dbg !2354
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !2355, metadata !DIExpression()), !dbg !2356
  store float* null, float** %rect2, align 8, !dbg !2356
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !2357, metadata !DIExpression()), !dbg !2358
  store float* null, float** %rect_out, align 8, !dbg !2358
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2359
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2360
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2361
  %5 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2362
  %6 = load i32, i32* %start_line.addr, align 4, !dbg !2363
  call void @slice_get_float_buffers(%struct.SeqRenderData* %2, %struct.ImBuf* %3, %struct.ImBuf* %4, %struct.ImBuf* null, %struct.ImBuf* %5, i32 %6, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !2364
  %7 = load float, float* %facf0.addr, align 4, !dbg !2365
  %8 = load float, float* %facf1.addr, align 4, !dbg !2366
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2367
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !2368
  %10 = load i32, i32* %rectx, align 8, !dbg !2368
  %11 = load i32, i32* %total_lines.addr, align 4, !dbg !2369
  %12 = load float*, float** %rect1, align 8, !dbg !2370
  %13 = load float*, float** %rect2, align 8, !dbg !2371
  %14 = load float*, float** %rect_out, align 8, !dbg !2372
  call void @do_gammacross_effect_float(float %7, float %8, i32 %10, i32 %11, float* %12, float* %13, float* %14), !dbg !2373
  br label %if.end, !dbg !2374

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect11, metadata !2375, metadata !DIExpression()), !dbg !2377
  store i8* null, i8** %rect11, align 8, !dbg !2377
  call void @llvm.dbg.declare(metadata i8** %rect22, metadata !2378, metadata !DIExpression()), !dbg !2379
  store i8* null, i8** %rect22, align 8, !dbg !2379
  call void @llvm.dbg.declare(metadata i8** %rect_out3, metadata !2380, metadata !DIExpression()), !dbg !2381
  store i8* null, i8** %rect_out3, align 8, !dbg !2381
  %15 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2382
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2383
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2384
  %18 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2385
  %19 = load i32, i32* %start_line.addr, align 4, !dbg !2386
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %15, %struct.ImBuf* %16, %struct.ImBuf* %17, %struct.ImBuf* null, %struct.ImBuf* %18, i32 %19, i8** %rect11, i8** %rect22, i8** null, i8** %rect_out3), !dbg !2387
  %20 = load float, float* %facf0.addr, align 4, !dbg !2388
  %21 = load float, float* %facf1.addr, align 4, !dbg !2389
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2390
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 3, !dbg !2391
  %23 = load i32, i32* %rectx4, align 8, !dbg !2391
  %24 = load i32, i32* %total_lines.addr, align 4, !dbg !2392
  %25 = load i8*, i8** %rect11, align 8, !dbg !2393
  %26 = load i8*, i8** %rect22, align 8, !dbg !2394
  %27 = load i8*, i8** %rect_out3, align 8, !dbg !2395
  call void @do_gammacross_effect_byte(float %20, float %21, i32 %23, i32 %24, i8* %25, i8* %26, i8* %27), !dbg !2396
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2397
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_add_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !2398 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect11 = alloca i8*, align 8
  %rect22 = alloca i8*, align 8
  %rect_out3 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2399, metadata !DIExpression()), !dbg !2400
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2401, metadata !DIExpression()), !dbg !2402
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2403, metadata !DIExpression()), !dbg !2404
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2405, metadata !DIExpression()), !dbg !2406
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2407, metadata !DIExpression()), !dbg !2408
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2409, metadata !DIExpression()), !dbg !2410
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2411, metadata !DIExpression()), !dbg !2412
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !2413, metadata !DIExpression()), !dbg !2414
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !2415, metadata !DIExpression()), !dbg !2416
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !2417, metadata !DIExpression()), !dbg !2418
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !2419, metadata !DIExpression()), !dbg !2420
  %0 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2421
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !2423
  %1 = load float*, float** %rect_float, align 8, !dbg !2423
  %tobool = icmp ne float* %1, null, !dbg !2421
  br i1 %tobool, label %if.then, label %if.else, !dbg !2424

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !2425, metadata !DIExpression()), !dbg !2427
  store float* null, float** %rect1, align 8, !dbg !2427
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !2428, metadata !DIExpression()), !dbg !2429
  store float* null, float** %rect2, align 8, !dbg !2429
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !2430, metadata !DIExpression()), !dbg !2431
  store float* null, float** %rect_out, align 8, !dbg !2431
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2432
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2433
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2434
  %5 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2435
  %6 = load i32, i32* %start_line.addr, align 4, !dbg !2436
  call void @slice_get_float_buffers(%struct.SeqRenderData* %2, %struct.ImBuf* %3, %struct.ImBuf* %4, %struct.ImBuf* null, %struct.ImBuf* %5, i32 %6, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !2437
  %7 = load float, float* %facf0.addr, align 4, !dbg !2438
  %8 = load float, float* %facf1.addr, align 4, !dbg !2439
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2440
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !2441
  %10 = load i32, i32* %rectx, align 8, !dbg !2441
  %11 = load i32, i32* %total_lines.addr, align 4, !dbg !2442
  %12 = load float*, float** %rect1, align 8, !dbg !2443
  %13 = load float*, float** %rect2, align 8, !dbg !2444
  %14 = load float*, float** %rect_out, align 8, !dbg !2445
  call void @do_add_effect_float(float %7, float %8, i32 %10, i32 %11, float* %12, float* %13, float* %14), !dbg !2446
  br label %if.end, !dbg !2447

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect11, metadata !2448, metadata !DIExpression()), !dbg !2450
  store i8* null, i8** %rect11, align 8, !dbg !2450
  call void @llvm.dbg.declare(metadata i8** %rect22, metadata !2451, metadata !DIExpression()), !dbg !2452
  store i8* null, i8** %rect22, align 8, !dbg !2452
  call void @llvm.dbg.declare(metadata i8** %rect_out3, metadata !2453, metadata !DIExpression()), !dbg !2454
  store i8* null, i8** %rect_out3, align 8, !dbg !2454
  %15 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2455
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2456
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2457
  %18 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2458
  %19 = load i32, i32* %start_line.addr, align 4, !dbg !2459
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %15, %struct.ImBuf* %16, %struct.ImBuf* %17, %struct.ImBuf* null, %struct.ImBuf* %18, i32 %19, i8** %rect11, i8** %rect22, i8** null, i8** %rect_out3), !dbg !2460
  %20 = load float, float* %facf0.addr, align 4, !dbg !2461
  %21 = load float, float* %facf1.addr, align 4, !dbg !2462
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2463
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 3, !dbg !2464
  %23 = load i32, i32* %rectx4, align 8, !dbg !2464
  %24 = load i32, i32* %total_lines.addr, align 4, !dbg !2465
  %25 = load i8*, i8** %rect11, align 8, !dbg !2466
  %26 = load i8*, i8** %rect22, align 8, !dbg !2467
  %27 = load i8*, i8** %rect_out3, align 8, !dbg !2468
  call void @do_add_effect_byte(float %20, float %21, i32 %23, i32 %24, i8* %25, i8* %26, i8* %27), !dbg !2469
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2470
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @early_out_mul_input2(%struct.Sequence* %UNUSED_seq, float %facf0, float %facf1) #0 !dbg !2471 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2472, metadata !DIExpression()), !dbg !2473
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2474, metadata !DIExpression()), !dbg !2475
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2476, metadata !DIExpression()), !dbg !2477
  %0 = load float, float* %facf0.addr, align 4, !dbg !2478
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !2480
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2481

land.lhs.true:                                    ; preds = %entry
  %1 = load float, float* %facf1.addr, align 4, !dbg !2482
  %cmp1 = fcmp oeq float %1, 0.000000e+00, !dbg !2483
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2484

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !2485
  br label %return, !dbg !2485

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !2487
  br label %return, !dbg !2487

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !2488
  ret i32 %2, !dbg !2488
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_sub_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !2489 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect11 = alloca i8*, align 8
  %rect22 = alloca i8*, align 8
  %rect_out3 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2490, metadata !DIExpression()), !dbg !2491
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2492, metadata !DIExpression()), !dbg !2493
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2494, metadata !DIExpression()), !dbg !2495
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2496, metadata !DIExpression()), !dbg !2497
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2498, metadata !DIExpression()), !dbg !2499
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2500, metadata !DIExpression()), !dbg !2501
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2502, metadata !DIExpression()), !dbg !2503
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !2504, metadata !DIExpression()), !dbg !2505
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !2506, metadata !DIExpression()), !dbg !2507
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !2508, metadata !DIExpression()), !dbg !2509
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !2510, metadata !DIExpression()), !dbg !2511
  %0 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2512
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !2514
  %1 = load float*, float** %rect_float, align 8, !dbg !2514
  %tobool = icmp ne float* %1, null, !dbg !2512
  br i1 %tobool, label %if.then, label %if.else, !dbg !2515

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !2516, metadata !DIExpression()), !dbg !2518
  store float* null, float** %rect1, align 8, !dbg !2518
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !2519, metadata !DIExpression()), !dbg !2520
  store float* null, float** %rect2, align 8, !dbg !2520
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !2521, metadata !DIExpression()), !dbg !2522
  store float* null, float** %rect_out, align 8, !dbg !2522
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2523
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2524
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2525
  %5 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2526
  %6 = load i32, i32* %start_line.addr, align 4, !dbg !2527
  call void @slice_get_float_buffers(%struct.SeqRenderData* %2, %struct.ImBuf* %3, %struct.ImBuf* %4, %struct.ImBuf* null, %struct.ImBuf* %5, i32 %6, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !2528
  %7 = load float, float* %facf0.addr, align 4, !dbg !2529
  %8 = load float, float* %facf1.addr, align 4, !dbg !2530
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2531
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !2532
  %10 = load i32, i32* %rectx, align 8, !dbg !2532
  %11 = load i32, i32* %total_lines.addr, align 4, !dbg !2533
  %12 = load float*, float** %rect1, align 8, !dbg !2534
  %13 = load float*, float** %rect2, align 8, !dbg !2535
  %14 = load float*, float** %rect_out, align 8, !dbg !2536
  call void @do_sub_effect_float(float %7, float %8, i32 %10, i32 %11, float* %12, float* %13, float* %14), !dbg !2537
  br label %if.end, !dbg !2538

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect11, metadata !2539, metadata !DIExpression()), !dbg !2541
  store i8* null, i8** %rect11, align 8, !dbg !2541
  call void @llvm.dbg.declare(metadata i8** %rect22, metadata !2542, metadata !DIExpression()), !dbg !2543
  store i8* null, i8** %rect22, align 8, !dbg !2543
  call void @llvm.dbg.declare(metadata i8** %rect_out3, metadata !2544, metadata !DIExpression()), !dbg !2545
  store i8* null, i8** %rect_out3, align 8, !dbg !2545
  %15 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2546
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2547
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2548
  %18 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2549
  %19 = load i32, i32* %start_line.addr, align 4, !dbg !2550
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %15, %struct.ImBuf* %16, %struct.ImBuf* %17, %struct.ImBuf* null, %struct.ImBuf* %18, i32 %19, i8** %rect11, i8** %rect22, i8** null, i8** %rect_out3), !dbg !2551
  %20 = load float, float* %facf0.addr, align 4, !dbg !2552
  %21 = load float, float* %facf1.addr, align 4, !dbg !2553
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2554
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 3, !dbg !2555
  %23 = load i32, i32* %rectx4, align 8, !dbg !2555
  %24 = load i32, i32* %total_lines.addr, align 4, !dbg !2556
  %25 = load i8*, i8** %rect11, align 8, !dbg !2557
  %26 = load i8*, i8** %rect22, align 8, !dbg !2558
  %27 = load i8*, i8** %rect_out3, align 8, !dbg !2559
  call void @do_sub_effect_byte(float %20, float %21, i32 %23, i32 %24, i8* %25, i8* %26, i8* %27), !dbg !2560
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2561
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_mul_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !2562 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect11 = alloca i8*, align 8
  %rect22 = alloca i8*, align 8
  %rect_out3 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2563, metadata !DIExpression()), !dbg !2564
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2565, metadata !DIExpression()), !dbg !2566
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2567, metadata !DIExpression()), !dbg !2568
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2569, metadata !DIExpression()), !dbg !2570
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2571, metadata !DIExpression()), !dbg !2572
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2573, metadata !DIExpression()), !dbg !2574
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2575, metadata !DIExpression()), !dbg !2576
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !2577, metadata !DIExpression()), !dbg !2578
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !2579, metadata !DIExpression()), !dbg !2580
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !2581, metadata !DIExpression()), !dbg !2582
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !2583, metadata !DIExpression()), !dbg !2584
  %0 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2585
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !2587
  %1 = load float*, float** %rect_float, align 8, !dbg !2587
  %tobool = icmp ne float* %1, null, !dbg !2585
  br i1 %tobool, label %if.then, label %if.else, !dbg !2588

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !2589, metadata !DIExpression()), !dbg !2591
  store float* null, float** %rect1, align 8, !dbg !2591
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !2592, metadata !DIExpression()), !dbg !2593
  store float* null, float** %rect2, align 8, !dbg !2593
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !2594, metadata !DIExpression()), !dbg !2595
  store float* null, float** %rect_out, align 8, !dbg !2595
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2596
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2597
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2598
  %5 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2599
  %6 = load i32, i32* %start_line.addr, align 4, !dbg !2600
  call void @slice_get_float_buffers(%struct.SeqRenderData* %2, %struct.ImBuf* %3, %struct.ImBuf* %4, %struct.ImBuf* null, %struct.ImBuf* %5, i32 %6, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !2601
  %7 = load float, float* %facf0.addr, align 4, !dbg !2602
  %8 = load float, float* %facf1.addr, align 4, !dbg !2603
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2604
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !2605
  %10 = load i32, i32* %rectx, align 8, !dbg !2605
  %11 = load i32, i32* %total_lines.addr, align 4, !dbg !2606
  %12 = load float*, float** %rect1, align 8, !dbg !2607
  %13 = load float*, float** %rect2, align 8, !dbg !2608
  %14 = load float*, float** %rect_out, align 8, !dbg !2609
  call void @do_mul_effect_float(float %7, float %8, i32 %10, i32 %11, float* %12, float* %13, float* %14), !dbg !2610
  br label %if.end, !dbg !2611

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect11, metadata !2612, metadata !DIExpression()), !dbg !2614
  store i8* null, i8** %rect11, align 8, !dbg !2614
  call void @llvm.dbg.declare(metadata i8** %rect22, metadata !2615, metadata !DIExpression()), !dbg !2616
  store i8* null, i8** %rect22, align 8, !dbg !2616
  call void @llvm.dbg.declare(metadata i8** %rect_out3, metadata !2617, metadata !DIExpression()), !dbg !2618
  store i8* null, i8** %rect_out3, align 8, !dbg !2618
  %15 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2619
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2620
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2621
  %18 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2622
  %19 = load i32, i32* %start_line.addr, align 4, !dbg !2623
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %15, %struct.ImBuf* %16, %struct.ImBuf* %17, %struct.ImBuf* null, %struct.ImBuf* %18, i32 %19, i8** %rect11, i8** %rect22, i8** null, i8** %rect_out3), !dbg !2624
  %20 = load float, float* %facf0.addr, align 4, !dbg !2625
  %21 = load float, float* %facf1.addr, align 4, !dbg !2626
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2627
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 3, !dbg !2628
  %23 = load i32, i32* %rectx4, align 8, !dbg !2628
  %24 = load i32, i32* %total_lines.addr, align 4, !dbg !2629
  %25 = load i8*, i8** %rect11, align 8, !dbg !2630
  %26 = load i8*, i8** %rect22, align 8, !dbg !2631
  %27 = load i8*, i8** %rect_out3, align 8, !dbg !2632
  call void @do_mul_effect_byte(float %20, float %21, i32 %23, i32 %24, i8* %25, i8* %26, i8* %27), !dbg !2633
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2634
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_alpha_over_or_under(%struct.Sequence* %seq) #0 !dbg !2635 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %seq1 = alloca %struct.Sequence*, align 8
  %seq2 = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !2636, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq1, metadata !2638, metadata !DIExpression()), !dbg !2639
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2640
  %seq11 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 33, !dbg !2641
  %1 = load %struct.Sequence*, %struct.Sequence** %seq11, align 8, !dbg !2641
  store %struct.Sequence* %1, %struct.Sequence** %seq1, align 8, !dbg !2639
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq2, metadata !2642, metadata !DIExpression()), !dbg !2643
  %2 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2644
  %seq22 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %2, i32 0, i32 34, !dbg !2645
  %3 = load %struct.Sequence*, %struct.Sequence** %seq22, align 8, !dbg !2645
  store %struct.Sequence* %3, %struct.Sequence** %seq2, align 8, !dbg !2643
  %4 = load %struct.Sequence*, %struct.Sequence** %seq1, align 8, !dbg !2646
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2647
  %seq23 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %5, i32 0, i32 34, !dbg !2648
  store %struct.Sequence* %4, %struct.Sequence** %seq23, align 8, !dbg !2649
  %6 = load %struct.Sequence*, %struct.Sequence** %seq2, align 8, !dbg !2650
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2651
  %seq14 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 33, !dbg !2652
  store %struct.Sequence* %6, %struct.Sequence** %seq14, align 8, !dbg !2653
  ret void, !dbg !2654
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_alphaover_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !2655 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect11 = alloca i8*, align 8
  %rect22 = alloca i8*, align 8
  %rect_out3 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2656, metadata !DIExpression()), !dbg !2657
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2658, metadata !DIExpression()), !dbg !2659
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2660, metadata !DIExpression()), !dbg !2661
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2662, metadata !DIExpression()), !dbg !2663
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2664, metadata !DIExpression()), !dbg !2665
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2666, metadata !DIExpression()), !dbg !2667
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2668, metadata !DIExpression()), !dbg !2669
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !2670, metadata !DIExpression()), !dbg !2671
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !2672, metadata !DIExpression()), !dbg !2673
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !2674, metadata !DIExpression()), !dbg !2675
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !2676, metadata !DIExpression()), !dbg !2677
  %0 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2678
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !2680
  %1 = load float*, float** %rect_float, align 8, !dbg !2680
  %tobool = icmp ne float* %1, null, !dbg !2678
  br i1 %tobool, label %if.then, label %if.else, !dbg !2681

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !2682, metadata !DIExpression()), !dbg !2684
  store float* null, float** %rect1, align 8, !dbg !2684
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !2685, metadata !DIExpression()), !dbg !2686
  store float* null, float** %rect2, align 8, !dbg !2686
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !2687, metadata !DIExpression()), !dbg !2688
  store float* null, float** %rect_out, align 8, !dbg !2688
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2689
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2690
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2691
  %5 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2692
  %6 = load i32, i32* %start_line.addr, align 4, !dbg !2693
  call void @slice_get_float_buffers(%struct.SeqRenderData* %2, %struct.ImBuf* %3, %struct.ImBuf* %4, %struct.ImBuf* null, %struct.ImBuf* %5, i32 %6, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !2694
  %7 = load float, float* %facf0.addr, align 4, !dbg !2695
  %8 = load float, float* %facf1.addr, align 4, !dbg !2696
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2697
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !2698
  %10 = load i32, i32* %rectx, align 8, !dbg !2698
  %11 = load i32, i32* %total_lines.addr, align 4, !dbg !2699
  %12 = load float*, float** %rect1, align 8, !dbg !2700
  %13 = load float*, float** %rect2, align 8, !dbg !2701
  %14 = load float*, float** %rect_out, align 8, !dbg !2702
  call void @do_alphaover_effect_float(float %7, float %8, i32 %10, i32 %11, float* %12, float* %13, float* %14), !dbg !2703
  br label %if.end, !dbg !2704

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect11, metadata !2705, metadata !DIExpression()), !dbg !2707
  store i8* null, i8** %rect11, align 8, !dbg !2707
  call void @llvm.dbg.declare(metadata i8** %rect22, metadata !2708, metadata !DIExpression()), !dbg !2709
  store i8* null, i8** %rect22, align 8, !dbg !2709
  call void @llvm.dbg.declare(metadata i8** %rect_out3, metadata !2710, metadata !DIExpression()), !dbg !2711
  store i8* null, i8** %rect_out3, align 8, !dbg !2711
  %15 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2712
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2713
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2714
  %18 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2715
  %19 = load i32, i32* %start_line.addr, align 4, !dbg !2716
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %15, %struct.ImBuf* %16, %struct.ImBuf* %17, %struct.ImBuf* null, %struct.ImBuf* %18, i32 %19, i8** %rect11, i8** %rect22, i8** null, i8** %rect_out3), !dbg !2717
  %20 = load float, float* %facf0.addr, align 4, !dbg !2718
  %21 = load float, float* %facf1.addr, align 4, !dbg !2719
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2720
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 3, !dbg !2721
  %23 = load i32, i32* %rectx4, align 8, !dbg !2721
  %24 = load i32, i32* %total_lines.addr, align 4, !dbg !2722
  %25 = load i8*, i8** %rect11, align 8, !dbg !2723
  %26 = load i8*, i8** %rect22, align 8, !dbg !2724
  %27 = load i8*, i8** %rect_out3, align 8, !dbg !2725
  call void @do_alphaover_effect_byte(float %20, float %21, i32 %23, i32 %24, i8* %25, i8* %26, i8* %27), !dbg !2726
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2727
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_overdrop_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !2728 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect11 = alloca i8*, align 8
  %rect22 = alloca i8*, align 8
  %rect_out3 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2729, metadata !DIExpression()), !dbg !2730
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2731, metadata !DIExpression()), !dbg !2732
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2733, metadata !DIExpression()), !dbg !2734
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2735, metadata !DIExpression()), !dbg !2736
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2737, metadata !DIExpression()), !dbg !2738
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2739, metadata !DIExpression()), !dbg !2740
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2741, metadata !DIExpression()), !dbg !2742
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !2743, metadata !DIExpression()), !dbg !2744
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !2745, metadata !DIExpression()), !dbg !2746
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !2747, metadata !DIExpression()), !dbg !2748
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !2749, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2751, metadata !DIExpression()), !dbg !2752
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2753
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %0, i32 0, i32 3, !dbg !2754
  %1 = load i32, i32* %rectx, align 8, !dbg !2754
  store i32 %1, i32* %x, align 4, !dbg !2752
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2755, metadata !DIExpression()), !dbg !2756
  %2 = load i32, i32* %total_lines.addr, align 4, !dbg !2757
  store i32 %2, i32* %y, align 4, !dbg !2756
  %3 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2758
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 9, !dbg !2760
  %4 = load float*, float** %rect_float, align 8, !dbg !2760
  %tobool = icmp ne float* %4, null, !dbg !2758
  br i1 %tobool, label %if.then, label %if.else, !dbg !2761

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !2762, metadata !DIExpression()), !dbg !2764
  store float* null, float** %rect1, align 8, !dbg !2764
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !2765, metadata !DIExpression()), !dbg !2766
  store float* null, float** %rect2, align 8, !dbg !2766
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !2767, metadata !DIExpression()), !dbg !2768
  store float* null, float** %rect_out, align 8, !dbg !2768
  %5 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2769
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2770
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2771
  %8 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2772
  %9 = load i32, i32* %start_line.addr, align 4, !dbg !2773
  call void @slice_get_float_buffers(%struct.SeqRenderData* %5, %struct.ImBuf* %6, %struct.ImBuf* %7, %struct.ImBuf* null, %struct.ImBuf* %8, i32 %9, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !2774
  %10 = load float, float* %facf0.addr, align 4, !dbg !2775
  %11 = load float, float* %facf1.addr, align 4, !dbg !2776
  %12 = load i32, i32* %x, align 4, !dbg !2777
  %13 = load i32, i32* %y, align 4, !dbg !2778
  %14 = load float*, float** %rect1, align 8, !dbg !2779
  %15 = load float*, float** %rect2, align 8, !dbg !2780
  %16 = load float*, float** %rect_out, align 8, !dbg !2781
  call void @do_drop_effect_float(float %10, float %11, i32 %12, i32 %13, float* %14, float* %15, float* %16), !dbg !2782
  %17 = load float, float* %facf0.addr, align 4, !dbg !2783
  %18 = load float, float* %facf1.addr, align 4, !dbg !2784
  %19 = load i32, i32* %x, align 4, !dbg !2785
  %20 = load i32, i32* %y, align 4, !dbg !2786
  %21 = load float*, float** %rect1, align 8, !dbg !2787
  %22 = load float*, float** %rect2, align 8, !dbg !2788
  %23 = load float*, float** %rect_out, align 8, !dbg !2789
  call void @do_alphaover_effect_float(float %17, float %18, i32 %19, i32 %20, float* %21, float* %22, float* %23), !dbg !2790
  br label %if.end, !dbg !2791

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect11, metadata !2792, metadata !DIExpression()), !dbg !2794
  store i8* null, i8** %rect11, align 8, !dbg !2794
  call void @llvm.dbg.declare(metadata i8** %rect22, metadata !2795, metadata !DIExpression()), !dbg !2796
  store i8* null, i8** %rect22, align 8, !dbg !2796
  call void @llvm.dbg.declare(metadata i8** %rect_out3, metadata !2797, metadata !DIExpression()), !dbg !2798
  store i8* null, i8** %rect_out3, align 8, !dbg !2798
  %24 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2799
  %25 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2800
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2801
  %27 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2802
  %28 = load i32, i32* %start_line.addr, align 4, !dbg !2803
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %24, %struct.ImBuf* %25, %struct.ImBuf* %26, %struct.ImBuf* null, %struct.ImBuf* %27, i32 %28, i8** %rect11, i8** %rect22, i8** null, i8** %rect_out3), !dbg !2804
  %29 = load float, float* %facf0.addr, align 4, !dbg !2805
  %30 = load float, float* %facf1.addr, align 4, !dbg !2806
  %31 = load i32, i32* %x, align 4, !dbg !2807
  %32 = load i32, i32* %y, align 4, !dbg !2808
  %33 = load i8*, i8** %rect11, align 8, !dbg !2809
  %34 = load i8*, i8** %rect22, align 8, !dbg !2810
  %35 = load i8*, i8** %rect_out3, align 8, !dbg !2811
  call void @do_drop_effect_byte(float %29, float %30, i32 %31, i32 %32, i8* %33, i8* %34, i8* %35), !dbg !2812
  %36 = load float, float* %facf0.addr, align 4, !dbg !2813
  %37 = load float, float* %facf1.addr, align 4, !dbg !2814
  %38 = load i32, i32* %x, align 4, !dbg !2815
  %39 = load i32, i32* %y, align 4, !dbg !2816
  %40 = load i8*, i8** %rect11, align 8, !dbg !2817
  %41 = load i8*, i8** %rect22, align 8, !dbg !2818
  %42 = load i8*, i8** %rect_out3, align 8, !dbg !2819
  call void @do_alphaover_effect_byte(float %36, float %37, i32 %38, i32 %39, i8* %40, i8* %41, i8* %42), !dbg !2820
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2821
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_alphaunder_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !2822 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect11 = alloca i8*, align 8
  %rect22 = alloca i8*, align 8
  %rect_out3 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2823, metadata !DIExpression()), !dbg !2824
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !2825, metadata !DIExpression()), !dbg !2826
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2827, metadata !DIExpression()), !dbg !2828
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2829, metadata !DIExpression()), !dbg !2830
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2831, metadata !DIExpression()), !dbg !2832
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2833, metadata !DIExpression()), !dbg !2834
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2835, metadata !DIExpression()), !dbg !2836
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !2837, metadata !DIExpression()), !dbg !2838
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !2839, metadata !DIExpression()), !dbg !2840
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !2841, metadata !DIExpression()), !dbg !2842
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !2843, metadata !DIExpression()), !dbg !2844
  %0 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2845
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !2847
  %1 = load float*, float** %rect_float, align 8, !dbg !2847
  %tobool = icmp ne float* %1, null, !dbg !2845
  br i1 %tobool, label %if.then, label %if.else, !dbg !2848

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !2849, metadata !DIExpression()), !dbg !2851
  store float* null, float** %rect1, align 8, !dbg !2851
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !2852, metadata !DIExpression()), !dbg !2853
  store float* null, float** %rect2, align 8, !dbg !2853
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !2854, metadata !DIExpression()), !dbg !2855
  store float* null, float** %rect_out, align 8, !dbg !2855
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2856
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2857
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2858
  %5 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2859
  %6 = load i32, i32* %start_line.addr, align 4, !dbg !2860
  call void @slice_get_float_buffers(%struct.SeqRenderData* %2, %struct.ImBuf* %3, %struct.ImBuf* %4, %struct.ImBuf* null, %struct.ImBuf* %5, i32 %6, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !2861
  %7 = load float, float* %facf0.addr, align 4, !dbg !2862
  %8 = load float, float* %facf1.addr, align 4, !dbg !2863
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2864
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !2865
  %10 = load i32, i32* %rectx, align 8, !dbg !2865
  %11 = load i32, i32* %total_lines.addr, align 4, !dbg !2866
  %12 = load float*, float** %rect1, align 8, !dbg !2867
  %13 = load float*, float** %rect2, align 8, !dbg !2868
  %14 = load float*, float** %rect_out, align 8, !dbg !2869
  call void @do_alphaunder_effect_float(float %7, float %8, i32 %10, i32 %11, float* %12, float* %13, float* %14), !dbg !2870
  br label %if.end, !dbg !2871

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect11, metadata !2872, metadata !DIExpression()), !dbg !2874
  store i8* null, i8** %rect11, align 8, !dbg !2874
  call void @llvm.dbg.declare(metadata i8** %rect22, metadata !2875, metadata !DIExpression()), !dbg !2876
  store i8* null, i8** %rect22, align 8, !dbg !2876
  call void @llvm.dbg.declare(metadata i8** %rect_out3, metadata !2877, metadata !DIExpression()), !dbg !2878
  store i8* null, i8** %rect_out3, align 8, !dbg !2878
  %15 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2879
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2880
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2881
  %18 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !2882
  %19 = load i32, i32* %start_line.addr, align 4, !dbg !2883
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %15, %struct.ImBuf* %16, %struct.ImBuf* %17, %struct.ImBuf* null, %struct.ImBuf* %18, i32 %19, i8** %rect11, i8** %rect22, i8** null, i8** %rect_out3), !dbg !2884
  %20 = load float, float* %facf0.addr, align 4, !dbg !2885
  %21 = load float, float* %facf1.addr, align 4, !dbg !2886
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2887
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 3, !dbg !2888
  %23 = load i32, i32* %rectx4, align 8, !dbg !2888
  %24 = load i32, i32* %total_lines.addr, align 4, !dbg !2889
  %25 = load i8*, i8** %rect11, align 8, !dbg !2890
  %26 = load i8*, i8** %rect22, align 8, !dbg !2891
  %27 = load i8*, i8** %rect_out3, align 8, !dbg !2892
  call void @do_alphaunder_effect_byte(float %20, float %21, i32 %23, i32 %24, i8* %25, i8* %26, i8* %27), !dbg !2893
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2894
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_wipe_effect(%struct.Sequence* %seq) #0 !dbg !2895 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !2896, metadata !DIExpression()), !dbg !2897
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2898
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !2900
  %1 = load i8*, i8** %effectdata, align 8, !dbg !2900
  %tobool = icmp ne i8* %1, null, !dbg !2898
  br i1 %tobool, label %if.then, label %if.end, !dbg !2901

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2902
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2903
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !2904
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !2904
  call void %2(i8* %4), !dbg !2902
  br label %if.end, !dbg !2902

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2905
  %call = call i8* %5(i64 12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)), !dbg !2905
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2906
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %6, i32 0, i32 43, !dbg !2907
  store i8* %call, i8** %effectdata2, align 8, !dbg !2908
  ret void, !dbg !2909
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_wipe() #0 !dbg !2910 {
entry:
  ret i32 1, !dbg !2911
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_wipe_effect(%struct.Sequence* %seq) #0 !dbg !2912 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !2913, metadata !DIExpression()), !dbg !2914
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2915
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !2917
  %1 = load i8*, i8** %effectdata, align 8, !dbg !2917
  %tobool = icmp ne i8* %1, null, !dbg !2915
  br i1 %tobool, label %if.then, label %if.end, !dbg !2918

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2919
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2920
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !2921
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !2921
  call void %2(i8* %4), !dbg !2919
  br label %if.end, !dbg !2919

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2922
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %5, i32 0, i32 43, !dbg !2923
  store i8* null, i8** %effectdata2, align 8, !dbg !2924
  ret void, !dbg !2925
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_wipe_effect(%struct.Sequence* %dst, %struct.Sequence* %src) #0 !dbg !2926 {
entry:
  %dst.addr = alloca %struct.Sequence*, align 8
  %src.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %dst, %struct.Sequence** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %dst.addr, metadata !2929, metadata !DIExpression()), !dbg !2930
  store %struct.Sequence* %src, %struct.Sequence** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %src.addr, metadata !2931, metadata !DIExpression()), !dbg !2932
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2933
  %1 = load %struct.Sequence*, %struct.Sequence** %src.addr, align 8, !dbg !2934
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 43, !dbg !2935
  %2 = load i8*, i8** %effectdata, align 8, !dbg !2935
  %call = call i8* %0(i8* %2), !dbg !2933
  %3 = load %struct.Sequence*, %struct.Sequence** %dst.addr, align 8, !dbg !2936
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !2937
  store i8* %call, i8** %effectdata1, align 8, !dbg !2938
  ret void, !dbg !2939
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @do_wipe_effect(%struct.SeqRenderData* %context, %struct.Sequence* %seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3) #0 !dbg !2940 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !2943, metadata !DIExpression()), !dbg !2944
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !2945, metadata !DIExpression()), !dbg !2946
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !2947, metadata !DIExpression()), !dbg !2948
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !2949, metadata !DIExpression()), !dbg !2950
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !2951, metadata !DIExpression()), !dbg !2952
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !2953, metadata !DIExpression()), !dbg !2954
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !2955, metadata !DIExpression()), !dbg !2956
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !2957, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !2959, metadata !DIExpression()), !dbg !2960
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2961
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2962
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2963
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !2964
  %call = call %struct.ImBuf* @prepare_effect_imbufs(%struct.SeqRenderData* %0, %struct.ImBuf* %1, %struct.ImBuf* %2, %struct.ImBuf* %3), !dbg !2965
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !2960
  %4 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !2966
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 9, !dbg !2968
  %5 = load float*, float** %rect_float, align 8, !dbg !2968
  %tobool = icmp ne float* %5, null, !dbg !2966
  br i1 %tobool, label %if.then, label %if.else, !dbg !2969

if.then:                                          ; preds = %entry
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2970
  %7 = load float, float* %facf0.addr, align 4, !dbg !2972
  %8 = load float, float* %facf1.addr, align 4, !dbg !2973
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2974
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !2975
  %10 = load i32, i32* %rectx, align 8, !dbg !2975
  %11 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2976
  %recty = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %11, i32 0, i32 4, !dbg !2977
  %12 = load i32, i32* %recty, align 4, !dbg !2977
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2978
  %rect_float1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 9, !dbg !2979
  %14 = load float*, float** %rect_float1, align 8, !dbg !2979
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2980
  %rect_float2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 9, !dbg !2981
  %16 = load float*, float** %rect_float2, align 8, !dbg !2981
  %17 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !2982
  %rect_float3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 9, !dbg !2983
  %18 = load float*, float** %rect_float3, align 8, !dbg !2983
  call void @do_wipe_effect_float(%struct.Sequence* %6, float %7, float %8, i32 %10, i32 %12, float* %14, float* %16, float* %18), !dbg !2984
  br label %if.end, !dbg !2985

if.else:                                          ; preds = %entry
  %19 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !2986
  %20 = load float, float* %facf0.addr, align 4, !dbg !2988
  %21 = load float, float* %facf1.addr, align 4, !dbg !2989
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2990
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 3, !dbg !2991
  %23 = load i32, i32* %rectx4, align 8, !dbg !2991
  %24 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !2992
  %recty5 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %24, i32 0, i32 4, !dbg !2993
  %25 = load i32, i32* %recty5, align 4, !dbg !2993
  %26 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !2994
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %26, i32 0, i32 8, !dbg !2995
  %27 = load i32*, i32** %rect, align 8, !dbg !2995
  %28 = bitcast i32* %27 to i8*, !dbg !2996
  %29 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !2997
  %rect6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %29, i32 0, i32 8, !dbg !2998
  %30 = load i32*, i32** %rect6, align 8, !dbg !2998
  %31 = bitcast i32* %30 to i8*, !dbg !2999
  %32 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3000
  %rect7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %32, i32 0, i32 8, !dbg !3001
  %33 = load i32*, i32** %rect7, align 8, !dbg !3001
  %34 = bitcast i32* %33 to i8*, !dbg !3002
  call void @do_wipe_effect_byte(%struct.Sequence* %19, float %20, float %21, i32 %23, i32 %25, i8* %28, i8* %31, i8* %34), !dbg !3003
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %35 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3004
  ret %struct.ImBuf* %35, !dbg !3005
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_glow_effect(%struct.Sequence* %seq) #0 !dbg !3006 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %glow = alloca %struct.GlowVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3007, metadata !DIExpression()), !dbg !3008
  call void @llvm.dbg.declare(metadata %struct.GlowVars** %glow, metadata !3009, metadata !DIExpression()), !dbg !3010
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3011
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3013
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3013
  %tobool = icmp ne i8* %1, null, !dbg !3011
  br i1 %tobool, label %if.then, label %if.end, !dbg !3014

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3015
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3016
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3017
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !3017
  call void %2(i8* %4), !dbg !3015
  br label %if.end, !dbg !3015

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3018
  %call = call i8* %5(i64 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !3018
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3019
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %6, i32 0, i32 43, !dbg !3020
  store i8* %call, i8** %effectdata2, align 8, !dbg !3021
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3022
  %effectdata3 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 43, !dbg !3023
  %8 = load i8*, i8** %effectdata3, align 8, !dbg !3023
  %9 = bitcast i8* %8 to %struct.GlowVars*, !dbg !3024
  store %struct.GlowVars* %9, %struct.GlowVars** %glow, align 8, !dbg !3025
  %10 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !3026
  %fMini = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %10, i32 0, i32 0, !dbg !3027
  store float 2.500000e-01, float* %fMini, align 4, !dbg !3028
  %11 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !3029
  %fClamp = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %11, i32 0, i32 1, !dbg !3030
  store float 1.000000e+00, float* %fClamp, align 4, !dbg !3031
  %12 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !3032
  %fBoost = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %12, i32 0, i32 2, !dbg !3033
  store float 5.000000e-01, float* %fBoost, align 4, !dbg !3034
  %13 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !3035
  %dDist = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %13, i32 0, i32 3, !dbg !3036
  store float 3.000000e+00, float* %dDist, align 4, !dbg !3037
  %14 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !3038
  %dQuality = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %14, i32 0, i32 4, !dbg !3039
  store i32 3, i32* %dQuality, align 4, !dbg !3040
  %15 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !3041
  %bNoComp = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %15, i32 0, i32 5, !dbg !3042
  store i32 0, i32* %bNoComp, align 4, !dbg !3043
  ret void, !dbg !3044
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_glow() #0 !dbg !3045 {
entry:
  ret i32 1, !dbg !3046
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_glow_effect(%struct.Sequence* %seq) #0 !dbg !3047 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3048, metadata !DIExpression()), !dbg !3049
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3050
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3052
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3052
  %tobool = icmp ne i8* %1, null, !dbg !3050
  br i1 %tobool, label %if.then, label %if.end, !dbg !3053

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3054
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3055
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3056
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !3056
  call void %2(i8* %4), !dbg !3054
  br label %if.end, !dbg !3054

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3057
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %5, i32 0, i32 43, !dbg !3058
  store i8* null, i8** %effectdata2, align 8, !dbg !3059
  ret void, !dbg !3060
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_glow_effect(%struct.Sequence* %dst, %struct.Sequence* %src) #0 !dbg !3061 {
entry:
  %dst.addr = alloca %struct.Sequence*, align 8
  %src.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %dst, %struct.Sequence** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %dst.addr, metadata !3062, metadata !DIExpression()), !dbg !3063
  store %struct.Sequence* %src, %struct.Sequence** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %src.addr, metadata !3064, metadata !DIExpression()), !dbg !3065
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3066
  %1 = load %struct.Sequence*, %struct.Sequence** %src.addr, align 8, !dbg !3067
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 43, !dbg !3068
  %2 = load i8*, i8** %effectdata, align 8, !dbg !3068
  %call = call i8* %0(i8* %2), !dbg !3066
  %3 = load %struct.Sequence*, %struct.Sequence** %dst.addr, align 8, !dbg !3069
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3070
  store i8* %call, i8** %effectdata1, align 8, !dbg !3071
  ret void, !dbg !3072
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @do_glow_effect(%struct.SeqRenderData* %context, %struct.Sequence* %seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3) #0 !dbg !3073 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  %render_size = alloca i32, align 4
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !3074, metadata !DIExpression()), !dbg !3075
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3076, metadata !DIExpression()), !dbg !3077
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !3078, metadata !DIExpression()), !dbg !3079
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !3080, metadata !DIExpression()), !dbg !3081
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !3082, metadata !DIExpression()), !dbg !3083
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !3084, metadata !DIExpression()), !dbg !3085
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !3086, metadata !DIExpression()), !dbg !3087
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !3088, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !3090, metadata !DIExpression()), !dbg !3091
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3092
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3093
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !3094
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !3095
  %call = call %struct.ImBuf* @prepare_effect_imbufs(%struct.SeqRenderData* %0, %struct.ImBuf* %1, %struct.ImBuf* %2, %struct.ImBuf* %3), !dbg !3096
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !3091
  call void @llvm.dbg.declare(metadata i32* %render_size, metadata !3097, metadata !DIExpression()), !dbg !3098
  %4 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3099
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %4, i32 0, i32 3, !dbg !3100
  %5 = load i32, i32* %rectx, align 8, !dbg !3100
  %mul = mul nsw i32 100, %5, !dbg !3101
  %6 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3102
  %scene = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %6, i32 0, i32 2, !dbg !3103
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3103
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 22, !dbg !3104
  %xsch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 33, !dbg !3105
  %8 = load i32, i32* %xsch, align 4, !dbg !3105
  %div = sdiv i32 %mul, %8, !dbg !3106
  store i32 %div, i32* %render_size, align 4, !dbg !3098
  %9 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3107
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 9, !dbg !3109
  %10 = load float*, float** %rect_float, align 8, !dbg !3109
  %tobool = icmp ne float* %10, null, !dbg !3107
  br i1 %tobool, label %if.then, label %if.else, !dbg !3110

if.then:                                          ; preds = %entry
  %11 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3111
  %12 = load i32, i32* %render_size, align 4, !dbg !3113
  %13 = load float, float* %facf0.addr, align 4, !dbg !3114
  %14 = load float, float* %facf1.addr, align 4, !dbg !3115
  %15 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3116
  %rectx1 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %15, i32 0, i32 3, !dbg !3117
  %16 = load i32, i32* %rectx1, align 8, !dbg !3117
  %17 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3118
  %recty = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %17, i32 0, i32 4, !dbg !3119
  %18 = load i32, i32* %recty, align 4, !dbg !3119
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3120
  %rect_float2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %19, i32 0, i32 9, !dbg !3121
  %20 = load float*, float** %rect_float2, align 8, !dbg !3121
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !3122
  %rect_float3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %21, i32 0, i32 9, !dbg !3123
  %22 = load float*, float** %rect_float3, align 8, !dbg !3123
  %23 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3124
  %rect_float4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %23, i32 0, i32 9, !dbg !3125
  %24 = load float*, float** %rect_float4, align 8, !dbg !3125
  call void @do_glow_effect_float(%struct.Sequence* %11, i32 %12, float %13, float %14, i32 %16, i32 %18, float* %20, float* %22, float* %24), !dbg !3126
  br label %if.end, !dbg !3127

if.else:                                          ; preds = %entry
  %25 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3128
  %26 = load i32, i32* %render_size, align 4, !dbg !3130
  %27 = load float, float* %facf0.addr, align 4, !dbg !3131
  %28 = load float, float* %facf1.addr, align 4, !dbg !3132
  %29 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3133
  %rectx5 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %29, i32 0, i32 3, !dbg !3134
  %30 = load i32, i32* %rectx5, align 8, !dbg !3134
  %31 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3135
  %recty6 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %31, i32 0, i32 4, !dbg !3136
  %32 = load i32, i32* %recty6, align 4, !dbg !3136
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3137
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %33, i32 0, i32 8, !dbg !3138
  %34 = load i32*, i32** %rect, align 8, !dbg !3138
  %35 = bitcast i32* %34 to i8*, !dbg !3139
  %36 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !3140
  %rect7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %36, i32 0, i32 8, !dbg !3141
  %37 = load i32*, i32** %rect7, align 8, !dbg !3141
  %38 = bitcast i32* %37 to i8*, !dbg !3142
  %39 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3143
  %rect8 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %39, i32 0, i32 8, !dbg !3144
  %40 = load i32*, i32** %rect8, align 8, !dbg !3144
  %41 = bitcast i32* %40 to i8*, !dbg !3145
  call void @do_glow_effect_byte(%struct.Sequence* %25, i32 %26, float %27, float %28, i32 %30, i32 %32, i8* %35, i8* %38, i8* %41), !dbg !3146
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %42 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3147
  ret %struct.ImBuf* %42, !dbg !3148
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_transform_effect(%struct.Sequence* %seq) #0 !dbg !3149 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %transform = alloca %struct.TransformVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3150, metadata !DIExpression()), !dbg !3151
  call void @llvm.dbg.declare(metadata %struct.TransformVars** %transform, metadata !3152, metadata !DIExpression()), !dbg !3153
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3154
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3156
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3156
  %tobool = icmp ne i8* %1, null, !dbg !3154
  br i1 %tobool, label %if.then, label %if.end, !dbg !3157

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3158
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3159
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3160
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !3160
  call void %2(i8* %4), !dbg !3158
  br label %if.end, !dbg !3158

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3161
  %call = call i8* %5(i64 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)), !dbg !3161
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3162
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %6, i32 0, i32 43, !dbg !3163
  store i8* %call, i8** %effectdata2, align 8, !dbg !3164
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3165
  %effectdata3 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 43, !dbg !3166
  %8 = load i8*, i8** %effectdata3, align 8, !dbg !3166
  %9 = bitcast i8* %8 to %struct.TransformVars*, !dbg !3167
  store %struct.TransformVars* %9, %struct.TransformVars** %transform, align 8, !dbg !3168
  %10 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !3169
  %ScalexIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %10, i32 0, i32 0, !dbg !3170
  store float 1.000000e+00, float* %ScalexIni, align 4, !dbg !3171
  %11 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !3172
  %ScaleyIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %11, i32 0, i32 1, !dbg !3173
  store float 1.000000e+00, float* %ScaleyIni, align 4, !dbg !3174
  %12 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !3175
  %xIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %12, i32 0, i32 2, !dbg !3176
  store float 0.000000e+00, float* %xIni, align 4, !dbg !3177
  %13 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !3178
  %yIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %13, i32 0, i32 3, !dbg !3179
  store float 0.000000e+00, float* %yIni, align 4, !dbg !3180
  %14 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !3181
  %rotIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %14, i32 0, i32 4, !dbg !3182
  store float 0.000000e+00, float* %rotIni, align 4, !dbg !3183
  %15 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !3184
  %interpolation = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %15, i32 0, i32 6, !dbg !3185
  store i32 1, i32* %interpolation, align 4, !dbg !3186
  %16 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !3187
  %percent = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %16, i32 0, i32 5, !dbg !3188
  store i32 1, i32* %percent, align 4, !dbg !3189
  %17 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !3190
  %uniform_scale = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %17, i32 0, i32 7, !dbg !3191
  store i32 0, i32* %uniform_scale, align 4, !dbg !3192
  ret void, !dbg !3193
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_transform() #0 !dbg !3194 {
entry:
  ret i32 1, !dbg !3195
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_transform_effect(%struct.Sequence* %seq) #0 !dbg !3196 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3197, metadata !DIExpression()), !dbg !3198
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3199
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3201
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3201
  %tobool = icmp ne i8* %1, null, !dbg !3199
  br i1 %tobool, label %if.then, label %if.end, !dbg !3202

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3203
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3204
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3205
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !3205
  call void %2(i8* %4), !dbg !3203
  br label %if.end, !dbg !3203

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3206
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %5, i32 0, i32 43, !dbg !3207
  store i8* null, i8** %effectdata2, align 8, !dbg !3208
  ret void, !dbg !3209
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_transform_effect(%struct.Sequence* %dst, %struct.Sequence* %src) #0 !dbg !3210 {
entry:
  %dst.addr = alloca %struct.Sequence*, align 8
  %src.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %dst, %struct.Sequence** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %dst.addr, metadata !3211, metadata !DIExpression()), !dbg !3212
  store %struct.Sequence* %src, %struct.Sequence** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %src.addr, metadata !3213, metadata !DIExpression()), !dbg !3214
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3215
  %1 = load %struct.Sequence*, %struct.Sequence** %src.addr, align 8, !dbg !3216
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 43, !dbg !3217
  %2 = load i8*, i8** %effectdata, align 8, !dbg !3217
  %call = call i8* %0(i8* %2), !dbg !3215
  %3 = load %struct.Sequence*, %struct.Sequence** %dst.addr, align 8, !dbg !3218
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3219
  store i8* %call, i8** %effectdata1, align 8, !dbg !3220
  ret void, !dbg !3221
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @do_transform_effect(%struct.SeqRenderData* %context, %struct.Sequence* %seq, float %UNUSED_cfra, float %facf0, float %UNUSED_facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3) #0 !dbg !3222 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !3223, metadata !DIExpression()), !dbg !3224
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3225, metadata !DIExpression()), !dbg !3226
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !3227, metadata !DIExpression()), !dbg !3228
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !3229, metadata !DIExpression()), !dbg !3230
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !3231, metadata !DIExpression()), !dbg !3232
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !3233, metadata !DIExpression()), !dbg !3234
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !3235, metadata !DIExpression()), !dbg !3236
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !3237, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !3239, metadata !DIExpression()), !dbg !3240
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3241
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3242
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !3243
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !3244
  %call = call %struct.ImBuf* @prepare_effect_imbufs(%struct.SeqRenderData* %0, %struct.ImBuf* %1, %struct.ImBuf* %2, %struct.ImBuf* %3), !dbg !3245
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !3240
  %4 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3246
  %scene = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %4, i32 0, i32 2, !dbg !3247
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3247
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3248
  %7 = load float, float* %facf0.addr, align 4, !dbg !3249
  %8 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3250
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %8, i32 0, i32 3, !dbg !3251
  %9 = load i32, i32* %rectx, align 8, !dbg !3251
  %10 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3252
  %recty = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %10, i32 0, i32 4, !dbg !3253
  %11 = load i32, i32* %recty, align 4, !dbg !3253
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3254
  %13 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3255
  call void @do_transform(%struct.Scene* %5, %struct.Sequence* %6, float %7, i32 %9, i32 %11, %struct.ImBuf* %12, %struct.ImBuf* %13), !dbg !3256
  %14 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3257
  ret %struct.ImBuf* %14, !dbg !3258
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_speed_effect(%struct.Sequence* %seq) #0 !dbg !3259 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %v = alloca %struct.SpeedControlVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3260, metadata !DIExpression()), !dbg !3261
  call void @llvm.dbg.declare(metadata %struct.SpeedControlVars** %v, metadata !3262, metadata !DIExpression()), !dbg !3263
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3264
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3266
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3266
  %tobool = icmp ne i8* %1, null, !dbg !3264
  br i1 %tobool, label %if.then, label %if.end, !dbg !3267

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3268
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3269
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3270
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !3270
  call void %2(i8* %4), !dbg !3268
  br label %if.end, !dbg !3268

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3271
  %call = call i8* %5(i64 24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)), !dbg !3271
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3272
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %6, i32 0, i32 43, !dbg !3273
  store i8* %call, i8** %effectdata2, align 8, !dbg !3274
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3275
  %effectdata3 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 43, !dbg !3276
  %8 = load i8*, i8** %effectdata3, align 8, !dbg !3276
  %9 = bitcast i8* %8 to %struct.SpeedControlVars*, !dbg !3277
  store %struct.SpeedControlVars* %9, %struct.SpeedControlVars** %v, align 8, !dbg !3278
  %10 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3279
  %globalSpeed = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %10, i32 0, i32 1, !dbg !3280
  store float 1.000000e+00, float* %globalSpeed, align 8, !dbg !3281
  %11 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3282
  %frameMap = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %11, i32 0, i32 0, !dbg !3283
  store float* null, float** %frameMap, align 8, !dbg !3284
  %12 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3285
  %flags = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %12, i32 0, i32 2, !dbg !3286
  %13 = load i32, i32* %flags, align 4, !dbg !3287
  %or = or i32 %13, 1, !dbg !3287
  store i32 %or, i32* %flags, align 4, !dbg !3287
  %14 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3288
  %length = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %14, i32 0, i32 3, !dbg !3289
  store i32 0, i32* %length, align 8, !dbg !3290
  ret void, !dbg !3291
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_speed() #0 !dbg !3292 {
entry:
  ret i32 1, !dbg !3293
}

; Function Attrs: noinline nounwind uwtable
define internal void @load_speed_effect(%struct.Sequence* %seq) #0 !dbg !3294 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %v = alloca %struct.SpeedControlVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3295, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.declare(metadata %struct.SpeedControlVars** %v, metadata !3297, metadata !DIExpression()), !dbg !3298
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3299
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3300
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3300
  %2 = bitcast i8* %1 to %struct.SpeedControlVars*, !dbg !3301
  store %struct.SpeedControlVars* %2, %struct.SpeedControlVars** %v, align 8, !dbg !3298
  %3 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3302
  %frameMap = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %3, i32 0, i32 0, !dbg !3303
  store float* null, float** %frameMap, align 8, !dbg !3304
  %4 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3305
  %length = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %4, i32 0, i32 3, !dbg !3306
  store i32 0, i32* %length, align 8, !dbg !3307
  ret void, !dbg !3308
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_speed_effect(%struct.Sequence* %seq) #0 !dbg !3309 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %v = alloca %struct.SpeedControlVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3310, metadata !DIExpression()), !dbg !3311
  call void @llvm.dbg.declare(metadata %struct.SpeedControlVars** %v, metadata !3312, metadata !DIExpression()), !dbg !3313
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3314
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3315
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3315
  %2 = bitcast i8* %1 to %struct.SpeedControlVars*, !dbg !3316
  store %struct.SpeedControlVars* %2, %struct.SpeedControlVars** %v, align 8, !dbg !3313
  %3 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3317
  %frameMap = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %3, i32 0, i32 0, !dbg !3319
  %4 = load float*, float** %frameMap, align 8, !dbg !3319
  %tobool = icmp ne float* %4, null, !dbg !3317
  br i1 %tobool, label %if.then, label %if.end, !dbg !3320

if.then:                                          ; preds = %entry
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3321
  %6 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3322
  %frameMap1 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %6, i32 0, i32 0, !dbg !3323
  %7 = load float*, float** %frameMap1, align 8, !dbg !3323
  %8 = bitcast float* %7 to i8*, !dbg !3322
  call void %5(i8* %8), !dbg !3321
  br label %if.end, !dbg !3321

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3324
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %9, i32 0, i32 43, !dbg !3326
  %10 = load i8*, i8** %effectdata2, align 8, !dbg !3326
  %tobool3 = icmp ne i8* %10, null, !dbg !3324
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !3327

if.then4:                                         ; preds = %if.end
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3328
  %12 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3329
  %effectdata5 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %12, i32 0, i32 43, !dbg !3330
  %13 = load i8*, i8** %effectdata5, align 8, !dbg !3330
  call void %11(i8* %13), !dbg !3328
  br label %if.end6, !dbg !3328

if.end6:                                          ; preds = %if.then4, %if.end
  %14 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3331
  %effectdata7 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %14, i32 0, i32 43, !dbg !3332
  store i8* null, i8** %effectdata7, align 8, !dbg !3333
  ret void, !dbg !3334
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_speed_effect(%struct.Sequence* %dst, %struct.Sequence* %src) #0 !dbg !3335 {
entry:
  %dst.addr = alloca %struct.Sequence*, align 8
  %src.addr = alloca %struct.Sequence*, align 8
  %v = alloca %struct.SpeedControlVars*, align 8
  store %struct.Sequence* %dst, %struct.Sequence** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %dst.addr, metadata !3336, metadata !DIExpression()), !dbg !3337
  store %struct.Sequence* %src, %struct.Sequence** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %src.addr, metadata !3338, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.declare(metadata %struct.SpeedControlVars** %v, metadata !3340, metadata !DIExpression()), !dbg !3341
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3342
  %1 = load %struct.Sequence*, %struct.Sequence** %src.addr, align 8, !dbg !3343
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 43, !dbg !3344
  %2 = load i8*, i8** %effectdata, align 8, !dbg !3344
  %call = call i8* %0(i8* %2), !dbg !3342
  %3 = load %struct.Sequence*, %struct.Sequence** %dst.addr, align 8, !dbg !3345
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3346
  store i8* %call, i8** %effectdata1, align 8, !dbg !3347
  %4 = load %struct.Sequence*, %struct.Sequence** %dst.addr, align 8, !dbg !3348
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %4, i32 0, i32 43, !dbg !3349
  %5 = load i8*, i8** %effectdata2, align 8, !dbg !3349
  %6 = bitcast i8* %5 to %struct.SpeedControlVars*, !dbg !3350
  store %struct.SpeedControlVars* %6, %struct.SpeedControlVars** %v, align 8, !dbg !3351
  %7 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3352
  %frameMap = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %7, i32 0, i32 0, !dbg !3353
  store float* null, float** %frameMap, align 8, !dbg !3354
  %8 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3355
  %length = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %8, i32 0, i32 3, !dbg !3356
  store i32 0, i32* %length, align 8, !dbg !3357
  ret void, !dbg !3358
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @do_speed_effect(%struct.SeqRenderData* %context, %struct.Sequence* %UNUSED_seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3) #0 !dbg !3359 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !3360, metadata !DIExpression()), !dbg !3361
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !3362, metadata !DIExpression()), !dbg !3363
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !3364, metadata !DIExpression()), !dbg !3365
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !3366, metadata !DIExpression()), !dbg !3367
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !3368, metadata !DIExpression()), !dbg !3369
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !3370, metadata !DIExpression()), !dbg !3371
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !3372, metadata !DIExpression()), !dbg !3373
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !3374, metadata !DIExpression()), !dbg !3375
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !3376, metadata !DIExpression()), !dbg !3377
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3378
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3379
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !3380
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !3381
  %call = call %struct.ImBuf* @prepare_effect_imbufs(%struct.SeqRenderData* %0, %struct.ImBuf* %1, %struct.ImBuf* %2, %struct.ImBuf* %3), !dbg !3382
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !3377
  %4 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3383
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 9, !dbg !3385
  %5 = load float*, float** %rect_float, align 8, !dbg !3385
  %tobool = icmp ne float* %5, null, !dbg !3383
  br i1 %tobool, label %if.then, label %if.else, !dbg !3386

if.then:                                          ; preds = %entry
  %6 = load float, float* %facf0.addr, align 4, !dbg !3387
  %7 = load float, float* %facf1.addr, align 4, !dbg !3389
  %8 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3390
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %8, i32 0, i32 3, !dbg !3391
  %9 = load i32, i32* %rectx, align 8, !dbg !3391
  %10 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3392
  %recty = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %10, i32 0, i32 4, !dbg !3393
  %11 = load i32, i32* %recty, align 4, !dbg !3393
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3394
  %rect_float1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 9, !dbg !3395
  %13 = load float*, float** %rect_float1, align 8, !dbg !3395
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !3396
  %rect_float2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %14, i32 0, i32 9, !dbg !3397
  %15 = load float*, float** %rect_float2, align 8, !dbg !3397
  %16 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3398
  %rect_float3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %16, i32 0, i32 9, !dbg !3399
  %17 = load float*, float** %rect_float3, align 8, !dbg !3399
  call void @do_cross_effect_float(float %6, float %7, i32 %9, i32 %11, float* %13, float* %15, float* %17), !dbg !3400
  br label %if.end, !dbg !3401

if.else:                                          ; preds = %entry
  %18 = load float, float* %facf0.addr, align 4, !dbg !3402
  %19 = load float, float* %facf1.addr, align 4, !dbg !3404
  %20 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3405
  %rectx4 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %20, i32 0, i32 3, !dbg !3406
  %21 = load i32, i32* %rectx4, align 8, !dbg !3406
  %22 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3407
  %recty5 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %22, i32 0, i32 4, !dbg !3408
  %23 = load i32, i32* %recty5, align 4, !dbg !3408
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3409
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %24, i32 0, i32 8, !dbg !3410
  %25 = load i32*, i32** %rect, align 8, !dbg !3410
  %26 = bitcast i32* %25 to i8*, !dbg !3411
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !3412
  %rect6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 8, !dbg !3413
  %28 = load i32*, i32** %rect6, align 8, !dbg !3413
  %29 = bitcast i32* %28 to i8*, !dbg !3414
  %30 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3415
  %rect7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %30, i32 0, i32 8, !dbg !3416
  %31 = load i32*, i32** %rect7, align 8, !dbg !3416
  %32 = bitcast i32* %31 to i8*, !dbg !3417
  call void @do_cross_effect_byte(float %18, float %19, i32 %21, i32 %23, i8* %26, i8* %29, i8* %32), !dbg !3418
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %33 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3419
  ret %struct.ImBuf* %33, !dbg !3420
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @early_out_speed(%struct.Sequence* %UNUSED_seq, float %UNUSED_facf0, float %UNUSED_facf1) #0 !dbg !3421 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !3422, metadata !DIExpression()), !dbg !3423
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !3424, metadata !DIExpression()), !dbg !3425
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !3426, metadata !DIExpression()), !dbg !3427
  ret i32 1, !dbg !3428
}

; Function Attrs: noinline nounwind uwtable
define internal void @store_icu_yrange_speed(%struct.Sequence* %seq, i16 signext %UNUSED_adrcode, float* %ymin, float* %ymax) #0 !dbg !3429 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_adrcode.addr = alloca i16, align 2
  %ymin.addr = alloca float*, align 8
  %ymax.addr = alloca float*, align 8
  %v = alloca %struct.SpeedControlVars*, align 8
  %tmp = alloca %struct.SeqEffectHandle, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3430, metadata !DIExpression()), !dbg !3431
  store i16 %UNUSED_adrcode, i16* %UNUSED_adrcode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %UNUSED_adrcode.addr, metadata !3432, metadata !DIExpression()), !dbg !3433
  store float* %ymin, float** %ymin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ymin.addr, metadata !3434, metadata !DIExpression()), !dbg !3435
  store float* %ymax, float** %ymax.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ymax.addr, metadata !3436, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.declare(metadata %struct.SpeedControlVars** %v, metadata !3438, metadata !DIExpression()), !dbg !3439
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3440
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3441
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3441
  %2 = bitcast i8* %1 to %struct.SpeedControlVars*, !dbg !3442
  store %struct.SpeedControlVars* %2, %struct.SpeedControlVars** %v, align 8, !dbg !3439
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3443
  call void @BKE_sequence_get_effect(%struct.SeqEffectHandle* sret %tmp, %struct.Sequence* %3), !dbg !3444
  %4 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3445
  %flags = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %4, i32 0, i32 2, !dbg !3447
  %5 = load i32, i32* %flags, align 4, !dbg !3447
  %and = and i32 %5, 1, !dbg !3448
  %cmp = icmp ne i32 %and, 0, !dbg !3449
  br i1 %cmp, label %if.then, label %if.else, !dbg !3450

if.then:                                          ; preds = %entry
  %6 = load float*, float** %ymin.addr, align 8, !dbg !3451
  store float -1.000000e+02, float* %6, align 4, !dbg !3453
  %7 = load float*, float** %ymax.addr, align 8, !dbg !3454
  store float 1.000000e+02, float* %7, align 4, !dbg !3455
  br label %if.end5, !dbg !3456

if.else:                                          ; preds = %entry
  %8 = load %struct.SpeedControlVars*, %struct.SpeedControlVars** %v, align 8, !dbg !3457
  %flags1 = getelementptr inbounds %struct.SpeedControlVars, %struct.SpeedControlVars* %8, i32 0, i32 2, !dbg !3460
  %9 = load i32, i32* %flags1, align 4, !dbg !3460
  %and2 = and i32 %9, 4, !dbg !3461
  %tobool = icmp ne i32 %and2, 0, !dbg !3461
  br i1 %tobool, label %if.then3, label %if.else4, !dbg !3462

if.then3:                                         ; preds = %if.else
  %10 = load float*, float** %ymin.addr, align 8, !dbg !3463
  store float 0.000000e+00, float* %10, align 4, !dbg !3465
  %11 = load float*, float** %ymax.addr, align 8, !dbg !3466
  store float 1.000000e+00, float* %11, align 4, !dbg !3467
  br label %if.end, !dbg !3468

if.else4:                                         ; preds = %if.else
  %12 = load float*, float** %ymin.addr, align 8, !dbg !3469
  store float 0.000000e+00, float* %12, align 4, !dbg !3471
  %13 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3472
  %len = getelementptr inbounds %struct.Sequence, %struct.Sequence* %13, i32 0, i32 7, !dbg !3473
  %14 = load i32, i32* %len, align 8, !dbg !3473
  %conv = sitofp i32 %14 to float, !dbg !3472
  %15 = load float*, float** %ymax.addr, align 8, !dbg !3474
  store float %conv, float* %15, align 4, !dbg !3475
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then3
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  ret void, !dbg !3476
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_solid_color(%struct.Sequence* %seq) #0 !dbg !3477 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %cv = alloca %struct.SolidColorVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3478, metadata !DIExpression()), !dbg !3479
  call void @llvm.dbg.declare(metadata %struct.SolidColorVars** %cv, metadata !3480, metadata !DIExpression()), !dbg !3481
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3482
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3484
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3484
  %tobool = icmp ne i8* %1, null, !dbg !3482
  br i1 %tobool, label %if.then, label %if.end, !dbg !3485

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3486
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3487
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3488
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !3488
  call void %2(i8* %4), !dbg !3486
  br label %if.end, !dbg !3486

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3489
  %call = call i8* %5(i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)), !dbg !3489
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3490
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %6, i32 0, i32 43, !dbg !3491
  store i8* %call, i8** %effectdata2, align 8, !dbg !3492
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3493
  %effectdata3 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %7, i32 0, i32 43, !dbg !3494
  %8 = load i8*, i8** %effectdata3, align 8, !dbg !3494
  %9 = bitcast i8* %8 to %struct.SolidColorVars*, !dbg !3495
  store %struct.SolidColorVars* %9, %struct.SolidColorVars** %cv, align 8, !dbg !3496
  %10 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3497
  %col = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %10, i32 0, i32 0, !dbg !3498
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 2, !dbg !3497
  store float 5.000000e-01, float* %arrayidx, align 4, !dbg !3499
  %11 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3500
  %col4 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %11, i32 0, i32 0, !dbg !3501
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %col4, i64 0, i64 1, !dbg !3500
  store float 5.000000e-01, float* %arrayidx5, align 4, !dbg !3502
  %12 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3503
  %col6 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %12, i32 0, i32 0, !dbg !3504
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %col6, i64 0, i64 0, !dbg !3503
  store float 5.000000e-01, float* %arrayidx7, align 4, !dbg !3505
  ret void, !dbg !3506
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_color() #0 !dbg !3507 {
entry:
  ret i32 0, !dbg !3508
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @early_out_color(%struct.Sequence* %UNUSED_seq, float %UNUSED_facf0, float %UNUSED_facf1) #0 !dbg !3509 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !3510, metadata !DIExpression()), !dbg !3511
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !3512, metadata !DIExpression()), !dbg !3513
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !3514, metadata !DIExpression()), !dbg !3515
  ret i32 -1, !dbg !3516
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_solid_color(%struct.Sequence* %seq) #0 !dbg !3517 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3518, metadata !DIExpression()), !dbg !3519
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3520
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !3522
  %1 = load i8*, i8** %effectdata, align 8, !dbg !3522
  %tobool = icmp ne i8* %1, null, !dbg !3520
  br i1 %tobool, label %if.then, label %if.end, !dbg !3523

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3524
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3525
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3526
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !3526
  call void %2(i8* %4), !dbg !3524
  br label %if.end, !dbg !3524

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3527
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %5, i32 0, i32 43, !dbg !3528
  store i8* null, i8** %effectdata2, align 8, !dbg !3529
  ret void, !dbg !3530
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_solid_color(%struct.Sequence* %dst, %struct.Sequence* %src) #0 !dbg !3531 {
entry:
  %dst.addr = alloca %struct.Sequence*, align 8
  %src.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %dst, %struct.Sequence** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %dst.addr, metadata !3532, metadata !DIExpression()), !dbg !3533
  store %struct.Sequence* %src, %struct.Sequence** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %src.addr, metadata !3534, metadata !DIExpression()), !dbg !3535
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3536
  %1 = load %struct.Sequence*, %struct.Sequence** %src.addr, align 8, !dbg !3537
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 43, !dbg !3538
  %2 = load i8*, i8** %effectdata, align 8, !dbg !3538
  %call = call i8* %0(i8* %2), !dbg !3536
  %3 = load %struct.Sequence*, %struct.Sequence** %dst.addr, align 8, !dbg !3539
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !3540
  store i8* %call, i8** %effectdata1, align 8, !dbg !3541
  ret void, !dbg !3542
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @do_solid_color(%struct.SeqRenderData* %context, %struct.Sequence* %seq, float %UNUSED_cfra, float %facf0, float %facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3) #0 !dbg !3543 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  %cv = alloca %struct.SolidColorVars*, align 8
  %rect = alloca i8*, align 8
  %rect_float = alloca float*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %col0 = alloca [3 x i8], align 1
  %col1 = alloca [3 x i8], align 1
  %col076 = alloca [3 x float], align 4
  %col177 = alloca [3 x float], align 4
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !3544, metadata !DIExpression()), !dbg !3545
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3546, metadata !DIExpression()), !dbg !3547
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !3548, metadata !DIExpression()), !dbg !3549
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !3550, metadata !DIExpression()), !dbg !3551
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !3552, metadata !DIExpression()), !dbg !3553
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !3554, metadata !DIExpression()), !dbg !3555
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !3556, metadata !DIExpression()), !dbg !3557
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !3558, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !3560, metadata !DIExpression()), !dbg !3561
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3562
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !3563
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !3564
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !3565
  %call = call %struct.ImBuf* @prepare_effect_imbufs(%struct.SeqRenderData* %0, %struct.ImBuf* %1, %struct.ImBuf* %2, %struct.ImBuf* %3), !dbg !3566
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !3561
  call void @llvm.dbg.declare(metadata %struct.SolidColorVars** %cv, metadata !3567, metadata !DIExpression()), !dbg !3568
  %4 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3569
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %4, i32 0, i32 43, !dbg !3570
  %5 = load i8*, i8** %effectdata, align 8, !dbg !3570
  %6 = bitcast i8* %5 to %struct.SolidColorVars*, !dbg !3571
  store %struct.SolidColorVars* %6, %struct.SolidColorVars** %cv, align 8, !dbg !3568
  call void @llvm.dbg.declare(metadata i8** %rect, metadata !3572, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.declare(metadata float** %rect_float, metadata !3574, metadata !DIExpression()), !dbg !3575
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata i32* %y, metadata !3578, metadata !DIExpression()), !dbg !3579
  %7 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3580
  %rect1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 8, !dbg !3582
  %8 = load i32*, i32** %rect1, align 8, !dbg !3582
  %tobool = icmp ne i32* %8, null, !dbg !3580
  br i1 %tobool, label %if.then, label %if.else, !dbg !3583

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x i8]* %col0, metadata !3584, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.declare(metadata [3 x i8]* %col1, metadata !3588, metadata !DIExpression()), !dbg !3589
  %9 = load float, float* %facf0.addr, align 4, !dbg !3590
  %10 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3591
  %col = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %10, i32 0, i32 0, !dbg !3592
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !3591
  %11 = load float, float* %arrayidx, align 4, !dbg !3591
  %mul = fmul float %9, %11, !dbg !3593
  %mul2 = fmul float %mul, 2.550000e+02, !dbg !3594
  %conv = fptoui float %mul2 to i8, !dbg !3590
  %arrayidx3 = getelementptr inbounds [3 x i8], [3 x i8]* %col0, i64 0, i64 0, !dbg !3595
  store i8 %conv, i8* %arrayidx3, align 1, !dbg !3596
  %12 = load float, float* %facf0.addr, align 4, !dbg !3597
  %13 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3598
  %col4 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %13, i32 0, i32 0, !dbg !3599
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %col4, i64 0, i64 1, !dbg !3598
  %14 = load float, float* %arrayidx5, align 4, !dbg !3598
  %mul6 = fmul float %12, %14, !dbg !3600
  %mul7 = fmul float %mul6, 2.550000e+02, !dbg !3601
  %conv8 = fptoui float %mul7 to i8, !dbg !3597
  %arrayidx9 = getelementptr inbounds [3 x i8], [3 x i8]* %col0, i64 0, i64 1, !dbg !3602
  store i8 %conv8, i8* %arrayidx9, align 1, !dbg !3603
  %15 = load float, float* %facf0.addr, align 4, !dbg !3604
  %16 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3605
  %col10 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %16, i32 0, i32 0, !dbg !3606
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %col10, i64 0, i64 2, !dbg !3605
  %17 = load float, float* %arrayidx11, align 4, !dbg !3605
  %mul12 = fmul float %15, %17, !dbg !3607
  %mul13 = fmul float %mul12, 2.550000e+02, !dbg !3608
  %conv14 = fptoui float %mul13 to i8, !dbg !3604
  %arrayidx15 = getelementptr inbounds [3 x i8], [3 x i8]* %col0, i64 0, i64 2, !dbg !3609
  store i8 %conv14, i8* %arrayidx15, align 1, !dbg !3610
  %18 = load float, float* %facf1.addr, align 4, !dbg !3611
  %19 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3612
  %col16 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %19, i32 0, i32 0, !dbg !3613
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %col16, i64 0, i64 0, !dbg !3612
  %20 = load float, float* %arrayidx17, align 4, !dbg !3612
  %mul18 = fmul float %18, %20, !dbg !3614
  %mul19 = fmul float %mul18, 2.550000e+02, !dbg !3615
  %conv20 = fptoui float %mul19 to i8, !dbg !3611
  %arrayidx21 = getelementptr inbounds [3 x i8], [3 x i8]* %col1, i64 0, i64 0, !dbg !3616
  store i8 %conv20, i8* %arrayidx21, align 1, !dbg !3617
  %21 = load float, float* %facf1.addr, align 4, !dbg !3618
  %22 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3619
  %col22 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %22, i32 0, i32 0, !dbg !3620
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %col22, i64 0, i64 1, !dbg !3619
  %23 = load float, float* %arrayidx23, align 4, !dbg !3619
  %mul24 = fmul float %21, %23, !dbg !3621
  %mul25 = fmul float %mul24, 2.550000e+02, !dbg !3622
  %conv26 = fptoui float %mul25 to i8, !dbg !3618
  %arrayidx27 = getelementptr inbounds [3 x i8], [3 x i8]* %col1, i64 0, i64 1, !dbg !3623
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !3624
  %24 = load float, float* %facf1.addr, align 4, !dbg !3625
  %25 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3626
  %col28 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %25, i32 0, i32 0, !dbg !3627
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %col28, i64 0, i64 2, !dbg !3626
  %26 = load float, float* %arrayidx29, align 4, !dbg !3626
  %mul30 = fmul float %24, %26, !dbg !3628
  %mul31 = fmul float %mul30, 2.550000e+02, !dbg !3629
  %conv32 = fptoui float %mul31 to i8, !dbg !3625
  %arrayidx33 = getelementptr inbounds [3 x i8], [3 x i8]* %col1, i64 0, i64 2, !dbg !3630
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !3631
  %27 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3632
  %rect34 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 8, !dbg !3633
  %28 = load i32*, i32** %rect34, align 8, !dbg !3633
  %29 = bitcast i32* %28 to i8*, !dbg !3634
  store i8* %29, i8** %rect, align 8, !dbg !3635
  store i32 0, i32* %y, align 4, !dbg !3636
  br label %for.cond, !dbg !3638

for.cond:                                         ; preds = %for.inc70, %if.then
  %30 = load i32, i32* %y, align 4, !dbg !3639
  %31 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3641
  %y35 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %31, i32 0, i32 3, !dbg !3642
  %32 = load i32, i32* %y35, align 4, !dbg !3642
  %cmp = icmp slt i32 %30, %32, !dbg !3643
  br i1 %cmp, label %for.body, label %for.end72, !dbg !3644

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !3645
  br label %for.cond37, !dbg !3648

for.cond37:                                       ; preds = %for.inc, %for.body
  %33 = load i32, i32* %x, align 4, !dbg !3649
  %34 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3651
  %x38 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 2, !dbg !3652
  %35 = load i32, i32* %x38, align 8, !dbg !3652
  %cmp39 = icmp slt i32 %33, %35, !dbg !3653
  br i1 %cmp39, label %for.body41, label %for.end, !dbg !3654

for.body41:                                       ; preds = %for.cond37
  %arrayidx42 = getelementptr inbounds [3 x i8], [3 x i8]* %col0, i64 0, i64 0, !dbg !3655
  %36 = load i8, i8* %arrayidx42, align 1, !dbg !3655
  %37 = load i8*, i8** %rect, align 8, !dbg !3657
  %arrayidx43 = getelementptr inbounds i8, i8* %37, i64 0, !dbg !3657
  store i8 %36, i8* %arrayidx43, align 1, !dbg !3658
  %arrayidx44 = getelementptr inbounds [3 x i8], [3 x i8]* %col0, i64 0, i64 1, !dbg !3659
  %38 = load i8, i8* %arrayidx44, align 1, !dbg !3659
  %39 = load i8*, i8** %rect, align 8, !dbg !3660
  %arrayidx45 = getelementptr inbounds i8, i8* %39, i64 1, !dbg !3660
  store i8 %38, i8* %arrayidx45, align 1, !dbg !3661
  %arrayidx46 = getelementptr inbounds [3 x i8], [3 x i8]* %col0, i64 0, i64 2, !dbg !3662
  %40 = load i8, i8* %arrayidx46, align 1, !dbg !3662
  %41 = load i8*, i8** %rect, align 8, !dbg !3663
  %arrayidx47 = getelementptr inbounds i8, i8* %41, i64 2, !dbg !3663
  store i8 %40, i8* %arrayidx47, align 1, !dbg !3664
  %42 = load i8*, i8** %rect, align 8, !dbg !3665
  %arrayidx48 = getelementptr inbounds i8, i8* %42, i64 3, !dbg !3665
  store i8 -1, i8* %arrayidx48, align 1, !dbg !3666
  br label %for.inc, !dbg !3667

for.inc:                                          ; preds = %for.body41
  %43 = load i32, i32* %x, align 4, !dbg !3668
  %inc = add nsw i32 %43, 1, !dbg !3668
  store i32 %inc, i32* %x, align 4, !dbg !3668
  %44 = load i8*, i8** %rect, align 8, !dbg !3669
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 4, !dbg !3669
  store i8* %add.ptr, i8** %rect, align 8, !dbg !3669
  br label %for.cond37, !dbg !3670, !llvm.loop !3671

for.end:                                          ; preds = %for.cond37
  %45 = load i32, i32* %y, align 4, !dbg !3673
  %inc49 = add nsw i32 %45, 1, !dbg !3673
  store i32 %inc49, i32* %y, align 4, !dbg !3673
  %46 = load i32, i32* %y, align 4, !dbg !3674
  %47 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3676
  %y50 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %47, i32 0, i32 3, !dbg !3677
  %48 = load i32, i32* %y50, align 4, !dbg !3677
  %cmp51 = icmp slt i32 %46, %48, !dbg !3678
  br i1 %cmp51, label %if.then53, label %if.end, !dbg !3679

if.then53:                                        ; preds = %for.end
  store i32 0, i32* %x, align 4, !dbg !3680
  br label %for.cond54, !dbg !3683

for.cond54:                                       ; preds = %for.inc66, %if.then53
  %49 = load i32, i32* %x, align 4, !dbg !3684
  %50 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3686
  %x55 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %50, i32 0, i32 2, !dbg !3687
  %51 = load i32, i32* %x55, align 8, !dbg !3687
  %cmp56 = icmp slt i32 %49, %51, !dbg !3688
  br i1 %cmp56, label %for.body58, label %for.end69, !dbg !3689

for.body58:                                       ; preds = %for.cond54
  %arrayidx59 = getelementptr inbounds [3 x i8], [3 x i8]* %col1, i64 0, i64 0, !dbg !3690
  %52 = load i8, i8* %arrayidx59, align 1, !dbg !3690
  %53 = load i8*, i8** %rect, align 8, !dbg !3692
  %arrayidx60 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !3692
  store i8 %52, i8* %arrayidx60, align 1, !dbg !3693
  %arrayidx61 = getelementptr inbounds [3 x i8], [3 x i8]* %col1, i64 0, i64 1, !dbg !3694
  %54 = load i8, i8* %arrayidx61, align 1, !dbg !3694
  %55 = load i8*, i8** %rect, align 8, !dbg !3695
  %arrayidx62 = getelementptr inbounds i8, i8* %55, i64 1, !dbg !3695
  store i8 %54, i8* %arrayidx62, align 1, !dbg !3696
  %arrayidx63 = getelementptr inbounds [3 x i8], [3 x i8]* %col1, i64 0, i64 2, !dbg !3697
  %56 = load i8, i8* %arrayidx63, align 1, !dbg !3697
  %57 = load i8*, i8** %rect, align 8, !dbg !3698
  %arrayidx64 = getelementptr inbounds i8, i8* %57, i64 2, !dbg !3698
  store i8 %56, i8* %arrayidx64, align 1, !dbg !3699
  %58 = load i8*, i8** %rect, align 8, !dbg !3700
  %arrayidx65 = getelementptr inbounds i8, i8* %58, i64 3, !dbg !3700
  store i8 -1, i8* %arrayidx65, align 1, !dbg !3701
  br label %for.inc66, !dbg !3702

for.inc66:                                        ; preds = %for.body58
  %59 = load i32, i32* %x, align 4, !dbg !3703
  %inc67 = add nsw i32 %59, 1, !dbg !3703
  store i32 %inc67, i32* %x, align 4, !dbg !3703
  %60 = load i8*, i8** %rect, align 8, !dbg !3704
  %add.ptr68 = getelementptr inbounds i8, i8* %60, i64 4, !dbg !3704
  store i8* %add.ptr68, i8** %rect, align 8, !dbg !3704
  br label %for.cond54, !dbg !3705, !llvm.loop !3706

for.end69:                                        ; preds = %for.cond54
  br label %if.end, !dbg !3708

if.end:                                           ; preds = %for.end69, %for.end
  br label %for.inc70, !dbg !3709

for.inc70:                                        ; preds = %if.end
  %61 = load i32, i32* %y, align 4, !dbg !3710
  %inc71 = add nsw i32 %61, 1, !dbg !3710
  store i32 %inc71, i32* %y, align 4, !dbg !3710
  br label %for.cond, !dbg !3711, !llvm.loop !3712

for.end72:                                        ; preds = %for.cond
  br label %if.end150, !dbg !3714

if.else:                                          ; preds = %entry
  %62 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3715
  %rect_float73 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %62, i32 0, i32 9, !dbg !3717
  %63 = load float*, float** %rect_float73, align 8, !dbg !3717
  %tobool74 = icmp ne float* %63, null, !dbg !3715
  br i1 %tobool74, label %if.then75, label %if.end149, !dbg !3718

if.then75:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [3 x float]* %col076, metadata !3719, metadata !DIExpression()), !dbg !3721
  call void @llvm.dbg.declare(metadata [3 x float]* %col177, metadata !3722, metadata !DIExpression()), !dbg !3723
  %64 = load float, float* %facf0.addr, align 4, !dbg !3724
  %65 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3725
  %col78 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %65, i32 0, i32 0, !dbg !3726
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %col78, i64 0, i64 0, !dbg !3725
  %66 = load float, float* %arrayidx79, align 4, !dbg !3725
  %mul80 = fmul float %64, %66, !dbg !3727
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %col076, i64 0, i64 0, !dbg !3728
  store float %mul80, float* %arrayidx81, align 4, !dbg !3729
  %67 = load float, float* %facf0.addr, align 4, !dbg !3730
  %68 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3731
  %col82 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %68, i32 0, i32 0, !dbg !3732
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %col82, i64 0, i64 1, !dbg !3731
  %69 = load float, float* %arrayidx83, align 4, !dbg !3731
  %mul84 = fmul float %67, %69, !dbg !3733
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %col076, i64 0, i64 1, !dbg !3734
  store float %mul84, float* %arrayidx85, align 4, !dbg !3735
  %70 = load float, float* %facf0.addr, align 4, !dbg !3736
  %71 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3737
  %col86 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %71, i32 0, i32 0, !dbg !3738
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %col86, i64 0, i64 2, !dbg !3737
  %72 = load float, float* %arrayidx87, align 4, !dbg !3737
  %mul88 = fmul float %70, %72, !dbg !3739
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %col076, i64 0, i64 2, !dbg !3740
  store float %mul88, float* %arrayidx89, align 4, !dbg !3741
  %73 = load float, float* %facf1.addr, align 4, !dbg !3742
  %74 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3743
  %col90 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %74, i32 0, i32 0, !dbg !3744
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %col90, i64 0, i64 0, !dbg !3743
  %75 = load float, float* %arrayidx91, align 4, !dbg !3743
  %mul92 = fmul float %73, %75, !dbg !3745
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %col177, i64 0, i64 0, !dbg !3746
  store float %mul92, float* %arrayidx93, align 4, !dbg !3747
  %76 = load float, float* %facf1.addr, align 4, !dbg !3748
  %77 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3749
  %col94 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %77, i32 0, i32 0, !dbg !3750
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %col94, i64 0, i64 1, !dbg !3749
  %78 = load float, float* %arrayidx95, align 4, !dbg !3749
  %mul96 = fmul float %76, %78, !dbg !3751
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %col177, i64 0, i64 1, !dbg !3752
  store float %mul96, float* %arrayidx97, align 4, !dbg !3753
  %79 = load float, float* %facf1.addr, align 4, !dbg !3754
  %80 = load %struct.SolidColorVars*, %struct.SolidColorVars** %cv, align 8, !dbg !3755
  %col98 = getelementptr inbounds %struct.SolidColorVars, %struct.SolidColorVars* %80, i32 0, i32 0, !dbg !3756
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %col98, i64 0, i64 2, !dbg !3755
  %81 = load float, float* %arrayidx99, align 4, !dbg !3755
  %mul100 = fmul float %79, %81, !dbg !3757
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %col177, i64 0, i64 2, !dbg !3758
  store float %mul100, float* %arrayidx101, align 4, !dbg !3759
  %82 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3760
  %rect_float102 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %82, i32 0, i32 9, !dbg !3761
  %83 = load float*, float** %rect_float102, align 8, !dbg !3761
  store float* %83, float** %rect_float, align 8, !dbg !3762
  store i32 0, i32* %y, align 4, !dbg !3763
  br label %for.cond103, !dbg !3765

for.cond103:                                      ; preds = %for.inc146, %if.then75
  %84 = load i32, i32* %y, align 4, !dbg !3766
  %85 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3768
  %y104 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %85, i32 0, i32 3, !dbg !3769
  %86 = load i32, i32* %y104, align 4, !dbg !3769
  %cmp105 = icmp slt i32 %84, %86, !dbg !3770
  br i1 %cmp105, label %for.body107, label %for.end148, !dbg !3771

for.body107:                                      ; preds = %for.cond103
  store i32 0, i32* %x, align 4, !dbg !3772
  br label %for.cond108, !dbg !3775

for.cond108:                                      ; preds = %for.inc120, %for.body107
  %87 = load i32, i32* %x, align 4, !dbg !3776
  %88 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3778
  %x109 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %88, i32 0, i32 2, !dbg !3779
  %89 = load i32, i32* %x109, align 8, !dbg !3779
  %cmp110 = icmp slt i32 %87, %89, !dbg !3780
  br i1 %cmp110, label %for.body112, label %for.end123, !dbg !3781

for.body112:                                      ; preds = %for.cond108
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %col076, i64 0, i64 0, !dbg !3782
  %90 = load float, float* %arrayidx113, align 4, !dbg !3782
  %91 = load float*, float** %rect_float, align 8, !dbg !3784
  %arrayidx114 = getelementptr inbounds float, float* %91, i64 0, !dbg !3784
  store float %90, float* %arrayidx114, align 4, !dbg !3785
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %col076, i64 0, i64 1, !dbg !3786
  %92 = load float, float* %arrayidx115, align 4, !dbg !3786
  %93 = load float*, float** %rect_float, align 8, !dbg !3787
  %arrayidx116 = getelementptr inbounds float, float* %93, i64 1, !dbg !3787
  store float %92, float* %arrayidx116, align 4, !dbg !3788
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %col076, i64 0, i64 2, !dbg !3789
  %94 = load float, float* %arrayidx117, align 4, !dbg !3789
  %95 = load float*, float** %rect_float, align 8, !dbg !3790
  %arrayidx118 = getelementptr inbounds float, float* %95, i64 2, !dbg !3790
  store float %94, float* %arrayidx118, align 4, !dbg !3791
  %96 = load float*, float** %rect_float, align 8, !dbg !3792
  %arrayidx119 = getelementptr inbounds float, float* %96, i64 3, !dbg !3792
  store float 1.000000e+00, float* %arrayidx119, align 4, !dbg !3793
  br label %for.inc120, !dbg !3794

for.inc120:                                       ; preds = %for.body112
  %97 = load i32, i32* %x, align 4, !dbg !3795
  %inc121 = add nsw i32 %97, 1, !dbg !3795
  store i32 %inc121, i32* %x, align 4, !dbg !3795
  %98 = load float*, float** %rect_float, align 8, !dbg !3796
  %add.ptr122 = getelementptr inbounds float, float* %98, i64 4, !dbg !3796
  store float* %add.ptr122, float** %rect_float, align 8, !dbg !3796
  br label %for.cond108, !dbg !3797, !llvm.loop !3798

for.end123:                                       ; preds = %for.cond108
  %99 = load i32, i32* %y, align 4, !dbg !3800
  %inc124 = add nsw i32 %99, 1, !dbg !3800
  store i32 %inc124, i32* %y, align 4, !dbg !3800
  %100 = load i32, i32* %y, align 4, !dbg !3801
  %101 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3803
  %y125 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %101, i32 0, i32 3, !dbg !3804
  %102 = load i32, i32* %y125, align 4, !dbg !3804
  %cmp126 = icmp slt i32 %100, %102, !dbg !3805
  br i1 %cmp126, label %if.then128, label %if.end145, !dbg !3806

if.then128:                                       ; preds = %for.end123
  store i32 0, i32* %x, align 4, !dbg !3807
  br label %for.cond129, !dbg !3810

for.cond129:                                      ; preds = %for.inc141, %if.then128
  %103 = load i32, i32* %x, align 4, !dbg !3811
  %104 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3813
  %x130 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %104, i32 0, i32 2, !dbg !3814
  %105 = load i32, i32* %x130, align 8, !dbg !3814
  %cmp131 = icmp slt i32 %103, %105, !dbg !3815
  br i1 %cmp131, label %for.body133, label %for.end144, !dbg !3816

for.body133:                                      ; preds = %for.cond129
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %col177, i64 0, i64 0, !dbg !3817
  %106 = load float, float* %arrayidx134, align 4, !dbg !3817
  %107 = load float*, float** %rect_float, align 8, !dbg !3819
  %arrayidx135 = getelementptr inbounds float, float* %107, i64 0, !dbg !3819
  store float %106, float* %arrayidx135, align 4, !dbg !3820
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %col177, i64 0, i64 1, !dbg !3821
  %108 = load float, float* %arrayidx136, align 4, !dbg !3821
  %109 = load float*, float** %rect_float, align 8, !dbg !3822
  %arrayidx137 = getelementptr inbounds float, float* %109, i64 1, !dbg !3822
  store float %108, float* %arrayidx137, align 4, !dbg !3823
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %col177, i64 0, i64 2, !dbg !3824
  %110 = load float, float* %arrayidx138, align 4, !dbg !3824
  %111 = load float*, float** %rect_float, align 8, !dbg !3825
  %arrayidx139 = getelementptr inbounds float, float* %111, i64 2, !dbg !3825
  store float %110, float* %arrayidx139, align 4, !dbg !3826
  %112 = load float*, float** %rect_float, align 8, !dbg !3827
  %arrayidx140 = getelementptr inbounds float, float* %112, i64 3, !dbg !3827
  store float 1.000000e+00, float* %arrayidx140, align 4, !dbg !3828
  br label %for.inc141, !dbg !3829

for.inc141:                                       ; preds = %for.body133
  %113 = load i32, i32* %x, align 4, !dbg !3830
  %inc142 = add nsw i32 %113, 1, !dbg !3830
  store i32 %inc142, i32* %x, align 4, !dbg !3830
  %114 = load float*, float** %rect_float, align 8, !dbg !3831
  %add.ptr143 = getelementptr inbounds float, float* %114, i64 4, !dbg !3831
  store float* %add.ptr143, float** %rect_float, align 8, !dbg !3831
  br label %for.cond129, !dbg !3832, !llvm.loop !3833

for.end144:                                       ; preds = %for.cond129
  br label %if.end145, !dbg !3835

if.end145:                                        ; preds = %for.end144, %for.end123
  br label %for.inc146, !dbg !3836

for.inc146:                                       ; preds = %if.end145
  %115 = load i32, i32* %y, align 4, !dbg !3837
  %inc147 = add nsw i32 %115, 1, !dbg !3837
  store i32 %inc147, i32* %y, align 4, !dbg !3837
  br label %for.cond103, !dbg !3838, !llvm.loop !3839

for.end148:                                       ; preds = %for.cond103
  br label %if.end149, !dbg !3841

if.end149:                                        ; preds = %for.end148, %if.else
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %for.end72
  %116 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3842
  ret %struct.ImBuf* %116, !dbg !3843
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_multicam() #0 !dbg !3844 {
entry:
  ret i32 0, !dbg !3845
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @early_out_multicam(%struct.Sequence* %UNUSED_seq, float %UNUSED_facf0, float %UNUSED_facf1) #0 !dbg !3846 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !3847, metadata !DIExpression()), !dbg !3848
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !3849, metadata !DIExpression()), !dbg !3850
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !3851, metadata !DIExpression()), !dbg !3852
  ret i32 -1, !dbg !3853
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @do_multicam(%struct.SeqRenderData* %context, %struct.Sequence* %seq, float %cfra, float %UNUSED_facf0, float %UNUSED_facf1, %struct.ImBuf* %UNUSED_ibuf1, %struct.ImBuf* %UNUSED_ibuf2, %struct.ImBuf* %UNUSED_ibuf3) #0 !dbg !3854 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %cfra.addr = alloca float, align 4
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %UNUSED_ibuf1.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %i = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  %ed = alloca %struct.Editing*, align 8
  %seqbasep = alloca %struct.ListBase*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !3855, metadata !DIExpression()), !dbg !3856
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3857, metadata !DIExpression()), !dbg !3858
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !3859, metadata !DIExpression()), !dbg !3860
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !3861, metadata !DIExpression()), !dbg !3862
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !3863, metadata !DIExpression()), !dbg !3864
  store %struct.ImBuf* %UNUSED_ibuf1, %struct.ImBuf** %UNUSED_ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf1.addr, metadata !3865, metadata !DIExpression()), !dbg !3866
  store %struct.ImBuf* %UNUSED_ibuf2, %struct.ImBuf** %UNUSED_ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf2.addr, metadata !3867, metadata !DIExpression()), !dbg !3868
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !3869, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %i, metadata !3871, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.declare(metadata %struct.Editing** %ed, metadata !3875, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.declare(metadata %struct.ListBase** %seqbasep, metadata !3879, metadata !DIExpression()), !dbg !3880
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3881
  %multicam_source = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 22, !dbg !3883
  %1 = load i32, i32* %multicam_source, align 8, !dbg !3883
  %cmp = icmp eq i32 %1, 0, !dbg !3884
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3885

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3886
  %multicam_source1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %2, i32 0, i32 22, !dbg !3887
  %3 = load i32, i32* %multicam_source1, align 8, !dbg !3887
  %4 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3888
  %machine = getelementptr inbounds %struct.Sequence, %struct.Sequence* %4, i32 0, i32 13, !dbg !3889
  %5 = load i32, i32* %machine, align 8, !dbg !3889
  %cmp2 = icmp sge i32 %3, %5, !dbg !3890
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3891

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !3892
  br label %return, !dbg !3892

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3894
  %scene = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %6, i32 0, i32 2, !dbg !3895
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3895
  %ed3 = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 19, !dbg !3896
  %8 = load %struct.Editing*, %struct.Editing** %ed3, align 8, !dbg !3896
  store %struct.Editing* %8, %struct.Editing** %ed, align 8, !dbg !3897
  %9 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !3898
  %tobool = icmp ne %struct.Editing* %9, null, !dbg !3898
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !3900

if.then4:                                         ; preds = %if.end
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !3901
  br label %return, !dbg !3901

if.end5:                                          ; preds = %if.end
  %10 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !3903
  %seqbase = getelementptr inbounds %struct.Editing, %struct.Editing* %10, i32 0, i32 1, !dbg !3904
  %11 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3905
  %call = call %struct.ListBase* @BKE_sequence_seqbase(%struct.ListBase* %seqbase, %struct.Sequence* %11), !dbg !3906
  store %struct.ListBase* %call, %struct.ListBase** %seqbasep, align 8, !dbg !3907
  %12 = load %struct.ListBase*, %struct.ListBase** %seqbasep, align 8, !dbg !3908
  %tobool6 = icmp ne %struct.ListBase* %12, null, !dbg !3908
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !3910

if.then7:                                         ; preds = %if.end5
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !3911
  br label %return, !dbg !3911

if.end8:                                          ; preds = %if.end5
  %13 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3913
  %14 = load float, float* %cfra.addr, align 4, !dbg !3914
  %15 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3915
  %multicam_source9 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %15, i32 0, i32 22, !dbg !3916
  %16 = load i32, i32* %multicam_source9, align 8, !dbg !3916
  %17 = load %struct.ListBase*, %struct.ListBase** %seqbasep, align 8, !dbg !3917
  %call10 = call %struct.ImBuf* @BKE_sequencer_give_ibuf_seqbase(%struct.SeqRenderData* %13, float %14, i32 %16, %struct.ListBase* %17), !dbg !3918
  store %struct.ImBuf* %call10, %struct.ImBuf** %i, align 8, !dbg !3919
  %18 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !3920
  %tobool11 = icmp ne %struct.ImBuf* %18, null, !dbg !3920
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !3922

if.then12:                                        ; preds = %if.end8
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !3923
  br label %return, !dbg !3923

if.end13:                                         ; preds = %if.end8
  %19 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3925
  %20 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3927
  %21 = load float, float* %cfra.addr, align 4, !dbg !3928
  %call14 = call zeroext i8 @BKE_sequencer_input_have_to_preprocess(%struct.SeqRenderData* %19, %struct.Sequence* %20, float %21), !dbg !3929
  %tobool15 = icmp ne i8 %call14, 0, !dbg !3929
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !3930

if.then16:                                        ; preds = %if.end13
  %22 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !3931
  %call17 = call %struct.ImBuf* @IMB_dupImBuf(%struct.ImBuf* %22), !dbg !3933
  store %struct.ImBuf* %call17, %struct.ImBuf** %out, align 8, !dbg !3934
  %23 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !3935
  call void @IMB_freeImBuf(%struct.ImBuf* %23), !dbg !3936
  br label %if.end18, !dbg !3937

if.else:                                          ; preds = %if.end13
  %24 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !3938
  store %struct.ImBuf* %24, %struct.ImBuf** %out, align 8, !dbg !3940
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then16
  %25 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !3941
  store %struct.ImBuf* %25, %struct.ImBuf** %retval, align 8, !dbg !3942
  br label %return, !dbg !3942

return:                                           ; preds = %if.end18, %if.then12, %if.then7, %if.then4, %if.then
  %26 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !3943
  ret %struct.ImBuf* %26, !dbg !3943
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_adjustment() #0 !dbg !3944 {
entry:
  ret i32 0, !dbg !3945
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @early_out_adjustment(%struct.Sequence* %UNUSED_seq, float %UNUSED_facf0, float %UNUSED_facf1) #0 !dbg !3946 {
entry:
  %UNUSED_seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  store %struct.Sequence* %UNUSED_seq, %struct.Sequence** %UNUSED_seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %UNUSED_seq.addr, metadata !3947, metadata !DIExpression()), !dbg !3948
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !3949, metadata !DIExpression()), !dbg !3950
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !3951, metadata !DIExpression()), !dbg !3952
  ret i32 -1, !dbg !3953
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @do_adjustment(%struct.SeqRenderData* %context, %struct.Sequence* %seq, float %cfra, float %UNUSED_facf0, float %UNUSED_facf1, %struct.ImBuf* %UNUSED_ibuf1, %struct.ImBuf* %UNUSED_ibuf2, %struct.ImBuf* %UNUSED_ibuf3) #0 !dbg !3954 {
entry:
  %retval = alloca %struct.ImBuf*, align 8
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %cfra.addr = alloca float, align 4
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %UNUSED_ibuf1.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %i = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  %ed = alloca %struct.Editing*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !3955, metadata !DIExpression()), !dbg !3956
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !3957, metadata !DIExpression()), !dbg !3958
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !3959, metadata !DIExpression()), !dbg !3960
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !3961, metadata !DIExpression()), !dbg !3962
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !3963, metadata !DIExpression()), !dbg !3964
  store %struct.ImBuf* %UNUSED_ibuf1, %struct.ImBuf** %UNUSED_ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf1.addr, metadata !3965, metadata !DIExpression()), !dbg !3966
  store %struct.ImBuf* %UNUSED_ibuf2, %struct.ImBuf** %UNUSED_ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf2.addr, metadata !3967, metadata !DIExpression()), !dbg !3968
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !3969, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %i, metadata !3971, metadata !DIExpression()), !dbg !3972
  store %struct.ImBuf* null, %struct.ImBuf** %i, align 8, !dbg !3972
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !3973, metadata !DIExpression()), !dbg !3974
  call void @llvm.dbg.declare(metadata %struct.Editing** %ed, metadata !3975, metadata !DIExpression()), !dbg !3976
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3977
  %scene = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %0, i32 0, i32 2, !dbg !3978
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3978
  %ed1 = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 19, !dbg !3979
  %2 = load %struct.Editing*, %struct.Editing** %ed1, align 8, !dbg !3979
  store %struct.Editing* %2, %struct.Editing** %ed, align 8, !dbg !3980
  %3 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !3981
  %tobool = icmp ne %struct.Editing* %3, null, !dbg !3981
  br i1 %tobool, label %if.end, label %if.then, !dbg !3983

if.then:                                          ; preds = %entry
  store %struct.ImBuf* null, %struct.ImBuf** %retval, align 8, !dbg !3984
  br label %return, !dbg !3984

if.end:                                           ; preds = %entry
  %4 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3986
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3987
  %6 = load float, float* %cfra.addr, align 4, !dbg !3988
  %call = call %struct.ImBuf* @do_adjustment_impl(%struct.SeqRenderData* %4, %struct.Sequence* %5, float %6), !dbg !3989
  store %struct.ImBuf* %call, %struct.ImBuf** %i, align 8, !dbg !3990
  %7 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !3991
  %8 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !3993
  %9 = load float, float* %cfra.addr, align 4, !dbg !3994
  %call2 = call zeroext i8 @BKE_sequencer_input_have_to_preprocess(%struct.SeqRenderData* %7, %struct.Sequence* %8, float %9), !dbg !3995
  %tobool3 = icmp ne i8 %call2, 0, !dbg !3995
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3996

if.then4:                                         ; preds = %if.end
  %10 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !3997
  %call5 = call %struct.ImBuf* @IMB_dupImBuf(%struct.ImBuf* %10), !dbg !3999
  store %struct.ImBuf* %call5, %struct.ImBuf** %out, align 8, !dbg !4000
  %11 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !4001
  call void @IMB_freeImBuf(%struct.ImBuf* %11), !dbg !4002
  br label %if.end6, !dbg !4003

if.else:                                          ; preds = %if.end
  %12 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !4004
  store %struct.ImBuf* %12, %struct.ImBuf** %out, align 8, !dbg !4006
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then4
  %13 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4007
  store %struct.ImBuf* %13, %struct.ImBuf** %retval, align 8, !dbg !4008
  br label %return, !dbg !4008

return:                                           ; preds = %if.end6, %if.then
  %14 = load %struct.ImBuf*, %struct.ImBuf** %retval, align 8, !dbg !4009
  ret %struct.ImBuf* %14, !dbg !4009
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_gaussian_blur_effect(%struct.Sequence* %seq) #0 !dbg !4010 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !4011, metadata !DIExpression()), !dbg !4012
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4013
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !4015
  %1 = load i8*, i8** %effectdata, align 8, !dbg !4015
  %tobool = icmp ne i8* %1, null, !dbg !4013
  br i1 %tobool, label %if.then, label %if.end, !dbg !4016

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4017
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4018
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !4019
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !4019
  call void %2(i8* %4), !dbg !4017
  br label %if.end, !dbg !4017

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4020
  %call = call i8* %5(i64 12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)), !dbg !4020
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4021
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %6, i32 0, i32 43, !dbg !4022
  store i8* %call, i8** %effectdata2, align 8, !dbg !4023
  ret void, !dbg !4024
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @num_inputs_gaussian_blur() #0 !dbg !4025 {
entry:
  ret i32 1, !dbg !4026
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_gaussian_blur_effect(%struct.Sequence* %seq) #0 !dbg !4027 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !4028, metadata !DIExpression()), !dbg !4029
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4030
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !4032
  %1 = load i8*, i8** %effectdata, align 8, !dbg !4032
  %tobool = icmp ne i8* %1, null, !dbg !4030
  br i1 %tobool, label %if.then, label %if.end, !dbg !4033

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4034
  %3 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4035
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !4036
  %4 = load i8*, i8** %effectdata1, align 8, !dbg !4036
  call void %2(i8* %4), !dbg !4034
  br label %if.end, !dbg !4034

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4037
  %effectdata2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %5, i32 0, i32 43, !dbg !4038
  store i8* null, i8** %effectdata2, align 8, !dbg !4039
  ret void, !dbg !4040
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_gaussian_blur_effect(%struct.Sequence* %dst, %struct.Sequence* %src) #0 !dbg !4041 {
entry:
  %dst.addr = alloca %struct.Sequence*, align 8
  %src.addr = alloca %struct.Sequence*, align 8
  store %struct.Sequence* %dst, %struct.Sequence** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %dst.addr, metadata !4042, metadata !DIExpression()), !dbg !4043
  store %struct.Sequence* %src, %struct.Sequence** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %src.addr, metadata !4044, metadata !DIExpression()), !dbg !4045
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4046
  %1 = load %struct.Sequence*, %struct.Sequence** %src.addr, align 8, !dbg !4047
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %1, i32 0, i32 43, !dbg !4048
  %2 = load i8*, i8** %effectdata, align 8, !dbg !4048
  %call = call i8* %0(i8* %2), !dbg !4046
  %3 = load %struct.Sequence*, %struct.Sequence** %dst.addr, align 8, !dbg !4049
  %effectdata1 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %3, i32 0, i32 43, !dbg !4050
  store i8* %call, i8** %effectdata1, align 8, !dbg !4051
  ret void, !dbg !4052
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @early_out_gaussian_blur(%struct.Sequence* %seq, float %UNUSED_facf0, float %UNUSED_facf1) #0 !dbg !4053 {
entry:
  %retval = alloca i32, align 4
  %seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %data = alloca %struct.GaussianBlurVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !4054, metadata !DIExpression()), !dbg !4055
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !4056, metadata !DIExpression()), !dbg !4057
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !4058, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.declare(metadata %struct.GaussianBlurVars** %data, metadata !4060, metadata !DIExpression()), !dbg !4067
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4068
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !4069
  %1 = load i8*, i8** %effectdata, align 8, !dbg !4069
  %2 = bitcast i8* %1 to %struct.GaussianBlurVars*, !dbg !4068
  store %struct.GaussianBlurVars* %2, %struct.GaussianBlurVars** %data, align 8, !dbg !4067
  %3 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !4070
  %size_x = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %3, i32 0, i32 0, !dbg !4072
  %4 = load float, float* %size_x, align 4, !dbg !4072
  %cmp = fcmp oeq float %4, 0.000000e+00, !dbg !4073
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4074

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !4075
  %size_y = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %5, i32 0, i32 1, !dbg !4076
  %6 = load float, float* %size_y, align 4, !dbg !4076
  %cmp1 = fcmp oeq float %6, 0.000000e+00, !dbg !4077
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4078

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !4079
  br label %return, !dbg !4079

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4081
  br label %return, !dbg !4081

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4082
  ret i32 %7, !dbg !4082
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_gaussian_blur_effect(%struct.SeqRenderData* %context, %struct.Sequence* %seq, float %UNUSED_cfra, float %UNUSED_facf0, float %UNUSED_facf1, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %UNUSED_ibuf3, i32 %start_line, i32 %total_lines, %struct.ImBuf* %out) #0 !dbg !4083 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %UNUSED_facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %UNUSED_ibuf3.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %total_lines.addr = alloca i32, align 4
  %out.addr = alloca %struct.ImBuf*, align 8
  %rect1 = alloca float*, align 8
  %rect2 = alloca float*, align 8
  %rect_out = alloca float*, align 8
  %rect13 = alloca i8*, align 8
  %rect24 = alloca i8*, align 8
  %rect_out5 = alloca i8*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !4084, metadata !DIExpression()), !dbg !4085
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !4086, metadata !DIExpression()), !dbg !4087
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !4088, metadata !DIExpression()), !dbg !4089
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !4094, metadata !DIExpression()), !dbg !4095
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !4096, metadata !DIExpression()), !dbg !4097
  store %struct.ImBuf* %UNUSED_ibuf3, %struct.ImBuf** %UNUSED_ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %UNUSED_ibuf3.addr, metadata !4098, metadata !DIExpression()), !dbg !4099
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !4100, metadata !DIExpression()), !dbg !4101
  store i32 %total_lines, i32* %total_lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %total_lines.addr, metadata !4102, metadata !DIExpression()), !dbg !4103
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !4104, metadata !DIExpression()), !dbg !4105
  %0 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !4106
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 9, !dbg !4108
  %1 = load float*, float** %rect_float, align 8, !dbg !4108
  %tobool = icmp ne float* %1, null, !dbg !4106
  br i1 %tobool, label %if.then, label %if.else, !dbg !4109

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %rect1, metadata !4110, metadata !DIExpression()), !dbg !4112
  store float* null, float** %rect1, align 8, !dbg !4112
  call void @llvm.dbg.declare(metadata float** %rect2, metadata !4113, metadata !DIExpression()), !dbg !4114
  store float* null, float** %rect2, align 8, !dbg !4114
  call void @llvm.dbg.declare(metadata float** %rect_out, metadata !4115, metadata !DIExpression()), !dbg !4116
  store float* null, float** %rect_out, align 8, !dbg !4116
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4117
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4118
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4119
  %5 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !4120
  %6 = load i32, i32* %start_line.addr, align 4, !dbg !4121
  call void @slice_get_float_buffers(%struct.SeqRenderData* %2, %struct.ImBuf* %3, %struct.ImBuf* %4, %struct.ImBuf* null, %struct.ImBuf* %5, i32 %6, float** %rect1, float** %rect2, float** null, float** %rect_out), !dbg !4122
  %7 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4123
  %8 = load i32, i32* %start_line.addr, align 4, !dbg !4124
  %9 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4125
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %9, i32 0, i32 3, !dbg !4126
  %10 = load i32, i32* %rectx, align 8, !dbg !4126
  %11 = load i32, i32* %total_lines.addr, align 4, !dbg !4127
  %12 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4128
  %rectx1 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %12, i32 0, i32 3, !dbg !4129
  %13 = load i32, i32* %rectx1, align 8, !dbg !4129
  %14 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4130
  %recty = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %14, i32 0, i32 4, !dbg !4131
  %15 = load i32, i32* %recty, align 4, !dbg !4131
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4132
  %rect_float2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %16, i32 0, i32 9, !dbg !4133
  %17 = load float*, float** %rect_float2, align 8, !dbg !4133
  %18 = load float*, float** %rect_out, align 8, !dbg !4134
  call void @do_gaussian_blur_effect_float(%struct.Sequence* %7, i32 %8, i32 %10, i32 %11, i32 %13, i32 %15, float* %17, float* %18), !dbg !4135
  br label %if.end, !dbg !4136

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %rect13, metadata !4137, metadata !DIExpression()), !dbg !4139
  store i8* null, i8** %rect13, align 8, !dbg !4139
  call void @llvm.dbg.declare(metadata i8** %rect24, metadata !4140, metadata !DIExpression()), !dbg !4141
  store i8* null, i8** %rect24, align 8, !dbg !4141
  call void @llvm.dbg.declare(metadata i8** %rect_out5, metadata !4142, metadata !DIExpression()), !dbg !4143
  store i8* null, i8** %rect_out5, align 8, !dbg !4143
  %19 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4144
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4145
  %21 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4146
  %22 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !4147
  %23 = load i32, i32* %start_line.addr, align 4, !dbg !4148
  call void @slice_get_byte_buffers(%struct.SeqRenderData* %19, %struct.ImBuf* %20, %struct.ImBuf* %21, %struct.ImBuf* null, %struct.ImBuf* %22, i32 %23, i8** %rect13, i8** %rect24, i8** null, i8** %rect_out5), !dbg !4149
  %24 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !4150
  %25 = load i32, i32* %start_line.addr, align 4, !dbg !4151
  %26 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4152
  %rectx6 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %26, i32 0, i32 3, !dbg !4153
  %27 = load i32, i32* %rectx6, align 8, !dbg !4153
  %28 = load i32, i32* %total_lines.addr, align 4, !dbg !4154
  %29 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4155
  %rectx7 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %29, i32 0, i32 3, !dbg !4156
  %30 = load i32, i32* %rectx7, align 8, !dbg !4156
  %31 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4157
  %recty8 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %31, i32 0, i32 4, !dbg !4158
  %32 = load i32, i32* %recty8, align 4, !dbg !4158
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4159
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %33, i32 0, i32 8, !dbg !4160
  %34 = load i32*, i32** %rect, align 8, !dbg !4160
  %35 = bitcast i32* %34 to i8*, !dbg !4161
  %36 = load i8*, i8** %rect_out5, align 8, !dbg !4162
  call void @do_gaussian_blur_effect_byte(%struct.Sequence* %24, i32 %25, i32 %27, i32 %28, i32 %30, i32 %32, i8* %35, i8* %36), !dbg !4163
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4164
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @prepare_effect_imbufs(%struct.SeqRenderData* %context, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3) #0 !dbg !4165 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  %scene = alloca %struct.Scene*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !4168, metadata !DIExpression()), !dbg !4169
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !4170, metadata !DIExpression()), !dbg !4171
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !4172, metadata !DIExpression()), !dbg !4173
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !4174, metadata !DIExpression()), !dbg !4175
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !4176, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4178, metadata !DIExpression()), !dbg !4179
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4180
  %scene1 = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %0, i32 0, i32 2, !dbg !4181
  %1 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !4181
  store %struct.Scene* %1, %struct.Scene** %scene, align 8, !dbg !4179
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4182, metadata !DIExpression()), !dbg !4183
  %2 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4184
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %2, i32 0, i32 3, !dbg !4185
  %3 = load i32, i32* %rectx, align 8, !dbg !4185
  store i32 %3, i32* %x, align 4, !dbg !4183
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4186, metadata !DIExpression()), !dbg !4187
  %4 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4188
  %recty = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %4, i32 0, i32 4, !dbg !4189
  %5 = load i32, i32* %recty, align 4, !dbg !4189
  store i32 %5, i32* %y, align 4, !dbg !4187
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4190
  %tobool = icmp ne %struct.ImBuf* %6, null, !dbg !4190
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4192

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4193
  %tobool2 = icmp ne %struct.ImBuf* %7, null, !dbg !4193
  br i1 %tobool2, label %if.else, label %land.lhs.true3, !dbg !4194

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4195
  %tobool4 = icmp ne %struct.ImBuf* %8, null, !dbg !4195
  br i1 %tobool4, label %if.else, label %if.then, !dbg !4196

if.then:                                          ; preds = %land.lhs.true3
  %9 = load i32, i32* %x, align 4, !dbg !4197
  %10 = load i32, i32* %y, align 4, !dbg !4199
  %call = call %struct.ImBuf* @IMB_allocImBuf(i32 %9, i32 %10, i8 zeroext 32, i32 1), !dbg !4200
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !4201
  br label %if.end21, !dbg !4202

if.else:                                          ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4203
  %tobool5 = icmp ne %struct.ImBuf* %11, null, !dbg !4203
  br i1 %tobool5, label %land.lhs.true6, label %lor.lhs.false, !dbg !4205

land.lhs.true6:                                   ; preds = %if.else
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4206
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 9, !dbg !4207
  %13 = load float*, float** %rect_float, align 8, !dbg !4207
  %tobool7 = icmp ne float* %13, null, !dbg !4206
  br i1 %tobool7, label %if.then17, label %lor.lhs.false, !dbg !4208

lor.lhs.false:                                    ; preds = %land.lhs.true6, %if.else
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4209
  %tobool8 = icmp ne %struct.ImBuf* %14, null, !dbg !4209
  br i1 %tobool8, label %land.lhs.true9, label %lor.lhs.false12, !dbg !4210

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4211
  %rect_float10 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 9, !dbg !4212
  %16 = load float*, float** %rect_float10, align 8, !dbg !4212
  %tobool11 = icmp ne float* %16, null, !dbg !4211
  br i1 %tobool11, label %if.then17, label %lor.lhs.false12, !dbg !4213

lor.lhs.false12:                                  ; preds = %land.lhs.true9, %lor.lhs.false
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4214
  %tobool13 = icmp ne %struct.ImBuf* %17, null, !dbg !4214
  br i1 %tobool13, label %land.lhs.true14, label %if.else19, !dbg !4215

land.lhs.true14:                                  ; preds = %lor.lhs.false12
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4216
  %rect_float15 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %18, i32 0, i32 9, !dbg !4217
  %19 = load float*, float** %rect_float15, align 8, !dbg !4217
  %tobool16 = icmp ne float* %19, null, !dbg !4216
  br i1 %tobool16, label %if.then17, label %if.else19, !dbg !4218

if.then17:                                        ; preds = %land.lhs.true14, %land.lhs.true9, %land.lhs.true6
  %20 = load i32, i32* %x, align 4, !dbg !4219
  %21 = load i32, i32* %y, align 4, !dbg !4221
  %call18 = call %struct.ImBuf* @IMB_allocImBuf(i32 %20, i32 %21, i8 zeroext 32, i32 32), !dbg !4222
  store %struct.ImBuf* %call18, %struct.ImBuf** %out, align 8, !dbg !4223
  br label %if.end, !dbg !4224

if.else19:                                        ; preds = %land.lhs.true14, %lor.lhs.false12
  %22 = load i32, i32* %x, align 4, !dbg !4225
  %23 = load i32, i32* %y, align 4, !dbg !4227
  %call20 = call %struct.ImBuf* @IMB_allocImBuf(i32 %22, i32 %23, i8 zeroext 32, i32 1), !dbg !4228
  store %struct.ImBuf* %call20, %struct.ImBuf** %out, align 8, !dbg !4229
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then17
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then
  %24 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4230
  %tobool22 = icmp ne %struct.ImBuf* %24, null, !dbg !4230
  br i1 %tobool22, label %land.lhs.true23, label %if.end30, !dbg !4232

land.lhs.true23:                                  ; preds = %if.end21
  %25 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4233
  %rect_float24 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %25, i32 0, i32 9, !dbg !4234
  %26 = load float*, float** %rect_float24, align 8, !dbg !4234
  %tobool25 = icmp ne float* %26, null, !dbg !4233
  br i1 %tobool25, label %if.end30, label %land.lhs.true26, !dbg !4235

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %27 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4236
  %rect_float27 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 9, !dbg !4237
  %28 = load float*, float** %rect_float27, align 8, !dbg !4237
  %tobool28 = icmp ne float* %28, null, !dbg !4236
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !4238

if.then29:                                        ; preds = %land.lhs.true26
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4239
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4241
  call void @BKE_sequencer_imbuf_to_sequencer_space(%struct.Scene* %29, %struct.ImBuf* %30, i8 zeroext 1), !dbg !4242
  br label %if.end30, !dbg !4243

if.end30:                                         ; preds = %if.then29, %land.lhs.true26, %land.lhs.true23, %if.end21
  %31 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4244
  %tobool31 = icmp ne %struct.ImBuf* %31, null, !dbg !4244
  br i1 %tobool31, label %land.lhs.true32, label %if.end39, !dbg !4246

land.lhs.true32:                                  ; preds = %if.end30
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4247
  %rect_float33 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %32, i32 0, i32 9, !dbg !4248
  %33 = load float*, float** %rect_float33, align 8, !dbg !4248
  %tobool34 = icmp ne float* %33, null, !dbg !4247
  br i1 %tobool34, label %if.end39, label %land.lhs.true35, !dbg !4249

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %34 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4250
  %rect_float36 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %34, i32 0, i32 9, !dbg !4251
  %35 = load float*, float** %rect_float36, align 8, !dbg !4251
  %tobool37 = icmp ne float* %35, null, !dbg !4250
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !4252

if.then38:                                        ; preds = %land.lhs.true35
  %36 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4253
  %37 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4255
  call void @BKE_sequencer_imbuf_to_sequencer_space(%struct.Scene* %36, %struct.ImBuf* %37, i8 zeroext 1), !dbg !4256
  br label %if.end39, !dbg !4257

if.end39:                                         ; preds = %if.then38, %land.lhs.true35, %land.lhs.true32, %if.end30
  %38 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4258
  %tobool40 = icmp ne %struct.ImBuf* %38, null, !dbg !4258
  br i1 %tobool40, label %land.lhs.true41, label %if.end48, !dbg !4260

land.lhs.true41:                                  ; preds = %if.end39
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4261
  %rect_float42 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %39, i32 0, i32 9, !dbg !4262
  %40 = load float*, float** %rect_float42, align 8, !dbg !4262
  %tobool43 = icmp ne float* %40, null, !dbg !4261
  br i1 %tobool43, label %if.end48, label %land.lhs.true44, !dbg !4263

land.lhs.true44:                                  ; preds = %land.lhs.true41
  %41 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4264
  %rect_float45 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %41, i32 0, i32 9, !dbg !4265
  %42 = load float*, float** %rect_float45, align 8, !dbg !4265
  %tobool46 = icmp ne float* %42, null, !dbg !4264
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !4266

if.then47:                                        ; preds = %land.lhs.true44
  %43 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4267
  %44 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4269
  call void @BKE_sequencer_imbuf_to_sequencer_space(%struct.Scene* %43, %struct.ImBuf* %44, i8 zeroext 1), !dbg !4270
  br label %if.end48, !dbg !4271

if.end48:                                         ; preds = %if.then47, %land.lhs.true44, %land.lhs.true41, %if.end39
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4272
  %tobool49 = icmp ne %struct.ImBuf* %45, null, !dbg !4272
  br i1 %tobool49, label %land.lhs.true50, label %if.end56, !dbg !4274

land.lhs.true50:                                  ; preds = %if.end48
  %46 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4275
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %46, i32 0, i32 8, !dbg !4276
  %47 = load i32*, i32** %rect, align 8, !dbg !4276
  %tobool51 = icmp ne i32* %47, null, !dbg !4275
  br i1 %tobool51, label %if.end56, label %land.lhs.true52, !dbg !4277

land.lhs.true52:                                  ; preds = %land.lhs.true50
  %48 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4278
  %rect_float53 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %48, i32 0, i32 9, !dbg !4279
  %49 = load float*, float** %rect_float53, align 8, !dbg !4279
  %tobool54 = icmp ne float* %49, null, !dbg !4278
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !4280

if.then55:                                        ; preds = %land.lhs.true52
  %50 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4281
  call void @IMB_rect_from_float(%struct.ImBuf* %50), !dbg !4283
  br label %if.end56, !dbg !4284

if.end56:                                         ; preds = %if.then55, %land.lhs.true52, %land.lhs.true50, %if.end48
  %51 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4285
  %tobool57 = icmp ne %struct.ImBuf* %51, null, !dbg !4285
  br i1 %tobool57, label %land.lhs.true58, label %if.end65, !dbg !4287

land.lhs.true58:                                  ; preds = %if.end56
  %52 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4288
  %rect59 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %52, i32 0, i32 8, !dbg !4289
  %53 = load i32*, i32** %rect59, align 8, !dbg !4289
  %tobool60 = icmp ne i32* %53, null, !dbg !4288
  br i1 %tobool60, label %if.end65, label %land.lhs.true61, !dbg !4290

land.lhs.true61:                                  ; preds = %land.lhs.true58
  %54 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4291
  %rect_float62 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 9, !dbg !4292
  %55 = load float*, float** %rect_float62, align 8, !dbg !4292
  %tobool63 = icmp ne float* %55, null, !dbg !4291
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !4293

if.then64:                                        ; preds = %land.lhs.true61
  %56 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4294
  call void @IMB_rect_from_float(%struct.ImBuf* %56), !dbg !4296
  br label %if.end65, !dbg !4297

if.end65:                                         ; preds = %if.then64, %land.lhs.true61, %land.lhs.true58, %if.end56
  %57 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4298
  %tobool66 = icmp ne %struct.ImBuf* %57, null, !dbg !4298
  br i1 %tobool66, label %land.lhs.true67, label %if.end74, !dbg !4300

land.lhs.true67:                                  ; preds = %if.end65
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4301
  %rect68 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %58, i32 0, i32 8, !dbg !4302
  %59 = load i32*, i32** %rect68, align 8, !dbg !4302
  %tobool69 = icmp ne i32* %59, null, !dbg !4301
  br i1 %tobool69, label %if.end74, label %land.lhs.true70, !dbg !4303

land.lhs.true70:                                  ; preds = %land.lhs.true67
  %60 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4304
  %rect_float71 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %60, i32 0, i32 9, !dbg !4305
  %61 = load float*, float** %rect_float71, align 8, !dbg !4305
  %tobool72 = icmp ne float* %61, null, !dbg !4304
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !4306

if.then73:                                        ; preds = %land.lhs.true70
  %62 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4307
  call void @IMB_rect_from_float(%struct.ImBuf* %62), !dbg !4309
  br label %if.end74, !dbg !4310

if.end74:                                         ; preds = %if.then73, %land.lhs.true70, %land.lhs.true67, %if.end65
  %63 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4311
  %rect_float75 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %63, i32 0, i32 9, !dbg !4313
  %64 = load float*, float** %rect_float75, align 8, !dbg !4313
  %tobool76 = icmp ne float* %64, null, !dbg !4311
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !4314

if.then77:                                        ; preds = %if.end74
  %65 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4315
  %66 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4316
  %sequencer_colorspace_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %66, i32 0, i32 46, !dbg !4317
  %name = getelementptr inbounds %struct.ColorManagedColorspaceSettings, %struct.ColorManagedColorspaceSettings* %sequencer_colorspace_settings, i32 0, i32 0, !dbg !4318
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4316
  call void @IMB_colormanagement_assign_float_colorspace(%struct.ImBuf* %65, i8* %arraydecay), !dbg !4319
  br label %if.end78, !dbg !4319

if.end78:                                         ; preds = %if.then77, %if.end74
  %67 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !4320
  ret %struct.ImBuf* %67, !dbg !4321
}

declare dso_local %struct.ImBuf* @IMB_allocImBuf(i32, i32, i8 zeroext, i32) #2

declare dso_local void @BKE_sequencer_imbuf_to_sequencer_space(%struct.Scene*, %struct.ImBuf*, i8 zeroext) #2

declare dso_local void @IMB_rect_from_float(%struct.ImBuf*) #2

declare dso_local void @IMB_colormanagement_assign_float_colorspace(%struct.ImBuf*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @slice_get_float_buffers(%struct.SeqRenderData* %context, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3, %struct.ImBuf* %out, i32 %start_line, float** %rect1, float** %rect2, float** %rect3, float** %rect_out) #0 !dbg !4322 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %rect1.addr = alloca float**, align 8
  %rect2.addr = alloca float**, align 8
  %rect3.addr = alloca float**, align 8
  %rect_out.addr = alloca float**, align 8
  %offset = alloca i32, align 4
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !4328, metadata !DIExpression()), !dbg !4329
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !4330, metadata !DIExpression()), !dbg !4331
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !4332, metadata !DIExpression()), !dbg !4333
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !4334, metadata !DIExpression()), !dbg !4335
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !4336, metadata !DIExpression()), !dbg !4337
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !4338, metadata !DIExpression()), !dbg !4339
  store float** %rect1, float*** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %rect1.addr, metadata !4340, metadata !DIExpression()), !dbg !4341
  store float** %rect2, float*** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %rect2.addr, metadata !4342, metadata !DIExpression()), !dbg !4343
  store float** %rect3, float*** %rect3.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %rect3.addr, metadata !4344, metadata !DIExpression()), !dbg !4345
  store float** %rect_out, float*** %rect_out.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %rect_out.addr, metadata !4346, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4348, metadata !DIExpression()), !dbg !4349
  %0 = load i32, i32* %start_line.addr, align 4, !dbg !4350
  %mul = mul nsw i32 4, %0, !dbg !4351
  %1 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4352
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %1, i32 0, i32 3, !dbg !4353
  %2 = load i32, i32* %rectx, align 8, !dbg !4353
  %mul1 = mul nsw i32 %mul, %2, !dbg !4354
  store i32 %mul1, i32* %offset, align 4, !dbg !4349
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4355
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 9, !dbg !4356
  %4 = load float*, float** %rect_float, align 8, !dbg !4356
  %5 = load i32, i32* %offset, align 4, !dbg !4357
  %idx.ext = sext i32 %5 to i64, !dbg !4358
  %add.ptr = getelementptr inbounds float, float* %4, i64 %idx.ext, !dbg !4358
  %6 = load float**, float*** %rect1.addr, align 8, !dbg !4359
  store float* %add.ptr, float** %6, align 8, !dbg !4360
  %7 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !4361
  %rect_float2 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %7, i32 0, i32 9, !dbg !4362
  %8 = load float*, float** %rect_float2, align 8, !dbg !4362
  %9 = load i32, i32* %offset, align 4, !dbg !4363
  %idx.ext3 = sext i32 %9 to i64, !dbg !4364
  %add.ptr4 = getelementptr inbounds float, float* %8, i64 %idx.ext3, !dbg !4364
  %10 = load float**, float*** %rect_out.addr, align 8, !dbg !4365
  store float* %add.ptr4, float** %10, align 8, !dbg !4366
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4367
  %tobool = icmp ne %struct.ImBuf* %11, null, !dbg !4367
  br i1 %tobool, label %if.then, label %if.end, !dbg !4369

if.then:                                          ; preds = %entry
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4370
  %rect_float5 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 9, !dbg !4371
  %13 = load float*, float** %rect_float5, align 8, !dbg !4371
  %14 = load i32, i32* %offset, align 4, !dbg !4372
  %idx.ext6 = sext i32 %14 to i64, !dbg !4373
  %add.ptr7 = getelementptr inbounds float, float* %13, i64 %idx.ext6, !dbg !4373
  %15 = load float**, float*** %rect2.addr, align 8, !dbg !4374
  store float* %add.ptr7, float** %15, align 8, !dbg !4375
  br label %if.end, !dbg !4376

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4377
  %tobool8 = icmp ne %struct.ImBuf* %16, null, !dbg !4377
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !4379

if.then9:                                         ; preds = %if.end
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4380
  %rect_float10 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 9, !dbg !4381
  %18 = load float*, float** %rect_float10, align 8, !dbg !4381
  %19 = load i32, i32* %offset, align 4, !dbg !4382
  %idx.ext11 = sext i32 %19 to i64, !dbg !4383
  %add.ptr12 = getelementptr inbounds float, float* %18, i64 %idx.ext11, !dbg !4383
  %20 = load float**, float*** %rect3.addr, align 8, !dbg !4384
  store float* %add.ptr12, float** %20, align 8, !dbg !4385
  br label %if.end13, !dbg !4386

if.end13:                                         ; preds = %if.then9, %if.end
  ret void, !dbg !4387
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_cross_effect_float(float %facf0, float %facf1, i32 %x, i32 %y, float* %rect1, float* %rect2, float* %out) #0 !dbg !4388 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  %fac3 = alloca float, align 4
  %fac4 = alloca float, align 4
  %xo = alloca i32, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %rt = alloca float*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !4391, metadata !DIExpression()), !dbg !4392
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !4393, metadata !DIExpression()), !dbg !4394
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4395, metadata !DIExpression()), !dbg !4396
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !4397, metadata !DIExpression()), !dbg !4398
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !4399, metadata !DIExpression()), !dbg !4400
  store float* %rect2, float** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2.addr, metadata !4401, metadata !DIExpression()), !dbg !4402
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !4405, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !4407, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.declare(metadata float* %fac3, metadata !4409, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.declare(metadata float* %fac4, metadata !4411, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !4413, metadata !DIExpression()), !dbg !4414
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !4415, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !4417, metadata !DIExpression()), !dbg !4418
  call void @llvm.dbg.declare(metadata float** %rt, metadata !4419, metadata !DIExpression()), !dbg !4420
  %0 = load i32, i32* %x.addr, align 4, !dbg !4421
  store i32 %0, i32* %xo, align 4, !dbg !4422
  %1 = load float*, float** %rect1.addr, align 8, !dbg !4423
  store float* %1, float** %rt1, align 8, !dbg !4424
  %2 = load float*, float** %rect2.addr, align 8, !dbg !4425
  store float* %2, float** %rt2, align 8, !dbg !4426
  %3 = load float*, float** %out.addr, align 8, !dbg !4427
  store float* %3, float** %rt, align 8, !dbg !4428
  %4 = load float, float* %facf0.addr, align 4, !dbg !4429
  store float %4, float* %fac2, align 4, !dbg !4430
  %5 = load float, float* %fac2, align 4, !dbg !4431
  %sub = fsub float 1.000000e+00, %5, !dbg !4432
  store float %sub, float* %fac1, align 4, !dbg !4433
  %6 = load float, float* %facf1.addr, align 4, !dbg !4434
  store float %6, float* %fac4, align 4, !dbg !4435
  %7 = load float, float* %fac4, align 4, !dbg !4436
  %sub1 = fsub float 1.000000e+00, %7, !dbg !4437
  store float %sub1, float* %fac3, align 4, !dbg !4438
  br label %while.cond, !dbg !4439

while.cond:                                       ; preds = %while.end61, %entry
  %8 = load i32, i32* %y.addr, align 4, !dbg !4440
  %dec = add nsw i32 %8, -1, !dbg !4440
  store i32 %dec, i32* %y.addr, align 4, !dbg !4440
  %tobool = icmp ne i32 %8, 0, !dbg !4439
  br i1 %tobool, label %while.body, label %while.end62, !dbg !4439

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* %xo, align 4, !dbg !4441
  store i32 %9, i32* %x.addr, align 4, !dbg !4443
  br label %while.cond2, !dbg !4444

while.cond2:                                      ; preds = %while.body5, %while.body
  %10 = load i32, i32* %x.addr, align 4, !dbg !4445
  %dec3 = add nsw i32 %10, -1, !dbg !4445
  store i32 %dec3, i32* %x.addr, align 4, !dbg !4445
  %tobool4 = icmp ne i32 %10, 0, !dbg !4444
  br i1 %tobool4, label %while.body5, label %while.end, !dbg !4444

while.body5:                                      ; preds = %while.cond2
  %11 = load float, float* %fac1, align 4, !dbg !4446
  %12 = load float*, float** %rt1, align 8, !dbg !4448
  %arrayidx = getelementptr inbounds float, float* %12, i64 0, !dbg !4448
  %13 = load float, float* %arrayidx, align 4, !dbg !4448
  %mul = fmul float %11, %13, !dbg !4449
  %14 = load float, float* %fac2, align 4, !dbg !4450
  %15 = load float*, float** %rt2, align 8, !dbg !4451
  %arrayidx6 = getelementptr inbounds float, float* %15, i64 0, !dbg !4451
  %16 = load float, float* %arrayidx6, align 4, !dbg !4451
  %mul7 = fmul float %14, %16, !dbg !4452
  %add = fadd float %mul, %mul7, !dbg !4453
  %17 = load float*, float** %rt, align 8, !dbg !4454
  %arrayidx8 = getelementptr inbounds float, float* %17, i64 0, !dbg !4454
  store float %add, float* %arrayidx8, align 4, !dbg !4455
  %18 = load float, float* %fac1, align 4, !dbg !4456
  %19 = load float*, float** %rt1, align 8, !dbg !4457
  %arrayidx9 = getelementptr inbounds float, float* %19, i64 1, !dbg !4457
  %20 = load float, float* %arrayidx9, align 4, !dbg !4457
  %mul10 = fmul float %18, %20, !dbg !4458
  %21 = load float, float* %fac2, align 4, !dbg !4459
  %22 = load float*, float** %rt2, align 8, !dbg !4460
  %arrayidx11 = getelementptr inbounds float, float* %22, i64 1, !dbg !4460
  %23 = load float, float* %arrayidx11, align 4, !dbg !4460
  %mul12 = fmul float %21, %23, !dbg !4461
  %add13 = fadd float %mul10, %mul12, !dbg !4462
  %24 = load float*, float** %rt, align 8, !dbg !4463
  %arrayidx14 = getelementptr inbounds float, float* %24, i64 1, !dbg !4463
  store float %add13, float* %arrayidx14, align 4, !dbg !4464
  %25 = load float, float* %fac1, align 4, !dbg !4465
  %26 = load float*, float** %rt1, align 8, !dbg !4466
  %arrayidx15 = getelementptr inbounds float, float* %26, i64 2, !dbg !4466
  %27 = load float, float* %arrayidx15, align 4, !dbg !4466
  %mul16 = fmul float %25, %27, !dbg !4467
  %28 = load float, float* %fac2, align 4, !dbg !4468
  %29 = load float*, float** %rt2, align 8, !dbg !4469
  %arrayidx17 = getelementptr inbounds float, float* %29, i64 2, !dbg !4469
  %30 = load float, float* %arrayidx17, align 4, !dbg !4469
  %mul18 = fmul float %28, %30, !dbg !4470
  %add19 = fadd float %mul16, %mul18, !dbg !4471
  %31 = load float*, float** %rt, align 8, !dbg !4472
  %arrayidx20 = getelementptr inbounds float, float* %31, i64 2, !dbg !4472
  store float %add19, float* %arrayidx20, align 4, !dbg !4473
  %32 = load float, float* %fac1, align 4, !dbg !4474
  %33 = load float*, float** %rt1, align 8, !dbg !4475
  %arrayidx21 = getelementptr inbounds float, float* %33, i64 3, !dbg !4475
  %34 = load float, float* %arrayidx21, align 4, !dbg !4475
  %mul22 = fmul float %32, %34, !dbg !4476
  %35 = load float, float* %fac2, align 4, !dbg !4477
  %36 = load float*, float** %rt2, align 8, !dbg !4478
  %arrayidx23 = getelementptr inbounds float, float* %36, i64 3, !dbg !4478
  %37 = load float, float* %arrayidx23, align 4, !dbg !4478
  %mul24 = fmul float %35, %37, !dbg !4479
  %add25 = fadd float %mul22, %mul24, !dbg !4480
  %38 = load float*, float** %rt, align 8, !dbg !4481
  %arrayidx26 = getelementptr inbounds float, float* %38, i64 3, !dbg !4481
  store float %add25, float* %arrayidx26, align 4, !dbg !4482
  %39 = load float*, float** %rt1, align 8, !dbg !4483
  %add.ptr = getelementptr inbounds float, float* %39, i64 4, !dbg !4483
  store float* %add.ptr, float** %rt1, align 8, !dbg !4483
  %40 = load float*, float** %rt2, align 8, !dbg !4484
  %add.ptr27 = getelementptr inbounds float, float* %40, i64 4, !dbg !4484
  store float* %add.ptr27, float** %rt2, align 8, !dbg !4484
  %41 = load float*, float** %rt, align 8, !dbg !4485
  %add.ptr28 = getelementptr inbounds float, float* %41, i64 4, !dbg !4485
  store float* %add.ptr28, float** %rt, align 8, !dbg !4485
  br label %while.cond2, !dbg !4444, !llvm.loop !4486

while.end:                                        ; preds = %while.cond2
  %42 = load i32, i32* %y.addr, align 4, !dbg !4488
  %cmp = icmp eq i32 %42, 0, !dbg !4490
  br i1 %cmp, label %if.then, label %if.end, !dbg !4491

if.then:                                          ; preds = %while.end
  br label %while.end62, !dbg !4492

if.end:                                           ; preds = %while.end
  %43 = load i32, i32* %y.addr, align 4, !dbg !4493
  %dec29 = add nsw i32 %43, -1, !dbg !4493
  store i32 %dec29, i32* %y.addr, align 4, !dbg !4493
  %44 = load i32, i32* %xo, align 4, !dbg !4494
  store i32 %44, i32* %x.addr, align 4, !dbg !4495
  br label %while.cond30, !dbg !4496

while.cond30:                                     ; preds = %while.body33, %if.end
  %45 = load i32, i32* %x.addr, align 4, !dbg !4497
  %dec31 = add nsw i32 %45, -1, !dbg !4497
  store i32 %dec31, i32* %x.addr, align 4, !dbg !4497
  %tobool32 = icmp ne i32 %45, 0, !dbg !4496
  br i1 %tobool32, label %while.body33, label %while.end61, !dbg !4496

while.body33:                                     ; preds = %while.cond30
  %46 = load float, float* %fac3, align 4, !dbg !4498
  %47 = load float*, float** %rt1, align 8, !dbg !4500
  %arrayidx34 = getelementptr inbounds float, float* %47, i64 0, !dbg !4500
  %48 = load float, float* %arrayidx34, align 4, !dbg !4500
  %mul35 = fmul float %46, %48, !dbg !4501
  %49 = load float, float* %fac4, align 4, !dbg !4502
  %50 = load float*, float** %rt2, align 8, !dbg !4503
  %arrayidx36 = getelementptr inbounds float, float* %50, i64 0, !dbg !4503
  %51 = load float, float* %arrayidx36, align 4, !dbg !4503
  %mul37 = fmul float %49, %51, !dbg !4504
  %add38 = fadd float %mul35, %mul37, !dbg !4505
  %52 = load float*, float** %rt, align 8, !dbg !4506
  %arrayidx39 = getelementptr inbounds float, float* %52, i64 0, !dbg !4506
  store float %add38, float* %arrayidx39, align 4, !dbg !4507
  %53 = load float, float* %fac3, align 4, !dbg !4508
  %54 = load float*, float** %rt1, align 8, !dbg !4509
  %arrayidx40 = getelementptr inbounds float, float* %54, i64 1, !dbg !4509
  %55 = load float, float* %arrayidx40, align 4, !dbg !4509
  %mul41 = fmul float %53, %55, !dbg !4510
  %56 = load float, float* %fac4, align 4, !dbg !4511
  %57 = load float*, float** %rt2, align 8, !dbg !4512
  %arrayidx42 = getelementptr inbounds float, float* %57, i64 1, !dbg !4512
  %58 = load float, float* %arrayidx42, align 4, !dbg !4512
  %mul43 = fmul float %56, %58, !dbg !4513
  %add44 = fadd float %mul41, %mul43, !dbg !4514
  %59 = load float*, float** %rt, align 8, !dbg !4515
  %arrayidx45 = getelementptr inbounds float, float* %59, i64 1, !dbg !4515
  store float %add44, float* %arrayidx45, align 4, !dbg !4516
  %60 = load float, float* %fac3, align 4, !dbg !4517
  %61 = load float*, float** %rt1, align 8, !dbg !4518
  %arrayidx46 = getelementptr inbounds float, float* %61, i64 2, !dbg !4518
  %62 = load float, float* %arrayidx46, align 4, !dbg !4518
  %mul47 = fmul float %60, %62, !dbg !4519
  %63 = load float, float* %fac4, align 4, !dbg !4520
  %64 = load float*, float** %rt2, align 8, !dbg !4521
  %arrayidx48 = getelementptr inbounds float, float* %64, i64 2, !dbg !4521
  %65 = load float, float* %arrayidx48, align 4, !dbg !4521
  %mul49 = fmul float %63, %65, !dbg !4522
  %add50 = fadd float %mul47, %mul49, !dbg !4523
  %66 = load float*, float** %rt, align 8, !dbg !4524
  %arrayidx51 = getelementptr inbounds float, float* %66, i64 2, !dbg !4524
  store float %add50, float* %arrayidx51, align 4, !dbg !4525
  %67 = load float, float* %fac3, align 4, !dbg !4526
  %68 = load float*, float** %rt1, align 8, !dbg !4527
  %arrayidx52 = getelementptr inbounds float, float* %68, i64 3, !dbg !4527
  %69 = load float, float* %arrayidx52, align 4, !dbg !4527
  %mul53 = fmul float %67, %69, !dbg !4528
  %70 = load float, float* %fac4, align 4, !dbg !4529
  %71 = load float*, float** %rt2, align 8, !dbg !4530
  %arrayidx54 = getelementptr inbounds float, float* %71, i64 3, !dbg !4530
  %72 = load float, float* %arrayidx54, align 4, !dbg !4530
  %mul55 = fmul float %70, %72, !dbg !4531
  %add56 = fadd float %mul53, %mul55, !dbg !4532
  %73 = load float*, float** %rt, align 8, !dbg !4533
  %arrayidx57 = getelementptr inbounds float, float* %73, i64 3, !dbg !4533
  store float %add56, float* %arrayidx57, align 4, !dbg !4534
  %74 = load float*, float** %rt1, align 8, !dbg !4535
  %add.ptr58 = getelementptr inbounds float, float* %74, i64 4, !dbg !4535
  store float* %add.ptr58, float** %rt1, align 8, !dbg !4535
  %75 = load float*, float** %rt2, align 8, !dbg !4536
  %add.ptr59 = getelementptr inbounds float, float* %75, i64 4, !dbg !4536
  store float* %add.ptr59, float** %rt2, align 8, !dbg !4536
  %76 = load float*, float** %rt, align 8, !dbg !4537
  %add.ptr60 = getelementptr inbounds float, float* %76, i64 4, !dbg !4537
  store float* %add.ptr60, float** %rt, align 8, !dbg !4537
  br label %while.cond30, !dbg !4496, !llvm.loop !4538

while.end61:                                      ; preds = %while.cond30
  br label %while.cond, !dbg !4439, !llvm.loop !4540

while.end62:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !4542
}

; Function Attrs: noinline nounwind uwtable
define internal void @slice_get_byte_buffers(%struct.SeqRenderData* %context, %struct.ImBuf* %ibuf1, %struct.ImBuf* %ibuf2, %struct.ImBuf* %ibuf3, %struct.ImBuf* %out, i32 %start_line, i8** %rect1, i8** %rect2, i8** %rect3, i8** %rect_out) #0 !dbg !4543 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %ibuf2.addr = alloca %struct.ImBuf*, align 8
  %ibuf3.addr = alloca %struct.ImBuf*, align 8
  %out.addr = alloca %struct.ImBuf*, align 8
  %start_line.addr = alloca i32, align 4
  %rect1.addr = alloca i8**, align 8
  %rect2.addr = alloca i8**, align 8
  %rect3.addr = alloca i8**, align 8
  %rect_out.addr = alloca i8**, align 8
  %offset = alloca i32, align 4
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !4547, metadata !DIExpression()), !dbg !4548
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !4549, metadata !DIExpression()), !dbg !4550
  store %struct.ImBuf* %ibuf2, %struct.ImBuf** %ibuf2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf2.addr, metadata !4551, metadata !DIExpression()), !dbg !4552
  store %struct.ImBuf* %ibuf3, %struct.ImBuf** %ibuf3.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf3.addr, metadata !4553, metadata !DIExpression()), !dbg !4554
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !4555, metadata !DIExpression()), !dbg !4556
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !4557, metadata !DIExpression()), !dbg !4558
  store i8** %rect1, i8*** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %rect1.addr, metadata !4559, metadata !DIExpression()), !dbg !4560
  store i8** %rect2, i8*** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %rect2.addr, metadata !4561, metadata !DIExpression()), !dbg !4562
  store i8** %rect3, i8*** %rect3.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %rect3.addr, metadata !4563, metadata !DIExpression()), !dbg !4564
  store i8** %rect_out, i8*** %rect_out.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %rect_out.addr, metadata !4565, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4567, metadata !DIExpression()), !dbg !4568
  %0 = load i32, i32* %start_line.addr, align 4, !dbg !4569
  %mul = mul nsw i32 4, %0, !dbg !4570
  %1 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !4571
  %rectx = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %1, i32 0, i32 3, !dbg !4572
  %2 = load i32, i32* %rectx, align 8, !dbg !4572
  %mul1 = mul nsw i32 %mul, %2, !dbg !4573
  store i32 %mul1, i32* %offset, align 4, !dbg !4568
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !4574
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 8, !dbg !4575
  %4 = load i32*, i32** %rect, align 8, !dbg !4575
  %5 = bitcast i32* %4 to i8*, !dbg !4576
  %6 = load i32, i32* %offset, align 4, !dbg !4577
  %idx.ext = sext i32 %6 to i64, !dbg !4578
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !4578
  %7 = load i8**, i8*** %rect1.addr, align 8, !dbg !4579
  store i8* %add.ptr, i8** %7, align 8, !dbg !4580
  %8 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !4581
  %rect4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 8, !dbg !4582
  %9 = load i32*, i32** %rect4, align 8, !dbg !4582
  %10 = bitcast i32* %9 to i8*, !dbg !4583
  %11 = load i32, i32* %offset, align 4, !dbg !4584
  %idx.ext5 = sext i32 %11 to i64, !dbg !4585
  %add.ptr6 = getelementptr inbounds i8, i8* %10, i64 %idx.ext5, !dbg !4585
  %12 = load i8**, i8*** %rect_out.addr, align 8, !dbg !4586
  store i8* %add.ptr6, i8** %12, align 8, !dbg !4587
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4588
  %tobool = icmp ne %struct.ImBuf* %13, null, !dbg !4588
  br i1 %tobool, label %if.then, label %if.end, !dbg !4590

if.then:                                          ; preds = %entry
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf2.addr, align 8, !dbg !4591
  %rect7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %14, i32 0, i32 8, !dbg !4592
  %15 = load i32*, i32** %rect7, align 8, !dbg !4592
  %16 = bitcast i32* %15 to i8*, !dbg !4593
  %17 = load i32, i32* %offset, align 4, !dbg !4594
  %idx.ext8 = sext i32 %17 to i64, !dbg !4595
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %idx.ext8, !dbg !4595
  %18 = load i8**, i8*** %rect2.addr, align 8, !dbg !4596
  store i8* %add.ptr9, i8** %18, align 8, !dbg !4597
  br label %if.end, !dbg !4598

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4599
  %tobool10 = icmp ne %struct.ImBuf* %19, null, !dbg !4599
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !4601

if.then11:                                        ; preds = %if.end
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf3.addr, align 8, !dbg !4602
  %rect12 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 8, !dbg !4603
  %21 = load i32*, i32** %rect12, align 8, !dbg !4603
  %22 = bitcast i32* %21 to i8*, !dbg !4604
  %23 = load i32, i32* %offset, align 4, !dbg !4605
  %idx.ext13 = sext i32 %23 to i64, !dbg !4606
  %add.ptr14 = getelementptr inbounds i8, i8* %22, i64 %idx.ext13, !dbg !4606
  %24 = load i8**, i8*** %rect3.addr, align 8, !dbg !4607
  store i8* %add.ptr14, i8** %24, align 8, !dbg !4608
  br label %if.end15, !dbg !4609

if.end15:                                         ; preds = %if.then11, %if.end
  ret void, !dbg !4610
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_cross_effect_byte(float %facf0, float %facf1, i32 %x, i32 %y, i8* %rect1, i8* %rect2, i8* %out) #0 !dbg !4611 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %fac1 = alloca i32, align 4
  %fac2 = alloca i32, align 4
  %fac3 = alloca i32, align 4
  %fac4 = alloca i32, align 4
  %xo = alloca i32, align 4
  %rt1 = alloca i8*, align 8
  %rt2 = alloca i8*, align 8
  %rt = alloca i8*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !4614, metadata !DIExpression()), !dbg !4615
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !4616, metadata !DIExpression()), !dbg !4617
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4618, metadata !DIExpression()), !dbg !4619
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !4620, metadata !DIExpression()), !dbg !4621
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !4622, metadata !DIExpression()), !dbg !4623
  store i8* %rect2, i8** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  call void @llvm.dbg.declare(metadata i32* %fac1, metadata !4628, metadata !DIExpression()), !dbg !4629
  call void @llvm.dbg.declare(metadata i32* %fac2, metadata !4630, metadata !DIExpression()), !dbg !4631
  call void @llvm.dbg.declare(metadata i32* %fac3, metadata !4632, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %fac4, metadata !4634, metadata !DIExpression()), !dbg !4635
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !4636, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.declare(metadata i8** %rt1, metadata !4638, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.declare(metadata i8** %rt2, metadata !4640, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.declare(metadata i8** %rt, metadata !4642, metadata !DIExpression()), !dbg !4643
  %0 = load i32, i32* %x.addr, align 4, !dbg !4644
  store i32 %0, i32* %xo, align 4, !dbg !4645
  %1 = load i8*, i8** %rect1.addr, align 8, !dbg !4646
  store i8* %1, i8** %rt1, align 8, !dbg !4647
  %2 = load i8*, i8** %rect2.addr, align 8, !dbg !4648
  store i8* %2, i8** %rt2, align 8, !dbg !4649
  %3 = load i8*, i8** %out.addr, align 8, !dbg !4650
  store i8* %3, i8** %rt, align 8, !dbg !4651
  %4 = load float, float* %facf0.addr, align 4, !dbg !4652
  %mul = fmul float 2.560000e+02, %4, !dbg !4653
  %conv = fptosi float %mul to i32, !dbg !4654
  store i32 %conv, i32* %fac2, align 4, !dbg !4655
  %5 = load i32, i32* %fac2, align 4, !dbg !4656
  %sub = sub nsw i32 256, %5, !dbg !4657
  store i32 %sub, i32* %fac1, align 4, !dbg !4658
  %6 = load float, float* %facf1.addr, align 4, !dbg !4659
  %mul1 = fmul float 2.560000e+02, %6, !dbg !4660
  %conv2 = fptosi float %mul1 to i32, !dbg !4661
  store i32 %conv2, i32* %fac4, align 4, !dbg !4662
  %7 = load i32, i32* %fac4, align 4, !dbg !4663
  %sub3 = sub nsw i32 256, %7, !dbg !4664
  store i32 %sub3, i32* %fac3, align 4, !dbg !4665
  br label %while.cond, !dbg !4666

while.cond:                                       ; preds = %while.end96, %entry
  %8 = load i32, i32* %y.addr, align 4, !dbg !4667
  %dec = add nsw i32 %8, -1, !dbg !4667
  store i32 %dec, i32* %y.addr, align 4, !dbg !4667
  %tobool = icmp ne i32 %8, 0, !dbg !4666
  br i1 %tobool, label %while.body, label %while.end97, !dbg !4666

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* %xo, align 4, !dbg !4668
  store i32 %9, i32* %x.addr, align 4, !dbg !4670
  br label %while.cond4, !dbg !4671

while.cond4:                                      ; preds = %while.body7, %while.body
  %10 = load i32, i32* %x.addr, align 4, !dbg !4672
  %dec5 = add nsw i32 %10, -1, !dbg !4672
  store i32 %dec5, i32* %x.addr, align 4, !dbg !4672
  %tobool6 = icmp ne i32 %10, 0, !dbg !4671
  br i1 %tobool6, label %while.body7, label %while.end, !dbg !4671

while.body7:                                      ; preds = %while.cond4
  %11 = load i32, i32* %fac1, align 4, !dbg !4673
  %12 = load i8*, i8** %rt1, align 8, !dbg !4675
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 0, !dbg !4675
  %13 = load i8, i8* %arrayidx, align 1, !dbg !4675
  %conv8 = zext i8 %13 to i32, !dbg !4675
  %mul9 = mul nsw i32 %11, %conv8, !dbg !4676
  %14 = load i32, i32* %fac2, align 4, !dbg !4677
  %15 = load i8*, i8** %rt2, align 8, !dbg !4678
  %arrayidx10 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !4678
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !4678
  %conv11 = zext i8 %16 to i32, !dbg !4678
  %mul12 = mul nsw i32 %14, %conv11, !dbg !4679
  %add = add nsw i32 %mul9, %mul12, !dbg !4680
  %shr = ashr i32 %add, 8, !dbg !4681
  %conv13 = trunc i32 %shr to i8, !dbg !4682
  %17 = load i8*, i8** %rt, align 8, !dbg !4683
  %arrayidx14 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !4683
  store i8 %conv13, i8* %arrayidx14, align 1, !dbg !4684
  %18 = load i32, i32* %fac1, align 4, !dbg !4685
  %19 = load i8*, i8** %rt1, align 8, !dbg !4686
  %arrayidx15 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !4686
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !4686
  %conv16 = zext i8 %20 to i32, !dbg !4686
  %mul17 = mul nsw i32 %18, %conv16, !dbg !4687
  %21 = load i32, i32* %fac2, align 4, !dbg !4688
  %22 = load i8*, i8** %rt2, align 8, !dbg !4689
  %arrayidx18 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !4689
  %23 = load i8, i8* %arrayidx18, align 1, !dbg !4689
  %conv19 = zext i8 %23 to i32, !dbg !4689
  %mul20 = mul nsw i32 %21, %conv19, !dbg !4690
  %add21 = add nsw i32 %mul17, %mul20, !dbg !4691
  %shr22 = ashr i32 %add21, 8, !dbg !4692
  %conv23 = trunc i32 %shr22 to i8, !dbg !4693
  %24 = load i8*, i8** %rt, align 8, !dbg !4694
  %arrayidx24 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !4694
  store i8 %conv23, i8* %arrayidx24, align 1, !dbg !4695
  %25 = load i32, i32* %fac1, align 4, !dbg !4696
  %26 = load i8*, i8** %rt1, align 8, !dbg !4697
  %arrayidx25 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !4697
  %27 = load i8, i8* %arrayidx25, align 1, !dbg !4697
  %conv26 = zext i8 %27 to i32, !dbg !4697
  %mul27 = mul nsw i32 %25, %conv26, !dbg !4698
  %28 = load i32, i32* %fac2, align 4, !dbg !4699
  %29 = load i8*, i8** %rt2, align 8, !dbg !4700
  %arrayidx28 = getelementptr inbounds i8, i8* %29, i64 2, !dbg !4700
  %30 = load i8, i8* %arrayidx28, align 1, !dbg !4700
  %conv29 = zext i8 %30 to i32, !dbg !4700
  %mul30 = mul nsw i32 %28, %conv29, !dbg !4701
  %add31 = add nsw i32 %mul27, %mul30, !dbg !4702
  %shr32 = ashr i32 %add31, 8, !dbg !4703
  %conv33 = trunc i32 %shr32 to i8, !dbg !4704
  %31 = load i8*, i8** %rt, align 8, !dbg !4705
  %arrayidx34 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !4705
  store i8 %conv33, i8* %arrayidx34, align 1, !dbg !4706
  %32 = load i32, i32* %fac1, align 4, !dbg !4707
  %33 = load i8*, i8** %rt1, align 8, !dbg !4708
  %arrayidx35 = getelementptr inbounds i8, i8* %33, i64 3, !dbg !4708
  %34 = load i8, i8* %arrayidx35, align 1, !dbg !4708
  %conv36 = zext i8 %34 to i32, !dbg !4708
  %mul37 = mul nsw i32 %32, %conv36, !dbg !4709
  %35 = load i32, i32* %fac2, align 4, !dbg !4710
  %36 = load i8*, i8** %rt2, align 8, !dbg !4711
  %arrayidx38 = getelementptr inbounds i8, i8* %36, i64 3, !dbg !4711
  %37 = load i8, i8* %arrayidx38, align 1, !dbg !4711
  %conv39 = zext i8 %37 to i32, !dbg !4711
  %mul40 = mul nsw i32 %35, %conv39, !dbg !4712
  %add41 = add nsw i32 %mul37, %mul40, !dbg !4713
  %shr42 = ashr i32 %add41, 8, !dbg !4714
  %conv43 = trunc i32 %shr42 to i8, !dbg !4715
  %38 = load i8*, i8** %rt, align 8, !dbg !4716
  %arrayidx44 = getelementptr inbounds i8, i8* %38, i64 3, !dbg !4716
  store i8 %conv43, i8* %arrayidx44, align 1, !dbg !4717
  %39 = load i8*, i8** %rt1, align 8, !dbg !4718
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 4, !dbg !4718
  store i8* %add.ptr, i8** %rt1, align 8, !dbg !4718
  %40 = load i8*, i8** %rt2, align 8, !dbg !4719
  %add.ptr45 = getelementptr inbounds i8, i8* %40, i64 4, !dbg !4719
  store i8* %add.ptr45, i8** %rt2, align 8, !dbg !4719
  %41 = load i8*, i8** %rt, align 8, !dbg !4720
  %add.ptr46 = getelementptr inbounds i8, i8* %41, i64 4, !dbg !4720
  store i8* %add.ptr46, i8** %rt, align 8, !dbg !4720
  br label %while.cond4, !dbg !4671, !llvm.loop !4721

while.end:                                        ; preds = %while.cond4
  %42 = load i32, i32* %y.addr, align 4, !dbg !4723
  %cmp = icmp eq i32 %42, 0, !dbg !4725
  br i1 %cmp, label %if.then, label %if.end, !dbg !4726

if.then:                                          ; preds = %while.end
  br label %while.end97, !dbg !4727

if.end:                                           ; preds = %while.end
  %43 = load i32, i32* %y.addr, align 4, !dbg !4728
  %dec48 = add nsw i32 %43, -1, !dbg !4728
  store i32 %dec48, i32* %y.addr, align 4, !dbg !4728
  %44 = load i32, i32* %xo, align 4, !dbg !4729
  store i32 %44, i32* %x.addr, align 4, !dbg !4730
  br label %while.cond49, !dbg !4731

while.cond49:                                     ; preds = %while.body52, %if.end
  %45 = load i32, i32* %x.addr, align 4, !dbg !4732
  %dec50 = add nsw i32 %45, -1, !dbg !4732
  store i32 %dec50, i32* %x.addr, align 4, !dbg !4732
  %tobool51 = icmp ne i32 %45, 0, !dbg !4731
  br i1 %tobool51, label %while.body52, label %while.end96, !dbg !4731

while.body52:                                     ; preds = %while.cond49
  %46 = load i32, i32* %fac3, align 4, !dbg !4733
  %47 = load i8*, i8** %rt1, align 8, !dbg !4735
  %arrayidx53 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !4735
  %48 = load i8, i8* %arrayidx53, align 1, !dbg !4735
  %conv54 = zext i8 %48 to i32, !dbg !4735
  %mul55 = mul nsw i32 %46, %conv54, !dbg !4736
  %49 = load i32, i32* %fac4, align 4, !dbg !4737
  %50 = load i8*, i8** %rt2, align 8, !dbg !4738
  %arrayidx56 = getelementptr inbounds i8, i8* %50, i64 0, !dbg !4738
  %51 = load i8, i8* %arrayidx56, align 1, !dbg !4738
  %conv57 = zext i8 %51 to i32, !dbg !4738
  %mul58 = mul nsw i32 %49, %conv57, !dbg !4739
  %add59 = add nsw i32 %mul55, %mul58, !dbg !4740
  %shr60 = ashr i32 %add59, 8, !dbg !4741
  %conv61 = trunc i32 %shr60 to i8, !dbg !4742
  %52 = load i8*, i8** %rt, align 8, !dbg !4743
  %arrayidx62 = getelementptr inbounds i8, i8* %52, i64 0, !dbg !4743
  store i8 %conv61, i8* %arrayidx62, align 1, !dbg !4744
  %53 = load i32, i32* %fac3, align 4, !dbg !4745
  %54 = load i8*, i8** %rt1, align 8, !dbg !4746
  %arrayidx63 = getelementptr inbounds i8, i8* %54, i64 1, !dbg !4746
  %55 = load i8, i8* %arrayidx63, align 1, !dbg !4746
  %conv64 = zext i8 %55 to i32, !dbg !4746
  %mul65 = mul nsw i32 %53, %conv64, !dbg !4747
  %56 = load i32, i32* %fac4, align 4, !dbg !4748
  %57 = load i8*, i8** %rt2, align 8, !dbg !4749
  %arrayidx66 = getelementptr inbounds i8, i8* %57, i64 1, !dbg !4749
  %58 = load i8, i8* %arrayidx66, align 1, !dbg !4749
  %conv67 = zext i8 %58 to i32, !dbg !4749
  %mul68 = mul nsw i32 %56, %conv67, !dbg !4750
  %add69 = add nsw i32 %mul65, %mul68, !dbg !4751
  %shr70 = ashr i32 %add69, 8, !dbg !4752
  %conv71 = trunc i32 %shr70 to i8, !dbg !4753
  %59 = load i8*, i8** %rt, align 8, !dbg !4754
  %arrayidx72 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !4754
  store i8 %conv71, i8* %arrayidx72, align 1, !dbg !4755
  %60 = load i32, i32* %fac3, align 4, !dbg !4756
  %61 = load i8*, i8** %rt1, align 8, !dbg !4757
  %arrayidx73 = getelementptr inbounds i8, i8* %61, i64 2, !dbg !4757
  %62 = load i8, i8* %arrayidx73, align 1, !dbg !4757
  %conv74 = zext i8 %62 to i32, !dbg !4757
  %mul75 = mul nsw i32 %60, %conv74, !dbg !4758
  %63 = load i32, i32* %fac4, align 4, !dbg !4759
  %64 = load i8*, i8** %rt2, align 8, !dbg !4760
  %arrayidx76 = getelementptr inbounds i8, i8* %64, i64 2, !dbg !4760
  %65 = load i8, i8* %arrayidx76, align 1, !dbg !4760
  %conv77 = zext i8 %65 to i32, !dbg !4760
  %mul78 = mul nsw i32 %63, %conv77, !dbg !4761
  %add79 = add nsw i32 %mul75, %mul78, !dbg !4762
  %shr80 = ashr i32 %add79, 8, !dbg !4763
  %conv81 = trunc i32 %shr80 to i8, !dbg !4764
  %66 = load i8*, i8** %rt, align 8, !dbg !4765
  %arrayidx82 = getelementptr inbounds i8, i8* %66, i64 2, !dbg !4765
  store i8 %conv81, i8* %arrayidx82, align 1, !dbg !4766
  %67 = load i32, i32* %fac3, align 4, !dbg !4767
  %68 = load i8*, i8** %rt1, align 8, !dbg !4768
  %arrayidx83 = getelementptr inbounds i8, i8* %68, i64 3, !dbg !4768
  %69 = load i8, i8* %arrayidx83, align 1, !dbg !4768
  %conv84 = zext i8 %69 to i32, !dbg !4768
  %mul85 = mul nsw i32 %67, %conv84, !dbg !4769
  %70 = load i32, i32* %fac4, align 4, !dbg !4770
  %71 = load i8*, i8** %rt2, align 8, !dbg !4771
  %arrayidx86 = getelementptr inbounds i8, i8* %71, i64 3, !dbg !4771
  %72 = load i8, i8* %arrayidx86, align 1, !dbg !4771
  %conv87 = zext i8 %72 to i32, !dbg !4771
  %mul88 = mul nsw i32 %70, %conv87, !dbg !4772
  %add89 = add nsw i32 %mul85, %mul88, !dbg !4773
  %shr90 = ashr i32 %add89, 8, !dbg !4774
  %conv91 = trunc i32 %shr90 to i8, !dbg !4775
  %73 = load i8*, i8** %rt, align 8, !dbg !4776
  %arrayidx92 = getelementptr inbounds i8, i8* %73, i64 3, !dbg !4776
  store i8 %conv91, i8* %arrayidx92, align 1, !dbg !4777
  %74 = load i8*, i8** %rt1, align 8, !dbg !4778
  %add.ptr93 = getelementptr inbounds i8, i8* %74, i64 4, !dbg !4778
  store i8* %add.ptr93, i8** %rt1, align 8, !dbg !4778
  %75 = load i8*, i8** %rt2, align 8, !dbg !4779
  %add.ptr94 = getelementptr inbounds i8, i8* %75, i64 4, !dbg !4779
  store i8* %add.ptr94, i8** %rt2, align 8, !dbg !4779
  %76 = load i8*, i8** %rt, align 8, !dbg !4780
  %add.ptr95 = getelementptr inbounds i8, i8* %76, i64 4, !dbg !4780
  store i8* %add.ptr95, i8** %rt, align 8, !dbg !4780
  br label %while.cond49, !dbg !4731, !llvm.loop !4781

while.end96:                                      ; preds = %while.cond49
  br label %while.cond, !dbg !4666, !llvm.loop !4783

while.end97:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !4785
}

; Function Attrs: noinline nounwind uwtable
define internal void @build_gammatabs() #0 !dbg !4786 {
entry:
  %0 = load i8, i8* @gamma_tabs_init, align 1, !dbg !4789
  %conv = zext i8 %0 to i32, !dbg !4789
  %cmp = icmp eq i32 %conv, 0, !dbg !4791
  br i1 %cmp, label %if.then, label %if.end, !dbg !4792

if.then:                                          ; preds = %entry
  call void @gamtabs(float 2.000000e+00), !dbg !4793
  call void @makeGammaTables(float 2.000000e+00), !dbg !4795
  store i8 1, i8* @gamma_tabs_init, align 1, !dbg !4796
  br label %if.end, !dbg !4797

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4798
}

; Function Attrs: noinline nounwind uwtable
define internal void @gamtabs(float %gamma) #0 !dbg !4799 {
entry:
  %gamma.addr = alloca float, align 4
  %val = alloca float, align 4
  %igamma = alloca float, align 4
  %a = alloca i32, align 4
  store float %gamma, float* %gamma.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gamma.addr, metadata !4802, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.declare(metadata float* %val, metadata !4804, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.declare(metadata float* %igamma, metadata !4806, metadata !DIExpression()), !dbg !4807
  %0 = load float, float* %gamma.addr, align 4, !dbg !4808
  %div = fdiv float 1.000000e+00, %0, !dbg !4809
  store float %div, float* %igamma, align 4, !dbg !4807
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4810, metadata !DIExpression()), !dbg !4811
  store i32 0, i32* %a, align 4, !dbg !4812
  br label %for.cond, !dbg !4814

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !4815
  %cmp = icmp slt i32 %1, 65536, !dbg !4817
  br i1 %cmp, label %for.body, label %for.end, !dbg !4818

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %a, align 4, !dbg !4819
  %conv = sitofp i32 %2 to float, !dbg !4819
  store float %conv, float* %val, align 4, !dbg !4821
  %3 = load float, float* %val, align 4, !dbg !4822
  %div1 = fdiv float %3, 6.553500e+04, !dbg !4822
  store float %div1, float* %val, align 4, !dbg !4822
  %4 = load float, float* %gamma.addr, align 4, !dbg !4823
  %cmp2 = fcmp oeq float %4, 2.000000e+00, !dbg !4825
  br i1 %cmp2, label %if.then, label %if.else, !dbg !4826

if.then:                                          ; preds = %for.body
  %5 = load float, float* %val, align 4, !dbg !4827
  %call = call float @sqrtf(float %5) #6, !dbg !4828
  store float %call, float* %val, align 4, !dbg !4829
  br label %if.end8, !dbg !4830

if.else:                                          ; preds = %for.body
  %6 = load float, float* %gamma.addr, align 4, !dbg !4831
  %cmp4 = fcmp une float %6, 1.000000e+00, !dbg !4833
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !4834

if.then6:                                         ; preds = %if.else
  %7 = load float, float* %val, align 4, !dbg !4835
  %8 = load float, float* %igamma, align 4, !dbg !4836
  %call7 = call float @powf(float %7, float %8) #6, !dbg !4837
  store float %call7, float* %val, align 4, !dbg !4838
  br label %if.end, !dbg !4839

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %9 = load float, float* %val, align 4, !dbg !4840
  %mul = fmul float 0x40EFFFFFA0000000, %9, !dbg !4841
  %conv9 = fptoui float %mul to i16, !dbg !4842
  %10 = load i32, i32* %a, align 4, !dbg !4843
  %idxprom = sext i32 %10 to i64, !dbg !4844
  %arrayidx = getelementptr inbounds [65536 x i16], [65536 x i16]* @gamtab, i64 0, i64 %idxprom, !dbg !4844
  store i16 %conv9, i16* %arrayidx, align 2, !dbg !4845
  br label %for.inc, !dbg !4846

for.inc:                                          ; preds = %if.end8
  %11 = load i32, i32* %a, align 4, !dbg !4847
  %inc = add nsw i32 %11, 1, !dbg !4847
  store i32 %inc, i32* %a, align 4, !dbg !4847
  br label %for.cond, !dbg !4848, !llvm.loop !4849

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %a, align 4, !dbg !4851
  br label %for.cond10, !dbg !4853

for.cond10:                                       ; preds = %for.inc46, %for.end
  %12 = load i32, i32* %a, align 4, !dbg !4854
  %cmp11 = icmp sle i32 %12, 256, !dbg !4856
  br i1 %cmp11, label %for.body13, label %for.end48, !dbg !4857

for.body13:                                       ; preds = %for.cond10
  %13 = load float, float* %gamma.addr, align 4, !dbg !4858
  %cmp14 = fcmp oeq float %13, 2.000000e+00, !dbg !4861
  br i1 %cmp14, label %if.then16, label %if.else22, !dbg !4862

if.then16:                                        ; preds = %for.body13
  %14 = load i32, i32* %a, align 4, !dbg !4863
  %15 = load i32, i32* %a, align 4, !dbg !4864
  %mul17 = mul nsw i32 %14, %15, !dbg !4865
  %sub = sub nsw i32 %mul17, 1, !dbg !4866
  %conv18 = trunc i32 %sub to i16, !dbg !4863
  %16 = load i32, i32* %a, align 4, !dbg !4867
  %sub19 = sub nsw i32 %16, 1, !dbg !4868
  %idxprom20 = sext i32 %sub19 to i64, !dbg !4869
  %arrayidx21 = getelementptr inbounds [256 x i16], [256 x i16]* @igamtab1, i64 0, i64 %idxprom20, !dbg !4869
  store i16 %conv18, i16* %arrayidx21, align 2, !dbg !4870
  br label %if.end45, !dbg !4869

if.else22:                                        ; preds = %for.body13
  %17 = load float, float* %gamma.addr, align 4, !dbg !4871
  %cmp23 = fcmp oeq float %17, 1.000000e+00, !dbg !4873
  br i1 %cmp23, label %if.then25, label %if.else32, !dbg !4874

if.then25:                                        ; preds = %if.else22
  %18 = load i32, i32* %a, align 4, !dbg !4875
  %mul26 = mul nsw i32 256, %18, !dbg !4876
  %sub27 = sub nsw i32 %mul26, 1, !dbg !4877
  %conv28 = trunc i32 %sub27 to i16, !dbg !4878
  %19 = load i32, i32* %a, align 4, !dbg !4879
  %sub29 = sub nsw i32 %19, 1, !dbg !4880
  %idxprom30 = sext i32 %sub29 to i64, !dbg !4881
  %arrayidx31 = getelementptr inbounds [256 x i16], [256 x i16]* @igamtab1, i64 0, i64 %idxprom30, !dbg !4881
  store i16 %conv28, i16* %arrayidx31, align 2, !dbg !4882
  br label %if.end44, !dbg !4881

if.else32:                                        ; preds = %if.else22
  %20 = load i32, i32* %a, align 4, !dbg !4883
  %conv33 = sitofp i32 %20 to float, !dbg !4883
  %div34 = fdiv float %conv33, 2.560000e+02, !dbg !4885
  store float %div34, float* %val, align 4, !dbg !4886
  %21 = load float, float* %val, align 4, !dbg !4887
  %conv35 = fpext float %21 to double, !dbg !4887
  %22 = load float, float* %gamma.addr, align 4, !dbg !4888
  %conv36 = fpext float %22 to double, !dbg !4888
  %call37 = call double @pow(double %conv35, double %conv36) #6, !dbg !4889
  %mul38 = fmul double 6.553500e+04, %call37, !dbg !4890
  %sub39 = fsub double %mul38, 1.000000e+00, !dbg !4891
  %conv40 = fptoui double %sub39 to i16, !dbg !4892
  %23 = load i32, i32* %a, align 4, !dbg !4893
  %sub41 = sub nsw i32 %23, 1, !dbg !4894
  %idxprom42 = sext i32 %sub41 to i64, !dbg !4895
  %arrayidx43 = getelementptr inbounds [256 x i16], [256 x i16]* @igamtab1, i64 0, i64 %idxprom42, !dbg !4895
  store i16 %conv40, i16* %arrayidx43, align 2, !dbg !4896
  br label %if.end44

if.end44:                                         ; preds = %if.else32, %if.then25
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then16
  br label %for.inc46, !dbg !4897

for.inc46:                                        ; preds = %if.end45
  %24 = load i32, i32* %a, align 4, !dbg !4898
  %inc47 = add nsw i32 %24, 1, !dbg !4898
  store i32 %inc47, i32* %a, align 4, !dbg !4898
  br label %for.cond10, !dbg !4899, !llvm.loop !4900

for.end48:                                        ; preds = %for.cond10
  ret void, !dbg !4902
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeGammaTables(float %gamma) #0 !dbg !4903 {
entry:
  %gamma.addr = alloca float, align 4
  %i = alloca i32, align 4
  store float %gamma, float* %gamma.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gamma.addr, metadata !4904, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4906, metadata !DIExpression()), !dbg !4907
  %0 = load float, float* %gamma.addr, align 4, !dbg !4908
  store float %0, float* @valid_gamma, align 4, !dbg !4909
  %1 = load float, float* %gamma.addr, align 4, !dbg !4910
  %div = fdiv float 1.000000e+00, %1, !dbg !4911
  store float %div, float* @valid_inv_gamma, align 4, !dbg !4912
  store float 0x3F647AE140000000, float* @color_step, align 4, !dbg !4913
  store float 4.000000e+02, float* @inv_color_step, align 4, !dbg !4914
  store i32 0, i32* %i, align 4, !dbg !4915
  br label %for.cond, !dbg !4917

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !4918
  %cmp = icmp slt i32 %2, 400, !dbg !4920
  br i1 %cmp, label %for.body, label %for.end, !dbg !4921

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !4922
  %conv = sitofp i32 %3 to float, !dbg !4922
  %4 = load float, float* @color_step, align 4, !dbg !4924
  %mul = fmul float %conv, %4, !dbg !4925
  %5 = load i32, i32* %i, align 4, !dbg !4926
  %idxprom = sext i32 %5 to i64, !dbg !4927
  %arrayidx = getelementptr inbounds [401 x float], [401 x float]* @color_domain_table, i64 0, i64 %idxprom, !dbg !4927
  store float %mul, float* %arrayidx, align 4, !dbg !4928
  %6 = load i32, i32* %i, align 4, !dbg !4929
  %idxprom1 = sext i32 %6 to i64, !dbg !4930
  %arrayidx2 = getelementptr inbounds [401 x float], [401 x float]* @color_domain_table, i64 0, i64 %idxprom1, !dbg !4930
  %7 = load float, float* %arrayidx2, align 4, !dbg !4930
  %conv3 = fpext float %7 to double, !dbg !4930
  %8 = load float, float* @valid_gamma, align 4, !dbg !4931
  %conv4 = fpext float %8 to double, !dbg !4931
  %call = call double @pow(double %conv3, double %conv4) #6, !dbg !4932
  %conv5 = fptrunc double %call to float, !dbg !4932
  %9 = load i32, i32* %i, align 4, !dbg !4933
  %idxprom6 = sext i32 %9 to i64, !dbg !4934
  %arrayidx7 = getelementptr inbounds [401 x float], [401 x float]* @gamma_range_table, i64 0, i64 %idxprom6, !dbg !4934
  store float %conv5, float* %arrayidx7, align 4, !dbg !4935
  %10 = load i32, i32* %i, align 4, !dbg !4936
  %idxprom8 = sext i32 %10 to i64, !dbg !4937
  %arrayidx9 = getelementptr inbounds [401 x float], [401 x float]* @color_domain_table, i64 0, i64 %idxprom8, !dbg !4937
  %11 = load float, float* %arrayidx9, align 4, !dbg !4937
  %conv10 = fpext float %11 to double, !dbg !4937
  %12 = load float, float* @valid_inv_gamma, align 4, !dbg !4938
  %conv11 = fpext float %12 to double, !dbg !4938
  %call12 = call double @pow(double %conv10, double %conv11) #6, !dbg !4939
  %conv13 = fptrunc double %call12 to float, !dbg !4939
  %13 = load i32, i32* %i, align 4, !dbg !4940
  %idxprom14 = sext i32 %13 to i64, !dbg !4941
  %arrayidx15 = getelementptr inbounds [401 x float], [401 x float]* @inv_gamma_range_table, i64 0, i64 %idxprom14, !dbg !4941
  store float %conv13, float* %arrayidx15, align 4, !dbg !4942
  br label %for.inc, !dbg !4943

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !4944
  %inc = add nsw i32 %14, 1, !dbg !4944
  store i32 %inc, i32* %i, align 4, !dbg !4944
  br label %for.cond, !dbg !4945, !llvm.loop !4946

for.end:                                          ; preds = %for.cond
  store float 1.000000e+00, float* getelementptr inbounds ([401 x float], [401 x float]* @color_domain_table, i64 0, i64 400), align 16, !dbg !4948
  store float 1.000000e+00, float* getelementptr inbounds ([401 x float], [401 x float]* @gamma_range_table, i64 0, i64 400), align 16, !dbg !4949
  store float 1.000000e+00, float* getelementptr inbounds ([401 x float], [401 x float]* @inv_gamma_range_table, i64 0, i64 400), align 16, !dbg !4950
  store i32 0, i32* %i, align 4, !dbg !4951
  br label %for.cond16, !dbg !4953

for.cond16:                                       ; preds = %for.inc36, %for.end
  %15 = load i32, i32* %i, align 4, !dbg !4954
  %cmp17 = icmp slt i32 %15, 400, !dbg !4956
  br i1 %cmp17, label %for.body19, label %for.end38, !dbg !4957

for.body19:                                       ; preds = %for.cond16
  %16 = load float, float* @inv_color_step, align 4, !dbg !4958
  %17 = load i32, i32* %i, align 4, !dbg !4960
  %add = add nsw i32 %17, 1, !dbg !4961
  %idxprom20 = sext i32 %add to i64, !dbg !4962
  %arrayidx21 = getelementptr inbounds [401 x float], [401 x float]* @gamma_range_table, i64 0, i64 %idxprom20, !dbg !4962
  %18 = load float, float* %arrayidx21, align 4, !dbg !4962
  %19 = load i32, i32* %i, align 4, !dbg !4963
  %idxprom22 = sext i32 %19 to i64, !dbg !4964
  %arrayidx23 = getelementptr inbounds [401 x float], [401 x float]* @gamma_range_table, i64 0, i64 %idxprom22, !dbg !4964
  %20 = load float, float* %arrayidx23, align 4, !dbg !4964
  %sub = fsub float %18, %20, !dbg !4965
  %mul24 = fmul float %16, %sub, !dbg !4966
  %21 = load i32, i32* %i, align 4, !dbg !4967
  %idxprom25 = sext i32 %21 to i64, !dbg !4968
  %arrayidx26 = getelementptr inbounds [400 x float], [400 x float]* @gamfactor_table, i64 0, i64 %idxprom25, !dbg !4968
  store float %mul24, float* %arrayidx26, align 4, !dbg !4969
  %22 = load float, float* @inv_color_step, align 4, !dbg !4970
  %23 = load i32, i32* %i, align 4, !dbg !4971
  %add27 = add nsw i32 %23, 1, !dbg !4972
  %idxprom28 = sext i32 %add27 to i64, !dbg !4973
  %arrayidx29 = getelementptr inbounds [401 x float], [401 x float]* @inv_gamma_range_table, i64 0, i64 %idxprom28, !dbg !4973
  %24 = load float, float* %arrayidx29, align 4, !dbg !4973
  %25 = load i32, i32* %i, align 4, !dbg !4974
  %idxprom30 = sext i32 %25 to i64, !dbg !4975
  %arrayidx31 = getelementptr inbounds [401 x float], [401 x float]* @inv_gamma_range_table, i64 0, i64 %idxprom30, !dbg !4975
  %26 = load float, float* %arrayidx31, align 4, !dbg !4975
  %sub32 = fsub float %24, %26, !dbg !4976
  %mul33 = fmul float %22, %sub32, !dbg !4977
  %27 = load i32, i32* %i, align 4, !dbg !4978
  %idxprom34 = sext i32 %27 to i64, !dbg !4979
  %arrayidx35 = getelementptr inbounds [400 x float], [400 x float]* @inv_gamfactor_table, i64 0, i64 %idxprom34, !dbg !4979
  store float %mul33, float* %arrayidx35, align 4, !dbg !4980
  br label %for.inc36, !dbg !4981

for.inc36:                                        ; preds = %for.body19
  %28 = load i32, i32* %i, align 4, !dbg !4982
  %inc37 = add nsw i32 %28, 1, !dbg !4982
  store i32 %inc37, i32* %i, align 4, !dbg !4982
  br label %for.cond16, !dbg !4983, !llvm.loop !4984

for.end38:                                        ; preds = %for.cond16
  ret void, !dbg !4986
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #4

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

; Function Attrs: noinline nounwind uwtable
define internal void @do_gammacross_effect_float(float %facf0, float %UNUSED_facf1, i32 %x, i32 %y, float* %rect1, float* %rect2, float* %out) #0 !dbg !4987 {
entry:
  %facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  %xo = alloca i32, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %rt = alloca float*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !4988, metadata !DIExpression()), !dbg !4989
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !4990, metadata !DIExpression()), !dbg !4991
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4992, metadata !DIExpression()), !dbg !4993
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !4994, metadata !DIExpression()), !dbg !4995
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !4996, metadata !DIExpression()), !dbg !4997
  store float* %rect2, float** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2.addr, metadata !4998, metadata !DIExpression()), !dbg !4999
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !5000, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !5002, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !5004, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !5006, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !5008, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !5010, metadata !DIExpression()), !dbg !5011
  call void @llvm.dbg.declare(metadata float** %rt, metadata !5012, metadata !DIExpression()), !dbg !5013
  %0 = load i32, i32* %x.addr, align 4, !dbg !5014
  store i32 %0, i32* %xo, align 4, !dbg !5015
  %1 = load float*, float** %rect1.addr, align 8, !dbg !5016
  store float* %1, float** %rt1, align 8, !dbg !5017
  %2 = load float*, float** %rect2.addr, align 8, !dbg !5018
  store float* %2, float** %rt2, align 8, !dbg !5019
  %3 = load float*, float** %out.addr, align 8, !dbg !5020
  store float* %3, float** %rt, align 8, !dbg !5021
  %4 = load float, float* %facf0.addr, align 4, !dbg !5022
  store float %4, float* %fac2, align 4, !dbg !5023
  %5 = load float, float* %fac2, align 4, !dbg !5024
  %sub = fsub float 1.000000e+00, %5, !dbg !5025
  store float %sub, float* %fac1, align 4, !dbg !5026
  br label %while.cond, !dbg !5027

while.cond:                                       ; preds = %while.end26, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !5028
  %dec = add nsw i32 %6, -1, !dbg !5028
  store i32 %dec, i32* %y.addr, align 4, !dbg !5028
  %tobool = icmp ne i32 %6, 0, !dbg !5027
  br i1 %tobool, label %while.body, label %while.end27, !dbg !5027

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !5029
  %mul = mul nsw i32 %7, 4, !dbg !5031
  store i32 %mul, i32* %x.addr, align 4, !dbg !5032
  br label %while.cond1, !dbg !5033

while.cond1:                                      ; preds = %while.body4, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !5034
  %dec2 = add nsw i32 %8, -1, !dbg !5034
  store i32 %dec2, i32* %x.addr, align 4, !dbg !5034
  %tobool3 = icmp ne i32 %8, 0, !dbg !5033
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !5033

while.body4:                                      ; preds = %while.cond1
  %9 = load float, float* %fac1, align 4, !dbg !5035
  %10 = load float*, float** %rt1, align 8, !dbg !5037
  %11 = load float, float* %10, align 4, !dbg !5038
  %call = call float @invGammaCorrect(float %11), !dbg !5039
  %mul5 = fmul float %9, %call, !dbg !5040
  %12 = load float, float* %fac2, align 4, !dbg !5041
  %13 = load float*, float** %rt2, align 8, !dbg !5042
  %14 = load float, float* %13, align 4, !dbg !5043
  %call6 = call float @invGammaCorrect(float %14), !dbg !5044
  %mul7 = fmul float %12, %call6, !dbg !5045
  %add = fadd float %mul5, %mul7, !dbg !5046
  %call8 = call float @gammaCorrect(float %add), !dbg !5047
  %15 = load float*, float** %rt, align 8, !dbg !5048
  store float %call8, float* %15, align 4, !dbg !5049
  %16 = load float*, float** %rt1, align 8, !dbg !5050
  %incdec.ptr = getelementptr inbounds float, float* %16, i32 1, !dbg !5050
  store float* %incdec.ptr, float** %rt1, align 8, !dbg !5050
  %17 = load float*, float** %rt2, align 8, !dbg !5051
  %incdec.ptr9 = getelementptr inbounds float, float* %17, i32 1, !dbg !5051
  store float* %incdec.ptr9, float** %rt2, align 8, !dbg !5051
  %18 = load float*, float** %rt, align 8, !dbg !5052
  %incdec.ptr10 = getelementptr inbounds float, float* %18, i32 1, !dbg !5052
  store float* %incdec.ptr10, float** %rt, align 8, !dbg !5052
  br label %while.cond1, !dbg !5033, !llvm.loop !5053

while.end:                                        ; preds = %while.cond1
  %19 = load i32, i32* %y.addr, align 4, !dbg !5055
  %cmp = icmp eq i32 %19, 0, !dbg !5057
  br i1 %cmp, label %if.then, label %if.end, !dbg !5058

if.then:                                          ; preds = %while.end
  br label %while.end27, !dbg !5059

if.end:                                           ; preds = %while.end
  %20 = load i32, i32* %y.addr, align 4, !dbg !5060
  %dec11 = add nsw i32 %20, -1, !dbg !5060
  store i32 %dec11, i32* %y.addr, align 4, !dbg !5060
  %21 = load i32, i32* %xo, align 4, !dbg !5061
  %mul12 = mul nsw i32 %21, 4, !dbg !5062
  store i32 %mul12, i32* %x.addr, align 4, !dbg !5063
  br label %while.cond13, !dbg !5064

while.cond13:                                     ; preds = %while.body16, %if.end
  %22 = load i32, i32* %x.addr, align 4, !dbg !5065
  %dec14 = add nsw i32 %22, -1, !dbg !5065
  store i32 %dec14, i32* %x.addr, align 4, !dbg !5065
  %tobool15 = icmp ne i32 %22, 0, !dbg !5064
  br i1 %tobool15, label %while.body16, label %while.end26, !dbg !5064

while.body16:                                     ; preds = %while.cond13
  %23 = load float, float* %fac1, align 4, !dbg !5066
  %24 = load float*, float** %rt1, align 8, !dbg !5068
  %25 = load float, float* %24, align 4, !dbg !5069
  %call17 = call float @invGammaCorrect(float %25), !dbg !5070
  %mul18 = fmul float %23, %call17, !dbg !5071
  %26 = load float, float* %fac2, align 4, !dbg !5072
  %27 = load float*, float** %rt2, align 8, !dbg !5073
  %28 = load float, float* %27, align 4, !dbg !5074
  %call19 = call float @invGammaCorrect(float %28), !dbg !5075
  %mul20 = fmul float %26, %call19, !dbg !5076
  %add21 = fadd float %mul18, %mul20, !dbg !5077
  %call22 = call float @gammaCorrect(float %add21), !dbg !5078
  %29 = load float*, float** %rt, align 8, !dbg !5079
  store float %call22, float* %29, align 4, !dbg !5080
  %30 = load float*, float** %rt1, align 8, !dbg !5081
  %incdec.ptr23 = getelementptr inbounds float, float* %30, i32 1, !dbg !5081
  store float* %incdec.ptr23, float** %rt1, align 8, !dbg !5081
  %31 = load float*, float** %rt2, align 8, !dbg !5082
  %incdec.ptr24 = getelementptr inbounds float, float* %31, i32 1, !dbg !5082
  store float* %incdec.ptr24, float** %rt2, align 8, !dbg !5082
  %32 = load float*, float** %rt, align 8, !dbg !5083
  %incdec.ptr25 = getelementptr inbounds float, float* %32, i32 1, !dbg !5083
  store float* %incdec.ptr25, float** %rt, align 8, !dbg !5083
  br label %while.cond13, !dbg !5064, !llvm.loop !5084

while.end26:                                      ; preds = %while.cond13
  br label %while.cond, !dbg !5027, !llvm.loop !5086

while.end27:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !5088
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_gammacross_effect_byte(float %facf0, float %UNUSED_facf1, i32 %x, i32 %y, i8* %rect1, i8* %rect2, i8* %out) #0 !dbg !5089 {
entry:
  %facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  %xo = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %rt = alloca i8*, align 8
  %rt1 = alloca [4 x float], align 16
  %rt2 = alloca [4 x float], align 16
  %tempc = alloca [4 x float], align 16
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !5090, metadata !DIExpression()), !dbg !5091
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5094, metadata !DIExpression()), !dbg !5095
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5096, metadata !DIExpression()), !dbg !5097
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !5098, metadata !DIExpression()), !dbg !5099
  store i8* %rect2, i8** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2.addr, metadata !5100, metadata !DIExpression()), !dbg !5101
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !5104, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !5106, metadata !DIExpression()), !dbg !5107
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata i8** %rt, metadata !5114, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.declare(metadata [4 x float]* %rt1, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.dbg.declare(metadata [4 x float]* %rt2, metadata !5118, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.declare(metadata [4 x float]* %tempc, metadata !5120, metadata !DIExpression()), !dbg !5121
  %0 = load i32, i32* %x.addr, align 4, !dbg !5122
  store i32 %0, i32* %xo, align 4, !dbg !5123
  %1 = load i8*, i8** %rect1.addr, align 8, !dbg !5124
  store i8* %1, i8** %cp1, align 8, !dbg !5125
  %2 = load i8*, i8** %rect2.addr, align 8, !dbg !5126
  store i8* %2, i8** %cp2, align 8, !dbg !5127
  %3 = load i8*, i8** %out.addr, align 8, !dbg !5128
  store i8* %3, i8** %rt, align 8, !dbg !5129
  %4 = load float, float* %facf0.addr, align 4, !dbg !5130
  store float %4, float* %fac2, align 4, !dbg !5131
  %5 = load float, float* %fac2, align 4, !dbg !5132
  %sub = fsub float 1.000000e+00, %5, !dbg !5133
  store float %sub, float* %fac1, align 4, !dbg !5134
  br label %while.cond, !dbg !5135

while.cond:                                       ; preds = %while.end88, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !5136
  %dec = add nsw i32 %6, -1, !dbg !5136
  store i32 %dec, i32* %y.addr, align 4, !dbg !5136
  %tobool = icmp ne i32 %6, 0, !dbg !5135
  br i1 %tobool, label %while.body, label %while.end89, !dbg !5135

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !5137
  store i32 %7, i32* %x.addr, align 4, !dbg !5139
  br label %while.cond1, !dbg !5140

while.cond1:                                      ; preds = %while.body4, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !5141
  %dec2 = add nsw i32 %8, -1, !dbg !5141
  store i32 %dec2, i32* %x.addr, align 4, !dbg !5141
  %tobool3 = icmp ne i32 %8, 0, !dbg !5140
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !5140

while.body4:                                      ; preds = %while.cond1
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !5142
  %9 = load i8*, i8** %cp1, align 8, !dbg !5144
  call void @straight_uchar_to_premul_float(float* %arraydecay, i8* %9), !dbg !5145
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !5146
  %10 = load i8*, i8** %cp2, align 8, !dbg !5147
  call void @straight_uchar_to_premul_float(float* %arraydecay5, i8* %10), !dbg !5148
  %11 = load float, float* %fac1, align 4, !dbg !5149
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !5150
  %12 = load float, float* %arrayidx, align 16, !dbg !5150
  %call = call float @invGammaCorrect(float %12), !dbg !5151
  %mul = fmul float %11, %call, !dbg !5152
  %13 = load float, float* %fac2, align 4, !dbg !5153
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !5154
  %14 = load float, float* %arrayidx6, align 16, !dbg !5154
  %call7 = call float @invGammaCorrect(float %14), !dbg !5155
  %mul8 = fmul float %13, %call7, !dbg !5156
  %add = fadd float %mul, %mul8, !dbg !5157
  %call9 = call float @gammaCorrect(float %add), !dbg !5158
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !5159
  store float %call9, float* %arrayidx10, align 16, !dbg !5160
  %15 = load float, float* %fac1, align 4, !dbg !5161
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 1, !dbg !5162
  %16 = load float, float* %arrayidx11, align 4, !dbg !5162
  %call12 = call float @invGammaCorrect(float %16), !dbg !5163
  %mul13 = fmul float %15, %call12, !dbg !5164
  %17 = load float, float* %fac2, align 4, !dbg !5165
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 1, !dbg !5166
  %18 = load float, float* %arrayidx14, align 4, !dbg !5166
  %call15 = call float @invGammaCorrect(float %18), !dbg !5167
  %mul16 = fmul float %17, %call15, !dbg !5168
  %add17 = fadd float %mul13, %mul16, !dbg !5169
  %call18 = call float @gammaCorrect(float %add17), !dbg !5170
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 1, !dbg !5171
  store float %call18, float* %arrayidx19, align 4, !dbg !5172
  %19 = load float, float* %fac1, align 4, !dbg !5173
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 2, !dbg !5174
  %20 = load float, float* %arrayidx20, align 8, !dbg !5174
  %call21 = call float @invGammaCorrect(float %20), !dbg !5175
  %mul22 = fmul float %19, %call21, !dbg !5176
  %21 = load float, float* %fac2, align 4, !dbg !5177
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 2, !dbg !5178
  %22 = load float, float* %arrayidx23, align 8, !dbg !5178
  %call24 = call float @invGammaCorrect(float %22), !dbg !5179
  %mul25 = fmul float %21, %call24, !dbg !5180
  %add26 = fadd float %mul22, %mul25, !dbg !5181
  %call27 = call float @gammaCorrect(float %add26), !dbg !5182
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 2, !dbg !5183
  store float %call27, float* %arrayidx28, align 8, !dbg !5184
  %23 = load float, float* %fac1, align 4, !dbg !5185
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !5186
  %24 = load float, float* %arrayidx29, align 4, !dbg !5186
  %call30 = call float @invGammaCorrect(float %24), !dbg !5187
  %mul31 = fmul float %23, %call30, !dbg !5188
  %25 = load float, float* %fac2, align 4, !dbg !5189
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !5190
  %26 = load float, float* %arrayidx32, align 4, !dbg !5190
  %call33 = call float @invGammaCorrect(float %26), !dbg !5191
  %mul34 = fmul float %25, %call33, !dbg !5192
  %add35 = fadd float %mul31, %mul34, !dbg !5193
  %call36 = call float @gammaCorrect(float %add35), !dbg !5194
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 3, !dbg !5195
  store float %call36, float* %arrayidx37, align 4, !dbg !5196
  %27 = load i8*, i8** %rt, align 8, !dbg !5197
  %arraydecay38 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !5198
  call void @premul_float_to_straight_uchar(i8* %27, float* %arraydecay38), !dbg !5199
  %28 = load i8*, i8** %cp1, align 8, !dbg !5200
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 4, !dbg !5200
  store i8* %add.ptr, i8** %cp1, align 8, !dbg !5200
  %29 = load i8*, i8** %cp2, align 8, !dbg !5201
  %add.ptr39 = getelementptr inbounds i8, i8* %29, i64 4, !dbg !5201
  store i8* %add.ptr39, i8** %cp2, align 8, !dbg !5201
  %30 = load i8*, i8** %rt, align 8, !dbg !5202
  %add.ptr40 = getelementptr inbounds i8, i8* %30, i64 4, !dbg !5202
  store i8* %add.ptr40, i8** %rt, align 8, !dbg !5202
  br label %while.cond1, !dbg !5140, !llvm.loop !5203

while.end:                                        ; preds = %while.cond1
  %31 = load i32, i32* %y.addr, align 4, !dbg !5205
  %cmp = icmp eq i32 %31, 0, !dbg !5207
  br i1 %cmp, label %if.then, label %if.end, !dbg !5208

if.then:                                          ; preds = %while.end
  br label %while.end89, !dbg !5209

if.end:                                           ; preds = %while.end
  %32 = load i32, i32* %y.addr, align 4, !dbg !5210
  %dec41 = add nsw i32 %32, -1, !dbg !5210
  store i32 %dec41, i32* %y.addr, align 4, !dbg !5210
  %33 = load i32, i32* %xo, align 4, !dbg !5211
  store i32 %33, i32* %x.addr, align 4, !dbg !5212
  br label %while.cond42, !dbg !5213

while.cond42:                                     ; preds = %while.body45, %if.end
  %34 = load i32, i32* %x.addr, align 4, !dbg !5214
  %dec43 = add nsw i32 %34, -1, !dbg !5214
  store i32 %dec43, i32* %x.addr, align 4, !dbg !5214
  %tobool44 = icmp ne i32 %34, 0, !dbg !5213
  br i1 %tobool44, label %while.body45, label %while.end88, !dbg !5213

while.body45:                                     ; preds = %while.cond42
  %arraydecay46 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !5215
  %35 = load i8*, i8** %cp1, align 8, !dbg !5217
  call void @straight_uchar_to_premul_float(float* %arraydecay46, i8* %35), !dbg !5218
  %arraydecay47 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !5219
  %36 = load i8*, i8** %cp2, align 8, !dbg !5220
  call void @straight_uchar_to_premul_float(float* %arraydecay47, i8* %36), !dbg !5221
  %37 = load float, float* %fac1, align 4, !dbg !5222
  %arrayidx48 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !5223
  %38 = load float, float* %arrayidx48, align 16, !dbg !5223
  %call49 = call float @invGammaCorrect(float %38), !dbg !5224
  %mul50 = fmul float %37, %call49, !dbg !5225
  %39 = load float, float* %fac2, align 4, !dbg !5226
  %arrayidx51 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !5227
  %40 = load float, float* %arrayidx51, align 16, !dbg !5227
  %call52 = call float @invGammaCorrect(float %40), !dbg !5228
  %mul53 = fmul float %39, %call52, !dbg !5229
  %add54 = fadd float %mul50, %mul53, !dbg !5230
  %call55 = call float @gammaCorrect(float %add54), !dbg !5231
  %arrayidx56 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !5232
  store float %call55, float* %arrayidx56, align 16, !dbg !5233
  %41 = load float, float* %fac1, align 4, !dbg !5234
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 1, !dbg !5235
  %42 = load float, float* %arrayidx57, align 4, !dbg !5235
  %call58 = call float @invGammaCorrect(float %42), !dbg !5236
  %mul59 = fmul float %41, %call58, !dbg !5237
  %43 = load float, float* %fac2, align 4, !dbg !5238
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 1, !dbg !5239
  %44 = load float, float* %arrayidx60, align 4, !dbg !5239
  %call61 = call float @invGammaCorrect(float %44), !dbg !5240
  %mul62 = fmul float %43, %call61, !dbg !5241
  %add63 = fadd float %mul59, %mul62, !dbg !5242
  %call64 = call float @gammaCorrect(float %add63), !dbg !5243
  %arrayidx65 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 1, !dbg !5244
  store float %call64, float* %arrayidx65, align 4, !dbg !5245
  %45 = load float, float* %fac1, align 4, !dbg !5246
  %arrayidx66 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 2, !dbg !5247
  %46 = load float, float* %arrayidx66, align 8, !dbg !5247
  %call67 = call float @invGammaCorrect(float %46), !dbg !5248
  %mul68 = fmul float %45, %call67, !dbg !5249
  %47 = load float, float* %fac2, align 4, !dbg !5250
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 2, !dbg !5251
  %48 = load float, float* %arrayidx69, align 8, !dbg !5251
  %call70 = call float @invGammaCorrect(float %48), !dbg !5252
  %mul71 = fmul float %47, %call70, !dbg !5253
  %add72 = fadd float %mul68, %mul71, !dbg !5254
  %call73 = call float @gammaCorrect(float %add72), !dbg !5255
  %arrayidx74 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 2, !dbg !5256
  store float %call73, float* %arrayidx74, align 8, !dbg !5257
  %49 = load float, float* %fac1, align 4, !dbg !5258
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !5259
  %50 = load float, float* %arrayidx75, align 4, !dbg !5259
  %call76 = call float @invGammaCorrect(float %50), !dbg !5260
  %mul77 = fmul float %49, %call76, !dbg !5261
  %51 = load float, float* %fac2, align 4, !dbg !5262
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !5263
  %52 = load float, float* %arrayidx78, align 4, !dbg !5263
  %call79 = call float @invGammaCorrect(float %52), !dbg !5264
  %mul80 = fmul float %51, %call79, !dbg !5265
  %add81 = fadd float %mul77, %mul80, !dbg !5266
  %call82 = call float @gammaCorrect(float %add81), !dbg !5267
  %arrayidx83 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 3, !dbg !5268
  store float %call82, float* %arrayidx83, align 4, !dbg !5269
  %53 = load i8*, i8** %rt, align 8, !dbg !5270
  %arraydecay84 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !5271
  call void @premul_float_to_straight_uchar(i8* %53, float* %arraydecay84), !dbg !5272
  %54 = load i8*, i8** %cp1, align 8, !dbg !5273
  %add.ptr85 = getelementptr inbounds i8, i8* %54, i64 4, !dbg !5273
  store i8* %add.ptr85, i8** %cp1, align 8, !dbg !5273
  %55 = load i8*, i8** %cp2, align 8, !dbg !5274
  %add.ptr86 = getelementptr inbounds i8, i8* %55, i64 4, !dbg !5274
  store i8* %add.ptr86, i8** %cp2, align 8, !dbg !5274
  %56 = load i8*, i8** %rt, align 8, !dbg !5275
  %add.ptr87 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !5275
  store i8* %add.ptr87, i8** %rt, align 8, !dbg !5275
  br label %while.cond42, !dbg !5213, !llvm.loop !5276

while.end88:                                      ; preds = %while.cond42
  br label %while.cond, !dbg !5135, !llvm.loop !5278

while.end89:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !5280
}

; Function Attrs: noinline nounwind uwtable
define internal float @gammaCorrect(float %c) #0 !dbg !5281 {
entry:
  %c.addr = alloca float, align 4
  %i = alloca i32, align 4
  %res = alloca float, align 4
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !5284, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5286, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.declare(metadata float* %res, metadata !5288, metadata !DIExpression()), !dbg !5289
  %0 = load float, float* %c.addr, align 4, !dbg !5290
  %1 = load float, float* @inv_color_step, align 4, !dbg !5291
  %mul = fmul float %0, %1, !dbg !5292
  %2 = call float @llvm.floor.f32(float %mul), !dbg !5293
  %conv = fptosi float %2 to i32, !dbg !5293
  store i32 %conv, i32* %i, align 4, !dbg !5294
  %3 = load i32, i32* %i, align 4, !dbg !5295
  %cmp = icmp slt i32 %3, 0, !dbg !5295
  br i1 %cmp, label %if.then, label %if.else, !dbg !5297

if.then:                                          ; preds = %entry
  %4 = load float, float* %c.addr, align 4, !dbg !5298
  %fneg = fneg float %4, !dbg !5299
  %5 = load float, float* @valid_gamma, align 4, !dbg !5300
  %call = call float @powf(float %fneg, float %5) #6, !dbg !5301
  %fneg2 = fneg float %call, !dbg !5302
  store float %fneg2, float* %res, align 4, !dbg !5303
  br label %if.end13, !dbg !5304

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %i, align 4, !dbg !5305
  %cmp3 = icmp sge i32 %6, 400, !dbg !5307
  br i1 %cmp3, label %if.then5, label %if.else7, !dbg !5308

if.then5:                                         ; preds = %if.else
  %7 = load float, float* %c.addr, align 4, !dbg !5309
  %8 = load float, float* @valid_gamma, align 4, !dbg !5310
  %call6 = call float @powf(float %7, float %8) #6, !dbg !5311
  store float %call6, float* %res, align 4, !dbg !5312
  br label %if.end, !dbg !5313

if.else7:                                         ; preds = %if.else
  %9 = load i32, i32* %i, align 4, !dbg !5314
  %idxprom = sext i32 %9 to i64, !dbg !5315
  %arrayidx = getelementptr inbounds [401 x float], [401 x float]* @gamma_range_table, i64 0, i64 %idxprom, !dbg !5315
  %10 = load float, float* %arrayidx, align 4, !dbg !5315
  %11 = load float, float* %c.addr, align 4, !dbg !5316
  %12 = load i32, i32* %i, align 4, !dbg !5317
  %idxprom8 = sext i32 %12 to i64, !dbg !5318
  %arrayidx9 = getelementptr inbounds [401 x float], [401 x float]* @color_domain_table, i64 0, i64 %idxprom8, !dbg !5318
  %13 = load float, float* %arrayidx9, align 4, !dbg !5318
  %sub = fsub float %11, %13, !dbg !5319
  %14 = load i32, i32* %i, align 4, !dbg !5320
  %idxprom10 = sext i32 %14 to i64, !dbg !5321
  %arrayidx11 = getelementptr inbounds [400 x float], [400 x float]* @gamfactor_table, i64 0, i64 %idxprom10, !dbg !5321
  %15 = load float, float* %arrayidx11, align 4, !dbg !5321
  %mul12 = fmul float %sub, %15, !dbg !5322
  %add = fadd float %10, %mul12, !dbg !5323
  store float %add, float* %res, align 4, !dbg !5324
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then5
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %16 = load float, float* %res, align 4, !dbg !5325
  ret float %16, !dbg !5326
}

; Function Attrs: noinline nounwind uwtable
define internal float @invGammaCorrect(float %c) #0 !dbg !5327 {
entry:
  %c.addr = alloca float, align 4
  %i = alloca i32, align 4
  %res = alloca float, align 4
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5330, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.declare(metadata float* %res, metadata !5332, metadata !DIExpression()), !dbg !5333
  store float 0.000000e+00, float* %res, align 4, !dbg !5333
  %0 = load float, float* %c.addr, align 4, !dbg !5334
  %1 = load float, float* @inv_color_step, align 4, !dbg !5335
  %mul = fmul float %0, %1, !dbg !5336
  %2 = call float @llvm.floor.f32(float %mul), !dbg !5337
  %conv = fptosi float %2 to i32, !dbg !5337
  store i32 %conv, i32* %i, align 4, !dbg !5338
  %3 = load i32, i32* %i, align 4, !dbg !5339
  %cmp = icmp slt i32 %3, 0, !dbg !5339
  br i1 %cmp, label %if.then, label %if.else, !dbg !5341

if.then:                                          ; preds = %entry
  %4 = load float, float* %c.addr, align 4, !dbg !5342
  %fneg = fneg float %4, !dbg !5343
  %5 = load float, float* @valid_inv_gamma, align 4, !dbg !5344
  %call = call float @powf(float %fneg, float %5) #6, !dbg !5345
  %fneg2 = fneg float %call, !dbg !5346
  store float %fneg2, float* %res, align 4, !dbg !5347
  br label %if.end13, !dbg !5348

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %i, align 4, !dbg !5349
  %cmp3 = icmp sge i32 %6, 400, !dbg !5351
  br i1 %cmp3, label %if.then5, label %if.else7, !dbg !5352

if.then5:                                         ; preds = %if.else
  %7 = load float, float* %c.addr, align 4, !dbg !5353
  %8 = load float, float* @valid_inv_gamma, align 4, !dbg !5354
  %call6 = call float @powf(float %7, float %8) #6, !dbg !5355
  store float %call6, float* %res, align 4, !dbg !5356
  br label %if.end, !dbg !5357

if.else7:                                         ; preds = %if.else
  %9 = load i32, i32* %i, align 4, !dbg !5358
  %idxprom = sext i32 %9 to i64, !dbg !5359
  %arrayidx = getelementptr inbounds [401 x float], [401 x float]* @inv_gamma_range_table, i64 0, i64 %idxprom, !dbg !5359
  %10 = load float, float* %arrayidx, align 4, !dbg !5359
  %11 = load float, float* %c.addr, align 4, !dbg !5360
  %12 = load i32, i32* %i, align 4, !dbg !5361
  %idxprom8 = sext i32 %12 to i64, !dbg !5362
  %arrayidx9 = getelementptr inbounds [401 x float], [401 x float]* @color_domain_table, i64 0, i64 %idxprom8, !dbg !5362
  %13 = load float, float* %arrayidx9, align 4, !dbg !5362
  %sub = fsub float %11, %13, !dbg !5363
  %14 = load i32, i32* %i, align 4, !dbg !5364
  %idxprom10 = sext i32 %14 to i64, !dbg !5365
  %arrayidx11 = getelementptr inbounds [400 x float], [400 x float]* @inv_gamfactor_table, i64 0, i64 %idxprom10, !dbg !5365
  %15 = load float, float* %arrayidx11, align 4, !dbg !5365
  %mul12 = fmul float %sub, %15, !dbg !5366
  %add = fadd float %10, %mul12, !dbg !5367
  store float %add, float* %res, align 4, !dbg !5368
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then5
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %16 = load float, float* %res, align 4, !dbg !5369
  ret float %16, !dbg !5370
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @straight_uchar_to_premul_float(float* %result, i8* %color) #0 !dbg !5371 {
entry:
  %result.addr = alloca float*, align 8
  %color.addr = alloca i8*, align 8
  %alpha = alloca float, align 4
  %fac = alloca float, align 4
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !5377, metadata !DIExpression()), !dbg !5378
  store i8* %color, i8** %color.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %color.addr, metadata !5379, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !5381, metadata !DIExpression()), !dbg !5383
  %0 = load i8*, i8** %color.addr, align 8, !dbg !5384
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 3, !dbg !5384
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5384
  %conv = zext i8 %1 to i32, !dbg !5384
  %conv1 = sitofp i32 %conv to float, !dbg !5384
  %mul = fmul float %conv1, 0x3F70101020000000, !dbg !5385
  store float %mul, float* %alpha, align 4, !dbg !5383
  call void @llvm.dbg.declare(metadata float* %fac, metadata !5386, metadata !DIExpression()), !dbg !5387
  %2 = load float, float* %alpha, align 4, !dbg !5388
  %mul2 = fmul float %2, 0x3F70101020000000, !dbg !5389
  store float %mul2, float* %fac, align 4, !dbg !5387
  %3 = load i8*, i8** %color.addr, align 8, !dbg !5390
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !5390
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !5390
  %conv4 = zext i8 %4 to i32, !dbg !5390
  %conv5 = sitofp i32 %conv4 to float, !dbg !5390
  %5 = load float, float* %fac, align 4, !dbg !5391
  %mul6 = fmul float %conv5, %5, !dbg !5392
  %6 = load float*, float** %result.addr, align 8, !dbg !5393
  %arrayidx7 = getelementptr inbounds float, float* %6, i64 0, !dbg !5393
  store float %mul6, float* %arrayidx7, align 4, !dbg !5394
  %7 = load i8*, i8** %color.addr, align 8, !dbg !5395
  %arrayidx8 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !5395
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !5395
  %conv9 = zext i8 %8 to i32, !dbg !5395
  %conv10 = sitofp i32 %conv9 to float, !dbg !5395
  %9 = load float, float* %fac, align 4, !dbg !5396
  %mul11 = fmul float %conv10, %9, !dbg !5397
  %10 = load float*, float** %result.addr, align 8, !dbg !5398
  %arrayidx12 = getelementptr inbounds float, float* %10, i64 1, !dbg !5398
  store float %mul11, float* %arrayidx12, align 4, !dbg !5399
  %11 = load i8*, i8** %color.addr, align 8, !dbg !5400
  %arrayidx13 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !5400
  %12 = load i8, i8* %arrayidx13, align 1, !dbg !5400
  %conv14 = zext i8 %12 to i32, !dbg !5400
  %conv15 = sitofp i32 %conv14 to float, !dbg !5400
  %13 = load float, float* %fac, align 4, !dbg !5401
  %mul16 = fmul float %conv15, %13, !dbg !5402
  %14 = load float*, float** %result.addr, align 8, !dbg !5403
  %arrayidx17 = getelementptr inbounds float, float* %14, i64 2, !dbg !5403
  store float %mul16, float* %arrayidx17, align 4, !dbg !5404
  %15 = load float, float* %alpha, align 4, !dbg !5405
  %16 = load float*, float** %result.addr, align 8, !dbg !5406
  %arrayidx18 = getelementptr inbounds float, float* %16, i64 3, !dbg !5406
  store float %15, float* %arrayidx18, align 4, !dbg !5407
  ret void, !dbg !5408
}

; Function Attrs: noinline nounwind uwtable
define internal void @premul_float_to_straight_uchar(i8* %result, float* %color) #0 !dbg !5409 {
entry:
  %result.addr = alloca i8*, align 8
  %color.addr = alloca float*, align 8
  %alpha_inv = alloca float, align 4
  store i8* %result, i8** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %result.addr, metadata !5413, metadata !DIExpression()), !dbg !5414
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  %0 = load float*, float** %color.addr, align 8, !dbg !5417
  %arrayidx = getelementptr inbounds float, float* %0, i64 3, !dbg !5417
  %1 = load float, float* %arrayidx, align 4, !dbg !5417
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !5419
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5420

lor.lhs.false:                                    ; preds = %entry
  %2 = load float*, float** %color.addr, align 8, !dbg !5421
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 3, !dbg !5421
  %3 = load float, float* %arrayidx1, align 4, !dbg !5421
  %cmp2 = fcmp oeq float %3, 1.000000e+00, !dbg !5422
  br i1 %cmp2, label %if.then, label %if.else, !dbg !5423

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load float*, float** %color.addr, align 8, !dbg !5424
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !5424
  %5 = load float, float* %arrayidx3, align 4, !dbg !5424
  %cmp4 = fcmp ole float %5, 0.000000e+00, !dbg !5424
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !5424

cond.true:                                        ; preds = %if.then
  br label %cond.end10, !dbg !5424

cond.false:                                       ; preds = %if.then
  %6 = load float*, float** %color.addr, align 8, !dbg !5424
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 0, !dbg !5424
  %7 = load float, float* %arrayidx5, align 4, !dbg !5424
  %cmp6 = fcmp ogt float %7, 0x3FEFEFEFE0000000, !dbg !5424
  br i1 %cmp6, label %cond.true7, label %cond.false8, !dbg !5424

cond.true7:                                       ; preds = %cond.false
  br label %cond.end, !dbg !5424

cond.false8:                                      ; preds = %cond.false
  %8 = load float*, float** %color.addr, align 8, !dbg !5424
  %arrayidx9 = getelementptr inbounds float, float* %8, i64 0, !dbg !5424
  %9 = load float, float* %arrayidx9, align 4, !dbg !5424
  %mul = fmul float 2.550000e+02, %9, !dbg !5424
  %add = fadd float %mul, 5.000000e-01, !dbg !5424
  br label %cond.end, !dbg !5424

cond.end:                                         ; preds = %cond.false8, %cond.true7
  %cond = phi float [ 2.550000e+02, %cond.true7 ], [ %add, %cond.false8 ], !dbg !5424
  br label %cond.end10, !dbg !5424

cond.end10:                                       ; preds = %cond.end, %cond.true
  %cond11 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !5424
  %conv = fptoui float %cond11 to i8, !dbg !5424
  %10 = load i8*, i8** %result.addr, align 8, !dbg !5426
  %arrayidx12 = getelementptr inbounds i8, i8* %10, i64 0, !dbg !5426
  store i8 %conv, i8* %arrayidx12, align 1, !dbg !5427
  %11 = load float*, float** %color.addr, align 8, !dbg !5428
  %arrayidx13 = getelementptr inbounds float, float* %11, i64 1, !dbg !5428
  %12 = load float, float* %arrayidx13, align 4, !dbg !5428
  %cmp14 = fcmp ole float %12, 0.000000e+00, !dbg !5428
  br i1 %cmp14, label %cond.true16, label %cond.false17, !dbg !5428

cond.true16:                                      ; preds = %cond.end10
  br label %cond.end28, !dbg !5428

cond.false17:                                     ; preds = %cond.end10
  %13 = load float*, float** %color.addr, align 8, !dbg !5428
  %arrayidx18 = getelementptr inbounds float, float* %13, i64 1, !dbg !5428
  %14 = load float, float* %arrayidx18, align 4, !dbg !5428
  %cmp19 = fcmp ogt float %14, 0x3FEFEFEFE0000000, !dbg !5428
  br i1 %cmp19, label %cond.true21, label %cond.false22, !dbg !5428

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end26, !dbg !5428

cond.false22:                                     ; preds = %cond.false17
  %15 = load float*, float** %color.addr, align 8, !dbg !5428
  %arrayidx23 = getelementptr inbounds float, float* %15, i64 1, !dbg !5428
  %16 = load float, float* %arrayidx23, align 4, !dbg !5428
  %mul24 = fmul float 2.550000e+02, %16, !dbg !5428
  %add25 = fadd float %mul24, 5.000000e-01, !dbg !5428
  br label %cond.end26, !dbg !5428

cond.end26:                                       ; preds = %cond.false22, %cond.true21
  %cond27 = phi float [ 2.550000e+02, %cond.true21 ], [ %add25, %cond.false22 ], !dbg !5428
  br label %cond.end28, !dbg !5428

cond.end28:                                       ; preds = %cond.end26, %cond.true16
  %cond29 = phi float [ 0.000000e+00, %cond.true16 ], [ %cond27, %cond.end26 ], !dbg !5428
  %conv30 = fptoui float %cond29 to i8, !dbg !5428
  %17 = load i8*, i8** %result.addr, align 8, !dbg !5429
  %arrayidx31 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !5429
  store i8 %conv30, i8* %arrayidx31, align 1, !dbg !5430
  %18 = load float*, float** %color.addr, align 8, !dbg !5431
  %arrayidx32 = getelementptr inbounds float, float* %18, i64 2, !dbg !5431
  %19 = load float, float* %arrayidx32, align 4, !dbg !5431
  %cmp33 = fcmp ole float %19, 0.000000e+00, !dbg !5431
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !5431

cond.true35:                                      ; preds = %cond.end28
  br label %cond.end47, !dbg !5431

cond.false36:                                     ; preds = %cond.end28
  %20 = load float*, float** %color.addr, align 8, !dbg !5431
  %arrayidx37 = getelementptr inbounds float, float* %20, i64 2, !dbg !5431
  %21 = load float, float* %arrayidx37, align 4, !dbg !5431
  %cmp38 = fcmp ogt float %21, 0x3FEFEFEFE0000000, !dbg !5431
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !5431

cond.true40:                                      ; preds = %cond.false36
  br label %cond.end45, !dbg !5431

cond.false41:                                     ; preds = %cond.false36
  %22 = load float*, float** %color.addr, align 8, !dbg !5431
  %arrayidx42 = getelementptr inbounds float, float* %22, i64 2, !dbg !5431
  %23 = load float, float* %arrayidx42, align 4, !dbg !5431
  %mul43 = fmul float 2.550000e+02, %23, !dbg !5431
  %add44 = fadd float %mul43, 5.000000e-01, !dbg !5431
  br label %cond.end45, !dbg !5431

cond.end45:                                       ; preds = %cond.false41, %cond.true40
  %cond46 = phi float [ 2.550000e+02, %cond.true40 ], [ %add44, %cond.false41 ], !dbg !5431
  br label %cond.end47, !dbg !5431

cond.end47:                                       ; preds = %cond.end45, %cond.true35
  %cond48 = phi float [ 0.000000e+00, %cond.true35 ], [ %cond46, %cond.end45 ], !dbg !5431
  %conv49 = fptoui float %cond48 to i8, !dbg !5431
  %24 = load i8*, i8** %result.addr, align 8, !dbg !5432
  %arrayidx50 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !5432
  store i8 %conv49, i8* %arrayidx50, align 1, !dbg !5433
  %25 = load float*, float** %color.addr, align 8, !dbg !5434
  %arrayidx51 = getelementptr inbounds float, float* %25, i64 3, !dbg !5434
  %26 = load float, float* %arrayidx51, align 4, !dbg !5434
  %cmp52 = fcmp ole float %26, 0.000000e+00, !dbg !5434
  br i1 %cmp52, label %cond.true54, label %cond.false55, !dbg !5434

cond.true54:                                      ; preds = %cond.end47
  br label %cond.end66, !dbg !5434

cond.false55:                                     ; preds = %cond.end47
  %27 = load float*, float** %color.addr, align 8, !dbg !5434
  %arrayidx56 = getelementptr inbounds float, float* %27, i64 3, !dbg !5434
  %28 = load float, float* %arrayidx56, align 4, !dbg !5434
  %cmp57 = fcmp ogt float %28, 0x3FEFEFEFE0000000, !dbg !5434
  br i1 %cmp57, label %cond.true59, label %cond.false60, !dbg !5434

cond.true59:                                      ; preds = %cond.false55
  br label %cond.end64, !dbg !5434

cond.false60:                                     ; preds = %cond.false55
  %29 = load float*, float** %color.addr, align 8, !dbg !5434
  %arrayidx61 = getelementptr inbounds float, float* %29, i64 3, !dbg !5434
  %30 = load float, float* %arrayidx61, align 4, !dbg !5434
  %mul62 = fmul float 2.550000e+02, %30, !dbg !5434
  %add63 = fadd float %mul62, 5.000000e-01, !dbg !5434
  br label %cond.end64, !dbg !5434

cond.end64:                                       ; preds = %cond.false60, %cond.true59
  %cond65 = phi float [ 2.550000e+02, %cond.true59 ], [ %add63, %cond.false60 ], !dbg !5434
  br label %cond.end66, !dbg !5434

cond.end66:                                       ; preds = %cond.end64, %cond.true54
  %cond67 = phi float [ 0.000000e+00, %cond.true54 ], [ %cond65, %cond.end64 ], !dbg !5434
  %conv68 = fptoui float %cond67 to i8, !dbg !5434
  %31 = load i8*, i8** %result.addr, align 8, !dbg !5435
  %arrayidx69 = getelementptr inbounds i8, i8* %31, i64 3, !dbg !5435
  store i8 %conv68, i8* %arrayidx69, align 1, !dbg !5436
  br label %if.end, !dbg !5437

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata float* %alpha_inv, metadata !5438, metadata !DIExpression()), !dbg !5440
  %32 = load float*, float** %color.addr, align 8, !dbg !5441
  %arrayidx70 = getelementptr inbounds float, float* %32, i64 3, !dbg !5441
  %33 = load float, float* %arrayidx70, align 4, !dbg !5441
  %div = fdiv float 1.000000e+00, %33, !dbg !5442
  store float %div, float* %alpha_inv, align 4, !dbg !5440
  %34 = load float*, float** %color.addr, align 8, !dbg !5443
  %arrayidx71 = getelementptr inbounds float, float* %34, i64 0, !dbg !5443
  %35 = load float, float* %arrayidx71, align 4, !dbg !5443
  %36 = load float, float* %alpha_inv, align 4, !dbg !5443
  %mul72 = fmul float %35, %36, !dbg !5443
  %cmp73 = fcmp ole float %mul72, 0.000000e+00, !dbg !5443
  br i1 %cmp73, label %cond.true75, label %cond.false76, !dbg !5443

cond.true75:                                      ; preds = %if.else
  br label %cond.end89, !dbg !5443

cond.false76:                                     ; preds = %if.else
  %37 = load float*, float** %color.addr, align 8, !dbg !5443
  %arrayidx77 = getelementptr inbounds float, float* %37, i64 0, !dbg !5443
  %38 = load float, float* %arrayidx77, align 4, !dbg !5443
  %39 = load float, float* %alpha_inv, align 4, !dbg !5443
  %mul78 = fmul float %38, %39, !dbg !5443
  %cmp79 = fcmp ogt float %mul78, 0x3FEFEFEFE0000000, !dbg !5443
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !5443

cond.true81:                                      ; preds = %cond.false76
  br label %cond.end87, !dbg !5443

cond.false82:                                     ; preds = %cond.false76
  %40 = load float*, float** %color.addr, align 8, !dbg !5443
  %arrayidx83 = getelementptr inbounds float, float* %40, i64 0, !dbg !5443
  %41 = load float, float* %arrayidx83, align 4, !dbg !5443
  %42 = load float, float* %alpha_inv, align 4, !dbg !5443
  %mul84 = fmul float %41, %42, !dbg !5443
  %mul85 = fmul float 2.550000e+02, %mul84, !dbg !5443
  %add86 = fadd float %mul85, 5.000000e-01, !dbg !5443
  br label %cond.end87, !dbg !5443

cond.end87:                                       ; preds = %cond.false82, %cond.true81
  %cond88 = phi float [ 2.550000e+02, %cond.true81 ], [ %add86, %cond.false82 ], !dbg !5443
  br label %cond.end89, !dbg !5443

cond.end89:                                       ; preds = %cond.end87, %cond.true75
  %cond90 = phi float [ 0.000000e+00, %cond.true75 ], [ %cond88, %cond.end87 ], !dbg !5443
  %conv91 = fptoui float %cond90 to i8, !dbg !5443
  %43 = load i8*, i8** %result.addr, align 8, !dbg !5444
  %arrayidx92 = getelementptr inbounds i8, i8* %43, i64 0, !dbg !5444
  store i8 %conv91, i8* %arrayidx92, align 1, !dbg !5445
  %44 = load float*, float** %color.addr, align 8, !dbg !5446
  %arrayidx93 = getelementptr inbounds float, float* %44, i64 1, !dbg !5446
  %45 = load float, float* %arrayidx93, align 4, !dbg !5446
  %46 = load float, float* %alpha_inv, align 4, !dbg !5446
  %mul94 = fmul float %45, %46, !dbg !5446
  %cmp95 = fcmp ole float %mul94, 0.000000e+00, !dbg !5446
  br i1 %cmp95, label %cond.true97, label %cond.false98, !dbg !5446

cond.true97:                                      ; preds = %cond.end89
  br label %cond.end111, !dbg !5446

cond.false98:                                     ; preds = %cond.end89
  %47 = load float*, float** %color.addr, align 8, !dbg !5446
  %arrayidx99 = getelementptr inbounds float, float* %47, i64 1, !dbg !5446
  %48 = load float, float* %arrayidx99, align 4, !dbg !5446
  %49 = load float, float* %alpha_inv, align 4, !dbg !5446
  %mul100 = fmul float %48, %49, !dbg !5446
  %cmp101 = fcmp ogt float %mul100, 0x3FEFEFEFE0000000, !dbg !5446
  br i1 %cmp101, label %cond.true103, label %cond.false104, !dbg !5446

cond.true103:                                     ; preds = %cond.false98
  br label %cond.end109, !dbg !5446

cond.false104:                                    ; preds = %cond.false98
  %50 = load float*, float** %color.addr, align 8, !dbg !5446
  %arrayidx105 = getelementptr inbounds float, float* %50, i64 1, !dbg !5446
  %51 = load float, float* %arrayidx105, align 4, !dbg !5446
  %52 = load float, float* %alpha_inv, align 4, !dbg !5446
  %mul106 = fmul float %51, %52, !dbg !5446
  %mul107 = fmul float 2.550000e+02, %mul106, !dbg !5446
  %add108 = fadd float %mul107, 5.000000e-01, !dbg !5446
  br label %cond.end109, !dbg !5446

cond.end109:                                      ; preds = %cond.false104, %cond.true103
  %cond110 = phi float [ 2.550000e+02, %cond.true103 ], [ %add108, %cond.false104 ], !dbg !5446
  br label %cond.end111, !dbg !5446

cond.end111:                                      ; preds = %cond.end109, %cond.true97
  %cond112 = phi float [ 0.000000e+00, %cond.true97 ], [ %cond110, %cond.end109 ], !dbg !5446
  %conv113 = fptoui float %cond112 to i8, !dbg !5446
  %53 = load i8*, i8** %result.addr, align 8, !dbg !5447
  %arrayidx114 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !5447
  store i8 %conv113, i8* %arrayidx114, align 1, !dbg !5448
  %54 = load float*, float** %color.addr, align 8, !dbg !5449
  %arrayidx115 = getelementptr inbounds float, float* %54, i64 2, !dbg !5449
  %55 = load float, float* %arrayidx115, align 4, !dbg !5449
  %56 = load float, float* %alpha_inv, align 4, !dbg !5449
  %mul116 = fmul float %55, %56, !dbg !5449
  %cmp117 = fcmp ole float %mul116, 0.000000e+00, !dbg !5449
  br i1 %cmp117, label %cond.true119, label %cond.false120, !dbg !5449

cond.true119:                                     ; preds = %cond.end111
  br label %cond.end133, !dbg !5449

cond.false120:                                    ; preds = %cond.end111
  %57 = load float*, float** %color.addr, align 8, !dbg !5449
  %arrayidx121 = getelementptr inbounds float, float* %57, i64 2, !dbg !5449
  %58 = load float, float* %arrayidx121, align 4, !dbg !5449
  %59 = load float, float* %alpha_inv, align 4, !dbg !5449
  %mul122 = fmul float %58, %59, !dbg !5449
  %cmp123 = fcmp ogt float %mul122, 0x3FEFEFEFE0000000, !dbg !5449
  br i1 %cmp123, label %cond.true125, label %cond.false126, !dbg !5449

cond.true125:                                     ; preds = %cond.false120
  br label %cond.end131, !dbg !5449

cond.false126:                                    ; preds = %cond.false120
  %60 = load float*, float** %color.addr, align 8, !dbg !5449
  %arrayidx127 = getelementptr inbounds float, float* %60, i64 2, !dbg !5449
  %61 = load float, float* %arrayidx127, align 4, !dbg !5449
  %62 = load float, float* %alpha_inv, align 4, !dbg !5449
  %mul128 = fmul float %61, %62, !dbg !5449
  %mul129 = fmul float 2.550000e+02, %mul128, !dbg !5449
  %add130 = fadd float %mul129, 5.000000e-01, !dbg !5449
  br label %cond.end131, !dbg !5449

cond.end131:                                      ; preds = %cond.false126, %cond.true125
  %cond132 = phi float [ 2.550000e+02, %cond.true125 ], [ %add130, %cond.false126 ], !dbg !5449
  br label %cond.end133, !dbg !5449

cond.end133:                                      ; preds = %cond.end131, %cond.true119
  %cond134 = phi float [ 0.000000e+00, %cond.true119 ], [ %cond132, %cond.end131 ], !dbg !5449
  %conv135 = fptoui float %cond134 to i8, !dbg !5449
  %63 = load i8*, i8** %result.addr, align 8, !dbg !5450
  %arrayidx136 = getelementptr inbounds i8, i8* %63, i64 2, !dbg !5450
  store i8 %conv135, i8* %arrayidx136, align 1, !dbg !5451
  %64 = load float*, float** %color.addr, align 8, !dbg !5452
  %arrayidx137 = getelementptr inbounds float, float* %64, i64 3, !dbg !5452
  %65 = load float, float* %arrayidx137, align 4, !dbg !5452
  %cmp138 = fcmp ole float %65, 0.000000e+00, !dbg !5452
  br i1 %cmp138, label %cond.true140, label %cond.false141, !dbg !5452

cond.true140:                                     ; preds = %cond.end133
  br label %cond.end152, !dbg !5452

cond.false141:                                    ; preds = %cond.end133
  %66 = load float*, float** %color.addr, align 8, !dbg !5452
  %arrayidx142 = getelementptr inbounds float, float* %66, i64 3, !dbg !5452
  %67 = load float, float* %arrayidx142, align 4, !dbg !5452
  %cmp143 = fcmp ogt float %67, 0x3FEFEFEFE0000000, !dbg !5452
  br i1 %cmp143, label %cond.true145, label %cond.false146, !dbg !5452

cond.true145:                                     ; preds = %cond.false141
  br label %cond.end150, !dbg !5452

cond.false146:                                    ; preds = %cond.false141
  %68 = load float*, float** %color.addr, align 8, !dbg !5452
  %arrayidx147 = getelementptr inbounds float, float* %68, i64 3, !dbg !5452
  %69 = load float, float* %arrayidx147, align 4, !dbg !5452
  %mul148 = fmul float 2.550000e+02, %69, !dbg !5452
  %add149 = fadd float %mul148, 5.000000e-01, !dbg !5452
  br label %cond.end150, !dbg !5452

cond.end150:                                      ; preds = %cond.false146, %cond.true145
  %cond151 = phi float [ 2.550000e+02, %cond.true145 ], [ %add149, %cond.false146 ], !dbg !5452
  br label %cond.end152, !dbg !5452

cond.end152:                                      ; preds = %cond.end150, %cond.true140
  %cond153 = phi float [ 0.000000e+00, %cond.true140 ], [ %cond151, %cond.end150 ], !dbg !5452
  %conv154 = fptoui float %cond153 to i8, !dbg !5452
  %70 = load i8*, i8** %result.addr, align 8, !dbg !5453
  %arrayidx155 = getelementptr inbounds i8, i8* %70, i64 3, !dbg !5453
  store i8 %conv154, i8* %arrayidx155, align 1, !dbg !5454
  br label %if.end

if.end:                                           ; preds = %cond.end152, %cond.end66
  ret void, !dbg !5455
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_add_effect_float(float %facf0, float %facf1, i32 %x, i32 %y, float* %rect1, float* %rect2, float* %out) #0 !dbg !5456 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %xo = alloca i32, align 4
  %m = alloca float, align 4
  %fac1 = alloca float, align 4
  %fac3 = alloca float, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %rt = alloca float*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !5457, metadata !DIExpression()), !dbg !5458
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !5459, metadata !DIExpression()), !dbg !5460
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5461, metadata !DIExpression()), !dbg !5462
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5463, metadata !DIExpression()), !dbg !5464
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !5465, metadata !DIExpression()), !dbg !5466
  store float* %rect2, float** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2.addr, metadata !5467, metadata !DIExpression()), !dbg !5468
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !5469, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !5471, metadata !DIExpression()), !dbg !5472
  call void @llvm.dbg.declare(metadata float* %m, metadata !5473, metadata !DIExpression()), !dbg !5474
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !5475, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.declare(metadata float* %fac3, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !5481, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.declare(metadata float** %rt, metadata !5483, metadata !DIExpression()), !dbg !5484
  %0 = load i32, i32* %x.addr, align 4, !dbg !5485
  store i32 %0, i32* %xo, align 4, !dbg !5486
  %1 = load float*, float** %rect1.addr, align 8, !dbg !5487
  store float* %1, float** %rt1, align 8, !dbg !5488
  %2 = load float*, float** %rect2.addr, align 8, !dbg !5489
  store float* %2, float** %rt2, align 8, !dbg !5490
  %3 = load float*, float** %out.addr, align 8, !dbg !5491
  store float* %3, float** %rt, align 8, !dbg !5492
  %4 = load float, float* %facf0.addr, align 4, !dbg !5493
  store float %4, float* %fac1, align 4, !dbg !5494
  %5 = load float, float* %facf1.addr, align 4, !dbg !5495
  store float %5, float* %fac3, align 4, !dbg !5496
  br label %while.cond, !dbg !5497

while.cond:                                       ; preds = %while.end53, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !5498
  %dec = add nsw i32 %6, -1, !dbg !5498
  store i32 %dec, i32* %y.addr, align 4, !dbg !5498
  %tobool = icmp ne i32 %6, 0, !dbg !5497
  br i1 %tobool, label %while.body, label %while.end54, !dbg !5497

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !5499
  store i32 %7, i32* %x.addr, align 4, !dbg !5501
  br label %while.cond1, !dbg !5502

while.cond1:                                      ; preds = %while.body4, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !5503
  %dec2 = add nsw i32 %8, -1, !dbg !5503
  store i32 %dec2, i32* %x.addr, align 4, !dbg !5503
  %tobool3 = icmp ne i32 %8, 0, !dbg !5502
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !5502

while.body4:                                      ; preds = %while.cond1
  %9 = load float*, float** %rt1, align 8, !dbg !5504
  %arrayidx = getelementptr inbounds float, float* %9, i64 3, !dbg !5504
  %10 = load float, float* %arrayidx, align 4, !dbg !5504
  %11 = load float, float* %fac1, align 4, !dbg !5506
  %sub = fsub float 1.000000e+00, %11, !dbg !5507
  %mul = fmul float %10, %sub, !dbg !5508
  %sub5 = fsub float 1.000000e+00, %mul, !dbg !5509
  store float %sub5, float* %m, align 4, !dbg !5510
  %12 = load float*, float** %rt1, align 8, !dbg !5511
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 0, !dbg !5511
  %13 = load float, float* %arrayidx6, align 4, !dbg !5511
  %14 = load float, float* %m, align 4, !dbg !5512
  %15 = load float*, float** %rt2, align 8, !dbg !5513
  %arrayidx7 = getelementptr inbounds float, float* %15, i64 0, !dbg !5513
  %16 = load float, float* %arrayidx7, align 4, !dbg !5513
  %mul8 = fmul float %14, %16, !dbg !5514
  %add = fadd float %13, %mul8, !dbg !5515
  %17 = load float*, float** %rt, align 8, !dbg !5516
  %arrayidx9 = getelementptr inbounds float, float* %17, i64 0, !dbg !5516
  store float %add, float* %arrayidx9, align 4, !dbg !5517
  %18 = load float*, float** %rt1, align 8, !dbg !5518
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 1, !dbg !5518
  %19 = load float, float* %arrayidx10, align 4, !dbg !5518
  %20 = load float, float* %m, align 4, !dbg !5519
  %21 = load float*, float** %rt2, align 8, !dbg !5520
  %arrayidx11 = getelementptr inbounds float, float* %21, i64 1, !dbg !5520
  %22 = load float, float* %arrayidx11, align 4, !dbg !5520
  %mul12 = fmul float %20, %22, !dbg !5521
  %add13 = fadd float %19, %mul12, !dbg !5522
  %23 = load float*, float** %rt, align 8, !dbg !5523
  %arrayidx14 = getelementptr inbounds float, float* %23, i64 1, !dbg !5523
  store float %add13, float* %arrayidx14, align 4, !dbg !5524
  %24 = load float*, float** %rt1, align 8, !dbg !5525
  %arrayidx15 = getelementptr inbounds float, float* %24, i64 2, !dbg !5525
  %25 = load float, float* %arrayidx15, align 4, !dbg !5525
  %26 = load float, float* %m, align 4, !dbg !5526
  %27 = load float*, float** %rt2, align 8, !dbg !5527
  %arrayidx16 = getelementptr inbounds float, float* %27, i64 2, !dbg !5527
  %28 = load float, float* %arrayidx16, align 4, !dbg !5527
  %mul17 = fmul float %26, %28, !dbg !5528
  %add18 = fadd float %25, %mul17, !dbg !5529
  %29 = load float*, float** %rt, align 8, !dbg !5530
  %arrayidx19 = getelementptr inbounds float, float* %29, i64 2, !dbg !5530
  store float %add18, float* %arrayidx19, align 4, !dbg !5531
  %30 = load float*, float** %rt1, align 8, !dbg !5532
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 3, !dbg !5532
  %31 = load float, float* %arrayidx20, align 4, !dbg !5532
  %32 = load float*, float** %rt, align 8, !dbg !5533
  %arrayidx21 = getelementptr inbounds float, float* %32, i64 3, !dbg !5533
  store float %31, float* %arrayidx21, align 4, !dbg !5534
  %33 = load float*, float** %rt1, align 8, !dbg !5535
  %add.ptr = getelementptr inbounds float, float* %33, i64 4, !dbg !5535
  store float* %add.ptr, float** %rt1, align 8, !dbg !5535
  %34 = load float*, float** %rt2, align 8, !dbg !5536
  %add.ptr22 = getelementptr inbounds float, float* %34, i64 4, !dbg !5536
  store float* %add.ptr22, float** %rt2, align 8, !dbg !5536
  %35 = load float*, float** %rt, align 8, !dbg !5537
  %add.ptr23 = getelementptr inbounds float, float* %35, i64 4, !dbg !5537
  store float* %add.ptr23, float** %rt, align 8, !dbg !5537
  br label %while.cond1, !dbg !5502, !llvm.loop !5538

while.end:                                        ; preds = %while.cond1
  %36 = load i32, i32* %y.addr, align 4, !dbg !5540
  %cmp = icmp eq i32 %36, 0, !dbg !5542
  br i1 %cmp, label %if.then, label %if.end, !dbg !5543

if.then:                                          ; preds = %while.end
  br label %while.end54, !dbg !5544

if.end:                                           ; preds = %while.end
  %37 = load i32, i32* %y.addr, align 4, !dbg !5545
  %dec24 = add nsw i32 %37, -1, !dbg !5545
  store i32 %dec24, i32* %y.addr, align 4, !dbg !5545
  %38 = load i32, i32* %xo, align 4, !dbg !5546
  store i32 %38, i32* %x.addr, align 4, !dbg !5547
  br label %while.cond25, !dbg !5548

while.cond25:                                     ; preds = %while.body28, %if.end
  %39 = load i32, i32* %x.addr, align 4, !dbg !5549
  %dec26 = add nsw i32 %39, -1, !dbg !5549
  store i32 %dec26, i32* %x.addr, align 4, !dbg !5549
  %tobool27 = icmp ne i32 %39, 0, !dbg !5548
  br i1 %tobool27, label %while.body28, label %while.end53, !dbg !5548

while.body28:                                     ; preds = %while.cond25
  %40 = load float*, float** %rt1, align 8, !dbg !5550
  %arrayidx29 = getelementptr inbounds float, float* %40, i64 3, !dbg !5550
  %41 = load float, float* %arrayidx29, align 4, !dbg !5550
  %42 = load float, float* %fac3, align 4, !dbg !5552
  %sub30 = fsub float 1.000000e+00, %42, !dbg !5553
  %mul31 = fmul float %41, %sub30, !dbg !5554
  %sub32 = fsub float 1.000000e+00, %mul31, !dbg !5555
  store float %sub32, float* %m, align 4, !dbg !5556
  %43 = load float*, float** %rt1, align 8, !dbg !5557
  %arrayidx33 = getelementptr inbounds float, float* %43, i64 0, !dbg !5557
  %44 = load float, float* %arrayidx33, align 4, !dbg !5557
  %45 = load float, float* %m, align 4, !dbg !5558
  %46 = load float*, float** %rt2, align 8, !dbg !5559
  %arrayidx34 = getelementptr inbounds float, float* %46, i64 0, !dbg !5559
  %47 = load float, float* %arrayidx34, align 4, !dbg !5559
  %mul35 = fmul float %45, %47, !dbg !5560
  %add36 = fadd float %44, %mul35, !dbg !5561
  %48 = load float*, float** %rt, align 8, !dbg !5562
  %arrayidx37 = getelementptr inbounds float, float* %48, i64 0, !dbg !5562
  store float %add36, float* %arrayidx37, align 4, !dbg !5563
  %49 = load float*, float** %rt1, align 8, !dbg !5564
  %arrayidx38 = getelementptr inbounds float, float* %49, i64 1, !dbg !5564
  %50 = load float, float* %arrayidx38, align 4, !dbg !5564
  %51 = load float, float* %m, align 4, !dbg !5565
  %52 = load float*, float** %rt2, align 8, !dbg !5566
  %arrayidx39 = getelementptr inbounds float, float* %52, i64 1, !dbg !5566
  %53 = load float, float* %arrayidx39, align 4, !dbg !5566
  %mul40 = fmul float %51, %53, !dbg !5567
  %add41 = fadd float %50, %mul40, !dbg !5568
  %54 = load float*, float** %rt, align 8, !dbg !5569
  %arrayidx42 = getelementptr inbounds float, float* %54, i64 1, !dbg !5569
  store float %add41, float* %arrayidx42, align 4, !dbg !5570
  %55 = load float*, float** %rt1, align 8, !dbg !5571
  %arrayidx43 = getelementptr inbounds float, float* %55, i64 2, !dbg !5571
  %56 = load float, float* %arrayidx43, align 4, !dbg !5571
  %57 = load float, float* %m, align 4, !dbg !5572
  %58 = load float*, float** %rt2, align 8, !dbg !5573
  %arrayidx44 = getelementptr inbounds float, float* %58, i64 2, !dbg !5573
  %59 = load float, float* %arrayidx44, align 4, !dbg !5573
  %mul45 = fmul float %57, %59, !dbg !5574
  %add46 = fadd float %56, %mul45, !dbg !5575
  %60 = load float*, float** %rt, align 8, !dbg !5576
  %arrayidx47 = getelementptr inbounds float, float* %60, i64 2, !dbg !5576
  store float %add46, float* %arrayidx47, align 4, !dbg !5577
  %61 = load float*, float** %rt1, align 8, !dbg !5578
  %arrayidx48 = getelementptr inbounds float, float* %61, i64 3, !dbg !5578
  %62 = load float, float* %arrayidx48, align 4, !dbg !5578
  %63 = load float*, float** %rt, align 8, !dbg !5579
  %arrayidx49 = getelementptr inbounds float, float* %63, i64 3, !dbg !5579
  store float %62, float* %arrayidx49, align 4, !dbg !5580
  %64 = load float*, float** %rt1, align 8, !dbg !5581
  %add.ptr50 = getelementptr inbounds float, float* %64, i64 4, !dbg !5581
  store float* %add.ptr50, float** %rt1, align 8, !dbg !5581
  %65 = load float*, float** %rt2, align 8, !dbg !5582
  %add.ptr51 = getelementptr inbounds float, float* %65, i64 4, !dbg !5582
  store float* %add.ptr51, float** %rt2, align 8, !dbg !5582
  %66 = load float*, float** %rt, align 8, !dbg !5583
  %add.ptr52 = getelementptr inbounds float, float* %66, i64 4, !dbg !5583
  store float* %add.ptr52, float** %rt, align 8, !dbg !5583
  br label %while.cond25, !dbg !5548, !llvm.loop !5584

while.end53:                                      ; preds = %while.cond25
  br label %while.cond, !dbg !5497, !llvm.loop !5586

while.end54:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !5588
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_add_effect_byte(float %facf0, float %facf1, i32 %x, i32 %y, i8* %rect1, i8* %rect2, i8* %out) #0 !dbg !5589 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %xo = alloca i32, align 4
  %fac1 = alloca i32, align 4
  %fac3 = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %rt = alloca i8*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !5590, metadata !DIExpression()), !dbg !5591
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !5592, metadata !DIExpression()), !dbg !5593
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5594, metadata !DIExpression()), !dbg !5595
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5596, metadata !DIExpression()), !dbg !5597
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !5598, metadata !DIExpression()), !dbg !5599
  store i8* %rect2, i8** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2.addr, metadata !5600, metadata !DIExpression()), !dbg !5601
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !5604, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.declare(metadata i32* %fac1, metadata !5606, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata i32* %fac3, metadata !5608, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !5610, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !5612, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.declare(metadata i8** %rt, metadata !5614, metadata !DIExpression()), !dbg !5615
  %0 = load i32, i32* %x.addr, align 4, !dbg !5616
  store i32 %0, i32* %xo, align 4, !dbg !5617
  %1 = load i8*, i8** %rect1.addr, align 8, !dbg !5618
  store i8* %1, i8** %cp1, align 8, !dbg !5619
  %2 = load i8*, i8** %rect2.addr, align 8, !dbg !5620
  store i8* %2, i8** %cp2, align 8, !dbg !5621
  %3 = load i8*, i8** %out.addr, align 8, !dbg !5622
  store i8* %3, i8** %rt, align 8, !dbg !5623
  %4 = load float, float* %facf0.addr, align 4, !dbg !5624
  %mul = fmul float 2.560000e+02, %4, !dbg !5625
  %conv = fptosi float %mul to i32, !dbg !5626
  store i32 %conv, i32* %fac1, align 4, !dbg !5627
  %5 = load float, float* %facf1.addr, align 4, !dbg !5628
  %mul1 = fmul float 2.560000e+02, %5, !dbg !5629
  %conv2 = fptosi float %mul1 to i32, !dbg !5630
  store i32 %conv2, i32* %fac3, align 4, !dbg !5631
  br label %while.cond, !dbg !5632

while.cond:                                       ; preds = %while.end78, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !5633
  %dec = add nsw i32 %6, -1, !dbg !5633
  store i32 %dec, i32* %y.addr, align 4, !dbg !5633
  %tobool = icmp ne i32 %6, 0, !dbg !5632
  br i1 %tobool, label %while.body, label %while.end79, !dbg !5632

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !5634
  store i32 %7, i32* %x.addr, align 4, !dbg !5636
  br label %while.cond3, !dbg !5637

while.cond3:                                      ; preds = %while.body6, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !5638
  %dec4 = add nsw i32 %8, -1, !dbg !5638
  store i32 %dec4, i32* %x.addr, align 4, !dbg !5638
  %tobool5 = icmp ne i32 %8, 0, !dbg !5637
  br i1 %tobool5, label %while.body6, label %while.end, !dbg !5637

while.body6:                                      ; preds = %while.cond3
  %9 = load i8*, i8** %cp1, align 8, !dbg !5639
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !5639
  %10 = load i8, i8* %arrayidx, align 1, !dbg !5639
  %conv7 = zext i8 %10 to i32, !dbg !5639
  %11 = load i32, i32* %fac1, align 4, !dbg !5641
  %12 = load i8*, i8** %cp2, align 8, !dbg !5642
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !5642
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !5642
  %conv9 = zext i8 %13 to i32, !dbg !5642
  %mul10 = mul nsw i32 %11, %conv9, !dbg !5643
  %shr = ashr i32 %mul10, 8, !dbg !5644
  %add = add nsw i32 %conv7, %shr, !dbg !5645
  %call = call i32 @min_ii(i32 %add, i32 255), !dbg !5646
  %conv11 = trunc i32 %call to i8, !dbg !5646
  %14 = load i8*, i8** %rt, align 8, !dbg !5647
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !5647
  store i8 %conv11, i8* %arrayidx12, align 1, !dbg !5648
  %15 = load i8*, i8** %cp1, align 8, !dbg !5649
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !5649
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !5649
  %conv14 = zext i8 %16 to i32, !dbg !5649
  %17 = load i32, i32* %fac1, align 4, !dbg !5650
  %18 = load i8*, i8** %cp2, align 8, !dbg !5651
  %arrayidx15 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !5651
  %19 = load i8, i8* %arrayidx15, align 1, !dbg !5651
  %conv16 = zext i8 %19 to i32, !dbg !5651
  %mul17 = mul nsw i32 %17, %conv16, !dbg !5652
  %shr18 = ashr i32 %mul17, 8, !dbg !5653
  %add19 = add nsw i32 %conv14, %shr18, !dbg !5654
  %call20 = call i32 @min_ii(i32 %add19, i32 255), !dbg !5655
  %conv21 = trunc i32 %call20 to i8, !dbg !5655
  %20 = load i8*, i8** %rt, align 8, !dbg !5656
  %arrayidx22 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !5656
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !5657
  %21 = load i8*, i8** %cp1, align 8, !dbg !5658
  %arrayidx23 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !5658
  %22 = load i8, i8* %arrayidx23, align 1, !dbg !5658
  %conv24 = zext i8 %22 to i32, !dbg !5658
  %23 = load i32, i32* %fac1, align 4, !dbg !5659
  %24 = load i8*, i8** %cp2, align 8, !dbg !5660
  %arrayidx25 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !5660
  %25 = load i8, i8* %arrayidx25, align 1, !dbg !5660
  %conv26 = zext i8 %25 to i32, !dbg !5660
  %mul27 = mul nsw i32 %23, %conv26, !dbg !5661
  %shr28 = ashr i32 %mul27, 8, !dbg !5662
  %add29 = add nsw i32 %conv24, %shr28, !dbg !5663
  %call30 = call i32 @min_ii(i32 %add29, i32 255), !dbg !5664
  %conv31 = trunc i32 %call30 to i8, !dbg !5664
  %26 = load i8*, i8** %rt, align 8, !dbg !5665
  %arrayidx32 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !5665
  store i8 %conv31, i8* %arrayidx32, align 1, !dbg !5666
  %27 = load i8*, i8** %cp1, align 8, !dbg !5667
  %arrayidx33 = getelementptr inbounds i8, i8* %27, i64 3, !dbg !5667
  %28 = load i8, i8* %arrayidx33, align 1, !dbg !5667
  %29 = load i8*, i8** %rt, align 8, !dbg !5668
  %arrayidx34 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !5668
  store i8 %28, i8* %arrayidx34, align 1, !dbg !5669
  %30 = load i8*, i8** %cp1, align 8, !dbg !5670
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !5670
  store i8* %add.ptr, i8** %cp1, align 8, !dbg !5670
  %31 = load i8*, i8** %cp2, align 8, !dbg !5671
  %add.ptr35 = getelementptr inbounds i8, i8* %31, i64 4, !dbg !5671
  store i8* %add.ptr35, i8** %cp2, align 8, !dbg !5671
  %32 = load i8*, i8** %rt, align 8, !dbg !5672
  %add.ptr36 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !5672
  store i8* %add.ptr36, i8** %rt, align 8, !dbg !5672
  br label %while.cond3, !dbg !5637, !llvm.loop !5673

while.end:                                        ; preds = %while.cond3
  %33 = load i32, i32* %y.addr, align 4, !dbg !5675
  %cmp = icmp eq i32 %33, 0, !dbg !5677
  br i1 %cmp, label %if.then, label %if.end, !dbg !5678

if.then:                                          ; preds = %while.end
  br label %while.end79, !dbg !5679

if.end:                                           ; preds = %while.end
  %34 = load i32, i32* %y.addr, align 4, !dbg !5680
  %dec38 = add nsw i32 %34, -1, !dbg !5680
  store i32 %dec38, i32* %y.addr, align 4, !dbg !5680
  %35 = load i32, i32* %xo, align 4, !dbg !5681
  store i32 %35, i32* %x.addr, align 4, !dbg !5682
  br label %while.cond39, !dbg !5683

while.cond39:                                     ; preds = %while.body42, %if.end
  %36 = load i32, i32* %x.addr, align 4, !dbg !5684
  %dec40 = add nsw i32 %36, -1, !dbg !5684
  store i32 %dec40, i32* %x.addr, align 4, !dbg !5684
  %tobool41 = icmp ne i32 %36, 0, !dbg !5683
  br i1 %tobool41, label %while.body42, label %while.end78, !dbg !5683

while.body42:                                     ; preds = %while.cond39
  %37 = load i8*, i8** %cp1, align 8, !dbg !5685
  %arrayidx43 = getelementptr inbounds i8, i8* %37, i64 0, !dbg !5685
  %38 = load i8, i8* %arrayidx43, align 1, !dbg !5685
  %conv44 = zext i8 %38 to i32, !dbg !5685
  %39 = load i32, i32* %fac3, align 4, !dbg !5687
  %40 = load i8*, i8** %cp2, align 8, !dbg !5688
  %arrayidx45 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !5688
  %41 = load i8, i8* %arrayidx45, align 1, !dbg !5688
  %conv46 = zext i8 %41 to i32, !dbg !5688
  %mul47 = mul nsw i32 %39, %conv46, !dbg !5689
  %shr48 = ashr i32 %mul47, 8, !dbg !5690
  %add49 = add nsw i32 %conv44, %shr48, !dbg !5691
  %call50 = call i32 @min_ii(i32 %add49, i32 255), !dbg !5692
  %conv51 = trunc i32 %call50 to i8, !dbg !5692
  %42 = load i8*, i8** %rt, align 8, !dbg !5693
  %arrayidx52 = getelementptr inbounds i8, i8* %42, i64 0, !dbg !5693
  store i8 %conv51, i8* %arrayidx52, align 1, !dbg !5694
  %43 = load i8*, i8** %cp1, align 8, !dbg !5695
  %arrayidx53 = getelementptr inbounds i8, i8* %43, i64 1, !dbg !5695
  %44 = load i8, i8* %arrayidx53, align 1, !dbg !5695
  %conv54 = zext i8 %44 to i32, !dbg !5695
  %45 = load i32, i32* %fac3, align 4, !dbg !5696
  %46 = load i8*, i8** %cp2, align 8, !dbg !5697
  %arrayidx55 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !5697
  %47 = load i8, i8* %arrayidx55, align 1, !dbg !5697
  %conv56 = zext i8 %47 to i32, !dbg !5697
  %mul57 = mul nsw i32 %45, %conv56, !dbg !5698
  %shr58 = ashr i32 %mul57, 8, !dbg !5699
  %add59 = add nsw i32 %conv54, %shr58, !dbg !5700
  %call60 = call i32 @min_ii(i32 %add59, i32 255), !dbg !5701
  %conv61 = trunc i32 %call60 to i8, !dbg !5701
  %48 = load i8*, i8** %rt, align 8, !dbg !5702
  %arrayidx62 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !5702
  store i8 %conv61, i8* %arrayidx62, align 1, !dbg !5703
  %49 = load i8*, i8** %cp1, align 8, !dbg !5704
  %arrayidx63 = getelementptr inbounds i8, i8* %49, i64 2, !dbg !5704
  %50 = load i8, i8* %arrayidx63, align 1, !dbg !5704
  %conv64 = zext i8 %50 to i32, !dbg !5704
  %51 = load i32, i32* %fac3, align 4, !dbg !5705
  %52 = load i8*, i8** %cp2, align 8, !dbg !5706
  %arrayidx65 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !5706
  %53 = load i8, i8* %arrayidx65, align 1, !dbg !5706
  %conv66 = zext i8 %53 to i32, !dbg !5706
  %mul67 = mul nsw i32 %51, %conv66, !dbg !5707
  %shr68 = ashr i32 %mul67, 8, !dbg !5708
  %add69 = add nsw i32 %conv64, %shr68, !dbg !5709
  %call70 = call i32 @min_ii(i32 %add69, i32 255), !dbg !5710
  %conv71 = trunc i32 %call70 to i8, !dbg !5710
  %54 = load i8*, i8** %rt, align 8, !dbg !5711
  %arrayidx72 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !5711
  store i8 %conv71, i8* %arrayidx72, align 1, !dbg !5712
  %55 = load i8*, i8** %cp1, align 8, !dbg !5713
  %arrayidx73 = getelementptr inbounds i8, i8* %55, i64 3, !dbg !5713
  %56 = load i8, i8* %arrayidx73, align 1, !dbg !5713
  %57 = load i8*, i8** %rt, align 8, !dbg !5714
  %arrayidx74 = getelementptr inbounds i8, i8* %57, i64 3, !dbg !5714
  store i8 %56, i8* %arrayidx74, align 1, !dbg !5715
  %58 = load i8*, i8** %cp1, align 8, !dbg !5716
  %add.ptr75 = getelementptr inbounds i8, i8* %58, i64 4, !dbg !5716
  store i8* %add.ptr75, i8** %cp1, align 8, !dbg !5716
  %59 = load i8*, i8** %cp2, align 8, !dbg !5717
  %add.ptr76 = getelementptr inbounds i8, i8* %59, i64 4, !dbg !5717
  store i8* %add.ptr76, i8** %cp2, align 8, !dbg !5717
  %60 = load i8*, i8** %rt, align 8, !dbg !5718
  %add.ptr77 = getelementptr inbounds i8, i8* %60, i64 4, !dbg !5718
  store i8* %add.ptr77, i8** %rt, align 8, !dbg !5718
  br label %while.cond39, !dbg !5683, !llvm.loop !5719

while.end78:                                      ; preds = %while.cond39
  br label %while.cond, !dbg !5632, !llvm.loop !5721

while.end79:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !5723
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !5724 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5728, metadata !DIExpression()), !dbg !5729
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !5730, metadata !DIExpression()), !dbg !5731
  %0 = load i32, i32* %a.addr, align 4, !dbg !5732
  %1 = load i32, i32* %b.addr, align 4, !dbg !5733
  %cmp = icmp slt i32 %0, %1, !dbg !5734
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5735

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !5736
  br label %cond.end, !dbg !5735

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !5737
  br label %cond.end, !dbg !5735

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5735
  ret i32 %cond, !dbg !5738
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_sub_effect_float(float %UNUSED_facf0, float %facf1, i32 %x, i32 %y, float* %rect1, float* %rect2, float* %out) #0 !dbg !5739 {
entry:
  %UNUSED_facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %xo = alloca i32, align 4
  %m = alloca float, align 4
  %fac3 = alloca float, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %rt = alloca float*, align 8
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !5740, metadata !DIExpression()), !dbg !5741
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !5742, metadata !DIExpression()), !dbg !5743
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5744, metadata !DIExpression()), !dbg !5745
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5746, metadata !DIExpression()), !dbg !5747
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !5748, metadata !DIExpression()), !dbg !5749
  store float* %rect2, float** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2.addr, metadata !5750, metadata !DIExpression()), !dbg !5751
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !5754, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata float* %m, metadata !5756, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.declare(metadata float* %fac3, metadata !5758, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !5760, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !5762, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.declare(metadata float** %rt, metadata !5764, metadata !DIExpression()), !dbg !5765
  %0 = load i32, i32* %x.addr, align 4, !dbg !5766
  store i32 %0, i32* %xo, align 4, !dbg !5767
  %1 = load float*, float** %rect1.addr, align 8, !dbg !5768
  store float* %1, float** %rt1, align 8, !dbg !5769
  %2 = load float*, float** %rect2.addr, align 8, !dbg !5770
  store float* %2, float** %rt2, align 8, !dbg !5771
  %3 = load float*, float** %out.addr, align 8, !dbg !5772
  store float* %3, float** %rt, align 8, !dbg !5773
  %4 = load float, float* %facf1.addr, align 4, !dbg !5774
  store float %4, float* %fac3, align 4, !dbg !5775
  br label %while.cond, !dbg !5776

while.cond:                                       ; preds = %while.end59, %entry
  %5 = load i32, i32* %y.addr, align 4, !dbg !5777
  %dec = add nsw i32 %5, -1, !dbg !5777
  store i32 %dec, i32* %y.addr, align 4, !dbg !5777
  %tobool = icmp ne i32 %5, 0, !dbg !5776
  br i1 %tobool, label %while.body, label %while.end60, !dbg !5776

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %xo, align 4, !dbg !5778
  store i32 %6, i32* %x.addr, align 4, !dbg !5780
  br label %while.cond1, !dbg !5781

while.cond1:                                      ; preds = %while.body4, %while.body
  %7 = load i32, i32* %x.addr, align 4, !dbg !5782
  %dec2 = add nsw i32 %7, -1, !dbg !5782
  store i32 %dec2, i32* %x.addr, align 4, !dbg !5782
  %tobool3 = icmp ne i32 %7, 0, !dbg !5781
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !5781

while.body4:                                      ; preds = %while.cond1
  %8 = load float*, float** %rt1, align 8, !dbg !5783
  %arrayidx = getelementptr inbounds float, float* %8, i64 3, !dbg !5783
  %9 = load float, float* %arrayidx, align 4, !dbg !5783
  %10 = load float, float* %fac3, align 4, !dbg !5785
  %sub = fsub float 1.000000e+00, %10, !dbg !5786
  %mul = fmul float %9, %sub, !dbg !5787
  %sub5 = fsub float 1.000000e+00, %mul, !dbg !5788
  store float %sub5, float* %m, align 4, !dbg !5789
  %11 = load float*, float** %rt1, align 8, !dbg !5790
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 0, !dbg !5790
  %12 = load float, float* %arrayidx6, align 4, !dbg !5790
  %13 = load float, float* %m, align 4, !dbg !5791
  %14 = load float*, float** %rt2, align 8, !dbg !5792
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 0, !dbg !5792
  %15 = load float, float* %arrayidx7, align 4, !dbg !5792
  %mul8 = fmul float %13, %15, !dbg !5793
  %sub9 = fsub float %12, %mul8, !dbg !5794
  %call = call float @max_ff(float %sub9, float 0.000000e+00), !dbg !5795
  %16 = load float*, float** %rt, align 8, !dbg !5796
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 0, !dbg !5796
  store float %call, float* %arrayidx10, align 4, !dbg !5797
  %17 = load float*, float** %rt1, align 8, !dbg !5798
  %arrayidx11 = getelementptr inbounds float, float* %17, i64 1, !dbg !5798
  %18 = load float, float* %arrayidx11, align 4, !dbg !5798
  %19 = load float, float* %m, align 4, !dbg !5799
  %20 = load float*, float** %rt2, align 8, !dbg !5800
  %arrayidx12 = getelementptr inbounds float, float* %20, i64 1, !dbg !5800
  %21 = load float, float* %arrayidx12, align 4, !dbg !5800
  %mul13 = fmul float %19, %21, !dbg !5801
  %sub14 = fsub float %18, %mul13, !dbg !5802
  %call15 = call float @max_ff(float %sub14, float 0.000000e+00), !dbg !5803
  %22 = load float*, float** %rt, align 8, !dbg !5804
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 1, !dbg !5804
  store float %call15, float* %arrayidx16, align 4, !dbg !5805
  %23 = load float*, float** %rt1, align 8, !dbg !5806
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 2, !dbg !5806
  %24 = load float, float* %arrayidx17, align 4, !dbg !5806
  %25 = load float, float* %m, align 4, !dbg !5807
  %26 = load float*, float** %rt2, align 8, !dbg !5808
  %arrayidx18 = getelementptr inbounds float, float* %26, i64 2, !dbg !5808
  %27 = load float, float* %arrayidx18, align 4, !dbg !5808
  %mul19 = fmul float %25, %27, !dbg !5809
  %sub20 = fsub float %24, %mul19, !dbg !5810
  %call21 = call float @max_ff(float %sub20, float 0.000000e+00), !dbg !5811
  %28 = load float*, float** %rt, align 8, !dbg !5812
  %arrayidx22 = getelementptr inbounds float, float* %28, i64 2, !dbg !5812
  store float %call21, float* %arrayidx22, align 4, !dbg !5813
  %29 = load float*, float** %rt1, align 8, !dbg !5814
  %arrayidx23 = getelementptr inbounds float, float* %29, i64 3, !dbg !5814
  %30 = load float, float* %arrayidx23, align 4, !dbg !5814
  %31 = load float*, float** %rt, align 8, !dbg !5815
  %arrayidx24 = getelementptr inbounds float, float* %31, i64 3, !dbg !5815
  store float %30, float* %arrayidx24, align 4, !dbg !5816
  %32 = load float*, float** %rt1, align 8, !dbg !5817
  %add.ptr = getelementptr inbounds float, float* %32, i64 4, !dbg !5817
  store float* %add.ptr, float** %rt1, align 8, !dbg !5817
  %33 = load float*, float** %rt2, align 8, !dbg !5818
  %add.ptr25 = getelementptr inbounds float, float* %33, i64 4, !dbg !5818
  store float* %add.ptr25, float** %rt2, align 8, !dbg !5818
  %34 = load float*, float** %rt, align 8, !dbg !5819
  %add.ptr26 = getelementptr inbounds float, float* %34, i64 4, !dbg !5819
  store float* %add.ptr26, float** %rt, align 8, !dbg !5819
  br label %while.cond1, !dbg !5781, !llvm.loop !5820

while.end:                                        ; preds = %while.cond1
  %35 = load i32, i32* %y.addr, align 4, !dbg !5822
  %cmp = icmp eq i32 %35, 0, !dbg !5824
  br i1 %cmp, label %if.then, label %if.end, !dbg !5825

if.then:                                          ; preds = %while.end
  br label %while.end60, !dbg !5826

if.end:                                           ; preds = %while.end
  %36 = load i32, i32* %y.addr, align 4, !dbg !5827
  %dec27 = add nsw i32 %36, -1, !dbg !5827
  store i32 %dec27, i32* %y.addr, align 4, !dbg !5827
  %37 = load i32, i32* %xo, align 4, !dbg !5828
  store i32 %37, i32* %x.addr, align 4, !dbg !5829
  br label %while.cond28, !dbg !5830

while.cond28:                                     ; preds = %while.body31, %if.end
  %38 = load i32, i32* %x.addr, align 4, !dbg !5831
  %dec29 = add nsw i32 %38, -1, !dbg !5831
  store i32 %dec29, i32* %x.addr, align 4, !dbg !5831
  %tobool30 = icmp ne i32 %38, 0, !dbg !5830
  br i1 %tobool30, label %while.body31, label %while.end59, !dbg !5830

while.body31:                                     ; preds = %while.cond28
  %39 = load float*, float** %rt1, align 8, !dbg !5832
  %arrayidx32 = getelementptr inbounds float, float* %39, i64 3, !dbg !5832
  %40 = load float, float* %arrayidx32, align 4, !dbg !5832
  %41 = load float, float* %fac3, align 4, !dbg !5834
  %sub33 = fsub float 1.000000e+00, %41, !dbg !5835
  %mul34 = fmul float %40, %sub33, !dbg !5836
  %sub35 = fsub float 1.000000e+00, %mul34, !dbg !5837
  store float %sub35, float* %m, align 4, !dbg !5838
  %42 = load float*, float** %rt1, align 8, !dbg !5839
  %arrayidx36 = getelementptr inbounds float, float* %42, i64 0, !dbg !5839
  %43 = load float, float* %arrayidx36, align 4, !dbg !5839
  %44 = load float, float* %m, align 4, !dbg !5840
  %45 = load float*, float** %rt2, align 8, !dbg !5841
  %arrayidx37 = getelementptr inbounds float, float* %45, i64 0, !dbg !5841
  %46 = load float, float* %arrayidx37, align 4, !dbg !5841
  %mul38 = fmul float %44, %46, !dbg !5842
  %sub39 = fsub float %43, %mul38, !dbg !5843
  %call40 = call float @max_ff(float %sub39, float 0.000000e+00), !dbg !5844
  %47 = load float*, float** %rt, align 8, !dbg !5845
  %arrayidx41 = getelementptr inbounds float, float* %47, i64 0, !dbg !5845
  store float %call40, float* %arrayidx41, align 4, !dbg !5846
  %48 = load float*, float** %rt1, align 8, !dbg !5847
  %arrayidx42 = getelementptr inbounds float, float* %48, i64 1, !dbg !5847
  %49 = load float, float* %arrayidx42, align 4, !dbg !5847
  %50 = load float, float* %m, align 4, !dbg !5848
  %51 = load float*, float** %rt2, align 8, !dbg !5849
  %arrayidx43 = getelementptr inbounds float, float* %51, i64 1, !dbg !5849
  %52 = load float, float* %arrayidx43, align 4, !dbg !5849
  %mul44 = fmul float %50, %52, !dbg !5850
  %sub45 = fsub float %49, %mul44, !dbg !5851
  %call46 = call float @max_ff(float %sub45, float 0.000000e+00), !dbg !5852
  %53 = load float*, float** %rt, align 8, !dbg !5853
  %arrayidx47 = getelementptr inbounds float, float* %53, i64 1, !dbg !5853
  store float %call46, float* %arrayidx47, align 4, !dbg !5854
  %54 = load float*, float** %rt1, align 8, !dbg !5855
  %arrayidx48 = getelementptr inbounds float, float* %54, i64 2, !dbg !5855
  %55 = load float, float* %arrayidx48, align 4, !dbg !5855
  %56 = load float, float* %m, align 4, !dbg !5856
  %57 = load float*, float** %rt2, align 8, !dbg !5857
  %arrayidx49 = getelementptr inbounds float, float* %57, i64 2, !dbg !5857
  %58 = load float, float* %arrayidx49, align 4, !dbg !5857
  %mul50 = fmul float %56, %58, !dbg !5858
  %sub51 = fsub float %55, %mul50, !dbg !5859
  %call52 = call float @max_ff(float %sub51, float 0.000000e+00), !dbg !5860
  %59 = load float*, float** %rt, align 8, !dbg !5861
  %arrayidx53 = getelementptr inbounds float, float* %59, i64 2, !dbg !5861
  store float %call52, float* %arrayidx53, align 4, !dbg !5862
  %60 = load float*, float** %rt1, align 8, !dbg !5863
  %arrayidx54 = getelementptr inbounds float, float* %60, i64 3, !dbg !5863
  %61 = load float, float* %arrayidx54, align 4, !dbg !5863
  %62 = load float*, float** %rt, align 8, !dbg !5864
  %arrayidx55 = getelementptr inbounds float, float* %62, i64 3, !dbg !5864
  store float %61, float* %arrayidx55, align 4, !dbg !5865
  %63 = load float*, float** %rt1, align 8, !dbg !5866
  %add.ptr56 = getelementptr inbounds float, float* %63, i64 4, !dbg !5866
  store float* %add.ptr56, float** %rt1, align 8, !dbg !5866
  %64 = load float*, float** %rt2, align 8, !dbg !5867
  %add.ptr57 = getelementptr inbounds float, float* %64, i64 4, !dbg !5867
  store float* %add.ptr57, float** %rt2, align 8, !dbg !5867
  %65 = load float*, float** %rt, align 8, !dbg !5868
  %add.ptr58 = getelementptr inbounds float, float* %65, i64 4, !dbg !5868
  store float* %add.ptr58, float** %rt, align 8, !dbg !5868
  br label %while.cond28, !dbg !5830, !llvm.loop !5869

while.end59:                                      ; preds = %while.cond28
  br label %while.cond, !dbg !5776, !llvm.loop !5871

while.end60:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !5873
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_sub_effect_byte(float %facf0, float %facf1, i32 %x, i32 %y, i8* %rect1, i8* %rect2, i8* %out) #0 !dbg !5874 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %xo = alloca i32, align 4
  %fac1 = alloca i32, align 4
  %fac3 = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %rt = alloca i8*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !5875, metadata !DIExpression()), !dbg !5876
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !5877, metadata !DIExpression()), !dbg !5878
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5879, metadata !DIExpression()), !dbg !5880
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5881, metadata !DIExpression()), !dbg !5882
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !5883, metadata !DIExpression()), !dbg !5884
  store i8* %rect2, i8** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.declare(metadata i32* %fac1, metadata !5891, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata i32* %fac3, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.declare(metadata i8** %rt, metadata !5899, metadata !DIExpression()), !dbg !5900
  %0 = load i32, i32* %x.addr, align 4, !dbg !5901
  store i32 %0, i32* %xo, align 4, !dbg !5902
  %1 = load i8*, i8** %rect1.addr, align 8, !dbg !5903
  store i8* %1, i8** %cp1, align 8, !dbg !5904
  %2 = load i8*, i8** %rect2.addr, align 8, !dbg !5905
  store i8* %2, i8** %cp2, align 8, !dbg !5906
  %3 = load i8*, i8** %out.addr, align 8, !dbg !5907
  store i8* %3, i8** %rt, align 8, !dbg !5908
  %4 = load float, float* %facf0.addr, align 4, !dbg !5909
  %mul = fmul float 2.560000e+02, %4, !dbg !5910
  %conv = fptosi float %mul to i32, !dbg !5911
  store i32 %conv, i32* %fac1, align 4, !dbg !5912
  %5 = load float, float* %facf1.addr, align 4, !dbg !5913
  %mul1 = fmul float 2.560000e+02, %5, !dbg !5914
  %conv2 = fptosi float %mul1 to i32, !dbg !5915
  store i32 %conv2, i32* %fac3, align 4, !dbg !5916
  br label %while.cond, !dbg !5917

while.cond:                                       ; preds = %while.end78, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !5918
  %dec = add nsw i32 %6, -1, !dbg !5918
  store i32 %dec, i32* %y.addr, align 4, !dbg !5918
  %tobool = icmp ne i32 %6, 0, !dbg !5917
  br i1 %tobool, label %while.body, label %while.end79, !dbg !5917

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !5919
  store i32 %7, i32* %x.addr, align 4, !dbg !5921
  br label %while.cond3, !dbg !5922

while.cond3:                                      ; preds = %while.body6, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !5923
  %dec4 = add nsw i32 %8, -1, !dbg !5923
  store i32 %dec4, i32* %x.addr, align 4, !dbg !5923
  %tobool5 = icmp ne i32 %8, 0, !dbg !5922
  br i1 %tobool5, label %while.body6, label %while.end, !dbg !5922

while.body6:                                      ; preds = %while.cond3
  %9 = load i8*, i8** %cp1, align 8, !dbg !5924
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !5924
  %10 = load i8, i8* %arrayidx, align 1, !dbg !5924
  %conv7 = zext i8 %10 to i32, !dbg !5924
  %11 = load i32, i32* %fac1, align 4, !dbg !5926
  %12 = load i8*, i8** %cp2, align 8, !dbg !5927
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !5927
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !5927
  %conv9 = zext i8 %13 to i32, !dbg !5927
  %mul10 = mul nsw i32 %11, %conv9, !dbg !5928
  %shr = ashr i32 %mul10, 8, !dbg !5929
  %sub = sub nsw i32 %conv7, %shr, !dbg !5930
  %call = call i32 @max_ii(i32 %sub, i32 0), !dbg !5931
  %conv11 = trunc i32 %call to i8, !dbg !5931
  %14 = load i8*, i8** %rt, align 8, !dbg !5932
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !5932
  store i8 %conv11, i8* %arrayidx12, align 1, !dbg !5933
  %15 = load i8*, i8** %cp1, align 8, !dbg !5934
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !5934
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !5934
  %conv14 = zext i8 %16 to i32, !dbg !5934
  %17 = load i32, i32* %fac1, align 4, !dbg !5935
  %18 = load i8*, i8** %cp2, align 8, !dbg !5936
  %arrayidx15 = getelementptr inbounds i8, i8* %18, i64 1, !dbg !5936
  %19 = load i8, i8* %arrayidx15, align 1, !dbg !5936
  %conv16 = zext i8 %19 to i32, !dbg !5936
  %mul17 = mul nsw i32 %17, %conv16, !dbg !5937
  %shr18 = ashr i32 %mul17, 8, !dbg !5938
  %sub19 = sub nsw i32 %conv14, %shr18, !dbg !5939
  %call20 = call i32 @max_ii(i32 %sub19, i32 0), !dbg !5940
  %conv21 = trunc i32 %call20 to i8, !dbg !5940
  %20 = load i8*, i8** %rt, align 8, !dbg !5941
  %arrayidx22 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !5941
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !5942
  %21 = load i8*, i8** %cp1, align 8, !dbg !5943
  %arrayidx23 = getelementptr inbounds i8, i8* %21, i64 2, !dbg !5943
  %22 = load i8, i8* %arrayidx23, align 1, !dbg !5943
  %conv24 = zext i8 %22 to i32, !dbg !5943
  %23 = load i32, i32* %fac1, align 4, !dbg !5944
  %24 = load i8*, i8** %cp2, align 8, !dbg !5945
  %arrayidx25 = getelementptr inbounds i8, i8* %24, i64 2, !dbg !5945
  %25 = load i8, i8* %arrayidx25, align 1, !dbg !5945
  %conv26 = zext i8 %25 to i32, !dbg !5945
  %mul27 = mul nsw i32 %23, %conv26, !dbg !5946
  %shr28 = ashr i32 %mul27, 8, !dbg !5947
  %sub29 = sub nsw i32 %conv24, %shr28, !dbg !5948
  %call30 = call i32 @max_ii(i32 %sub29, i32 0), !dbg !5949
  %conv31 = trunc i32 %call30 to i8, !dbg !5949
  %26 = load i8*, i8** %rt, align 8, !dbg !5950
  %arrayidx32 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !5950
  store i8 %conv31, i8* %arrayidx32, align 1, !dbg !5951
  %27 = load i8*, i8** %cp1, align 8, !dbg !5952
  %arrayidx33 = getelementptr inbounds i8, i8* %27, i64 3, !dbg !5952
  %28 = load i8, i8* %arrayidx33, align 1, !dbg !5952
  %29 = load i8*, i8** %rt, align 8, !dbg !5953
  %arrayidx34 = getelementptr inbounds i8, i8* %29, i64 3, !dbg !5953
  store i8 %28, i8* %arrayidx34, align 1, !dbg !5954
  %30 = load i8*, i8** %cp1, align 8, !dbg !5955
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !5955
  store i8* %add.ptr, i8** %cp1, align 8, !dbg !5955
  %31 = load i8*, i8** %cp2, align 8, !dbg !5956
  %add.ptr35 = getelementptr inbounds i8, i8* %31, i64 4, !dbg !5956
  store i8* %add.ptr35, i8** %cp2, align 8, !dbg !5956
  %32 = load i8*, i8** %rt, align 8, !dbg !5957
  %add.ptr36 = getelementptr inbounds i8, i8* %32, i64 4, !dbg !5957
  store i8* %add.ptr36, i8** %rt, align 8, !dbg !5957
  br label %while.cond3, !dbg !5922, !llvm.loop !5958

while.end:                                        ; preds = %while.cond3
  %33 = load i32, i32* %y.addr, align 4, !dbg !5960
  %cmp = icmp eq i32 %33, 0, !dbg !5962
  br i1 %cmp, label %if.then, label %if.end, !dbg !5963

if.then:                                          ; preds = %while.end
  br label %while.end79, !dbg !5964

if.end:                                           ; preds = %while.end
  %34 = load i32, i32* %y.addr, align 4, !dbg !5965
  %dec38 = add nsw i32 %34, -1, !dbg !5965
  store i32 %dec38, i32* %y.addr, align 4, !dbg !5965
  %35 = load i32, i32* %xo, align 4, !dbg !5966
  store i32 %35, i32* %x.addr, align 4, !dbg !5967
  br label %while.cond39, !dbg !5968

while.cond39:                                     ; preds = %while.body42, %if.end
  %36 = load i32, i32* %x.addr, align 4, !dbg !5969
  %dec40 = add nsw i32 %36, -1, !dbg !5969
  store i32 %dec40, i32* %x.addr, align 4, !dbg !5969
  %tobool41 = icmp ne i32 %36, 0, !dbg !5968
  br i1 %tobool41, label %while.body42, label %while.end78, !dbg !5968

while.body42:                                     ; preds = %while.cond39
  %37 = load i8*, i8** %cp1, align 8, !dbg !5970
  %arrayidx43 = getelementptr inbounds i8, i8* %37, i64 0, !dbg !5970
  %38 = load i8, i8* %arrayidx43, align 1, !dbg !5970
  %conv44 = zext i8 %38 to i32, !dbg !5970
  %39 = load i32, i32* %fac3, align 4, !dbg !5972
  %40 = load i8*, i8** %cp2, align 8, !dbg !5973
  %arrayidx45 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !5973
  %41 = load i8, i8* %arrayidx45, align 1, !dbg !5973
  %conv46 = zext i8 %41 to i32, !dbg !5973
  %mul47 = mul nsw i32 %39, %conv46, !dbg !5974
  %shr48 = ashr i32 %mul47, 8, !dbg !5975
  %sub49 = sub nsw i32 %conv44, %shr48, !dbg !5976
  %call50 = call i32 @max_ii(i32 %sub49, i32 0), !dbg !5977
  %conv51 = trunc i32 %call50 to i8, !dbg !5977
  %42 = load i8*, i8** %rt, align 8, !dbg !5978
  %arrayidx52 = getelementptr inbounds i8, i8* %42, i64 0, !dbg !5978
  store i8 %conv51, i8* %arrayidx52, align 1, !dbg !5979
  %43 = load i8*, i8** %cp1, align 8, !dbg !5980
  %arrayidx53 = getelementptr inbounds i8, i8* %43, i64 1, !dbg !5980
  %44 = load i8, i8* %arrayidx53, align 1, !dbg !5980
  %conv54 = zext i8 %44 to i32, !dbg !5980
  %45 = load i32, i32* %fac3, align 4, !dbg !5981
  %46 = load i8*, i8** %cp2, align 8, !dbg !5982
  %arrayidx55 = getelementptr inbounds i8, i8* %46, i64 1, !dbg !5982
  %47 = load i8, i8* %arrayidx55, align 1, !dbg !5982
  %conv56 = zext i8 %47 to i32, !dbg !5982
  %mul57 = mul nsw i32 %45, %conv56, !dbg !5983
  %shr58 = ashr i32 %mul57, 8, !dbg !5984
  %sub59 = sub nsw i32 %conv54, %shr58, !dbg !5985
  %call60 = call i32 @max_ii(i32 %sub59, i32 0), !dbg !5986
  %conv61 = trunc i32 %call60 to i8, !dbg !5986
  %48 = load i8*, i8** %rt, align 8, !dbg !5987
  %arrayidx62 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !5987
  store i8 %conv61, i8* %arrayidx62, align 1, !dbg !5988
  %49 = load i8*, i8** %cp1, align 8, !dbg !5989
  %arrayidx63 = getelementptr inbounds i8, i8* %49, i64 2, !dbg !5989
  %50 = load i8, i8* %arrayidx63, align 1, !dbg !5989
  %conv64 = zext i8 %50 to i32, !dbg !5989
  %51 = load i32, i32* %fac3, align 4, !dbg !5990
  %52 = load i8*, i8** %cp2, align 8, !dbg !5991
  %arrayidx65 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !5991
  %53 = load i8, i8* %arrayidx65, align 1, !dbg !5991
  %conv66 = zext i8 %53 to i32, !dbg !5991
  %mul67 = mul nsw i32 %51, %conv66, !dbg !5992
  %shr68 = ashr i32 %mul67, 8, !dbg !5993
  %sub69 = sub nsw i32 %conv64, %shr68, !dbg !5994
  %call70 = call i32 @max_ii(i32 %sub69, i32 0), !dbg !5995
  %conv71 = trunc i32 %call70 to i8, !dbg !5995
  %54 = load i8*, i8** %rt, align 8, !dbg !5996
  %arrayidx72 = getelementptr inbounds i8, i8* %54, i64 2, !dbg !5996
  store i8 %conv71, i8* %arrayidx72, align 1, !dbg !5997
  %55 = load i8*, i8** %cp1, align 8, !dbg !5998
  %arrayidx73 = getelementptr inbounds i8, i8* %55, i64 3, !dbg !5998
  %56 = load i8, i8* %arrayidx73, align 1, !dbg !5998
  %57 = load i8*, i8** %rt, align 8, !dbg !5999
  %arrayidx74 = getelementptr inbounds i8, i8* %57, i64 3, !dbg !5999
  store i8 %56, i8* %arrayidx74, align 1, !dbg !6000
  %58 = load i8*, i8** %cp1, align 8, !dbg !6001
  %add.ptr75 = getelementptr inbounds i8, i8* %58, i64 4, !dbg !6001
  store i8* %add.ptr75, i8** %cp1, align 8, !dbg !6001
  %59 = load i8*, i8** %cp2, align 8, !dbg !6002
  %add.ptr76 = getelementptr inbounds i8, i8* %59, i64 4, !dbg !6002
  store i8* %add.ptr76, i8** %cp2, align 8, !dbg !6002
  %60 = load i8*, i8** %rt, align 8, !dbg !6003
  %add.ptr77 = getelementptr inbounds i8, i8* %60, i64 4, !dbg !6003
  store i8* %add.ptr77, i8** %rt, align 8, !dbg !6003
  br label %while.cond39, !dbg !5968, !llvm.loop !6004

while.end78:                                      ; preds = %while.cond39
  br label %while.cond, !dbg !5917, !llvm.loop !6006

while.end79:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !6008
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !6009 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  %0 = load float, float* %a.addr, align 4, !dbg !6016
  %1 = load float, float* %b.addr, align 4, !dbg !6017
  %cmp = fcmp ogt float %0, %1, !dbg !6018
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6019

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !6020
  br label %cond.end, !dbg !6019

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !6021
  br label %cond.end, !dbg !6019

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6019
  ret float %cond, !dbg !6022
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !6023 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6024, metadata !DIExpression()), !dbg !6025
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !6026, metadata !DIExpression()), !dbg !6027
  %0 = load i32, i32* %b.addr, align 4, !dbg !6028
  %1 = load i32, i32* %a.addr, align 4, !dbg !6029
  %cmp = icmp slt i32 %0, %1, !dbg !6030
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6031

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !6032
  br label %cond.end, !dbg !6031

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !6033
  br label %cond.end, !dbg !6031

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6031
  ret i32 %cond, !dbg !6034
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_mul_effect_float(float %facf0, float %facf1, i32 %x, i32 %y, float* %rect1, float* %rect2, float* %out) #0 !dbg !6035 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %xo = alloca i32, align 4
  %fac1 = alloca float, align 4
  %fac3 = alloca float, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %rt = alloca float*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !6036, metadata !DIExpression()), !dbg !6037
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !6038, metadata !DIExpression()), !dbg !6039
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6040, metadata !DIExpression()), !dbg !6041
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6042, metadata !DIExpression()), !dbg !6043
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  store float* %rect2, float** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2.addr, metadata !6046, metadata !DIExpression()), !dbg !6047
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !6048, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !6050, metadata !DIExpression()), !dbg !6051
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !6052, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.declare(metadata float* %fac3, metadata !6054, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !6056, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !6058, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.declare(metadata float** %rt, metadata !6060, metadata !DIExpression()), !dbg !6061
  %0 = load i32, i32* %x.addr, align 4, !dbg !6062
  store i32 %0, i32* %xo, align 4, !dbg !6063
  %1 = load float*, float** %rect1.addr, align 8, !dbg !6064
  store float* %1, float** %rt1, align 8, !dbg !6065
  %2 = load float*, float** %rect2.addr, align 8, !dbg !6066
  store float* %2, float** %rt2, align 8, !dbg !6067
  %3 = load float*, float** %out.addr, align 8, !dbg !6068
  store float* %3, float** %rt, align 8, !dbg !6069
  %4 = load float, float* %facf0.addr, align 4, !dbg !6070
  store float %4, float* %fac1, align 4, !dbg !6071
  %5 = load float, float* %facf1.addr, align 4, !dbg !6072
  store float %5, float* %fac3, align 4, !dbg !6073
  br label %while.cond, !dbg !6074

while.cond:                                       ; preds = %while.end75, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !6075
  %dec = add nsw i32 %6, -1, !dbg !6075
  store i32 %dec, i32* %y.addr, align 4, !dbg !6075
  %tobool = icmp ne i32 %6, 0, !dbg !6074
  br i1 %tobool, label %while.body, label %while.end76, !dbg !6074

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !6076
  store i32 %7, i32* %x.addr, align 4, !dbg !6078
  br label %while.cond1, !dbg !6079

while.cond1:                                      ; preds = %while.body4, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !6080
  %dec2 = add nsw i32 %8, -1, !dbg !6080
  store i32 %dec2, i32* %x.addr, align 4, !dbg !6080
  %tobool3 = icmp ne i32 %8, 0, !dbg !6079
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !6079

while.body4:                                      ; preds = %while.cond1
  %9 = load float*, float** %rt1, align 8, !dbg !6081
  %arrayidx = getelementptr inbounds float, float* %9, i64 0, !dbg !6081
  %10 = load float, float* %arrayidx, align 4, !dbg !6081
  %11 = load float, float* %fac1, align 4, !dbg !6083
  %12 = load float*, float** %rt1, align 8, !dbg !6084
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 0, !dbg !6084
  %13 = load float, float* %arrayidx5, align 4, !dbg !6084
  %mul = fmul float %11, %13, !dbg !6085
  %14 = load float*, float** %rt2, align 8, !dbg !6086
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 0, !dbg !6086
  %15 = load float, float* %arrayidx6, align 4, !dbg !6086
  %sub = fsub float %15, 1.000000e+00, !dbg !6087
  %mul7 = fmul float %mul, %sub, !dbg !6088
  %add = fadd float %10, %mul7, !dbg !6089
  %16 = load float*, float** %rt, align 8, !dbg !6090
  %arrayidx8 = getelementptr inbounds float, float* %16, i64 0, !dbg !6090
  store float %add, float* %arrayidx8, align 4, !dbg !6091
  %17 = load float*, float** %rt1, align 8, !dbg !6092
  %arrayidx9 = getelementptr inbounds float, float* %17, i64 1, !dbg !6092
  %18 = load float, float* %arrayidx9, align 4, !dbg !6092
  %19 = load float, float* %fac1, align 4, !dbg !6093
  %20 = load float*, float** %rt1, align 8, !dbg !6094
  %arrayidx10 = getelementptr inbounds float, float* %20, i64 1, !dbg !6094
  %21 = load float, float* %arrayidx10, align 4, !dbg !6094
  %mul11 = fmul float %19, %21, !dbg !6095
  %22 = load float*, float** %rt2, align 8, !dbg !6096
  %arrayidx12 = getelementptr inbounds float, float* %22, i64 1, !dbg !6096
  %23 = load float, float* %arrayidx12, align 4, !dbg !6096
  %sub13 = fsub float %23, 1.000000e+00, !dbg !6097
  %mul14 = fmul float %mul11, %sub13, !dbg !6098
  %add15 = fadd float %18, %mul14, !dbg !6099
  %24 = load float*, float** %rt, align 8, !dbg !6100
  %arrayidx16 = getelementptr inbounds float, float* %24, i64 1, !dbg !6100
  store float %add15, float* %arrayidx16, align 4, !dbg !6101
  %25 = load float*, float** %rt1, align 8, !dbg !6102
  %arrayidx17 = getelementptr inbounds float, float* %25, i64 2, !dbg !6102
  %26 = load float, float* %arrayidx17, align 4, !dbg !6102
  %27 = load float, float* %fac1, align 4, !dbg !6103
  %28 = load float*, float** %rt1, align 8, !dbg !6104
  %arrayidx18 = getelementptr inbounds float, float* %28, i64 2, !dbg !6104
  %29 = load float, float* %arrayidx18, align 4, !dbg !6104
  %mul19 = fmul float %27, %29, !dbg !6105
  %30 = load float*, float** %rt2, align 8, !dbg !6106
  %arrayidx20 = getelementptr inbounds float, float* %30, i64 2, !dbg !6106
  %31 = load float, float* %arrayidx20, align 4, !dbg !6106
  %sub21 = fsub float %31, 1.000000e+00, !dbg !6107
  %mul22 = fmul float %mul19, %sub21, !dbg !6108
  %add23 = fadd float %26, %mul22, !dbg !6109
  %32 = load float*, float** %rt, align 8, !dbg !6110
  %arrayidx24 = getelementptr inbounds float, float* %32, i64 2, !dbg !6110
  store float %add23, float* %arrayidx24, align 4, !dbg !6111
  %33 = load float*, float** %rt1, align 8, !dbg !6112
  %arrayidx25 = getelementptr inbounds float, float* %33, i64 3, !dbg !6112
  %34 = load float, float* %arrayidx25, align 4, !dbg !6112
  %35 = load float, float* %fac1, align 4, !dbg !6113
  %36 = load float*, float** %rt1, align 8, !dbg !6114
  %arrayidx26 = getelementptr inbounds float, float* %36, i64 3, !dbg !6114
  %37 = load float, float* %arrayidx26, align 4, !dbg !6114
  %mul27 = fmul float %35, %37, !dbg !6115
  %38 = load float*, float** %rt2, align 8, !dbg !6116
  %arrayidx28 = getelementptr inbounds float, float* %38, i64 3, !dbg !6116
  %39 = load float, float* %arrayidx28, align 4, !dbg !6116
  %sub29 = fsub float %39, 1.000000e+00, !dbg !6117
  %mul30 = fmul float %mul27, %sub29, !dbg !6118
  %add31 = fadd float %34, %mul30, !dbg !6119
  %40 = load float*, float** %rt, align 8, !dbg !6120
  %arrayidx32 = getelementptr inbounds float, float* %40, i64 3, !dbg !6120
  store float %add31, float* %arrayidx32, align 4, !dbg !6121
  %41 = load float*, float** %rt1, align 8, !dbg !6122
  %add.ptr = getelementptr inbounds float, float* %41, i64 4, !dbg !6122
  store float* %add.ptr, float** %rt1, align 8, !dbg !6122
  %42 = load float*, float** %rt2, align 8, !dbg !6123
  %add.ptr33 = getelementptr inbounds float, float* %42, i64 4, !dbg !6123
  store float* %add.ptr33, float** %rt2, align 8, !dbg !6123
  %43 = load float*, float** %rt, align 8, !dbg !6124
  %add.ptr34 = getelementptr inbounds float, float* %43, i64 4, !dbg !6124
  store float* %add.ptr34, float** %rt, align 8, !dbg !6124
  br label %while.cond1, !dbg !6079, !llvm.loop !6125

while.end:                                        ; preds = %while.cond1
  %44 = load i32, i32* %y.addr, align 4, !dbg !6127
  %cmp = icmp eq i32 %44, 0, !dbg !6129
  br i1 %cmp, label %if.then, label %if.end, !dbg !6130

if.then:                                          ; preds = %while.end
  br label %while.end76, !dbg !6131

if.end:                                           ; preds = %while.end
  %45 = load i32, i32* %y.addr, align 4, !dbg !6132
  %dec35 = add nsw i32 %45, -1, !dbg !6132
  store i32 %dec35, i32* %y.addr, align 4, !dbg !6132
  %46 = load i32, i32* %xo, align 4, !dbg !6133
  store i32 %46, i32* %x.addr, align 4, !dbg !6134
  br label %while.cond36, !dbg !6135

while.cond36:                                     ; preds = %while.body39, %if.end
  %47 = load i32, i32* %x.addr, align 4, !dbg !6136
  %dec37 = add nsw i32 %47, -1, !dbg !6136
  store i32 %dec37, i32* %x.addr, align 4, !dbg !6136
  %tobool38 = icmp ne i32 %47, 0, !dbg !6135
  br i1 %tobool38, label %while.body39, label %while.end75, !dbg !6135

while.body39:                                     ; preds = %while.cond36
  %48 = load float*, float** %rt1, align 8, !dbg !6137
  %arrayidx40 = getelementptr inbounds float, float* %48, i64 0, !dbg !6137
  %49 = load float, float* %arrayidx40, align 4, !dbg !6137
  %50 = load float, float* %fac3, align 4, !dbg !6139
  %51 = load float*, float** %rt1, align 8, !dbg !6140
  %arrayidx41 = getelementptr inbounds float, float* %51, i64 0, !dbg !6140
  %52 = load float, float* %arrayidx41, align 4, !dbg !6140
  %mul42 = fmul float %50, %52, !dbg !6141
  %53 = load float*, float** %rt2, align 8, !dbg !6142
  %arrayidx43 = getelementptr inbounds float, float* %53, i64 0, !dbg !6142
  %54 = load float, float* %arrayidx43, align 4, !dbg !6142
  %sub44 = fsub float %54, 1.000000e+00, !dbg !6143
  %mul45 = fmul float %mul42, %sub44, !dbg !6144
  %add46 = fadd float %49, %mul45, !dbg !6145
  %55 = load float*, float** %rt, align 8, !dbg !6146
  %arrayidx47 = getelementptr inbounds float, float* %55, i64 0, !dbg !6146
  store float %add46, float* %arrayidx47, align 4, !dbg !6147
  %56 = load float*, float** %rt1, align 8, !dbg !6148
  %arrayidx48 = getelementptr inbounds float, float* %56, i64 1, !dbg !6148
  %57 = load float, float* %arrayidx48, align 4, !dbg !6148
  %58 = load float, float* %fac3, align 4, !dbg !6149
  %59 = load float*, float** %rt1, align 8, !dbg !6150
  %arrayidx49 = getelementptr inbounds float, float* %59, i64 1, !dbg !6150
  %60 = load float, float* %arrayidx49, align 4, !dbg !6150
  %mul50 = fmul float %58, %60, !dbg !6151
  %61 = load float*, float** %rt2, align 8, !dbg !6152
  %arrayidx51 = getelementptr inbounds float, float* %61, i64 1, !dbg !6152
  %62 = load float, float* %arrayidx51, align 4, !dbg !6152
  %sub52 = fsub float %62, 1.000000e+00, !dbg !6153
  %mul53 = fmul float %mul50, %sub52, !dbg !6154
  %add54 = fadd float %57, %mul53, !dbg !6155
  %63 = load float*, float** %rt, align 8, !dbg !6156
  %arrayidx55 = getelementptr inbounds float, float* %63, i64 1, !dbg !6156
  store float %add54, float* %arrayidx55, align 4, !dbg !6157
  %64 = load float*, float** %rt1, align 8, !dbg !6158
  %arrayidx56 = getelementptr inbounds float, float* %64, i64 2, !dbg !6158
  %65 = load float, float* %arrayidx56, align 4, !dbg !6158
  %66 = load float, float* %fac3, align 4, !dbg !6159
  %67 = load float*, float** %rt1, align 8, !dbg !6160
  %arrayidx57 = getelementptr inbounds float, float* %67, i64 2, !dbg !6160
  %68 = load float, float* %arrayidx57, align 4, !dbg !6160
  %mul58 = fmul float %66, %68, !dbg !6161
  %69 = load float*, float** %rt2, align 8, !dbg !6162
  %arrayidx59 = getelementptr inbounds float, float* %69, i64 2, !dbg !6162
  %70 = load float, float* %arrayidx59, align 4, !dbg !6162
  %sub60 = fsub float %70, 1.000000e+00, !dbg !6163
  %mul61 = fmul float %mul58, %sub60, !dbg !6164
  %add62 = fadd float %65, %mul61, !dbg !6165
  %71 = load float*, float** %rt, align 8, !dbg !6166
  %arrayidx63 = getelementptr inbounds float, float* %71, i64 2, !dbg !6166
  store float %add62, float* %arrayidx63, align 4, !dbg !6167
  %72 = load float*, float** %rt1, align 8, !dbg !6168
  %arrayidx64 = getelementptr inbounds float, float* %72, i64 3, !dbg !6168
  %73 = load float, float* %arrayidx64, align 4, !dbg !6168
  %74 = load float, float* %fac3, align 4, !dbg !6169
  %75 = load float*, float** %rt1, align 8, !dbg !6170
  %arrayidx65 = getelementptr inbounds float, float* %75, i64 3, !dbg !6170
  %76 = load float, float* %arrayidx65, align 4, !dbg !6170
  %mul66 = fmul float %74, %76, !dbg !6171
  %77 = load float*, float** %rt2, align 8, !dbg !6172
  %arrayidx67 = getelementptr inbounds float, float* %77, i64 3, !dbg !6172
  %78 = load float, float* %arrayidx67, align 4, !dbg !6172
  %sub68 = fsub float %78, 1.000000e+00, !dbg !6173
  %mul69 = fmul float %mul66, %sub68, !dbg !6174
  %add70 = fadd float %73, %mul69, !dbg !6175
  %79 = load float*, float** %rt, align 8, !dbg !6176
  %arrayidx71 = getelementptr inbounds float, float* %79, i64 3, !dbg !6176
  store float %add70, float* %arrayidx71, align 4, !dbg !6177
  %80 = load float*, float** %rt1, align 8, !dbg !6178
  %add.ptr72 = getelementptr inbounds float, float* %80, i64 4, !dbg !6178
  store float* %add.ptr72, float** %rt1, align 8, !dbg !6178
  %81 = load float*, float** %rt2, align 8, !dbg !6179
  %add.ptr73 = getelementptr inbounds float, float* %81, i64 4, !dbg !6179
  store float* %add.ptr73, float** %rt2, align 8, !dbg !6179
  %82 = load float*, float** %rt, align 8, !dbg !6180
  %add.ptr74 = getelementptr inbounds float, float* %82, i64 4, !dbg !6180
  store float* %add.ptr74, float** %rt, align 8, !dbg !6180
  br label %while.cond36, !dbg !6135, !llvm.loop !6181

while.end75:                                      ; preds = %while.cond36
  br label %while.cond, !dbg !6074, !llvm.loop !6183

while.end76:                                      ; preds = %if.then, %while.cond
  ret void, !dbg !6185
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_mul_effect_byte(float %facf0, float %facf1, i32 %x, i32 %y, i8* %rect1, i8* %rect2, i8* %out) #0 !dbg !6186 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %xo = alloca i32, align 4
  %fac1 = alloca i32, align 4
  %fac3 = alloca i32, align 4
  %rt1 = alloca i8*, align 8
  %rt2 = alloca i8*, align 8
  %rt = alloca i8*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !6187, metadata !DIExpression()), !dbg !6188
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6191, metadata !DIExpression()), !dbg !6192
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6193, metadata !DIExpression()), !dbg !6194
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !6195, metadata !DIExpression()), !dbg !6196
  store i8* %rect2, i8** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !6201, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.declare(metadata i32* %fac1, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.declare(metadata i32* %fac3, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata i8** %rt1, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata i8** %rt2, metadata !6209, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.declare(metadata i8** %rt, metadata !6211, metadata !DIExpression()), !dbg !6212
  %0 = load i32, i32* %x.addr, align 4, !dbg !6213
  store i32 %0, i32* %xo, align 4, !dbg !6214
  %1 = load i8*, i8** %rect1.addr, align 8, !dbg !6215
  store i8* %1, i8** %rt1, align 8, !dbg !6216
  %2 = load i8*, i8** %rect2.addr, align 8, !dbg !6217
  store i8* %2, i8** %rt2, align 8, !dbg !6218
  %3 = load i8*, i8** %out.addr, align 8, !dbg !6219
  store i8* %3, i8** %rt, align 8, !dbg !6220
  %4 = load float, float* %facf0.addr, align 4, !dbg !6221
  %mul = fmul float 2.560000e+02, %4, !dbg !6222
  %conv = fptosi float %mul to i32, !dbg !6223
  store i32 %conv, i32* %fac1, align 4, !dbg !6224
  %5 = load float, float* %facf1.addr, align 4, !dbg !6225
  %mul1 = fmul float 2.560000e+02, %5, !dbg !6226
  %conv2 = fptosi float %mul1 to i32, !dbg !6227
  store i32 %conv2, i32* %fac3, align 4, !dbg !6228
  br label %while.cond, !dbg !6229

while.cond:                                       ; preds = %while.end118, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !6230
  %dec = add nsw i32 %6, -1, !dbg !6230
  store i32 %dec, i32* %y.addr, align 4, !dbg !6230
  %tobool = icmp ne i32 %6, 0, !dbg !6229
  br i1 %tobool, label %while.body, label %while.end119, !dbg !6229

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !6231
  store i32 %7, i32* %x.addr, align 4, !dbg !6233
  br label %while.cond3, !dbg !6234

while.cond3:                                      ; preds = %while.body6, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !6235
  %dec4 = add nsw i32 %8, -1, !dbg !6235
  store i32 %dec4, i32* %x.addr, align 4, !dbg !6235
  %tobool5 = icmp ne i32 %8, 0, !dbg !6234
  br i1 %tobool5, label %while.body6, label %while.end, !dbg !6234

while.body6:                                      ; preds = %while.cond3
  %9 = load i8*, i8** %rt1, align 8, !dbg !6236
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !6236
  %10 = load i8, i8* %arrayidx, align 1, !dbg !6236
  %conv7 = zext i8 %10 to i32, !dbg !6236
  %11 = load i32, i32* %fac1, align 4, !dbg !6238
  %12 = load i8*, i8** %rt1, align 8, !dbg !6239
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !6239
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !6239
  %conv9 = zext i8 %13 to i32, !dbg !6239
  %mul10 = mul nsw i32 %11, %conv9, !dbg !6240
  %14 = load i8*, i8** %rt2, align 8, !dbg !6241
  %arrayidx11 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !6241
  %15 = load i8, i8* %arrayidx11, align 1, !dbg !6241
  %conv12 = zext i8 %15 to i32, !dbg !6241
  %sub = sub nsw i32 %conv12, 255, !dbg !6242
  %mul13 = mul nsw i32 %mul10, %sub, !dbg !6243
  %shr = ashr i32 %mul13, 16, !dbg !6244
  %add = add nsw i32 %conv7, %shr, !dbg !6245
  %conv14 = trunc i32 %add to i8, !dbg !6236
  %16 = load i8*, i8** %rt, align 8, !dbg !6246
  %arrayidx15 = getelementptr inbounds i8, i8* %16, i64 0, !dbg !6246
  store i8 %conv14, i8* %arrayidx15, align 1, !dbg !6247
  %17 = load i8*, i8** %rt1, align 8, !dbg !6248
  %arrayidx16 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !6248
  %18 = load i8, i8* %arrayidx16, align 1, !dbg !6248
  %conv17 = zext i8 %18 to i32, !dbg !6248
  %19 = load i32, i32* %fac1, align 4, !dbg !6249
  %20 = load i8*, i8** %rt1, align 8, !dbg !6250
  %arrayidx18 = getelementptr inbounds i8, i8* %20, i64 1, !dbg !6250
  %21 = load i8, i8* %arrayidx18, align 1, !dbg !6250
  %conv19 = zext i8 %21 to i32, !dbg !6250
  %mul20 = mul nsw i32 %19, %conv19, !dbg !6251
  %22 = load i8*, i8** %rt2, align 8, !dbg !6252
  %arrayidx21 = getelementptr inbounds i8, i8* %22, i64 1, !dbg !6252
  %23 = load i8, i8* %arrayidx21, align 1, !dbg !6252
  %conv22 = zext i8 %23 to i32, !dbg !6252
  %sub23 = sub nsw i32 %conv22, 255, !dbg !6253
  %mul24 = mul nsw i32 %mul20, %sub23, !dbg !6254
  %shr25 = ashr i32 %mul24, 16, !dbg !6255
  %add26 = add nsw i32 %conv17, %shr25, !dbg !6256
  %conv27 = trunc i32 %add26 to i8, !dbg !6248
  %24 = load i8*, i8** %rt, align 8, !dbg !6257
  %arrayidx28 = getelementptr inbounds i8, i8* %24, i64 1, !dbg !6257
  store i8 %conv27, i8* %arrayidx28, align 1, !dbg !6258
  %25 = load i8*, i8** %rt1, align 8, !dbg !6259
  %arrayidx29 = getelementptr inbounds i8, i8* %25, i64 2, !dbg !6259
  %26 = load i8, i8* %arrayidx29, align 1, !dbg !6259
  %conv30 = zext i8 %26 to i32, !dbg !6259
  %27 = load i32, i32* %fac1, align 4, !dbg !6260
  %28 = load i8*, i8** %rt1, align 8, !dbg !6261
  %arrayidx31 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !6261
  %29 = load i8, i8* %arrayidx31, align 1, !dbg !6261
  %conv32 = zext i8 %29 to i32, !dbg !6261
  %mul33 = mul nsw i32 %27, %conv32, !dbg !6262
  %30 = load i8*, i8** %rt2, align 8, !dbg !6263
  %arrayidx34 = getelementptr inbounds i8, i8* %30, i64 2, !dbg !6263
  %31 = load i8, i8* %arrayidx34, align 1, !dbg !6263
  %conv35 = zext i8 %31 to i32, !dbg !6263
  %sub36 = sub nsw i32 %conv35, 255, !dbg !6264
  %mul37 = mul nsw i32 %mul33, %sub36, !dbg !6265
  %shr38 = ashr i32 %mul37, 16, !dbg !6266
  %add39 = add nsw i32 %conv30, %shr38, !dbg !6267
  %conv40 = trunc i32 %add39 to i8, !dbg !6259
  %32 = load i8*, i8** %rt, align 8, !dbg !6268
  %arrayidx41 = getelementptr inbounds i8, i8* %32, i64 2, !dbg !6268
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !6269
  %33 = load i8*, i8** %rt1, align 8, !dbg !6270
  %arrayidx42 = getelementptr inbounds i8, i8* %33, i64 3, !dbg !6270
  %34 = load i8, i8* %arrayidx42, align 1, !dbg !6270
  %conv43 = zext i8 %34 to i32, !dbg !6270
  %35 = load i32, i32* %fac1, align 4, !dbg !6271
  %36 = load i8*, i8** %rt1, align 8, !dbg !6272
  %arrayidx44 = getelementptr inbounds i8, i8* %36, i64 3, !dbg !6272
  %37 = load i8, i8* %arrayidx44, align 1, !dbg !6272
  %conv45 = zext i8 %37 to i32, !dbg !6272
  %mul46 = mul nsw i32 %35, %conv45, !dbg !6273
  %38 = load i8*, i8** %rt2, align 8, !dbg !6274
  %arrayidx47 = getelementptr inbounds i8, i8* %38, i64 3, !dbg !6274
  %39 = load i8, i8* %arrayidx47, align 1, !dbg !6274
  %conv48 = zext i8 %39 to i32, !dbg !6274
  %sub49 = sub nsw i32 %conv48, 255, !dbg !6275
  %mul50 = mul nsw i32 %mul46, %sub49, !dbg !6276
  %shr51 = ashr i32 %mul50, 16, !dbg !6277
  %add52 = add nsw i32 %conv43, %shr51, !dbg !6278
  %conv53 = trunc i32 %add52 to i8, !dbg !6270
  %40 = load i8*, i8** %rt, align 8, !dbg !6279
  %arrayidx54 = getelementptr inbounds i8, i8* %40, i64 3, !dbg !6279
  store i8 %conv53, i8* %arrayidx54, align 1, !dbg !6280
  %41 = load i8*, i8** %rt1, align 8, !dbg !6281
  %add.ptr = getelementptr inbounds i8, i8* %41, i64 4, !dbg !6281
  store i8* %add.ptr, i8** %rt1, align 8, !dbg !6281
  %42 = load i8*, i8** %rt2, align 8, !dbg !6282
  %add.ptr55 = getelementptr inbounds i8, i8* %42, i64 4, !dbg !6282
  store i8* %add.ptr55, i8** %rt2, align 8, !dbg !6282
  %43 = load i8*, i8** %rt, align 8, !dbg !6283
  %add.ptr56 = getelementptr inbounds i8, i8* %43, i64 4, !dbg !6283
  store i8* %add.ptr56, i8** %rt, align 8, !dbg !6283
  br label %while.cond3, !dbg !6234, !llvm.loop !6284

while.end:                                        ; preds = %while.cond3
  %44 = load i32, i32* %y.addr, align 4, !dbg !6286
  %cmp = icmp eq i32 %44, 0, !dbg !6288
  br i1 %cmp, label %if.then, label %if.end, !dbg !6289

if.then:                                          ; preds = %while.end
  br label %while.end119, !dbg !6290

if.end:                                           ; preds = %while.end
  %45 = load i32, i32* %y.addr, align 4, !dbg !6291
  %dec58 = add nsw i32 %45, -1, !dbg !6291
  store i32 %dec58, i32* %y.addr, align 4, !dbg !6291
  %46 = load i32, i32* %xo, align 4, !dbg !6292
  store i32 %46, i32* %x.addr, align 4, !dbg !6293
  br label %while.cond59, !dbg !6294

while.cond59:                                     ; preds = %while.body62, %if.end
  %47 = load i32, i32* %x.addr, align 4, !dbg !6295
  %dec60 = add nsw i32 %47, -1, !dbg !6295
  store i32 %dec60, i32* %x.addr, align 4, !dbg !6295
  %tobool61 = icmp ne i32 %47, 0, !dbg !6294
  br i1 %tobool61, label %while.body62, label %while.end118, !dbg !6294

while.body62:                                     ; preds = %while.cond59
  %48 = load i8*, i8** %rt1, align 8, !dbg !6296
  %arrayidx63 = getelementptr inbounds i8, i8* %48, i64 0, !dbg !6296
  %49 = load i8, i8* %arrayidx63, align 1, !dbg !6296
  %conv64 = zext i8 %49 to i32, !dbg !6296
  %50 = load i32, i32* %fac3, align 4, !dbg !6298
  %51 = load i8*, i8** %rt1, align 8, !dbg !6299
  %arrayidx65 = getelementptr inbounds i8, i8* %51, i64 0, !dbg !6299
  %52 = load i8, i8* %arrayidx65, align 1, !dbg !6299
  %conv66 = zext i8 %52 to i32, !dbg !6299
  %mul67 = mul nsw i32 %50, %conv66, !dbg !6300
  %53 = load i8*, i8** %rt2, align 8, !dbg !6301
  %arrayidx68 = getelementptr inbounds i8, i8* %53, i64 0, !dbg !6301
  %54 = load i8, i8* %arrayidx68, align 1, !dbg !6301
  %conv69 = zext i8 %54 to i32, !dbg !6301
  %sub70 = sub nsw i32 %conv69, 255, !dbg !6302
  %mul71 = mul nsw i32 %mul67, %sub70, !dbg !6303
  %shr72 = ashr i32 %mul71, 16, !dbg !6304
  %add73 = add nsw i32 %conv64, %shr72, !dbg !6305
  %conv74 = trunc i32 %add73 to i8, !dbg !6296
  %55 = load i8*, i8** %rt, align 8, !dbg !6306
  %arrayidx75 = getelementptr inbounds i8, i8* %55, i64 0, !dbg !6306
  store i8 %conv74, i8* %arrayidx75, align 1, !dbg !6307
  %56 = load i8*, i8** %rt1, align 8, !dbg !6308
  %arrayidx76 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !6308
  %57 = load i8, i8* %arrayidx76, align 1, !dbg !6308
  %conv77 = zext i8 %57 to i32, !dbg !6308
  %58 = load i32, i32* %fac3, align 4, !dbg !6309
  %59 = load i8*, i8** %rt1, align 8, !dbg !6310
  %arrayidx78 = getelementptr inbounds i8, i8* %59, i64 1, !dbg !6310
  %60 = load i8, i8* %arrayidx78, align 1, !dbg !6310
  %conv79 = zext i8 %60 to i32, !dbg !6310
  %mul80 = mul nsw i32 %58, %conv79, !dbg !6311
  %61 = load i8*, i8** %rt2, align 8, !dbg !6312
  %arrayidx81 = getelementptr inbounds i8, i8* %61, i64 1, !dbg !6312
  %62 = load i8, i8* %arrayidx81, align 1, !dbg !6312
  %conv82 = zext i8 %62 to i32, !dbg !6312
  %sub83 = sub nsw i32 %conv82, 255, !dbg !6313
  %mul84 = mul nsw i32 %mul80, %sub83, !dbg !6314
  %shr85 = ashr i32 %mul84, 16, !dbg !6315
  %add86 = add nsw i32 %conv77, %shr85, !dbg !6316
  %conv87 = trunc i32 %add86 to i8, !dbg !6308
  %63 = load i8*, i8** %rt, align 8, !dbg !6317
  %arrayidx88 = getelementptr inbounds i8, i8* %63, i64 1, !dbg !6317
  store i8 %conv87, i8* %arrayidx88, align 1, !dbg !6318
  %64 = load i8*, i8** %rt1, align 8, !dbg !6319
  %arrayidx89 = getelementptr inbounds i8, i8* %64, i64 2, !dbg !6319
  %65 = load i8, i8* %arrayidx89, align 1, !dbg !6319
  %conv90 = zext i8 %65 to i32, !dbg !6319
  %66 = load i32, i32* %fac3, align 4, !dbg !6320
  %67 = load i8*, i8** %rt1, align 8, !dbg !6321
  %arrayidx91 = getelementptr inbounds i8, i8* %67, i64 2, !dbg !6321
  %68 = load i8, i8* %arrayidx91, align 1, !dbg !6321
  %conv92 = zext i8 %68 to i32, !dbg !6321
  %mul93 = mul nsw i32 %66, %conv92, !dbg !6322
  %69 = load i8*, i8** %rt2, align 8, !dbg !6323
  %arrayidx94 = getelementptr inbounds i8, i8* %69, i64 2, !dbg !6323
  %70 = load i8, i8* %arrayidx94, align 1, !dbg !6323
  %conv95 = zext i8 %70 to i32, !dbg !6323
  %sub96 = sub nsw i32 %conv95, 255, !dbg !6324
  %mul97 = mul nsw i32 %mul93, %sub96, !dbg !6325
  %shr98 = ashr i32 %mul97, 16, !dbg !6326
  %add99 = add nsw i32 %conv90, %shr98, !dbg !6327
  %conv100 = trunc i32 %add99 to i8, !dbg !6319
  %71 = load i8*, i8** %rt, align 8, !dbg !6328
  %arrayidx101 = getelementptr inbounds i8, i8* %71, i64 2, !dbg !6328
  store i8 %conv100, i8* %arrayidx101, align 1, !dbg !6329
  %72 = load i8*, i8** %rt1, align 8, !dbg !6330
  %arrayidx102 = getelementptr inbounds i8, i8* %72, i64 3, !dbg !6330
  %73 = load i8, i8* %arrayidx102, align 1, !dbg !6330
  %conv103 = zext i8 %73 to i32, !dbg !6330
  %74 = load i32, i32* %fac3, align 4, !dbg !6331
  %75 = load i8*, i8** %rt1, align 8, !dbg !6332
  %arrayidx104 = getelementptr inbounds i8, i8* %75, i64 3, !dbg !6332
  %76 = load i8, i8* %arrayidx104, align 1, !dbg !6332
  %conv105 = zext i8 %76 to i32, !dbg !6332
  %mul106 = mul nsw i32 %74, %conv105, !dbg !6333
  %77 = load i8*, i8** %rt2, align 8, !dbg !6334
  %arrayidx107 = getelementptr inbounds i8, i8* %77, i64 3, !dbg !6334
  %78 = load i8, i8* %arrayidx107, align 1, !dbg !6334
  %conv108 = zext i8 %78 to i32, !dbg !6334
  %sub109 = sub nsw i32 %conv108, 255, !dbg !6335
  %mul110 = mul nsw i32 %mul106, %sub109, !dbg !6336
  %shr111 = ashr i32 %mul110, 16, !dbg !6337
  %add112 = add nsw i32 %conv103, %shr111, !dbg !6338
  %conv113 = trunc i32 %add112 to i8, !dbg !6330
  %79 = load i8*, i8** %rt, align 8, !dbg !6339
  %arrayidx114 = getelementptr inbounds i8, i8* %79, i64 3, !dbg !6339
  store i8 %conv113, i8* %arrayidx114, align 1, !dbg !6340
  %80 = load i8*, i8** %rt1, align 8, !dbg !6341
  %add.ptr115 = getelementptr inbounds i8, i8* %80, i64 4, !dbg !6341
  store i8* %add.ptr115, i8** %rt1, align 8, !dbg !6341
  %81 = load i8*, i8** %rt2, align 8, !dbg !6342
  %add.ptr116 = getelementptr inbounds i8, i8* %81, i64 4, !dbg !6342
  store i8* %add.ptr116, i8** %rt2, align 8, !dbg !6342
  %82 = load i8*, i8** %rt, align 8, !dbg !6343
  %add.ptr117 = getelementptr inbounds i8, i8* %82, i64 4, !dbg !6343
  store i8* %add.ptr117, i8** %rt, align 8, !dbg !6343
  br label %while.cond59, !dbg !6294, !llvm.loop !6344

while.end118:                                     ; preds = %while.cond59
  br label %while.cond, !dbg !6229, !llvm.loop !6346

while.end119:                                     ; preds = %if.then, %while.cond
  ret void, !dbg !6348
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_alphaover_effect_float(float %facf0, float %facf1, i32 %x, i32 %y, float* %rect1, float* %rect2, float* %out) #0 !dbg !6349 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %fac2 = alloca float, align 4
  %mfac = alloca float, align 4
  %fac = alloca float, align 4
  %fac4 = alloca float, align 4
  %xo = alloca i32, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %rt = alloca float*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !6350, metadata !DIExpression()), !dbg !6351
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !6352, metadata !DIExpression()), !dbg !6353
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6354, metadata !DIExpression()), !dbg !6355
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6356, metadata !DIExpression()), !dbg !6357
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !6358, metadata !DIExpression()), !dbg !6359
  store float* %rect2, float** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2.addr, metadata !6360, metadata !DIExpression()), !dbg !6361
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.declare(metadata float* %mfac, metadata !6366, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6368, metadata !DIExpression()), !dbg !6369
  call void @llvm.dbg.declare(metadata float* %fac4, metadata !6370, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !6372, metadata !DIExpression()), !dbg !6373
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !6374, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !6376, metadata !DIExpression()), !dbg !6377
  call void @llvm.dbg.declare(metadata float** %rt, metadata !6378, metadata !DIExpression()), !dbg !6379
  %0 = load i32, i32* %x.addr, align 4, !dbg !6380
  store i32 %0, i32* %xo, align 4, !dbg !6381
  %1 = load float*, float** %rect1.addr, align 8, !dbg !6382
  store float* %1, float** %rt1, align 8, !dbg !6383
  %2 = load float*, float** %rect2.addr, align 8, !dbg !6384
  store float* %2, float** %rt2, align 8, !dbg !6385
  %3 = load float*, float** %out.addr, align 8, !dbg !6386
  store float* %3, float** %rt, align 8, !dbg !6387
  %4 = load float, float* %facf0.addr, align 4, !dbg !6388
  store float %4, float* %fac2, align 4, !dbg !6389
  %5 = load float, float* %facf1.addr, align 4, !dbg !6390
  store float %5, float* %fac4, align 4, !dbg !6391
  br label %while.cond, !dbg !6392

while.cond:                                       ; preds = %while.end80, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !6393
  %dec = add nsw i32 %6, -1, !dbg !6393
  store i32 %dec, i32* %y.addr, align 4, !dbg !6393
  %tobool = icmp ne i32 %6, 0, !dbg !6392
  br i1 %tobool, label %while.body, label %while.end81, !dbg !6392

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !6394
  store i32 %7, i32* %x.addr, align 4, !dbg !6396
  br label %while.cond1, !dbg !6397

while.cond1:                                      ; preds = %if.end31, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !6398
  %dec2 = add nsw i32 %8, -1, !dbg !6398
  store i32 %dec2, i32* %x.addr, align 4, !dbg !6398
  %tobool3 = icmp ne i32 %8, 0, !dbg !6397
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !6397

while.body4:                                      ; preds = %while.cond1
  %9 = load float, float* %fac2, align 4, !dbg !6399
  store float %9, float* %fac, align 4, !dbg !6401
  %10 = load float, float* %fac2, align 4, !dbg !6402
  %11 = load float*, float** %rt1, align 8, !dbg !6403
  %arrayidx = getelementptr inbounds float, float* %11, i64 3, !dbg !6403
  %12 = load float, float* %arrayidx, align 4, !dbg !6403
  %mul = fmul float %10, %12, !dbg !6404
  %sub = fsub float 1.000000e+00, %mul, !dbg !6405
  store float %sub, float* %mfac, align 4, !dbg !6406
  %13 = load float, float* %fac, align 4, !dbg !6407
  %cmp = fcmp ole float %13, 0.000000e+00, !dbg !6409
  br i1 %cmp, label %if.then, label %if.else, !dbg !6410

if.then:                                          ; preds = %while.body4
  %14 = load float*, float** %rt, align 8, !dbg !6411
  %15 = bitcast float* %14 to i8*, !dbg !6413
  %16 = load float*, float** %rt2, align 8, !dbg !6414
  %17 = bitcast float* %16 to i8*, !dbg !6413
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %17, i64 16, i1 false), !dbg !6413
  br label %if.end31, !dbg !6415

if.else:                                          ; preds = %while.body4
  %18 = load float, float* %mfac, align 4, !dbg !6416
  %cmp5 = fcmp ole float %18, 0.000000e+00, !dbg !6418
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !6419

if.then6:                                         ; preds = %if.else
  %19 = load float*, float** %rt, align 8, !dbg !6420
  %20 = bitcast float* %19 to i8*, !dbg !6422
  %21 = load float*, float** %rt1, align 8, !dbg !6423
  %22 = bitcast float* %21 to i8*, !dbg !6422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %22, i64 16, i1 false), !dbg !6422
  br label %if.end, !dbg !6424

if.else7:                                         ; preds = %if.else
  %23 = load float, float* %fac, align 4, !dbg !6425
  %24 = load float*, float** %rt1, align 8, !dbg !6427
  %arrayidx8 = getelementptr inbounds float, float* %24, i64 0, !dbg !6427
  %25 = load float, float* %arrayidx8, align 4, !dbg !6427
  %mul9 = fmul float %23, %25, !dbg !6428
  %26 = load float, float* %mfac, align 4, !dbg !6429
  %27 = load float*, float** %rt2, align 8, !dbg !6430
  %arrayidx10 = getelementptr inbounds float, float* %27, i64 0, !dbg !6430
  %28 = load float, float* %arrayidx10, align 4, !dbg !6430
  %mul11 = fmul float %26, %28, !dbg !6431
  %add = fadd float %mul9, %mul11, !dbg !6432
  %29 = load float*, float** %rt, align 8, !dbg !6433
  %arrayidx12 = getelementptr inbounds float, float* %29, i64 0, !dbg !6433
  store float %add, float* %arrayidx12, align 4, !dbg !6434
  %30 = load float, float* %fac, align 4, !dbg !6435
  %31 = load float*, float** %rt1, align 8, !dbg !6436
  %arrayidx13 = getelementptr inbounds float, float* %31, i64 1, !dbg !6436
  %32 = load float, float* %arrayidx13, align 4, !dbg !6436
  %mul14 = fmul float %30, %32, !dbg !6437
  %33 = load float, float* %mfac, align 4, !dbg !6438
  %34 = load float*, float** %rt2, align 8, !dbg !6439
  %arrayidx15 = getelementptr inbounds float, float* %34, i64 1, !dbg !6439
  %35 = load float, float* %arrayidx15, align 4, !dbg !6439
  %mul16 = fmul float %33, %35, !dbg !6440
  %add17 = fadd float %mul14, %mul16, !dbg !6441
  %36 = load float*, float** %rt, align 8, !dbg !6442
  %arrayidx18 = getelementptr inbounds float, float* %36, i64 1, !dbg !6442
  store float %add17, float* %arrayidx18, align 4, !dbg !6443
  %37 = load float, float* %fac, align 4, !dbg !6444
  %38 = load float*, float** %rt1, align 8, !dbg !6445
  %arrayidx19 = getelementptr inbounds float, float* %38, i64 2, !dbg !6445
  %39 = load float, float* %arrayidx19, align 4, !dbg !6445
  %mul20 = fmul float %37, %39, !dbg !6446
  %40 = load float, float* %mfac, align 4, !dbg !6447
  %41 = load float*, float** %rt2, align 8, !dbg !6448
  %arrayidx21 = getelementptr inbounds float, float* %41, i64 2, !dbg !6448
  %42 = load float, float* %arrayidx21, align 4, !dbg !6448
  %mul22 = fmul float %40, %42, !dbg !6449
  %add23 = fadd float %mul20, %mul22, !dbg !6450
  %43 = load float*, float** %rt, align 8, !dbg !6451
  %arrayidx24 = getelementptr inbounds float, float* %43, i64 2, !dbg !6451
  store float %add23, float* %arrayidx24, align 4, !dbg !6452
  %44 = load float, float* %fac, align 4, !dbg !6453
  %45 = load float*, float** %rt1, align 8, !dbg !6454
  %arrayidx25 = getelementptr inbounds float, float* %45, i64 3, !dbg !6454
  %46 = load float, float* %arrayidx25, align 4, !dbg !6454
  %mul26 = fmul float %44, %46, !dbg !6455
  %47 = load float, float* %mfac, align 4, !dbg !6456
  %48 = load float*, float** %rt2, align 8, !dbg !6457
  %arrayidx27 = getelementptr inbounds float, float* %48, i64 3, !dbg !6457
  %49 = load float, float* %arrayidx27, align 4, !dbg !6457
  %mul28 = fmul float %47, %49, !dbg !6458
  %add29 = fadd float %mul26, %mul28, !dbg !6459
  %50 = load float*, float** %rt, align 8, !dbg !6460
  %arrayidx30 = getelementptr inbounds float, float* %50, i64 3, !dbg !6460
  store float %add29, float* %arrayidx30, align 4, !dbg !6461
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then6
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then
  %51 = load float*, float** %rt1, align 8, !dbg !6462
  %add.ptr = getelementptr inbounds float, float* %51, i64 4, !dbg !6462
  store float* %add.ptr, float** %rt1, align 8, !dbg !6462
  %52 = load float*, float** %rt2, align 8, !dbg !6463
  %add.ptr32 = getelementptr inbounds float, float* %52, i64 4, !dbg !6463
  store float* %add.ptr32, float** %rt2, align 8, !dbg !6463
  %53 = load float*, float** %rt, align 8, !dbg !6464
  %add.ptr33 = getelementptr inbounds float, float* %53, i64 4, !dbg !6464
  store float* %add.ptr33, float** %rt, align 8, !dbg !6464
  br label %while.cond1, !dbg !6397, !llvm.loop !6465

while.end:                                        ; preds = %while.cond1
  %54 = load i32, i32* %y.addr, align 4, !dbg !6467
  %cmp34 = icmp eq i32 %54, 0, !dbg !6469
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !6470

if.then35:                                        ; preds = %while.end
  br label %while.end81, !dbg !6471

if.end36:                                         ; preds = %while.end
  %55 = load i32, i32* %y.addr, align 4, !dbg !6472
  %dec37 = add nsw i32 %55, -1, !dbg !6472
  store i32 %dec37, i32* %y.addr, align 4, !dbg !6472
  %56 = load i32, i32* %xo, align 4, !dbg !6473
  store i32 %56, i32* %x.addr, align 4, !dbg !6474
  br label %while.cond38, !dbg !6475

while.cond38:                                     ; preds = %if.end76, %if.end36
  %57 = load i32, i32* %x.addr, align 4, !dbg !6476
  %dec39 = add nsw i32 %57, -1, !dbg !6476
  store i32 %dec39, i32* %x.addr, align 4, !dbg !6476
  %tobool40 = icmp ne i32 %57, 0, !dbg !6475
  br i1 %tobool40, label %while.body41, label %while.end80, !dbg !6475

while.body41:                                     ; preds = %while.cond38
  %58 = load float, float* %fac4, align 4, !dbg !6477
  store float %58, float* %fac, align 4, !dbg !6479
  %59 = load float, float* %fac4, align 4, !dbg !6480
  %60 = load float*, float** %rt1, align 8, !dbg !6481
  %arrayidx42 = getelementptr inbounds float, float* %60, i64 3, !dbg !6481
  %61 = load float, float* %arrayidx42, align 4, !dbg !6481
  %mul43 = fmul float %59, %61, !dbg !6482
  %sub44 = fsub float 1.000000e+00, %mul43, !dbg !6483
  store float %sub44, float* %mfac, align 4, !dbg !6484
  %62 = load float, float* %fac, align 4, !dbg !6485
  %cmp45 = fcmp ole float %62, 0.000000e+00, !dbg !6487
  br i1 %cmp45, label %if.then46, label %if.else47, !dbg !6488

if.then46:                                        ; preds = %while.body41
  %63 = load float*, float** %rt, align 8, !dbg !6489
  %64 = bitcast float* %63 to i8*, !dbg !6491
  %65 = load float*, float** %rt2, align 8, !dbg !6492
  %66 = bitcast float* %65 to i8*, !dbg !6491
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %66, i64 16, i1 false), !dbg !6491
  br label %if.end76, !dbg !6493

if.else47:                                        ; preds = %while.body41
  %67 = load float, float* %mfac, align 4, !dbg !6494
  %cmp48 = fcmp ole float %67, 0.000000e+00, !dbg !6496
  br i1 %cmp48, label %if.then49, label %if.else50, !dbg !6497

if.then49:                                        ; preds = %if.else47
  %68 = load float*, float** %rt, align 8, !dbg !6498
  %69 = bitcast float* %68 to i8*, !dbg !6500
  %70 = load float*, float** %rt1, align 8, !dbg !6501
  %71 = bitcast float* %70 to i8*, !dbg !6500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %71, i64 16, i1 false), !dbg !6500
  br label %if.end75, !dbg !6502

if.else50:                                        ; preds = %if.else47
  %72 = load float, float* %fac, align 4, !dbg !6503
  %73 = load float*, float** %rt1, align 8, !dbg !6505
  %arrayidx51 = getelementptr inbounds float, float* %73, i64 0, !dbg !6505
  %74 = load float, float* %arrayidx51, align 4, !dbg !6505
  %mul52 = fmul float %72, %74, !dbg !6506
  %75 = load float, float* %mfac, align 4, !dbg !6507
  %76 = load float*, float** %rt2, align 8, !dbg !6508
  %arrayidx53 = getelementptr inbounds float, float* %76, i64 0, !dbg !6508
  %77 = load float, float* %arrayidx53, align 4, !dbg !6508
  %mul54 = fmul float %75, %77, !dbg !6509
  %add55 = fadd float %mul52, %mul54, !dbg !6510
  %78 = load float*, float** %rt, align 8, !dbg !6511
  %arrayidx56 = getelementptr inbounds float, float* %78, i64 0, !dbg !6511
  store float %add55, float* %arrayidx56, align 4, !dbg !6512
  %79 = load float, float* %fac, align 4, !dbg !6513
  %80 = load float*, float** %rt1, align 8, !dbg !6514
  %arrayidx57 = getelementptr inbounds float, float* %80, i64 1, !dbg !6514
  %81 = load float, float* %arrayidx57, align 4, !dbg !6514
  %mul58 = fmul float %79, %81, !dbg !6515
  %82 = load float, float* %mfac, align 4, !dbg !6516
  %83 = load float*, float** %rt2, align 8, !dbg !6517
  %arrayidx59 = getelementptr inbounds float, float* %83, i64 1, !dbg !6517
  %84 = load float, float* %arrayidx59, align 4, !dbg !6517
  %mul60 = fmul float %82, %84, !dbg !6518
  %add61 = fadd float %mul58, %mul60, !dbg !6519
  %85 = load float*, float** %rt, align 8, !dbg !6520
  %arrayidx62 = getelementptr inbounds float, float* %85, i64 1, !dbg !6520
  store float %add61, float* %arrayidx62, align 4, !dbg !6521
  %86 = load float, float* %fac, align 4, !dbg !6522
  %87 = load float*, float** %rt1, align 8, !dbg !6523
  %arrayidx63 = getelementptr inbounds float, float* %87, i64 2, !dbg !6523
  %88 = load float, float* %arrayidx63, align 4, !dbg !6523
  %mul64 = fmul float %86, %88, !dbg !6524
  %89 = load float, float* %mfac, align 4, !dbg !6525
  %90 = load float*, float** %rt2, align 8, !dbg !6526
  %arrayidx65 = getelementptr inbounds float, float* %90, i64 2, !dbg !6526
  %91 = load float, float* %arrayidx65, align 4, !dbg !6526
  %mul66 = fmul float %89, %91, !dbg !6527
  %add67 = fadd float %mul64, %mul66, !dbg !6528
  %92 = load float*, float** %rt, align 8, !dbg !6529
  %arrayidx68 = getelementptr inbounds float, float* %92, i64 2, !dbg !6529
  store float %add67, float* %arrayidx68, align 4, !dbg !6530
  %93 = load float, float* %fac, align 4, !dbg !6531
  %94 = load float*, float** %rt1, align 8, !dbg !6532
  %arrayidx69 = getelementptr inbounds float, float* %94, i64 3, !dbg !6532
  %95 = load float, float* %arrayidx69, align 4, !dbg !6532
  %mul70 = fmul float %93, %95, !dbg !6533
  %96 = load float, float* %mfac, align 4, !dbg !6534
  %97 = load float*, float** %rt2, align 8, !dbg !6535
  %arrayidx71 = getelementptr inbounds float, float* %97, i64 3, !dbg !6535
  %98 = load float, float* %arrayidx71, align 4, !dbg !6535
  %mul72 = fmul float %96, %98, !dbg !6536
  %add73 = fadd float %mul70, %mul72, !dbg !6537
  %99 = load float*, float** %rt, align 8, !dbg !6538
  %arrayidx74 = getelementptr inbounds float, float* %99, i64 3, !dbg !6538
  store float %add73, float* %arrayidx74, align 4, !dbg !6539
  br label %if.end75

if.end75:                                         ; preds = %if.else50, %if.then49
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then46
  %100 = load float*, float** %rt1, align 8, !dbg !6540
  %add.ptr77 = getelementptr inbounds float, float* %100, i64 4, !dbg !6540
  store float* %add.ptr77, float** %rt1, align 8, !dbg !6540
  %101 = load float*, float** %rt2, align 8, !dbg !6541
  %add.ptr78 = getelementptr inbounds float, float* %101, i64 4, !dbg !6541
  store float* %add.ptr78, float** %rt2, align 8, !dbg !6541
  %102 = load float*, float** %rt, align 8, !dbg !6542
  %add.ptr79 = getelementptr inbounds float, float* %102, i64 4, !dbg !6542
  store float* %add.ptr79, float** %rt, align 8, !dbg !6542
  br label %while.cond38, !dbg !6475, !llvm.loop !6543

while.end80:                                      ; preds = %while.cond38
  br label %while.cond, !dbg !6392, !llvm.loop !6545

while.end81:                                      ; preds = %if.then35, %while.cond
  ret void, !dbg !6547
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_alphaover_effect_byte(float %facf0, float %facf1, i32 %x, i32 %y, i8* %rect1, i8* %rect2, i8* %out) #0 !dbg !6548 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %fac2 = alloca float, align 4
  %mfac = alloca float, align 4
  %fac = alloca float, align 4
  %fac4 = alloca float, align 4
  %xo = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %rt = alloca i8*, align 8
  %tempc = alloca [4 x float], align 16
  %rt1 = alloca [4 x float], align 16
  %rt2 = alloca [4 x float], align 16
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !6549, metadata !DIExpression()), !dbg !6550
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !6551, metadata !DIExpression()), !dbg !6552
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6553, metadata !DIExpression()), !dbg !6554
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6555, metadata !DIExpression()), !dbg !6556
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  store i8* %rect2, i8** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !6563, metadata !DIExpression()), !dbg !6564
  call void @llvm.dbg.declare(metadata float* %mfac, metadata !6565, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6567, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.declare(metadata float* %fac4, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !6571, metadata !DIExpression()), !dbg !6572
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !6573, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !6575, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.declare(metadata i8** %rt, metadata !6577, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.declare(metadata [4 x float]* %tempc, metadata !6579, metadata !DIExpression()), !dbg !6580
  call void @llvm.dbg.declare(metadata [4 x float]* %rt1, metadata !6581, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.declare(metadata [4 x float]* %rt2, metadata !6583, metadata !DIExpression()), !dbg !6584
  %0 = load i32, i32* %x.addr, align 4, !dbg !6585
  store i32 %0, i32* %xo, align 4, !dbg !6586
  %1 = load i8*, i8** %rect1.addr, align 8, !dbg !6587
  store i8* %1, i8** %cp1, align 8, !dbg !6588
  %2 = load i8*, i8** %rect2.addr, align 8, !dbg !6589
  store i8* %2, i8** %cp2, align 8, !dbg !6590
  %3 = load i8*, i8** %out.addr, align 8, !dbg !6591
  store i8* %3, i8** %rt, align 8, !dbg !6592
  %4 = load float, float* %facf0.addr, align 4, !dbg !6593
  store float %4, float* %fac2, align 4, !dbg !6594
  %5 = load float, float* %facf1.addr, align 4, !dbg !6595
  store float %5, float* %fac4, align 4, !dbg !6596
  br label %while.cond, !dbg !6597

while.cond:                                       ; preds = %while.end85, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !6598
  %dec = add nsw i32 %6, -1, !dbg !6598
  store i32 %dec, i32* %y.addr, align 4, !dbg !6598
  %tobool = icmp ne i32 %6, 0, !dbg !6597
  br i1 %tobool, label %while.body, label %while.end86, !dbg !6597

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !6599
  store i32 %7, i32* %x.addr, align 4, !dbg !6601
  br label %while.cond1, !dbg !6602

while.cond1:                                      ; preds = %if.end33, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !6603
  %dec2 = add nsw i32 %8, -1, !dbg !6603
  store i32 %dec2, i32* %x.addr, align 4, !dbg !6603
  %tobool3 = icmp ne i32 %8, 0, !dbg !6602
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !6602

while.body4:                                      ; preds = %while.cond1
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !6604
  %9 = load i8*, i8** %cp1, align 8, !dbg !6606
  call void @straight_uchar_to_premul_float(float* %arraydecay, i8* %9), !dbg !6607
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !6608
  %10 = load i8*, i8** %cp2, align 8, !dbg !6609
  call void @straight_uchar_to_premul_float(float* %arraydecay5, i8* %10), !dbg !6610
  %11 = load float, float* %fac2, align 4, !dbg !6611
  store float %11, float* %fac, align 4, !dbg !6612
  %12 = load float, float* %fac2, align 4, !dbg !6613
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !6614
  %13 = load float, float* %arrayidx, align 4, !dbg !6614
  %mul = fmul float %12, %13, !dbg !6615
  %sub = fsub float 1.000000e+00, %mul, !dbg !6616
  store float %sub, float* %mfac, align 4, !dbg !6617
  %14 = load float, float* %fac, align 4, !dbg !6618
  %cmp = fcmp ole float %14, 0.000000e+00, !dbg !6620
  br i1 %cmp, label %if.then, label %if.else, !dbg !6621

if.then:                                          ; preds = %while.body4
  %15 = load i8*, i8** %cp2, align 8, !dbg !6622
  %16 = bitcast i8* %15 to i32*, !dbg !6623
  %17 = load i32, i32* %16, align 4, !dbg !6623
  %18 = load i8*, i8** %rt, align 8, !dbg !6624
  %19 = bitcast i8* %18 to i32*, !dbg !6625
  store i32 %17, i32* %19, align 4, !dbg !6626
  br label %if.end33, !dbg !6625

if.else:                                          ; preds = %while.body4
  %20 = load float, float* %mfac, align 4, !dbg !6627
  %cmp6 = fcmp ole float %20, 0.000000e+00, !dbg !6629
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !6630

if.then7:                                         ; preds = %if.else
  %21 = load i8*, i8** %cp1, align 8, !dbg !6631
  %22 = bitcast i8* %21 to i32*, !dbg !6632
  %23 = load i32, i32* %22, align 4, !dbg !6632
  %24 = load i8*, i8** %rt, align 8, !dbg !6633
  %25 = bitcast i8* %24 to i32*, !dbg !6634
  store i32 %23, i32* %25, align 4, !dbg !6635
  br label %if.end, !dbg !6634

if.else8:                                         ; preds = %if.else
  %26 = load float, float* %fac, align 4, !dbg !6636
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !6638
  %27 = load float, float* %arrayidx9, align 16, !dbg !6638
  %mul10 = fmul float %26, %27, !dbg !6639
  %28 = load float, float* %mfac, align 4, !dbg !6640
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !6641
  %29 = load float, float* %arrayidx11, align 16, !dbg !6641
  %mul12 = fmul float %28, %29, !dbg !6642
  %add = fadd float %mul10, %mul12, !dbg !6643
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !6644
  store float %add, float* %arrayidx13, align 16, !dbg !6645
  %30 = load float, float* %fac, align 4, !dbg !6646
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 1, !dbg !6647
  %31 = load float, float* %arrayidx14, align 4, !dbg !6647
  %mul15 = fmul float %30, %31, !dbg !6648
  %32 = load float, float* %mfac, align 4, !dbg !6649
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 1, !dbg !6650
  %33 = load float, float* %arrayidx16, align 4, !dbg !6650
  %mul17 = fmul float %32, %33, !dbg !6651
  %add18 = fadd float %mul15, %mul17, !dbg !6652
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 1, !dbg !6653
  store float %add18, float* %arrayidx19, align 4, !dbg !6654
  %34 = load float, float* %fac, align 4, !dbg !6655
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 2, !dbg !6656
  %35 = load float, float* %arrayidx20, align 8, !dbg !6656
  %mul21 = fmul float %34, %35, !dbg !6657
  %36 = load float, float* %mfac, align 4, !dbg !6658
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 2, !dbg !6659
  %37 = load float, float* %arrayidx22, align 8, !dbg !6659
  %mul23 = fmul float %36, %37, !dbg !6660
  %add24 = fadd float %mul21, %mul23, !dbg !6661
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 2, !dbg !6662
  store float %add24, float* %arrayidx25, align 8, !dbg !6663
  %38 = load float, float* %fac, align 4, !dbg !6664
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !6665
  %39 = load float, float* %arrayidx26, align 4, !dbg !6665
  %mul27 = fmul float %38, %39, !dbg !6666
  %40 = load float, float* %mfac, align 4, !dbg !6667
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !6668
  %41 = load float, float* %arrayidx28, align 4, !dbg !6668
  %mul29 = fmul float %40, %41, !dbg !6669
  %add30 = fadd float %mul27, %mul29, !dbg !6670
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 3, !dbg !6671
  store float %add30, float* %arrayidx31, align 4, !dbg !6672
  %42 = load i8*, i8** %rt, align 8, !dbg !6673
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !6674
  call void @premul_float_to_straight_uchar(i8* %42, float* %arraydecay32), !dbg !6675
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then7
  br label %if.end33

if.end33:                                         ; preds = %if.end, %if.then
  %43 = load i8*, i8** %cp1, align 8, !dbg !6676
  %add.ptr = getelementptr inbounds i8, i8* %43, i64 4, !dbg !6676
  store i8* %add.ptr, i8** %cp1, align 8, !dbg !6676
  %44 = load i8*, i8** %cp2, align 8, !dbg !6677
  %add.ptr34 = getelementptr inbounds i8, i8* %44, i64 4, !dbg !6677
  store i8* %add.ptr34, i8** %cp2, align 8, !dbg !6677
  %45 = load i8*, i8** %rt, align 8, !dbg !6678
  %add.ptr35 = getelementptr inbounds i8, i8* %45, i64 4, !dbg !6678
  store i8* %add.ptr35, i8** %rt, align 8, !dbg !6678
  br label %while.cond1, !dbg !6602, !llvm.loop !6679

while.end:                                        ; preds = %while.cond1
  %46 = load i32, i32* %y.addr, align 4, !dbg !6681
  %cmp36 = icmp eq i32 %46, 0, !dbg !6683
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !6684

if.then37:                                        ; preds = %while.end
  br label %while.end86, !dbg !6685

if.end38:                                         ; preds = %while.end
  %47 = load i32, i32* %y.addr, align 4, !dbg !6686
  %dec39 = add nsw i32 %47, -1, !dbg !6686
  store i32 %dec39, i32* %y.addr, align 4, !dbg !6686
  %48 = load i32, i32* %xo, align 4, !dbg !6687
  store i32 %48, i32* %x.addr, align 4, !dbg !6688
  br label %while.cond40, !dbg !6689

while.cond40:                                     ; preds = %if.end81, %if.end38
  %49 = load i32, i32* %x.addr, align 4, !dbg !6690
  %dec41 = add nsw i32 %49, -1, !dbg !6690
  store i32 %dec41, i32* %x.addr, align 4, !dbg !6690
  %tobool42 = icmp ne i32 %49, 0, !dbg !6689
  br i1 %tobool42, label %while.body43, label %while.end85, !dbg !6689

while.body43:                                     ; preds = %while.cond40
  %arraydecay44 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !6691
  %50 = load i8*, i8** %cp1, align 8, !dbg !6693
  call void @straight_uchar_to_premul_float(float* %arraydecay44, i8* %50), !dbg !6694
  %arraydecay45 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !6695
  %51 = load i8*, i8** %cp2, align 8, !dbg !6696
  call void @straight_uchar_to_premul_float(float* %arraydecay45, i8* %51), !dbg !6697
  %52 = load float, float* %fac4, align 4, !dbg !6698
  store float %52, float* %fac, align 4, !dbg !6699
  %53 = load float, float* %fac4, align 4, !dbg !6700
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !6701
  %54 = load float, float* %arrayidx46, align 4, !dbg !6701
  %mul47 = fmul float %53, %54, !dbg !6702
  %sub48 = fsub float 1.000000e+00, %mul47, !dbg !6703
  store float %sub48, float* %mfac, align 4, !dbg !6704
  %55 = load float, float* %fac, align 4, !dbg !6705
  %cmp49 = fcmp ole float %55, 0.000000e+00, !dbg !6707
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !6708

if.then50:                                        ; preds = %while.body43
  %56 = load i8*, i8** %cp2, align 8, !dbg !6709
  %57 = bitcast i8* %56 to i32*, !dbg !6710
  %58 = load i32, i32* %57, align 4, !dbg !6710
  %59 = load i8*, i8** %rt, align 8, !dbg !6711
  %60 = bitcast i8* %59 to i32*, !dbg !6712
  store i32 %58, i32* %60, align 4, !dbg !6713
  br label %if.end81, !dbg !6712

if.else51:                                        ; preds = %while.body43
  %61 = load float, float* %mfac, align 4, !dbg !6714
  %cmp52 = fcmp ole float %61, 0.000000e+00, !dbg !6716
  br i1 %cmp52, label %if.then53, label %if.else54, !dbg !6717

if.then53:                                        ; preds = %if.else51
  %62 = load i8*, i8** %cp1, align 8, !dbg !6718
  %63 = bitcast i8* %62 to i32*, !dbg !6719
  %64 = load i32, i32* %63, align 4, !dbg !6719
  %65 = load i8*, i8** %rt, align 8, !dbg !6720
  %66 = bitcast i8* %65 to i32*, !dbg !6721
  store i32 %64, i32* %66, align 4, !dbg !6722
  br label %if.end80, !dbg !6721

if.else54:                                        ; preds = %if.else51
  %67 = load float, float* %fac, align 4, !dbg !6723
  %arrayidx55 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !6725
  %68 = load float, float* %arrayidx55, align 16, !dbg !6725
  %mul56 = fmul float %67, %68, !dbg !6726
  %69 = load float, float* %mfac, align 4, !dbg !6727
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !6728
  %70 = load float, float* %arrayidx57, align 16, !dbg !6728
  %mul58 = fmul float %69, %70, !dbg !6729
  %add59 = fadd float %mul56, %mul58, !dbg !6730
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !6731
  store float %add59, float* %arrayidx60, align 16, !dbg !6732
  %71 = load float, float* %fac, align 4, !dbg !6733
  %arrayidx61 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 1, !dbg !6734
  %72 = load float, float* %arrayidx61, align 4, !dbg !6734
  %mul62 = fmul float %71, %72, !dbg !6735
  %73 = load float, float* %mfac, align 4, !dbg !6736
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 1, !dbg !6737
  %74 = load float, float* %arrayidx63, align 4, !dbg !6737
  %mul64 = fmul float %73, %74, !dbg !6738
  %add65 = fadd float %mul62, %mul64, !dbg !6739
  %arrayidx66 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 1, !dbg !6740
  store float %add65, float* %arrayidx66, align 4, !dbg !6741
  %75 = load float, float* %fac, align 4, !dbg !6742
  %arrayidx67 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 2, !dbg !6743
  %76 = load float, float* %arrayidx67, align 8, !dbg !6743
  %mul68 = fmul float %75, %76, !dbg !6744
  %77 = load float, float* %mfac, align 4, !dbg !6745
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 2, !dbg !6746
  %78 = load float, float* %arrayidx69, align 8, !dbg !6746
  %mul70 = fmul float %77, %78, !dbg !6747
  %add71 = fadd float %mul68, %mul70, !dbg !6748
  %arrayidx72 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 2, !dbg !6749
  store float %add71, float* %arrayidx72, align 8, !dbg !6750
  %79 = load float, float* %fac, align 4, !dbg !6751
  %arrayidx73 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !6752
  %80 = load float, float* %arrayidx73, align 4, !dbg !6752
  %mul74 = fmul float %79, %80, !dbg !6753
  %81 = load float, float* %mfac, align 4, !dbg !6754
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !6755
  %82 = load float, float* %arrayidx75, align 4, !dbg !6755
  %mul76 = fmul float %81, %82, !dbg !6756
  %add77 = fadd float %mul74, %mul76, !dbg !6757
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 3, !dbg !6758
  store float %add77, float* %arrayidx78, align 4, !dbg !6759
  %83 = load i8*, i8** %rt, align 8, !dbg !6760
  %arraydecay79 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !6761
  call void @premul_float_to_straight_uchar(i8* %83, float* %arraydecay79), !dbg !6762
  br label %if.end80

if.end80:                                         ; preds = %if.else54, %if.then53
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then50
  %84 = load i8*, i8** %cp1, align 8, !dbg !6763
  %add.ptr82 = getelementptr inbounds i8, i8* %84, i64 4, !dbg !6763
  store i8* %add.ptr82, i8** %cp1, align 8, !dbg !6763
  %85 = load i8*, i8** %cp2, align 8, !dbg !6764
  %add.ptr83 = getelementptr inbounds i8, i8* %85, i64 4, !dbg !6764
  store i8* %add.ptr83, i8** %cp2, align 8, !dbg !6764
  %86 = load i8*, i8** %rt, align 8, !dbg !6765
  %add.ptr84 = getelementptr inbounds i8, i8* %86, i64 4, !dbg !6765
  store i8* %add.ptr84, i8** %rt, align 8, !dbg !6765
  br label %while.cond40, !dbg !6689, !llvm.loop !6766

while.end85:                                      ; preds = %while.cond40
  br label %while.cond, !dbg !6597, !llvm.loop !6768

while.end86:                                      ; preds = %if.then37, %while.cond
  ret void, !dbg !6770
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_drop_effect_float(float %facf0, float %facf1, i32 %x, i32 %y, float* %rect2i, float* %rect1i, float* %outi) #0 !dbg !6771 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect2i.addr = alloca float*, align 8
  %rect1i.addr = alloca float*, align 8
  %outi.addr = alloca float*, align 8
  %height = alloca i32, align 4
  %width = alloca i32, align 4
  %temp = alloca float, align 4
  %fac = alloca float, align 4
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %out = alloca float*, align 8
  %field = alloca i32, align 4
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !6772, metadata !DIExpression()), !dbg !6773
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !6774, metadata !DIExpression()), !dbg !6775
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6776, metadata !DIExpression()), !dbg !6777
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6778, metadata !DIExpression()), !dbg !6779
  store float* %rect2i, float** %rect2i.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2i.addr, metadata !6780, metadata !DIExpression()), !dbg !6781
  store float* %rect1i, float** %rect1i.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1i.addr, metadata !6782, metadata !DIExpression()), !dbg !6783
  store float* %outi, float** %outi.addr, align 8
  call void @llvm.dbg.declare(metadata float** %outi.addr, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.declare(metadata i32* %height, metadata !6786, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6788, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.declare(metadata float* %temp, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6792, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !6794, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !6796, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !6798, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !6800, metadata !DIExpression()), !dbg !6801
  call void @llvm.dbg.declare(metadata float** %out, metadata !6802, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.declare(metadata i32* %field, metadata !6804, metadata !DIExpression()), !dbg !6805
  store i32 1, i32* %field, align 4, !dbg !6805
  %0 = load i32, i32* %x.addr, align 4, !dbg !6806
  store i32 %0, i32* %width, align 4, !dbg !6807
  %1 = load i32, i32* %y.addr, align 4, !dbg !6808
  store i32 %1, i32* %height, align 4, !dbg !6809
  %2 = load float, float* %facf0.addr, align 4, !dbg !6810
  %mul = fmul float 7.000000e+01, %2, !dbg !6811
  store float %mul, float* %fac1, align 4, !dbg !6812
  %3 = load float, float* %facf1.addr, align 4, !dbg !6813
  %mul1 = fmul float 7.000000e+01, %3, !dbg !6814
  store float %mul1, float* %fac2, align 4, !dbg !6815
  %4 = load float*, float** %rect2i.addr, align 8, !dbg !6816
  %5 = load i32, i32* %width, align 4, !dbg !6817
  %mul2 = mul nsw i32 8, %5, !dbg !6818
  %idx.ext = sext i32 %mul2 to i64, !dbg !6819
  %add.ptr = getelementptr inbounds float, float* %4, i64 %idx.ext, !dbg !6819
  store float* %add.ptr, float** %rt2, align 8, !dbg !6820
  %6 = load float*, float** %rect1i.addr, align 8, !dbg !6821
  store float* %6, float** %rt1, align 8, !dbg !6822
  %7 = load float*, float** %outi.addr, align 8, !dbg !6823
  store float* %7, float** %out, align 8, !dbg !6824
  store i32 0, i32* %y.addr, align 4, !dbg !6825
  br label %for.cond, !dbg !6827

for.cond:                                         ; preds = %for.inc43, %entry
  %8 = load i32, i32* %y.addr, align 4, !dbg !6828
  %9 = load i32, i32* %height, align 4, !dbg !6830
  %sub = sub nsw i32 %9, 8, !dbg !6831
  %cmp = icmp slt i32 %8, %sub, !dbg !6832
  br i1 %cmp, label %for.body, label %for.end45, !dbg !6833

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %field, align 4, !dbg !6834
  %tobool = icmp ne i32 %10, 0, !dbg !6834
  br i1 %tobool, label %if.then, label %if.else, !dbg !6837

if.then:                                          ; preds = %for.body
  %11 = load float, float* %fac1, align 4, !dbg !6838
  store float %11, float* %fac, align 4, !dbg !6839
  br label %if.end, !dbg !6840

if.else:                                          ; preds = %for.body
  %12 = load float, float* %fac2, align 4, !dbg !6841
  store float %12, float* %fac, align 4, !dbg !6842
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %field, align 4, !dbg !6843
  %tobool3 = icmp ne i32 %13, 0, !dbg !6844
  %lnot = xor i1 %tobool3, true, !dbg !6844
  %lnot.ext = zext i1 %lnot to i32, !dbg !6844
  store i32 %lnot.ext, i32* %field, align 4, !dbg !6845
  %14 = load float*, float** %out, align 8, !dbg !6846
  %15 = bitcast float* %14 to i8*, !dbg !6847
  %16 = load float*, float** %rt1, align 8, !dbg !6848
  %17 = bitcast float* %16 to i8*, !dbg !6847
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %17, i64 128, i1 false), !dbg !6847
  %18 = load float*, float** %rt1, align 8, !dbg !6849
  %add.ptr4 = getelementptr inbounds float, float* %18, i64 32, !dbg !6849
  store float* %add.ptr4, float** %rt1, align 8, !dbg !6849
  %19 = load float*, float** %out, align 8, !dbg !6850
  %add.ptr5 = getelementptr inbounds float, float* %19, i64 32, !dbg !6850
  store float* %add.ptr5, float** %out, align 8, !dbg !6850
  store i32 8, i32* %x.addr, align 4, !dbg !6851
  br label %for.cond6, !dbg !6853

for.cond6:                                        ; preds = %for.inc, %if.end
  %20 = load i32, i32* %x.addr, align 4, !dbg !6854
  %21 = load i32, i32* %width, align 4, !dbg !6856
  %cmp7 = icmp slt i32 %20, %21, !dbg !6857
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !6858

for.body8:                                        ; preds = %for.cond6
  %22 = load float, float* %fac, align 4, !dbg !6859
  %23 = load float*, float** %rt2, align 8, !dbg !6861
  %arrayidx = getelementptr inbounds float, float* %23, i64 3, !dbg !6861
  %24 = load float, float* %arrayidx, align 4, !dbg !6861
  %mul9 = fmul float %22, %24, !dbg !6862
  store float %mul9, float* %temp, align 4, !dbg !6863
  %25 = load float*, float** %rt1, align 8, !dbg !6864
  %26 = load float, float* %25, align 4, !dbg !6864
  %27 = load float, float* %temp, align 4, !dbg !6864
  %sub10 = fsub float %26, %27, !dbg !6864
  %cmp11 = fcmp ogt float 0.000000e+00, %sub10, !dbg !6864
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !6864

cond.true:                                        ; preds = %for.body8
  br label %cond.end, !dbg !6864

cond.false:                                       ; preds = %for.body8
  %28 = load float*, float** %rt1, align 8, !dbg !6864
  %29 = load float, float* %28, align 4, !dbg !6864
  %30 = load float, float* %temp, align 4, !dbg !6864
  %sub12 = fsub float %29, %30, !dbg !6864
  br label %cond.end, !dbg !6864

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0.000000e+00, %cond.true ], [ %sub12, %cond.false ], !dbg !6864
  %31 = load float*, float** %out, align 8, !dbg !6865
  %incdec.ptr = getelementptr inbounds float, float* %31, i32 1, !dbg !6865
  store float* %incdec.ptr, float** %out, align 8, !dbg !6865
  store float %cond, float* %31, align 4, !dbg !6866
  %32 = load float*, float** %rt1, align 8, !dbg !6867
  %incdec.ptr13 = getelementptr inbounds float, float* %32, i32 1, !dbg !6867
  store float* %incdec.ptr13, float** %rt1, align 8, !dbg !6867
  %33 = load float*, float** %rt1, align 8, !dbg !6868
  %34 = load float, float* %33, align 4, !dbg !6868
  %35 = load float, float* %temp, align 4, !dbg !6868
  %sub14 = fsub float %34, %35, !dbg !6868
  %cmp15 = fcmp ogt float 0.000000e+00, %sub14, !dbg !6868
  br i1 %cmp15, label %cond.true16, label %cond.false17, !dbg !6868

cond.true16:                                      ; preds = %cond.end
  br label %cond.end19, !dbg !6868

cond.false17:                                     ; preds = %cond.end
  %36 = load float*, float** %rt1, align 8, !dbg !6868
  %37 = load float, float* %36, align 4, !dbg !6868
  %38 = load float, float* %temp, align 4, !dbg !6868
  %sub18 = fsub float %37, %38, !dbg !6868
  br label %cond.end19, !dbg !6868

cond.end19:                                       ; preds = %cond.false17, %cond.true16
  %cond20 = phi float [ 0.000000e+00, %cond.true16 ], [ %sub18, %cond.false17 ], !dbg !6868
  %39 = load float*, float** %out, align 8, !dbg !6869
  %incdec.ptr21 = getelementptr inbounds float, float* %39, i32 1, !dbg !6869
  store float* %incdec.ptr21, float** %out, align 8, !dbg !6869
  store float %cond20, float* %39, align 4, !dbg !6870
  %40 = load float*, float** %rt1, align 8, !dbg !6871
  %incdec.ptr22 = getelementptr inbounds float, float* %40, i32 1, !dbg !6871
  store float* %incdec.ptr22, float** %rt1, align 8, !dbg !6871
  %41 = load float*, float** %rt1, align 8, !dbg !6872
  %42 = load float, float* %41, align 4, !dbg !6872
  %43 = load float, float* %temp, align 4, !dbg !6872
  %sub23 = fsub float %42, %43, !dbg !6872
  %cmp24 = fcmp ogt float 0.000000e+00, %sub23, !dbg !6872
  br i1 %cmp24, label %cond.true25, label %cond.false26, !dbg !6872

cond.true25:                                      ; preds = %cond.end19
  br label %cond.end28, !dbg !6872

cond.false26:                                     ; preds = %cond.end19
  %44 = load float*, float** %rt1, align 8, !dbg !6872
  %45 = load float, float* %44, align 4, !dbg !6872
  %46 = load float, float* %temp, align 4, !dbg !6872
  %sub27 = fsub float %45, %46, !dbg !6872
  br label %cond.end28, !dbg !6872

cond.end28:                                       ; preds = %cond.false26, %cond.true25
  %cond29 = phi float [ 0.000000e+00, %cond.true25 ], [ %sub27, %cond.false26 ], !dbg !6872
  %47 = load float*, float** %out, align 8, !dbg !6873
  %incdec.ptr30 = getelementptr inbounds float, float* %47, i32 1, !dbg !6873
  store float* %incdec.ptr30, float** %out, align 8, !dbg !6873
  store float %cond29, float* %47, align 4, !dbg !6874
  %48 = load float*, float** %rt1, align 8, !dbg !6875
  %incdec.ptr31 = getelementptr inbounds float, float* %48, i32 1, !dbg !6875
  store float* %incdec.ptr31, float** %rt1, align 8, !dbg !6875
  %49 = load float*, float** %rt1, align 8, !dbg !6876
  %50 = load float, float* %49, align 4, !dbg !6876
  %51 = load float, float* %temp, align 4, !dbg !6876
  %sub32 = fsub float %50, %51, !dbg !6876
  %cmp33 = fcmp ogt float 0.000000e+00, %sub32, !dbg !6876
  br i1 %cmp33, label %cond.true34, label %cond.false35, !dbg !6876

cond.true34:                                      ; preds = %cond.end28
  br label %cond.end37, !dbg !6876

cond.false35:                                     ; preds = %cond.end28
  %52 = load float*, float** %rt1, align 8, !dbg !6876
  %53 = load float, float* %52, align 4, !dbg !6876
  %54 = load float, float* %temp, align 4, !dbg !6876
  %sub36 = fsub float %53, %54, !dbg !6876
  br label %cond.end37, !dbg !6876

cond.end37:                                       ; preds = %cond.false35, %cond.true34
  %cond38 = phi float [ 0.000000e+00, %cond.true34 ], [ %sub36, %cond.false35 ], !dbg !6876
  %55 = load float*, float** %out, align 8, !dbg !6877
  %incdec.ptr39 = getelementptr inbounds float, float* %55, i32 1, !dbg !6877
  store float* %incdec.ptr39, float** %out, align 8, !dbg !6877
  store float %cond38, float* %55, align 4, !dbg !6878
  %56 = load float*, float** %rt1, align 8, !dbg !6879
  %incdec.ptr40 = getelementptr inbounds float, float* %56, i32 1, !dbg !6879
  store float* %incdec.ptr40, float** %rt1, align 8, !dbg !6879
  %57 = load float*, float** %rt2, align 8, !dbg !6880
  %add.ptr41 = getelementptr inbounds float, float* %57, i64 4, !dbg !6880
  store float* %add.ptr41, float** %rt2, align 8, !dbg !6880
  br label %for.inc, !dbg !6881

for.inc:                                          ; preds = %cond.end37
  %58 = load i32, i32* %x.addr, align 4, !dbg !6882
  %inc = add nsw i32 %58, 1, !dbg !6882
  store i32 %inc, i32* %x.addr, align 4, !dbg !6882
  br label %for.cond6, !dbg !6883, !llvm.loop !6884

for.end:                                          ; preds = %for.cond6
  %59 = load float*, float** %rt2, align 8, !dbg !6886
  %add.ptr42 = getelementptr inbounds float, float* %59, i64 32, !dbg !6886
  store float* %add.ptr42, float** %rt2, align 8, !dbg !6886
  br label %for.inc43, !dbg !6887

for.inc43:                                        ; preds = %for.end
  %60 = load i32, i32* %y.addr, align 4, !dbg !6888
  %inc44 = add nsw i32 %60, 1, !dbg !6888
  store i32 %inc44, i32* %y.addr, align 4, !dbg !6888
  br label %for.cond, !dbg !6889, !llvm.loop !6890

for.end45:                                        ; preds = %for.cond
  %61 = load float*, float** %out, align 8, !dbg !6892
  %62 = bitcast float* %61 to i8*, !dbg !6893
  %63 = load float*, float** %rt1, align 8, !dbg !6894
  %64 = bitcast float* %63 to i8*, !dbg !6893
  %65 = load i32, i32* %width, align 4, !dbg !6895
  %conv = sext i32 %65 to i64, !dbg !6895
  %mul46 = mul i64 128, %conv, !dbg !6896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %64, i64 %mul46, i1 false), !dbg !6893
  ret void, !dbg !6897
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_drop_effect_byte(float %facf0, float %facf1, i32 %x, i32 %y, i8* %rect2i, i8* %rect1i, i8* %outi) #0 !dbg !6898 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect2i.addr = alloca i8*, align 8
  %rect1i.addr = alloca i8*, align 8
  %outi.addr = alloca i8*, align 8
  %height = alloca i32, align 4
  %width = alloca i32, align 4
  %temp = alloca i32, align 4
  %fac = alloca i32, align 4
  %fac1 = alloca i32, align 4
  %fac2 = alloca i32, align 4
  %rt1 = alloca i8*, align 8
  %rt2 = alloca i8*, align 8
  %out = alloca i8*, align 8
  %field = alloca i32, align 4
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !6899, metadata !DIExpression()), !dbg !6900
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !6901, metadata !DIExpression()), !dbg !6902
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6903, metadata !DIExpression()), !dbg !6904
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6905, metadata !DIExpression()), !dbg !6906
  store i8* %rect2i, i8** %rect2i.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2i.addr, metadata !6907, metadata !DIExpression()), !dbg !6908
  store i8* %rect1i, i8** %rect1i.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1i.addr, metadata !6909, metadata !DIExpression()), !dbg !6910
  store i8* %outi, i8** %outi.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %outi.addr, metadata !6911, metadata !DIExpression()), !dbg !6912
  call void @llvm.dbg.declare(metadata i32* %height, metadata !6913, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6915, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !6917, metadata !DIExpression()), !dbg !6918
  call void @llvm.dbg.declare(metadata i32* %fac, metadata !6919, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.declare(metadata i32* %fac1, metadata !6921, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.declare(metadata i32* %fac2, metadata !6923, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.declare(metadata i8** %rt1, metadata !6925, metadata !DIExpression()), !dbg !6926
  call void @llvm.dbg.declare(metadata i8** %rt2, metadata !6927, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.declare(metadata i8** %out, metadata !6929, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.declare(metadata i32* %field, metadata !6931, metadata !DIExpression()), !dbg !6932
  store i32 1, i32* %field, align 4, !dbg !6932
  %0 = load i32, i32* %x.addr, align 4, !dbg !6933
  store i32 %0, i32* %width, align 4, !dbg !6934
  %1 = load i32, i32* %y.addr, align 4, !dbg !6935
  store i32 %1, i32* %height, align 4, !dbg !6936
  %2 = load float, float* %facf0.addr, align 4, !dbg !6937
  %mul = fmul float 7.000000e+01, %2, !dbg !6938
  %conv = fptosi float %mul to i32, !dbg !6939
  store i32 %conv, i32* %fac1, align 4, !dbg !6940
  %3 = load float, float* %facf1.addr, align 4, !dbg !6941
  %mul1 = fmul float 7.000000e+01, %3, !dbg !6942
  %conv2 = fptosi float %mul1 to i32, !dbg !6943
  store i32 %conv2, i32* %fac2, align 4, !dbg !6944
  %4 = load i8*, i8** %rect2i.addr, align 8, !dbg !6945
  %5 = load i32, i32* %width, align 4, !dbg !6946
  %mul3 = mul nsw i32 8, %5, !dbg !6947
  %idx.ext = sext i32 %mul3 to i64, !dbg !6948
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !6948
  store i8* %add.ptr, i8** %rt2, align 8, !dbg !6949
  %6 = load i8*, i8** %rect1i.addr, align 8, !dbg !6950
  store i8* %6, i8** %rt1, align 8, !dbg !6951
  %7 = load i8*, i8** %outi.addr, align 8, !dbg !6952
  store i8* %7, i8** %out, align 8, !dbg !6953
  store i32 0, i32* %y.addr, align 4, !dbg !6954
  br label %for.cond, !dbg !6956

for.cond:                                         ; preds = %for.inc63, %entry
  %8 = load i32, i32* %y.addr, align 4, !dbg !6957
  %9 = load i32, i32* %height, align 4, !dbg !6959
  %sub = sub nsw i32 %9, 8, !dbg !6960
  %cmp = icmp slt i32 %8, %sub, !dbg !6961
  br i1 %cmp, label %for.body, label %for.end65, !dbg !6962

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %field, align 4, !dbg !6963
  %tobool = icmp ne i32 %10, 0, !dbg !6963
  br i1 %tobool, label %if.then, label %if.else, !dbg !6966

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %fac1, align 4, !dbg !6967
  store i32 %11, i32* %fac, align 4, !dbg !6968
  br label %if.end, !dbg !6969

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %fac2, align 4, !dbg !6970
  store i32 %12, i32* %fac, align 4, !dbg !6971
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %field, align 4, !dbg !6972
  %tobool5 = icmp ne i32 %13, 0, !dbg !6973
  %lnot = xor i1 %tobool5, true, !dbg !6973
  %lnot.ext = zext i1 %lnot to i32, !dbg !6973
  store i32 %lnot.ext, i32* %field, align 4, !dbg !6974
  %14 = load i8*, i8** %out, align 8, !dbg !6975
  %15 = load i8*, i8** %rt1, align 8, !dbg !6976
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 32, i1 false), !dbg !6977
  %16 = load i8*, i8** %rt1, align 8, !dbg !6978
  %add.ptr6 = getelementptr inbounds i8, i8* %16, i64 32, !dbg !6978
  store i8* %add.ptr6, i8** %rt1, align 8, !dbg !6978
  %17 = load i8*, i8** %out, align 8, !dbg !6979
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 32, !dbg !6979
  store i8* %add.ptr7, i8** %out, align 8, !dbg !6979
  store i32 8, i32* %x.addr, align 4, !dbg !6980
  br label %for.cond8, !dbg !6982

for.cond8:                                        ; preds = %for.inc, %if.end
  %18 = load i32, i32* %x.addr, align 4, !dbg !6983
  %19 = load i32, i32* %width, align 4, !dbg !6985
  %cmp9 = icmp slt i32 %18, %19, !dbg !6986
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !6987

for.body11:                                       ; preds = %for.cond8
  %20 = load i32, i32* %fac, align 4, !dbg !6988
  %21 = load i8*, i8** %rt2, align 8, !dbg !6990
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 3, !dbg !6990
  %22 = load i8, i8* %arrayidx, align 1, !dbg !6990
  %conv12 = zext i8 %22 to i32, !dbg !6990
  %mul13 = mul nsw i32 %20, %conv12, !dbg !6991
  %shr = ashr i32 %mul13, 8, !dbg !6992
  store i32 %shr, i32* %temp, align 4, !dbg !6993
  %23 = load i8*, i8** %rt1, align 8, !dbg !6994
  %24 = load i8, i8* %23, align 1, !dbg !6994
  %conv14 = zext i8 %24 to i32, !dbg !6994
  %25 = load i32, i32* %temp, align 4, !dbg !6994
  %sub15 = sub nsw i32 %conv14, %25, !dbg !6994
  %cmp16 = icmp sgt i32 0, %sub15, !dbg !6994
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !6994

cond.true:                                        ; preds = %for.body11
  br label %cond.end, !dbg !6994

cond.false:                                       ; preds = %for.body11
  %26 = load i8*, i8** %rt1, align 8, !dbg !6994
  %27 = load i8, i8* %26, align 1, !dbg !6994
  %conv18 = zext i8 %27 to i32, !dbg !6994
  %28 = load i32, i32* %temp, align 4, !dbg !6994
  %sub19 = sub nsw i32 %conv18, %28, !dbg !6994
  br label %cond.end, !dbg !6994

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub19, %cond.false ], !dbg !6994
  %conv20 = trunc i32 %cond to i8, !dbg !6994
  %29 = load i8*, i8** %out, align 8, !dbg !6995
  %incdec.ptr = getelementptr inbounds i8, i8* %29, i32 1, !dbg !6995
  store i8* %incdec.ptr, i8** %out, align 8, !dbg !6995
  store i8 %conv20, i8* %29, align 1, !dbg !6996
  %30 = load i8*, i8** %rt1, align 8, !dbg !6997
  %incdec.ptr21 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6997
  store i8* %incdec.ptr21, i8** %rt1, align 8, !dbg !6997
  %31 = load i8*, i8** %rt1, align 8, !dbg !6998
  %32 = load i8, i8* %31, align 1, !dbg !6998
  %conv22 = zext i8 %32 to i32, !dbg !6998
  %33 = load i32, i32* %temp, align 4, !dbg !6998
  %sub23 = sub nsw i32 %conv22, %33, !dbg !6998
  %cmp24 = icmp sgt i32 0, %sub23, !dbg !6998
  br i1 %cmp24, label %cond.true26, label %cond.false27, !dbg !6998

cond.true26:                                      ; preds = %cond.end
  br label %cond.end30, !dbg !6998

cond.false27:                                     ; preds = %cond.end
  %34 = load i8*, i8** %rt1, align 8, !dbg !6998
  %35 = load i8, i8* %34, align 1, !dbg !6998
  %conv28 = zext i8 %35 to i32, !dbg !6998
  %36 = load i32, i32* %temp, align 4, !dbg !6998
  %sub29 = sub nsw i32 %conv28, %36, !dbg !6998
  br label %cond.end30, !dbg !6998

cond.end30:                                       ; preds = %cond.false27, %cond.true26
  %cond31 = phi i32 [ 0, %cond.true26 ], [ %sub29, %cond.false27 ], !dbg !6998
  %conv32 = trunc i32 %cond31 to i8, !dbg !6998
  %37 = load i8*, i8** %out, align 8, !dbg !6999
  %incdec.ptr33 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !6999
  store i8* %incdec.ptr33, i8** %out, align 8, !dbg !6999
  store i8 %conv32, i8* %37, align 1, !dbg !7000
  %38 = load i8*, i8** %rt1, align 8, !dbg !7001
  %incdec.ptr34 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !7001
  store i8* %incdec.ptr34, i8** %rt1, align 8, !dbg !7001
  %39 = load i8*, i8** %rt1, align 8, !dbg !7002
  %40 = load i8, i8* %39, align 1, !dbg !7002
  %conv35 = zext i8 %40 to i32, !dbg !7002
  %41 = load i32, i32* %temp, align 4, !dbg !7002
  %sub36 = sub nsw i32 %conv35, %41, !dbg !7002
  %cmp37 = icmp sgt i32 0, %sub36, !dbg !7002
  br i1 %cmp37, label %cond.true39, label %cond.false40, !dbg !7002

cond.true39:                                      ; preds = %cond.end30
  br label %cond.end43, !dbg !7002

cond.false40:                                     ; preds = %cond.end30
  %42 = load i8*, i8** %rt1, align 8, !dbg !7002
  %43 = load i8, i8* %42, align 1, !dbg !7002
  %conv41 = zext i8 %43 to i32, !dbg !7002
  %44 = load i32, i32* %temp, align 4, !dbg !7002
  %sub42 = sub nsw i32 %conv41, %44, !dbg !7002
  br label %cond.end43, !dbg !7002

cond.end43:                                       ; preds = %cond.false40, %cond.true39
  %cond44 = phi i32 [ 0, %cond.true39 ], [ %sub42, %cond.false40 ], !dbg !7002
  %conv45 = trunc i32 %cond44 to i8, !dbg !7002
  %45 = load i8*, i8** %out, align 8, !dbg !7003
  %incdec.ptr46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !7003
  store i8* %incdec.ptr46, i8** %out, align 8, !dbg !7003
  store i8 %conv45, i8* %45, align 1, !dbg !7004
  %46 = load i8*, i8** %rt1, align 8, !dbg !7005
  %incdec.ptr47 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !7005
  store i8* %incdec.ptr47, i8** %rt1, align 8, !dbg !7005
  %47 = load i8*, i8** %rt1, align 8, !dbg !7006
  %48 = load i8, i8* %47, align 1, !dbg !7006
  %conv48 = zext i8 %48 to i32, !dbg !7006
  %49 = load i32, i32* %temp, align 4, !dbg !7006
  %sub49 = sub nsw i32 %conv48, %49, !dbg !7006
  %cmp50 = icmp sgt i32 0, %sub49, !dbg !7006
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !7006

cond.true52:                                      ; preds = %cond.end43
  br label %cond.end56, !dbg !7006

cond.false53:                                     ; preds = %cond.end43
  %50 = load i8*, i8** %rt1, align 8, !dbg !7006
  %51 = load i8, i8* %50, align 1, !dbg !7006
  %conv54 = zext i8 %51 to i32, !dbg !7006
  %52 = load i32, i32* %temp, align 4, !dbg !7006
  %sub55 = sub nsw i32 %conv54, %52, !dbg !7006
  br label %cond.end56, !dbg !7006

cond.end56:                                       ; preds = %cond.false53, %cond.true52
  %cond57 = phi i32 [ 0, %cond.true52 ], [ %sub55, %cond.false53 ], !dbg !7006
  %conv58 = trunc i32 %cond57 to i8, !dbg !7006
  %53 = load i8*, i8** %out, align 8, !dbg !7007
  %incdec.ptr59 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !7007
  store i8* %incdec.ptr59, i8** %out, align 8, !dbg !7007
  store i8 %conv58, i8* %53, align 1, !dbg !7008
  %54 = load i8*, i8** %rt1, align 8, !dbg !7009
  %incdec.ptr60 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !7009
  store i8* %incdec.ptr60, i8** %rt1, align 8, !dbg !7009
  %55 = load i8*, i8** %rt2, align 8, !dbg !7010
  %add.ptr61 = getelementptr inbounds i8, i8* %55, i64 4, !dbg !7010
  store i8* %add.ptr61, i8** %rt2, align 8, !dbg !7010
  br label %for.inc, !dbg !7011

for.inc:                                          ; preds = %cond.end56
  %56 = load i32, i32* %x.addr, align 4, !dbg !7012
  %inc = add nsw i32 %56, 1, !dbg !7012
  store i32 %inc, i32* %x.addr, align 4, !dbg !7012
  br label %for.cond8, !dbg !7013, !llvm.loop !7014

for.end:                                          ; preds = %for.cond8
  %57 = load i8*, i8** %rt2, align 8, !dbg !7016
  %add.ptr62 = getelementptr inbounds i8, i8* %57, i64 32, !dbg !7016
  store i8* %add.ptr62, i8** %rt2, align 8, !dbg !7016
  br label %for.inc63, !dbg !7017

for.inc63:                                        ; preds = %for.end
  %58 = load i32, i32* %y.addr, align 4, !dbg !7018
  %inc64 = add nsw i32 %58, 1, !dbg !7018
  store i32 %inc64, i32* %y.addr, align 4, !dbg !7018
  br label %for.cond, !dbg !7019, !llvm.loop !7020

for.end65:                                        ; preds = %for.cond
  %59 = load i8*, i8** %out, align 8, !dbg !7022
  %60 = load i8*, i8** %rt1, align 8, !dbg !7023
  %61 = load i32, i32* %width, align 4, !dbg !7024
  %conv66 = sext i32 %61 to i64, !dbg !7024
  %mul67 = mul i64 32, %conv66, !dbg !7025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %60, i64 %mul67, i1 false), !dbg !7026
  ret void, !dbg !7027
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_alphaunder_effect_float(float %facf0, float %facf1, i32 %x, i32 %y, float* %rect1, float* %rect2, float* %out) #0 !dbg !7028 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %fac2 = alloca float, align 4
  %fac = alloca float, align 4
  %fac4 = alloca float, align 4
  %xo = alloca i32, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %rt = alloca float*, align 8
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !7029, metadata !DIExpression()), !dbg !7030
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !7031, metadata !DIExpression()), !dbg !7032
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7033, metadata !DIExpression()), !dbg !7034
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7035, metadata !DIExpression()), !dbg !7036
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !7037, metadata !DIExpression()), !dbg !7038
  store float* %rect2, float** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2.addr, metadata !7039, metadata !DIExpression()), !dbg !7040
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !7041, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !7043, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7045, metadata !DIExpression()), !dbg !7046
  call void @llvm.dbg.declare(metadata float* %fac4, metadata !7047, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !7049, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !7051, metadata !DIExpression()), !dbg !7052
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !7053, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.declare(metadata float** %rt, metadata !7055, metadata !DIExpression()), !dbg !7056
  %0 = load i32, i32* %x.addr, align 4, !dbg !7057
  store i32 %0, i32* %xo, align 4, !dbg !7058
  %1 = load float*, float** %rect1.addr, align 8, !dbg !7059
  store float* %1, float** %rt1, align 8, !dbg !7060
  %2 = load float*, float** %rect2.addr, align 8, !dbg !7061
  store float* %2, float** %rt2, align 8, !dbg !7062
  %3 = load float*, float** %out.addr, align 8, !dbg !7063
  store float* %3, float** %rt, align 8, !dbg !7064
  %4 = load float, float* %facf0.addr, align 4, !dbg !7065
  store float %4, float* %fac2, align 4, !dbg !7066
  %5 = load float, float* %facf1.addr, align 4, !dbg !7067
  store float %5, float* %fac4, align 4, !dbg !7068
  br label %while.cond, !dbg !7069

while.cond:                                       ; preds = %while.end87, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !7070
  %dec = add nsw i32 %6, -1, !dbg !7070
  store i32 %dec, i32* %y.addr, align 4, !dbg !7070
  %tobool = icmp ne i32 %6, 0, !dbg !7069
  br i1 %tobool, label %while.body, label %while.end88, !dbg !7069

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !7071
  store i32 %7, i32* %x.addr, align 4, !dbg !7073
  br label %while.cond1, !dbg !7074

while.cond1:                                      ; preds = %if.end34, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !7075
  %dec2 = add nsw i32 %8, -1, !dbg !7075
  store i32 %dec2, i32* %x.addr, align 4, !dbg !7075
  %tobool3 = icmp ne i32 %8, 0, !dbg !7074
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !7074

while.body4:                                      ; preds = %while.cond1
  %9 = load float*, float** %rt2, align 8, !dbg !7076
  %arrayidx = getelementptr inbounds float, float* %9, i64 3, !dbg !7076
  %10 = load float, float* %arrayidx, align 4, !dbg !7076
  %cmp = fcmp ole float %10, 0.000000e+00, !dbg !7079
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7080

land.lhs.true:                                    ; preds = %while.body4
  %11 = load float, float* %fac2, align 4, !dbg !7081
  %cmp5 = fcmp oge float %11, 1.000000e+00, !dbg !7082
  br i1 %cmp5, label %if.then, label %if.else, !dbg !7083

if.then:                                          ; preds = %land.lhs.true
  %12 = load float*, float** %rt, align 8, !dbg !7084
  %13 = bitcast float* %12 to i8*, !dbg !7086
  %14 = load float*, float** %rt1, align 8, !dbg !7087
  %15 = bitcast float* %14 to i8*, !dbg !7086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %15, i64 16, i1 false), !dbg !7086
  br label %if.end34, !dbg !7088

if.else:                                          ; preds = %land.lhs.true, %while.body4
  %16 = load float*, float** %rt2, align 8, !dbg !7089
  %arrayidx6 = getelementptr inbounds float, float* %16, i64 3, !dbg !7089
  %17 = load float, float* %arrayidx6, align 4, !dbg !7089
  %cmp7 = fcmp oge float %17, 1.000000e+00, !dbg !7091
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !7092

if.then8:                                         ; preds = %if.else
  %18 = load float*, float** %rt, align 8, !dbg !7093
  %19 = bitcast float* %18 to i8*, !dbg !7095
  %20 = load float*, float** %rt2, align 8, !dbg !7096
  %21 = bitcast float* %20 to i8*, !dbg !7095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %21, i64 16, i1 false), !dbg !7095
  br label %if.end33, !dbg !7097

if.else9:                                         ; preds = %if.else
  %22 = load float, float* %fac2, align 4, !dbg !7098
  %23 = load float*, float** %rt2, align 8, !dbg !7100
  %arrayidx10 = getelementptr inbounds float, float* %23, i64 3, !dbg !7100
  %24 = load float, float* %arrayidx10, align 4, !dbg !7100
  %sub = fsub float 1.000000e+00, %24, !dbg !7101
  %mul = fmul float %22, %sub, !dbg !7102
  store float %mul, float* %fac, align 4, !dbg !7103
  %25 = load float, float* %fac, align 4, !dbg !7104
  %cmp11 = fcmp oeq float %25, 0.000000e+00, !dbg !7106
  br i1 %cmp11, label %if.then12, label %if.else13, !dbg !7107

if.then12:                                        ; preds = %if.else9
  %26 = load float*, float** %rt, align 8, !dbg !7108
  %27 = bitcast float* %26 to i8*, !dbg !7110
  %28 = load float*, float** %rt2, align 8, !dbg !7111
  %29 = bitcast float* %28 to i8*, !dbg !7110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %29, i64 16, i1 false), !dbg !7110
  br label %if.end, !dbg !7112

if.else13:                                        ; preds = %if.else9
  %30 = load float, float* %fac, align 4, !dbg !7113
  %31 = load float*, float** %rt1, align 8, !dbg !7115
  %arrayidx14 = getelementptr inbounds float, float* %31, i64 0, !dbg !7115
  %32 = load float, float* %arrayidx14, align 4, !dbg !7115
  %mul15 = fmul float %30, %32, !dbg !7116
  %33 = load float*, float** %rt2, align 8, !dbg !7117
  %arrayidx16 = getelementptr inbounds float, float* %33, i64 0, !dbg !7117
  %34 = load float, float* %arrayidx16, align 4, !dbg !7117
  %add = fadd float %mul15, %34, !dbg !7118
  %35 = load float*, float** %rt, align 8, !dbg !7119
  %arrayidx17 = getelementptr inbounds float, float* %35, i64 0, !dbg !7119
  store float %add, float* %arrayidx17, align 4, !dbg !7120
  %36 = load float, float* %fac, align 4, !dbg !7121
  %37 = load float*, float** %rt1, align 8, !dbg !7122
  %arrayidx18 = getelementptr inbounds float, float* %37, i64 1, !dbg !7122
  %38 = load float, float* %arrayidx18, align 4, !dbg !7122
  %mul19 = fmul float %36, %38, !dbg !7123
  %39 = load float*, float** %rt2, align 8, !dbg !7124
  %arrayidx20 = getelementptr inbounds float, float* %39, i64 1, !dbg !7124
  %40 = load float, float* %arrayidx20, align 4, !dbg !7124
  %add21 = fadd float %mul19, %40, !dbg !7125
  %41 = load float*, float** %rt, align 8, !dbg !7126
  %arrayidx22 = getelementptr inbounds float, float* %41, i64 1, !dbg !7126
  store float %add21, float* %arrayidx22, align 4, !dbg !7127
  %42 = load float, float* %fac, align 4, !dbg !7128
  %43 = load float*, float** %rt1, align 8, !dbg !7129
  %arrayidx23 = getelementptr inbounds float, float* %43, i64 2, !dbg !7129
  %44 = load float, float* %arrayidx23, align 4, !dbg !7129
  %mul24 = fmul float %42, %44, !dbg !7130
  %45 = load float*, float** %rt2, align 8, !dbg !7131
  %arrayidx25 = getelementptr inbounds float, float* %45, i64 2, !dbg !7131
  %46 = load float, float* %arrayidx25, align 4, !dbg !7131
  %add26 = fadd float %mul24, %46, !dbg !7132
  %47 = load float*, float** %rt, align 8, !dbg !7133
  %arrayidx27 = getelementptr inbounds float, float* %47, i64 2, !dbg !7133
  store float %add26, float* %arrayidx27, align 4, !dbg !7134
  %48 = load float, float* %fac, align 4, !dbg !7135
  %49 = load float*, float** %rt1, align 8, !dbg !7136
  %arrayidx28 = getelementptr inbounds float, float* %49, i64 3, !dbg !7136
  %50 = load float, float* %arrayidx28, align 4, !dbg !7136
  %mul29 = fmul float %48, %50, !dbg !7137
  %51 = load float*, float** %rt2, align 8, !dbg !7138
  %arrayidx30 = getelementptr inbounds float, float* %51, i64 3, !dbg !7138
  %52 = load float, float* %arrayidx30, align 4, !dbg !7138
  %add31 = fadd float %mul29, %52, !dbg !7139
  %53 = load float*, float** %rt, align 8, !dbg !7140
  %arrayidx32 = getelementptr inbounds float, float* %53, i64 3, !dbg !7140
  store float %add31, float* %arrayidx32, align 4, !dbg !7141
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then12
  br label %if.end33

if.end33:                                         ; preds = %if.end, %if.then8
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  %54 = load float*, float** %rt1, align 8, !dbg !7142
  %add.ptr = getelementptr inbounds float, float* %54, i64 4, !dbg !7142
  store float* %add.ptr, float** %rt1, align 8, !dbg !7142
  %55 = load float*, float** %rt2, align 8, !dbg !7143
  %add.ptr35 = getelementptr inbounds float, float* %55, i64 4, !dbg !7143
  store float* %add.ptr35, float** %rt2, align 8, !dbg !7143
  %56 = load float*, float** %rt, align 8, !dbg !7144
  %add.ptr36 = getelementptr inbounds float, float* %56, i64 4, !dbg !7144
  store float* %add.ptr36, float** %rt, align 8, !dbg !7144
  br label %while.cond1, !dbg !7074, !llvm.loop !7145

while.end:                                        ; preds = %while.cond1
  %57 = load i32, i32* %y.addr, align 4, !dbg !7147
  %cmp37 = icmp eq i32 %57, 0, !dbg !7149
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !7150

if.then38:                                        ; preds = %while.end
  br label %while.end88, !dbg !7151

if.end39:                                         ; preds = %while.end
  %58 = load i32, i32* %y.addr, align 4, !dbg !7152
  %dec40 = add nsw i32 %58, -1, !dbg !7152
  store i32 %dec40, i32* %y.addr, align 4, !dbg !7152
  %59 = load i32, i32* %xo, align 4, !dbg !7153
  store i32 %59, i32* %x.addr, align 4, !dbg !7154
  br label %while.cond41, !dbg !7155

while.cond41:                                     ; preds = %if.end83, %if.end39
  %60 = load i32, i32* %x.addr, align 4, !dbg !7156
  %dec42 = add nsw i32 %60, -1, !dbg !7156
  store i32 %dec42, i32* %x.addr, align 4, !dbg !7156
  %tobool43 = icmp ne i32 %60, 0, !dbg !7155
  br i1 %tobool43, label %while.body44, label %while.end87, !dbg !7155

while.body44:                                     ; preds = %while.cond41
  %61 = load float*, float** %rt2, align 8, !dbg !7157
  %arrayidx45 = getelementptr inbounds float, float* %61, i64 3, !dbg !7157
  %62 = load float, float* %arrayidx45, align 4, !dbg !7157
  %cmp46 = fcmp ole float %62, 0.000000e+00, !dbg !7160
  br i1 %cmp46, label %land.lhs.true47, label %if.else50, !dbg !7161

land.lhs.true47:                                  ; preds = %while.body44
  %63 = load float, float* %fac4, align 4, !dbg !7162
  %cmp48 = fcmp oge float %63, 1.000000e+00, !dbg !7163
  br i1 %cmp48, label %if.then49, label %if.else50, !dbg !7164

if.then49:                                        ; preds = %land.lhs.true47
  %64 = load float*, float** %rt, align 8, !dbg !7165
  %65 = bitcast float* %64 to i8*, !dbg !7167
  %66 = load float*, float** %rt1, align 8, !dbg !7168
  %67 = bitcast float* %66 to i8*, !dbg !7167
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %67, i64 16, i1 false), !dbg !7167
  br label %if.end83, !dbg !7169

if.else50:                                        ; preds = %land.lhs.true47, %while.body44
  %68 = load float*, float** %rt2, align 8, !dbg !7170
  %arrayidx51 = getelementptr inbounds float, float* %68, i64 3, !dbg !7170
  %69 = load float, float* %arrayidx51, align 4, !dbg !7170
  %cmp52 = fcmp oge float %69, 1.000000e+00, !dbg !7172
  br i1 %cmp52, label %if.then53, label %if.else54, !dbg !7173

if.then53:                                        ; preds = %if.else50
  %70 = load float*, float** %rt, align 8, !dbg !7174
  %71 = bitcast float* %70 to i8*, !dbg !7176
  %72 = load float*, float** %rt2, align 8, !dbg !7177
  %73 = bitcast float* %72 to i8*, !dbg !7176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %73, i64 16, i1 false), !dbg !7176
  br label %if.end82, !dbg !7178

if.else54:                                        ; preds = %if.else50
  %74 = load float, float* %fac4, align 4, !dbg !7179
  %75 = load float*, float** %rt2, align 8, !dbg !7181
  %arrayidx55 = getelementptr inbounds float, float* %75, i64 3, !dbg !7181
  %76 = load float, float* %arrayidx55, align 4, !dbg !7181
  %sub56 = fsub float 1.000000e+00, %76, !dbg !7182
  %mul57 = fmul float %74, %sub56, !dbg !7183
  store float %mul57, float* %fac, align 4, !dbg !7184
  %77 = load float, float* %fac, align 4, !dbg !7185
  %cmp58 = fcmp oeq float %77, 0.000000e+00, !dbg !7187
  br i1 %cmp58, label %if.then59, label %if.else60, !dbg !7188

if.then59:                                        ; preds = %if.else54
  %78 = load float*, float** %rt, align 8, !dbg !7189
  %79 = bitcast float* %78 to i8*, !dbg !7191
  %80 = load float*, float** %rt2, align 8, !dbg !7192
  %81 = bitcast float* %80 to i8*, !dbg !7191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %81, i64 16, i1 false), !dbg !7191
  br label %if.end81, !dbg !7193

if.else60:                                        ; preds = %if.else54
  %82 = load float, float* %fac, align 4, !dbg !7194
  %83 = load float*, float** %rt1, align 8, !dbg !7196
  %arrayidx61 = getelementptr inbounds float, float* %83, i64 0, !dbg !7196
  %84 = load float, float* %arrayidx61, align 4, !dbg !7196
  %mul62 = fmul float %82, %84, !dbg !7197
  %85 = load float*, float** %rt2, align 8, !dbg !7198
  %arrayidx63 = getelementptr inbounds float, float* %85, i64 0, !dbg !7198
  %86 = load float, float* %arrayidx63, align 4, !dbg !7198
  %add64 = fadd float %mul62, %86, !dbg !7199
  %87 = load float*, float** %rt, align 8, !dbg !7200
  %arrayidx65 = getelementptr inbounds float, float* %87, i64 0, !dbg !7200
  store float %add64, float* %arrayidx65, align 4, !dbg !7201
  %88 = load float, float* %fac, align 4, !dbg !7202
  %89 = load float*, float** %rt1, align 8, !dbg !7203
  %arrayidx66 = getelementptr inbounds float, float* %89, i64 1, !dbg !7203
  %90 = load float, float* %arrayidx66, align 4, !dbg !7203
  %mul67 = fmul float %88, %90, !dbg !7204
  %91 = load float*, float** %rt2, align 8, !dbg !7205
  %arrayidx68 = getelementptr inbounds float, float* %91, i64 1, !dbg !7205
  %92 = load float, float* %arrayidx68, align 4, !dbg !7205
  %add69 = fadd float %mul67, %92, !dbg !7206
  %93 = load float*, float** %rt, align 8, !dbg !7207
  %arrayidx70 = getelementptr inbounds float, float* %93, i64 1, !dbg !7207
  store float %add69, float* %arrayidx70, align 4, !dbg !7208
  %94 = load float, float* %fac, align 4, !dbg !7209
  %95 = load float*, float** %rt1, align 8, !dbg !7210
  %arrayidx71 = getelementptr inbounds float, float* %95, i64 2, !dbg !7210
  %96 = load float, float* %arrayidx71, align 4, !dbg !7210
  %mul72 = fmul float %94, %96, !dbg !7211
  %97 = load float*, float** %rt2, align 8, !dbg !7212
  %arrayidx73 = getelementptr inbounds float, float* %97, i64 2, !dbg !7212
  %98 = load float, float* %arrayidx73, align 4, !dbg !7212
  %add74 = fadd float %mul72, %98, !dbg !7213
  %99 = load float*, float** %rt, align 8, !dbg !7214
  %arrayidx75 = getelementptr inbounds float, float* %99, i64 2, !dbg !7214
  store float %add74, float* %arrayidx75, align 4, !dbg !7215
  %100 = load float, float* %fac, align 4, !dbg !7216
  %101 = load float*, float** %rt1, align 8, !dbg !7217
  %arrayidx76 = getelementptr inbounds float, float* %101, i64 3, !dbg !7217
  %102 = load float, float* %arrayidx76, align 4, !dbg !7217
  %mul77 = fmul float %100, %102, !dbg !7218
  %103 = load float*, float** %rt2, align 8, !dbg !7219
  %arrayidx78 = getelementptr inbounds float, float* %103, i64 3, !dbg !7219
  %104 = load float, float* %arrayidx78, align 4, !dbg !7219
  %add79 = fadd float %mul77, %104, !dbg !7220
  %105 = load float*, float** %rt, align 8, !dbg !7221
  %arrayidx80 = getelementptr inbounds float, float* %105, i64 3, !dbg !7221
  store float %add79, float* %arrayidx80, align 4, !dbg !7222
  br label %if.end81

if.end81:                                         ; preds = %if.else60, %if.then59
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then53
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then49
  %106 = load float*, float** %rt1, align 8, !dbg !7223
  %add.ptr84 = getelementptr inbounds float, float* %106, i64 4, !dbg !7223
  store float* %add.ptr84, float** %rt1, align 8, !dbg !7223
  %107 = load float*, float** %rt2, align 8, !dbg !7224
  %add.ptr85 = getelementptr inbounds float, float* %107, i64 4, !dbg !7224
  store float* %add.ptr85, float** %rt2, align 8, !dbg !7224
  %108 = load float*, float** %rt, align 8, !dbg !7225
  %add.ptr86 = getelementptr inbounds float, float* %108, i64 4, !dbg !7225
  store float* %add.ptr86, float** %rt, align 8, !dbg !7225
  br label %while.cond41, !dbg !7155, !llvm.loop !7226

while.end87:                                      ; preds = %while.cond41
  br label %while.cond, !dbg !7069, !llvm.loop !7228

while.end88:                                      ; preds = %if.then38, %while.cond
  ret void, !dbg !7230
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_alphaunder_effect_byte(float %facf0, float %facf1, i32 %x, i32 %y, i8* %rect1, i8* %rect2, i8* %out) #0 !dbg !7231 {
entry:
  %facf0.addr = alloca float, align 4
  %facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %fac2 = alloca float, align 4
  %fac = alloca float, align 4
  %fac4 = alloca float, align 4
  %xo = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %rt = alloca i8*, align 8
  %tempc = alloca [4 x float], align 16
  %rt1 = alloca [4 x float], align 16
  %rt2 = alloca [4 x float], align 16
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !7232, metadata !DIExpression()), !dbg !7233
  store float %facf1, float* %facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf1.addr, metadata !7234, metadata !DIExpression()), !dbg !7235
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7236, metadata !DIExpression()), !dbg !7237
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7238, metadata !DIExpression()), !dbg !7239
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !7240, metadata !DIExpression()), !dbg !7241
  store i8* %rect2, i8** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2.addr, metadata !7242, metadata !DIExpression()), !dbg !7243
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !7244, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !7246, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7248, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.declare(metadata float* %fac4, metadata !7250, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !7252, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !7254, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !7256, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.declare(metadata i8** %rt, metadata !7258, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.declare(metadata [4 x float]* %tempc, metadata !7260, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.declare(metadata [4 x float]* %rt1, metadata !7262, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.declare(metadata [4 x float]* %rt2, metadata !7264, metadata !DIExpression()), !dbg !7265
  %0 = load i32, i32* %x.addr, align 4, !dbg !7266
  store i32 %0, i32* %xo, align 4, !dbg !7267
  %1 = load i8*, i8** %rect1.addr, align 8, !dbg !7268
  store i8* %1, i8** %cp1, align 8, !dbg !7269
  %2 = load i8*, i8** %rect2.addr, align 8, !dbg !7270
  store i8* %2, i8** %cp2, align 8, !dbg !7271
  %3 = load i8*, i8** %out.addr, align 8, !dbg !7272
  store i8* %3, i8** %rt, align 8, !dbg !7273
  %4 = load float, float* %facf0.addr, align 4, !dbg !7274
  store float %4, float* %fac2, align 4, !dbg !7275
  %5 = load float, float* %facf1.addr, align 4, !dbg !7276
  store float %5, float* %fac4, align 4, !dbg !7277
  br label %while.cond, !dbg !7278

while.cond:                                       ; preds = %while.end92, %entry
  %6 = load i32, i32* %y.addr, align 4, !dbg !7279
  %dec = add nsw i32 %6, -1, !dbg !7279
  store i32 %dec, i32* %y.addr, align 4, !dbg !7279
  %tobool = icmp ne i32 %6, 0, !dbg !7278
  br i1 %tobool, label %while.body, label %while.end93, !dbg !7278

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %xo, align 4, !dbg !7280
  store i32 %7, i32* %x.addr, align 4, !dbg !7282
  br label %while.cond1, !dbg !7283

while.cond1:                                      ; preds = %if.end36, %while.body
  %8 = load i32, i32* %x.addr, align 4, !dbg !7284
  %dec2 = add nsw i32 %8, -1, !dbg !7284
  store i32 %dec2, i32* %x.addr, align 4, !dbg !7284
  %tobool3 = icmp ne i32 %8, 0, !dbg !7283
  br i1 %tobool3, label %while.body4, label %while.end, !dbg !7283

while.body4:                                      ; preds = %while.cond1
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !7285
  %9 = load i8*, i8** %cp1, align 8, !dbg !7287
  call void @straight_uchar_to_premul_float(float* %arraydecay, i8* %9), !dbg !7288
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !7289
  %10 = load i8*, i8** %cp2, align 8, !dbg !7290
  call void @straight_uchar_to_premul_float(float* %arraydecay5, i8* %10), !dbg !7291
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7292
  %11 = load float, float* %arrayidx, align 4, !dbg !7292
  %cmp = fcmp ole float %11, 0.000000e+00, !dbg !7294
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7295

land.lhs.true:                                    ; preds = %while.body4
  %12 = load float, float* %fac2, align 4, !dbg !7296
  %cmp6 = fcmp oge float %12, 1.000000e+00, !dbg !7297
  br i1 %cmp6, label %if.then, label %if.else, !dbg !7298

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %cp1, align 8, !dbg !7299
  %14 = bitcast i8* %13 to i32*, !dbg !7300
  %15 = load i32, i32* %14, align 4, !dbg !7300
  %16 = load i8*, i8** %rt, align 8, !dbg !7301
  %17 = bitcast i8* %16 to i32*, !dbg !7302
  store i32 %15, i32* %17, align 4, !dbg !7303
  br label %if.end36, !dbg !7302

if.else:                                          ; preds = %land.lhs.true, %while.body4
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7304
  %18 = load float, float* %arrayidx7, align 4, !dbg !7304
  %cmp8 = fcmp oge float %18, 1.000000e+00, !dbg !7306
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !7307

if.then9:                                         ; preds = %if.else
  %19 = load i8*, i8** %cp2, align 8, !dbg !7308
  %20 = bitcast i8* %19 to i32*, !dbg !7309
  %21 = load i32, i32* %20, align 4, !dbg !7309
  %22 = load i8*, i8** %rt, align 8, !dbg !7310
  %23 = bitcast i8* %22 to i32*, !dbg !7311
  store i32 %21, i32* %23, align 4, !dbg !7312
  br label %if.end35, !dbg !7311

if.else10:                                        ; preds = %if.else
  %24 = load float, float* %fac2, align 4, !dbg !7313
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7315
  %25 = load float, float* %arrayidx11, align 4, !dbg !7315
  %sub = fsub float 1.000000e+00, %25, !dbg !7316
  %mul = fmul float %24, %sub, !dbg !7317
  store float %mul, float* %fac, align 4, !dbg !7318
  %26 = load float, float* %fac, align 4, !dbg !7319
  %cmp12 = fcmp ole float %26, 0.000000e+00, !dbg !7321
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !7322

if.then13:                                        ; preds = %if.else10
  %27 = load i8*, i8** %cp2, align 8, !dbg !7323
  %28 = bitcast i8* %27 to i32*, !dbg !7324
  %29 = load i32, i32* %28, align 4, !dbg !7324
  %30 = load i8*, i8** %rt, align 8, !dbg !7325
  %31 = bitcast i8* %30 to i32*, !dbg !7326
  store i32 %29, i32* %31, align 4, !dbg !7327
  br label %if.end, !dbg !7326

if.else14:                                        ; preds = %if.else10
  %32 = load float, float* %fac, align 4, !dbg !7328
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !7330
  %33 = load float, float* %arrayidx15, align 16, !dbg !7330
  %mul16 = fmul float %32, %33, !dbg !7331
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !7332
  %34 = load float, float* %arrayidx17, align 16, !dbg !7332
  %add = fadd float %mul16, %34, !dbg !7333
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !7334
  store float %add, float* %arrayidx18, align 16, !dbg !7335
  %35 = load float, float* %fac, align 4, !dbg !7336
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 1, !dbg !7337
  %36 = load float, float* %arrayidx19, align 4, !dbg !7337
  %mul20 = fmul float %35, %36, !dbg !7338
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 1, !dbg !7339
  %37 = load float, float* %arrayidx21, align 4, !dbg !7339
  %add22 = fadd float %mul20, %37, !dbg !7340
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 1, !dbg !7341
  store float %add22, float* %arrayidx23, align 4, !dbg !7342
  %38 = load float, float* %fac, align 4, !dbg !7343
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 2, !dbg !7344
  %39 = load float, float* %arrayidx24, align 8, !dbg !7344
  %mul25 = fmul float %38, %39, !dbg !7345
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 2, !dbg !7346
  %40 = load float, float* %arrayidx26, align 8, !dbg !7346
  %add27 = fadd float %mul25, %40, !dbg !7347
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 2, !dbg !7348
  store float %add27, float* %arrayidx28, align 8, !dbg !7349
  %41 = load float, float* %fac, align 4, !dbg !7350
  %arrayidx29 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !7351
  %42 = load float, float* %arrayidx29, align 4, !dbg !7351
  %mul30 = fmul float %41, %42, !dbg !7352
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7353
  %43 = load float, float* %arrayidx31, align 4, !dbg !7353
  %add32 = fadd float %mul30, %43, !dbg !7354
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 3, !dbg !7355
  store float %add32, float* %arrayidx33, align 4, !dbg !7356
  %44 = load i8*, i8** %rt, align 8, !dbg !7357
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !7358
  call void @premul_float_to_straight_uchar(i8* %44, float* %arraydecay34), !dbg !7359
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then13
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then9
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then
  %45 = load i8*, i8** %cp1, align 8, !dbg !7360
  %add.ptr = getelementptr inbounds i8, i8* %45, i64 4, !dbg !7360
  store i8* %add.ptr, i8** %cp1, align 8, !dbg !7360
  %46 = load i8*, i8** %cp2, align 8, !dbg !7361
  %add.ptr37 = getelementptr inbounds i8, i8* %46, i64 4, !dbg !7361
  store i8* %add.ptr37, i8** %cp2, align 8, !dbg !7361
  %47 = load i8*, i8** %rt, align 8, !dbg !7362
  %add.ptr38 = getelementptr inbounds i8, i8* %47, i64 4, !dbg !7362
  store i8* %add.ptr38, i8** %rt, align 8, !dbg !7362
  br label %while.cond1, !dbg !7283, !llvm.loop !7363

while.end:                                        ; preds = %while.cond1
  %48 = load i32, i32* %y.addr, align 4, !dbg !7365
  %cmp39 = icmp eq i32 %48, 0, !dbg !7367
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !7368

if.then40:                                        ; preds = %while.end
  br label %while.end93, !dbg !7369

if.end41:                                         ; preds = %while.end
  %49 = load i32, i32* %y.addr, align 4, !dbg !7370
  %dec42 = add nsw i32 %49, -1, !dbg !7370
  store i32 %dec42, i32* %y.addr, align 4, !dbg !7370
  %50 = load i32, i32* %xo, align 4, !dbg !7371
  store i32 %50, i32* %x.addr, align 4, !dbg !7372
  br label %while.cond43, !dbg !7373

while.cond43:                                     ; preds = %if.end88, %if.end41
  %51 = load i32, i32* %x.addr, align 4, !dbg !7374
  %dec44 = add nsw i32 %51, -1, !dbg !7374
  store i32 %dec44, i32* %x.addr, align 4, !dbg !7374
  %tobool45 = icmp ne i32 %51, 0, !dbg !7373
  br i1 %tobool45, label %while.body46, label %while.end92, !dbg !7373

while.body46:                                     ; preds = %while.cond43
  %arraydecay47 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !7375
  %52 = load i8*, i8** %cp1, align 8, !dbg !7377
  call void @straight_uchar_to_premul_float(float* %arraydecay47, i8* %52), !dbg !7378
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !7379
  %53 = load i8*, i8** %cp2, align 8, !dbg !7380
  call void @straight_uchar_to_premul_float(float* %arraydecay48, i8* %53), !dbg !7381
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7382
  %54 = load float, float* %arrayidx49, align 4, !dbg !7382
  %cmp50 = fcmp ole float %54, 0.000000e+00, !dbg !7384
  br i1 %cmp50, label %land.lhs.true51, label %if.else54, !dbg !7385

land.lhs.true51:                                  ; preds = %while.body46
  %55 = load float, float* %fac4, align 4, !dbg !7386
  %cmp52 = fcmp oge float %55, 1.000000e+00, !dbg !7387
  br i1 %cmp52, label %if.then53, label %if.else54, !dbg !7388

if.then53:                                        ; preds = %land.lhs.true51
  %56 = load i8*, i8** %cp1, align 8, !dbg !7389
  %57 = bitcast i8* %56 to i32*, !dbg !7390
  %58 = load i32, i32* %57, align 4, !dbg !7390
  %59 = load i8*, i8** %rt, align 8, !dbg !7391
  %60 = bitcast i8* %59 to i32*, !dbg !7392
  store i32 %58, i32* %60, align 4, !dbg !7393
  br label %if.end88, !dbg !7392

if.else54:                                        ; preds = %land.lhs.true51, %while.body46
  %arrayidx55 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7394
  %61 = load float, float* %arrayidx55, align 4, !dbg !7394
  %cmp56 = fcmp oge float %61, 1.000000e+00, !dbg !7396
  br i1 %cmp56, label %if.then57, label %if.else58, !dbg !7397

if.then57:                                        ; preds = %if.else54
  %62 = load i8*, i8** %cp2, align 8, !dbg !7398
  %63 = bitcast i8* %62 to i32*, !dbg !7399
  %64 = load i32, i32* %63, align 4, !dbg !7399
  %65 = load i8*, i8** %rt, align 8, !dbg !7400
  %66 = bitcast i8* %65 to i32*, !dbg !7401
  store i32 %64, i32* %66, align 4, !dbg !7402
  br label %if.end87, !dbg !7401

if.else58:                                        ; preds = %if.else54
  %67 = load float, float* %fac4, align 4, !dbg !7403
  %arrayidx59 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7405
  %68 = load float, float* %arrayidx59, align 4, !dbg !7405
  %sub60 = fsub float 1.000000e+00, %68, !dbg !7406
  %mul61 = fmul float %67, %sub60, !dbg !7407
  store float %mul61, float* %fac, align 4, !dbg !7408
  %69 = load float, float* %fac, align 4, !dbg !7409
  %cmp62 = fcmp ole float %69, 0.000000e+00, !dbg !7411
  br i1 %cmp62, label %if.then63, label %if.else64, !dbg !7412

if.then63:                                        ; preds = %if.else58
  %70 = load i8*, i8** %cp2, align 8, !dbg !7413
  %71 = bitcast i8* %70 to i32*, !dbg !7414
  %72 = load i32, i32* %71, align 4, !dbg !7414
  %73 = load i8*, i8** %rt, align 8, !dbg !7415
  %74 = bitcast i8* %73 to i32*, !dbg !7416
  store i32 %72, i32* %74, align 4, !dbg !7417
  br label %if.end86, !dbg !7416

if.else64:                                        ; preds = %if.else58
  %75 = load float, float* %fac, align 4, !dbg !7418
  %arrayidx65 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !7420
  %76 = load float, float* %arrayidx65, align 16, !dbg !7420
  %mul66 = fmul float %75, %76, !dbg !7421
  %arrayidx67 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !7422
  %77 = load float, float* %arrayidx67, align 16, !dbg !7422
  %add68 = fadd float %mul66, %77, !dbg !7423
  %arrayidx69 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !7424
  store float %add68, float* %arrayidx69, align 16, !dbg !7425
  %78 = load float, float* %fac, align 4, !dbg !7426
  %arrayidx70 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 1, !dbg !7427
  %79 = load float, float* %arrayidx70, align 4, !dbg !7427
  %mul71 = fmul float %78, %79, !dbg !7428
  %arrayidx72 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 1, !dbg !7429
  %80 = load float, float* %arrayidx72, align 4, !dbg !7429
  %add73 = fadd float %mul71, %80, !dbg !7430
  %arrayidx74 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 1, !dbg !7431
  store float %add73, float* %arrayidx74, align 4, !dbg !7432
  %81 = load float, float* %fac, align 4, !dbg !7433
  %arrayidx75 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 2, !dbg !7434
  %82 = load float, float* %arrayidx75, align 8, !dbg !7434
  %mul76 = fmul float %81, %82, !dbg !7435
  %arrayidx77 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 2, !dbg !7436
  %83 = load float, float* %arrayidx77, align 8, !dbg !7436
  %add78 = fadd float %mul76, %83, !dbg !7437
  %arrayidx79 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 2, !dbg !7438
  store float %add78, float* %arrayidx79, align 8, !dbg !7439
  %84 = load float, float* %fac, align 4, !dbg !7440
  %arrayidx80 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !7441
  %85 = load float, float* %arrayidx80, align 4, !dbg !7441
  %mul81 = fmul float %84, %85, !dbg !7442
  %arrayidx82 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7443
  %86 = load float, float* %arrayidx82, align 4, !dbg !7443
  %add83 = fadd float %mul81, %86, !dbg !7444
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 3, !dbg !7445
  store float %add83, float* %arrayidx84, align 4, !dbg !7446
  %87 = load i8*, i8** %rt, align 8, !dbg !7447
  %arraydecay85 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !7448
  call void @premul_float_to_straight_uchar(i8* %87, float* %arraydecay85), !dbg !7449
  br label %if.end86

if.end86:                                         ; preds = %if.else64, %if.then63
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then57
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then53
  %88 = load i8*, i8** %cp1, align 8, !dbg !7450
  %add.ptr89 = getelementptr inbounds i8, i8* %88, i64 4, !dbg !7450
  store i8* %add.ptr89, i8** %cp1, align 8, !dbg !7450
  %89 = load i8*, i8** %cp2, align 8, !dbg !7451
  %add.ptr90 = getelementptr inbounds i8, i8* %89, i64 4, !dbg !7451
  store i8* %add.ptr90, i8** %cp2, align 8, !dbg !7451
  %90 = load i8*, i8** %rt, align 8, !dbg !7452
  %add.ptr91 = getelementptr inbounds i8, i8* %90, i64 4, !dbg !7452
  store i8* %add.ptr91, i8** %rt, align 8, !dbg !7452
  br label %while.cond43, !dbg !7373, !llvm.loop !7453

while.end92:                                      ; preds = %while.cond43
  br label %while.cond, !dbg !7278, !llvm.loop !7455

while.end93:                                      ; preds = %if.then40, %while.cond
  ret void, !dbg !7457
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_wipe_effect_float(%struct.Sequence* %seq, float %facf0, float %UNUSED_facf1, i32 %x, i32 %y, float* %rect1, float* %rect2, float* %out) #0 !dbg !7458 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %wipezone = alloca %struct.WipeZone, align 4
  %wipe = alloca %struct.WipeVars*, align 8
  %xo = alloca i32, align 4
  %yo = alloca i32, align 4
  %rt1 = alloca float*, align 8
  %rt2 = alloca float*, align 8
  %rt = alloca float*, align 8
  %check = alloca float, align 4
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !7463, metadata !DIExpression()), !dbg !7464
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !7465, metadata !DIExpression()), !dbg !7466
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7467, metadata !DIExpression()), !dbg !7468
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7469, metadata !DIExpression()), !dbg !7470
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !7471, metadata !DIExpression()), !dbg !7472
  store float* %rect2, float** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect2.addr, metadata !7473, metadata !DIExpression()), !dbg !7474
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !7475, metadata !DIExpression()), !dbg !7476
  call void @llvm.dbg.declare(metadata %struct.WipeZone* %wipezone, metadata !7477, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.declare(metadata %struct.WipeVars** %wipe, metadata !7488, metadata !DIExpression()), !dbg !7489
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !7490
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !7491
  %1 = load i8*, i8** %effectdata, align 8, !dbg !7491
  %2 = bitcast i8* %1 to %struct.WipeVars*, !dbg !7492
  store %struct.WipeVars* %2, %struct.WipeVars** %wipe, align 8, !dbg !7489
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !7493, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.declare(metadata i32* %yo, metadata !7495, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.declare(metadata float** %rt1, metadata !7497, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.declare(metadata float** %rt2, metadata !7499, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.declare(metadata float** %rt, metadata !7501, metadata !DIExpression()), !dbg !7502
  %3 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !7503
  %4 = load i32, i32* %x.addr, align 4, !dbg !7504
  %5 = load i32, i32* %y.addr, align 4, !dbg !7505
  call void @precalc_wipe_zone(%struct.WipeZone* %wipezone, %struct.WipeVars* %3, i32 %4, i32 %5), !dbg !7506
  %6 = load float*, float** %rect1.addr, align 8, !dbg !7507
  store float* %6, float** %rt1, align 8, !dbg !7508
  %7 = load float*, float** %rect2.addr, align 8, !dbg !7509
  store float* %7, float** %rt2, align 8, !dbg !7510
  %8 = load float*, float** %out.addr, align 8, !dbg !7511
  store float* %8, float** %rt, align 8, !dbg !7512
  %9 = load i32, i32* %x.addr, align 4, !dbg !7513
  store i32 %9, i32* %xo, align 4, !dbg !7514
  %10 = load i32, i32* %y.addr, align 4, !dbg !7515
  store i32 %10, i32* %yo, align 4, !dbg !7516
  store i32 0, i32* %y.addr, align 4, !dbg !7517
  br label %for.cond, !dbg !7519

for.cond:                                         ; preds = %for.inc60, %entry
  %11 = load i32, i32* %y.addr, align 4, !dbg !7520
  %12 = load i32, i32* %yo, align 4, !dbg !7522
  %cmp = icmp slt i32 %11, %12, !dbg !7523
  br i1 %cmp, label %for.body, label %for.end62, !dbg !7524

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x.addr, align 4, !dbg !7525
  br label %for.cond1, !dbg !7528

for.cond1:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %x.addr, align 4, !dbg !7529
  %14 = load i32, i32* %xo, align 4, !dbg !7531
  %cmp2 = icmp slt i32 %13, %14, !dbg !7532
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7533

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata float* %check, metadata !7534, metadata !DIExpression()), !dbg !7536
  %15 = load i32, i32* %x.addr, align 4, !dbg !7537
  %16 = load i32, i32* %y.addr, align 4, !dbg !7538
  %17 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !7539
  %18 = load float, float* %facf0.addr, align 4, !dbg !7540
  %call = call float @check_zone(%struct.WipeZone* %wipezone, i32 %15, i32 %16, %struct.Sequence* %17, float %18), !dbg !7541
  store float %call, float* %check, align 4, !dbg !7536
  %19 = load float, float* %check, align 4, !dbg !7542
  %tobool = fcmp une float %19, 0.000000e+00, !dbg !7542
  br i1 %tobool, label %if.then, label %if.else34, !dbg !7544

if.then:                                          ; preds = %for.body3
  %20 = load float*, float** %rt1, align 8, !dbg !7545
  %tobool4 = icmp ne float* %20, null, !dbg !7545
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !7548

if.then5:                                         ; preds = %if.then
  %21 = load float*, float** %rt1, align 8, !dbg !7549
  %arrayidx = getelementptr inbounds float, float* %21, i64 0, !dbg !7549
  %22 = load float, float* %arrayidx, align 4, !dbg !7549
  %23 = load float, float* %check, align 4, !dbg !7551
  %mul = fmul float %22, %23, !dbg !7552
  %24 = load float*, float** %rt2, align 8, !dbg !7553
  %arrayidx6 = getelementptr inbounds float, float* %24, i64 0, !dbg !7553
  %25 = load float, float* %arrayidx6, align 4, !dbg !7553
  %26 = load float, float* %check, align 4, !dbg !7554
  %sub = fsub float 1.000000e+00, %26, !dbg !7555
  %mul7 = fmul float %25, %sub, !dbg !7556
  %add = fadd float %mul, %mul7, !dbg !7557
  %27 = load float*, float** %rt, align 8, !dbg !7558
  %arrayidx8 = getelementptr inbounds float, float* %27, i64 0, !dbg !7558
  store float %add, float* %arrayidx8, align 4, !dbg !7559
  %28 = load float*, float** %rt1, align 8, !dbg !7560
  %arrayidx9 = getelementptr inbounds float, float* %28, i64 1, !dbg !7560
  %29 = load float, float* %arrayidx9, align 4, !dbg !7560
  %30 = load float, float* %check, align 4, !dbg !7561
  %mul10 = fmul float %29, %30, !dbg !7562
  %31 = load float*, float** %rt2, align 8, !dbg !7563
  %arrayidx11 = getelementptr inbounds float, float* %31, i64 1, !dbg !7563
  %32 = load float, float* %arrayidx11, align 4, !dbg !7563
  %33 = load float, float* %check, align 4, !dbg !7564
  %sub12 = fsub float 1.000000e+00, %33, !dbg !7565
  %mul13 = fmul float %32, %sub12, !dbg !7566
  %add14 = fadd float %mul10, %mul13, !dbg !7567
  %34 = load float*, float** %rt, align 8, !dbg !7568
  %arrayidx15 = getelementptr inbounds float, float* %34, i64 1, !dbg !7568
  store float %add14, float* %arrayidx15, align 4, !dbg !7569
  %35 = load float*, float** %rt1, align 8, !dbg !7570
  %arrayidx16 = getelementptr inbounds float, float* %35, i64 2, !dbg !7570
  %36 = load float, float* %arrayidx16, align 4, !dbg !7570
  %37 = load float, float* %check, align 4, !dbg !7571
  %mul17 = fmul float %36, %37, !dbg !7572
  %38 = load float*, float** %rt2, align 8, !dbg !7573
  %arrayidx18 = getelementptr inbounds float, float* %38, i64 2, !dbg !7573
  %39 = load float, float* %arrayidx18, align 4, !dbg !7573
  %40 = load float, float* %check, align 4, !dbg !7574
  %sub19 = fsub float 1.000000e+00, %40, !dbg !7575
  %mul20 = fmul float %39, %sub19, !dbg !7576
  %add21 = fadd float %mul17, %mul20, !dbg !7577
  %41 = load float*, float** %rt, align 8, !dbg !7578
  %arrayidx22 = getelementptr inbounds float, float* %41, i64 2, !dbg !7578
  store float %add21, float* %arrayidx22, align 4, !dbg !7579
  %42 = load float*, float** %rt1, align 8, !dbg !7580
  %arrayidx23 = getelementptr inbounds float, float* %42, i64 3, !dbg !7580
  %43 = load float, float* %arrayidx23, align 4, !dbg !7580
  %44 = load float, float* %check, align 4, !dbg !7581
  %mul24 = fmul float %43, %44, !dbg !7582
  %45 = load float*, float** %rt2, align 8, !dbg !7583
  %arrayidx25 = getelementptr inbounds float, float* %45, i64 3, !dbg !7583
  %46 = load float, float* %arrayidx25, align 4, !dbg !7583
  %47 = load float, float* %check, align 4, !dbg !7584
  %sub26 = fsub float 1.000000e+00, %47, !dbg !7585
  %mul27 = fmul float %46, %sub26, !dbg !7586
  %add28 = fadd float %mul24, %mul27, !dbg !7587
  %48 = load float*, float** %rt, align 8, !dbg !7588
  %arrayidx29 = getelementptr inbounds float, float* %48, i64 3, !dbg !7588
  store float %add28, float* %arrayidx29, align 4, !dbg !7589
  br label %if.end, !dbg !7590

if.else:                                          ; preds = %if.then
  %49 = load float*, float** %rt, align 8, !dbg !7591
  %arrayidx30 = getelementptr inbounds float, float* %49, i64 0, !dbg !7591
  store float 0.000000e+00, float* %arrayidx30, align 4, !dbg !7593
  %50 = load float*, float** %rt, align 8, !dbg !7594
  %arrayidx31 = getelementptr inbounds float, float* %50, i64 1, !dbg !7594
  store float 0.000000e+00, float* %arrayidx31, align 4, !dbg !7595
  %51 = load float*, float** %rt, align 8, !dbg !7596
  %arrayidx32 = getelementptr inbounds float, float* %51, i64 2, !dbg !7596
  store float 0.000000e+00, float* %arrayidx32, align 4, !dbg !7597
  %52 = load float*, float** %rt, align 8, !dbg !7598
  %arrayidx33 = getelementptr inbounds float, float* %52, i64 3, !dbg !7598
  store float 1.000000e+00, float* %arrayidx33, align 4, !dbg !7599
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end51, !dbg !7600

if.else34:                                        ; preds = %for.body3
  %53 = load float*, float** %rt2, align 8, !dbg !7601
  %tobool35 = icmp ne float* %53, null, !dbg !7601
  br i1 %tobool35, label %if.then36, label %if.else45, !dbg !7604

if.then36:                                        ; preds = %if.else34
  %54 = load float*, float** %rt2, align 8, !dbg !7605
  %arrayidx37 = getelementptr inbounds float, float* %54, i64 0, !dbg !7605
  %55 = load float, float* %arrayidx37, align 4, !dbg !7605
  %56 = load float*, float** %rt, align 8, !dbg !7607
  %arrayidx38 = getelementptr inbounds float, float* %56, i64 0, !dbg !7607
  store float %55, float* %arrayidx38, align 4, !dbg !7608
  %57 = load float*, float** %rt2, align 8, !dbg !7609
  %arrayidx39 = getelementptr inbounds float, float* %57, i64 1, !dbg !7609
  %58 = load float, float* %arrayidx39, align 4, !dbg !7609
  %59 = load float*, float** %rt, align 8, !dbg !7610
  %arrayidx40 = getelementptr inbounds float, float* %59, i64 1, !dbg !7610
  store float %58, float* %arrayidx40, align 4, !dbg !7611
  %60 = load float*, float** %rt2, align 8, !dbg !7612
  %arrayidx41 = getelementptr inbounds float, float* %60, i64 2, !dbg !7612
  %61 = load float, float* %arrayidx41, align 4, !dbg !7612
  %62 = load float*, float** %rt, align 8, !dbg !7613
  %arrayidx42 = getelementptr inbounds float, float* %62, i64 2, !dbg !7613
  store float %61, float* %arrayidx42, align 4, !dbg !7614
  %63 = load float*, float** %rt2, align 8, !dbg !7615
  %arrayidx43 = getelementptr inbounds float, float* %63, i64 3, !dbg !7615
  %64 = load float, float* %arrayidx43, align 4, !dbg !7615
  %65 = load float*, float** %rt, align 8, !dbg !7616
  %arrayidx44 = getelementptr inbounds float, float* %65, i64 3, !dbg !7616
  store float %64, float* %arrayidx44, align 4, !dbg !7617
  br label %if.end50, !dbg !7618

if.else45:                                        ; preds = %if.else34
  %66 = load float*, float** %rt, align 8, !dbg !7619
  %arrayidx46 = getelementptr inbounds float, float* %66, i64 0, !dbg !7619
  store float 0.000000e+00, float* %arrayidx46, align 4, !dbg !7621
  %67 = load float*, float** %rt, align 8, !dbg !7622
  %arrayidx47 = getelementptr inbounds float, float* %67, i64 1, !dbg !7622
  store float 0.000000e+00, float* %arrayidx47, align 4, !dbg !7623
  %68 = load float*, float** %rt, align 8, !dbg !7624
  %arrayidx48 = getelementptr inbounds float, float* %68, i64 2, !dbg !7624
  store float 0.000000e+00, float* %arrayidx48, align 4, !dbg !7625
  %69 = load float*, float** %rt, align 8, !dbg !7626
  %arrayidx49 = getelementptr inbounds float, float* %69, i64 3, !dbg !7626
  store float 1.000000e+00, float* %arrayidx49, align 4, !dbg !7627
  br label %if.end50

if.end50:                                         ; preds = %if.else45, %if.then36
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end
  %70 = load float*, float** %rt, align 8, !dbg !7628
  %add.ptr = getelementptr inbounds float, float* %70, i64 4, !dbg !7628
  store float* %add.ptr, float** %rt, align 8, !dbg !7628
  %71 = load float*, float** %rt1, align 8, !dbg !7629
  %cmp52 = icmp ne float* %71, null, !dbg !7631
  br i1 %cmp52, label %if.then53, label %if.end55, !dbg !7632

if.then53:                                        ; preds = %if.end51
  %72 = load float*, float** %rt1, align 8, !dbg !7633
  %add.ptr54 = getelementptr inbounds float, float* %72, i64 4, !dbg !7633
  store float* %add.ptr54, float** %rt1, align 8, !dbg !7633
  br label %if.end55, !dbg !7635

if.end55:                                         ; preds = %if.then53, %if.end51
  %73 = load float*, float** %rt2, align 8, !dbg !7636
  %cmp56 = icmp ne float* %73, null, !dbg !7638
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !7639

if.then57:                                        ; preds = %if.end55
  %74 = load float*, float** %rt2, align 8, !dbg !7640
  %add.ptr58 = getelementptr inbounds float, float* %74, i64 4, !dbg !7640
  store float* %add.ptr58, float** %rt2, align 8, !dbg !7640
  br label %if.end59, !dbg !7642

if.end59:                                         ; preds = %if.then57, %if.end55
  br label %for.inc, !dbg !7643

for.inc:                                          ; preds = %if.end59
  %75 = load i32, i32* %x.addr, align 4, !dbg !7644
  %inc = add nsw i32 %75, 1, !dbg !7644
  store i32 %inc, i32* %x.addr, align 4, !dbg !7644
  br label %for.cond1, !dbg !7645, !llvm.loop !7646

for.end:                                          ; preds = %for.cond1
  br label %for.inc60, !dbg !7648

for.inc60:                                        ; preds = %for.end
  %76 = load i32, i32* %y.addr, align 4, !dbg !7649
  %inc61 = add nsw i32 %76, 1, !dbg !7649
  store i32 %inc61, i32* %y.addr, align 4, !dbg !7649
  br label %for.cond, !dbg !7650, !llvm.loop !7651

for.end62:                                        ; preds = %for.cond
  ret void, !dbg !7653
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_wipe_effect_byte(%struct.Sequence* %seq, float %facf0, float %UNUSED_facf1, i32 %x, i32 %y, i8* %rect1, i8* %rect2, i8* %out) #0 !dbg !7654 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %wipezone = alloca %struct.WipeZone, align 4
  %wipe = alloca %struct.WipeVars*, align 8
  %xo = alloca i32, align 4
  %yo = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %rt = alloca i8*, align 8
  %check = alloca float, align 4
  %rt1 = alloca [4 x float], align 16
  %rt2 = alloca [4 x float], align 16
  %tempc = alloca [4 x float], align 16
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !7659, metadata !DIExpression()), !dbg !7660
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !7661, metadata !DIExpression()), !dbg !7662
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7663, metadata !DIExpression()), !dbg !7664
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7665, metadata !DIExpression()), !dbg !7666
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !7667, metadata !DIExpression()), !dbg !7668
  store i8* %rect2, i8** %rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect2.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !7671, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.declare(metadata %struct.WipeZone* %wipezone, metadata !7673, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata %struct.WipeVars** %wipe, metadata !7675, metadata !DIExpression()), !dbg !7676
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !7677
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !7678
  %1 = load i8*, i8** %effectdata, align 8, !dbg !7678
  %2 = bitcast i8* %1 to %struct.WipeVars*, !dbg !7679
  store %struct.WipeVars* %2, %struct.WipeVars** %wipe, align 8, !dbg !7676
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !7680, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.declare(metadata i32* %yo, metadata !7682, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !7684, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !7686, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.declare(metadata i8** %rt, metadata !7688, metadata !DIExpression()), !dbg !7689
  %3 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !7690
  %4 = load i32, i32* %x.addr, align 4, !dbg !7691
  %5 = load i32, i32* %y.addr, align 4, !dbg !7692
  call void @precalc_wipe_zone(%struct.WipeZone* %wipezone, %struct.WipeVars* %3, i32 %4, i32 %5), !dbg !7693
  %6 = load i8*, i8** %rect1.addr, align 8, !dbg !7694
  store i8* %6, i8** %cp1, align 8, !dbg !7695
  %7 = load i8*, i8** %rect2.addr, align 8, !dbg !7696
  store i8* %7, i8** %cp2, align 8, !dbg !7697
  %8 = load i8*, i8** %out.addr, align 8, !dbg !7698
  store i8* %8, i8** %rt, align 8, !dbg !7699
  %9 = load i32, i32* %x.addr, align 4, !dbg !7700
  store i32 %9, i32* %xo, align 4, !dbg !7701
  %10 = load i32, i32* %y.addr, align 4, !dbg !7702
  store i32 %10, i32* %yo, align 4, !dbg !7703
  store i32 0, i32* %y.addr, align 4, !dbg !7704
  br label %for.cond, !dbg !7706

for.cond:                                         ; preds = %for.inc62, %entry
  %11 = load i32, i32* %y.addr, align 4, !dbg !7707
  %12 = load i32, i32* %yo, align 4, !dbg !7709
  %cmp = icmp slt i32 %11, %12, !dbg !7710
  br i1 %cmp, label %for.body, label %for.end64, !dbg !7711

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x.addr, align 4, !dbg !7712
  br label %for.cond1, !dbg !7715

for.cond1:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %x.addr, align 4, !dbg !7716
  %14 = load i32, i32* %xo, align 4, !dbg !7718
  %cmp2 = icmp slt i32 %13, %14, !dbg !7719
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7720

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata float* %check, metadata !7721, metadata !DIExpression()), !dbg !7723
  %15 = load i32, i32* %x.addr, align 4, !dbg !7724
  %16 = load i32, i32* %y.addr, align 4, !dbg !7725
  %17 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !7726
  %18 = load float, float* %facf0.addr, align 4, !dbg !7727
  %call = call float @check_zone(%struct.WipeZone* %wipezone, i32 %15, i32 %16, %struct.Sequence* %17, float %18), !dbg !7728
  store float %call, float* %check, align 4, !dbg !7723
  %19 = load float, float* %check, align 4, !dbg !7729
  %tobool = fcmp une float %19, 0.000000e+00, !dbg !7729
  br i1 %tobool, label %if.then, label %if.else36, !dbg !7731

if.then:                                          ; preds = %for.body3
  %20 = load i8*, i8** %cp1, align 8, !dbg !7732
  %tobool4 = icmp ne i8* %20, null, !dbg !7732
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !7735

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [4 x float]* %rt1, metadata !7736, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.declare(metadata [4 x float]* %rt2, metadata !7739, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.declare(metadata [4 x float]* %tempc, metadata !7741, metadata !DIExpression()), !dbg !7742
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !7743
  %21 = load i8*, i8** %cp1, align 8, !dbg !7744
  call void @straight_uchar_to_premul_float(float* %arraydecay, i8* %21), !dbg !7745
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !7746
  %22 = load i8*, i8** %cp2, align 8, !dbg !7747
  call void @straight_uchar_to_premul_float(float* %arraydecay6, i8* %22), !dbg !7748
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 0, !dbg !7749
  %23 = load float, float* %arrayidx, align 16, !dbg !7749
  %24 = load float, float* %check, align 4, !dbg !7750
  %mul = fmul float %23, %24, !dbg !7751
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 0, !dbg !7752
  %25 = load float, float* %arrayidx7, align 16, !dbg !7752
  %26 = load float, float* %check, align 4, !dbg !7753
  %sub = fsub float 1.000000e+00, %26, !dbg !7754
  %mul8 = fmul float %25, %sub, !dbg !7755
  %add = fadd float %mul, %mul8, !dbg !7756
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !7757
  store float %add, float* %arrayidx9, align 16, !dbg !7758
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 1, !dbg !7759
  %27 = load float, float* %arrayidx10, align 4, !dbg !7759
  %28 = load float, float* %check, align 4, !dbg !7760
  %mul11 = fmul float %27, %28, !dbg !7761
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 1, !dbg !7762
  %29 = load float, float* %arrayidx12, align 4, !dbg !7762
  %30 = load float, float* %check, align 4, !dbg !7763
  %sub13 = fsub float 1.000000e+00, %30, !dbg !7764
  %mul14 = fmul float %29, %sub13, !dbg !7765
  %add15 = fadd float %mul11, %mul14, !dbg !7766
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 1, !dbg !7767
  store float %add15, float* %arrayidx16, align 4, !dbg !7768
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 2, !dbg !7769
  %31 = load float, float* %arrayidx17, align 8, !dbg !7769
  %32 = load float, float* %check, align 4, !dbg !7770
  %mul18 = fmul float %31, %32, !dbg !7771
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 2, !dbg !7772
  %33 = load float, float* %arrayidx19, align 8, !dbg !7772
  %34 = load float, float* %check, align 4, !dbg !7773
  %sub20 = fsub float 1.000000e+00, %34, !dbg !7774
  %mul21 = fmul float %33, %sub20, !dbg !7775
  %add22 = fadd float %mul18, %mul21, !dbg !7776
  %arrayidx23 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 2, !dbg !7777
  store float %add22, float* %arrayidx23, align 8, !dbg !7778
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %rt1, i64 0, i64 3, !dbg !7779
  %35 = load float, float* %arrayidx24, align 4, !dbg !7779
  %36 = load float, float* %check, align 4, !dbg !7780
  %mul25 = fmul float %35, %36, !dbg !7781
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %rt2, i64 0, i64 3, !dbg !7782
  %37 = load float, float* %arrayidx26, align 4, !dbg !7782
  %38 = load float, float* %check, align 4, !dbg !7783
  %sub27 = fsub float 1.000000e+00, %38, !dbg !7784
  %mul28 = fmul float %37, %sub27, !dbg !7785
  %add29 = fadd float %mul25, %mul28, !dbg !7786
  %arrayidx30 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 3, !dbg !7787
  store float %add29, float* %arrayidx30, align 4, !dbg !7788
  %39 = load i8*, i8** %rt, align 8, !dbg !7789
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %tempc, i64 0, i64 0, !dbg !7790
  call void @premul_float_to_straight_uchar(i8* %39, float* %arraydecay31), !dbg !7791
  br label %if.end, !dbg !7792

if.else:                                          ; preds = %if.then
  %40 = load i8*, i8** %rt, align 8, !dbg !7793
  %arrayidx32 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !7793
  store i8 0, i8* %arrayidx32, align 1, !dbg !7795
  %41 = load i8*, i8** %rt, align 8, !dbg !7796
  %arrayidx33 = getelementptr inbounds i8, i8* %41, i64 1, !dbg !7796
  store i8 0, i8* %arrayidx33, align 1, !dbg !7797
  %42 = load i8*, i8** %rt, align 8, !dbg !7798
  %arrayidx34 = getelementptr inbounds i8, i8* %42, i64 2, !dbg !7798
  store i8 0, i8* %arrayidx34, align 1, !dbg !7799
  %43 = load i8*, i8** %rt, align 8, !dbg !7800
  %arrayidx35 = getelementptr inbounds i8, i8* %43, i64 3, !dbg !7800
  store i8 -1, i8* %arrayidx35, align 1, !dbg !7801
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end53, !dbg !7802

if.else36:                                        ; preds = %for.body3
  %44 = load i8*, i8** %cp2, align 8, !dbg !7803
  %tobool37 = icmp ne i8* %44, null, !dbg !7803
  br i1 %tobool37, label %if.then38, label %if.else47, !dbg !7806

if.then38:                                        ; preds = %if.else36
  %45 = load i8*, i8** %cp2, align 8, !dbg !7807
  %arrayidx39 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !7807
  %46 = load i8, i8* %arrayidx39, align 1, !dbg !7807
  %47 = load i8*, i8** %rt, align 8, !dbg !7809
  %arrayidx40 = getelementptr inbounds i8, i8* %47, i64 0, !dbg !7809
  store i8 %46, i8* %arrayidx40, align 1, !dbg !7810
  %48 = load i8*, i8** %cp2, align 8, !dbg !7811
  %arrayidx41 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !7811
  %49 = load i8, i8* %arrayidx41, align 1, !dbg !7811
  %50 = load i8*, i8** %rt, align 8, !dbg !7812
  %arrayidx42 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !7812
  store i8 %49, i8* %arrayidx42, align 1, !dbg !7813
  %51 = load i8*, i8** %cp2, align 8, !dbg !7814
  %arrayidx43 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !7814
  %52 = load i8, i8* %arrayidx43, align 1, !dbg !7814
  %53 = load i8*, i8** %rt, align 8, !dbg !7815
  %arrayidx44 = getelementptr inbounds i8, i8* %53, i64 2, !dbg !7815
  store i8 %52, i8* %arrayidx44, align 1, !dbg !7816
  %54 = load i8*, i8** %cp2, align 8, !dbg !7817
  %arrayidx45 = getelementptr inbounds i8, i8* %54, i64 3, !dbg !7817
  %55 = load i8, i8* %arrayidx45, align 1, !dbg !7817
  %56 = load i8*, i8** %rt, align 8, !dbg !7818
  %arrayidx46 = getelementptr inbounds i8, i8* %56, i64 3, !dbg !7818
  store i8 %55, i8* %arrayidx46, align 1, !dbg !7819
  br label %if.end52, !dbg !7820

if.else47:                                        ; preds = %if.else36
  %57 = load i8*, i8** %rt, align 8, !dbg !7821
  %arrayidx48 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !7821
  store i8 0, i8* %arrayidx48, align 1, !dbg !7823
  %58 = load i8*, i8** %rt, align 8, !dbg !7824
  %arrayidx49 = getelementptr inbounds i8, i8* %58, i64 1, !dbg !7824
  store i8 0, i8* %arrayidx49, align 1, !dbg !7825
  %59 = load i8*, i8** %rt, align 8, !dbg !7826
  %arrayidx50 = getelementptr inbounds i8, i8* %59, i64 2, !dbg !7826
  store i8 0, i8* %arrayidx50, align 1, !dbg !7827
  %60 = load i8*, i8** %rt, align 8, !dbg !7828
  %arrayidx51 = getelementptr inbounds i8, i8* %60, i64 3, !dbg !7828
  store i8 -1, i8* %arrayidx51, align 1, !dbg !7829
  br label %if.end52

if.end52:                                         ; preds = %if.else47, %if.then38
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end
  %61 = load i8*, i8** %rt, align 8, !dbg !7830
  %add.ptr = getelementptr inbounds i8, i8* %61, i64 4, !dbg !7830
  store i8* %add.ptr, i8** %rt, align 8, !dbg !7830
  %62 = load i8*, i8** %cp1, align 8, !dbg !7831
  %cmp54 = icmp ne i8* %62, null, !dbg !7833
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !7834

if.then55:                                        ; preds = %if.end53
  %63 = load i8*, i8** %cp1, align 8, !dbg !7835
  %add.ptr56 = getelementptr inbounds i8, i8* %63, i64 4, !dbg !7835
  store i8* %add.ptr56, i8** %cp1, align 8, !dbg !7835
  br label %if.end57, !dbg !7837

if.end57:                                         ; preds = %if.then55, %if.end53
  %64 = load i8*, i8** %cp2, align 8, !dbg !7838
  %cmp58 = icmp ne i8* %64, null, !dbg !7840
  br i1 %cmp58, label %if.then59, label %if.end61, !dbg !7841

if.then59:                                        ; preds = %if.end57
  %65 = load i8*, i8** %cp2, align 8, !dbg !7842
  %add.ptr60 = getelementptr inbounds i8, i8* %65, i64 4, !dbg !7842
  store i8* %add.ptr60, i8** %cp2, align 8, !dbg !7842
  br label %if.end61, !dbg !7844

if.end61:                                         ; preds = %if.then59, %if.end57
  br label %for.inc, !dbg !7845

for.inc:                                          ; preds = %if.end61
  %66 = load i32, i32* %x.addr, align 4, !dbg !7846
  %inc = add nsw i32 %66, 1, !dbg !7846
  store i32 %inc, i32* %x.addr, align 4, !dbg !7846
  br label %for.cond1, !dbg !7847, !llvm.loop !7848

for.end:                                          ; preds = %for.cond1
  br label %for.inc62, !dbg !7850

for.inc62:                                        ; preds = %for.end
  %67 = load i32, i32* %y.addr, align 4, !dbg !7851
  %inc63 = add nsw i32 %67, 1, !dbg !7851
  store i32 %inc63, i32* %y.addr, align 4, !dbg !7851
  br label %for.cond, !dbg !7852, !llvm.loop !7853

for.end64:                                        ; preds = %for.cond
  ret void, !dbg !7855
}

; Function Attrs: noinline nounwind uwtable
define internal void @precalc_wipe_zone(%struct.WipeZone* %wipezone, %struct.WipeVars* %wipe, i32 %xo, i32 %yo) #0 !dbg !7856 {
entry:
  %wipezone.addr = alloca %struct.WipeZone*, align 8
  %wipe.addr = alloca %struct.WipeVars*, align 8
  %xo.addr = alloca i32, align 4
  %yo.addr = alloca i32, align 4
  store %struct.WipeZone* %wipezone, %struct.WipeZone** %wipezone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WipeZone** %wipezone.addr, metadata !7860, metadata !DIExpression()), !dbg !7861
  store %struct.WipeVars* %wipe, %struct.WipeVars** %wipe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WipeVars** %wipe.addr, metadata !7862, metadata !DIExpression()), !dbg !7863
  store i32 %xo, i32* %xo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xo.addr, metadata !7864, metadata !DIExpression()), !dbg !7865
  store i32 %yo, i32* %yo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %yo.addr, metadata !7866, metadata !DIExpression()), !dbg !7867
  %0 = load %struct.WipeVars*, %struct.WipeVars** %wipe.addr, align 8, !dbg !7868
  %angle = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %0, i32 0, i32 1, !dbg !7869
  %1 = load float, float* %angle, align 4, !dbg !7869
  %cmp = fcmp olt float %1, 0.000000e+00, !dbg !7870
  %conv = zext i1 %cmp to i32, !dbg !7870
  %2 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7871
  %flip = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %2, i32 0, i32 1, !dbg !7872
  store i32 %conv, i32* %flip, align 4, !dbg !7873
  %3 = load %struct.WipeVars*, %struct.WipeVars** %wipe.addr, align 8, !dbg !7874
  %angle1 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %3, i32 0, i32 1, !dbg !7875
  %4 = load float, float* %angle1, align 4, !dbg !7875
  %5 = call float @llvm.fabs.f32(float %4), !dbg !7876
  %call = call float @tanf(float %5) #6, !dbg !7877
  %6 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7878
  %angle2 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %6, i32 0, i32 0, !dbg !7879
  store float %call, float* %angle2, align 4, !dbg !7880
  %7 = load i32, i32* %xo.addr, align 4, !dbg !7881
  %8 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7882
  %xo3 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %8, i32 0, i32 2, !dbg !7883
  store i32 %7, i32* %xo3, align 4, !dbg !7884
  %9 = load i32, i32* %yo.addr, align 4, !dbg !7885
  %10 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7886
  %yo4 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %10, i32 0, i32 3, !dbg !7887
  store i32 %9, i32* %yo4, align 4, !dbg !7888
  %11 = load %struct.WipeVars*, %struct.WipeVars** %wipe.addr, align 8, !dbg !7889
  %edgeWidth = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %11, i32 0, i32 0, !dbg !7890
  %12 = load float, float* %edgeWidth, align 4, !dbg !7890
  %13 = load i32, i32* %xo.addr, align 4, !dbg !7891
  %14 = load i32, i32* %yo.addr, align 4, !dbg !7892
  %add = add nsw i32 %13, %14, !dbg !7893
  %conv5 = sitofp i32 %add to float, !dbg !7894
  %div = fdiv float %conv5, 2.000000e+00, !dbg !7895
  %mul = fmul float %12, %div, !dbg !7896
  %conv6 = fptosi float %mul to i32, !dbg !7897
  %15 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7898
  %width = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %15, i32 0, i32 4, !dbg !7899
  store i32 %conv6, i32* %width, align 4, !dbg !7900
  %16 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7901
  %angle7 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %16, i32 0, i32 0, !dbg !7902
  %17 = load float, float* %angle7, align 4, !dbg !7902
  %18 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7903
  %angle8 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %18, i32 0, i32 0, !dbg !7904
  %19 = load float, float* %angle8, align 4, !dbg !7904
  %mul9 = fmul float %17, %19, !dbg !7905
  %add10 = fadd float %mul9, 1.000000e+00, !dbg !7906
  %call11 = call float @sqrtf(float %add10) #6, !dbg !7907
  %div12 = fdiv float 1.000000e+00, %call11, !dbg !7908
  %20 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7909
  %pythangle = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %20, i32 0, i32 5, !dbg !7910
  store float %div12, float* %pythangle, align 4, !dbg !7911
  ret void, !dbg !7912
}

; Function Attrs: noinline nounwind uwtable
define internal float @check_zone(%struct.WipeZone* %wipezone, i32 %x, i32 %y, %struct.Sequence* %seq, float %facf0) #0 !dbg !7913 {
entry:
  %wipezone.addr = alloca %struct.WipeZone*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %seq.addr = alloca %struct.Sequence*, align 8
  %facf0.addr = alloca float, align 4
  %posx = alloca float, align 4
  %posy = alloca float, align 4
  %hyp = alloca float, align 4
  %hyp2 = alloca float, align 4
  %angle = alloca float, align 4
  %hwidth = alloca float, align 4
  %b1 = alloca float, align 4
  %b2 = alloca float, align 4
  %b3 = alloca float, align 4
  %pointdist = alloca float, align 4
  %temp1 = alloca float, align 4
  %temp2 = alloca float, align 4
  %temp3 = alloca float, align 4
  %temp4 = alloca float, align 4
  %xo = alloca i32, align 4
  %yo = alloca i32, align 4
  %halfx = alloca float, align 4
  %halfy = alloca float, align 4
  %widthf = alloca float, align 4
  %output = alloca float, align 4
  %wipe = alloca %struct.WipeVars*, align 8
  %width = alloca i32, align 4
  store %struct.WipeZone* %wipezone, %struct.WipeZone** %wipezone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WipeZone** %wipezone.addr, metadata !7916, metadata !DIExpression()), !dbg !7917
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7918, metadata !DIExpression()), !dbg !7919
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !7922, metadata !DIExpression()), !dbg !7923
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !7924, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.declare(metadata float* %posx, metadata !7926, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.declare(metadata float* %posy, metadata !7928, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.declare(metadata float* %hyp, metadata !7930, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.declare(metadata float* %hyp2, metadata !7932, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.declare(metadata float* %angle, metadata !7934, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.declare(metadata float* %hwidth, metadata !7936, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.declare(metadata float* %b1, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata float* %b2, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata float* %b3, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.declare(metadata float* %pointdist, metadata !7944, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.declare(metadata float* %temp1, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.declare(metadata float* %temp2, metadata !7948, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.declare(metadata float* %temp3, metadata !7950, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.declare(metadata float* %temp4, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !7954, metadata !DIExpression()), !dbg !7955
  %0 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7956
  %xo1 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %0, i32 0, i32 2, !dbg !7957
  %1 = load i32, i32* %xo1, align 4, !dbg !7957
  store i32 %1, i32* %xo, align 4, !dbg !7955
  call void @llvm.dbg.declare(metadata i32* %yo, metadata !7958, metadata !DIExpression()), !dbg !7959
  %2 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7960
  %yo2 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %2, i32 0, i32 3, !dbg !7961
  %3 = load i32, i32* %yo2, align 4, !dbg !7961
  store i32 %3, i32* %yo, align 4, !dbg !7959
  call void @llvm.dbg.declare(metadata float* %halfx, metadata !7962, metadata !DIExpression()), !dbg !7963
  %4 = load i32, i32* %xo, align 4, !dbg !7964
  %conv = sitofp i32 %4 to float, !dbg !7964
  %mul = fmul float %conv, 5.000000e-01, !dbg !7965
  store float %mul, float* %halfx, align 4, !dbg !7963
  call void @llvm.dbg.declare(metadata float* %halfy, metadata !7966, metadata !DIExpression()), !dbg !7967
  %5 = load i32, i32* %yo, align 4, !dbg !7968
  %conv3 = sitofp i32 %5 to float, !dbg !7968
  %mul4 = fmul float %conv3, 5.000000e-01, !dbg !7969
  store float %mul4, float* %halfy, align 4, !dbg !7967
  call void @llvm.dbg.declare(metadata float* %widthf, metadata !7970, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.declare(metadata float* %output, metadata !7972, metadata !DIExpression()), !dbg !7973
  store float 0.000000e+00, float* %output, align 4, !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.WipeVars** %wipe, metadata !7974, metadata !DIExpression()), !dbg !7975
  %6 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !7976
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %6, i32 0, i32 43, !dbg !7977
  %7 = load i8*, i8** %effectdata, align 8, !dbg !7977
  %8 = bitcast i8* %7 to %struct.WipeVars*, !dbg !7978
  store %struct.WipeVars* %8, %struct.WipeVars** %wipe, align 8, !dbg !7975
  call void @llvm.dbg.declare(metadata i32* %width, metadata !7979, metadata !DIExpression()), !dbg !7980
  %9 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7981
  %flip = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %9, i32 0, i32 1, !dbg !7983
  %10 = load i32, i32* %flip, align 4, !dbg !7983
  %tobool = icmp ne i32 %10, 0, !dbg !7981
  br i1 %tobool, label %if.then, label %if.end, !dbg !7984

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %xo, align 4, !dbg !7985
  %12 = load i32, i32* %x.addr, align 4, !dbg !7986
  %sub = sub nsw i32 %11, %12, !dbg !7987
  store i32 %sub, i32* %x.addr, align 4, !dbg !7988
  br label %if.end, !dbg !7989

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !7990
  %angle5 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %13, i32 0, i32 0, !dbg !7991
  %14 = load float, float* %angle5, align 4, !dbg !7991
  store float %14, float* %angle, align 4, !dbg !7992
  %15 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !7993
  %forward = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %15, i32 0, i32 2, !dbg !7995
  %16 = load i16, i16* %forward, align 4, !dbg !7995
  %tobool6 = icmp ne i16 %16, 0, !dbg !7993
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !7996

if.then7:                                         ; preds = %if.end
  %17 = load float, float* %facf0.addr, align 4, !dbg !7997
  %18 = load i32, i32* %xo, align 4, !dbg !7999
  %conv8 = sitofp i32 %18 to float, !dbg !7999
  %mul9 = fmul float %17, %conv8, !dbg !8000
  store float %mul9, float* %posx, align 4, !dbg !8001
  %19 = load float, float* %facf0.addr, align 4, !dbg !8002
  %20 = load i32, i32* %yo, align 4, !dbg !8003
  %conv10 = sitofp i32 %20 to float, !dbg !8003
  %mul11 = fmul float %19, %conv10, !dbg !8004
  store float %mul11, float* %posy, align 4, !dbg !8005
  br label %if.end20, !dbg !8006

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %xo, align 4, !dbg !8007
  %conv12 = sitofp i32 %21 to float, !dbg !8007
  %22 = load float, float* %facf0.addr, align 4, !dbg !8009
  %23 = load i32, i32* %xo, align 4, !dbg !8010
  %conv13 = sitofp i32 %23 to float, !dbg !8010
  %mul14 = fmul float %22, %conv13, !dbg !8011
  %sub15 = fsub float %conv12, %mul14, !dbg !8012
  store float %sub15, float* %posx, align 4, !dbg !8013
  %24 = load i32, i32* %yo, align 4, !dbg !8014
  %conv16 = sitofp i32 %24 to float, !dbg !8014
  %25 = load float, float* %facf0.addr, align 4, !dbg !8015
  %26 = load i32, i32* %yo, align 4, !dbg !8016
  %conv17 = sitofp i32 %26 to float, !dbg !8016
  %mul18 = fmul float %25, %conv17, !dbg !8017
  %sub19 = fsub float %conv16, %mul18, !dbg !8018
  store float %sub19, float* %posy, align 4, !dbg !8019
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then7
  %27 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8020
  %wipetype = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %27, i32 0, i32 3, !dbg !8021
  %28 = load i16, i16* %wipetype, align 2, !dbg !8021
  %conv21 = sext i16 %28 to i32, !dbg !8020
  switch i32 %conv21, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb81
    i32 5, label %sw.bb200
    i32 4, label %sw.bb306
  ], !dbg !8022

sw.bb:                                            ; preds = %if.end20
  %29 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !8023
  %width22 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %29, i32 0, i32 4, !dbg !8025
  %30 = load i32, i32* %width22, align 4, !dbg !8025
  %31 = load float, float* %facf0.addr, align 4, !dbg !8026
  %32 = load i32, i32* %yo, align 4, !dbg !8027
  %conv23 = sitofp i32 %32 to float, !dbg !8027
  %mul24 = fmul float %31, %conv23, !dbg !8028
  %conv25 = fptosi float %mul24 to i32, !dbg !8026
  %call = call i32 @min_ii(i32 %30, i32 %conv25), !dbg !8029
  store i32 %call, i32* %width, align 4, !dbg !8030
  %33 = load i32, i32* %width, align 4, !dbg !8031
  %34 = load i32, i32* %yo, align 4, !dbg !8032
  %conv26 = sitofp i32 %34 to float, !dbg !8032
  %35 = load float, float* %facf0.addr, align 4, !dbg !8033
  %36 = load i32, i32* %yo, align 4, !dbg !8034
  %conv27 = sitofp i32 %36 to float, !dbg !8034
  %mul28 = fmul float %35, %conv27, !dbg !8035
  %sub29 = fsub float %conv26, %mul28, !dbg !8036
  %conv30 = fptosi float %sub29 to i32, !dbg !8032
  %call31 = call i32 @min_ii(i32 %33, i32 %conv30), !dbg !8037
  store i32 %call31, i32* %width, align 4, !dbg !8038
  %37 = load float, float* %angle, align 4, !dbg !8039
  %cmp = fcmp oeq float %37, 0.000000e+00, !dbg !8041
  br i1 %cmp, label %if.then33, label %if.else37, !dbg !8042

if.then33:                                        ; preds = %sw.bb
  %38 = load float, float* %posy, align 4, !dbg !8043
  store float %38, float* %b1, align 4, !dbg !8045
  %39 = load i32, i32* %y.addr, align 4, !dbg !8046
  %conv34 = sitofp i32 %39 to float, !dbg !8046
  store float %conv34, float* %b2, align 4, !dbg !8047
  %40 = load i32, i32* %y.addr, align 4, !dbg !8048
  %conv35 = sitofp i32 %40 to float, !dbg !8048
  %41 = load float, float* %posy, align 4, !dbg !8049
  %sub36 = fsub float %conv35, %41, !dbg !8050
  %42 = call float @llvm.fabs.f32(float %sub36), !dbg !8051
  store float %42, float* %hyp, align 4, !dbg !8052
  br label %if.end53, !dbg !8053

if.else37:                                        ; preds = %sw.bb
  %43 = load float, float* %posy, align 4, !dbg !8054
  %44 = load float, float* %angle, align 4, !dbg !8056
  %fneg = fneg float %44, !dbg !8057
  %45 = load float, float* %posx, align 4, !dbg !8058
  %mul38 = fmul float %fneg, %45, !dbg !8059
  %sub39 = fsub float %43, %mul38, !dbg !8060
  store float %sub39, float* %b1, align 4, !dbg !8061
  %46 = load i32, i32* %y.addr, align 4, !dbg !8062
  %conv40 = sitofp i32 %46 to float, !dbg !8062
  %47 = load float, float* %angle, align 4, !dbg !8063
  %fneg41 = fneg float %47, !dbg !8064
  %48 = load i32, i32* %x.addr, align 4, !dbg !8065
  %conv42 = sitofp i32 %48 to float, !dbg !8065
  %mul43 = fmul float %fneg41, %conv42, !dbg !8066
  %sub44 = fsub float %conv40, %mul43, !dbg !8067
  store float %sub44, float* %b2, align 4, !dbg !8068
  %49 = load float, float* %angle, align 4, !dbg !8069
  %50 = load i32, i32* %x.addr, align 4, !dbg !8070
  %conv45 = sitofp i32 %50 to float, !dbg !8070
  %mul46 = fmul float %49, %conv45, !dbg !8071
  %51 = load i32, i32* %y.addr, align 4, !dbg !8072
  %conv47 = sitofp i32 %51 to float, !dbg !8072
  %add = fadd float %mul46, %conv47, !dbg !8073
  %52 = load float, float* %posy, align 4, !dbg !8074
  %fneg48 = fneg float %52, !dbg !8075
  %53 = load float, float* %angle, align 4, !dbg !8076
  %54 = load float, float* %posx, align 4, !dbg !8077
  %mul49 = fmul float %53, %54, !dbg !8078
  %sub50 = fsub float %fneg48, %mul49, !dbg !8079
  %add51 = fadd float %add, %sub50, !dbg !8080
  %55 = call float @llvm.fabs.f32(float %add51), !dbg !8081
  %56 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !8082
  %pythangle = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %56, i32 0, i32 5, !dbg !8083
  %57 = load float, float* %pythangle, align 4, !dbg !8083
  %mul52 = fmul float %55, %57, !dbg !8084
  store float %mul52, float* %hyp, align 4, !dbg !8085
  br label %if.end53

if.end53:                                         ; preds = %if.else37, %if.then33
  %58 = load float, float* %angle, align 4, !dbg !8086
  %cmp54 = fcmp olt float %58, 0.000000e+00, !dbg !8088
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !8089

if.then56:                                        ; preds = %if.end53
  %59 = load float, float* %b1, align 4, !dbg !8090
  store float %59, float* %temp1, align 4, !dbg !8092
  %60 = load float, float* %b2, align 4, !dbg !8093
  store float %60, float* %b1, align 4, !dbg !8094
  %61 = load float, float* %temp1, align 4, !dbg !8095
  store float %61, float* %b2, align 4, !dbg !8096
  br label %if.end57, !dbg !8097

if.end57:                                         ; preds = %if.then56, %if.end53
  %62 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8098
  %forward58 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %62, i32 0, i32 2, !dbg !8100
  %63 = load i16, i16* %forward58, align 4, !dbg !8100
  %tobool59 = icmp ne i16 %63, 0, !dbg !8098
  br i1 %tobool59, label %if.then60, label %if.else70, !dbg !8101

if.then60:                                        ; preds = %if.end57
  %64 = load float, float* %b1, align 4, !dbg !8102
  %65 = load float, float* %b2, align 4, !dbg !8105
  %cmp61 = fcmp olt float %64, %65, !dbg !8106
  br i1 %cmp61, label %if.then63, label %if.else66, !dbg !8107

if.then63:                                        ; preds = %if.then60
  %66 = load i32, i32* %width, align 4, !dbg !8108
  %conv64 = sitofp i32 %66 to float, !dbg !8108
  %67 = load float, float* %hyp, align 4, !dbg !8109
  %call65 = call float @in_band(float %conv64, float %67, i32 1, i32 1), !dbg !8110
  store float %call65, float* %output, align 4, !dbg !8111
  br label %if.end69, !dbg !8112

if.else66:                                        ; preds = %if.then60
  %68 = load i32, i32* %width, align 4, !dbg !8113
  %conv67 = sitofp i32 %68 to float, !dbg !8113
  %69 = load float, float* %hyp, align 4, !dbg !8114
  %call68 = call float @in_band(float %conv67, float %69, i32 0, i32 1), !dbg !8115
  store float %call68, float* %output, align 4, !dbg !8116
  br label %if.end69

if.end69:                                         ; preds = %if.else66, %if.then63
  br label %if.end80, !dbg !8117

if.else70:                                        ; preds = %if.end57
  %70 = load float, float* %b1, align 4, !dbg !8118
  %71 = load float, float* %b2, align 4, !dbg !8121
  %cmp71 = fcmp olt float %70, %71, !dbg !8122
  br i1 %cmp71, label %if.then73, label %if.else76, !dbg !8123

if.then73:                                        ; preds = %if.else70
  %72 = load i32, i32* %width, align 4, !dbg !8124
  %conv74 = sitofp i32 %72 to float, !dbg !8124
  %73 = load float, float* %hyp, align 4, !dbg !8125
  %call75 = call float @in_band(float %conv74, float %73, i32 0, i32 1), !dbg !8126
  store float %call75, float* %output, align 4, !dbg !8127
  br label %if.end79, !dbg !8128

if.else76:                                        ; preds = %if.else70
  %74 = load i32, i32* %width, align 4, !dbg !8129
  %conv77 = sitofp i32 %74 to float, !dbg !8129
  %75 = load float, float* %hyp, align 4, !dbg !8130
  %call78 = call float @in_band(float %conv77, float %75, i32 1, i32 1), !dbg !8131
  store float %call78, float* %output, align 4, !dbg !8132
  br label %if.end79

if.end79:                                         ; preds = %if.else76, %if.then73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end69
  br label %sw.epilog, !dbg !8133

sw.bb81:                                          ; preds = %if.end20
  %76 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8134
  %forward82 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %76, i32 0, i32 2, !dbg !8136
  %77 = load i16, i16* %forward82, align 4, !dbg !8136
  %tobool83 = icmp ne i16 %77, 0, !dbg !8134
  br i1 %tobool83, label %if.end86, label %if.then84, !dbg !8137

if.then84:                                        ; preds = %sw.bb81
  %78 = load float, float* %facf0.addr, align 4, !dbg !8138
  %sub85 = fsub float 1.000000e+00, %78, !dbg !8139
  store float %sub85, float* %facf0.addr, align 4, !dbg !8140
  br label %if.end86, !dbg !8141

if.end86:                                         ; preds = %if.then84, %sw.bb81
  %79 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !8142
  %width87 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %79, i32 0, i32 4, !dbg !8143
  %80 = load i32, i32* %width87, align 4, !dbg !8143
  store i32 %80, i32* %width, align 4, !dbg !8144
  %81 = load i32, i32* %width, align 4, !dbg !8145
  %conv88 = sitofp i32 %81 to float, !dbg !8145
  %mul89 = fmul float %conv88, 5.000000e-01, !dbg !8146
  store float %mul89, float* %hwidth, align 4, !dbg !8147
  %82 = load float, float* %angle, align 4, !dbg !8148
  %cmp90 = fcmp oeq float %82, 0.000000e+00, !dbg !8150
  br i1 %cmp90, label %if.then92, label %if.else106, !dbg !8151

if.then92:                                        ; preds = %if.end86
  %83 = load float, float* %posy, align 4, !dbg !8152
  %mul93 = fmul float %83, 5.000000e-01, !dbg !8154
  store float %mul93, float* %b1, align 4, !dbg !8155
  %84 = load i32, i32* %yo, align 4, !dbg !8156
  %conv94 = sitofp i32 %84 to float, !dbg !8156
  %85 = load float, float* %posy, align 4, !dbg !8157
  %mul95 = fmul float %85, 5.000000e-01, !dbg !8158
  %sub96 = fsub float %conv94, %mul95, !dbg !8159
  store float %sub96, float* %b3, align 4, !dbg !8160
  %86 = load i32, i32* %y.addr, align 4, !dbg !8161
  %conv97 = sitofp i32 %86 to float, !dbg !8161
  store float %conv97, float* %b2, align 4, !dbg !8162
  %87 = load i32, i32* %y.addr, align 4, !dbg !8163
  %conv98 = sitofp i32 %87 to float, !dbg !8163
  %88 = load float, float* %posy, align 4, !dbg !8164
  %mul99 = fmul float %88, 5.000000e-01, !dbg !8165
  %sub100 = fsub float %conv98, %mul99, !dbg !8166
  %89 = call float @llvm.fabs.f32(float %sub100), !dbg !8167
  store float %89, float* %hyp, align 4, !dbg !8168
  %90 = load i32, i32* %y.addr, align 4, !dbg !8169
  %conv101 = sitofp i32 %90 to float, !dbg !8169
  %91 = load i32, i32* %yo, align 4, !dbg !8170
  %conv102 = sitofp i32 %91 to float, !dbg !8170
  %92 = load float, float* %posy, align 4, !dbg !8171
  %mul103 = fmul float %92, 5.000000e-01, !dbg !8172
  %sub104 = fsub float %conv102, %mul103, !dbg !8173
  %sub105 = fsub float %conv101, %sub104, !dbg !8174
  %93 = call float @llvm.fabs.f32(float %sub105), !dbg !8175
  store float %93, float* %hyp2, align 4, !dbg !8176
  br label %if.end154, !dbg !8177

if.else106:                                       ; preds = %if.end86
  %94 = load float, float* %posy, align 4, !dbg !8178
  %mul107 = fmul float %94, 5.000000e-01, !dbg !8180
  %95 = load float, float* %angle, align 4, !dbg !8181
  %fneg108 = fneg float %95, !dbg !8182
  %96 = load float, float* %posx, align 4, !dbg !8183
  %mul109 = fmul float %fneg108, %96, !dbg !8184
  %mul110 = fmul float %mul109, 5.000000e-01, !dbg !8185
  %sub111 = fsub float %mul107, %mul110, !dbg !8186
  store float %sub111, float* %b1, align 4, !dbg !8187
  %97 = load i32, i32* %yo, align 4, !dbg !8188
  %conv112 = sitofp i32 %97 to float, !dbg !8188
  %98 = load float, float* %posy, align 4, !dbg !8189
  %mul113 = fmul float %98, 5.000000e-01, !dbg !8190
  %sub114 = fsub float %conv112, %mul113, !dbg !8191
  %99 = load float, float* %angle, align 4, !dbg !8192
  %fneg115 = fneg float %99, !dbg !8193
  %100 = load i32, i32* %xo, align 4, !dbg !8194
  %conv116 = sitofp i32 %100 to float, !dbg !8194
  %101 = load float, float* %posx, align 4, !dbg !8195
  %mul117 = fmul float %101, 5.000000e-01, !dbg !8196
  %sub118 = fsub float %conv116, %mul117, !dbg !8197
  %mul119 = fmul float %fneg115, %sub118, !dbg !8198
  %sub120 = fsub float %sub114, %mul119, !dbg !8199
  store float %sub120, float* %b3, align 4, !dbg !8200
  %102 = load i32, i32* %y.addr, align 4, !dbg !8201
  %conv121 = sitofp i32 %102 to float, !dbg !8201
  %103 = load float, float* %angle, align 4, !dbg !8202
  %fneg122 = fneg float %103, !dbg !8203
  %104 = load i32, i32* %x.addr, align 4, !dbg !8204
  %conv123 = sitofp i32 %104 to float, !dbg !8204
  %mul124 = fmul float %fneg122, %conv123, !dbg !8205
  %sub125 = fsub float %conv121, %mul124, !dbg !8206
  store float %sub125, float* %b2, align 4, !dbg !8207
  %105 = load float, float* %angle, align 4, !dbg !8208
  %106 = load i32, i32* %x.addr, align 4, !dbg !8209
  %conv126 = sitofp i32 %106 to float, !dbg !8209
  %mul127 = fmul float %105, %conv126, !dbg !8210
  %107 = load i32, i32* %y.addr, align 4, !dbg !8211
  %conv128 = sitofp i32 %107 to float, !dbg !8211
  %add129 = fadd float %mul127, %conv128, !dbg !8212
  %108 = load float, float* %posy, align 4, !dbg !8213
  %fneg130 = fneg float %108, !dbg !8214
  %mul131 = fmul float %fneg130, 5.000000e-01, !dbg !8215
  %109 = load float, float* %angle, align 4, !dbg !8216
  %110 = load float, float* %posx, align 4, !dbg !8217
  %mul132 = fmul float %109, %110, !dbg !8218
  %mul133 = fmul float %mul132, 5.000000e-01, !dbg !8219
  %sub134 = fsub float %mul131, %mul133, !dbg !8220
  %add135 = fadd float %add129, %sub134, !dbg !8221
  %111 = call float @llvm.fabs.f32(float %add135), !dbg !8222
  %112 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !8223
  %pythangle136 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %112, i32 0, i32 5, !dbg !8224
  %113 = load float, float* %pythangle136, align 4, !dbg !8224
  %mul137 = fmul float %111, %113, !dbg !8225
  store float %mul137, float* %hyp, align 4, !dbg !8226
  %114 = load float, float* %angle, align 4, !dbg !8227
  %115 = load i32, i32* %x.addr, align 4, !dbg !8228
  %conv138 = sitofp i32 %115 to float, !dbg !8228
  %mul139 = fmul float %114, %conv138, !dbg !8229
  %116 = load i32, i32* %y.addr, align 4, !dbg !8230
  %conv140 = sitofp i32 %116 to float, !dbg !8230
  %add141 = fadd float %mul139, %conv140, !dbg !8231
  %117 = load i32, i32* %yo, align 4, !dbg !8232
  %conv142 = sitofp i32 %117 to float, !dbg !8232
  %118 = load float, float* %posy, align 4, !dbg !8233
  %mul143 = fmul float %118, 5.000000e-01, !dbg !8234
  %sub144 = fsub float %conv142, %mul143, !dbg !8235
  %fneg145 = fneg float %sub144, !dbg !8236
  %119 = load float, float* %angle, align 4, !dbg !8237
  %120 = load i32, i32* %xo, align 4, !dbg !8238
  %conv146 = sitofp i32 %120 to float, !dbg !8238
  %121 = load float, float* %posx, align 4, !dbg !8239
  %mul147 = fmul float %121, 5.000000e-01, !dbg !8240
  %sub148 = fsub float %conv146, %mul147, !dbg !8241
  %mul149 = fmul float %119, %sub148, !dbg !8242
  %sub150 = fsub float %fneg145, %mul149, !dbg !8243
  %add151 = fadd float %add141, %sub150, !dbg !8244
  %122 = call float @llvm.fabs.f32(float %add151), !dbg !8245
  %123 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !8246
  %pythangle152 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %123, i32 0, i32 5, !dbg !8247
  %124 = load float, float* %pythangle152, align 4, !dbg !8247
  %mul153 = fmul float %122, %124, !dbg !8248
  store float %mul153, float* %hyp2, align 4, !dbg !8249
  br label %if.end154

if.end154:                                        ; preds = %if.else106, %if.then92
  %125 = load float, float* %hwidth, align 4, !dbg !8250
  %126 = load float, float* %b3, align 4, !dbg !8251
  %127 = load float, float* %b1, align 4, !dbg !8252
  %sub155 = fsub float %126, %127, !dbg !8253
  %128 = call float @llvm.fabs.f32(float %sub155), !dbg !8254
  %div = fdiv float %128, 2.000000e+00, !dbg !8255
  %call156 = call float @min_ff(float %125, float %div), !dbg !8256
  store float %call156, float* %hwidth, align 4, !dbg !8257
  %129 = load float, float* %b2, align 4, !dbg !8258
  %130 = load float, float* %b1, align 4, !dbg !8260
  %cmp157 = fcmp olt float %129, %130, !dbg !8261
  br i1 %cmp157, label %land.lhs.true, label %if.else163, !dbg !8262

land.lhs.true:                                    ; preds = %if.end154
  %131 = load float, float* %b2, align 4, !dbg !8263
  %132 = load float, float* %b3, align 4, !dbg !8264
  %cmp159 = fcmp olt float %131, %132, !dbg !8265
  br i1 %cmp159, label %if.then161, label %if.else163, !dbg !8266

if.then161:                                       ; preds = %land.lhs.true
  %133 = load float, float* %hwidth, align 4, !dbg !8267
  %134 = load float, float* %hyp, align 4, !dbg !8269
  %call162 = call float @in_band(float %133, float %134, i32 0, i32 1), !dbg !8270
  store float %call162, float* %output, align 4, !dbg !8271
  br label %if.end194, !dbg !8272

if.else163:                                       ; preds = %land.lhs.true, %if.end154
  %135 = load float, float* %b2, align 4, !dbg !8273
  %136 = load float, float* %b1, align 4, !dbg !8275
  %cmp164 = fcmp ogt float %135, %136, !dbg !8276
  br i1 %cmp164, label %land.lhs.true166, label %if.else171, !dbg !8277

land.lhs.true166:                                 ; preds = %if.else163
  %137 = load float, float* %b2, align 4, !dbg !8278
  %138 = load float, float* %b3, align 4, !dbg !8279
  %cmp167 = fcmp ogt float %137, %138, !dbg !8280
  br i1 %cmp167, label %if.then169, label %if.else171, !dbg !8281

if.then169:                                       ; preds = %land.lhs.true166
  %139 = load float, float* %hwidth, align 4, !dbg !8282
  %140 = load float, float* %hyp2, align 4, !dbg !8284
  %call170 = call float @in_band(float %139, float %140, i32 0, i32 1), !dbg !8285
  store float %call170, float* %output, align 4, !dbg !8286
  br label %if.end193, !dbg !8287

if.else171:                                       ; preds = %land.lhs.true166, %if.else163
  %141 = load float, float* %hyp, align 4, !dbg !8288
  %142 = load float, float* %hwidth, align 4, !dbg !8291
  %cmp172 = fcmp olt float %141, %142, !dbg !8292
  br i1 %cmp172, label %land.lhs.true174, label %if.else179, !dbg !8293

land.lhs.true174:                                 ; preds = %if.else171
  %143 = load float, float* %hyp2, align 4, !dbg !8294
  %144 = load float, float* %hwidth, align 4, !dbg !8295
  %cmp175 = fcmp ogt float %143, %144, !dbg !8296
  br i1 %cmp175, label %if.then177, label %if.else179, !dbg !8297

if.then177:                                       ; preds = %land.lhs.true174
  %145 = load float, float* %hwidth, align 4, !dbg !8298
  %146 = load float, float* %hyp, align 4, !dbg !8299
  %call178 = call float @in_band(float %145, float %146, i32 1, i32 1), !dbg !8300
  store float %call178, float* %output, align 4, !dbg !8301
  br label %if.end192, !dbg !8302

if.else179:                                       ; preds = %land.lhs.true174, %if.else171
  %147 = load float, float* %hyp, align 4, !dbg !8303
  %148 = load float, float* %hwidth, align 4, !dbg !8305
  %cmp180 = fcmp ogt float %147, %148, !dbg !8306
  br i1 %cmp180, label %land.lhs.true182, label %if.else187, !dbg !8307

land.lhs.true182:                                 ; preds = %if.else179
  %149 = load float, float* %hyp2, align 4, !dbg !8308
  %150 = load float, float* %hwidth, align 4, !dbg !8309
  %cmp183 = fcmp olt float %149, %150, !dbg !8310
  br i1 %cmp183, label %if.then185, label %if.else187, !dbg !8311

if.then185:                                       ; preds = %land.lhs.true182
  %151 = load float, float* %hwidth, align 4, !dbg !8312
  %152 = load float, float* %hyp2, align 4, !dbg !8313
  %call186 = call float @in_band(float %151, float %152, i32 1, i32 1), !dbg !8314
  store float %call186, float* %output, align 4, !dbg !8315
  br label %if.end191, !dbg !8316

if.else187:                                       ; preds = %land.lhs.true182, %if.else179
  %153 = load float, float* %hwidth, align 4, !dbg !8317
  %154 = load float, float* %hyp2, align 4, !dbg !8318
  %call188 = call float @in_band(float %153, float %154, i32 1, i32 1), !dbg !8319
  %155 = load float, float* %hwidth, align 4, !dbg !8320
  %156 = load float, float* %hyp, align 4, !dbg !8321
  %call189 = call float @in_band(float %155, float %156, i32 1, i32 1), !dbg !8322
  %mul190 = fmul float %call188, %call189, !dbg !8323
  store float %mul190, float* %output, align 4, !dbg !8324
  br label %if.end191

if.end191:                                        ; preds = %if.else187, %if.then185
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then177
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then169
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then161
  %157 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8325
  %forward195 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %157, i32 0, i32 2, !dbg !8327
  %158 = load i16, i16* %forward195, align 4, !dbg !8327
  %tobool196 = icmp ne i16 %158, 0, !dbg !8325
  br i1 %tobool196, label %if.end199, label %if.then197, !dbg !8328

if.then197:                                       ; preds = %if.end194
  %159 = load float, float* %output, align 4, !dbg !8329
  %sub198 = fsub float 1.000000e+00, %159, !dbg !8330
  store float %sub198, float* %output, align 4, !dbg !8331
  br label %if.end199, !dbg !8332

if.end199:                                        ; preds = %if.then197, %if.end194
  br label %sw.epilog, !dbg !8333

sw.bb200:                                         ; preds = %if.end20
  %160 = load float, float* %facf0.addr, align 4, !dbg !8334
  %sub201 = fsub float 1.000000e+00, %160, !dbg !8335
  store float %sub201, float* %output, align 4, !dbg !8336
  %161 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8337
  %edgeWidth = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %161, i32 0, i32 0, !dbg !8338
  %162 = load float, float* %edgeWidth, align 4, !dbg !8338
  %mul202 = fmul float %162, 2.000000e+00, !dbg !8339
  %mul203 = fmul float %mul202, 0x400921FB60000000, !dbg !8340
  store float %mul203, float* %widthf, align 4, !dbg !8341
  %163 = load float, float* %facf0.addr, align 4, !dbg !8342
  %mul204 = fmul float 0x401921FB60000000, %163, !dbg !8343
  store float %mul204, float* %temp1, align 4, !dbg !8344
  %164 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8345
  %forward205 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %164, i32 0, i32 2, !dbg !8347
  %165 = load i16, i16* %forward205, align 4, !dbg !8347
  %tobool206 = icmp ne i16 %165, 0, !dbg !8345
  br i1 %tobool206, label %if.then207, label %if.end209, !dbg !8348

if.then207:                                       ; preds = %sw.bb200
  %166 = load float, float* %temp1, align 4, !dbg !8349
  %sub208 = fsub float 0x401921FB60000000, %166, !dbg !8351
  store float %sub208, float* %temp1, align 4, !dbg !8352
  br label %if.end209, !dbg !8353

if.end209:                                        ; preds = %if.then207, %sw.bb200
  %167 = load i32, i32* %x.addr, align 4, !dbg !8354
  %conv210 = sitofp i32 %167 to float, !dbg !8354
  %168 = load float, float* %halfx, align 4, !dbg !8355
  %sub211 = fsub float %conv210, %168, !dbg !8356
  %conv212 = fptosi float %sub211 to i32, !dbg !8354
  store i32 %conv212, i32* %x.addr, align 4, !dbg !8357
  %169 = load i32, i32* %y.addr, align 4, !dbg !8358
  %conv213 = sitofp i32 %169 to float, !dbg !8358
  %170 = load float, float* %halfy, align 4, !dbg !8359
  %sub214 = fsub float %conv213, %170, !dbg !8360
  %conv215 = fptosi float %sub214 to i32, !dbg !8358
  store i32 %conv215, i32* %y.addr, align 4, !dbg !8361
  %171 = load i32, i32* %y.addr, align 4, !dbg !8362
  %call216 = call i32 @abs(i32 %171) #7, !dbg !8363
  %conv217 = sitofp i32 %call216 to double, !dbg !8363
  %172 = load i32, i32* %x.addr, align 4, !dbg !8364
  %conv218 = sitofp i32 %172 to double, !dbg !8364
  %173 = load i32, i32* %y.addr, align 4, !dbg !8365
  %conv219 = sitofp i32 %173 to double, !dbg !8365
  %call220 = call double @hypot(double %conv218, double %conv219) #6, !dbg !8366
  %div221 = fdiv double %conv217, %call220, !dbg !8367
  %call222 = call double @asin(double %div221) #6, !dbg !8368
  %conv223 = fptrunc double %call222 to float, !dbg !8368
  store float %conv223, float* %temp2, align 4, !dbg !8369
  %174 = load i32, i32* %x.addr, align 4, !dbg !8370
  %cmp224 = icmp sle i32 %174, 0, !dbg !8372
  br i1 %cmp224, label %land.lhs.true226, label %if.else231, !dbg !8373

land.lhs.true226:                                 ; preds = %if.end209
  %175 = load i32, i32* %y.addr, align 4, !dbg !8374
  %cmp227 = icmp sge i32 %175, 0, !dbg !8375
  br i1 %cmp227, label %if.then229, label %if.else231, !dbg !8376

if.then229:                                       ; preds = %land.lhs.true226
  %176 = load float, float* %temp2, align 4, !dbg !8377
  %sub230 = fsub float 0x400921FB60000000, %176, !dbg !8378
  store float %sub230, float* %temp2, align 4, !dbg !8379
  br label %if.end249, !dbg !8380

if.else231:                                       ; preds = %land.lhs.true226, %if.end209
  %177 = load i32, i32* %x.addr, align 4, !dbg !8381
  %cmp232 = icmp sle i32 %177, 0, !dbg !8383
  br i1 %cmp232, label %land.lhs.true234, label %if.else239, !dbg !8384

land.lhs.true234:                                 ; preds = %if.else231
  %178 = load i32, i32* %y.addr, align 4, !dbg !8385
  %cmp235 = icmp sle i32 %178, 0, !dbg !8386
  br i1 %cmp235, label %if.then237, label %if.else239, !dbg !8387

if.then237:                                       ; preds = %land.lhs.true234
  %179 = load float, float* %temp2, align 4, !dbg !8388
  %add238 = fadd float %179, 0x400921FB60000000, !dbg !8388
  store float %add238, float* %temp2, align 4, !dbg !8388
  br label %if.end248, !dbg !8389

if.else239:                                       ; preds = %land.lhs.true234, %if.else231
  %180 = load i32, i32* %x.addr, align 4, !dbg !8390
  %cmp240 = icmp sge i32 %180, 0, !dbg !8392
  br i1 %cmp240, label %land.lhs.true242, label %if.end247, !dbg !8393

land.lhs.true242:                                 ; preds = %if.else239
  %181 = load i32, i32* %y.addr, align 4, !dbg !8394
  %cmp243 = icmp sle i32 %181, 0, !dbg !8395
  br i1 %cmp243, label %if.then245, label %if.end247, !dbg !8396

if.then245:                                       ; preds = %land.lhs.true242
  %182 = load float, float* %temp2, align 4, !dbg !8397
  %sub246 = fsub float 0x401921FB60000000, %182, !dbg !8398
  store float %sub246, float* %temp2, align 4, !dbg !8399
  br label %if.end247, !dbg !8400

if.end247:                                        ; preds = %if.then245, %land.lhs.true242, %if.else239
  br label %if.end248

if.end248:                                        ; preds = %if.end247, %if.then237
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.then229
  %183 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8401
  %forward250 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %183, i32 0, i32 2, !dbg !8403
  %184 = load i16, i16* %forward250, align 4, !dbg !8403
  %tobool251 = icmp ne i16 %184, 0, !dbg !8401
  br i1 %tobool251, label %if.then252, label %if.else260, !dbg !8404

if.then252:                                       ; preds = %if.end249
  %185 = load float, float* %temp1, align 4, !dbg !8405
  %186 = load float, float* %widthf, align 4, !dbg !8407
  %mul253 = fmul float %186, 5.000000e-01, !dbg !8408
  %187 = load float, float* %facf0.addr, align 4, !dbg !8409
  %mul254 = fmul float %mul253, %187, !dbg !8410
  %sub255 = fsub float %185, %mul254, !dbg !8411
  store float %sub255, float* %temp3, align 4, !dbg !8412
  %188 = load float, float* %temp1, align 4, !dbg !8413
  %189 = load float, float* %widthf, align 4, !dbg !8414
  %mul256 = fmul float %189, 5.000000e-01, !dbg !8415
  %190 = load float, float* %facf0.addr, align 4, !dbg !8416
  %sub257 = fsub float 1.000000e+00, %190, !dbg !8417
  %mul258 = fmul float %mul256, %sub257, !dbg !8418
  %add259 = fadd float %188, %mul258, !dbg !8419
  store float %add259, float* %temp4, align 4, !dbg !8420
  br label %if.end268, !dbg !8421

if.else260:                                       ; preds = %if.end249
  %191 = load float, float* %temp1, align 4, !dbg !8422
  %192 = load float, float* %widthf, align 4, !dbg !8424
  %mul261 = fmul float %192, 5.000000e-01, !dbg !8425
  %193 = load float, float* %facf0.addr, align 4, !dbg !8426
  %sub262 = fsub float 1.000000e+00, %193, !dbg !8427
  %mul263 = fmul float %mul261, %sub262, !dbg !8428
  %sub264 = fsub float %191, %mul263, !dbg !8429
  store float %sub264, float* %temp3, align 4, !dbg !8430
  %194 = load float, float* %temp1, align 4, !dbg !8431
  %195 = load float, float* %widthf, align 4, !dbg !8432
  %mul265 = fmul float %195, 5.000000e-01, !dbg !8433
  %196 = load float, float* %facf0.addr, align 4, !dbg !8434
  %mul266 = fmul float %mul265, %196, !dbg !8435
  %add267 = fadd float %194, %mul266, !dbg !8436
  store float %add267, float* %temp4, align 4, !dbg !8437
  br label %if.end268

if.end268:                                        ; preds = %if.else260, %if.then252
  %197 = load float, float* %temp3, align 4, !dbg !8438
  %cmp269 = fcmp olt float %197, 0.000000e+00, !dbg !8440
  br i1 %cmp269, label %if.then271, label %if.end272, !dbg !8441

if.then271:                                       ; preds = %if.end268
  store float 0.000000e+00, float* %temp3, align 4, !dbg !8442
  br label %if.end272, !dbg !8443

if.end272:                                        ; preds = %if.then271, %if.end268
  %198 = load float, float* %temp4, align 4, !dbg !8444
  %cmp273 = fcmp ogt float %198, 0x401921FB60000000, !dbg !8446
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !8447

if.then275:                                       ; preds = %if.end272
  store float 0x401921FB60000000, float* %temp4, align 4, !dbg !8448
  br label %if.end276, !dbg !8449

if.end276:                                        ; preds = %if.then275, %if.end272
  %199 = load float, float* %temp2, align 4, !dbg !8450
  %200 = load float, float* %temp3, align 4, !dbg !8452
  %cmp277 = fcmp olt float %199, %200, !dbg !8453
  br i1 %cmp277, label %if.then279, label %if.else280, !dbg !8454

if.then279:                                       ; preds = %if.end276
  store float 0.000000e+00, float* %output, align 4, !dbg !8455
  br label %if.end289, !dbg !8456

if.else280:                                       ; preds = %if.end276
  %201 = load float, float* %temp2, align 4, !dbg !8457
  %202 = load float, float* %temp4, align 4, !dbg !8459
  %cmp281 = fcmp ogt float %201, %202, !dbg !8460
  br i1 %cmp281, label %if.then283, label %if.else284, !dbg !8461

if.then283:                                       ; preds = %if.else280
  store float 1.000000e+00, float* %output, align 4, !dbg !8462
  br label %if.end288, !dbg !8463

if.else284:                                       ; preds = %if.else280
  %203 = load float, float* %temp2, align 4, !dbg !8464
  %204 = load float, float* %temp3, align 4, !dbg !8465
  %sub285 = fsub float %203, %204, !dbg !8466
  %205 = load float, float* %temp4, align 4, !dbg !8467
  %206 = load float, float* %temp3, align 4, !dbg !8468
  %sub286 = fsub float %205, %206, !dbg !8469
  %div287 = fdiv float %sub285, %sub286, !dbg !8470
  store float %div287, float* %output, align 4, !dbg !8471
  br label %if.end288

if.end288:                                        ; preds = %if.else284, %if.then283
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.then279
  %207 = load i32, i32* %x.addr, align 4, !dbg !8472
  %cmp290 = icmp eq i32 %207, 0, !dbg !8474
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !8475

land.lhs.true292:                                 ; preds = %if.end289
  %208 = load i32, i32* %y.addr, align 4, !dbg !8476
  %cmp293 = icmp eq i32 %208, 0, !dbg !8477
  br i1 %cmp293, label %if.then295, label %if.end296, !dbg !8478

if.then295:                                       ; preds = %land.lhs.true292
  store float 1.000000e+00, float* %output, align 4, !dbg !8479
  br label %if.end296, !dbg !8480

if.end296:                                        ; preds = %if.then295, %land.lhs.true292, %if.end289
  %209 = load float, float* %output, align 4, !dbg !8481
  %210 = load float, float* %output, align 4, !dbg !8483
  %cmp297 = fcmp une float %209, %210, !dbg !8484
  br i1 %cmp297, label %if.then299, label %if.end300, !dbg !8485

if.then299:                                       ; preds = %if.end296
  store float 1.000000e+00, float* %output, align 4, !dbg !8486
  br label %if.end300, !dbg !8487

if.end300:                                        ; preds = %if.then299, %if.end296
  %211 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8488
  %forward301 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %211, i32 0, i32 2, !dbg !8490
  %212 = load i16, i16* %forward301, align 4, !dbg !8490
  %tobool302 = icmp ne i16 %212, 0, !dbg !8488
  br i1 %tobool302, label %if.then303, label %if.end305, !dbg !8491

if.then303:                                       ; preds = %if.end300
  %213 = load float, float* %output, align 4, !dbg !8492
  %sub304 = fsub float 1.000000e+00, %213, !dbg !8493
  store float %sub304, float* %output, align 4, !dbg !8494
  br label %if.end305, !dbg !8495

if.end305:                                        ; preds = %if.then303, %if.end300
  br label %sw.epilog, !dbg !8496

sw.bb306:                                         ; preds = %if.end20
  %214 = load i32, i32* %xo, align 4, !dbg !8497
  %215 = load i32, i32* %yo, align 4, !dbg !8499
  %cmp307 = icmp sgt i32 %214, %215, !dbg !8500
  br i1 %cmp307, label %if.then309, label %if.else310, !dbg !8501

if.then309:                                       ; preds = %sw.bb306
  %216 = load i32, i32* %xo, align 4, !dbg !8502
  store i32 %216, i32* %yo, align 4, !dbg !8503
  br label %if.end311, !dbg !8504

if.else310:                                       ; preds = %sw.bb306
  %217 = load i32, i32* %yo, align 4, !dbg !8505
  store i32 %217, i32* %xo, align 4, !dbg !8506
  br label %if.end311

if.end311:                                        ; preds = %if.else310, %if.then309
  %218 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8507
  %forward312 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %218, i32 0, i32 2, !dbg !8509
  %219 = load i16, i16* %forward312, align 4, !dbg !8509
  %tobool313 = icmp ne i16 %219, 0, !dbg !8507
  br i1 %tobool313, label %if.end316, label %if.then314, !dbg !8510

if.then314:                                       ; preds = %if.end311
  %220 = load float, float* %facf0.addr, align 4, !dbg !8511
  %sub315 = fsub float 1.000000e+00, %220, !dbg !8512
  store float %sub315, float* %facf0.addr, align 4, !dbg !8513
  br label %if.end316, !dbg !8514

if.end316:                                        ; preds = %if.then314, %if.end311
  %221 = load %struct.WipeZone*, %struct.WipeZone** %wipezone.addr, align 8, !dbg !8515
  %width317 = getelementptr inbounds %struct.WipeZone, %struct.WipeZone* %221, i32 0, i32 4, !dbg !8516
  %222 = load i32, i32* %width317, align 4, !dbg !8516
  store i32 %222, i32* %width, align 4, !dbg !8517
  %223 = load i32, i32* %width, align 4, !dbg !8518
  %conv318 = sitofp i32 %223 to float, !dbg !8518
  %mul319 = fmul float %conv318, 5.000000e-01, !dbg !8519
  store float %mul319, float* %hwidth, align 4, !dbg !8520
  %224 = load float, float* %halfx, align 4, !dbg !8521
  %225 = load float, float* %halfx, align 4, !dbg !8522
  %226 = load float, float* %facf0.addr, align 4, !dbg !8523
  %mul320 = fmul float %225, %226, !dbg !8524
  %sub321 = fsub float %224, %mul320, !dbg !8525
  store float %sub321, float* %temp1, align 4, !dbg !8526
  %227 = load float, float* %temp1, align 4, !dbg !8527
  %228 = load float, float* %temp1, align 4, !dbg !8528
  %call322 = call float @hypotf(float %227, float %228) #6, !dbg !8529
  store float %call322, float* %pointdist, align 4, !dbg !8530
  %229 = load float, float* %halfx, align 4, !dbg !8531
  %230 = load i32, i32* %x.addr, align 4, !dbg !8532
  %conv323 = sitofp i32 %230 to float, !dbg !8532
  %sub324 = fsub float %229, %conv323, !dbg !8533
  %231 = load float, float* %halfy, align 4, !dbg !8534
  %232 = load i32, i32* %y.addr, align 4, !dbg !8535
  %conv325 = sitofp i32 %232 to float, !dbg !8535
  %sub326 = fsub float %231, %conv325, !dbg !8536
  %call327 = call float @hypotf(float %sub324, float %sub326) #6, !dbg !8537
  store float %call327, float* %temp2, align 4, !dbg !8538
  %233 = load float, float* %temp2, align 4, !dbg !8539
  %234 = load float, float* %pointdist, align 4, !dbg !8541
  %cmp328 = fcmp ogt float %233, %234, !dbg !8542
  br i1 %cmp328, label %if.then330, label %if.else333, !dbg !8543

if.then330:                                       ; preds = %if.end316
  %235 = load float, float* %hwidth, align 4, !dbg !8544
  %236 = load float, float* %temp2, align 4, !dbg !8545
  %237 = load float, float* %pointdist, align 4, !dbg !8546
  %sub331 = fsub float %236, %237, !dbg !8547
  %238 = call float @llvm.fabs.f32(float %sub331), !dbg !8548
  %call332 = call float @in_band(float %235, float %238, i32 0, i32 1), !dbg !8549
  store float %call332, float* %output, align 4, !dbg !8550
  br label %if.end336, !dbg !8551

if.else333:                                       ; preds = %if.end316
  %239 = load float, float* %hwidth, align 4, !dbg !8552
  %240 = load float, float* %temp2, align 4, !dbg !8553
  %241 = load float, float* %pointdist, align 4, !dbg !8554
  %sub334 = fsub float %240, %241, !dbg !8555
  %242 = call float @llvm.fabs.f32(float %sub334), !dbg !8556
  %call335 = call float @in_band(float %239, float %242, i32 1, i32 1), !dbg !8557
  store float %call335, float* %output, align 4, !dbg !8558
  br label %if.end336

if.end336:                                        ; preds = %if.else333, %if.then330
  %243 = load %struct.WipeVars*, %struct.WipeVars** %wipe, align 8, !dbg !8559
  %forward337 = getelementptr inbounds %struct.WipeVars, %struct.WipeVars* %243, i32 0, i32 2, !dbg !8561
  %244 = load i16, i16* %forward337, align 4, !dbg !8561
  %tobool338 = icmp ne i16 %244, 0, !dbg !8559
  br i1 %tobool338, label %if.end341, label %if.then339, !dbg !8562

if.then339:                                       ; preds = %if.end336
  %245 = load float, float* %output, align 4, !dbg !8563
  %sub340 = fsub float 1.000000e+00, %245, !dbg !8564
  store float %sub340, float* %output, align 4, !dbg !8565
  br label %if.end341, !dbg !8566

if.end341:                                        ; preds = %if.then339, %if.end336
  br label %sw.epilog, !dbg !8567

sw.epilog:                                        ; preds = %if.end20, %if.end341, %if.end305, %if.end199, %if.end80
  %246 = load float, float* %output, align 4, !dbg !8568
  %cmp342 = fcmp olt float %246, 0.000000e+00, !dbg !8570
  br i1 %cmp342, label %if.then344, label %if.else345, !dbg !8571

if.then344:                                       ; preds = %sw.epilog
  store float 0.000000e+00, float* %output, align 4, !dbg !8572
  br label %if.end350, !dbg !8573

if.else345:                                       ; preds = %sw.epilog
  %247 = load float, float* %output, align 4, !dbg !8574
  %cmp346 = fcmp ogt float %247, 1.000000e+00, !dbg !8576
  br i1 %cmp346, label %if.then348, label %if.end349, !dbg !8577

if.then348:                                       ; preds = %if.else345
  store float 1.000000e+00, float* %output, align 4, !dbg !8578
  br label %if.end349, !dbg !8579

if.end349:                                        ; preds = %if.then348, %if.else345
  br label %if.end350

if.end350:                                        ; preds = %if.end349, %if.then344
  %248 = load float, float* %output, align 4, !dbg !8580
  ret float %248, !dbg !8581
}

; Function Attrs: nounwind
declare dso_local float @tanf(float) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal float @in_band(float %width, float %dist, i32 %side, i32 %dir) #0 !dbg !8582 {
entry:
  %retval = alloca float, align 4
  %width.addr = alloca float, align 4
  %dist.addr = alloca float, align 4
  %side.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %alpha = alloca float, align 4
  store float %width, float* %width.addr, align 4
  call void @llvm.dbg.declare(metadata float* %width.addr, metadata !8585, metadata !DIExpression()), !dbg !8586
  store float %dist, float* %dist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dist.addr, metadata !8587, metadata !DIExpression()), !dbg !8588
  store i32 %side, i32* %side.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %side.addr, metadata !8589, metadata !DIExpression()), !dbg !8590
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !8591, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !8593, metadata !DIExpression()), !dbg !8594
  %0 = load float, float* %width.addr, align 4, !dbg !8595
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !8597
  br i1 %cmp, label %if.then, label %if.end, !dbg !8598

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %side.addr, align 4, !dbg !8599
  %conv = sitofp i32 %1 to float, !dbg !8600
  store float %conv, float* %retval, align 4, !dbg !8601
  br label %return, !dbg !8601

if.end:                                           ; preds = %entry
  %2 = load float, float* %width.addr, align 4, !dbg !8602
  %3 = load float, float* %dist.addr, align 4, !dbg !8604
  %cmp1 = fcmp olt float %2, %3, !dbg !8605
  br i1 %cmp1, label %if.then3, label %if.end5, !dbg !8606

if.then3:                                         ; preds = %if.end
  %4 = load i32, i32* %side.addr, align 4, !dbg !8607
  %conv4 = sitofp i32 %4 to float, !dbg !8608
  store float %conv4, float* %retval, align 4, !dbg !8609
  br label %return, !dbg !8609

if.end5:                                          ; preds = %if.end
  %5 = load i32, i32* %side.addr, align 4, !dbg !8610
  %cmp6 = icmp eq i32 %5, 1, !dbg !8612
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !8613

if.then8:                                         ; preds = %if.end5
  %6 = load float, float* %dist.addr, align 4, !dbg !8614
  %7 = load float, float* %width.addr, align 4, !dbg !8615
  %mul = fmul float 5.000000e-01, %7, !dbg !8616
  %add = fadd float %6, %mul, !dbg !8617
  %8 = load float, float* %width.addr, align 4, !dbg !8618
  %div = fdiv float %add, %8, !dbg !8619
  store float %div, float* %alpha, align 4, !dbg !8620
  br label %if.end11, !dbg !8621

if.else:                                          ; preds = %if.end5
  %9 = load float, float* %width.addr, align 4, !dbg !8622
  %mul9 = fmul float 5.000000e-01, %9, !dbg !8623
  %10 = load float, float* %dist.addr, align 4, !dbg !8624
  %sub = fsub float %mul9, %10, !dbg !8625
  %11 = load float, float* %width.addr, align 4, !dbg !8626
  %div10 = fdiv float %sub, %11, !dbg !8627
  store float %div10, float* %alpha, align 4, !dbg !8628
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  %12 = load i32, i32* %dir.addr, align 4, !dbg !8629
  %cmp12 = icmp eq i32 %12, 0, !dbg !8631
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !8632

if.then14:                                        ; preds = %if.end11
  %13 = load float, float* %alpha, align 4, !dbg !8633
  %sub15 = fsub float 1.000000e+00, %13, !dbg !8634
  store float %sub15, float* %alpha, align 4, !dbg !8635
  br label %if.end16, !dbg !8636

if.end16:                                         ; preds = %if.then14, %if.end11
  %14 = load float, float* %alpha, align 4, !dbg !8637
  store float %14, float* %retval, align 4, !dbg !8638
  br label %return, !dbg !8638

return:                                           ; preds = %if.end16, %if.then3, %if.then
  %15 = load float, float* %retval, align 4, !dbg !8639
  ret float %15, !dbg !8639
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !8640 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8641, metadata !DIExpression()), !dbg !8642
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8643, metadata !DIExpression()), !dbg !8644
  %0 = load float, float* %a.addr, align 4, !dbg !8645
  %1 = load float, float* %b.addr, align 4, !dbg !8646
  %cmp = fcmp olt float %0, %1, !dbg !8647
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8648

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !8649
  br label %cond.end, !dbg !8648

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !8650
  br label %cond.end, !dbg !8648

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8648
  ret float %cond, !dbg !8651
}

; Function Attrs: nounwind
declare dso_local double @asin(double) #4

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #5

; Function Attrs: nounwind
declare dso_local double @hypot(double, double) #4

; Function Attrs: nounwind
declare dso_local float @hypotf(float, float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @do_glow_effect_float(%struct.Sequence* %seq, i32 %render_size, float %facf0, float %UNUSED_facf1, i32 %x, i32 %y, float* %rect1, float* %UNUSED_rect2, float* %out) #0 !dbg !8652 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %render_size.addr = alloca i32, align 4
  %facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca float*, align 8
  %UNUSED_rect2.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %outbuf = alloca float*, align 8
  %inbuf = alloca float*, align 8
  %glow = alloca %struct.GlowVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !8655, metadata !DIExpression()), !dbg !8656
  store i32 %render_size, i32* %render_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %render_size.addr, metadata !8657, metadata !DIExpression()), !dbg !8658
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !8659, metadata !DIExpression()), !dbg !8660
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !8661, metadata !DIExpression()), !dbg !8662
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8663, metadata !DIExpression()), !dbg !8664
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8665, metadata !DIExpression()), !dbg !8666
  store float* %rect1, float** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect1.addr, metadata !8667, metadata !DIExpression()), !dbg !8668
  store float* %UNUSED_rect2, float** %UNUSED_rect2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_rect2.addr, metadata !8669, metadata !DIExpression()), !dbg !8670
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.declare(metadata float** %outbuf, metadata !8673, metadata !DIExpression()), !dbg !8674
  %0 = load float*, float** %out.addr, align 8, !dbg !8675
  store float* %0, float** %outbuf, align 8, !dbg !8674
  call void @llvm.dbg.declare(metadata float** %inbuf, metadata !8676, metadata !DIExpression()), !dbg !8677
  %1 = load float*, float** %rect1.addr, align 8, !dbg !8678
  store float* %1, float** %inbuf, align 8, !dbg !8677
  call void @llvm.dbg.declare(metadata %struct.GlowVars** %glow, metadata !8679, metadata !DIExpression()), !dbg !8680
  %2 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !8681
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %2, i32 0, i32 43, !dbg !8682
  %3 = load i8*, i8** %effectdata, align 8, !dbg !8682
  %4 = bitcast i8* %3 to %struct.GlowVars*, !dbg !8683
  store %struct.GlowVars* %4, %struct.GlowVars** %glow, align 8, !dbg !8680
  %5 = load float*, float** %inbuf, align 8, !dbg !8684
  %6 = load float*, float** %outbuf, align 8, !dbg !8685
  %7 = load i32, i32* %x.addr, align 4, !dbg !8686
  %8 = load i32, i32* %y.addr, align 4, !dbg !8687
  %9 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8688
  %fMini = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %9, i32 0, i32 0, !dbg !8689
  %10 = load float, float* %fMini, align 4, !dbg !8689
  %mul = fmul float %10, 3.000000e+00, !dbg !8690
  %11 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8691
  %fBoost = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %11, i32 0, i32 2, !dbg !8692
  %12 = load float, float* %fBoost, align 4, !dbg !8692
  %13 = load float, float* %facf0.addr, align 4, !dbg !8693
  %mul1 = fmul float %12, %13, !dbg !8694
  %14 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8695
  %fClamp = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %14, i32 0, i32 1, !dbg !8696
  %15 = load float, float* %fClamp, align 4, !dbg !8696
  call void @RVIsolateHighlights_float(float* %5, float* %6, i32 %7, i32 %8, float %mul, float %mul1, float %15), !dbg !8697
  %16 = load float*, float** %outbuf, align 8, !dbg !8698
  %17 = load i32, i32* %x.addr, align 4, !dbg !8699
  %18 = load i32, i32* %y.addr, align 4, !dbg !8700
  %19 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8701
  %dDist = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %19, i32 0, i32 3, !dbg !8702
  %20 = load float, float* %dDist, align 4, !dbg !8702
  %21 = load i32, i32* %render_size.addr, align 4, !dbg !8703
  %conv = sitofp i32 %21 to float, !dbg !8703
  %div = fdiv float %conv, 1.000000e+02, !dbg !8704
  %mul2 = fmul float %20, %div, !dbg !8705
  %22 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8706
  %dQuality = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %22, i32 0, i32 4, !dbg !8707
  %23 = load i32, i32* %dQuality, align 4, !dbg !8707
  call void @RVBlurBitmap2_float(float* %16, i32 %17, i32 %18, float %mul2, i32 %23), !dbg !8708
  %24 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8709
  %bNoComp = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %24, i32 0, i32 5, !dbg !8711
  %25 = load i32, i32* %bNoComp, align 4, !dbg !8711
  %tobool = icmp ne i32 %25, 0, !dbg !8709
  br i1 %tobool, label %if.end, label %if.then, !dbg !8712

if.then:                                          ; preds = %entry
  %26 = load float*, float** %inbuf, align 8, !dbg !8713
  %27 = load float*, float** %outbuf, align 8, !dbg !8714
  %28 = load float*, float** %outbuf, align 8, !dbg !8715
  %29 = load i32, i32* %x.addr, align 4, !dbg !8716
  %30 = load i32, i32* %y.addr, align 4, !dbg !8717
  call void @RVAddBitmaps_float(float* %26, float* %27, float* %28, i32 %29, i32 %30), !dbg !8718
  br label %if.end, !dbg !8718

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8719
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_glow_effect_byte(%struct.Sequence* %seq, i32 %render_size, float %facf0, float %UNUSED_facf1, i32 %x, i32 %y, i8* %rect1, i8* %UNUSED_rect2, i8* %out) #0 !dbg !8720 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %render_size.addr = alloca i32, align 4
  %facf0.addr = alloca float, align 4
  %UNUSED_facf1.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %rect1.addr = alloca i8*, align 8
  %UNUSED_rect2.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %outbuf = alloca float*, align 8
  %inbuf = alloca float*, align 8
  %glow = alloca %struct.GlowVars*, align 8
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !8723, metadata !DIExpression()), !dbg !8724
  store i32 %render_size, i32* %render_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %render_size.addr, metadata !8725, metadata !DIExpression()), !dbg !8726
  store float %facf0, float* %facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %facf0.addr, metadata !8727, metadata !DIExpression()), !dbg !8728
  store float %UNUSED_facf1, float* %UNUSED_facf1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf1.addr, metadata !8729, metadata !DIExpression()), !dbg !8730
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8731, metadata !DIExpression()), !dbg !8732
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8733, metadata !DIExpression()), !dbg !8734
  store i8* %rect1, i8** %rect1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect1.addr, metadata !8735, metadata !DIExpression()), !dbg !8736
  store i8* %UNUSED_rect2, i8** %UNUSED_rect2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_rect2.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !8739, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.declare(metadata float** %outbuf, metadata !8741, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata float** %inbuf, metadata !8743, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.declare(metadata %struct.GlowVars** %glow, metadata !8745, metadata !DIExpression()), !dbg !8746
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !8747
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !8748
  %1 = load i8*, i8** %effectdata, align 8, !dbg !8748
  %2 = bitcast i8* %1 to %struct.GlowVars*, !dbg !8749
  store %struct.GlowVars* %2, %struct.GlowVars** %glow, align 8, !dbg !8746
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8750
  %4 = load i32, i32* %x.addr, align 4, !dbg !8751
  %conv = sext i32 %4 to i64, !dbg !8751
  %mul = mul i64 16, %conv, !dbg !8752
  %5 = load i32, i32* %y.addr, align 4, !dbg !8753
  %conv1 = sext i32 %5 to i64, !dbg !8753
  %mul2 = mul i64 %mul, %conv1, !dbg !8754
  %call = call i8* %3(i64 %mul2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0)), !dbg !8750
  %6 = bitcast i8* %call to float*, !dbg !8750
  store float* %6, float** %inbuf, align 8, !dbg !8755
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8756
  %8 = load i32, i32* %x.addr, align 4, !dbg !8757
  %conv3 = sext i32 %8 to i64, !dbg !8757
  %mul4 = mul i64 16, %conv3, !dbg !8758
  %9 = load i32, i32* %y.addr, align 4, !dbg !8759
  %conv5 = sext i32 %9 to i64, !dbg !8759
  %mul6 = mul i64 %mul4, %conv5, !dbg !8760
  %call7 = call i8* %7(i64 %mul6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)), !dbg !8756
  %10 = bitcast i8* %call7 to float*, !dbg !8756
  store float* %10, float** %outbuf, align 8, !dbg !8761
  %11 = load float*, float** %inbuf, align 8, !dbg !8762
  %12 = load i8*, i8** %rect1.addr, align 8, !dbg !8763
  %13 = load i32, i32* %x.addr, align 4, !dbg !8764
  %14 = load i32, i32* %y.addr, align 4, !dbg !8765
  %15 = load i32, i32* %x.addr, align 4, !dbg !8766
  %16 = load i32, i32* %x.addr, align 4, !dbg !8767
  call void @IMB_buffer_float_from_byte(float* %11, i8* %12, i32 2, i32 2, i8 zeroext 0, i32 %13, i32 %14, i32 %15, i32 %16), !dbg !8768
  %17 = load float*, float** %inbuf, align 8, !dbg !8769
  %18 = load i32, i32* %x.addr, align 4, !dbg !8770
  %19 = load i32, i32* %y.addr, align 4, !dbg !8771
  call void @IMB_buffer_float_premultiply(float* %17, i32 %18, i32 %19), !dbg !8772
  %20 = load float*, float** %inbuf, align 8, !dbg !8773
  %21 = load float*, float** %outbuf, align 8, !dbg !8774
  %22 = load i32, i32* %x.addr, align 4, !dbg !8775
  %23 = load i32, i32* %y.addr, align 4, !dbg !8776
  %24 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8777
  %fMini = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %24, i32 0, i32 0, !dbg !8778
  %25 = load float, float* %fMini, align 4, !dbg !8778
  %mul8 = fmul float %25, 3.000000e+00, !dbg !8779
  %26 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8780
  %fBoost = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %26, i32 0, i32 2, !dbg !8781
  %27 = load float, float* %fBoost, align 4, !dbg !8781
  %28 = load float, float* %facf0.addr, align 4, !dbg !8782
  %mul9 = fmul float %27, %28, !dbg !8783
  %29 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8784
  %fClamp = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %29, i32 0, i32 1, !dbg !8785
  %30 = load float, float* %fClamp, align 4, !dbg !8785
  call void @RVIsolateHighlights_float(float* %20, float* %21, i32 %22, i32 %23, float %mul8, float %mul9, float %30), !dbg !8786
  %31 = load float*, float** %outbuf, align 8, !dbg !8787
  %32 = load i32, i32* %x.addr, align 4, !dbg !8788
  %33 = load i32, i32* %y.addr, align 4, !dbg !8789
  %34 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8790
  %dDist = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %34, i32 0, i32 3, !dbg !8791
  %35 = load float, float* %dDist, align 4, !dbg !8791
  %36 = load i32, i32* %render_size.addr, align 4, !dbg !8792
  %conv10 = sitofp i32 %36 to float, !dbg !8792
  %div = fdiv float %conv10, 1.000000e+02, !dbg !8793
  %mul11 = fmul float %35, %div, !dbg !8794
  %37 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8795
  %dQuality = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %37, i32 0, i32 4, !dbg !8796
  %38 = load i32, i32* %dQuality, align 4, !dbg !8796
  call void @RVBlurBitmap2_float(float* %31, i32 %32, i32 %33, float %mul11, i32 %38), !dbg !8797
  %39 = load %struct.GlowVars*, %struct.GlowVars** %glow, align 8, !dbg !8798
  %bNoComp = getelementptr inbounds %struct.GlowVars, %struct.GlowVars* %39, i32 0, i32 5, !dbg !8800
  %40 = load i32, i32* %bNoComp, align 4, !dbg !8800
  %tobool = icmp ne i32 %40, 0, !dbg !8798
  br i1 %tobool, label %if.end, label %if.then, !dbg !8801

if.then:                                          ; preds = %entry
  %41 = load float*, float** %inbuf, align 8, !dbg !8802
  %42 = load float*, float** %outbuf, align 8, !dbg !8803
  %43 = load float*, float** %outbuf, align 8, !dbg !8804
  %44 = load i32, i32* %x.addr, align 4, !dbg !8805
  %45 = load i32, i32* %y.addr, align 4, !dbg !8806
  call void @RVAddBitmaps_float(float* %41, float* %42, float* %43, i32 %44, i32 %45), !dbg !8807
  br label %if.end, !dbg !8807

if.end:                                           ; preds = %if.then, %entry
  %46 = load float*, float** %outbuf, align 8, !dbg !8808
  %47 = load i32, i32* %x.addr, align 4, !dbg !8809
  %48 = load i32, i32* %y.addr, align 4, !dbg !8810
  call void @IMB_buffer_float_unpremultiply(float* %46, i32 %47, i32 %48), !dbg !8811
  %49 = load i8*, i8** %out.addr, align 8, !dbg !8812
  %50 = load float*, float** %outbuf, align 8, !dbg !8813
  %51 = load i32, i32* %x.addr, align 4, !dbg !8814
  %52 = load i32, i32* %y.addr, align 4, !dbg !8815
  %53 = load i32, i32* %x.addr, align 4, !dbg !8816
  %54 = load i32, i32* %x.addr, align 4, !dbg !8817
  call void @IMB_buffer_byte_from_float(i8* %49, float* %50, i32 4, float 0.000000e+00, i32 2, i32 2, i8 zeroext 0, i32 %51, i32 %52, i32 %53, i32 %54), !dbg !8818
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8819
  %56 = load float*, float** %inbuf, align 8, !dbg !8820
  %57 = bitcast float* %56 to i8*, !dbg !8820
  call void %55(i8* %57), !dbg !8819
  %58 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8821
  %59 = load float*, float** %outbuf, align 8, !dbg !8822
  %60 = bitcast float* %59 to i8*, !dbg !8822
  call void %58(i8* %60), !dbg !8821
  ret void, !dbg !8823
}

; Function Attrs: noinline nounwind uwtable
define internal void @RVIsolateHighlights_float(float* %in, float* %out, i32 %width, i32 %height, float %threshold, float %boost, float %clamp) #0 !dbg !8824 {
entry:
  %in.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %threshold.addr = alloca float, align 4
  %boost.addr = alloca float, align 4
  %clamp.addr = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %index = alloca i32, align 4
  %intensity = alloca float, align 4
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !8827, metadata !DIExpression()), !dbg !8828
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !8829, metadata !DIExpression()), !dbg !8830
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !8831, metadata !DIExpression()), !dbg !8832
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  store float %threshold, float* %threshold.addr, align 4
  call void @llvm.dbg.declare(metadata float* %threshold.addr, metadata !8835, metadata !DIExpression()), !dbg !8836
  store float %boost, float* %boost.addr, align 4
  call void @llvm.dbg.declare(metadata float* %boost.addr, metadata !8837, metadata !DIExpression()), !dbg !8838
  store float %clamp, float* %clamp.addr, align 4
  call void @llvm.dbg.declare(metadata float* %clamp.addr, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8841, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8843, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8845, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.declare(metadata float* %intensity, metadata !8847, metadata !DIExpression()), !dbg !8848
  store i32 0, i32* %y, align 4, !dbg !8849
  br label %for.cond, !dbg !8851

for.cond:                                         ; preds = %for.inc95, %entry
  %0 = load i32, i32* %y, align 4, !dbg !8852
  %1 = load i32, i32* %height.addr, align 4, !dbg !8854
  %cmp = icmp slt i32 %0, %1, !dbg !8855
  br i1 %cmp, label %for.body, label %for.end97, !dbg !8856

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !8857
  br label %for.cond1, !dbg !8860

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !8861
  %3 = load i32, i32* %width.addr, align 4, !dbg !8863
  %cmp2 = icmp slt i32 %2, %3, !dbg !8864
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8865

for.body3:                                        ; preds = %for.cond1
  %4 = load i32, i32* %x, align 4, !dbg !8866
  %5 = load i32, i32* %y, align 4, !dbg !8868
  %6 = load i32, i32* %width.addr, align 4, !dbg !8869
  %mul = mul nsw i32 %5, %6, !dbg !8870
  %add = add nsw i32 %4, %mul, !dbg !8871
  %mul4 = mul nsw i32 %add, 4, !dbg !8872
  store i32 %mul4, i32* %index, align 4, !dbg !8873
  %7 = load float*, float** %in.addr, align 8, !dbg !8874
  %8 = load i32, i32* %index, align 4, !dbg !8875
  %add5 = add nsw i32 %8, 0, !dbg !8876
  %idxprom = sext i32 %add5 to i64, !dbg !8874
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !8874
  %9 = load float, float* %arrayidx, align 4, !dbg !8874
  %10 = load float*, float** %in.addr, align 8, !dbg !8877
  %11 = load i32, i32* %index, align 4, !dbg !8878
  %add6 = add nsw i32 %11, 1, !dbg !8879
  %idxprom7 = sext i32 %add6 to i64, !dbg !8877
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 %idxprom7, !dbg !8877
  %12 = load float, float* %arrayidx8, align 4, !dbg !8877
  %add9 = fadd float %9, %12, !dbg !8880
  %13 = load float*, float** %in.addr, align 8, !dbg !8881
  %14 = load i32, i32* %index, align 4, !dbg !8882
  %add10 = add nsw i32 %14, 2, !dbg !8883
  %idxprom11 = sext i32 %add10 to i64, !dbg !8881
  %arrayidx12 = getelementptr inbounds float, float* %13, i64 %idxprom11, !dbg !8881
  %15 = load float, float* %arrayidx12, align 4, !dbg !8881
  %add13 = fadd float %add9, %15, !dbg !8884
  %16 = load float, float* %threshold.addr, align 4, !dbg !8885
  %sub = fsub float %add13, %16, !dbg !8886
  store float %sub, float* %intensity, align 4, !dbg !8887
  %17 = load float, float* %intensity, align 4, !dbg !8888
  %cmp14 = fcmp ogt float %17, 0.000000e+00, !dbg !8890
  br i1 %cmp14, label %if.then, label %if.else, !dbg !8891

if.then:                                          ; preds = %for.body3
  %18 = load float, float* %clamp.addr, align 4, !dbg !8892
  %19 = load float*, float** %in.addr, align 8, !dbg !8892
  %20 = load i32, i32* %index, align 4, !dbg !8892
  %add15 = add nsw i32 %20, 0, !dbg !8892
  %idxprom16 = sext i32 %add15 to i64, !dbg !8892
  %arrayidx17 = getelementptr inbounds float, float* %19, i64 %idxprom16, !dbg !8892
  %21 = load float, float* %arrayidx17, align 4, !dbg !8892
  %22 = load float, float* %boost.addr, align 4, !dbg !8892
  %mul18 = fmul float %21, %22, !dbg !8892
  %23 = load float, float* %intensity, align 4, !dbg !8892
  %mul19 = fmul float %mul18, %23, !dbg !8892
  %cmp20 = fcmp olt float %18, %mul19, !dbg !8892
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !8892

cond.true:                                        ; preds = %if.then
  %24 = load float, float* %clamp.addr, align 4, !dbg !8892
  br label %cond.end, !dbg !8892

cond.false:                                       ; preds = %if.then
  %25 = load float*, float** %in.addr, align 8, !dbg !8892
  %26 = load i32, i32* %index, align 4, !dbg !8892
  %add21 = add nsw i32 %26, 0, !dbg !8892
  %idxprom22 = sext i32 %add21 to i64, !dbg !8892
  %arrayidx23 = getelementptr inbounds float, float* %25, i64 %idxprom22, !dbg !8892
  %27 = load float, float* %arrayidx23, align 4, !dbg !8892
  %28 = load float, float* %boost.addr, align 4, !dbg !8892
  %mul24 = fmul float %27, %28, !dbg !8892
  %29 = load float, float* %intensity, align 4, !dbg !8892
  %mul25 = fmul float %mul24, %29, !dbg !8892
  br label %cond.end, !dbg !8892

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %24, %cond.true ], [ %mul25, %cond.false ], !dbg !8892
  %30 = load float*, float** %out.addr, align 8, !dbg !8894
  %31 = load i32, i32* %index, align 4, !dbg !8895
  %add26 = add nsw i32 %31, 0, !dbg !8896
  %idxprom27 = sext i32 %add26 to i64, !dbg !8894
  %arrayidx28 = getelementptr inbounds float, float* %30, i64 %idxprom27, !dbg !8894
  store float %cond, float* %arrayidx28, align 4, !dbg !8897
  %32 = load float, float* %clamp.addr, align 4, !dbg !8898
  %33 = load float*, float** %in.addr, align 8, !dbg !8898
  %34 = load i32, i32* %index, align 4, !dbg !8898
  %add29 = add nsw i32 %34, 1, !dbg !8898
  %idxprom30 = sext i32 %add29 to i64, !dbg !8898
  %arrayidx31 = getelementptr inbounds float, float* %33, i64 %idxprom30, !dbg !8898
  %35 = load float, float* %arrayidx31, align 4, !dbg !8898
  %36 = load float, float* %boost.addr, align 4, !dbg !8898
  %mul32 = fmul float %35, %36, !dbg !8898
  %37 = load float, float* %intensity, align 4, !dbg !8898
  %mul33 = fmul float %mul32, %37, !dbg !8898
  %cmp34 = fcmp olt float %32, %mul33, !dbg !8898
  br i1 %cmp34, label %cond.true35, label %cond.false36, !dbg !8898

cond.true35:                                      ; preds = %cond.end
  %38 = load float, float* %clamp.addr, align 4, !dbg !8898
  br label %cond.end42, !dbg !8898

cond.false36:                                     ; preds = %cond.end
  %39 = load float*, float** %in.addr, align 8, !dbg !8898
  %40 = load i32, i32* %index, align 4, !dbg !8898
  %add37 = add nsw i32 %40, 1, !dbg !8898
  %idxprom38 = sext i32 %add37 to i64, !dbg !8898
  %arrayidx39 = getelementptr inbounds float, float* %39, i64 %idxprom38, !dbg !8898
  %41 = load float, float* %arrayidx39, align 4, !dbg !8898
  %42 = load float, float* %boost.addr, align 4, !dbg !8898
  %mul40 = fmul float %41, %42, !dbg !8898
  %43 = load float, float* %intensity, align 4, !dbg !8898
  %mul41 = fmul float %mul40, %43, !dbg !8898
  br label %cond.end42, !dbg !8898

cond.end42:                                       ; preds = %cond.false36, %cond.true35
  %cond43 = phi float [ %38, %cond.true35 ], [ %mul41, %cond.false36 ], !dbg !8898
  %44 = load float*, float** %out.addr, align 8, !dbg !8899
  %45 = load i32, i32* %index, align 4, !dbg !8900
  %add44 = add nsw i32 %45, 1, !dbg !8901
  %idxprom45 = sext i32 %add44 to i64, !dbg !8899
  %arrayidx46 = getelementptr inbounds float, float* %44, i64 %idxprom45, !dbg !8899
  store float %cond43, float* %arrayidx46, align 4, !dbg !8902
  %46 = load float, float* %clamp.addr, align 4, !dbg !8903
  %47 = load float*, float** %in.addr, align 8, !dbg !8903
  %48 = load i32, i32* %index, align 4, !dbg !8903
  %add47 = add nsw i32 %48, 2, !dbg !8903
  %idxprom48 = sext i32 %add47 to i64, !dbg !8903
  %arrayidx49 = getelementptr inbounds float, float* %47, i64 %idxprom48, !dbg !8903
  %49 = load float, float* %arrayidx49, align 4, !dbg !8903
  %50 = load float, float* %boost.addr, align 4, !dbg !8903
  %mul50 = fmul float %49, %50, !dbg !8903
  %51 = load float, float* %intensity, align 4, !dbg !8903
  %mul51 = fmul float %mul50, %51, !dbg !8903
  %cmp52 = fcmp olt float %46, %mul51, !dbg !8903
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !8903

cond.true53:                                      ; preds = %cond.end42
  %52 = load float, float* %clamp.addr, align 4, !dbg !8903
  br label %cond.end60, !dbg !8903

cond.false54:                                     ; preds = %cond.end42
  %53 = load float*, float** %in.addr, align 8, !dbg !8903
  %54 = load i32, i32* %index, align 4, !dbg !8903
  %add55 = add nsw i32 %54, 2, !dbg !8903
  %idxprom56 = sext i32 %add55 to i64, !dbg !8903
  %arrayidx57 = getelementptr inbounds float, float* %53, i64 %idxprom56, !dbg !8903
  %55 = load float, float* %arrayidx57, align 4, !dbg !8903
  %56 = load float, float* %boost.addr, align 4, !dbg !8903
  %mul58 = fmul float %55, %56, !dbg !8903
  %57 = load float, float* %intensity, align 4, !dbg !8903
  %mul59 = fmul float %mul58, %57, !dbg !8903
  br label %cond.end60, !dbg !8903

cond.end60:                                       ; preds = %cond.false54, %cond.true53
  %cond61 = phi float [ %52, %cond.true53 ], [ %mul59, %cond.false54 ], !dbg !8903
  %58 = load float*, float** %out.addr, align 8, !dbg !8904
  %59 = load i32, i32* %index, align 4, !dbg !8905
  %add62 = add nsw i32 %59, 2, !dbg !8906
  %idxprom63 = sext i32 %add62 to i64, !dbg !8904
  %arrayidx64 = getelementptr inbounds float, float* %58, i64 %idxprom63, !dbg !8904
  store float %cond61, float* %arrayidx64, align 4, !dbg !8907
  %60 = load float, float* %clamp.addr, align 4, !dbg !8908
  %61 = load float*, float** %in.addr, align 8, !dbg !8908
  %62 = load i32, i32* %index, align 4, !dbg !8908
  %add65 = add nsw i32 %62, 3, !dbg !8908
  %idxprom66 = sext i32 %add65 to i64, !dbg !8908
  %arrayidx67 = getelementptr inbounds float, float* %61, i64 %idxprom66, !dbg !8908
  %63 = load float, float* %arrayidx67, align 4, !dbg !8908
  %64 = load float, float* %boost.addr, align 4, !dbg !8908
  %mul68 = fmul float %63, %64, !dbg !8908
  %65 = load float, float* %intensity, align 4, !dbg !8908
  %mul69 = fmul float %mul68, %65, !dbg !8908
  %cmp70 = fcmp olt float %60, %mul69, !dbg !8908
  br i1 %cmp70, label %cond.true71, label %cond.false72, !dbg !8908

cond.true71:                                      ; preds = %cond.end60
  %66 = load float, float* %clamp.addr, align 4, !dbg !8908
  br label %cond.end78, !dbg !8908

cond.false72:                                     ; preds = %cond.end60
  %67 = load float*, float** %in.addr, align 8, !dbg !8908
  %68 = load i32, i32* %index, align 4, !dbg !8908
  %add73 = add nsw i32 %68, 3, !dbg !8908
  %idxprom74 = sext i32 %add73 to i64, !dbg !8908
  %arrayidx75 = getelementptr inbounds float, float* %67, i64 %idxprom74, !dbg !8908
  %69 = load float, float* %arrayidx75, align 4, !dbg !8908
  %70 = load float, float* %boost.addr, align 4, !dbg !8908
  %mul76 = fmul float %69, %70, !dbg !8908
  %71 = load float, float* %intensity, align 4, !dbg !8908
  %mul77 = fmul float %mul76, %71, !dbg !8908
  br label %cond.end78, !dbg !8908

cond.end78:                                       ; preds = %cond.false72, %cond.true71
  %cond79 = phi float [ %66, %cond.true71 ], [ %mul77, %cond.false72 ], !dbg !8908
  %72 = load float*, float** %out.addr, align 8, !dbg !8909
  %73 = load i32, i32* %index, align 4, !dbg !8910
  %add80 = add nsw i32 %73, 3, !dbg !8911
  %idxprom81 = sext i32 %add80 to i64, !dbg !8909
  %arrayidx82 = getelementptr inbounds float, float* %72, i64 %idxprom81, !dbg !8909
  store float %cond79, float* %arrayidx82, align 4, !dbg !8912
  br label %if.end, !dbg !8913

if.else:                                          ; preds = %for.body3
  %74 = load float*, float** %out.addr, align 8, !dbg !8914
  %75 = load i32, i32* %index, align 4, !dbg !8916
  %add83 = add nsw i32 %75, 0, !dbg !8917
  %idxprom84 = sext i32 %add83 to i64, !dbg !8914
  %arrayidx85 = getelementptr inbounds float, float* %74, i64 %idxprom84, !dbg !8914
  store float 0.000000e+00, float* %arrayidx85, align 4, !dbg !8918
  %76 = load float*, float** %out.addr, align 8, !dbg !8919
  %77 = load i32, i32* %index, align 4, !dbg !8920
  %add86 = add nsw i32 %77, 1, !dbg !8921
  %idxprom87 = sext i32 %add86 to i64, !dbg !8919
  %arrayidx88 = getelementptr inbounds float, float* %76, i64 %idxprom87, !dbg !8919
  store float 0.000000e+00, float* %arrayidx88, align 4, !dbg !8922
  %78 = load float*, float** %out.addr, align 8, !dbg !8923
  %79 = load i32, i32* %index, align 4, !dbg !8924
  %add89 = add nsw i32 %79, 2, !dbg !8925
  %idxprom90 = sext i32 %add89 to i64, !dbg !8923
  %arrayidx91 = getelementptr inbounds float, float* %78, i64 %idxprom90, !dbg !8923
  store float 0.000000e+00, float* %arrayidx91, align 4, !dbg !8926
  %80 = load float*, float** %out.addr, align 8, !dbg !8927
  %81 = load i32, i32* %index, align 4, !dbg !8928
  %add92 = add nsw i32 %81, 3, !dbg !8929
  %idxprom93 = sext i32 %add92 to i64, !dbg !8927
  %arrayidx94 = getelementptr inbounds float, float* %80, i64 %idxprom93, !dbg !8927
  store float 0.000000e+00, float* %arrayidx94, align 4, !dbg !8930
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end78
  br label %for.inc, !dbg !8931

for.inc:                                          ; preds = %if.end
  %82 = load i32, i32* %x, align 4, !dbg !8932
  %inc = add nsw i32 %82, 1, !dbg !8932
  store i32 %inc, i32* %x, align 4, !dbg !8932
  br label %for.cond1, !dbg !8933, !llvm.loop !8934

for.end:                                          ; preds = %for.cond1
  br label %for.inc95, !dbg !8936

for.inc95:                                        ; preds = %for.end
  %83 = load i32, i32* %y, align 4, !dbg !8937
  %inc96 = add nsw i32 %83, 1, !dbg !8937
  store i32 %inc96, i32* %y, align 4, !dbg !8937
  br label %for.cond, !dbg !8938, !llvm.loop !8939

for.end97:                                        ; preds = %for.cond
  ret void, !dbg !8941
}

; Function Attrs: noinline nounwind uwtable
define internal void @RVBlurBitmap2_float(float* %map, i32 %width, i32 %height, float %blur, i32 %quality) #0 !dbg !8942 {
entry:
  %map.addr = alloca float*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %blur.addr = alloca float, align 4
  %quality.addr = alloca i32, align 4
  %temp = alloca float*, align 8
  %swap = alloca float*, align 8
  %filter = alloca float*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %i = alloca i32, align 4
  %fx = alloca i32, align 4
  %fy = alloca i32, align 4
  %index = alloca i32, align 4
  %ix = alloca i32, align 4
  %halfWidth = alloca i32, align 4
  %fval = alloca float, align 4
  %k = alloca float, align 4
  %curColor = alloca [3 x float], align 4
  %curColor2 = alloca [3 x float], align 4
  %weight = alloca float, align 4
  store float* %map, float** %map.addr, align 8
  call void @llvm.dbg.declare(metadata float** %map.addr, metadata !8945, metadata !DIExpression()), !dbg !8946
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !8947, metadata !DIExpression()), !dbg !8948
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !8949, metadata !DIExpression()), !dbg !8950
  store float %blur, float* %blur.addr, align 4
  call void @llvm.dbg.declare(metadata float* %blur.addr, metadata !8951, metadata !DIExpression()), !dbg !8952
  store i32 %quality, i32* %quality.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quality.addr, metadata !8953, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.declare(metadata float** %temp, metadata !8955, metadata !DIExpression()), !dbg !8956
  store float* null, float** %temp, align 8, !dbg !8956
  call void @llvm.dbg.declare(metadata float** %swap, metadata !8957, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.declare(metadata float** %filter, metadata !8959, metadata !DIExpression()), !dbg !8960
  store float* null, float** %filter, align 8, !dbg !8960
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8961, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8963, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8965, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.declare(metadata i32* %fx, metadata !8967, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.declare(metadata i32* %fy, metadata !8969, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8971, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.declare(metadata i32* %halfWidth, metadata !8975, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.declare(metadata float* %fval, metadata !8977, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.declare(metadata float* %k, metadata !8979, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.declare(metadata [3 x float]* %curColor, metadata !8981, metadata !DIExpression()), !dbg !8982
  call void @llvm.dbg.declare(metadata [3 x float]* %curColor2, metadata !8983, metadata !DIExpression()), !dbg !8984
  call void @llvm.dbg.declare(metadata float* %weight, metadata !8985, metadata !DIExpression()), !dbg !8986
  store float 0.000000e+00, float* %weight, align 4, !dbg !8986
  %0 = load float, float* %blur.addr, align 4, !dbg !8987
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !8989
  br i1 %cmp, label %if.then, label %if.end, !dbg !8990

if.then:                                          ; preds = %entry
  br label %return, !dbg !8991

if.end:                                           ; preds = %entry
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8992
  %2 = load i32, i32* %width.addr, align 4, !dbg !8993
  %3 = load i32, i32* %height.addr, align 4, !dbg !8994
  %mul = mul nsw i32 %2, %3, !dbg !8995
  %mul1 = mul nsw i32 %mul, 4, !dbg !8996
  %conv = sext i32 %mul1 to i64, !dbg !8993
  %mul2 = mul i64 %conv, 4, !dbg !8997
  %call = call i8* %1(i64 %mul2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)), !dbg !8992
  %4 = bitcast i8* %call to float*, !dbg !8992
  store float* %4, float** %temp, align 8, !dbg !8998
  %5 = load float*, float** %temp, align 8, !dbg !8999
  %tobool = icmp ne float* %5, null, !dbg !8999
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !9001

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !9002

if.end4:                                          ; preds = %if.end
  %6 = load i32, i32* %quality.addr, align 4, !dbg !9003
  %add = add nsw i32 %6, 1, !dbg !9004
  %conv5 = sitofp i32 %add to float, !dbg !9005
  %7 = load float, float* %blur.addr, align 4, !dbg !9006
  %mul6 = fmul float %conv5, %7, !dbg !9007
  %conv7 = fptosi float %mul6 to i32, !dbg !9008
  store i32 %conv7, i32* %halfWidth, align 4, !dbg !9009
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9010
  %9 = load i32, i32* %halfWidth, align 4, !dbg !9011
  %conv8 = sext i32 %9 to i64, !dbg !9011
  %mul9 = mul i64 4, %conv8, !dbg !9012
  %mul10 = mul i64 %mul9, 2, !dbg !9013
  %call11 = call i8* %8(i64 %mul10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)), !dbg !9010
  %10 = bitcast i8* %call11 to float*, !dbg !9014
  store float* %10, float** %filter, align 8, !dbg !9015
  %11 = load float*, float** %filter, align 8, !dbg !9016
  %tobool12 = icmp ne float* %11, null, !dbg !9016
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !9018

if.then13:                                        ; preds = %if.end4
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9019
  %13 = load float*, float** %temp, align 8, !dbg !9021
  %14 = bitcast float* %13 to i8*, !dbg !9021
  call void %12(i8* %14), !dbg !9019
  br label %return, !dbg !9022

if.end14:                                         ; preds = %if.end4
  %15 = load float, float* %blur.addr, align 4, !dbg !9023
  %mul15 = fmul float 0x401921FB60000000, %15, !dbg !9024
  %16 = load float, float* %blur.addr, align 4, !dbg !9025
  %mul16 = fmul float %mul15, %16, !dbg !9026
  %div = fdiv float -1.000000e+00, %mul16, !dbg !9027
  store float %div, float* %k, align 4, !dbg !9028
  store i32 0, i32* %ix, align 4, !dbg !9029
  br label %for.cond, !dbg !9031

for.cond:                                         ; preds = %for.inc, %if.end14
  %17 = load i32, i32* %ix, align 4, !dbg !9032
  %18 = load i32, i32* %halfWidth, align 4, !dbg !9034
  %cmp17 = icmp slt i32 %17, %18, !dbg !9035
  br i1 %cmp17, label %for.body, label %for.end, !dbg !9036

for.body:                                         ; preds = %for.cond
  %19 = load float, float* %k, align 4, !dbg !9037
  %20 = load i32, i32* %ix, align 4, !dbg !9039
  %21 = load i32, i32* %ix, align 4, !dbg !9040
  %mul19 = mul nsw i32 %20, %21, !dbg !9041
  %conv20 = sitofp i32 %mul19 to float, !dbg !9042
  %mul21 = fmul float %19, %conv20, !dbg !9043
  %conv22 = fpext float %mul21 to double, !dbg !9037
  %call23 = call double @exp(double %conv22) #6, !dbg !9044
  %conv24 = fptrunc double %call23 to float, !dbg !9045
  store float %conv24, float* %weight, align 4, !dbg !9046
  %22 = load float, float* %weight, align 4, !dbg !9047
  %23 = load float*, float** %filter, align 8, !dbg !9048
  %24 = load i32, i32* %halfWidth, align 4, !dbg !9049
  %25 = load i32, i32* %ix, align 4, !dbg !9050
  %sub = sub nsw i32 %24, %25, !dbg !9051
  %idxprom = sext i32 %sub to i64, !dbg !9048
  %arrayidx = getelementptr inbounds float, float* %23, i64 %idxprom, !dbg !9048
  store float %22, float* %arrayidx, align 4, !dbg !9052
  %26 = load float, float* %weight, align 4, !dbg !9053
  %27 = load float*, float** %filter, align 8, !dbg !9054
  %28 = load i32, i32* %halfWidth, align 4, !dbg !9055
  %29 = load i32, i32* %ix, align 4, !dbg !9056
  %add25 = add nsw i32 %28, %29, !dbg !9057
  %idxprom26 = sext i32 %add25 to i64, !dbg !9054
  %arrayidx27 = getelementptr inbounds float, float* %27, i64 %idxprom26, !dbg !9054
  store float %26, float* %arrayidx27, align 4, !dbg !9058
  br label %for.inc, !dbg !9059

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %ix, align 4, !dbg !9060
  %inc = add nsw i32 %30, 1, !dbg !9060
  store i32 %inc, i32* %ix, align 4, !dbg !9060
  br label %for.cond, !dbg !9061, !llvm.loop !9062

for.end:                                          ; preds = %for.cond
  %31 = load float, float* %weight, align 4, !dbg !9064
  %32 = load float*, float** %filter, align 8, !dbg !9065
  %arrayidx28 = getelementptr inbounds float, float* %32, i64 0, !dbg !9065
  store float %31, float* %arrayidx28, align 4, !dbg !9066
  store float 0.000000e+00, float* %fval, align 4, !dbg !9067
  store i32 0, i32* %ix, align 4, !dbg !9068
  br label %for.cond29, !dbg !9070

for.cond29:                                       ; preds = %for.inc37, %for.end
  %33 = load i32, i32* %ix, align 4, !dbg !9071
  %34 = load i32, i32* %halfWidth, align 4, !dbg !9073
  %mul30 = mul nsw i32 %34, 2, !dbg !9074
  %cmp31 = icmp slt i32 %33, %mul30, !dbg !9075
  br i1 %cmp31, label %for.body33, label %for.end39, !dbg !9076

for.body33:                                       ; preds = %for.cond29
  %35 = load float*, float** %filter, align 8, !dbg !9077
  %36 = load i32, i32* %ix, align 4, !dbg !9078
  %idxprom34 = sext i32 %36 to i64, !dbg !9077
  %arrayidx35 = getelementptr inbounds float, float* %35, i64 %idxprom34, !dbg !9077
  %37 = load float, float* %arrayidx35, align 4, !dbg !9077
  %38 = load float, float* %fval, align 4, !dbg !9079
  %add36 = fadd float %38, %37, !dbg !9079
  store float %add36, float* %fval, align 4, !dbg !9079
  br label %for.inc37, !dbg !9080

for.inc37:                                        ; preds = %for.body33
  %39 = load i32, i32* %ix, align 4, !dbg !9081
  %inc38 = add nsw i32 %39, 1, !dbg !9081
  store i32 %inc38, i32* %ix, align 4, !dbg !9081
  br label %for.cond29, !dbg !9082, !llvm.loop !9083

for.end39:                                        ; preds = %for.cond29
  store i32 0, i32* %ix, align 4, !dbg !9085
  br label %for.cond40, !dbg !9087

for.cond40:                                       ; preds = %for.inc48, %for.end39
  %40 = load i32, i32* %ix, align 4, !dbg !9088
  %41 = load i32, i32* %halfWidth, align 4, !dbg !9090
  %mul41 = mul nsw i32 %41, 2, !dbg !9091
  %cmp42 = icmp slt i32 %40, %mul41, !dbg !9092
  br i1 %cmp42, label %for.body44, label %for.end50, !dbg !9093

for.body44:                                       ; preds = %for.cond40
  %42 = load float, float* %fval, align 4, !dbg !9094
  %43 = load float*, float** %filter, align 8, !dbg !9095
  %44 = load i32, i32* %ix, align 4, !dbg !9096
  %idxprom45 = sext i32 %44 to i64, !dbg !9095
  %arrayidx46 = getelementptr inbounds float, float* %43, i64 %idxprom45, !dbg !9095
  %45 = load float, float* %arrayidx46, align 4, !dbg !9097
  %div47 = fdiv float %45, %42, !dbg !9097
  store float %div47, float* %arrayidx46, align 4, !dbg !9097
  br label %for.inc48, !dbg !9095

for.inc48:                                        ; preds = %for.body44
  %46 = load i32, i32* %ix, align 4, !dbg !9098
  %inc49 = add nsw i32 %46, 1, !dbg !9098
  store i32 %inc49, i32* %ix, align 4, !dbg !9098
  br label %for.cond40, !dbg !9099, !llvm.loop !9100

for.end50:                                        ; preds = %for.cond40
  store i32 0, i32* %y, align 4, !dbg !9102
  br label %for.cond51, !dbg !9104

for.cond51:                                       ; preds = %for.inc264, %for.end50
  %47 = load i32, i32* %y, align 4, !dbg !9105
  %48 = load i32, i32* %height.addr, align 4, !dbg !9107
  %cmp52 = icmp slt i32 %47, %48, !dbg !9108
  br i1 %cmp52, label %for.body54, label %for.end266, !dbg !9109

for.body54:                                       ; preds = %for.cond51
  store i32 0, i32* %x, align 4, !dbg !9110
  br label %for.cond55, !dbg !9113

for.cond55:                                       ; preds = %for.inc195, %for.body54
  %49 = load i32, i32* %x, align 4, !dbg !9114
  %50 = load i32, i32* %halfWidth, align 4, !dbg !9116
  %cmp56 = icmp slt i32 %49, %50, !dbg !9117
  br i1 %cmp56, label %for.body58, label %for.end197, !dbg !9118

for.body58:                                       ; preds = %for.cond55
  %51 = load i32, i32* %x, align 4, !dbg !9119
  %52 = load i32, i32* %y, align 4, !dbg !9121
  %53 = load i32, i32* %width.addr, align 4, !dbg !9122
  %mul59 = mul nsw i32 %52, %53, !dbg !9123
  %add60 = add nsw i32 %51, %mul59, !dbg !9124
  %mul61 = mul nsw i32 %add60, 4, !dbg !9125
  store i32 %mul61, i32* %index, align 4, !dbg !9126
  store i32 0, i32* %fx, align 4, !dbg !9127
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9128
  store float 0.000000e+00, float* %arrayidx62, align 4, !dbg !9129
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9130
  store float 0.000000e+00, float* %arrayidx63, align 4, !dbg !9131
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9132
  store float 0.000000e+00, float* %arrayidx64, align 4, !dbg !9133
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 2, !dbg !9134
  store float 0.000000e+00, float* %arrayidx65, align 4, !dbg !9135
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 1, !dbg !9136
  store float 0.000000e+00, float* %arrayidx66, align 4, !dbg !9137
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 0, !dbg !9138
  store float 0.000000e+00, float* %arrayidx67, align 4, !dbg !9139
  %54 = load i32, i32* %x, align 4, !dbg !9140
  %55 = load i32, i32* %halfWidth, align 4, !dbg !9142
  %sub68 = sub nsw i32 %54, %55, !dbg !9143
  store i32 %sub68, i32* %i, align 4, !dbg !9144
  br label %for.cond69, !dbg !9145

for.cond69:                                       ; preds = %for.inc153, %for.body58
  %56 = load i32, i32* %i, align 4, !dbg !9146
  %57 = load i32, i32* %x, align 4, !dbg !9148
  %58 = load i32, i32* %halfWidth, align 4, !dbg !9149
  %add70 = add nsw i32 %57, %58, !dbg !9150
  %cmp71 = icmp slt i32 %56, %add70, !dbg !9151
  br i1 %cmp71, label %for.body73, label %for.end155, !dbg !9152

for.body73:                                       ; preds = %for.cond69
  %59 = load i32, i32* %i, align 4, !dbg !9153
  %cmp74 = icmp sge i32 %59, 0, !dbg !9156
  br i1 %cmp74, label %land.lhs.true, label %if.end151, !dbg !9157

land.lhs.true:                                    ; preds = %for.body73
  %60 = load i32, i32* %i, align 4, !dbg !9158
  %61 = load i32, i32* %width.addr, align 4, !dbg !9159
  %cmp76 = icmp slt i32 %60, %61, !dbg !9160
  br i1 %cmp76, label %if.then78, label %if.end151, !dbg !9161

if.then78:                                        ; preds = %land.lhs.true
  %62 = load float*, float** %map.addr, align 8, !dbg !9162
  %63 = load i32, i32* %i, align 4, !dbg !9164
  %64 = load i32, i32* %y, align 4, !dbg !9165
  %65 = load i32, i32* %width.addr, align 4, !dbg !9166
  %mul79 = mul nsw i32 %64, %65, !dbg !9167
  %add80 = add nsw i32 %63, %mul79, !dbg !9168
  %mul81 = mul nsw i32 %add80, 4, !dbg !9169
  %add82 = add nsw i32 %mul81, 0, !dbg !9170
  %idxprom83 = sext i32 %add82 to i64, !dbg !9162
  %arrayidx84 = getelementptr inbounds float, float* %62, i64 %idxprom83, !dbg !9162
  %66 = load float, float* %arrayidx84, align 4, !dbg !9162
  %67 = load float*, float** %filter, align 8, !dbg !9171
  %68 = load i32, i32* %fx, align 4, !dbg !9172
  %idxprom85 = sext i32 %68 to i64, !dbg !9171
  %arrayidx86 = getelementptr inbounds float, float* %67, i64 %idxprom85, !dbg !9171
  %69 = load float, float* %arrayidx86, align 4, !dbg !9171
  %mul87 = fmul float %66, %69, !dbg !9173
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9174
  %70 = load float, float* %arrayidx88, align 4, !dbg !9175
  %add89 = fadd float %70, %mul87, !dbg !9175
  store float %add89, float* %arrayidx88, align 4, !dbg !9175
  %71 = load float*, float** %map.addr, align 8, !dbg !9176
  %72 = load i32, i32* %i, align 4, !dbg !9177
  %73 = load i32, i32* %y, align 4, !dbg !9178
  %74 = load i32, i32* %width.addr, align 4, !dbg !9179
  %mul90 = mul nsw i32 %73, %74, !dbg !9180
  %add91 = add nsw i32 %72, %mul90, !dbg !9181
  %mul92 = mul nsw i32 %add91, 4, !dbg !9182
  %add93 = add nsw i32 %mul92, 1, !dbg !9183
  %idxprom94 = sext i32 %add93 to i64, !dbg !9176
  %arrayidx95 = getelementptr inbounds float, float* %71, i64 %idxprom94, !dbg !9176
  %75 = load float, float* %arrayidx95, align 4, !dbg !9176
  %76 = load float*, float** %filter, align 8, !dbg !9184
  %77 = load i32, i32* %fx, align 4, !dbg !9185
  %idxprom96 = sext i32 %77 to i64, !dbg !9184
  %arrayidx97 = getelementptr inbounds float, float* %76, i64 %idxprom96, !dbg !9184
  %78 = load float, float* %arrayidx97, align 4, !dbg !9184
  %mul98 = fmul float %75, %78, !dbg !9186
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9187
  %79 = load float, float* %arrayidx99, align 4, !dbg !9188
  %add100 = fadd float %79, %mul98, !dbg !9188
  store float %add100, float* %arrayidx99, align 4, !dbg !9188
  %80 = load float*, float** %map.addr, align 8, !dbg !9189
  %81 = load i32, i32* %i, align 4, !dbg !9190
  %82 = load i32, i32* %y, align 4, !dbg !9191
  %83 = load i32, i32* %width.addr, align 4, !dbg !9192
  %mul101 = mul nsw i32 %82, %83, !dbg !9193
  %add102 = add nsw i32 %81, %mul101, !dbg !9194
  %mul103 = mul nsw i32 %add102, 4, !dbg !9195
  %add104 = add nsw i32 %mul103, 2, !dbg !9196
  %idxprom105 = sext i32 %add104 to i64, !dbg !9189
  %arrayidx106 = getelementptr inbounds float, float* %80, i64 %idxprom105, !dbg !9189
  %84 = load float, float* %arrayidx106, align 4, !dbg !9189
  %85 = load float*, float** %filter, align 8, !dbg !9197
  %86 = load i32, i32* %fx, align 4, !dbg !9198
  %idxprom107 = sext i32 %86 to i64, !dbg !9197
  %arrayidx108 = getelementptr inbounds float, float* %85, i64 %idxprom107, !dbg !9197
  %87 = load float, float* %arrayidx108, align 4, !dbg !9197
  %mul109 = fmul float %84, %87, !dbg !9199
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9200
  %88 = load float, float* %arrayidx110, align 4, !dbg !9201
  %add111 = fadd float %88, %mul109, !dbg !9201
  store float %add111, float* %arrayidx110, align 4, !dbg !9201
  %89 = load float*, float** %map.addr, align 8, !dbg !9202
  %90 = load i32, i32* %width.addr, align 4, !dbg !9203
  %sub112 = sub nsw i32 %90, 1, !dbg !9204
  %91 = load i32, i32* %i, align 4, !dbg !9205
  %sub113 = sub nsw i32 %sub112, %91, !dbg !9206
  %92 = load i32, i32* %y, align 4, !dbg !9207
  %93 = load i32, i32* %width.addr, align 4, !dbg !9208
  %mul114 = mul nsw i32 %92, %93, !dbg !9209
  %add115 = add nsw i32 %sub113, %mul114, !dbg !9210
  %mul116 = mul nsw i32 %add115, 4, !dbg !9211
  %add117 = add nsw i32 %mul116, 0, !dbg !9212
  %idxprom118 = sext i32 %add117 to i64, !dbg !9202
  %arrayidx119 = getelementptr inbounds float, float* %89, i64 %idxprom118, !dbg !9202
  %94 = load float, float* %arrayidx119, align 4, !dbg !9202
  %95 = load float*, float** %filter, align 8, !dbg !9213
  %96 = load i32, i32* %fx, align 4, !dbg !9214
  %idxprom120 = sext i32 %96 to i64, !dbg !9213
  %arrayidx121 = getelementptr inbounds float, float* %95, i64 %idxprom120, !dbg !9213
  %97 = load float, float* %arrayidx121, align 4, !dbg !9213
  %mul122 = fmul float %94, %97, !dbg !9215
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 0, !dbg !9216
  %98 = load float, float* %arrayidx123, align 4, !dbg !9217
  %add124 = fadd float %98, %mul122, !dbg !9217
  store float %add124, float* %arrayidx123, align 4, !dbg !9217
  %99 = load float*, float** %map.addr, align 8, !dbg !9218
  %100 = load i32, i32* %width.addr, align 4, !dbg !9219
  %sub125 = sub nsw i32 %100, 1, !dbg !9220
  %101 = load i32, i32* %i, align 4, !dbg !9221
  %sub126 = sub nsw i32 %sub125, %101, !dbg !9222
  %102 = load i32, i32* %y, align 4, !dbg !9223
  %103 = load i32, i32* %width.addr, align 4, !dbg !9224
  %mul127 = mul nsw i32 %102, %103, !dbg !9225
  %add128 = add nsw i32 %sub126, %mul127, !dbg !9226
  %mul129 = mul nsw i32 %add128, 4, !dbg !9227
  %add130 = add nsw i32 %mul129, 1, !dbg !9228
  %idxprom131 = sext i32 %add130 to i64, !dbg !9218
  %arrayidx132 = getelementptr inbounds float, float* %99, i64 %idxprom131, !dbg !9218
  %104 = load float, float* %arrayidx132, align 4, !dbg !9218
  %105 = load float*, float** %filter, align 8, !dbg !9229
  %106 = load i32, i32* %fx, align 4, !dbg !9230
  %idxprom133 = sext i32 %106 to i64, !dbg !9229
  %arrayidx134 = getelementptr inbounds float, float* %105, i64 %idxprom133, !dbg !9229
  %107 = load float, float* %arrayidx134, align 4, !dbg !9229
  %mul135 = fmul float %104, %107, !dbg !9231
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 1, !dbg !9232
  %108 = load float, float* %arrayidx136, align 4, !dbg !9233
  %add137 = fadd float %108, %mul135, !dbg !9233
  store float %add137, float* %arrayidx136, align 4, !dbg !9233
  %109 = load float*, float** %map.addr, align 8, !dbg !9234
  %110 = load i32, i32* %width.addr, align 4, !dbg !9235
  %sub138 = sub nsw i32 %110, 1, !dbg !9236
  %111 = load i32, i32* %i, align 4, !dbg !9237
  %sub139 = sub nsw i32 %sub138, %111, !dbg !9238
  %112 = load i32, i32* %y, align 4, !dbg !9239
  %113 = load i32, i32* %width.addr, align 4, !dbg !9240
  %mul140 = mul nsw i32 %112, %113, !dbg !9241
  %add141 = add nsw i32 %sub139, %mul140, !dbg !9242
  %mul142 = mul nsw i32 %add141, 4, !dbg !9243
  %add143 = add nsw i32 %mul142, 2, !dbg !9244
  %idxprom144 = sext i32 %add143 to i64, !dbg !9234
  %arrayidx145 = getelementptr inbounds float, float* %109, i64 %idxprom144, !dbg !9234
  %114 = load float, float* %arrayidx145, align 4, !dbg !9234
  %115 = load float*, float** %filter, align 8, !dbg !9245
  %116 = load i32, i32* %fx, align 4, !dbg !9246
  %idxprom146 = sext i32 %116 to i64, !dbg !9245
  %arrayidx147 = getelementptr inbounds float, float* %115, i64 %idxprom146, !dbg !9245
  %117 = load float, float* %arrayidx147, align 4, !dbg !9245
  %mul148 = fmul float %114, %117, !dbg !9247
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 2, !dbg !9248
  %118 = load float, float* %arrayidx149, align 4, !dbg !9249
  %add150 = fadd float %118, %mul148, !dbg !9249
  store float %add150, float* %arrayidx149, align 4, !dbg !9249
  br label %if.end151, !dbg !9250

if.end151:                                        ; preds = %if.then78, %land.lhs.true, %for.body73
  %119 = load i32, i32* %fx, align 4, !dbg !9251
  %inc152 = add nsw i32 %119, 1, !dbg !9251
  store i32 %inc152, i32* %fx, align 4, !dbg !9251
  br label %for.inc153, !dbg !9252

for.inc153:                                       ; preds = %if.end151
  %120 = load i32, i32* %i, align 4, !dbg !9253
  %inc154 = add nsw i32 %120, 1, !dbg !9253
  store i32 %inc154, i32* %i, align 4, !dbg !9253
  br label %for.cond69, !dbg !9254, !llvm.loop !9255

for.end155:                                       ; preds = %for.cond69
  %arrayidx156 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9257
  %121 = load float, float* %arrayidx156, align 4, !dbg !9257
  %122 = load float*, float** %temp, align 8, !dbg !9258
  %123 = load i32, i32* %index, align 4, !dbg !9259
  %add157 = add nsw i32 %123, 0, !dbg !9260
  %idxprom158 = sext i32 %add157 to i64, !dbg !9258
  %arrayidx159 = getelementptr inbounds float, float* %122, i64 %idxprom158, !dbg !9258
  store float %121, float* %arrayidx159, align 4, !dbg !9261
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9262
  %124 = load float, float* %arrayidx160, align 4, !dbg !9262
  %125 = load float*, float** %temp, align 8, !dbg !9263
  %126 = load i32, i32* %index, align 4, !dbg !9264
  %add161 = add nsw i32 %126, 1, !dbg !9265
  %idxprom162 = sext i32 %add161 to i64, !dbg !9263
  %arrayidx163 = getelementptr inbounds float, float* %125, i64 %idxprom162, !dbg !9263
  store float %124, float* %arrayidx163, align 4, !dbg !9266
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9267
  %127 = load float, float* %arrayidx164, align 4, !dbg !9267
  %128 = load float*, float** %temp, align 8, !dbg !9268
  %129 = load i32, i32* %index, align 4, !dbg !9269
  %add165 = add nsw i32 %129, 2, !dbg !9270
  %idxprom166 = sext i32 %add165 to i64, !dbg !9268
  %arrayidx167 = getelementptr inbounds float, float* %128, i64 %idxprom166, !dbg !9268
  store float %127, float* %arrayidx167, align 4, !dbg !9271
  %arrayidx168 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 0, !dbg !9272
  %130 = load float, float* %arrayidx168, align 4, !dbg !9272
  %131 = load float*, float** %temp, align 8, !dbg !9273
  %132 = load i32, i32* %width.addr, align 4, !dbg !9274
  %sub169 = sub nsw i32 %132, 1, !dbg !9275
  %133 = load i32, i32* %x, align 4, !dbg !9276
  %sub170 = sub nsw i32 %sub169, %133, !dbg !9277
  %134 = load i32, i32* %y, align 4, !dbg !9278
  %135 = load i32, i32* %width.addr, align 4, !dbg !9279
  %mul171 = mul nsw i32 %134, %135, !dbg !9280
  %add172 = add nsw i32 %sub170, %mul171, !dbg !9281
  %mul173 = mul nsw i32 %add172, 4, !dbg !9282
  %add174 = add nsw i32 %mul173, 0, !dbg !9283
  %idxprom175 = sext i32 %add174 to i64, !dbg !9273
  %arrayidx176 = getelementptr inbounds float, float* %131, i64 %idxprom175, !dbg !9273
  store float %130, float* %arrayidx176, align 4, !dbg !9284
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 1, !dbg !9285
  %136 = load float, float* %arrayidx177, align 4, !dbg !9285
  %137 = load float*, float** %temp, align 8, !dbg !9286
  %138 = load i32, i32* %width.addr, align 4, !dbg !9287
  %sub178 = sub nsw i32 %138, 1, !dbg !9288
  %139 = load i32, i32* %x, align 4, !dbg !9289
  %sub179 = sub nsw i32 %sub178, %139, !dbg !9290
  %140 = load i32, i32* %y, align 4, !dbg !9291
  %141 = load i32, i32* %width.addr, align 4, !dbg !9292
  %mul180 = mul nsw i32 %140, %141, !dbg !9293
  %add181 = add nsw i32 %sub179, %mul180, !dbg !9294
  %mul182 = mul nsw i32 %add181, 4, !dbg !9295
  %add183 = add nsw i32 %mul182, 1, !dbg !9296
  %idxprom184 = sext i32 %add183 to i64, !dbg !9286
  %arrayidx185 = getelementptr inbounds float, float* %137, i64 %idxprom184, !dbg !9286
  store float %136, float* %arrayidx185, align 4, !dbg !9297
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 2, !dbg !9298
  %142 = load float, float* %arrayidx186, align 4, !dbg !9298
  %143 = load float*, float** %temp, align 8, !dbg !9299
  %144 = load i32, i32* %width.addr, align 4, !dbg !9300
  %sub187 = sub nsw i32 %144, 1, !dbg !9301
  %145 = load i32, i32* %x, align 4, !dbg !9302
  %sub188 = sub nsw i32 %sub187, %145, !dbg !9303
  %146 = load i32, i32* %y, align 4, !dbg !9304
  %147 = load i32, i32* %width.addr, align 4, !dbg !9305
  %mul189 = mul nsw i32 %146, %147, !dbg !9306
  %add190 = add nsw i32 %sub188, %mul189, !dbg !9307
  %mul191 = mul nsw i32 %add190, 4, !dbg !9308
  %add192 = add nsw i32 %mul191, 2, !dbg !9309
  %idxprom193 = sext i32 %add192 to i64, !dbg !9299
  %arrayidx194 = getelementptr inbounds float, float* %143, i64 %idxprom193, !dbg !9299
  store float %142, float* %arrayidx194, align 4, !dbg !9310
  br label %for.inc195, !dbg !9311

for.inc195:                                       ; preds = %for.end155
  %148 = load i32, i32* %x, align 4, !dbg !9312
  %inc196 = add nsw i32 %148, 1, !dbg !9312
  store i32 %inc196, i32* %x, align 4, !dbg !9312
  br label %for.cond55, !dbg !9313, !llvm.loop !9314

for.end197:                                       ; preds = %for.cond55
  %149 = load i32, i32* %halfWidth, align 4, !dbg !9316
  store i32 %149, i32* %x, align 4, !dbg !9318
  br label %for.cond198, !dbg !9319

for.cond198:                                      ; preds = %for.inc261, %for.end197
  %150 = load i32, i32* %x, align 4, !dbg !9320
  %151 = load i32, i32* %width.addr, align 4, !dbg !9322
  %152 = load i32, i32* %halfWidth, align 4, !dbg !9323
  %sub199 = sub nsw i32 %151, %152, !dbg !9324
  %cmp200 = icmp slt i32 %150, %sub199, !dbg !9325
  br i1 %cmp200, label %for.body202, label %for.end263, !dbg !9326

for.body202:                                      ; preds = %for.cond198
  %153 = load i32, i32* %x, align 4, !dbg !9327
  %154 = load i32, i32* %y, align 4, !dbg !9329
  %155 = load i32, i32* %width.addr, align 4, !dbg !9330
  %mul203 = mul nsw i32 %154, %155, !dbg !9331
  %add204 = add nsw i32 %153, %mul203, !dbg !9332
  %mul205 = mul nsw i32 %add204, 4, !dbg !9333
  store i32 %mul205, i32* %index, align 4, !dbg !9334
  store i32 0, i32* %fx, align 4, !dbg !9335
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9336
  call void @zero_v3(float* %arraydecay), !dbg !9337
  %156 = load i32, i32* %x, align 4, !dbg !9338
  %157 = load i32, i32* %halfWidth, align 4, !dbg !9340
  %sub206 = sub nsw i32 %156, %157, !dbg !9341
  store i32 %sub206, i32* %i, align 4, !dbg !9342
  br label %for.cond207, !dbg !9343

for.cond207:                                      ; preds = %for.inc246, %for.body202
  %158 = load i32, i32* %i, align 4, !dbg !9344
  %159 = load i32, i32* %x, align 4, !dbg !9346
  %160 = load i32, i32* %halfWidth, align 4, !dbg !9347
  %add208 = add nsw i32 %159, %160, !dbg !9348
  %cmp209 = icmp slt i32 %158, %add208, !dbg !9349
  br i1 %cmp209, label %for.body211, label %for.end248, !dbg !9350

for.body211:                                      ; preds = %for.cond207
  %161 = load float*, float** %map.addr, align 8, !dbg !9351
  %162 = load i32, i32* %i, align 4, !dbg !9353
  %163 = load i32, i32* %y, align 4, !dbg !9354
  %164 = load i32, i32* %width.addr, align 4, !dbg !9355
  %mul212 = mul nsw i32 %163, %164, !dbg !9356
  %add213 = add nsw i32 %162, %mul212, !dbg !9357
  %mul214 = mul nsw i32 %add213, 4, !dbg !9358
  %add215 = add nsw i32 %mul214, 0, !dbg !9359
  %idxprom216 = sext i32 %add215 to i64, !dbg !9351
  %arrayidx217 = getelementptr inbounds float, float* %161, i64 %idxprom216, !dbg !9351
  %165 = load float, float* %arrayidx217, align 4, !dbg !9351
  %166 = load float*, float** %filter, align 8, !dbg !9360
  %167 = load i32, i32* %fx, align 4, !dbg !9361
  %idxprom218 = sext i32 %167 to i64, !dbg !9360
  %arrayidx219 = getelementptr inbounds float, float* %166, i64 %idxprom218, !dbg !9360
  %168 = load float, float* %arrayidx219, align 4, !dbg !9360
  %mul220 = fmul float %165, %168, !dbg !9362
  %arrayidx221 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9363
  %169 = load float, float* %arrayidx221, align 4, !dbg !9364
  %add222 = fadd float %169, %mul220, !dbg !9364
  store float %add222, float* %arrayidx221, align 4, !dbg !9364
  %170 = load float*, float** %map.addr, align 8, !dbg !9365
  %171 = load i32, i32* %i, align 4, !dbg !9366
  %172 = load i32, i32* %y, align 4, !dbg !9367
  %173 = load i32, i32* %width.addr, align 4, !dbg !9368
  %mul223 = mul nsw i32 %172, %173, !dbg !9369
  %add224 = add nsw i32 %171, %mul223, !dbg !9370
  %mul225 = mul nsw i32 %add224, 4, !dbg !9371
  %add226 = add nsw i32 %mul225, 1, !dbg !9372
  %idxprom227 = sext i32 %add226 to i64, !dbg !9365
  %arrayidx228 = getelementptr inbounds float, float* %170, i64 %idxprom227, !dbg !9365
  %174 = load float, float* %arrayidx228, align 4, !dbg !9365
  %175 = load float*, float** %filter, align 8, !dbg !9373
  %176 = load i32, i32* %fx, align 4, !dbg !9374
  %idxprom229 = sext i32 %176 to i64, !dbg !9373
  %arrayidx230 = getelementptr inbounds float, float* %175, i64 %idxprom229, !dbg !9373
  %177 = load float, float* %arrayidx230, align 4, !dbg !9373
  %mul231 = fmul float %174, %177, !dbg !9375
  %arrayidx232 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9376
  %178 = load float, float* %arrayidx232, align 4, !dbg !9377
  %add233 = fadd float %178, %mul231, !dbg !9377
  store float %add233, float* %arrayidx232, align 4, !dbg !9377
  %179 = load float*, float** %map.addr, align 8, !dbg !9378
  %180 = load i32, i32* %i, align 4, !dbg !9379
  %181 = load i32, i32* %y, align 4, !dbg !9380
  %182 = load i32, i32* %width.addr, align 4, !dbg !9381
  %mul234 = mul nsw i32 %181, %182, !dbg !9382
  %add235 = add nsw i32 %180, %mul234, !dbg !9383
  %mul236 = mul nsw i32 %add235, 4, !dbg !9384
  %add237 = add nsw i32 %mul236, 2, !dbg !9385
  %idxprom238 = sext i32 %add237 to i64, !dbg !9378
  %arrayidx239 = getelementptr inbounds float, float* %179, i64 %idxprom238, !dbg !9378
  %183 = load float, float* %arrayidx239, align 4, !dbg !9378
  %184 = load float*, float** %filter, align 8, !dbg !9386
  %185 = load i32, i32* %fx, align 4, !dbg !9387
  %idxprom240 = sext i32 %185 to i64, !dbg !9386
  %arrayidx241 = getelementptr inbounds float, float* %184, i64 %idxprom240, !dbg !9386
  %186 = load float, float* %arrayidx241, align 4, !dbg !9386
  %mul242 = fmul float %183, %186, !dbg !9388
  %arrayidx243 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9389
  %187 = load float, float* %arrayidx243, align 4, !dbg !9390
  %add244 = fadd float %187, %mul242, !dbg !9390
  store float %add244, float* %arrayidx243, align 4, !dbg !9390
  %188 = load i32, i32* %fx, align 4, !dbg !9391
  %inc245 = add nsw i32 %188, 1, !dbg !9391
  store i32 %inc245, i32* %fx, align 4, !dbg !9391
  br label %for.inc246, !dbg !9392

for.inc246:                                       ; preds = %for.body211
  %189 = load i32, i32* %i, align 4, !dbg !9393
  %inc247 = add nsw i32 %189, 1, !dbg !9393
  store i32 %inc247, i32* %i, align 4, !dbg !9393
  br label %for.cond207, !dbg !9394, !llvm.loop !9395

for.end248:                                       ; preds = %for.cond207
  %arrayidx249 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9397
  %190 = load float, float* %arrayidx249, align 4, !dbg !9397
  %191 = load float*, float** %temp, align 8, !dbg !9398
  %192 = load i32, i32* %index, align 4, !dbg !9399
  %add250 = add nsw i32 %192, 0, !dbg !9400
  %idxprom251 = sext i32 %add250 to i64, !dbg !9398
  %arrayidx252 = getelementptr inbounds float, float* %191, i64 %idxprom251, !dbg !9398
  store float %190, float* %arrayidx252, align 4, !dbg !9401
  %arrayidx253 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9402
  %193 = load float, float* %arrayidx253, align 4, !dbg !9402
  %194 = load float*, float** %temp, align 8, !dbg !9403
  %195 = load i32, i32* %index, align 4, !dbg !9404
  %add254 = add nsw i32 %195, 1, !dbg !9405
  %idxprom255 = sext i32 %add254 to i64, !dbg !9403
  %arrayidx256 = getelementptr inbounds float, float* %194, i64 %idxprom255, !dbg !9403
  store float %193, float* %arrayidx256, align 4, !dbg !9406
  %arrayidx257 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9407
  %196 = load float, float* %arrayidx257, align 4, !dbg !9407
  %197 = load float*, float** %temp, align 8, !dbg !9408
  %198 = load i32, i32* %index, align 4, !dbg !9409
  %add258 = add nsw i32 %198, 2, !dbg !9410
  %idxprom259 = sext i32 %add258 to i64, !dbg !9408
  %arrayidx260 = getelementptr inbounds float, float* %197, i64 %idxprom259, !dbg !9408
  store float %196, float* %arrayidx260, align 4, !dbg !9411
  br label %for.inc261, !dbg !9412

for.inc261:                                       ; preds = %for.end248
  %199 = load i32, i32* %x, align 4, !dbg !9413
  %inc262 = add nsw i32 %199, 1, !dbg !9413
  store i32 %inc262, i32* %x, align 4, !dbg !9413
  br label %for.cond198, !dbg !9414, !llvm.loop !9415

for.end263:                                       ; preds = %for.cond198
  br label %for.inc264, !dbg !9417

for.inc264:                                       ; preds = %for.end263
  %200 = load i32, i32* %y, align 4, !dbg !9418
  %inc265 = add nsw i32 %200, 1, !dbg !9418
  store i32 %inc265, i32* %y, align 4, !dbg !9418
  br label %for.cond51, !dbg !9419, !llvm.loop !9420

for.end266:                                       ; preds = %for.cond51
  %201 = load float*, float** %temp, align 8, !dbg !9422
  store float* %201, float** %swap, align 8, !dbg !9423
  %202 = load float*, float** %map.addr, align 8, !dbg !9424
  store float* %202, float** %temp, align 8, !dbg !9425
  %203 = load float*, float** %swap, align 8, !dbg !9426
  store float* %203, float** %map.addr, align 8, !dbg !9427
  store i32 0, i32* %x, align 4, !dbg !9428
  br label %for.cond267, !dbg !9430

for.cond267:                                      ; preds = %for.inc478, %for.end266
  %204 = load i32, i32* %x, align 4, !dbg !9431
  %205 = load i32, i32* %width.addr, align 4, !dbg !9433
  %cmp268 = icmp slt i32 %204, %205, !dbg !9434
  br i1 %cmp268, label %for.body270, label %for.end480, !dbg !9435

for.body270:                                      ; preds = %for.cond267
  store i32 0, i32* %y, align 4, !dbg !9436
  br label %for.cond271, !dbg !9439

for.cond271:                                      ; preds = %for.inc408, %for.body270
  %206 = load i32, i32* %y, align 4, !dbg !9440
  %207 = load i32, i32* %halfWidth, align 4, !dbg !9442
  %cmp272 = icmp slt i32 %206, %207, !dbg !9443
  br i1 %cmp272, label %for.body274, label %for.end410, !dbg !9444

for.body274:                                      ; preds = %for.cond271
  %208 = load i32, i32* %x, align 4, !dbg !9445
  %209 = load i32, i32* %y, align 4, !dbg !9447
  %210 = load i32, i32* %width.addr, align 4, !dbg !9448
  %mul275 = mul nsw i32 %209, %210, !dbg !9449
  %add276 = add nsw i32 %208, %mul275, !dbg !9450
  %mul277 = mul nsw i32 %add276, 4, !dbg !9451
  store i32 %mul277, i32* %index, align 4, !dbg !9452
  store i32 0, i32* %fy, align 4, !dbg !9453
  %arraydecay278 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9454
  call void @zero_v3(float* %arraydecay278), !dbg !9455
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 0, !dbg !9456
  call void @zero_v3(float* %arraydecay279), !dbg !9457
  %211 = load i32, i32* %y, align 4, !dbg !9458
  %212 = load i32, i32* %halfWidth, align 4, !dbg !9460
  %sub280 = sub nsw i32 %211, %212, !dbg !9461
  store i32 %sub280, i32* %i, align 4, !dbg !9462
  br label %for.cond281, !dbg !9463

for.cond281:                                      ; preds = %for.inc366, %for.body274
  %213 = load i32, i32* %i, align 4, !dbg !9464
  %214 = load i32, i32* %y, align 4, !dbg !9466
  %215 = load i32, i32* %halfWidth, align 4, !dbg !9467
  %add282 = add nsw i32 %214, %215, !dbg !9468
  %cmp283 = icmp slt i32 %213, %add282, !dbg !9469
  br i1 %cmp283, label %for.body285, label %for.end368, !dbg !9470

for.body285:                                      ; preds = %for.cond281
  %216 = load i32, i32* %i, align 4, !dbg !9471
  %cmp286 = icmp sge i32 %216, 0, !dbg !9474
  br i1 %cmp286, label %land.lhs.true288, label %if.end364, !dbg !9475

land.lhs.true288:                                 ; preds = %for.body285
  %217 = load i32, i32* %i, align 4, !dbg !9476
  %218 = load i32, i32* %height.addr, align 4, !dbg !9477
  %cmp289 = icmp slt i32 %217, %218, !dbg !9478
  br i1 %cmp289, label %if.then291, label %if.end364, !dbg !9479

if.then291:                                       ; preds = %land.lhs.true288
  %219 = load float*, float** %map.addr, align 8, !dbg !9480
  %220 = load i32, i32* %x, align 4, !dbg !9482
  %221 = load i32, i32* %i, align 4, !dbg !9483
  %222 = load i32, i32* %width.addr, align 4, !dbg !9484
  %mul292 = mul nsw i32 %221, %222, !dbg !9485
  %add293 = add nsw i32 %220, %mul292, !dbg !9486
  %mul294 = mul nsw i32 %add293, 4, !dbg !9487
  %add295 = add nsw i32 %mul294, 0, !dbg !9488
  %idxprom296 = sext i32 %add295 to i64, !dbg !9480
  %arrayidx297 = getelementptr inbounds float, float* %219, i64 %idxprom296, !dbg !9480
  %223 = load float, float* %arrayidx297, align 4, !dbg !9480
  %224 = load float*, float** %filter, align 8, !dbg !9489
  %225 = load i32, i32* %fy, align 4, !dbg !9490
  %idxprom298 = sext i32 %225 to i64, !dbg !9489
  %arrayidx299 = getelementptr inbounds float, float* %224, i64 %idxprom298, !dbg !9489
  %226 = load float, float* %arrayidx299, align 4, !dbg !9489
  %mul300 = fmul float %223, %226, !dbg !9491
  %arrayidx301 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9492
  %227 = load float, float* %arrayidx301, align 4, !dbg !9493
  %add302 = fadd float %227, %mul300, !dbg !9493
  store float %add302, float* %arrayidx301, align 4, !dbg !9493
  %228 = load float*, float** %map.addr, align 8, !dbg !9494
  %229 = load i32, i32* %x, align 4, !dbg !9495
  %230 = load i32, i32* %i, align 4, !dbg !9496
  %231 = load i32, i32* %width.addr, align 4, !dbg !9497
  %mul303 = mul nsw i32 %230, %231, !dbg !9498
  %add304 = add nsw i32 %229, %mul303, !dbg !9499
  %mul305 = mul nsw i32 %add304, 4, !dbg !9500
  %add306 = add nsw i32 %mul305, 1, !dbg !9501
  %idxprom307 = sext i32 %add306 to i64, !dbg !9494
  %arrayidx308 = getelementptr inbounds float, float* %228, i64 %idxprom307, !dbg !9494
  %232 = load float, float* %arrayidx308, align 4, !dbg !9494
  %233 = load float*, float** %filter, align 8, !dbg !9502
  %234 = load i32, i32* %fy, align 4, !dbg !9503
  %idxprom309 = sext i32 %234 to i64, !dbg !9502
  %arrayidx310 = getelementptr inbounds float, float* %233, i64 %idxprom309, !dbg !9502
  %235 = load float, float* %arrayidx310, align 4, !dbg !9502
  %mul311 = fmul float %232, %235, !dbg !9504
  %arrayidx312 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9505
  %236 = load float, float* %arrayidx312, align 4, !dbg !9506
  %add313 = fadd float %236, %mul311, !dbg !9506
  store float %add313, float* %arrayidx312, align 4, !dbg !9506
  %237 = load float*, float** %map.addr, align 8, !dbg !9507
  %238 = load i32, i32* %x, align 4, !dbg !9508
  %239 = load i32, i32* %i, align 4, !dbg !9509
  %240 = load i32, i32* %width.addr, align 4, !dbg !9510
  %mul314 = mul nsw i32 %239, %240, !dbg !9511
  %add315 = add nsw i32 %238, %mul314, !dbg !9512
  %mul316 = mul nsw i32 %add315, 4, !dbg !9513
  %add317 = add nsw i32 %mul316, 2, !dbg !9514
  %idxprom318 = sext i32 %add317 to i64, !dbg !9507
  %arrayidx319 = getelementptr inbounds float, float* %237, i64 %idxprom318, !dbg !9507
  %241 = load float, float* %arrayidx319, align 4, !dbg !9507
  %242 = load float*, float** %filter, align 8, !dbg !9515
  %243 = load i32, i32* %fy, align 4, !dbg !9516
  %idxprom320 = sext i32 %243 to i64, !dbg !9515
  %arrayidx321 = getelementptr inbounds float, float* %242, i64 %idxprom320, !dbg !9515
  %244 = load float, float* %arrayidx321, align 4, !dbg !9515
  %mul322 = fmul float %241, %244, !dbg !9517
  %arrayidx323 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9518
  %245 = load float, float* %arrayidx323, align 4, !dbg !9519
  %add324 = fadd float %245, %mul322, !dbg !9519
  store float %add324, float* %arrayidx323, align 4, !dbg !9519
  %246 = load float*, float** %map.addr, align 8, !dbg !9520
  %247 = load i32, i32* %x, align 4, !dbg !9521
  %248 = load i32, i32* %height.addr, align 4, !dbg !9522
  %sub325 = sub nsw i32 %248, 1, !dbg !9523
  %249 = load i32, i32* %i, align 4, !dbg !9524
  %sub326 = sub nsw i32 %sub325, %249, !dbg !9525
  %250 = load i32, i32* %width.addr, align 4, !dbg !9526
  %mul327 = mul nsw i32 %sub326, %250, !dbg !9527
  %add328 = add nsw i32 %247, %mul327, !dbg !9528
  %mul329 = mul nsw i32 %add328, 4, !dbg !9529
  %add330 = add nsw i32 %mul329, 0, !dbg !9530
  %idxprom331 = sext i32 %add330 to i64, !dbg !9520
  %arrayidx332 = getelementptr inbounds float, float* %246, i64 %idxprom331, !dbg !9520
  %251 = load float, float* %arrayidx332, align 4, !dbg !9520
  %252 = load float*, float** %filter, align 8, !dbg !9531
  %253 = load i32, i32* %fy, align 4, !dbg !9532
  %idxprom333 = sext i32 %253 to i64, !dbg !9531
  %arrayidx334 = getelementptr inbounds float, float* %252, i64 %idxprom333, !dbg !9531
  %254 = load float, float* %arrayidx334, align 4, !dbg !9531
  %mul335 = fmul float %251, %254, !dbg !9533
  %arrayidx336 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 0, !dbg !9534
  %255 = load float, float* %arrayidx336, align 4, !dbg !9535
  %add337 = fadd float %255, %mul335, !dbg !9535
  store float %add337, float* %arrayidx336, align 4, !dbg !9535
  %256 = load float*, float** %map.addr, align 8, !dbg !9536
  %257 = load i32, i32* %x, align 4, !dbg !9537
  %258 = load i32, i32* %height.addr, align 4, !dbg !9538
  %sub338 = sub nsw i32 %258, 1, !dbg !9539
  %259 = load i32, i32* %i, align 4, !dbg !9540
  %sub339 = sub nsw i32 %sub338, %259, !dbg !9541
  %260 = load i32, i32* %width.addr, align 4, !dbg !9542
  %mul340 = mul nsw i32 %sub339, %260, !dbg !9543
  %add341 = add nsw i32 %257, %mul340, !dbg !9544
  %mul342 = mul nsw i32 %add341, 4, !dbg !9545
  %add343 = add nsw i32 %mul342, 1, !dbg !9546
  %idxprom344 = sext i32 %add343 to i64, !dbg !9536
  %arrayidx345 = getelementptr inbounds float, float* %256, i64 %idxprom344, !dbg !9536
  %261 = load float, float* %arrayidx345, align 4, !dbg !9536
  %262 = load float*, float** %filter, align 8, !dbg !9547
  %263 = load i32, i32* %fy, align 4, !dbg !9548
  %idxprom346 = sext i32 %263 to i64, !dbg !9547
  %arrayidx347 = getelementptr inbounds float, float* %262, i64 %idxprom346, !dbg !9547
  %264 = load float, float* %arrayidx347, align 4, !dbg !9547
  %mul348 = fmul float %261, %264, !dbg !9549
  %arrayidx349 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 1, !dbg !9550
  %265 = load float, float* %arrayidx349, align 4, !dbg !9551
  %add350 = fadd float %265, %mul348, !dbg !9551
  store float %add350, float* %arrayidx349, align 4, !dbg !9551
  %266 = load float*, float** %map.addr, align 8, !dbg !9552
  %267 = load i32, i32* %x, align 4, !dbg !9553
  %268 = load i32, i32* %height.addr, align 4, !dbg !9554
  %sub351 = sub nsw i32 %268, 1, !dbg !9555
  %269 = load i32, i32* %i, align 4, !dbg !9556
  %sub352 = sub nsw i32 %sub351, %269, !dbg !9557
  %270 = load i32, i32* %width.addr, align 4, !dbg !9558
  %mul353 = mul nsw i32 %sub352, %270, !dbg !9559
  %add354 = add nsw i32 %267, %mul353, !dbg !9560
  %mul355 = mul nsw i32 %add354, 4, !dbg !9561
  %add356 = add nsw i32 %mul355, 2, !dbg !9562
  %idxprom357 = sext i32 %add356 to i64, !dbg !9552
  %arrayidx358 = getelementptr inbounds float, float* %266, i64 %idxprom357, !dbg !9552
  %271 = load float, float* %arrayidx358, align 4, !dbg !9552
  %272 = load float*, float** %filter, align 8, !dbg !9563
  %273 = load i32, i32* %fy, align 4, !dbg !9564
  %idxprom359 = sext i32 %273 to i64, !dbg !9563
  %arrayidx360 = getelementptr inbounds float, float* %272, i64 %idxprom359, !dbg !9563
  %274 = load float, float* %arrayidx360, align 4, !dbg !9563
  %mul361 = fmul float %271, %274, !dbg !9565
  %arrayidx362 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 2, !dbg !9566
  %275 = load float, float* %arrayidx362, align 4, !dbg !9567
  %add363 = fadd float %275, %mul361, !dbg !9567
  store float %add363, float* %arrayidx362, align 4, !dbg !9567
  br label %if.end364, !dbg !9568

if.end364:                                        ; preds = %if.then291, %land.lhs.true288, %for.body285
  %276 = load i32, i32* %fy, align 4, !dbg !9569
  %inc365 = add nsw i32 %276, 1, !dbg !9569
  store i32 %inc365, i32* %fy, align 4, !dbg !9569
  br label %for.inc366, !dbg !9570

for.inc366:                                       ; preds = %if.end364
  %277 = load i32, i32* %i, align 4, !dbg !9571
  %inc367 = add nsw i32 %277, 1, !dbg !9571
  store i32 %inc367, i32* %i, align 4, !dbg !9571
  br label %for.cond281, !dbg !9572, !llvm.loop !9573

for.end368:                                       ; preds = %for.cond281
  %arrayidx369 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9575
  %278 = load float, float* %arrayidx369, align 4, !dbg !9575
  %279 = load float*, float** %temp, align 8, !dbg !9576
  %280 = load i32, i32* %index, align 4, !dbg !9577
  %add370 = add nsw i32 %280, 0, !dbg !9578
  %idxprom371 = sext i32 %add370 to i64, !dbg !9576
  %arrayidx372 = getelementptr inbounds float, float* %279, i64 %idxprom371, !dbg !9576
  store float %278, float* %arrayidx372, align 4, !dbg !9579
  %arrayidx373 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9580
  %281 = load float, float* %arrayidx373, align 4, !dbg !9580
  %282 = load float*, float** %temp, align 8, !dbg !9581
  %283 = load i32, i32* %index, align 4, !dbg !9582
  %add374 = add nsw i32 %283, 1, !dbg !9583
  %idxprom375 = sext i32 %add374 to i64, !dbg !9581
  %arrayidx376 = getelementptr inbounds float, float* %282, i64 %idxprom375, !dbg !9581
  store float %281, float* %arrayidx376, align 4, !dbg !9584
  %arrayidx377 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9585
  %284 = load float, float* %arrayidx377, align 4, !dbg !9585
  %285 = load float*, float** %temp, align 8, !dbg !9586
  %286 = load i32, i32* %index, align 4, !dbg !9587
  %add378 = add nsw i32 %286, 2, !dbg !9588
  %idxprom379 = sext i32 %add378 to i64, !dbg !9586
  %arrayidx380 = getelementptr inbounds float, float* %285, i64 %idxprom379, !dbg !9586
  store float %284, float* %arrayidx380, align 4, !dbg !9589
  %arrayidx381 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 0, !dbg !9590
  %287 = load float, float* %arrayidx381, align 4, !dbg !9590
  %288 = load float*, float** %temp, align 8, !dbg !9591
  %289 = load i32, i32* %x, align 4, !dbg !9592
  %290 = load i32, i32* %height.addr, align 4, !dbg !9593
  %sub382 = sub nsw i32 %290, 1, !dbg !9594
  %291 = load i32, i32* %y, align 4, !dbg !9595
  %sub383 = sub nsw i32 %sub382, %291, !dbg !9596
  %292 = load i32, i32* %width.addr, align 4, !dbg !9597
  %mul384 = mul nsw i32 %sub383, %292, !dbg !9598
  %add385 = add nsw i32 %289, %mul384, !dbg !9599
  %mul386 = mul nsw i32 %add385, 4, !dbg !9600
  %add387 = add nsw i32 %mul386, 0, !dbg !9601
  %idxprom388 = sext i32 %add387 to i64, !dbg !9591
  %arrayidx389 = getelementptr inbounds float, float* %288, i64 %idxprom388, !dbg !9591
  store float %287, float* %arrayidx389, align 4, !dbg !9602
  %arrayidx390 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 1, !dbg !9603
  %293 = load float, float* %arrayidx390, align 4, !dbg !9603
  %294 = load float*, float** %temp, align 8, !dbg !9604
  %295 = load i32, i32* %x, align 4, !dbg !9605
  %296 = load i32, i32* %height.addr, align 4, !dbg !9606
  %sub391 = sub nsw i32 %296, 1, !dbg !9607
  %297 = load i32, i32* %y, align 4, !dbg !9608
  %sub392 = sub nsw i32 %sub391, %297, !dbg !9609
  %298 = load i32, i32* %width.addr, align 4, !dbg !9610
  %mul393 = mul nsw i32 %sub392, %298, !dbg !9611
  %add394 = add nsw i32 %295, %mul393, !dbg !9612
  %mul395 = mul nsw i32 %add394, 4, !dbg !9613
  %add396 = add nsw i32 %mul395, 1, !dbg !9614
  %idxprom397 = sext i32 %add396 to i64, !dbg !9604
  %arrayidx398 = getelementptr inbounds float, float* %294, i64 %idxprom397, !dbg !9604
  store float %293, float* %arrayidx398, align 4, !dbg !9615
  %arrayidx399 = getelementptr inbounds [3 x float], [3 x float]* %curColor2, i64 0, i64 2, !dbg !9616
  %299 = load float, float* %arrayidx399, align 4, !dbg !9616
  %300 = load float*, float** %temp, align 8, !dbg !9617
  %301 = load i32, i32* %x, align 4, !dbg !9618
  %302 = load i32, i32* %height.addr, align 4, !dbg !9619
  %sub400 = sub nsw i32 %302, 1, !dbg !9620
  %303 = load i32, i32* %y, align 4, !dbg !9621
  %sub401 = sub nsw i32 %sub400, %303, !dbg !9622
  %304 = load i32, i32* %width.addr, align 4, !dbg !9623
  %mul402 = mul nsw i32 %sub401, %304, !dbg !9624
  %add403 = add nsw i32 %301, %mul402, !dbg !9625
  %mul404 = mul nsw i32 %add403, 4, !dbg !9626
  %add405 = add nsw i32 %mul404, 2, !dbg !9627
  %idxprom406 = sext i32 %add405 to i64, !dbg !9617
  %arrayidx407 = getelementptr inbounds float, float* %300, i64 %idxprom406, !dbg !9617
  store float %299, float* %arrayidx407, align 4, !dbg !9628
  br label %for.inc408, !dbg !9629

for.inc408:                                       ; preds = %for.end368
  %305 = load i32, i32* %y, align 4, !dbg !9630
  %inc409 = add nsw i32 %305, 1, !dbg !9630
  store i32 %inc409, i32* %y, align 4, !dbg !9630
  br label %for.cond271, !dbg !9631, !llvm.loop !9632

for.end410:                                       ; preds = %for.cond271
  %306 = load i32, i32* %halfWidth, align 4, !dbg !9634
  store i32 %306, i32* %y, align 4, !dbg !9636
  br label %for.cond411, !dbg !9637

for.cond411:                                      ; preds = %for.inc475, %for.end410
  %307 = load i32, i32* %y, align 4, !dbg !9638
  %308 = load i32, i32* %height.addr, align 4, !dbg !9640
  %309 = load i32, i32* %halfWidth, align 4, !dbg !9641
  %sub412 = sub nsw i32 %308, %309, !dbg !9642
  %cmp413 = icmp slt i32 %307, %sub412, !dbg !9643
  br i1 %cmp413, label %for.body415, label %for.end477, !dbg !9644

for.body415:                                      ; preds = %for.cond411
  %310 = load i32, i32* %x, align 4, !dbg !9645
  %311 = load i32, i32* %y, align 4, !dbg !9647
  %312 = load i32, i32* %width.addr, align 4, !dbg !9648
  %mul416 = mul nsw i32 %311, %312, !dbg !9649
  %add417 = add nsw i32 %310, %mul416, !dbg !9650
  %mul418 = mul nsw i32 %add417, 4, !dbg !9651
  store i32 %mul418, i32* %index, align 4, !dbg !9652
  store i32 0, i32* %fy, align 4, !dbg !9653
  %arraydecay419 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9654
  call void @zero_v3(float* %arraydecay419), !dbg !9655
  %313 = load i32, i32* %y, align 4, !dbg !9656
  %314 = load i32, i32* %halfWidth, align 4, !dbg !9658
  %sub420 = sub nsw i32 %313, %314, !dbg !9659
  store i32 %sub420, i32* %i, align 4, !dbg !9660
  br label %for.cond421, !dbg !9661

for.cond421:                                      ; preds = %for.inc460, %for.body415
  %315 = load i32, i32* %i, align 4, !dbg !9662
  %316 = load i32, i32* %y, align 4, !dbg !9664
  %317 = load i32, i32* %halfWidth, align 4, !dbg !9665
  %add422 = add nsw i32 %316, %317, !dbg !9666
  %cmp423 = icmp slt i32 %315, %add422, !dbg !9667
  br i1 %cmp423, label %for.body425, label %for.end462, !dbg !9668

for.body425:                                      ; preds = %for.cond421
  %318 = load float*, float** %map.addr, align 8, !dbg !9669
  %319 = load i32, i32* %x, align 4, !dbg !9671
  %320 = load i32, i32* %i, align 4, !dbg !9672
  %321 = load i32, i32* %width.addr, align 4, !dbg !9673
  %mul426 = mul nsw i32 %320, %321, !dbg !9674
  %add427 = add nsw i32 %319, %mul426, !dbg !9675
  %mul428 = mul nsw i32 %add427, 4, !dbg !9676
  %add429 = add nsw i32 %mul428, 0, !dbg !9677
  %idxprom430 = sext i32 %add429 to i64, !dbg !9669
  %arrayidx431 = getelementptr inbounds float, float* %318, i64 %idxprom430, !dbg !9669
  %322 = load float, float* %arrayidx431, align 4, !dbg !9669
  %323 = load float*, float** %filter, align 8, !dbg !9678
  %324 = load i32, i32* %fy, align 4, !dbg !9679
  %idxprom432 = sext i32 %324 to i64, !dbg !9678
  %arrayidx433 = getelementptr inbounds float, float* %323, i64 %idxprom432, !dbg !9678
  %325 = load float, float* %arrayidx433, align 4, !dbg !9678
  %mul434 = fmul float %322, %325, !dbg !9680
  %arrayidx435 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9681
  %326 = load float, float* %arrayidx435, align 4, !dbg !9682
  %add436 = fadd float %326, %mul434, !dbg !9682
  store float %add436, float* %arrayidx435, align 4, !dbg !9682
  %327 = load float*, float** %map.addr, align 8, !dbg !9683
  %328 = load i32, i32* %x, align 4, !dbg !9684
  %329 = load i32, i32* %i, align 4, !dbg !9685
  %330 = load i32, i32* %width.addr, align 4, !dbg !9686
  %mul437 = mul nsw i32 %329, %330, !dbg !9687
  %add438 = add nsw i32 %328, %mul437, !dbg !9688
  %mul439 = mul nsw i32 %add438, 4, !dbg !9689
  %add440 = add nsw i32 %mul439, 1, !dbg !9690
  %idxprom441 = sext i32 %add440 to i64, !dbg !9683
  %arrayidx442 = getelementptr inbounds float, float* %327, i64 %idxprom441, !dbg !9683
  %331 = load float, float* %arrayidx442, align 4, !dbg !9683
  %332 = load float*, float** %filter, align 8, !dbg !9691
  %333 = load i32, i32* %fy, align 4, !dbg !9692
  %idxprom443 = sext i32 %333 to i64, !dbg !9691
  %arrayidx444 = getelementptr inbounds float, float* %332, i64 %idxprom443, !dbg !9691
  %334 = load float, float* %arrayidx444, align 4, !dbg !9691
  %mul445 = fmul float %331, %334, !dbg !9693
  %arrayidx446 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9694
  %335 = load float, float* %arrayidx446, align 4, !dbg !9695
  %add447 = fadd float %335, %mul445, !dbg !9695
  store float %add447, float* %arrayidx446, align 4, !dbg !9695
  %336 = load float*, float** %map.addr, align 8, !dbg !9696
  %337 = load i32, i32* %x, align 4, !dbg !9697
  %338 = load i32, i32* %i, align 4, !dbg !9698
  %339 = load i32, i32* %width.addr, align 4, !dbg !9699
  %mul448 = mul nsw i32 %338, %339, !dbg !9700
  %add449 = add nsw i32 %337, %mul448, !dbg !9701
  %mul450 = mul nsw i32 %add449, 4, !dbg !9702
  %add451 = add nsw i32 %mul450, 2, !dbg !9703
  %idxprom452 = sext i32 %add451 to i64, !dbg !9696
  %arrayidx453 = getelementptr inbounds float, float* %336, i64 %idxprom452, !dbg !9696
  %340 = load float, float* %arrayidx453, align 4, !dbg !9696
  %341 = load float*, float** %filter, align 8, !dbg !9704
  %342 = load i32, i32* %fy, align 4, !dbg !9705
  %idxprom454 = sext i32 %342 to i64, !dbg !9704
  %arrayidx455 = getelementptr inbounds float, float* %341, i64 %idxprom454, !dbg !9704
  %343 = load float, float* %arrayidx455, align 4, !dbg !9704
  %mul456 = fmul float %340, %343, !dbg !9706
  %arrayidx457 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9707
  %344 = load float, float* %arrayidx457, align 4, !dbg !9708
  %add458 = fadd float %344, %mul456, !dbg !9708
  store float %add458, float* %arrayidx457, align 4, !dbg !9708
  %345 = load i32, i32* %fy, align 4, !dbg !9709
  %inc459 = add nsw i32 %345, 1, !dbg !9709
  store i32 %inc459, i32* %fy, align 4, !dbg !9709
  br label %for.inc460, !dbg !9710

for.inc460:                                       ; preds = %for.body425
  %346 = load i32, i32* %i, align 4, !dbg !9711
  %inc461 = add nsw i32 %346, 1, !dbg !9711
  store i32 %inc461, i32* %i, align 4, !dbg !9711
  br label %for.cond421, !dbg !9712, !llvm.loop !9713

for.end462:                                       ; preds = %for.cond421
  %arrayidx463 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 0, !dbg !9715
  %347 = load float, float* %arrayidx463, align 4, !dbg !9715
  %348 = load float*, float** %temp, align 8, !dbg !9716
  %349 = load i32, i32* %index, align 4, !dbg !9717
  %add464 = add nsw i32 %349, 0, !dbg !9718
  %idxprom465 = sext i32 %add464 to i64, !dbg !9716
  %arrayidx466 = getelementptr inbounds float, float* %348, i64 %idxprom465, !dbg !9716
  store float %347, float* %arrayidx466, align 4, !dbg !9719
  %arrayidx467 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 1, !dbg !9720
  %350 = load float, float* %arrayidx467, align 4, !dbg !9720
  %351 = load float*, float** %temp, align 8, !dbg !9721
  %352 = load i32, i32* %index, align 4, !dbg !9722
  %add468 = add nsw i32 %352, 1, !dbg !9723
  %idxprom469 = sext i32 %add468 to i64, !dbg !9721
  %arrayidx470 = getelementptr inbounds float, float* %351, i64 %idxprom469, !dbg !9721
  store float %350, float* %arrayidx470, align 4, !dbg !9724
  %arrayidx471 = getelementptr inbounds [3 x float], [3 x float]* %curColor, i64 0, i64 2, !dbg !9725
  %353 = load float, float* %arrayidx471, align 4, !dbg !9725
  %354 = load float*, float** %temp, align 8, !dbg !9726
  %355 = load i32, i32* %index, align 4, !dbg !9727
  %add472 = add nsw i32 %355, 2, !dbg !9728
  %idxprom473 = sext i32 %add472 to i64, !dbg !9726
  %arrayidx474 = getelementptr inbounds float, float* %354, i64 %idxprom473, !dbg !9726
  store float %353, float* %arrayidx474, align 4, !dbg !9729
  br label %for.inc475, !dbg !9730

for.inc475:                                       ; preds = %for.end462
  %356 = load i32, i32* %y, align 4, !dbg !9731
  %inc476 = add nsw i32 %356, 1, !dbg !9731
  store i32 %inc476, i32* %y, align 4, !dbg !9731
  br label %for.cond411, !dbg !9732, !llvm.loop !9733

for.end477:                                       ; preds = %for.cond411
  br label %for.inc478, !dbg !9735

for.inc478:                                       ; preds = %for.end477
  %357 = load i32, i32* %x, align 4, !dbg !9736
  %inc479 = add nsw i32 %357, 1, !dbg !9736
  store i32 %inc479, i32* %x, align 4, !dbg !9736
  br label %for.cond267, !dbg !9737, !llvm.loop !9738

for.end480:                                       ; preds = %for.cond267
  %358 = load float*, float** %temp, align 8, !dbg !9740
  store float* %358, float** %swap, align 8, !dbg !9741
  %359 = load float*, float** %map.addr, align 8, !dbg !9742
  store float* %359, float** %temp, align 8, !dbg !9743
  %360 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9744
  %361 = load float*, float** %filter, align 8, !dbg !9745
  %362 = bitcast float* %361 to i8*, !dbg !9745
  call void %360(i8* %362), !dbg !9744
  %363 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9746
  %364 = load float*, float** %temp, align 8, !dbg !9747
  %365 = bitcast float* %364 to i8*, !dbg !9747
  call void %363(i8* %365), !dbg !9746
  br label %return, !dbg !9748

return:                                           ; preds = %for.end480, %if.then13, %if.then3, %if.then
  ret void, !dbg !9748
}

; Function Attrs: noinline nounwind uwtable
define internal void @RVAddBitmaps_float(float* %a, float* %b, float* %c, i32 %width, i32 %height) #0 !dbg !9749 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %c.addr = alloca float*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %index = alloca i32, align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9752, metadata !DIExpression()), !dbg !9753
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9754, metadata !DIExpression()), !dbg !9755
  store float* %c, float** %c.addr, align 8
  call void @llvm.dbg.declare(metadata float** %c.addr, metadata !9756, metadata !DIExpression()), !dbg !9757
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !9760, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9762, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9764, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9766, metadata !DIExpression()), !dbg !9767
  store i32 0, i32* %y, align 4, !dbg !9768
  br label %for.cond, !dbg !9770

for.cond:                                         ; preds = %for.inc87, %entry
  %0 = load i32, i32* %y, align 4, !dbg !9771
  %1 = load i32, i32* %height.addr, align 4, !dbg !9773
  %cmp = icmp slt i32 %0, %1, !dbg !9774
  br i1 %cmp, label %for.body, label %for.end89, !dbg !9775

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !9776
  br label %for.cond1, !dbg !9779

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %x, align 4, !dbg !9780
  %3 = load i32, i32* %width.addr, align 4, !dbg !9782
  %cmp2 = icmp slt i32 %2, %3, !dbg !9783
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !9784

for.body3:                                        ; preds = %for.cond1
  %4 = load i32, i32* %x, align 4, !dbg !9785
  %5 = load i32, i32* %y, align 4, !dbg !9787
  %6 = load i32, i32* %width.addr, align 4, !dbg !9788
  %mul = mul nsw i32 %5, %6, !dbg !9789
  %add = add nsw i32 %4, %mul, !dbg !9790
  %mul4 = mul nsw i32 %add, 4, !dbg !9791
  store i32 %mul4, i32* %index, align 4, !dbg !9792
  %7 = load float*, float** %a.addr, align 8, !dbg !9793
  %8 = load i32, i32* %index, align 4, !dbg !9793
  %add5 = add nsw i32 %8, 0, !dbg !9793
  %idxprom = sext i32 %add5 to i64, !dbg !9793
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !9793
  %9 = load float, float* %arrayidx, align 4, !dbg !9793
  %10 = load float*, float** %b.addr, align 8, !dbg !9793
  %11 = load i32, i32* %index, align 4, !dbg !9793
  %add6 = add nsw i32 %11, 0, !dbg !9793
  %idxprom7 = sext i32 %add6 to i64, !dbg !9793
  %arrayidx8 = getelementptr inbounds float, float* %10, i64 %idxprom7, !dbg !9793
  %12 = load float, float* %arrayidx8, align 4, !dbg !9793
  %add9 = fadd float %9, %12, !dbg !9793
  %cmp10 = fcmp olt float 1.000000e+00, %add9, !dbg !9793
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !9793

cond.true:                                        ; preds = %for.body3
  br label %cond.end, !dbg !9793

cond.false:                                       ; preds = %for.body3
  %13 = load float*, float** %a.addr, align 8, !dbg !9793
  %14 = load i32, i32* %index, align 4, !dbg !9793
  %add11 = add nsw i32 %14, 0, !dbg !9793
  %idxprom12 = sext i32 %add11 to i64, !dbg !9793
  %arrayidx13 = getelementptr inbounds float, float* %13, i64 %idxprom12, !dbg !9793
  %15 = load float, float* %arrayidx13, align 4, !dbg !9793
  %16 = load float*, float** %b.addr, align 8, !dbg !9793
  %17 = load i32, i32* %index, align 4, !dbg !9793
  %add14 = add nsw i32 %17, 0, !dbg !9793
  %idxprom15 = sext i32 %add14 to i64, !dbg !9793
  %arrayidx16 = getelementptr inbounds float, float* %16, i64 %idxprom15, !dbg !9793
  %18 = load float, float* %arrayidx16, align 4, !dbg !9793
  %add17 = fadd float %15, %18, !dbg !9793
  br label %cond.end, !dbg !9793

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 1.000000e+00, %cond.true ], [ %add17, %cond.false ], !dbg !9793
  %19 = load float*, float** %c.addr, align 8, !dbg !9794
  %20 = load i32, i32* %index, align 4, !dbg !9795
  %add18 = add nsw i32 %20, 0, !dbg !9796
  %idxprom19 = sext i32 %add18 to i64, !dbg !9794
  %arrayidx20 = getelementptr inbounds float, float* %19, i64 %idxprom19, !dbg !9794
  store float %cond, float* %arrayidx20, align 4, !dbg !9797
  %21 = load float*, float** %a.addr, align 8, !dbg !9798
  %22 = load i32, i32* %index, align 4, !dbg !9798
  %add21 = add nsw i32 %22, 1, !dbg !9798
  %idxprom22 = sext i32 %add21 to i64, !dbg !9798
  %arrayidx23 = getelementptr inbounds float, float* %21, i64 %idxprom22, !dbg !9798
  %23 = load float, float* %arrayidx23, align 4, !dbg !9798
  %24 = load float*, float** %b.addr, align 8, !dbg !9798
  %25 = load i32, i32* %index, align 4, !dbg !9798
  %add24 = add nsw i32 %25, 1, !dbg !9798
  %idxprom25 = sext i32 %add24 to i64, !dbg !9798
  %arrayidx26 = getelementptr inbounds float, float* %24, i64 %idxprom25, !dbg !9798
  %26 = load float, float* %arrayidx26, align 4, !dbg !9798
  %add27 = fadd float %23, %26, !dbg !9798
  %cmp28 = fcmp olt float 1.000000e+00, %add27, !dbg !9798
  br i1 %cmp28, label %cond.true29, label %cond.false30, !dbg !9798

cond.true29:                                      ; preds = %cond.end
  br label %cond.end38, !dbg !9798

cond.false30:                                     ; preds = %cond.end
  %27 = load float*, float** %a.addr, align 8, !dbg !9798
  %28 = load i32, i32* %index, align 4, !dbg !9798
  %add31 = add nsw i32 %28, 1, !dbg !9798
  %idxprom32 = sext i32 %add31 to i64, !dbg !9798
  %arrayidx33 = getelementptr inbounds float, float* %27, i64 %idxprom32, !dbg !9798
  %29 = load float, float* %arrayidx33, align 4, !dbg !9798
  %30 = load float*, float** %b.addr, align 8, !dbg !9798
  %31 = load i32, i32* %index, align 4, !dbg !9798
  %add34 = add nsw i32 %31, 1, !dbg !9798
  %idxprom35 = sext i32 %add34 to i64, !dbg !9798
  %arrayidx36 = getelementptr inbounds float, float* %30, i64 %idxprom35, !dbg !9798
  %32 = load float, float* %arrayidx36, align 4, !dbg !9798
  %add37 = fadd float %29, %32, !dbg !9798
  br label %cond.end38, !dbg !9798

cond.end38:                                       ; preds = %cond.false30, %cond.true29
  %cond39 = phi float [ 1.000000e+00, %cond.true29 ], [ %add37, %cond.false30 ], !dbg !9798
  %33 = load float*, float** %c.addr, align 8, !dbg !9799
  %34 = load i32, i32* %index, align 4, !dbg !9800
  %add40 = add nsw i32 %34, 1, !dbg !9801
  %idxprom41 = sext i32 %add40 to i64, !dbg !9799
  %arrayidx42 = getelementptr inbounds float, float* %33, i64 %idxprom41, !dbg !9799
  store float %cond39, float* %arrayidx42, align 4, !dbg !9802
  %35 = load float*, float** %a.addr, align 8, !dbg !9803
  %36 = load i32, i32* %index, align 4, !dbg !9803
  %add43 = add nsw i32 %36, 2, !dbg !9803
  %idxprom44 = sext i32 %add43 to i64, !dbg !9803
  %arrayidx45 = getelementptr inbounds float, float* %35, i64 %idxprom44, !dbg !9803
  %37 = load float, float* %arrayidx45, align 4, !dbg !9803
  %38 = load float*, float** %b.addr, align 8, !dbg !9803
  %39 = load i32, i32* %index, align 4, !dbg !9803
  %add46 = add nsw i32 %39, 2, !dbg !9803
  %idxprom47 = sext i32 %add46 to i64, !dbg !9803
  %arrayidx48 = getelementptr inbounds float, float* %38, i64 %idxprom47, !dbg !9803
  %40 = load float, float* %arrayidx48, align 4, !dbg !9803
  %add49 = fadd float %37, %40, !dbg !9803
  %cmp50 = fcmp olt float 1.000000e+00, %add49, !dbg !9803
  br i1 %cmp50, label %cond.true51, label %cond.false52, !dbg !9803

cond.true51:                                      ; preds = %cond.end38
  br label %cond.end60, !dbg !9803

cond.false52:                                     ; preds = %cond.end38
  %41 = load float*, float** %a.addr, align 8, !dbg !9803
  %42 = load i32, i32* %index, align 4, !dbg !9803
  %add53 = add nsw i32 %42, 2, !dbg !9803
  %idxprom54 = sext i32 %add53 to i64, !dbg !9803
  %arrayidx55 = getelementptr inbounds float, float* %41, i64 %idxprom54, !dbg !9803
  %43 = load float, float* %arrayidx55, align 4, !dbg !9803
  %44 = load float*, float** %b.addr, align 8, !dbg !9803
  %45 = load i32, i32* %index, align 4, !dbg !9803
  %add56 = add nsw i32 %45, 2, !dbg !9803
  %idxprom57 = sext i32 %add56 to i64, !dbg !9803
  %arrayidx58 = getelementptr inbounds float, float* %44, i64 %idxprom57, !dbg !9803
  %46 = load float, float* %arrayidx58, align 4, !dbg !9803
  %add59 = fadd float %43, %46, !dbg !9803
  br label %cond.end60, !dbg !9803

cond.end60:                                       ; preds = %cond.false52, %cond.true51
  %cond61 = phi float [ 1.000000e+00, %cond.true51 ], [ %add59, %cond.false52 ], !dbg !9803
  %47 = load float*, float** %c.addr, align 8, !dbg !9804
  %48 = load i32, i32* %index, align 4, !dbg !9805
  %add62 = add nsw i32 %48, 2, !dbg !9806
  %idxprom63 = sext i32 %add62 to i64, !dbg !9804
  %arrayidx64 = getelementptr inbounds float, float* %47, i64 %idxprom63, !dbg !9804
  store float %cond61, float* %arrayidx64, align 4, !dbg !9807
  %49 = load float*, float** %a.addr, align 8, !dbg !9808
  %50 = load i32, i32* %index, align 4, !dbg !9808
  %add65 = add nsw i32 %50, 3, !dbg !9808
  %idxprom66 = sext i32 %add65 to i64, !dbg !9808
  %arrayidx67 = getelementptr inbounds float, float* %49, i64 %idxprom66, !dbg !9808
  %51 = load float, float* %arrayidx67, align 4, !dbg !9808
  %52 = load float*, float** %b.addr, align 8, !dbg !9808
  %53 = load i32, i32* %index, align 4, !dbg !9808
  %add68 = add nsw i32 %53, 3, !dbg !9808
  %idxprom69 = sext i32 %add68 to i64, !dbg !9808
  %arrayidx70 = getelementptr inbounds float, float* %52, i64 %idxprom69, !dbg !9808
  %54 = load float, float* %arrayidx70, align 4, !dbg !9808
  %add71 = fadd float %51, %54, !dbg !9808
  %cmp72 = fcmp olt float 1.000000e+00, %add71, !dbg !9808
  br i1 %cmp72, label %cond.true73, label %cond.false74, !dbg !9808

cond.true73:                                      ; preds = %cond.end60
  br label %cond.end82, !dbg !9808

cond.false74:                                     ; preds = %cond.end60
  %55 = load float*, float** %a.addr, align 8, !dbg !9808
  %56 = load i32, i32* %index, align 4, !dbg !9808
  %add75 = add nsw i32 %56, 3, !dbg !9808
  %idxprom76 = sext i32 %add75 to i64, !dbg !9808
  %arrayidx77 = getelementptr inbounds float, float* %55, i64 %idxprom76, !dbg !9808
  %57 = load float, float* %arrayidx77, align 4, !dbg !9808
  %58 = load float*, float** %b.addr, align 8, !dbg !9808
  %59 = load i32, i32* %index, align 4, !dbg !9808
  %add78 = add nsw i32 %59, 3, !dbg !9808
  %idxprom79 = sext i32 %add78 to i64, !dbg !9808
  %arrayidx80 = getelementptr inbounds float, float* %58, i64 %idxprom79, !dbg !9808
  %60 = load float, float* %arrayidx80, align 4, !dbg !9808
  %add81 = fadd float %57, %60, !dbg !9808
  br label %cond.end82, !dbg !9808

cond.end82:                                       ; preds = %cond.false74, %cond.true73
  %cond83 = phi float [ 1.000000e+00, %cond.true73 ], [ %add81, %cond.false74 ], !dbg !9808
  %61 = load float*, float** %c.addr, align 8, !dbg !9809
  %62 = load i32, i32* %index, align 4, !dbg !9810
  %add84 = add nsw i32 %62, 3, !dbg !9811
  %idxprom85 = sext i32 %add84 to i64, !dbg !9809
  %arrayidx86 = getelementptr inbounds float, float* %61, i64 %idxprom85, !dbg !9809
  store float %cond83, float* %arrayidx86, align 4, !dbg !9812
  br label %for.inc, !dbg !9813

for.inc:                                          ; preds = %cond.end82
  %63 = load i32, i32* %x, align 4, !dbg !9814
  %inc = add nsw i32 %63, 1, !dbg !9814
  store i32 %inc, i32* %x, align 4, !dbg !9814
  br label %for.cond1, !dbg !9815, !llvm.loop !9816

for.end:                                          ; preds = %for.cond1
  br label %for.inc87, !dbg !9818

for.inc87:                                        ; preds = %for.end
  %64 = load i32, i32* %y, align 4, !dbg !9819
  %inc88 = add nsw i32 %64, 1, !dbg !9819
  store i32 %inc88, i32* %y, align 4, !dbg !9819
  br label %for.cond, !dbg !9820, !llvm.loop !9821

for.end89:                                        ; preds = %for.cond
  ret void, !dbg !9823
}

; Function Attrs: nounwind
declare dso_local double @exp(double) #4

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !9824 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  %0 = load float*, float** %r.addr, align 8, !dbg !9830
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9830
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !9831
  %1 = load float*, float** %r.addr, align 8, !dbg !9832
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !9832
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !9833
  %2 = load float*, float** %r.addr, align 8, !dbg !9834
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !9834
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !9835
  ret void, !dbg !9836
}

declare dso_local void @IMB_buffer_float_from_byte(float*, i8*, i32, i32, i8 zeroext, i32, i32, i32, i32) #2

declare dso_local void @IMB_buffer_float_premultiply(float*, i32, i32) #2

declare dso_local void @IMB_buffer_float_unpremultiply(float*, i32, i32) #2

declare dso_local void @IMB_buffer_byte_from_float(i8*, float*, i32, float, i32, i32, i8 zeroext, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_transform(%struct.Scene* %scene, %struct.Sequence* %seq, float %UNUSED_facf0, i32 %x, i32 %y, %struct.ImBuf* %ibuf1, %struct.ImBuf* %out) #0 !dbg !9837 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %UNUSED_facf0.addr = alloca float, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %out.addr = alloca %struct.ImBuf*, align 8
  %transform = alloca %struct.TransformVars*, align 8
  %scale_x = alloca float, align 4
  %scale_y = alloca float, align 4
  %translate_x = alloca float, align 4
  %translate_y = alloca float, align 4
  %rotate_radians = alloca float, align 4
  %rd_s = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9840, metadata !DIExpression()), !dbg !9841
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !9842, metadata !DIExpression()), !dbg !9843
  store float %UNUSED_facf0, float* %UNUSED_facf0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_facf0.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9846, metadata !DIExpression()), !dbg !9847
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !9848, metadata !DIExpression()), !dbg !9849
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !9850, metadata !DIExpression()), !dbg !9851
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.declare(metadata %struct.TransformVars** %transform, metadata !9854, metadata !DIExpression()), !dbg !9855
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !9856
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !9857
  %1 = load i8*, i8** %effectdata, align 8, !dbg !9857
  %2 = bitcast i8* %1 to %struct.TransformVars*, !dbg !9858
  store %struct.TransformVars* %2, %struct.TransformVars** %transform, align 8, !dbg !9855
  call void @llvm.dbg.declare(metadata float* %scale_x, metadata !9859, metadata !DIExpression()), !dbg !9860
  call void @llvm.dbg.declare(metadata float* %scale_y, metadata !9861, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.declare(metadata float* %translate_x, metadata !9863, metadata !DIExpression()), !dbg !9864
  call void @llvm.dbg.declare(metadata float* %translate_y, metadata !9865, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.declare(metadata float* %rotate_radians, metadata !9867, metadata !DIExpression()), !dbg !9868
  %3 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9869
  %uniform_scale = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %3, i32 0, i32 7, !dbg !9871
  %4 = load i32, i32* %uniform_scale, align 4, !dbg !9871
  %tobool = icmp ne i32 %4, 0, !dbg !9869
  br i1 %tobool, label %if.then, label %if.else, !dbg !9872

if.then:                                          ; preds = %entry
  %5 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9873
  %ScalexIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %5, i32 0, i32 0, !dbg !9875
  %6 = load float, float* %ScalexIni, align 4, !dbg !9875
  store float %6, float* %scale_y, align 4, !dbg !9876
  store float %6, float* %scale_x, align 4, !dbg !9877
  br label %if.end, !dbg !9878

if.else:                                          ; preds = %entry
  %7 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9879
  %ScalexIni1 = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %7, i32 0, i32 0, !dbg !9881
  %8 = load float, float* %ScalexIni1, align 4, !dbg !9881
  store float %8, float* %scale_x, align 4, !dbg !9882
  %9 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9883
  %ScaleyIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %9, i32 0, i32 1, !dbg !9884
  %10 = load float, float* %ScaleyIni, align 4, !dbg !9884
  store float %10, float* %scale_y, align 4, !dbg !9885
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9886
  %percent = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %11, i32 0, i32 5, !dbg !9888
  %12 = load i32, i32* %percent, align 4, !dbg !9888
  %tobool2 = icmp ne i32 %12, 0, !dbg !9886
  br i1 %tobool2, label %if.else11, label %if.then3, !dbg !9889

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %rd_s, metadata !9890, metadata !DIExpression()), !dbg !9892
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9893
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 22, !dbg !9894
  %size = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 30, !dbg !9895
  %14 = load i16, i16* %size, align 2, !dbg !9895
  %conv = sext i16 %14 to i32, !dbg !9893
  %conv4 = sitofp i32 %conv to float, !dbg !9893
  %div = fdiv float %conv4, 1.000000e+02, !dbg !9896
  store float %div, float* %rd_s, align 4, !dbg !9892
  %15 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9897
  %xIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %15, i32 0, i32 2, !dbg !9898
  %16 = load float, float* %xIni, align 4, !dbg !9898
  %17 = load float, float* %rd_s, align 4, !dbg !9899
  %mul = fmul float %16, %17, !dbg !9900
  %18 = load i32, i32* %x.addr, align 4, !dbg !9901
  %conv5 = sitofp i32 %18 to float, !dbg !9901
  %div6 = fdiv float %conv5, 2.000000e+00, !dbg !9902
  %add = fadd float %mul, %div6, !dbg !9903
  store float %add, float* %translate_x, align 4, !dbg !9904
  %19 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9905
  %yIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %19, i32 0, i32 3, !dbg !9906
  %20 = load float, float* %yIni, align 4, !dbg !9906
  %21 = load float, float* %rd_s, align 4, !dbg !9907
  %mul7 = fmul float %20, %21, !dbg !9908
  %22 = load i32, i32* %y.addr, align 4, !dbg !9909
  %conv8 = sitofp i32 %22 to float, !dbg !9909
  %div9 = fdiv float %conv8, 2.000000e+00, !dbg !9910
  %add10 = fadd float %mul7, %div9, !dbg !9911
  store float %add10, float* %translate_y, align 4, !dbg !9912
  br label %if.end26, !dbg !9913

if.else11:                                        ; preds = %if.end
  %23 = load i32, i32* %x.addr, align 4, !dbg !9914
  %conv12 = sitofp i32 %23 to float, !dbg !9914
  %24 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9916
  %xIni13 = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %24, i32 0, i32 2, !dbg !9917
  %25 = load float, float* %xIni13, align 4, !dbg !9917
  %div14 = fdiv float %25, 1.000000e+02, !dbg !9918
  %mul15 = fmul float %conv12, %div14, !dbg !9919
  %26 = load i32, i32* %x.addr, align 4, !dbg !9920
  %conv16 = sitofp i32 %26 to float, !dbg !9920
  %div17 = fdiv float %conv16, 2.000000e+00, !dbg !9921
  %add18 = fadd float %mul15, %div17, !dbg !9922
  store float %add18, float* %translate_x, align 4, !dbg !9923
  %27 = load i32, i32* %y.addr, align 4, !dbg !9924
  %conv19 = sitofp i32 %27 to float, !dbg !9924
  %28 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9925
  %yIni20 = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %28, i32 0, i32 3, !dbg !9926
  %29 = load float, float* %yIni20, align 4, !dbg !9926
  %div21 = fdiv float %29, 1.000000e+02, !dbg !9927
  %mul22 = fmul float %conv19, %div21, !dbg !9928
  %30 = load i32, i32* %y.addr, align 4, !dbg !9929
  %conv23 = sitofp i32 %30 to float, !dbg !9929
  %div24 = fdiv float %conv23, 2.000000e+00, !dbg !9930
  %add25 = fadd float %mul22, %div24, !dbg !9931
  store float %add25, float* %translate_y, align 4, !dbg !9932
  br label %if.end26

if.end26:                                         ; preds = %if.else11, %if.then3
  %31 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9933
  %rotIni = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %31, i32 0, i32 4, !dbg !9933
  %32 = load float, float* %rotIni, align 4, !dbg !9933
  %mul27 = fmul float %32, 0x3F91DF46A0000000, !dbg !9933
  store float %mul27, float* %rotate_radians, align 4, !dbg !9934
  %33 = load i32, i32* %x.addr, align 4, !dbg !9935
  %34 = load i32, i32* %y.addr, align 4, !dbg !9936
  %35 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !9937
  %36 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !9938
  %37 = load float, float* %scale_x, align 4, !dbg !9939
  %38 = load float, float* %scale_y, align 4, !dbg !9940
  %39 = load float, float* %translate_x, align 4, !dbg !9941
  %40 = load float, float* %translate_y, align 4, !dbg !9942
  %41 = load float, float* %rotate_radians, align 4, !dbg !9943
  %42 = load %struct.TransformVars*, %struct.TransformVars** %transform, align 8, !dbg !9944
  %interpolation = getelementptr inbounds %struct.TransformVars, %struct.TransformVars* %42, i32 0, i32 6, !dbg !9945
  %43 = load i32, i32* %interpolation, align 4, !dbg !9945
  call void @transform_image(i32 %33, i32 %34, %struct.ImBuf* %35, %struct.ImBuf* %36, float %37, float %38, float %39, float %40, float %41, i32 %43), !dbg !9946
  ret void, !dbg !9947
}

; Function Attrs: noinline nounwind uwtable
define internal void @transform_image(i32 %x, i32 %y, %struct.ImBuf* %ibuf1, %struct.ImBuf* %out, float %scale_x, float %scale_y, float %translate_x, float %translate_y, float %rotate, i32 %interpolation) #0 !dbg !9948 {
entry:
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ibuf1.addr = alloca %struct.ImBuf*, align 8
  %out.addr = alloca %struct.ImBuf*, align 8
  %scale_x.addr = alloca float, align 4
  %scale_y.addr = alloca float, align 4
  %translate_x.addr = alloca float, align 4
  %translate_y.addr = alloca float, align 4
  %rotate.addr = alloca float, align 4
  %interpolation.addr = alloca i32, align 4
  %xo = alloca i32, align 4
  %yo = alloca i32, align 4
  %xi = alloca i32, align 4
  %yi = alloca i32, align 4
  %xt = alloca float, align 4
  %yt = alloca float, align 4
  %xr = alloca float, align 4
  %yr = alloca float, align 4
  %s = alloca float, align 4
  %c = alloca float, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9951, metadata !DIExpression()), !dbg !9952
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !9953, metadata !DIExpression()), !dbg !9954
  store %struct.ImBuf* %ibuf1, %struct.ImBuf** %ibuf1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf1.addr, metadata !9955, metadata !DIExpression()), !dbg !9956
  store %struct.ImBuf* %out, %struct.ImBuf** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out.addr, metadata !9957, metadata !DIExpression()), !dbg !9958
  store float %scale_x, float* %scale_x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scale_x.addr, metadata !9959, metadata !DIExpression()), !dbg !9960
  store float %scale_y, float* %scale_y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scale_y.addr, metadata !9961, metadata !DIExpression()), !dbg !9962
  store float %translate_x, float* %translate_x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %translate_x.addr, metadata !9963, metadata !DIExpression()), !dbg !9964
  store float %translate_y, float* %translate_y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %translate_y.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  store float %rotate, float* %rotate.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rotate.addr, metadata !9967, metadata !DIExpression()), !dbg !9968
  store i32 %interpolation, i32* %interpolation.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interpolation.addr, metadata !9969, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.declare(metadata i32* %xo, metadata !9971, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.declare(metadata i32* %yo, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.declare(metadata i32* %xi, metadata !9975, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.declare(metadata i32* %yi, metadata !9977, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.declare(metadata float* %xt, metadata !9979, metadata !DIExpression()), !dbg !9980
  call void @llvm.dbg.declare(metadata float* %yt, metadata !9981, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.declare(metadata float* %xr, metadata !9983, metadata !DIExpression()), !dbg !9984
  call void @llvm.dbg.declare(metadata float* %yr, metadata !9985, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.declare(metadata float* %s, metadata !9987, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.declare(metadata float* %c, metadata !9989, metadata !DIExpression()), !dbg !9990
  %0 = load i32, i32* %x.addr, align 4, !dbg !9991
  store i32 %0, i32* %xo, align 4, !dbg !9992
  %1 = load i32, i32* %y.addr, align 4, !dbg !9993
  store i32 %1, i32* %yo, align 4, !dbg !9994
  %2 = load float, float* %rotate.addr, align 4, !dbg !9995
  %call = call float @sinf(float %2) #6, !dbg !9996
  store float %call, float* %s, align 4, !dbg !9997
  %3 = load float, float* %rotate.addr, align 4, !dbg !9998
  %call1 = call float @cosf(float %3) #6, !dbg !9999
  store float %call1, float* %c, align 4, !dbg !10000
  store i32 0, i32* %yi, align 4, !dbg !10001
  br label %for.cond, !dbg !10003

for.cond:                                         ; preds = %for.inc20, %entry
  %4 = load i32, i32* %yi, align 4, !dbg !10004
  %5 = load i32, i32* %yo, align 4, !dbg !10006
  %cmp = icmp slt i32 %4, %5, !dbg !10007
  br i1 %cmp, label %for.body, label %for.end22, !dbg !10008

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %xi, align 4, !dbg !10009
  br label %for.cond2, !dbg !10012

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %xi, align 4, !dbg !10013
  %7 = load i32, i32* %xo, align 4, !dbg !10015
  %cmp3 = icmp slt i32 %6, %7, !dbg !10016
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !10017

for.body4:                                        ; preds = %for.cond2
  %8 = load i32, i32* %xi, align 4, !dbg !10018
  %conv = sitofp i32 %8 to float, !dbg !10018
  %9 = load float, float* %translate_x.addr, align 4, !dbg !10020
  %sub = fsub float %conv, %9, !dbg !10021
  store float %sub, float* %xt, align 4, !dbg !10022
  %10 = load i32, i32* %yi, align 4, !dbg !10023
  %conv5 = sitofp i32 %10 to float, !dbg !10023
  %11 = load float, float* %translate_y.addr, align 4, !dbg !10024
  %sub6 = fsub float %conv5, %11, !dbg !10025
  store float %sub6, float* %yt, align 4, !dbg !10026
  %12 = load float, float* %c, align 4, !dbg !10027
  %13 = load float, float* %xt, align 4, !dbg !10028
  %mul = fmul float %12, %13, !dbg !10029
  %14 = load float, float* %s, align 4, !dbg !10030
  %15 = load float, float* %yt, align 4, !dbg !10031
  %mul7 = fmul float %14, %15, !dbg !10032
  %add = fadd float %mul, %mul7, !dbg !10033
  store float %add, float* %xr, align 4, !dbg !10034
  %16 = load float, float* %s, align 4, !dbg !10035
  %fneg = fneg float %16, !dbg !10036
  %17 = load float, float* %xt, align 4, !dbg !10037
  %mul8 = fmul float %fneg, %17, !dbg !10038
  %18 = load float, float* %c, align 4, !dbg !10039
  %19 = load float, float* %yt, align 4, !dbg !10040
  %mul9 = fmul float %18, %19, !dbg !10041
  %add10 = fadd float %mul8, %mul9, !dbg !10042
  store float %add10, float* %yr, align 4, !dbg !10043
  %20 = load float, float* %xr, align 4, !dbg !10044
  %21 = load float, float* %scale_x.addr, align 4, !dbg !10045
  %div = fdiv float %20, %21, !dbg !10046
  store float %div, float* %xt, align 4, !dbg !10047
  %22 = load float, float* %yr, align 4, !dbg !10048
  %23 = load float, float* %scale_y.addr, align 4, !dbg !10049
  %div11 = fdiv float %22, %23, !dbg !10050
  store float %div11, float* %yt, align 4, !dbg !10051
  %24 = load i32, i32* %xo, align 4, !dbg !10052
  %conv12 = sitofp i32 %24 to float, !dbg !10052
  %div13 = fdiv float %conv12, 2.000000e+00, !dbg !10053
  %25 = load float, float* %xt, align 4, !dbg !10054
  %add14 = fadd float %25, %div13, !dbg !10054
  store float %add14, float* %xt, align 4, !dbg !10054
  %26 = load i32, i32* %yo, align 4, !dbg !10055
  %conv15 = sitofp i32 %26 to float, !dbg !10055
  %div16 = fdiv float %conv15, 2.000000e+00, !dbg !10056
  %27 = load float, float* %yt, align 4, !dbg !10057
  %add17 = fadd float %27, %div16, !dbg !10057
  store float %add17, float* %yt, align 4, !dbg !10057
  %28 = load i32, i32* %interpolation.addr, align 4, !dbg !10058
  switch i32 %28, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb18
    i32 2, label %sw.bb19
  ], !dbg !10059

sw.bb:                                            ; preds = %for.body4
  %29 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !10060
  %30 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !10062
  %31 = load float, float* %xt, align 4, !dbg !10063
  %32 = load float, float* %yt, align 4, !dbg !10064
  %33 = load i32, i32* %xi, align 4, !dbg !10065
  %34 = load i32, i32* %yi, align 4, !dbg !10066
  call void @nearest_interpolation(%struct.ImBuf* %29, %struct.ImBuf* %30, float %31, float %32, i32 %33, i32 %34), !dbg !10067
  br label %sw.epilog, !dbg !10068

sw.bb18:                                          ; preds = %for.body4
  %35 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !10069
  %36 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !10070
  %37 = load float, float* %xt, align 4, !dbg !10071
  %38 = load float, float* %yt, align 4, !dbg !10072
  %39 = load i32, i32* %xi, align 4, !dbg !10073
  %40 = load i32, i32* %yi, align 4, !dbg !10074
  call void @bilinear_interpolation(%struct.ImBuf* %35, %struct.ImBuf* %36, float %37, float %38, i32 %39, i32 %40), !dbg !10075
  br label %sw.epilog, !dbg !10076

sw.bb19:                                          ; preds = %for.body4
  %41 = load %struct.ImBuf*, %struct.ImBuf** %ibuf1.addr, align 8, !dbg !10077
  %42 = load %struct.ImBuf*, %struct.ImBuf** %out.addr, align 8, !dbg !10078
  %43 = load float, float* %xt, align 4, !dbg !10079
  %44 = load float, float* %yt, align 4, !dbg !10080
  %45 = load i32, i32* %xi, align 4, !dbg !10081
  %46 = load i32, i32* %yi, align 4, !dbg !10082
  call void @bicubic_interpolation(%struct.ImBuf* %41, %struct.ImBuf* %42, float %43, float %44, i32 %45, i32 %46), !dbg !10083
  br label %sw.epilog, !dbg !10084

sw.epilog:                                        ; preds = %for.body4, %sw.bb19, %sw.bb18, %sw.bb
  br label %for.inc, !dbg !10085

for.inc:                                          ; preds = %sw.epilog
  %47 = load i32, i32* %xi, align 4, !dbg !10086
  %inc = add nsw i32 %47, 1, !dbg !10086
  store i32 %inc, i32* %xi, align 4, !dbg !10086
  br label %for.cond2, !dbg !10087, !llvm.loop !10088

for.end:                                          ; preds = %for.cond2
  br label %for.inc20, !dbg !10090

for.inc20:                                        ; preds = %for.end
  %48 = load i32, i32* %yi, align 4, !dbg !10091
  %inc21 = add nsw i32 %48, 1, !dbg !10091
  store i32 %inc21, i32* %yi, align 4, !dbg !10091
  br label %for.cond, !dbg !10092, !llvm.loop !10093

for.end22:                                        ; preds = %for.cond
  ret void, !dbg !10095
}

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

declare dso_local void @nearest_interpolation(%struct.ImBuf*, %struct.ImBuf*, float, float, i32, i32) #2

declare dso_local void @bilinear_interpolation(%struct.ImBuf*, %struct.ImBuf*, float, float, i32, i32) #2

declare dso_local void @bicubic_interpolation(%struct.ImBuf*, %struct.ImBuf*, float, float, i32, i32) #2

declare dso_local %struct.ListBase* @BKE_sequence_seqbase(%struct.ListBase*, %struct.Sequence*) #2

declare dso_local %struct.ImBuf* @BKE_sequencer_give_ibuf_seqbase(%struct.SeqRenderData*, float, i32, %struct.ListBase*) #2

declare dso_local zeroext i8 @BKE_sequencer_input_have_to_preprocess(%struct.SeqRenderData*, %struct.Sequence*, float) #2

declare dso_local %struct.ImBuf* @IMB_dupImBuf(%struct.ImBuf*) #2

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ImBuf* @do_adjustment_impl(%struct.SeqRenderData* %context, %struct.Sequence* %seq, float %cfra) #0 !dbg !10096 {
entry:
  %context.addr = alloca %struct.SeqRenderData*, align 8
  %seq.addr = alloca %struct.Sequence*, align 8
  %cfra.addr = alloca float, align 4
  %ed = alloca %struct.Editing*, align 8
  %seqbasep = alloca %struct.ListBase*, align 8
  %i = alloca %struct.ImBuf*, align 8
  %meta = alloca %struct.Sequence*, align 8
  store %struct.SeqRenderData* %context, %struct.SeqRenderData** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData** %context.addr, metadata !10099, metadata !DIExpression()), !dbg !10100
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !10101, metadata !DIExpression()), !dbg !10102
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !10103, metadata !DIExpression()), !dbg !10104
  call void @llvm.dbg.declare(metadata %struct.Editing** %ed, metadata !10105, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.declare(metadata %struct.ListBase** %seqbasep, metadata !10107, metadata !DIExpression()), !dbg !10108
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %i, metadata !10109, metadata !DIExpression()), !dbg !10110
  store %struct.ImBuf* null, %struct.ImBuf** %i, align 8, !dbg !10110
  %0 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !10111
  %scene = getelementptr inbounds %struct.SeqRenderData, %struct.SeqRenderData* %0, i32 0, i32 2, !dbg !10112
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10112
  %ed1 = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 19, !dbg !10113
  %2 = load %struct.Editing*, %struct.Editing** %ed1, align 8, !dbg !10113
  store %struct.Editing* %2, %struct.Editing** %ed, align 8, !dbg !10114
  %3 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !10115
  %seqbase = getelementptr inbounds %struct.Editing, %struct.Editing* %3, i32 0, i32 1, !dbg !10116
  %4 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !10117
  %call = call %struct.ListBase* @BKE_sequence_seqbase(%struct.ListBase* %seqbase, %struct.Sequence* %4), !dbg !10118
  store %struct.ListBase* %call, %struct.ListBase** %seqbasep, align 8, !dbg !10119
  %5 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !10120
  %machine = getelementptr inbounds %struct.Sequence, %struct.Sequence* %5, i32 0, i32 13, !dbg !10122
  %6 = load i32, i32* %machine, align 8, !dbg !10122
  %cmp = icmp sgt i32 %6, 1, !dbg !10123
  br i1 %cmp, label %if.then, label %if.end, !dbg !10124

if.then:                                          ; preds = %entry
  %7 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !10125
  %8 = load float, float* %cfra.addr, align 4, !dbg !10127
  %9 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !10128
  %machine2 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %9, i32 0, i32 13, !dbg !10129
  %10 = load i32, i32* %machine2, align 8, !dbg !10129
  %sub = sub nsw i32 %10, 1, !dbg !10130
  %11 = load %struct.ListBase*, %struct.ListBase** %seqbasep, align 8, !dbg !10131
  %call3 = call %struct.ImBuf* @BKE_sequencer_give_ibuf_seqbase(%struct.SeqRenderData* %7, float %8, i32 %sub, %struct.ListBase* %11), !dbg !10132
  store %struct.ImBuf* %call3, %struct.ImBuf** %i, align 8, !dbg !10133
  br label %if.end, !dbg !10134

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !10135
  %tobool = icmp ne %struct.ImBuf* %12, null, !dbg !10135
  br i1 %tobool, label %if.end11, label %if.then4, !dbg !10137

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Sequence** %meta, metadata !10138, metadata !DIExpression()), !dbg !10140
  %13 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !10141
  %seqbase5 = getelementptr inbounds %struct.Editing, %struct.Editing* %13, i32 0, i32 1, !dbg !10142
  %14 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !10143
  %call6 = call %struct.Sequence* @BKE_sequence_metastrip(%struct.ListBase* %seqbase5, %struct.Sequence* null, %struct.Sequence* %14), !dbg !10144
  store %struct.Sequence* %call6, %struct.Sequence** %meta, align 8, !dbg !10145
  %15 = load %struct.Sequence*, %struct.Sequence** %meta, align 8, !dbg !10146
  %tobool7 = icmp ne %struct.Sequence* %15, null, !dbg !10146
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !10148

if.then8:                                         ; preds = %if.then4
  %16 = load %struct.SeqRenderData*, %struct.SeqRenderData** %context.addr, align 8, !dbg !10149
  %17 = load %struct.Sequence*, %struct.Sequence** %meta, align 8, !dbg !10151
  %18 = load float, float* %cfra.addr, align 4, !dbg !10152
  %call9 = call %struct.ImBuf* @do_adjustment_impl(%struct.SeqRenderData* %16, %struct.Sequence* %17, float %18), !dbg !10153
  store %struct.ImBuf* %call9, %struct.ImBuf** %i, align 8, !dbg !10154
  br label %if.end10, !dbg !10155

if.end10:                                         ; preds = %if.then8, %if.then4
  br label %if.end11, !dbg !10156

if.end11:                                         ; preds = %if.end10, %if.end
  %19 = load %struct.ImBuf*, %struct.ImBuf** %i, align 8, !dbg !10157
  ret %struct.ImBuf* %19, !dbg !10158
}

declare dso_local %struct.Sequence* @BKE_sequence_metastrip(%struct.ListBase*, %struct.Sequence*, %struct.Sequence*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_gaussian_blur_effect_float(%struct.Sequence* %seq, i32 %start_line, i32 %x, i32 %y, i32 %frame_width, i32 %frame_height, float* %rect, float* %out) #0 !dbg !10159 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %start_line.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %frame_width.addr = alloca i32, align 4
  %frame_height.addr = alloca i32, align 4
  %rect.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %data = alloca %struct.GaussianBlurVars*, align 8
  %size_x = alloca i32, align 4
  %size_y = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %gausstab_x = alloca float*, align 8
  %gausstab_y = alloca float*, align 8
  %out_index = alloca i32, align 4
  %current_x = alloca i32, align 4
  %current_y = alloca i32, align 4
  %accum = alloca [4 x float], align 16
  %accum_weight = alloca float, align 4
  %weight = alloca float, align 4
  %index = alloca i32, align 4
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !10162, metadata !DIExpression()), !dbg !10163
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10166, metadata !DIExpression()), !dbg !10167
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10168, metadata !DIExpression()), !dbg !10169
  store i32 %frame_width, i32* %frame_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_width.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  store i32 %frame_height, i32* %frame_height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_height.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  store float* %rect, float** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rect.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.declare(metadata %struct.GaussianBlurVars** %data, metadata !10178, metadata !DIExpression()), !dbg !10179
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !10180
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !10181
  %1 = load i8*, i8** %effectdata, align 8, !dbg !10181
  %2 = bitcast i8* %1 to %struct.GaussianBlurVars*, !dbg !10180
  store %struct.GaussianBlurVars* %2, %struct.GaussianBlurVars** %data, align 8, !dbg !10179
  call void @llvm.dbg.declare(metadata i32* %size_x, metadata !10182, metadata !DIExpression()), !dbg !10184
  %3 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10185
  %size_x1 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %3, i32 0, i32 0, !dbg !10186
  %4 = load float, float* %size_x1, align 4, !dbg !10186
  %add = fadd float %4, 5.000000e-01, !dbg !10187
  %conv = fptosi float %add to i32, !dbg !10188
  store i32 %conv, i32* %size_x, align 4, !dbg !10184
  call void @llvm.dbg.declare(metadata i32* %size_y, metadata !10189, metadata !DIExpression()), !dbg !10190
  %5 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10191
  %size_y2 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %5, i32 0, i32 1, !dbg !10192
  %6 = load float, float* %size_y2, align 4, !dbg !10192
  %add3 = fadd float %6, 5.000000e-01, !dbg !10193
  %conv4 = fptosi float %add3 to i32, !dbg !10194
  store i32 %conv4, i32* %size_y, align 4, !dbg !10190
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10195, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10197, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.declare(metadata float** %gausstab_x, metadata !10199, metadata !DIExpression()), !dbg !10200
  call void @llvm.dbg.declare(metadata float** %gausstab_y, metadata !10201, metadata !DIExpression()), !dbg !10202
  %7 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10203
  %size_x5 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %7, i32 0, i32 0, !dbg !10204
  %8 = load float, float* %size_x5, align 4, !dbg !10204
  %9 = load i32, i32* %size_x, align 4, !dbg !10205
  %call = call float* @make_gaussian_blur_kernel(float %8, i32 %9), !dbg !10206
  store float* %call, float** %gausstab_x, align 8, !dbg !10207
  %10 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10208
  %size_x6 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %10, i32 0, i32 0, !dbg !10210
  %11 = load float, float* %size_x6, align 4, !dbg !10210
  %12 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10211
  %size_y7 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %12, i32 0, i32 1, !dbg !10212
  %13 = load float, float* %size_y7, align 4, !dbg !10212
  %cmp = fcmp oeq float %11, %13, !dbg !10213
  br i1 %cmp, label %if.then, label %if.else, !dbg !10214

if.then:                                          ; preds = %entry
  %14 = load float*, float** %gausstab_x, align 8, !dbg !10215
  store float* %14, float** %gausstab_y, align 8, !dbg !10217
  br label %if.end, !dbg !10218

if.else:                                          ; preds = %entry
  %15 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10219
  %size_y9 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %15, i32 0, i32 1, !dbg !10221
  %16 = load float, float* %size_y9, align 4, !dbg !10221
  %17 = load i32, i32* %size_y, align 4, !dbg !10222
  %call10 = call float* @make_gaussian_blur_kernel(float %16, i32 %17), !dbg !10223
  store float* %call10, float** %gausstab_y, align 8, !dbg !10224
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !10225
  br label %for.cond, !dbg !10227

for.cond:                                         ; preds = %for.inc88, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !10228
  %19 = load i32, i32* %y.addr, align 4, !dbg !10230
  %cmp11 = icmp slt i32 %18, %19, !dbg !10231
  br i1 %cmp11, label %for.body, label %for.end90, !dbg !10232

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10233
  br label %for.cond13, !dbg !10236

for.cond13:                                       ; preds = %for.inc85, %for.body
  %20 = load i32, i32* %j, align 4, !dbg !10237
  %21 = load i32, i32* %x.addr, align 4, !dbg !10239
  %cmp14 = icmp slt i32 %20, %21, !dbg !10240
  br i1 %cmp14, label %for.body16, label %for.end87, !dbg !10241

for.body16:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata i32* %out_index, metadata !10242, metadata !DIExpression()), !dbg !10244
  %22 = load i32, i32* %i, align 4, !dbg !10245
  %23 = load i32, i32* %x.addr, align 4, !dbg !10245
  %mul = mul nsw i32 %22, %23, !dbg !10245
  %24 = load i32, i32* %j, align 4, !dbg !10245
  %add17 = add nsw i32 %mul, %24, !dbg !10245
  %mul18 = mul nsw i32 %add17, 4, !dbg !10245
  store i32 %mul18, i32* %out_index, align 4, !dbg !10244
  call void @llvm.dbg.declare(metadata i32* %current_x, metadata !10246, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.declare(metadata i32* %current_y, metadata !10248, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.declare(metadata [4 x float]* %accum, metadata !10250, metadata !DIExpression()), !dbg !10251
  %25 = bitcast [4 x float]* %accum to i8*, !dbg !10251
  call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 0, i64 16, i1 false), !dbg !10251
  call void @llvm.dbg.declare(metadata float* %accum_weight, metadata !10252, metadata !DIExpression()), !dbg !10253
  store float 0.000000e+00, float* %accum_weight, align 4, !dbg !10253
  %26 = load i32, i32* %i, align 4, !dbg !10254
  %27 = load i32, i32* %size_y, align 4, !dbg !10256
  %sub = sub nsw i32 %26, %27, !dbg !10257
  store i32 %sub, i32* %current_y, align 4, !dbg !10258
  br label %for.cond19, !dbg !10259

for.cond19:                                       ; preds = %for.inc79, %for.body16
  %28 = load i32, i32* %current_y, align 4, !dbg !10260
  %29 = load i32, i32* %i, align 4, !dbg !10262
  %30 = load i32, i32* %size_y, align 4, !dbg !10263
  %add20 = add nsw i32 %29, %30, !dbg !10264
  %cmp21 = icmp sle i32 %28, %add20, !dbg !10265
  br i1 %cmp21, label %for.body23, label %for.end81, !dbg !10266

for.body23:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata float* %weight, metadata !10267, metadata !DIExpression()), !dbg !10269
  %31 = load i32, i32* %current_y, align 4, !dbg !10270
  %32 = load i32, i32* %start_line.addr, align 4, !dbg !10272
  %sub24 = sub nsw i32 0, %32, !dbg !10273
  %cmp25 = icmp slt i32 %31, %sub24, !dbg !10274
  br i1 %cmp25, label %if.then30, label %lor.lhs.false, !dbg !10275

lor.lhs.false:                                    ; preds = %for.body23
  %33 = load i32, i32* %current_y, align 4, !dbg !10276
  %34 = load i32, i32* %start_line.addr, align 4, !dbg !10277
  %add27 = add nsw i32 %33, %34, !dbg !10278
  %35 = load i32, i32* %frame_height.addr, align 4, !dbg !10279
  %cmp28 = icmp sge i32 %add27, %35, !dbg !10280
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !10281

if.then30:                                        ; preds = %lor.lhs.false, %for.body23
  br label %for.inc79, !dbg !10282

if.end31:                                         ; preds = %lor.lhs.false
  %36 = load i32, i32* %j, align 4, !dbg !10284
  %37 = load i32, i32* %size_x, align 4, !dbg !10286
  %sub32 = sub nsw i32 %36, %37, !dbg !10287
  store i32 %sub32, i32* %current_x, align 4, !dbg !10288
  br label %for.cond33, !dbg !10289

for.cond33:                                       ; preds = %for.inc, %if.end31
  %38 = load i32, i32* %current_x, align 4, !dbg !10290
  %39 = load i32, i32* %j, align 4, !dbg !10292
  %40 = load i32, i32* %size_x, align 4, !dbg !10293
  %add34 = add nsw i32 %39, %40, !dbg !10294
  %cmp35 = icmp sle i32 %38, %add34, !dbg !10295
  br i1 %cmp35, label %for.body37, label %for.end, !dbg !10296

for.body37:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10297, metadata !DIExpression()), !dbg !10299
  %41 = load i32, i32* %current_y, align 4, !dbg !10300
  %42 = load i32, i32* %start_line.addr, align 4, !dbg !10300
  %add38 = add nsw i32 %41, %42, !dbg !10300
  %43 = load i32, i32* %x.addr, align 4, !dbg !10300
  %mul39 = mul nsw i32 %add38, %43, !dbg !10300
  %44 = load i32, i32* %current_x, align 4, !dbg !10300
  %add40 = add nsw i32 %mul39, %44, !dbg !10300
  %mul41 = mul nsw i32 %add40, 4, !dbg !10300
  store i32 %mul41, i32* %index, align 4, !dbg !10299
  %45 = load i32, i32* %current_x, align 4, !dbg !10301
  %cmp42 = icmp slt i32 %45, 0, !dbg !10303
  br i1 %cmp42, label %if.then47, label %lor.lhs.false44, !dbg !10304

lor.lhs.false44:                                  ; preds = %for.body37
  %46 = load i32, i32* %current_x, align 4, !dbg !10305
  %47 = load i32, i32* %frame_width.addr, align 4, !dbg !10306
  %cmp45 = icmp sge i32 %46, %47, !dbg !10307
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !10308

if.then47:                                        ; preds = %lor.lhs.false44, %for.body37
  br label %for.inc, !dbg !10309

if.end48:                                         ; preds = %lor.lhs.false44
  %48 = load i32, i32* %size_x, align 4, !dbg !10311
  %cmp49 = icmp ne i32 %48, 0, !dbg !10313
  br i1 %cmp49, label %land.lhs.true, label %if.else61, !dbg !10314

land.lhs.true:                                    ; preds = %if.end48
  %49 = load i32, i32* %size_y, align 4, !dbg !10315
  %cmp51 = icmp ne i32 %49, 0, !dbg !10316
  br i1 %cmp51, label %if.then53, label %if.else61, !dbg !10317

if.then53:                                        ; preds = %land.lhs.true
  %50 = load float*, float** %gausstab_x, align 8, !dbg !10318
  %51 = load i32, i32* %current_x, align 4, !dbg !10320
  %52 = load i32, i32* %j, align 4, !dbg !10321
  %sub54 = sub nsw i32 %51, %52, !dbg !10322
  %53 = load i32, i32* %size_x, align 4, !dbg !10323
  %add55 = add nsw i32 %sub54, %53, !dbg !10324
  %idxprom = sext i32 %add55 to i64, !dbg !10318
  %arrayidx = getelementptr inbounds float, float* %50, i64 %idxprom, !dbg !10318
  %54 = load float, float* %arrayidx, align 4, !dbg !10318
  %55 = load float*, float** %gausstab_y, align 8, !dbg !10325
  %56 = load i32, i32* %current_y, align 4, !dbg !10326
  %57 = load i32, i32* %i, align 4, !dbg !10327
  %sub56 = sub nsw i32 %56, %57, !dbg !10328
  %58 = load i32, i32* %size_y, align 4, !dbg !10329
  %add57 = add nsw i32 %sub56, %58, !dbg !10330
  %idxprom58 = sext i32 %add57 to i64, !dbg !10325
  %arrayidx59 = getelementptr inbounds float, float* %55, i64 %idxprom58, !dbg !10325
  %59 = load float, float* %arrayidx59, align 4, !dbg !10325
  %mul60 = fmul float %54, %59, !dbg !10331
  store float %mul60, float* %weight, align 4, !dbg !10332
  br label %if.end75, !dbg !10333

if.else61:                                        ; preds = %land.lhs.true, %if.end48
  %60 = load i32, i32* %size_x, align 4, !dbg !10334
  %cmp62 = icmp eq i32 %60, 0, !dbg !10336
  br i1 %cmp62, label %if.then64, label %if.else69, !dbg !10337

if.then64:                                        ; preds = %if.else61
  %61 = load float*, float** %gausstab_y, align 8, !dbg !10338
  %62 = load i32, i32* %current_y, align 4, !dbg !10340
  %63 = load i32, i32* %i, align 4, !dbg !10341
  %sub65 = sub nsw i32 %62, %63, !dbg !10342
  %64 = load i32, i32* %size_y, align 4, !dbg !10343
  %add66 = add nsw i32 %sub65, %64, !dbg !10344
  %idxprom67 = sext i32 %add66 to i64, !dbg !10338
  %arrayidx68 = getelementptr inbounds float, float* %61, i64 %idxprom67, !dbg !10338
  %65 = load float, float* %arrayidx68, align 4, !dbg !10338
  store float %65, float* %weight, align 4, !dbg !10345
  br label %if.end74, !dbg !10346

if.else69:                                        ; preds = %if.else61
  %66 = load float*, float** %gausstab_x, align 8, !dbg !10347
  %67 = load i32, i32* %current_x, align 4, !dbg !10349
  %68 = load i32, i32* %j, align 4, !dbg !10350
  %sub70 = sub nsw i32 %67, %68, !dbg !10351
  %69 = load i32, i32* %size_x, align 4, !dbg !10352
  %add71 = add nsw i32 %sub70, %69, !dbg !10353
  %idxprom72 = sext i32 %add71 to i64, !dbg !10347
  %arrayidx73 = getelementptr inbounds float, float* %66, i64 %idxprom72, !dbg !10347
  %70 = load float, float* %arrayidx73, align 4, !dbg !10347
  store float %70, float* %weight, align 4, !dbg !10354
  br label %if.end74

if.end74:                                         ; preds = %if.else69, %if.then64
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then53
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 0, !dbg !10355
  %71 = load float*, float** %rect.addr, align 8, !dbg !10356
  %72 = load i32, i32* %index, align 4, !dbg !10357
  %idxprom76 = sext i32 %72 to i64, !dbg !10356
  %arrayidx77 = getelementptr inbounds float, float* %71, i64 %idxprom76, !dbg !10356
  %73 = load float, float* %weight, align 4, !dbg !10358
  call void @madd_v4_v4fl(float* %arraydecay, float* %arrayidx77, float %73), !dbg !10359
  %74 = load float, float* %weight, align 4, !dbg !10360
  %75 = load float, float* %accum_weight, align 4, !dbg !10361
  %add78 = fadd float %75, %74, !dbg !10361
  store float %add78, float* %accum_weight, align 4, !dbg !10361
  br label %for.inc, !dbg !10362

for.inc:                                          ; preds = %if.end75, %if.then47
  %76 = load i32, i32* %current_x, align 4, !dbg !10363
  %inc = add nsw i32 %76, 1, !dbg !10363
  store i32 %inc, i32* %current_x, align 4, !dbg !10363
  br label %for.cond33, !dbg !10364, !llvm.loop !10365

for.end:                                          ; preds = %for.cond33
  br label %for.inc79, !dbg !10367

for.inc79:                                        ; preds = %for.end, %if.then30
  %77 = load i32, i32* %current_y, align 4, !dbg !10368
  %inc80 = add nsw i32 %77, 1, !dbg !10368
  store i32 %inc80, i32* %current_y, align 4, !dbg !10368
  br label %for.cond19, !dbg !10369, !llvm.loop !10370

for.end81:                                        ; preds = %for.cond19
  %78 = load float*, float** %out.addr, align 8, !dbg !10372
  %79 = load i32, i32* %out_index, align 4, !dbg !10373
  %idxprom82 = sext i32 %79 to i64, !dbg !10372
  %arrayidx83 = getelementptr inbounds float, float* %78, i64 %idxprom82, !dbg !10372
  %arraydecay84 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 0, !dbg !10374
  %80 = load float, float* %accum_weight, align 4, !dbg !10375
  %div = fdiv float 1.000000e+00, %80, !dbg !10376
  call void @mul_v4_v4fl(float* %arrayidx83, float* %arraydecay84, float %div), !dbg !10377
  br label %for.inc85, !dbg !10378

for.inc85:                                        ; preds = %for.end81
  %81 = load i32, i32* %j, align 4, !dbg !10379
  %inc86 = add nsw i32 %81, 1, !dbg !10379
  store i32 %inc86, i32* %j, align 4, !dbg !10379
  br label %for.cond13, !dbg !10380, !llvm.loop !10381

for.end87:                                        ; preds = %for.cond13
  br label %for.inc88, !dbg !10383

for.inc88:                                        ; preds = %for.end87
  %82 = load i32, i32* %i, align 4, !dbg !10384
  %inc89 = add nsw i32 %82, 1, !dbg !10384
  store i32 %inc89, i32* %i, align 4, !dbg !10384
  br label %for.cond, !dbg !10385, !llvm.loop !10386

for.end90:                                        ; preds = %for.cond
  %83 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10388
  %84 = load float*, float** %gausstab_x, align 8, !dbg !10389
  %85 = bitcast float* %84 to i8*, !dbg !10389
  call void %83(i8* %85), !dbg !10388
  %86 = load float*, float** %gausstab_x, align 8, !dbg !10390
  %87 = load float*, float** %gausstab_y, align 8, !dbg !10392
  %cmp91 = icmp ne float* %86, %87, !dbg !10393
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !10394

if.then93:                                        ; preds = %for.end90
  %88 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10395
  %89 = load float*, float** %gausstab_y, align 8, !dbg !10397
  %90 = bitcast float* %89 to i8*, !dbg !10397
  call void %88(i8* %90), !dbg !10395
  br label %if.end94, !dbg !10398

if.end94:                                         ; preds = %if.then93, %for.end90
  ret void, !dbg !10399
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_gaussian_blur_effect_byte(%struct.Sequence* %seq, i32 %start_line, i32 %x, i32 %y, i32 %frame_width, i32 %frame_height, i8* %rect, i8* %out) #0 !dbg !10400 {
entry:
  %seq.addr = alloca %struct.Sequence*, align 8
  %start_line.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %frame_width.addr = alloca i32, align 4
  %frame_height.addr = alloca i32, align 4
  %rect.addr = alloca i8*, align 8
  %out.addr = alloca i8*, align 8
  %data = alloca %struct.GaussianBlurVars*, align 8
  %size_x = alloca i32, align 4
  %size_y = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %gausstab_x = alloca float*, align 8
  %gausstab_y = alloca float*, align 8
  %out_index = alloca i32, align 4
  %current_x = alloca i32, align 4
  %current_y = alloca i32, align 4
  %accum = alloca [4 x float], align 16
  %accum_weight = alloca float, align 4
  %weight = alloca float, align 4
  %index = alloca i32, align 4
  store %struct.Sequence* %seq, %struct.Sequence** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq.addr, metadata !10403, metadata !DIExpression()), !dbg !10404
  store i32 %start_line, i32* %start_line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_line.addr, metadata !10405, metadata !DIExpression()), !dbg !10406
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10407, metadata !DIExpression()), !dbg !10408
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10409, metadata !DIExpression()), !dbg !10410
  store i32 %frame_width, i32* %frame_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_width.addr, metadata !10411, metadata !DIExpression()), !dbg !10412
  store i32 %frame_height, i32* %frame_height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame_height.addr, metadata !10413, metadata !DIExpression()), !dbg !10414
  store i8* %rect, i8** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rect.addr, metadata !10415, metadata !DIExpression()), !dbg !10416
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.declare(metadata %struct.GaussianBlurVars** %data, metadata !10419, metadata !DIExpression()), !dbg !10420
  %0 = load %struct.Sequence*, %struct.Sequence** %seq.addr, align 8, !dbg !10421
  %effectdata = getelementptr inbounds %struct.Sequence, %struct.Sequence* %0, i32 0, i32 43, !dbg !10422
  %1 = load i8*, i8** %effectdata, align 8, !dbg !10422
  %2 = bitcast i8* %1 to %struct.GaussianBlurVars*, !dbg !10421
  store %struct.GaussianBlurVars* %2, %struct.GaussianBlurVars** %data, align 8, !dbg !10420
  call void @llvm.dbg.declare(metadata i32* %size_x, metadata !10423, metadata !DIExpression()), !dbg !10424
  %3 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10425
  %size_x1 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %3, i32 0, i32 0, !dbg !10426
  %4 = load float, float* %size_x1, align 4, !dbg !10426
  %add = fadd float %4, 5.000000e-01, !dbg !10427
  %conv = fptosi float %add to i32, !dbg !10428
  store i32 %conv, i32* %size_x, align 4, !dbg !10424
  call void @llvm.dbg.declare(metadata i32* %size_y, metadata !10429, metadata !DIExpression()), !dbg !10430
  %5 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10431
  %size_y2 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %5, i32 0, i32 1, !dbg !10432
  %6 = load float, float* %size_y2, align 4, !dbg !10432
  %add3 = fadd float %6, 5.000000e-01, !dbg !10433
  %conv4 = fptosi float %add3 to i32, !dbg !10434
  store i32 %conv4, i32* %size_y, align 4, !dbg !10430
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10435, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10437, metadata !DIExpression()), !dbg !10438
  call void @llvm.dbg.declare(metadata float** %gausstab_x, metadata !10439, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.declare(metadata float** %gausstab_y, metadata !10441, metadata !DIExpression()), !dbg !10442
  %7 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10443
  %size_x5 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %7, i32 0, i32 0, !dbg !10444
  %8 = load float, float* %size_x5, align 4, !dbg !10444
  %9 = load i32, i32* %size_x, align 4, !dbg !10445
  %call = call float* @make_gaussian_blur_kernel(float %8, i32 %9), !dbg !10446
  store float* %call, float** %gausstab_x, align 8, !dbg !10447
  %10 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10448
  %size_x6 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %10, i32 0, i32 0, !dbg !10450
  %11 = load float, float* %size_x6, align 4, !dbg !10450
  %12 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10451
  %size_y7 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %12, i32 0, i32 1, !dbg !10452
  %13 = load float, float* %size_y7, align 4, !dbg !10452
  %cmp = fcmp oeq float %11, %13, !dbg !10453
  br i1 %cmp, label %if.then, label %if.else, !dbg !10454

if.then:                                          ; preds = %entry
  %14 = load float*, float** %gausstab_x, align 8, !dbg !10455
  store float* %14, float** %gausstab_y, align 8, !dbg !10457
  br label %if.end, !dbg !10458

if.else:                                          ; preds = %entry
  %15 = load %struct.GaussianBlurVars*, %struct.GaussianBlurVars** %data, align 8, !dbg !10459
  %size_y9 = getelementptr inbounds %struct.GaussianBlurVars, %struct.GaussianBlurVars* %15, i32 0, i32 1, !dbg !10461
  %16 = load float, float* %size_y9, align 4, !dbg !10461
  %17 = load i32, i32* %size_y, align 4, !dbg !10462
  %call10 = call float* @make_gaussian_blur_kernel(float %16, i32 %17), !dbg !10463
  store float* %call10, float** %gausstab_y, align 8, !dbg !10464
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !10465
  br label %for.cond, !dbg !10467

for.cond:                                         ; preds = %for.inc137, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !10468
  %19 = load i32, i32* %y.addr, align 4, !dbg !10470
  %cmp11 = icmp slt i32 %18, %19, !dbg !10471
  br i1 %cmp11, label %for.body, label %for.end139, !dbg !10472

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !10473
  br label %for.cond13, !dbg !10476

for.cond13:                                       ; preds = %for.inc134, %for.body
  %20 = load i32, i32* %j, align 4, !dbg !10477
  %21 = load i32, i32* %x.addr, align 4, !dbg !10479
  %cmp14 = icmp slt i32 %20, %21, !dbg !10480
  br i1 %cmp14, label %for.body16, label %for.end136, !dbg !10481

for.body16:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata i32* %out_index, metadata !10482, metadata !DIExpression()), !dbg !10484
  %22 = load i32, i32* %i, align 4, !dbg !10485
  %23 = load i32, i32* %x.addr, align 4, !dbg !10485
  %mul = mul nsw i32 %22, %23, !dbg !10485
  %24 = load i32, i32* %j, align 4, !dbg !10485
  %add17 = add nsw i32 %mul, %24, !dbg !10485
  %mul18 = mul nsw i32 %add17, 4, !dbg !10485
  store i32 %mul18, i32* %out_index, align 4, !dbg !10484
  call void @llvm.dbg.declare(metadata i32* %current_x, metadata !10486, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.declare(metadata i32* %current_y, metadata !10488, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.declare(metadata [4 x float]* %accum, metadata !10490, metadata !DIExpression()), !dbg !10491
  %25 = bitcast [4 x float]* %accum to i8*, !dbg !10491
  call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 0, i64 16, i1 false), !dbg !10491
  call void @llvm.dbg.declare(metadata float* %accum_weight, metadata !10492, metadata !DIExpression()), !dbg !10493
  store float 0.000000e+00, float* %accum_weight, align 4, !dbg !10493
  %26 = load i32, i32* %i, align 4, !dbg !10494
  %27 = load i32, i32* %size_y, align 4, !dbg !10496
  %sub = sub nsw i32 %26, %27, !dbg !10497
  store i32 %sub, i32* %current_y, align 4, !dbg !10498
  br label %for.cond19, !dbg !10499

for.cond19:                                       ; preds = %for.inc108, %for.body16
  %28 = load i32, i32* %current_y, align 4, !dbg !10500
  %29 = load i32, i32* %i, align 4, !dbg !10502
  %30 = load i32, i32* %size_y, align 4, !dbg !10503
  %add20 = add nsw i32 %29, %30, !dbg !10504
  %cmp21 = icmp sle i32 %28, %add20, !dbg !10505
  br i1 %cmp21, label %for.body23, label %for.end110, !dbg !10506

for.body23:                                       ; preds = %for.cond19
  %31 = load i32, i32* %current_y, align 4, !dbg !10507
  %32 = load i32, i32* %start_line.addr, align 4, !dbg !10510
  %sub24 = sub nsw i32 0, %32, !dbg !10511
  %cmp25 = icmp slt i32 %31, %sub24, !dbg !10512
  br i1 %cmp25, label %if.then30, label %lor.lhs.false, !dbg !10513

lor.lhs.false:                                    ; preds = %for.body23
  %33 = load i32, i32* %current_y, align 4, !dbg !10514
  %34 = load i32, i32* %start_line.addr, align 4, !dbg !10515
  %add27 = add nsw i32 %33, %34, !dbg !10516
  %35 = load i32, i32* %frame_height.addr, align 4, !dbg !10517
  %cmp28 = icmp sge i32 %add27, %35, !dbg !10518
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !10519

if.then30:                                        ; preds = %lor.lhs.false, %for.body23
  br label %for.inc108, !dbg !10520

if.end31:                                         ; preds = %lor.lhs.false
  %36 = load i32, i32* %j, align 4, !dbg !10522
  %37 = load i32, i32* %size_x, align 4, !dbg !10524
  %sub32 = sub nsw i32 %36, %37, !dbg !10525
  store i32 %sub32, i32* %current_x, align 4, !dbg !10526
  br label %for.cond33, !dbg !10527

for.cond33:                                       ; preds = %for.inc, %if.end31
  %38 = load i32, i32* %current_x, align 4, !dbg !10528
  %39 = load i32, i32* %j, align 4, !dbg !10530
  %40 = load i32, i32* %size_x, align 4, !dbg !10531
  %add34 = add nsw i32 %39, %40, !dbg !10532
  %cmp35 = icmp sle i32 %38, %add34, !dbg !10533
  br i1 %cmp35, label %for.body37, label %for.end, !dbg !10534

for.body37:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata float* %weight, metadata !10535, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10538, metadata !DIExpression()), !dbg !10539
  %41 = load i32, i32* %current_y, align 4, !dbg !10540
  %42 = load i32, i32* %start_line.addr, align 4, !dbg !10540
  %add38 = add nsw i32 %41, %42, !dbg !10540
  %43 = load i32, i32* %x.addr, align 4, !dbg !10540
  %mul39 = mul nsw i32 %add38, %43, !dbg !10540
  %44 = load i32, i32* %current_x, align 4, !dbg !10540
  %add40 = add nsw i32 %mul39, %44, !dbg !10540
  %mul41 = mul nsw i32 %add40, 4, !dbg !10540
  store i32 %mul41, i32* %index, align 4, !dbg !10539
  %45 = load i32, i32* %current_x, align 4, !dbg !10541
  %cmp42 = icmp slt i32 %45, 0, !dbg !10543
  br i1 %cmp42, label %if.then47, label %lor.lhs.false44, !dbg !10544

lor.lhs.false44:                                  ; preds = %for.body37
  %46 = load i32, i32* %current_x, align 4, !dbg !10545
  %47 = load i32, i32* %frame_width.addr, align 4, !dbg !10546
  %cmp45 = icmp sge i32 %46, %47, !dbg !10547
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !10548

if.then47:                                        ; preds = %lor.lhs.false44, %for.body37
  br label %for.inc, !dbg !10549

if.end48:                                         ; preds = %lor.lhs.false44
  %48 = load i32, i32* %size_x, align 4, !dbg !10551
  %cmp49 = icmp ne i32 %48, 0, !dbg !10553
  br i1 %cmp49, label %land.lhs.true, label %if.else61, !dbg !10554

land.lhs.true:                                    ; preds = %if.end48
  %49 = load i32, i32* %size_y, align 4, !dbg !10555
  %cmp51 = icmp ne i32 %49, 0, !dbg !10556
  br i1 %cmp51, label %if.then53, label %if.else61, !dbg !10557

if.then53:                                        ; preds = %land.lhs.true
  %50 = load float*, float** %gausstab_x, align 8, !dbg !10558
  %51 = load i32, i32* %current_x, align 4, !dbg !10560
  %52 = load i32, i32* %j, align 4, !dbg !10561
  %sub54 = sub nsw i32 %51, %52, !dbg !10562
  %53 = load i32, i32* %size_x, align 4, !dbg !10563
  %add55 = add nsw i32 %sub54, %53, !dbg !10564
  %idxprom = sext i32 %add55 to i64, !dbg !10558
  %arrayidx = getelementptr inbounds float, float* %50, i64 %idxprom, !dbg !10558
  %54 = load float, float* %arrayidx, align 4, !dbg !10558
  %55 = load float*, float** %gausstab_y, align 8, !dbg !10565
  %56 = load i32, i32* %current_y, align 4, !dbg !10566
  %57 = load i32, i32* %i, align 4, !dbg !10567
  %sub56 = sub nsw i32 %56, %57, !dbg !10568
  %58 = load i32, i32* %size_y, align 4, !dbg !10569
  %add57 = add nsw i32 %sub56, %58, !dbg !10570
  %idxprom58 = sext i32 %add57 to i64, !dbg !10565
  %arrayidx59 = getelementptr inbounds float, float* %55, i64 %idxprom58, !dbg !10565
  %59 = load float, float* %arrayidx59, align 4, !dbg !10565
  %mul60 = fmul float %54, %59, !dbg !10571
  store float %mul60, float* %weight, align 4, !dbg !10572
  br label %if.end75, !dbg !10573

if.else61:                                        ; preds = %land.lhs.true, %if.end48
  %60 = load i32, i32* %size_x, align 4, !dbg !10574
  %cmp62 = icmp eq i32 %60, 0, !dbg !10576
  br i1 %cmp62, label %if.then64, label %if.else69, !dbg !10577

if.then64:                                        ; preds = %if.else61
  %61 = load float*, float** %gausstab_y, align 8, !dbg !10578
  %62 = load i32, i32* %current_y, align 4, !dbg !10580
  %63 = load i32, i32* %i, align 4, !dbg !10581
  %sub65 = sub nsw i32 %62, %63, !dbg !10582
  %64 = load i32, i32* %size_y, align 4, !dbg !10583
  %add66 = add nsw i32 %sub65, %64, !dbg !10584
  %idxprom67 = sext i32 %add66 to i64, !dbg !10578
  %arrayidx68 = getelementptr inbounds float, float* %61, i64 %idxprom67, !dbg !10578
  %65 = load float, float* %arrayidx68, align 4, !dbg !10578
  store float %65, float* %weight, align 4, !dbg !10585
  br label %if.end74, !dbg !10586

if.else69:                                        ; preds = %if.else61
  %66 = load float*, float** %gausstab_x, align 8, !dbg !10587
  %67 = load i32, i32* %current_x, align 4, !dbg !10589
  %68 = load i32, i32* %j, align 4, !dbg !10590
  %sub70 = sub nsw i32 %67, %68, !dbg !10591
  %69 = load i32, i32* %size_x, align 4, !dbg !10592
  %add71 = add nsw i32 %sub70, %69, !dbg !10593
  %idxprom72 = sext i32 %add71 to i64, !dbg !10587
  %arrayidx73 = getelementptr inbounds float, float* %66, i64 %idxprom72, !dbg !10587
  %70 = load float, float* %arrayidx73, align 4, !dbg !10587
  store float %70, float* %weight, align 4, !dbg !10594
  br label %if.end74

if.end74:                                         ; preds = %if.else69, %if.then64
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then53
  %71 = load i8*, i8** %rect.addr, align 8, !dbg !10595
  %72 = load i32, i32* %index, align 4, !dbg !10596
  %idxprom76 = sext i32 %72 to i64, !dbg !10595
  %arrayidx77 = getelementptr inbounds i8, i8* %71, i64 %idxprom76, !dbg !10595
  %73 = load i8, i8* %arrayidx77, align 1, !dbg !10595
  %conv78 = zext i8 %73 to i32, !dbg !10595
  %conv79 = sitofp i32 %conv78 to float, !dbg !10595
  %74 = load float, float* %weight, align 4, !dbg !10597
  %mul80 = fmul float %conv79, %74, !dbg !10598
  %arrayidx81 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 0, !dbg !10599
  %75 = load float, float* %arrayidx81, align 16, !dbg !10600
  %add82 = fadd float %75, %mul80, !dbg !10600
  store float %add82, float* %arrayidx81, align 16, !dbg !10600
  %76 = load i8*, i8** %rect.addr, align 8, !dbg !10601
  %77 = load i32, i32* %index, align 4, !dbg !10602
  %add83 = add nsw i32 %77, 1, !dbg !10603
  %idxprom84 = sext i32 %add83 to i64, !dbg !10601
  %arrayidx85 = getelementptr inbounds i8, i8* %76, i64 %idxprom84, !dbg !10601
  %78 = load i8, i8* %arrayidx85, align 1, !dbg !10601
  %conv86 = zext i8 %78 to i32, !dbg !10601
  %conv87 = sitofp i32 %conv86 to float, !dbg !10601
  %79 = load float, float* %weight, align 4, !dbg !10604
  %mul88 = fmul float %conv87, %79, !dbg !10605
  %arrayidx89 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 1, !dbg !10606
  %80 = load float, float* %arrayidx89, align 4, !dbg !10607
  %add90 = fadd float %80, %mul88, !dbg !10607
  store float %add90, float* %arrayidx89, align 4, !dbg !10607
  %81 = load i8*, i8** %rect.addr, align 8, !dbg !10608
  %82 = load i32, i32* %index, align 4, !dbg !10609
  %add91 = add nsw i32 %82, 2, !dbg !10610
  %idxprom92 = sext i32 %add91 to i64, !dbg !10608
  %arrayidx93 = getelementptr inbounds i8, i8* %81, i64 %idxprom92, !dbg !10608
  %83 = load i8, i8* %arrayidx93, align 1, !dbg !10608
  %conv94 = zext i8 %83 to i32, !dbg !10608
  %conv95 = sitofp i32 %conv94 to float, !dbg !10608
  %84 = load float, float* %weight, align 4, !dbg !10611
  %mul96 = fmul float %conv95, %84, !dbg !10612
  %arrayidx97 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 2, !dbg !10613
  %85 = load float, float* %arrayidx97, align 8, !dbg !10614
  %add98 = fadd float %85, %mul96, !dbg !10614
  store float %add98, float* %arrayidx97, align 8, !dbg !10614
  %86 = load i8*, i8** %rect.addr, align 8, !dbg !10615
  %87 = load i32, i32* %index, align 4, !dbg !10616
  %add99 = add nsw i32 %87, 3, !dbg !10617
  %idxprom100 = sext i32 %add99 to i64, !dbg !10615
  %arrayidx101 = getelementptr inbounds i8, i8* %86, i64 %idxprom100, !dbg !10615
  %88 = load i8, i8* %arrayidx101, align 1, !dbg !10615
  %conv102 = zext i8 %88 to i32, !dbg !10615
  %conv103 = sitofp i32 %conv102 to float, !dbg !10615
  %89 = load float, float* %weight, align 4, !dbg !10618
  %mul104 = fmul float %conv103, %89, !dbg !10619
  %arrayidx105 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 3, !dbg !10620
  %90 = load float, float* %arrayidx105, align 4, !dbg !10621
  %add106 = fadd float %90, %mul104, !dbg !10621
  store float %add106, float* %arrayidx105, align 4, !dbg !10621
  %91 = load float, float* %weight, align 4, !dbg !10622
  %92 = load float, float* %accum_weight, align 4, !dbg !10623
  %add107 = fadd float %92, %91, !dbg !10623
  store float %add107, float* %accum_weight, align 4, !dbg !10623
  br label %for.inc, !dbg !10624

for.inc:                                          ; preds = %if.end75, %if.then47
  %93 = load i32, i32* %current_x, align 4, !dbg !10625
  %inc = add nsw i32 %93, 1, !dbg !10625
  store i32 %inc, i32* %current_x, align 4, !dbg !10625
  br label %for.cond33, !dbg !10626, !llvm.loop !10627

for.end:                                          ; preds = %for.cond33
  br label %for.inc108, !dbg !10629

for.inc108:                                       ; preds = %for.end, %if.then30
  %94 = load i32, i32* %current_y, align 4, !dbg !10630
  %inc109 = add nsw i32 %94, 1, !dbg !10630
  store i32 %inc109, i32* %current_y, align 4, !dbg !10630
  br label %for.cond19, !dbg !10631, !llvm.loop !10632

for.end110:                                       ; preds = %for.cond19
  %arrayidx111 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 0, !dbg !10634
  %95 = load float, float* %arrayidx111, align 16, !dbg !10634
  %96 = load float, float* %accum_weight, align 4, !dbg !10635
  %div = fdiv float %95, %96, !dbg !10636
  %conv112 = fptoui float %div to i8, !dbg !10634
  %97 = load i8*, i8** %out.addr, align 8, !dbg !10637
  %98 = load i32, i32* %out_index, align 4, !dbg !10638
  %add113 = add nsw i32 %98, 0, !dbg !10639
  %idxprom114 = sext i32 %add113 to i64, !dbg !10637
  %arrayidx115 = getelementptr inbounds i8, i8* %97, i64 %idxprom114, !dbg !10637
  store i8 %conv112, i8* %arrayidx115, align 1, !dbg !10640
  %arrayidx116 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 1, !dbg !10641
  %99 = load float, float* %arrayidx116, align 4, !dbg !10641
  %100 = load float, float* %accum_weight, align 4, !dbg !10642
  %div117 = fdiv float %99, %100, !dbg !10643
  %conv118 = fptoui float %div117 to i8, !dbg !10641
  %101 = load i8*, i8** %out.addr, align 8, !dbg !10644
  %102 = load i32, i32* %out_index, align 4, !dbg !10645
  %add119 = add nsw i32 %102, 1, !dbg !10646
  %idxprom120 = sext i32 %add119 to i64, !dbg !10644
  %arrayidx121 = getelementptr inbounds i8, i8* %101, i64 %idxprom120, !dbg !10644
  store i8 %conv118, i8* %arrayidx121, align 1, !dbg !10647
  %arrayidx122 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 2, !dbg !10648
  %103 = load float, float* %arrayidx122, align 8, !dbg !10648
  %104 = load float, float* %accum_weight, align 4, !dbg !10649
  %div123 = fdiv float %103, %104, !dbg !10650
  %conv124 = fptoui float %div123 to i8, !dbg !10648
  %105 = load i8*, i8** %out.addr, align 8, !dbg !10651
  %106 = load i32, i32* %out_index, align 4, !dbg !10652
  %add125 = add nsw i32 %106, 2, !dbg !10653
  %idxprom126 = sext i32 %add125 to i64, !dbg !10651
  %arrayidx127 = getelementptr inbounds i8, i8* %105, i64 %idxprom126, !dbg !10651
  store i8 %conv124, i8* %arrayidx127, align 1, !dbg !10654
  %arrayidx128 = getelementptr inbounds [4 x float], [4 x float]* %accum, i64 0, i64 3, !dbg !10655
  %107 = load float, float* %arrayidx128, align 4, !dbg !10655
  %108 = load float, float* %accum_weight, align 4, !dbg !10656
  %div129 = fdiv float %107, %108, !dbg !10657
  %conv130 = fptoui float %div129 to i8, !dbg !10655
  %109 = load i8*, i8** %out.addr, align 8, !dbg !10658
  %110 = load i32, i32* %out_index, align 4, !dbg !10659
  %add131 = add nsw i32 %110, 3, !dbg !10660
  %idxprom132 = sext i32 %add131 to i64, !dbg !10658
  %arrayidx133 = getelementptr inbounds i8, i8* %109, i64 %idxprom132, !dbg !10658
  store i8 %conv130, i8* %arrayidx133, align 1, !dbg !10661
  br label %for.inc134, !dbg !10662

for.inc134:                                       ; preds = %for.end110
  %111 = load i32, i32* %j, align 4, !dbg !10663
  %inc135 = add nsw i32 %111, 1, !dbg !10663
  store i32 %inc135, i32* %j, align 4, !dbg !10663
  br label %for.cond13, !dbg !10664, !llvm.loop !10665

for.end136:                                       ; preds = %for.cond13
  br label %for.inc137, !dbg !10667

for.inc137:                                       ; preds = %for.end136
  %112 = load i32, i32* %i, align 4, !dbg !10668
  %inc138 = add nsw i32 %112, 1, !dbg !10668
  store i32 %inc138, i32* %i, align 4, !dbg !10668
  br label %for.cond, !dbg !10669, !llvm.loop !10670

for.end139:                                       ; preds = %for.cond
  %113 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10672
  %114 = load float*, float** %gausstab_x, align 8, !dbg !10673
  %115 = bitcast float* %114 to i8*, !dbg !10673
  call void %113(i8* %115), !dbg !10672
  %116 = load float*, float** %gausstab_x, align 8, !dbg !10674
  %117 = load float*, float** %gausstab_y, align 8, !dbg !10676
  %cmp140 = icmp ne float* %116, %117, !dbg !10677
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !10678

if.then142:                                       ; preds = %for.end139
  %118 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10679
  %119 = load float*, float** %gausstab_y, align 8, !dbg !10681
  %120 = bitcast float* %119 to i8*, !dbg !10681
  call void %118(i8* %120), !dbg !10679
  br label %if.end143, !dbg !10682

if.end143:                                        ; preds = %if.then142, %for.end139
  ret void, !dbg !10683
}

; Function Attrs: noinline nounwind uwtable
define internal float* @make_gaussian_blur_kernel(float %rad, i32 %size) #0 !dbg !10684 {
entry:
  %rad.addr = alloca float, align 4
  %size.addr = alloca i32, align 4
  %gausstab = alloca float*, align 8
  %sum = alloca float, align 4
  %val = alloca float, align 4
  %fac = alloca float, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store float %rad, float* %rad.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rad.addr, metadata !10687, metadata !DIExpression()), !dbg !10688
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10689, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.declare(metadata float** %gausstab, metadata !10691, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.declare(metadata float* %sum, metadata !10693, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.declare(metadata float* %val, metadata !10695, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.declare(metadata float* %fac, metadata !10697, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10699, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10701, metadata !DIExpression()), !dbg !10702
  %0 = load i32, i32* %size.addr, align 4, !dbg !10703
  %mul = mul nsw i32 2, %0, !dbg !10704
  %add = add nsw i32 %mul, 1, !dbg !10705
  store i32 %add, i32* %n, align 4, !dbg !10706
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10707
  %2 = load i32, i32* %n, align 4, !dbg !10708
  %conv = sext i32 %2 to i64, !dbg !10708
  %mul1 = mul i64 4, %conv, !dbg !10709
  %call = call i8* %1(i64 %mul1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.make_gaussian_blur_kernel, i64 0, i64 0)), !dbg !10707
  %3 = bitcast i8* %call to float*, !dbg !10710
  store float* %3, float** %gausstab, align 8, !dbg !10711
  store float 0.000000e+00, float* %sum, align 4, !dbg !10712
  %4 = load float, float* %rad.addr, align 4, !dbg !10713
  %cmp = fcmp ogt float %4, 0.000000e+00, !dbg !10714
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10713

cond.true:                                        ; preds = %entry
  %5 = load float, float* %rad.addr, align 4, !dbg !10715
  %div = fdiv float 1.000000e+00, %5, !dbg !10716
  br label %cond.end, !dbg !10713

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10713

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !10713
  store float %cond, float* %fac, align 4, !dbg !10717
  %6 = load i32, i32* %size.addr, align 4, !dbg !10718
  %sub = sub nsw i32 0, %6, !dbg !10720
  store i32 %sub, i32* %i, align 4, !dbg !10721
  br label %for.cond, !dbg !10722

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i32, i32* %i, align 4, !dbg !10723
  %8 = load i32, i32* %size.addr, align 4, !dbg !10725
  %cmp3 = icmp sle i32 %7, %8, !dbg !10726
  br i1 %cmp3, label %for.body, label %for.end, !dbg !10727

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !10728
  %conv5 = sitofp i32 %9 to float, !dbg !10730
  %10 = load float, float* %fac, align 4, !dbg !10731
  %mul6 = fmul float %conv5, %10, !dbg !10732
  %call7 = call float @RE_filter_value(i32 5, float %mul6), !dbg !10733
  store float %call7, float* %val, align 4, !dbg !10734
  %11 = load float, float* %val, align 4, !dbg !10735
  %12 = load float, float* %sum, align 4, !dbg !10736
  %add8 = fadd float %12, %11, !dbg !10736
  store float %add8, float* %sum, align 4, !dbg !10736
  %13 = load float, float* %val, align 4, !dbg !10737
  %14 = load float*, float** %gausstab, align 8, !dbg !10738
  %15 = load i32, i32* %i, align 4, !dbg !10739
  %16 = load i32, i32* %size.addr, align 4, !dbg !10740
  %add9 = add nsw i32 %15, %16, !dbg !10741
  %idxprom = sext i32 %add9 to i64, !dbg !10738
  %arrayidx = getelementptr inbounds float, float* %14, i64 %idxprom, !dbg !10738
  store float %13, float* %arrayidx, align 4, !dbg !10742
  br label %for.inc, !dbg !10743

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10744
  %inc = add nsw i32 %17, 1, !dbg !10744
  store i32 %inc, i32* %i, align 4, !dbg !10744
  br label %for.cond, !dbg !10745, !llvm.loop !10746

for.end:                                          ; preds = %for.cond
  %18 = load float, float* %sum, align 4, !dbg !10748
  %div10 = fdiv float 1.000000e+00, %18, !dbg !10749
  store float %div10, float* %sum, align 4, !dbg !10750
  store i32 0, i32* %i, align 4, !dbg !10751
  br label %for.cond11, !dbg !10753

for.cond11:                                       ; preds = %for.inc18, %for.end
  %19 = load i32, i32* %i, align 4, !dbg !10754
  %20 = load i32, i32* %n, align 4, !dbg !10756
  %cmp12 = icmp slt i32 %19, %20, !dbg !10757
  br i1 %cmp12, label %for.body14, label %for.end20, !dbg !10758

for.body14:                                       ; preds = %for.cond11
  %21 = load float, float* %sum, align 4, !dbg !10759
  %22 = load float*, float** %gausstab, align 8, !dbg !10760
  %23 = load i32, i32* %i, align 4, !dbg !10761
  %idxprom15 = sext i32 %23 to i64, !dbg !10760
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 %idxprom15, !dbg !10760
  %24 = load float, float* %arrayidx16, align 4, !dbg !10762
  %mul17 = fmul float %24, %21, !dbg !10762
  store float %mul17, float* %arrayidx16, align 4, !dbg !10762
  br label %for.inc18, !dbg !10760

for.inc18:                                        ; preds = %for.body14
  %25 = load i32, i32* %i, align 4, !dbg !10763
  %inc19 = add nsw i32 %25, 1, !dbg !10763
  store i32 %inc19, i32* %i, align 4, !dbg !10763
  br label %for.cond11, !dbg !10764, !llvm.loop !10765

for.end20:                                        ; preds = %for.cond11
  %26 = load float*, float** %gausstab, align 8, !dbg !10767
  ret float* %26, !dbg !10768
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v4_v4fl(float* %r, float* %a, float %f) #0 !dbg !10769 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10772, metadata !DIExpression()), !dbg !10773
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10774, metadata !DIExpression()), !dbg !10775
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !10776, metadata !DIExpression()), !dbg !10777
  %0 = load float*, float** %a.addr, align 8, !dbg !10778
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10778
  %1 = load float, float* %arrayidx, align 4, !dbg !10778
  %2 = load float, float* %f.addr, align 4, !dbg !10779
  %mul = fmul float %1, %2, !dbg !10780
  %3 = load float*, float** %r.addr, align 8, !dbg !10781
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !10781
  %4 = load float, float* %arrayidx1, align 4, !dbg !10782
  %add = fadd float %4, %mul, !dbg !10782
  store float %add, float* %arrayidx1, align 4, !dbg !10782
  %5 = load float*, float** %a.addr, align 8, !dbg !10783
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !10783
  %6 = load float, float* %arrayidx2, align 4, !dbg !10783
  %7 = load float, float* %f.addr, align 4, !dbg !10784
  %mul3 = fmul float %6, %7, !dbg !10785
  %8 = load float*, float** %r.addr, align 8, !dbg !10786
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !10786
  %9 = load float, float* %arrayidx4, align 4, !dbg !10787
  %add5 = fadd float %9, %mul3, !dbg !10787
  store float %add5, float* %arrayidx4, align 4, !dbg !10787
  %10 = load float*, float** %a.addr, align 8, !dbg !10788
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !10788
  %11 = load float, float* %arrayidx6, align 4, !dbg !10788
  %12 = load float, float* %f.addr, align 4, !dbg !10789
  %mul7 = fmul float %11, %12, !dbg !10790
  %13 = load float*, float** %r.addr, align 8, !dbg !10791
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !10791
  %14 = load float, float* %arrayidx8, align 4, !dbg !10792
  %add9 = fadd float %14, %mul7, !dbg !10792
  store float %add9, float* %arrayidx8, align 4, !dbg !10792
  %15 = load float*, float** %a.addr, align 8, !dbg !10793
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 3, !dbg !10793
  %16 = load float, float* %arrayidx10, align 4, !dbg !10793
  %17 = load float, float* %f.addr, align 4, !dbg !10794
  %mul11 = fmul float %16, %17, !dbg !10795
  %18 = load float*, float** %r.addr, align 8, !dbg !10796
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 3, !dbg !10796
  %19 = load float, float* %arrayidx12, align 4, !dbg !10797
  %add13 = fadd float %19, %mul11, !dbg !10797
  store float %add13, float* %arrayidx12, align 4, !dbg !10797
  ret void, !dbg !10798
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v4_v4fl(float* %r, float* %a, float %f) #0 !dbg !10799 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10800, metadata !DIExpression()), !dbg !10801
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10802, metadata !DIExpression()), !dbg !10803
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !10804, metadata !DIExpression()), !dbg !10805
  %0 = load float*, float** %a.addr, align 8, !dbg !10806
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10806
  %1 = load float, float* %arrayidx, align 4, !dbg !10806
  %2 = load float, float* %f.addr, align 4, !dbg !10807
  %mul = fmul float %1, %2, !dbg !10808
  %3 = load float*, float** %r.addr, align 8, !dbg !10809
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !10809
  store float %mul, float* %arrayidx1, align 4, !dbg !10810
  %4 = load float*, float** %a.addr, align 8, !dbg !10811
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !10811
  %5 = load float, float* %arrayidx2, align 4, !dbg !10811
  %6 = load float, float* %f.addr, align 4, !dbg !10812
  %mul3 = fmul float %5, %6, !dbg !10813
  %7 = load float*, float** %r.addr, align 8, !dbg !10814
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !10814
  store float %mul3, float* %arrayidx4, align 4, !dbg !10815
  %8 = load float*, float** %a.addr, align 8, !dbg !10816
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !10816
  %9 = load float, float* %arrayidx5, align 4, !dbg !10816
  %10 = load float, float* %f.addr, align 4, !dbg !10817
  %mul6 = fmul float %9, %10, !dbg !10818
  %11 = load float*, float** %r.addr, align 8, !dbg !10819
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !10819
  store float %mul6, float* %arrayidx7, align 4, !dbg !10820
  %12 = load float*, float** %a.addr, align 8, !dbg !10821
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 3, !dbg !10821
  %13 = load float, float* %arrayidx8, align 4, !dbg !10821
  %14 = load float, float* %f.addr, align 4, !dbg !10822
  %mul9 = fmul float %13, %14, !dbg !10823
  %15 = load float*, float** %r.addr, align 8, !dbg !10824
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 3, !dbg !10824
  store float %mul9, float* %arrayidx10, align 4, !dbg !10825
  ret void, !dbg !10826
}

declare dso_local float @RE_filter_value(i32, float) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!163, !164, !165}
!llvm.ident = !{!166}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gamma_tabs_init", scope: !2, file: !3, line: 592, type: !84, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !70, globals: !127, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/seqeffects.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !35, !64}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 335, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34}
!9 = !DIEnumerator(name: "SEQ_LEFTSEL", value: 2)
!10 = !DIEnumerator(name: "SEQ_RIGHTSEL", value: 4)
!11 = !DIEnumerator(name: "SEQ_OVERLAP", value: 8)
!12 = !DIEnumerator(name: "SEQ_FILTERY", value: 16)
!13 = !DIEnumerator(name: "SEQ_MUTE", value: 32)
!14 = !DIEnumerator(name: "SEQ_MAKE_PREMUL", value: 64)
!15 = !DIEnumerator(name: "SEQ_REVERSE_FRAMES", value: 128)
!16 = !DIEnumerator(name: "SEQ_IPO_FRAME_LOCKED", value: 256)
!17 = !DIEnumerator(name: "SEQ_EFFECT_NOT_LOADED", value: 512)
!18 = !DIEnumerator(name: "SEQ_FLAG_DELETE", value: 1024)
!19 = !DIEnumerator(name: "SEQ_FLIPX", value: 2048)
!20 = !DIEnumerator(name: "SEQ_FLIPY", value: 4096)
!21 = !DIEnumerator(name: "SEQ_MAKE_FLOAT", value: 8192)
!22 = !DIEnumerator(name: "SEQ_LOCK", value: 16384)
!23 = !DIEnumerator(name: "SEQ_USE_PROXY", value: 32768)
!24 = !DIEnumerator(name: "SEQ_USE_TRANSFORM", value: 65536)
!25 = !DIEnumerator(name: "SEQ_USE_CROP", value: 131072)
!26 = !DIEnumerator(name: "SEQ_USE_PROXY_CUSTOM_DIR", value: 524288)
!27 = !DIEnumerator(name: "SEQ_USE_PROXY_CUSTOM_FILE", value: 2097152)
!28 = !DIEnumerator(name: "SEQ_USE_EFFECT_DEFAULT_FADE", value: 4194304)
!29 = !DIEnumerator(name: "SEQ_USE_LINEAR_MODIFIERS", value: 8388608)
!30 = !DIEnumerator(name: "SEQ_AUDIO_VOLUME_ANIMATED", value: 16777216)
!31 = !DIEnumerator(name: "SEQ_AUDIO_PITCH_ANIMATED", value: 33554432)
!32 = !DIEnumerator(name: "SEQ_AUDIO_PAN_ANIMATED", value: 67108864)
!33 = !DIEnumerator(name: "SEQ_AUDIO_DRAW_WAVEFORM", value: 134217728)
!34 = !DIEnumerator(name: "SEQ_INVALID_EFFECT", value: -2147483648)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 404, baseType: !36, size: 32, elements: !37)
!36 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63}
!38 = !DIEnumerator(name: "SEQ_TYPE_IMAGE", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "SEQ_TYPE_META", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "SEQ_TYPE_SCENE", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "SEQ_TYPE_MOVIE", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "SEQ_TYPE_SOUND_RAM", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "SEQ_TYPE_SOUND_HD", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "SEQ_TYPE_MOVIECLIP", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "SEQ_TYPE_MASK", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "SEQ_TYPE_EFFECT", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "SEQ_TYPE_CROSS", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "SEQ_TYPE_ADD", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "SEQ_TYPE_SUB", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "SEQ_TYPE_ALPHAOVER", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "SEQ_TYPE_ALPHAUNDER", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "SEQ_TYPE_GAMCROSS", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "SEQ_TYPE_MUL", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "SEQ_TYPE_OVERDROP", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "SEQ_TYPE_WIPE", value: 25, isUnsigned: true)
!56 = !DIEnumerator(name: "SEQ_TYPE_GLOW", value: 26, isUnsigned: true)
!57 = !DIEnumerator(name: "SEQ_TYPE_TRANSFORM", value: 27, isUnsigned: true)
!58 = !DIEnumerator(name: "SEQ_TYPE_COLOR", value: 28, isUnsigned: true)
!59 = !DIEnumerator(name: "SEQ_TYPE_SPEED", value: 29, isUnsigned: true)
!60 = !DIEnumerator(name: "SEQ_TYPE_MULTICAM", value: 30, isUnsigned: true)
!61 = !DIEnumerator(name: "SEQ_TYPE_ADJUSTMENT", value: 31, isUnsigned: true)
!62 = !DIEnumerator(name: "SEQ_TYPE_GAUSSIAN_BLUR", value: 40, isUnsigned: true)
!63 = !DIEnumerator(name: "SEQ_TYPE_EFFECT_MAX", value: 40, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 94, baseType: !36, size: 32, elements: !65)
!65 = !{!66, !67, !68, !69}
!66 = !DIEnumerator(name: "GlowR", value: 0, isUnsigned: true)
!67 = !DIEnumerator(name: "GlowG", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "GlowB", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "GlowA", value: 3, isUnsigned: true)
!70 = !{!71, !82, !77, !83, !7, !85, !86, !87, !96, !76, !106, !118}
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpeedControlVars", file: !6, line: 252, baseType: !73)
!73 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpeedControlVars", file: !6, line: 246, size: 192, elements: !74)
!74 = !{!75, !78, !79, !80, !81}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "frameMap", scope: !73, file: !6, line: 247, baseType: !76, size: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "globalSpeed", scope: !73, file: !6, line: 248, baseType: !77, size: 32, offset: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !73, file: !6, line: 249, baseType: !7, size: 32, offset: 96)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !73, file: !6, line: 250, baseType: !7, size: 32, offset: 128)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "lastValidFrame", scope: !73, file: !6, line: 251, baseType: !7, size: 32, offset: 160)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!85 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "WipeVars", file: !6, line: 219, baseType: !89)
!89 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WipeVars", file: !6, line: 216, size: 96, elements: !90)
!90 = !{!91, !92, !93, !95}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "edgeWidth", scope: !89, file: !6, line: 217, baseType: !77, size: 32)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !89, file: !6, line: 217, baseType: !77, size: 32, offset: 32)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !89, file: !6, line: 218, baseType: !94, size: 16, offset: 64)
!94 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "wipetype", scope: !89, file: !6, line: 218, baseType: !94, size: 16, offset: 80)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "GlowVars", file: !6, line: 228, baseType: !98)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GlowVars", file: !6, line: 221, size: 192, elements: !99)
!99 = !{!100, !101, !102, !103, !104, !105}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "fMini", scope: !98, file: !6, line: 222, baseType: !77, size: 32)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "fClamp", scope: !98, file: !6, line: 223, baseType: !77, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "fBoost", scope: !98, file: !6, line: 224, baseType: !77, size: 32, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "dDist", scope: !98, file: !6, line: 225, baseType: !77, size: 32, offset: 96)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "dQuality", scope: !98, file: !6, line: 226, baseType: !7, size: 32, offset: 128)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "bNoComp", scope: !98, file: !6, line: 227, baseType: !7, size: 32, offset: 160)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransformVars", file: !6, line: 239, baseType: !108)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TransformVars", file: !6, line: 230, size: 256, elements: !109)
!109 = !{!110, !111, !112, !113, !114, !115, !116, !117}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "ScalexIni", scope: !108, file: !6, line: 231, baseType: !77, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "ScaleyIni", scope: !108, file: !6, line: 232, baseType: !77, size: 32, offset: 32)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "xIni", scope: !108, file: !6, line: 233, baseType: !77, size: 32, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "yIni", scope: !108, file: !6, line: 234, baseType: !77, size: 32, offset: 96)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "rotIni", scope: !108, file: !6, line: 235, baseType: !77, size: 32, offset: 128)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "percent", scope: !108, file: !6, line: 236, baseType: !7, size: 32, offset: 160)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !108, file: !6, line: 237, baseType: !7, size: 32, offset: 192)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "uniform_scale", scope: !108, file: !6, line: 238, baseType: !7, size: 32, offset: 224)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "SolidColorVars", file: !6, line: 244, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SolidColorVars", file: !6, line: 241, size: 128, elements: !121)
!121 = !{!122, !126}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !120, file: !6, line: 242, baseType: !123, size: 96)
!123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 96, elements: !124)
!124 = !{!125}
!125 = !DISubrange(count: 3)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !120, file: !6, line: 243, baseType: !77, size: 32, offset: 96)
!127 = !{!0, !128, !134, !139, !141, !143, !145, !147, !152, !154, !156, !161}
!128 = !DIGlobalVariableExpression(var: !129, expr: !DIExpression())
!129 = distinct !DIGlobalVariable(name: "gamtab", scope: !2, file: !3, line: 590, type: !130, isLocal: true, isDefinition: true)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 1048576, elements: !132)
!131 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!132 = !{!133}
!133 = !DISubrange(count: 65536)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "igamtab1", scope: !2, file: !3, line: 591, type: !136, isLocal: true, isDefinition: true)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !131, size: 4096, elements: !137)
!137 = !{!138}
!138 = !DISubrange(count: 256)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "valid_gamma", scope: !2, file: !3, line: 603, type: !77, isLocal: true, isDefinition: true)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "valid_inv_gamma", scope: !2, file: !3, line: 604, type: !77, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "color_step", scope: !2, file: !3, line: 601, type: !77, isLocal: true, isDefinition: true)
!145 = !DIGlobalVariableExpression(var: !146, expr: !DIExpression())
!146 = distinct !DIGlobalVariable(name: "inv_color_step", scope: !2, file: !3, line: 602, type: !77, isLocal: true, isDefinition: true)
!147 = !DIGlobalVariableExpression(var: !148, expr: !DIExpression())
!148 = distinct !DIGlobalVariable(name: "color_domain_table", scope: !2, file: !3, line: 600, type: !149, isLocal: true, isDefinition: true)
!149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 12832, elements: !150)
!150 = !{!151}
!151 = !DISubrange(count: 401)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(name: "gamma_range_table", scope: !2, file: !3, line: 596, type: !149, isLocal: true, isDefinition: true)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "inv_gamma_range_table", scope: !2, file: !3, line: 598, type: !149, isLocal: true, isDefinition: true)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "gamfactor_table", scope: !2, file: !3, line: 597, type: !158, isLocal: true, isDefinition: true)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 12800, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 400)
!161 = !DIGlobalVariableExpression(var: !162, expr: !DIExpression())
!162 = distinct !DIGlobalVariable(name: "inv_gamfactor_table", scope: !2, file: !3, line: 599, type: !158, isLocal: true, isDefinition: true)
!163 = !{i32 7, !"Dwarf Version", i32 4}
!164 = !{i32 2, !"Debug Info Version", i32 3}
!165 = !{i32 1, !"wchar_size", i32 4}
!166 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!167 = distinct !DISubprogram(name: "BKE_sequence_effect_speed_rebuild_map", scope: !3, file: !3, line: 2442, type: !168, scopeLine: 2443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!168 = !DISubroutineType(types: !169)
!169 = !{null, !170, !360, !84}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !172, line: 1299, baseType: !173)
!172 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !172, line: 1216, size: 39680, elements: !174)
!174 = !{!175, !243, !313, !316, !319, !321, !322, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !348, !351, !511, !869, !872, !1153, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1175, !1176, !1177, !1178, !1179, !1187, !1254, !1261, !1264, !1271, !1272, !1278, !1279, !1280, !1281, !1282}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !173, file: !172, line: 1217, baseType: !176, size: 960)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !177, line: 130, baseType: !178)
!177 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !177, line: 117, size: 960, elements: !179)
!179 = !{!180, !181, !182, !184, !203, !207, !208, !209, !210, !211}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !178, file: !177, line: 118, baseType: !82, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !178, file: !177, line: 118, baseType: !82, size: 64, offset: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !178, file: !177, line: 119, baseType: !183, size: 64, offset: 128)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !178, file: !177, line: 120, baseType: !185, size: 64, offset: 192)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !177, line: 136, size: 17600, elements: !187)
!187 = !{!188, !189, !191, !194, !198, !199, !200}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !186, file: !177, line: 137, baseType: !176, size: 960)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !186, file: !177, line: 138, baseType: !190, size: 64, offset: 960)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !186, file: !177, line: 139, baseType: !192, size: 64, offset: 1024)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !177, line: 43, flags: DIFlagFwdDecl)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !186, file: !177, line: 140, baseType: !195, size: 8192, offset: 1088)
!195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 8192, elements: !196)
!196 = !{!197}
!197 = !DISubrange(count: 1024)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !186, file: !177, line: 141, baseType: !195, size: 8192, offset: 9280)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !186, file: !177, line: 148, baseType: !185, size: 64, offset: 17472)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !186, file: !177, line: 150, baseType: !201, size: 64, offset: 17536)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !177, line: 45, flags: DIFlagFwdDecl)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !178, file: !177, line: 121, baseType: !204, size: 528, offset: 256)
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 528, elements: !205)
!205 = !{!206}
!206 = !DISubrange(count: 66)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !178, file: !177, line: 126, baseType: !94, size: 16, offset: 784)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !178, file: !177, line: 127, baseType: !7, size: 32, offset: 800)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !178, file: !177, line: 128, baseType: !7, size: 32, offset: 832)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !178, file: !177, line: 128, baseType: !7, size: 32, offset: 864)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !178, file: !177, line: 129, baseType: !212, size: 64, offset: 896)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !177, line: 75, baseType: !214)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !177, line: 62, size: 1024, elements: !215)
!215 = !{!216, !218, !219, !220, !221, !222, !226, !227, !241, !242}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !214, file: !177, line: 63, baseType: !217, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !214, file: !177, line: 63, baseType: !217, size: 64, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !214, file: !177, line: 64, baseType: !85, size: 8, offset: 128)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !214, file: !177, line: 64, baseType: !85, size: 8, offset: 136)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !214, file: !177, line: 65, baseType: !94, size: 16, offset: 144)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !214, file: !177, line: 66, baseType: !223, size: 512, offset: 160)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 512, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !214, file: !177, line: 67, baseType: !7, size: 32, offset: 672)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !214, file: !177, line: 69, baseType: !228, size: 256, offset: 704)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !177, line: 60, baseType: !229)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !177, line: 48, size: 256, elements: !230)
!230 = !{!231, !232, !239, !240}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !229, file: !177, line: 49, baseType: !82, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !229, file: !177, line: 58, baseType: !233, size: 128, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !234, line: 71, baseType: !235)
!234 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !234, line: 69, size: 128, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !235, file: !234, line: 70, baseType: !82, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !235, file: !234, line: 70, baseType: !82, size: 64, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !229, file: !177, line: 59, baseType: !7, size: 32, offset: 192)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !229, file: !177, line: 59, baseType: !7, size: 32, offset: 224)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !214, file: !177, line: 70, baseType: !7, size: 32, offset: 960)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !214, file: !177, line: 74, baseType: !7, size: 32, offset: 992)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !173, file: !172, line: 1218, baseType: !244, size: 64, offset: 960)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !246, line: 838, size: 768, elements: !247)
!246 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!247 = !{!248, !263, !264, !274, !275, !306, !307, !308, !309, !310, !311, !312}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !245, file: !246, line: 840, baseType: !249, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !251, line: 499, baseType: !252)
!251 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !251, line: 486, size: 1600, elements: !253)
!253 = !{!254, !255, !256, !257, !258, !259, !260, !261, !262}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !252, file: !251, line: 487, baseType: !176, size: 960)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !252, file: !251, line: 489, baseType: !233, size: 128, offset: 960)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !252, file: !251, line: 490, baseType: !233, size: 128, offset: 1088)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !252, file: !251, line: 491, baseType: !233, size: 128, offset: 1216)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !252, file: !251, line: 492, baseType: !233, size: 128, offset: 1344)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !252, file: !251, line: 494, baseType: !7, size: 32, offset: 1472)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !252, file: !251, line: 495, baseType: !7, size: 32, offset: 1504)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !252, file: !251, line: 497, baseType: !7, size: 32, offset: 1536)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !252, file: !251, line: 498, baseType: !7, size: 32, offset: 1568)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !245, file: !246, line: 844, baseType: !249, size: 64, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !245, file: !246, line: 848, baseType: !265, size: 64, offset: 128)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !246, line: 549, baseType: !267)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !246, line: 544, size: 320, elements: !268)
!268 = !{!269, !271, !272, !273}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !267, file: !246, line: 545, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !267, file: !246, line: 545, baseType: !270, size: 64, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !267, file: !246, line: 547, baseType: !249, size: 64, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !267, file: !246, line: 548, baseType: !233, size: 128, offset: 192)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !245, file: !246, line: 851, baseType: !233, size: 128, offset: 192)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !245, file: !246, line: 853, baseType: !276, size: 64, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !246, line: 594, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !246, line: 561, size: 1664, elements: !279)
!279 = !{!280, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !278, file: !246, line: 562, baseType: !281, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !278, file: !246, line: 562, baseType: !281, size: 64, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !278, file: !246, line: 564, baseType: !233, size: 128, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !278, file: !246, line: 565, baseType: !249, size: 64, offset: 256)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !278, file: !246, line: 566, baseType: !265, size: 64, offset: 320)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !278, file: !246, line: 568, baseType: !233, size: 128, offset: 384)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !278, file: !246, line: 569, baseType: !233, size: 128, offset: 512)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !278, file: !246, line: 571, baseType: !223, size: 512, offset: 640)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !278, file: !246, line: 573, baseType: !77, size: 32, offset: 1152)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !278, file: !246, line: 574, baseType: !77, size: 32, offset: 1184)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !278, file: !246, line: 576, baseType: !77, size: 32, offset: 1216)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !278, file: !246, line: 576, baseType: !77, size: 32, offset: 1248)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !278, file: !246, line: 577, baseType: !77, size: 32, offset: 1280)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !278, file: !246, line: 577, baseType: !77, size: 32, offset: 1312)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !278, file: !246, line: 579, baseType: !77, size: 32, offset: 1344)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !278, file: !246, line: 580, baseType: !77, size: 32, offset: 1376)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !278, file: !246, line: 582, baseType: !77, size: 32, offset: 1408)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !278, file: !246, line: 582, baseType: !77, size: 32, offset: 1440)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !278, file: !246, line: 583, baseType: !94, size: 16, offset: 1472)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !278, file: !246, line: 585, baseType: !94, size: 16, offset: 1488)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !278, file: !246, line: 586, baseType: !94, size: 16, offset: 1504)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !278, file: !246, line: 588, baseType: !94, size: 16, offset: 1520)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !278, file: !246, line: 590, baseType: !82, size: 64, offset: 1536)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !278, file: !246, line: 592, baseType: !7, size: 32, offset: 1600)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !278, file: !246, line: 593, baseType: !7, size: 32, offset: 1632)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !245, file: !246, line: 858, baseType: !233, size: 128, offset: 384)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !245, file: !246, line: 859, baseType: !233, size: 128, offset: 512)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !245, file: !246, line: 862, baseType: !7, size: 32, offset: 640)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !245, file: !246, line: 863, baseType: !7, size: 32, offset: 672)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !245, file: !246, line: 866, baseType: !94, size: 16, offset: 704)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !245, file: !246, line: 867, baseType: !94, size: 16, offset: 720)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !245, file: !246, line: 868, baseType: !77, size: 32, offset: 736)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !173, file: !172, line: 1220, baseType: !314, size: 64, offset: 1024)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !172, line: 50, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !173, file: !172, line: 1221, baseType: !317, size: 64, offset: 1088)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !172, line: 52, flags: DIFlagFwdDecl)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !173, file: !172, line: 1223, baseType: !320, size: 64, offset: 1152)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !173, file: !172, line: 1225, baseType: !233, size: 128, offset: 1216)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !173, file: !172, line: 1226, baseType: !323, size: 64, offset: 1344)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !172, line: 69, size: 320, elements: !325)
!325 = !{!326, !327, !328, !329, !330, !331, !332, !333}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !324, file: !172, line: 70, baseType: !323, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !324, file: !172, line: 70, baseType: !323, size: 64, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !324, file: !172, line: 71, baseType: !36, size: 32, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !324, file: !172, line: 71, baseType: !36, size: 32, offset: 160)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !324, file: !172, line: 72, baseType: !7, size: 32, offset: 192)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !324, file: !172, line: 73, baseType: !94, size: 16, offset: 224)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !324, file: !172, line: 73, baseType: !94, size: 16, offset: 240)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !324, file: !172, line: 74, baseType: !314, size: 64, offset: 256)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !173, file: !172, line: 1227, baseType: !314, size: 64, offset: 1408)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !173, file: !172, line: 1229, baseType: !123, size: 96, offset: 1472)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !173, file: !172, line: 1230, baseType: !123, size: 96, offset: 1568)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !173, file: !172, line: 1231, baseType: !123, size: 96, offset: 1664)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !173, file: !172, line: 1231, baseType: !123, size: 96, offset: 1760)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !173, file: !172, line: 1233, baseType: !36, size: 32, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !173, file: !172, line: 1234, baseType: !7, size: 32, offset: 1888)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !173, file: !172, line: 1235, baseType: !36, size: 32, offset: 1920)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !173, file: !172, line: 1237, baseType: !94, size: 16, offset: 1952)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !173, file: !172, line: 1239, baseType: !85, size: 8, offset: 1968)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !173, file: !172, line: 1240, baseType: !345, size: 8, offset: 1976)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 8, elements: !346)
!346 = !{!347}
!347 = !DISubrange(count: 1)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !173, file: !172, line: 1242, baseType: !349, size: 64, offset: 1984)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !172, line: 57, flags: DIFlagFwdDecl)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !173, file: !172, line: 1244, baseType: !352, size: 64, offset: 2048)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !6, line: 200, size: 17024, elements: !354)
!354 = !{!355, !357, !358, !359, !496, !497, !498, !499, !500, !501, !502}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !353, file: !6, line: 201, baseType: !356, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !353, file: !6, line: 202, baseType: !233, size: 128, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !353, file: !6, line: 203, baseType: !233, size: 128, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !353, file: !6, line: 206, baseType: !360, size: 64, offset: 320)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !6, line: 190, baseType: !362)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !6, line: 126, size: 2816, elements: !363)
!363 = !{!364, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !460, !463, !464, !465, !468, !471, !472, !473, !474, !475, !476, !477, !478, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !495}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !362, file: !6, line: 127, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !362, file: !6, line: 127, baseType: !365, size: 64, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !362, file: !6, line: 128, baseType: !82, size: 64, offset: 128)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !362, file: !6, line: 129, baseType: !82, size: 64, offset: 192)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !362, file: !6, line: 130, baseType: !223, size: 512, offset: 256)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !362, file: !6, line: 132, baseType: !7, size: 32, offset: 768)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !362, file: !6, line: 132, baseType: !7, size: 32, offset: 800)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !362, file: !6, line: 133, baseType: !7, size: 32, offset: 832)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !362, file: !6, line: 134, baseType: !7, size: 32, offset: 864)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !362, file: !6, line: 134, baseType: !7, size: 32, offset: 896)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !362, file: !6, line: 134, baseType: !7, size: 32, offset: 928)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !362, file: !6, line: 135, baseType: !7, size: 32, offset: 960)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !362, file: !6, line: 135, baseType: !7, size: 32, offset: 992)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !362, file: !6, line: 136, baseType: !7, size: 32, offset: 1024)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !362, file: !6, line: 136, baseType: !7, size: 32, offset: 1056)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !362, file: !6, line: 137, baseType: !7, size: 32, offset: 1088)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !362, file: !6, line: 137, baseType: !7, size: 32, offset: 1120)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !362, file: !6, line: 138, baseType: !77, size: 32, offset: 1152)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !362, file: !6, line: 139, baseType: !77, size: 32, offset: 1184)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !362, file: !6, line: 139, baseType: !77, size: 32, offset: 1216)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !362, file: !6, line: 141, baseType: !94, size: 16, offset: 1248)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !362, file: !6, line: 142, baseType: !94, size: 16, offset: 1264)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !362, file: !6, line: 143, baseType: !7, size: 32, offset: 1280)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !362, file: !6, line: 144, baseType: !7, size: 32, offset: 1312)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !362, file: !6, line: 146, baseType: !390, size: 64, offset: 1344)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !6, line: 114, baseType: !392)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !6, line: 99, size: 7232, elements: !393)
!393 = !{!394, !396, !397, !398, !399, !400, !401, !410, !414, !428, !437, !444, !454}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !392, file: !6, line: 100, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !392, file: !6, line: 100, baseType: !395, size: 64, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !392, file: !6, line: 101, baseType: !7, size: 32, offset: 128)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !392, file: !6, line: 101, baseType: !7, size: 32, offset: 160)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !392, file: !6, line: 102, baseType: !7, size: 32, offset: 192)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !392, file: !6, line: 102, baseType: !7, size: 32, offset: 224)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !392, file: !6, line: 103, baseType: !402, size: 64, offset: 256)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !6, line: 59, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !6, line: 56, size: 2112, elements: !405)
!405 = !{!406, !408, !409}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !404, file: !6, line: 57, baseType: !407, size: 2048)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 2048, elements: !137)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !404, file: !6, line: 58, baseType: !7, size: 32, offset: 2048)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !404, file: !6, line: 58, baseType: !7, size: 32, offset: 2080)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !392, file: !6, line: 106, baseType: !411, size: 6144, offset: 320)
!411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 6144, elements: !412)
!412 = !{!413}
!413 = !DISubrange(count: 768)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !392, file: !6, line: 107, baseType: !415, size: 64, offset: 6464)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !6, line: 97, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !6, line: 83, size: 8320, elements: !418)
!418 = !{!419, !420, !421, !424, !425, !426, !427}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !417, file: !6, line: 84, baseType: !411, size: 6144)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !417, file: !6, line: 87, baseType: !407, size: 2048, offset: 6144)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !417, file: !6, line: 88, baseType: !422, size: 64, offset: 8192)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !6, line: 88, flags: DIFlagFwdDecl)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !417, file: !6, line: 90, baseType: !94, size: 16, offset: 8256)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !417, file: !6, line: 92, baseType: !94, size: 16, offset: 8272)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !417, file: !6, line: 93, baseType: !94, size: 16, offset: 8288)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !417, file: !6, line: 95, baseType: !94, size: 16, offset: 8304)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !392, file: !6, line: 108, baseType: !429, size: 64, offset: 6528)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !6, line: 66, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !6, line: 61, size: 128, elements: !432)
!432 = !{!433, !434, !435, !436}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !431, file: !6, line: 62, baseType: !7, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !431, file: !6, line: 63, baseType: !7, size: 32, offset: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !431, file: !6, line: 64, baseType: !7, size: 32, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !431, file: !6, line: 65, baseType: !7, size: 32, offset: 96)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !392, file: !6, line: 109, baseType: !438, size: 64, offset: 6592)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !6, line: 71, baseType: !440)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !6, line: 68, size: 64, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !440, file: !6, line: 69, baseType: !7, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !440, file: !6, line: 70, baseType: !7, size: 32, offset: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !392, file: !6, line: 110, baseType: !445, size: 64, offset: 6656)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !6, line: 81, baseType: !447)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !6, line: 73, size: 352, elements: !448)
!448 = !{!449, !450, !451, !452, !453}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !447, file: !6, line: 74, baseType: !123, size: 96)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !447, file: !6, line: 75, baseType: !123, size: 96, offset: 96)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !447, file: !6, line: 76, baseType: !123, size: 96, offset: 192)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !447, file: !6, line: 77, baseType: !7, size: 32, offset: 288)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !447, file: !6, line: 78, baseType: !7, size: 32, offset: 320)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !392, file: !6, line: 113, baseType: !455, size: 512, offset: 6720)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !456, line: 182, baseType: !457)
!456 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !456, line: 180, size: 512, elements: !458)
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !457, file: !456, line: 181, baseType: !223, size: 512)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !362, file: !6, line: 148, baseType: !461, size: 64, offset: 1408)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !6, line: 49, flags: DIFlagFwdDecl)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !362, file: !6, line: 151, baseType: !320, size: 64, offset: 1472)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !362, file: !6, line: 152, baseType: !314, size: 64, offset: 1536)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !362, file: !6, line: 153, baseType: !466, size: 64, offset: 1600)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !172, line: 62, flags: DIFlagFwdDecl)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !362, file: !6, line: 154, baseType: !469, size: 64, offset: 1664)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !6, line: 154, flags: DIFlagFwdDecl)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !362, file: !6, line: 156, baseType: !422, size: 64, offset: 1728)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !362, file: !6, line: 158, baseType: !77, size: 32, offset: 1792)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !362, file: !6, line: 159, baseType: !77, size: 32, offset: 1824)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !362, file: !6, line: 162, baseType: !365, size: 64, offset: 1856)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !362, file: !6, line: 162, baseType: !365, size: 64, offset: 1920)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !362, file: !6, line: 162, baseType: !365, size: 64, offset: 1984)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !362, file: !6, line: 164, baseType: !233, size: 128, offset: 2048)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !362, file: !6, line: 166, baseType: !479, size: 64, offset: 2176)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !6, line: 51, flags: DIFlagFwdDecl)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !362, file: !6, line: 167, baseType: !82, size: 64, offset: 2240)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !362, file: !6, line: 168, baseType: !77, size: 32, offset: 2304)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !362, file: !6, line: 170, baseType: !77, size: 32, offset: 2336)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !362, file: !6, line: 170, baseType: !77, size: 32, offset: 2368)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !362, file: !6, line: 171, baseType: !77, size: 32, offset: 2400)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !362, file: !6, line: 173, baseType: !82, size: 64, offset: 2432)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !362, file: !6, line: 175, baseType: !7, size: 32, offset: 2496)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !362, file: !6, line: 176, baseType: !7, size: 32, offset: 2528)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !362, file: !6, line: 179, baseType: !7, size: 32, offset: 2560)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !362, file: !6, line: 180, baseType: !77, size: 32, offset: 2592)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !362, file: !6, line: 183, baseType: !7, size: 32, offset: 2624)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !362, file: !6, line: 185, baseType: !85, size: 8, offset: 2656)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !362, file: !6, line: 186, baseType: !494, size: 24, offset: 2664)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 24, elements: !124)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !362, file: !6, line: 189, baseType: !233, size: 128, offset: 2688)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !353, file: !6, line: 207, baseType: !195, size: 8192, offset: 384)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !353, file: !6, line: 208, baseType: !195, size: 8192, offset: 8576)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !353, file: !6, line: 210, baseType: !7, size: 32, offset: 16768)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !353, file: !6, line: 210, baseType: !7, size: 32, offset: 16800)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !353, file: !6, line: 211, baseType: !7, size: 32, offset: 16832)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !353, file: !6, line: 211, baseType: !7, size: 32, offset: 16864)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !353, file: !6, line: 212, baseType: !503, size: 128, offset: 16896)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !504, line: 95, baseType: !505)
!504 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !504, line: 92, size: 128, elements: !506)
!506 = !{!507, !508, !509, !510}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !505, file: !504, line: 93, baseType: !77, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !505, file: !504, line: 93, baseType: !77, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !505, file: !504, line: 94, baseType: !77, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !505, file: !504, line: 94, baseType: !77, size: 32, offset: 96)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !173, file: !172, line: 1246, baseType: !512, size: 64, offset: 2112)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !172, line: 1067, size: 5184, elements: !514)
!514 = !{!515, !546, !547, !562, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !584, !741, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !852}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !513, file: !172, line: 1068, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !172, line: 934, baseType: !518)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !172, line: 925, size: 576, elements: !519)
!519 = !{!520, !538, !539, !540, !541, !542, !545}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !518, file: !172, line: 926, baseType: !521, size: 320)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !172, line: 830, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !172, line: 813, size: 320, elements: !523)
!523 = !{!524, !527, !530, !531, !535, !536, !537}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !522, file: !172, line: 814, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !172, line: 51, flags: DIFlagFwdDecl)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !522, file: !172, line: 815, baseType: !528, size: 64, offset: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !172, line: 815, flags: DIFlagFwdDecl)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !522, file: !172, line: 818, baseType: !82, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !522, file: !172, line: 819, baseType: !532, size: 32, offset: 192)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 32, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 4)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !522, file: !172, line: 822, baseType: !7, size: 32, offset: 224)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !522, file: !172, line: 826, baseType: !7, size: 32, offset: 256)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !522, file: !172, line: 829, baseType: !7, size: 32, offset: 288)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !518, file: !172, line: 928, baseType: !94, size: 16, offset: 320)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !518, file: !172, line: 928, baseType: !94, size: 16, offset: 336)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !518, file: !172, line: 929, baseType: !7, size: 32, offset: 352)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !518, file: !172, line: 930, baseType: !86, size: 64, offset: 384)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !518, file: !172, line: 931, baseType: !543, size: 64, offset: 448)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !172, line: 931, flags: DIFlagFwdDecl)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !518, file: !172, line: 933, baseType: !82, size: 64, offset: 512)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !513, file: !172, line: 1069, baseType: !516, size: 64, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !513, file: !172, line: 1070, baseType: !548, size: 64, offset: 128)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !172, line: 916, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !172, line: 891, size: 704, elements: !551)
!551 = !{!552, !553, !554, !556, !557, !558, !559, !560, !561}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !550, file: !172, line: 892, baseType: !521, size: 320)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !550, file: !172, line: 896, baseType: !7, size: 32, offset: 320)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !550, file: !172, line: 900, baseType: !555, size: 96, offset: 352)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !124)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !550, file: !172, line: 903, baseType: !77, size: 32, offset: 448)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !550, file: !172, line: 906, baseType: !7, size: 32, offset: 480)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !550, file: !172, line: 909, baseType: !77, size: 32, offset: 512)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !550, file: !172, line: 912, baseType: !77, size: 32, offset: 544)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !550, file: !172, line: 914, baseType: !314, size: 64, offset: 576)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !550, file: !172, line: 915, baseType: !82, size: 64, offset: 640)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !513, file: !172, line: 1071, baseType: !563, size: 64, offset: 192)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !172, line: 920, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !172, line: 918, size: 320, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !565, file: !172, line: 919, baseType: !521, size: 320)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !513, file: !172, line: 1075, baseType: !77, size: 32, offset: 256)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !513, file: !172, line: 1077, baseType: !77, size: 32, offset: 288)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !513, file: !172, line: 1078, baseType: !77, size: 32, offset: 320)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !513, file: !172, line: 1079, baseType: !94, size: 16, offset: 352)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !513, file: !172, line: 1082, baseType: !94, size: 16, offset: 368)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !513, file: !172, line: 1085, baseType: !85, size: 8, offset: 384)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !513, file: !172, line: 1086, baseType: !85, size: 8, offset: 392)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !513, file: !172, line: 1087, baseType: !85, size: 8, offset: 400)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !513, file: !172, line: 1088, baseType: !85, size: 8, offset: 408)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !513, file: !172, line: 1090, baseType: !77, size: 32, offset: 416)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !513, file: !172, line: 1093, baseType: !94, size: 16, offset: 448)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !513, file: !172, line: 1096, baseType: !85, size: 8, offset: 464)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !513, file: !172, line: 1098, baseType: !581, size: 40, offset: 472)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 40, elements: !582)
!582 = !{!583}
!583 = !DISubrange(count: 5)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !513, file: !172, line: 1101, baseType: !585, size: 832, offset: 512)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !172, line: 836, size: 832, elements: !586)
!586 = !{!587, !588, !589, !590, !591, !592, !596, !597, !598, !737, !738, !739, !740}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !585, file: !172, line: 837, baseType: !521, size: 320)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !585, file: !172, line: 839, baseType: !94, size: 16, offset: 320)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !585, file: !172, line: 839, baseType: !94, size: 16, offset: 336)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !585, file: !172, line: 842, baseType: !94, size: 16, offset: 352)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !585, file: !172, line: 842, baseType: !94, size: 16, offset: 368)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !585, file: !172, line: 843, baseType: !593, size: 32, offset: 384)
!593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 32, elements: !594)
!594 = !{!595}
!595 = !DISubrange(count: 2)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !585, file: !172, line: 845, baseType: !7, size: 32, offset: 416)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !585, file: !172, line: 847, baseType: !82, size: 64, offset: 448)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !585, file: !172, line: 848, baseType: !599, size: 64, offset: 512)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !601, line: 77, size: 15424, elements: !602)
!601 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!602 = !{!603, !604, !605, !608, !611, !612, !679, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !723, !724, !725, !726, !727, !731}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !600, file: !601, line: 78, baseType: !176, size: 960)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !600, file: !601, line: 80, baseType: !195, size: 8192, offset: 960)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !600, file: !601, line: 82, baseType: !606, size: 64, offset: 9152)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !601, line: 43, flags: DIFlagFwdDecl)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !600, file: !601, line: 83, baseType: !609, size: 64, offset: 9216)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !177, line: 46, flags: DIFlagFwdDecl)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !600, file: !601, line: 86, baseType: !422, size: 64, offset: 9280)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !600, file: !601, line: 87, baseType: !613, size: 64, offset: 9344)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !615, line: 110, size: 1152, elements: !616)
!615 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!616 = !{!617, !618, !619, !620, !621, !622, !623, !625, !626, !627, !635, !636, !637, !638, !640, !674, !675, !676, !677}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !614, file: !615, line: 111, baseType: !613, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !614, file: !615, line: 111, baseType: !613, size: 64, offset: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !614, file: !615, line: 114, baseType: !7, size: 32, offset: 128)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !614, file: !615, line: 114, baseType: !7, size: 32, offset: 160)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !614, file: !615, line: 115, baseType: !94, size: 16, offset: 192)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !614, file: !615, line: 115, baseType: !94, size: 16, offset: 208)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !614, file: !615, line: 118, baseType: !624, size: 64, offset: 256)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !614, file: !615, line: 120, baseType: !76, size: 64, offset: 320)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !614, file: !615, line: 122, baseType: !76, size: 64, offset: 384)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !614, file: !615, line: 125, baseType: !628, size: 128, offset: 448)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !504, line: 89, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !504, line: 86, size: 128, elements: !630)
!630 = !{!631, !632, !633, !634}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !629, file: !504, line: 87, baseType: !7, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !629, file: !504, line: 87, baseType: !7, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !629, file: !504, line: 88, baseType: !7, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !629, file: !504, line: 88, baseType: !7, size: 32, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !614, file: !615, line: 127, baseType: !7, size: 32, offset: 576)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !614, file: !615, line: 127, baseType: !7, size: 32, offset: 608)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !614, file: !615, line: 130, baseType: !233, size: 128, offset: 640)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !614, file: !615, line: 133, baseType: !639, size: 128, offset: 768)
!639 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !628)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !614, file: !615, line: 134, baseType: !641, size: 64, offset: 896)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !643)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !615, line: 108, baseType: !644)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !615, line: 85, size: 1600, elements: !645)
!645 = !{!646, !648, !649, !653, !654, !655, !656, !657, !658, !659, !662, !666, !667, !668, !669, !670, !671, !672, !673}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !644, file: !615, line: 86, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !644, file: !615, line: 86, baseType: !647, size: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !644, file: !615, line: 89, baseType: !650, size: 592, offset: 128)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 592, elements: !651)
!651 = !{!652}
!652 = !DISubrange(count: 74)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !644, file: !615, line: 90, baseType: !36, size: 32, offset: 736)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !644, file: !615, line: 90, baseType: !36, size: 32, offset: 768)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !644, file: !615, line: 90, baseType: !36, size: 32, offset: 800)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !644, file: !615, line: 91, baseType: !7, size: 32, offset: 832)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !644, file: !615, line: 91, baseType: !7, size: 32, offset: 864)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !644, file: !615, line: 91, baseType: !7, size: 32, offset: 896)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !644, file: !615, line: 93, baseType: !660, size: 64, offset: 960)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !172, line: 179, flags: DIFlagFwdDecl)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !644, file: !615, line: 94, baseType: !663, size: 64, offset: 1024)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !665, line: 43, flags: DIFlagFwdDecl)
!665 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!666 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !644, file: !615, line: 96, baseType: !76, size: 64, offset: 1088)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !644, file: !615, line: 97, baseType: !76, size: 64, offset: 1152)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !644, file: !615, line: 98, baseType: !76, size: 64, offset: 1216)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !644, file: !615, line: 99, baseType: !624, size: 64, offset: 1280)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !644, file: !615, line: 101, baseType: !7, size: 32, offset: 1344)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !644, file: !615, line: 101, baseType: !7, size: 32, offset: 1376)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !644, file: !615, line: 104, baseType: !82, size: 64, offset: 1408)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !644, file: !615, line: 106, baseType: !233, size: 128, offset: 1472)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !614, file: !615, line: 137, baseType: !7, size: 32, offset: 960)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !614, file: !615, line: 140, baseType: !7, size: 32, offset: 992)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !614, file: !615, line: 143, baseType: !7, size: 32, offset: 1024)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !614, file: !615, line: 146, baseType: !678, size: 64, offset: 1088)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !600, file: !601, line: 89, baseType: !680, size: 512, offset: 9408)
!680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !613, size: 512, elements: !681)
!681 = !{!682}
!682 = !DISubrange(count: 8)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !600, file: !601, line: 90, baseType: !94, size: 16, offset: 9920)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !600, file: !601, line: 90, baseType: !94, size: 16, offset: 9936)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !600, file: !601, line: 92, baseType: !94, size: 16, offset: 9952)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !600, file: !601, line: 92, baseType: !94, size: 16, offset: 9968)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !600, file: !601, line: 93, baseType: !94, size: 16, offset: 9984)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !600, file: !601, line: 93, baseType: !94, size: 16, offset: 10000)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !600, file: !601, line: 94, baseType: !7, size: 32, offset: 10016)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !600, file: !601, line: 97, baseType: !94, size: 16, offset: 10048)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !600, file: !601, line: 97, baseType: !94, size: 16, offset: 10064)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !600, file: !601, line: 98, baseType: !94, size: 16, offset: 10080)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !600, file: !601, line: 98, baseType: !94, size: 16, offset: 10096)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !600, file: !601, line: 99, baseType: !94, size: 16, offset: 10112)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !600, file: !601, line: 99, baseType: !94, size: 16, offset: 10128)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !600, file: !601, line: 100, baseType: !36, size: 32, offset: 10144)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !600, file: !601, line: 101, baseType: !86, size: 64, offset: 10176)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !600, file: !601, line: 103, baseType: !201, size: 64, offset: 10240)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !600, file: !601, line: 104, baseType: !700, size: 64, offset: 10304)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !177, line: 159, size: 448, elements: !702)
!702 = !{!703, !705, !706, !707, !708, !710}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !701, file: !177, line: 161, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 64, elements: !594)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !701, file: !177, line: 162, baseType: !704, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !701, file: !177, line: 163, baseType: !593, size: 32, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !701, file: !177, line: 164, baseType: !593, size: 32, offset: 160)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !701, file: !177, line: 165, baseType: !709, size: 128, offset: 192)
!709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 128, elements: !594)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !701, file: !177, line: 166, baseType: !711, size: 128, offset: 320)
!711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !609, size: 128, elements: !594)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !600, file: !601, line: 107, baseType: !77, size: 32, offset: 10368)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !600, file: !601, line: 108, baseType: !7, size: 32, offset: 10400)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !600, file: !601, line: 109, baseType: !94, size: 16, offset: 10432)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !600, file: !601, line: 110, baseType: !94, size: 16, offset: 10448)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !600, file: !601, line: 113, baseType: !7, size: 32, offset: 10464)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !600, file: !601, line: 113, baseType: !7, size: 32, offset: 10496)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !600, file: !601, line: 114, baseType: !85, size: 8, offset: 10528)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !600, file: !601, line: 114, baseType: !85, size: 8, offset: 10536)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !600, file: !601, line: 115, baseType: !94, size: 16, offset: 10544)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !600, file: !601, line: 116, baseType: !722, size: 128, offset: 10560)
!722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 128, elements: !533)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !600, file: !601, line: 119, baseType: !77, size: 32, offset: 10688)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !600, file: !601, line: 119, baseType: !77, size: 32, offset: 10720)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !600, file: !601, line: 122, baseType: !455, size: 512, offset: 10752)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !600, file: !601, line: 123, baseType: !85, size: 8, offset: 11264)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !600, file: !601, line: 125, baseType: !728, size: 56, offset: 11272)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 56, elements: !729)
!729 = !{!730}
!730 = !DISubrange(count: 7)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !600, file: !601, line: 126, baseType: !732, size: 4096, offset: 11328)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 4096, elements: !681)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !601, line: 69, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !601, line: 67, size: 512, elements: !735)
!735 = !{!736}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !601, line: 68, baseType: !223, size: 512)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !585, file: !172, line: 849, baseType: !599, size: 64, offset: 576)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !585, file: !172, line: 850, baseType: !599, size: 64, offset: 640)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !585, file: !172, line: 851, baseType: !123, size: 96, offset: 704)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !585, file: !172, line: 852, baseType: !77, size: 32, offset: 800)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !513, file: !172, line: 1104, baseType: !742, size: 1344, offset: 1344)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !172, line: 867, size: 1344, elements: !743)
!743 = !{!744, !745, !746, !747, !748, !759, !760, !761, !762, !763, !764, !765, !766, !767}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !742, file: !172, line: 868, baseType: !94, size: 16)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !742, file: !172, line: 869, baseType: !94, size: 16, offset: 16)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !742, file: !172, line: 870, baseType: !94, size: 16, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !742, file: !172, line: 871, baseType: !94, size: 16, offset: 48)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !742, file: !172, line: 873, baseType: !749, size: 896, offset: 64)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 896, elements: !729)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !172, line: 864, baseType: !751)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !172, line: 859, size: 128, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !751, file: !172, line: 860, baseType: !94, size: 16)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !751, file: !172, line: 861, baseType: !94, size: 16, offset: 16)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !751, file: !172, line: 861, baseType: !94, size: 16, offset: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !751, file: !172, line: 861, baseType: !94, size: 16, offset: 48)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !751, file: !172, line: 862, baseType: !7, size: 32, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !751, file: !172, line: 863, baseType: !77, size: 32, offset: 96)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !742, file: !172, line: 874, baseType: !82, size: 64, offset: 960)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !742, file: !172, line: 876, baseType: !77, size: 32, offset: 1024)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !742, file: !172, line: 876, baseType: !77, size: 32, offset: 1056)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !742, file: !172, line: 878, baseType: !7, size: 32, offset: 1088)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !742, file: !172, line: 879, baseType: !7, size: 32, offset: 1120)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !742, file: !172, line: 881, baseType: !7, size: 32, offset: 1152)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !742, file: !172, line: 881, baseType: !7, size: 32, offset: 1184)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !742, file: !172, line: 883, baseType: !320, size: 64, offset: 1216)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !742, file: !172, line: 884, baseType: !314, size: 64, offset: 1280)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !513, file: !172, line: 1107, baseType: !77, size: 32, offset: 2688)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !513, file: !172, line: 1110, baseType: !77, size: 32, offset: 2720)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !513, file: !172, line: 1113, baseType: !94, size: 16, offset: 2752)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !513, file: !172, line: 1113, baseType: !94, size: 16, offset: 2768)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !513, file: !172, line: 1116, baseType: !85, size: 8, offset: 2784)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !513, file: !172, line: 1117, baseType: !345, size: 8, offset: 2792)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !513, file: !172, line: 1120, baseType: !94, size: 16, offset: 2800)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !513, file: !172, line: 1121, baseType: !77, size: 32, offset: 2816)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !513, file: !172, line: 1122, baseType: !77, size: 32, offset: 2848)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !513, file: !172, line: 1123, baseType: !77, size: 32, offset: 2880)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !513, file: !172, line: 1124, baseType: !77, size: 32, offset: 2912)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !513, file: !172, line: 1125, baseType: !77, size: 32, offset: 2944)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !513, file: !172, line: 1126, baseType: !77, size: 32, offset: 2976)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !513, file: !172, line: 1127, baseType: !77, size: 32, offset: 3008)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !513, file: !172, line: 1128, baseType: !77, size: 32, offset: 3040)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !513, file: !172, line: 1129, baseType: !77, size: 32, offset: 3072)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !513, file: !172, line: 1130, baseType: !77, size: 32, offset: 3104)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !513, file: !172, line: 1131, baseType: !94, size: 16, offset: 3136)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !513, file: !172, line: 1132, baseType: !85, size: 8, offset: 3152)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !513, file: !172, line: 1133, baseType: !85, size: 8, offset: 3160)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !513, file: !172, line: 1134, baseType: !494, size: 24, offset: 3168)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !513, file: !172, line: 1135, baseType: !85, size: 8, offset: 3192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !513, file: !172, line: 1138, baseType: !314, size: 64, offset: 3200)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !513, file: !172, line: 1139, baseType: !85, size: 8, offset: 3264)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !513, file: !172, line: 1140, baseType: !85, size: 8, offset: 3272)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !513, file: !172, line: 1141, baseType: !85, size: 8, offset: 3280)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !513, file: !172, line: 1142, baseType: !85, size: 8, offset: 3288)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !513, file: !172, line: 1143, baseType: !85, size: 8, offset: 3296)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !513, file: !172, line: 1144, baseType: !797, size: 64, offset: 3304)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 64, elements: !681)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !513, file: !172, line: 1145, baseType: !797, size: 64, offset: 3368)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !513, file: !172, line: 1148, baseType: !85, size: 8, offset: 3432)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !513, file: !172, line: 1149, baseType: !85, size: 8, offset: 3440)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !513, file: !172, line: 1152, baseType: !85, size: 8, offset: 3448)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !513, file: !172, line: 1152, baseType: !85, size: 8, offset: 3456)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !513, file: !172, line: 1153, baseType: !85, size: 8, offset: 3464)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !513, file: !172, line: 1154, baseType: !94, size: 16, offset: 3472)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !513, file: !172, line: 1154, baseType: !94, size: 16, offset: 3488)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !513, file: !172, line: 1155, baseType: !94, size: 16, offset: 3504)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !513, file: !172, line: 1155, baseType: !94, size: 16, offset: 3520)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !513, file: !172, line: 1156, baseType: !85, size: 8, offset: 3536)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !513, file: !172, line: 1157, baseType: !85, size: 8, offset: 3544)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !513, file: !172, line: 1159, baseType: !85, size: 8, offset: 3552)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !513, file: !172, line: 1160, baseType: !85, size: 8, offset: 3560)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !513, file: !172, line: 1161, baseType: !85, size: 8, offset: 3568)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !513, file: !172, line: 1162, baseType: !85, size: 8, offset: 3576)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !513, file: !172, line: 1165, baseType: !7, size: 32, offset: 3584)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !513, file: !172, line: 1166, baseType: !7, size: 32, offset: 3616)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !513, file: !172, line: 1167, baseType: !7, size: 32, offset: 3648)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !513, file: !172, line: 1168, baseType: !7, size: 32, offset: 3680)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !513, file: !172, line: 1171, baseType: !94, size: 16, offset: 3712)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !513, file: !172, line: 1171, baseType: !94, size: 16, offset: 3728)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !513, file: !172, line: 1172, baseType: !7, size: 32, offset: 3744)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !513, file: !172, line: 1173, baseType: !77, size: 32, offset: 3776)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !513, file: !172, line: 1174, baseType: !77, size: 32, offset: 3808)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !513, file: !172, line: 1177, baseType: !824, size: 1024, offset: 3840)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !172, line: 963, size: 1024, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831, !832, !833, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !850, !851}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !824, file: !172, line: 965, baseType: !7, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !824, file: !172, line: 968, baseType: !77, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !824, file: !172, line: 971, baseType: !77, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !824, file: !172, line: 974, baseType: !77, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !824, file: !172, line: 977, baseType: !123, size: 96, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !824, file: !172, line: 979, baseType: !123, size: 96, offset: 224)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !824, file: !172, line: 982, baseType: !7, size: 32, offset: 320)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !824, file: !172, line: 987, baseType: !834, size: 64, offset: 352)
!834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 64, elements: !594)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !824, file: !172, line: 989, baseType: !77, size: 32, offset: 416)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !824, file: !172, line: 994, baseType: !7, size: 32, offset: 448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !824, file: !172, line: 995, baseType: !7, size: 32, offset: 480)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !824, file: !172, line: 997, baseType: !85, size: 8, offset: 512)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !824, file: !172, line: 998, baseType: !728, size: 56, offset: 520)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !824, file: !172, line: 1000, baseType: !77, size: 32, offset: 576)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !824, file: !172, line: 1003, baseType: !834, size: 64, offset: 608)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !824, file: !172, line: 1006, baseType: !7, size: 32, offset: 672)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !824, file: !172, line: 1009, baseType: !77, size: 32, offset: 704)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !824, file: !172, line: 1012, baseType: !834, size: 64, offset: 736)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !824, file: !172, line: 1015, baseType: !834, size: 64, offset: 800)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !824, file: !172, line: 1018, baseType: !7, size: 32, offset: 864)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !824, file: !172, line: 1019, baseType: !848, size: 64, offset: 896)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !172, line: 63, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !824, file: !172, line: 1023, baseType: !77, size: 32, offset: 960)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !824, file: !172, line: 1024, baseType: !7, size: 32, offset: 992)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !513, file: !172, line: 1179, baseType: !853, size: 320, offset: 4864)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !172, line: 1043, size: 320, elements: !854)
!854 = !{!855, !856, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !853, file: !172, line: 1044, baseType: !85, size: 8)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !853, file: !172, line: 1045, baseType: !857, size: 16, offset: 8)
!857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 16, elements: !594)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !853, file: !172, line: 1048, baseType: !85, size: 8, offset: 24)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !853, file: !172, line: 1049, baseType: !77, size: 32, offset: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !853, file: !172, line: 1049, baseType: !77, size: 32, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !853, file: !172, line: 1052, baseType: !77, size: 32, offset: 96)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !853, file: !172, line: 1052, baseType: !77, size: 32, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !853, file: !172, line: 1053, baseType: !85, size: 8, offset: 160)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !853, file: !172, line: 1054, baseType: !494, size: 24, offset: 168)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !853, file: !172, line: 1057, baseType: !77, size: 32, offset: 192)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !853, file: !172, line: 1057, baseType: !77, size: 32, offset: 224)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !853, file: !172, line: 1060, baseType: !77, size: 32, offset: 256)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !853, file: !172, line: 1060, baseType: !77, size: 32, offset: 288)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !173, file: !172, line: 1247, baseType: !870, size: 64, offset: 2176)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !172, line: 60, flags: DIFlagFwdDecl)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !173, file: !172, line: 1251, baseType: !873, size: 31872, offset: 2240)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !172, line: 403, size: 31872, elements: !874)
!874 = !{!875, !950, !970, !979, !999, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1129, !1130, !1131, !1135, !1151, !1152}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !873, file: !172, line: 404, baseType: !876, size: 1984)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !172, line: 259, size: 1984, elements: !877)
!877 = !{!878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !895, !945}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !876, file: !172, line: 260, baseType: !85, size: 8)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !876, file: !172, line: 263, baseType: !85, size: 8, offset: 8)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !876, file: !172, line: 266, baseType: !85, size: 8, offset: 16)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !876, file: !172, line: 267, baseType: !85, size: 8, offset: 24)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !876, file: !172, line: 269, baseType: !85, size: 8, offset: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !876, file: !172, line: 270, baseType: !85, size: 8, offset: 40)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !876, file: !172, line: 276, baseType: !85, size: 8, offset: 48)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !876, file: !172, line: 279, baseType: !85, size: 8, offset: 56)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !876, file: !172, line: 280, baseType: !94, size: 16, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !876, file: !172, line: 280, baseType: !94, size: 16, offset: 80)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !876, file: !172, line: 281, baseType: !77, size: 32, offset: 96)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !876, file: !172, line: 284, baseType: !85, size: 8, offset: 128)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !876, file: !172, line: 285, baseType: !85, size: 8, offset: 136)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !876, file: !172, line: 287, baseType: !892, size: 48, offset: 144)
!892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 48, elements: !893)
!893 = !{!894}
!894 = !DISubrange(count: 6)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !876, file: !172, line: 290, baseType: !896, size: 1280, offset: 192)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !456, line: 174, baseType: !897)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !456, line: 166, size: 1280, elements: !898)
!898 = !{!899, !900, !901, !902, !903, !904, !905, !944}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !897, file: !456, line: 167, baseType: !7, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !897, file: !456, line: 167, baseType: !7, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !897, file: !456, line: 168, baseType: !223, size: 512, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !897, file: !456, line: 169, baseType: !223, size: 512, offset: 576)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !897, file: !456, line: 170, baseType: !77, size: 32, offset: 1088)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !897, file: !456, line: 171, baseType: !77, size: 32, offset: 1120)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !897, file: !456, line: 172, baseType: !906, size: 64, offset: 1152)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !456, line: 72, size: 3072, elements: !908)
!908 = !{!909, !910, !911, !912, !913, !914, !915, !940, !941, !942, !943}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !907, file: !456, line: 73, baseType: !7, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !907, file: !456, line: 73, baseType: !7, size: 32, offset: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !907, file: !456, line: 74, baseType: !7, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !907, file: !456, line: 75, baseType: !7, size: 32, offset: 96)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !907, file: !456, line: 77, baseType: !503, size: 128, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !907, file: !456, line: 77, baseType: !503, size: 128, offset: 256)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !907, file: !456, line: 79, baseType: !916, size: 2304, offset: 384)
!916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 2304, elements: !533)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !456, line: 67, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !456, line: 55, size: 576, elements: !919)
!919 = !{!920, !921, !922, !923, !924, !925, !926, !927, !936, !937, !938, !939}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !918, file: !456, line: 56, baseType: !94, size: 16)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !918, file: !456, line: 56, baseType: !94, size: 16, offset: 16)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !918, file: !456, line: 58, baseType: !77, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !918, file: !456, line: 59, baseType: !77, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !918, file: !456, line: 59, baseType: !77, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !918, file: !456, line: 60, baseType: !834, size: 64, offset: 128)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !918, file: !456, line: 60, baseType: !834, size: 64, offset: 192)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !918, file: !456, line: 61, baseType: !928, size: 64, offset: 256)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !456, line: 47, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !456, line: 44, size: 96, elements: !931)
!931 = !{!932, !933, !934, !935}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !930, file: !456, line: 45, baseType: !77, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !930, file: !456, line: 45, baseType: !77, size: 32, offset: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !930, file: !456, line: 46, baseType: !94, size: 16, offset: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !930, file: !456, line: 46, baseType: !94, size: 16, offset: 80)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !918, file: !456, line: 62, baseType: !928, size: 64, offset: 320)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !918, file: !456, line: 64, baseType: !928, size: 64, offset: 384)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !918, file: !456, line: 65, baseType: !834, size: 64, offset: 448)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !918, file: !456, line: 66, baseType: !834, size: 64, offset: 512)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !907, file: !456, line: 80, baseType: !123, size: 96, offset: 2688)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !907, file: !456, line: 80, baseType: !123, size: 96, offset: 2784)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !907, file: !456, line: 81, baseType: !123, size: 96, offset: 2880)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !907, file: !456, line: 83, baseType: !123, size: 96, offset: 2976)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !897, file: !456, line: 173, baseType: !82, size: 64, offset: 1216)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !876, file: !172, line: 291, baseType: !946, size: 512, offset: 1472)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !456, line: 178, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !456, line: 176, size: 512, elements: !948)
!948 = !{!949}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !947, file: !456, line: 177, baseType: !223, size: 512)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !873, file: !172, line: 406, baseType: !951, size: 64, offset: 1984)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !172, line: 80, size: 1472, elements: !953)
!953 = !{!954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !952, file: !172, line: 81, baseType: !82, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !952, file: !172, line: 82, baseType: !82, size: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !952, file: !172, line: 83, baseType: !36, size: 32, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !952, file: !172, line: 84, baseType: !36, size: 32, offset: 160)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !952, file: !172, line: 86, baseType: !36, size: 32, offset: 192)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !952, file: !172, line: 87, baseType: !36, size: 32, offset: 224)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !952, file: !172, line: 88, baseType: !36, size: 32, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !952, file: !172, line: 89, baseType: !36, size: 32, offset: 288)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !952, file: !172, line: 90, baseType: !36, size: 32, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !952, file: !172, line: 91, baseType: !36, size: 32, offset: 352)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !952, file: !172, line: 92, baseType: !36, size: 32, offset: 384)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !952, file: !172, line: 93, baseType: !36, size: 32, offset: 416)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !952, file: !172, line: 95, baseType: !967, size: 1024, offset: 448)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 1024, elements: !968)
!968 = !{!969}
!969 = !DISubrange(count: 128)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !873, file: !172, line: 407, baseType: !971, size: 64, offset: 2048)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !172, line: 98, size: 1216, elements: !973)
!973 = !{!974, !975, !976, !977, !978}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !972, file: !172, line: 100, baseType: !82, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !972, file: !172, line: 101, baseType: !82, size: 64, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !972, file: !172, line: 103, baseType: !36, size: 32, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !972, file: !172, line: 104, baseType: !36, size: 32, offset: 160)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !972, file: !172, line: 106, baseType: !967, size: 1024, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !873, file: !172, line: 408, baseType: !980, size: 512, offset: 2112)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !172, line: 109, size: 512, elements: !981)
!981 = !{!982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !980, file: !172, line: 111, baseType: !7, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !980, file: !172, line: 112, baseType: !7, size: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !980, file: !172, line: 115, baseType: !7, size: 32, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !980, file: !172, line: 116, baseType: !7, size: 32, offset: 96)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !980, file: !172, line: 117, baseType: !7, size: 32, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !980, file: !172, line: 118, baseType: !7, size: 32, offset: 160)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !980, file: !172, line: 119, baseType: !7, size: 32, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !980, file: !172, line: 120, baseType: !7, size: 32, offset: 224)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !980, file: !172, line: 121, baseType: !7, size: 32, offset: 256)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !980, file: !172, line: 122, baseType: !7, size: 32, offset: 288)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !980, file: !172, line: 125, baseType: !7, size: 32, offset: 320)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !980, file: !172, line: 126, baseType: !7, size: 32, offset: 352)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !980, file: !172, line: 127, baseType: !94, size: 16, offset: 384)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !980, file: !172, line: 128, baseType: !94, size: 16, offset: 400)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !980, file: !172, line: 129, baseType: !7, size: 32, offset: 416)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !980, file: !172, line: 130, baseType: !7, size: 32, offset: 448)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !980, file: !172, line: 131, baseType: !7, size: 32, offset: 480)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !873, file: !172, line: 409, baseType: !1000, size: 576, offset: 2624)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !172, line: 134, size: 576, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1000, file: !172, line: 135, baseType: !7, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1000, file: !172, line: 136, baseType: !7, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1000, file: !172, line: 137, baseType: !7, size: 32, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1000, file: !172, line: 138, baseType: !7, size: 32, offset: 96)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1000, file: !172, line: 139, baseType: !7, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1000, file: !172, line: 140, baseType: !7, size: 32, offset: 160)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1000, file: !172, line: 141, baseType: !7, size: 32, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1000, file: !172, line: 142, baseType: !7, size: 32, offset: 224)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1000, file: !172, line: 143, baseType: !77, size: 32, offset: 256)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1000, file: !172, line: 144, baseType: !7, size: 32, offset: 288)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1000, file: !172, line: 145, baseType: !7, size: 32, offset: 320)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1000, file: !172, line: 147, baseType: !7, size: 32, offset: 352)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1000, file: !172, line: 148, baseType: !7, size: 32, offset: 384)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1000, file: !172, line: 149, baseType: !7, size: 32, offset: 416)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1000, file: !172, line: 150, baseType: !7, size: 32, offset: 448)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1000, file: !172, line: 151, baseType: !7, size: 32, offset: 480)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1000, file: !172, line: 152, baseType: !212, size: 64, offset: 512)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !873, file: !172, line: 411, baseType: !7, size: 32, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !873, file: !172, line: 411, baseType: !7, size: 32, offset: 3232)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !873, file: !172, line: 411, baseType: !7, size: 32, offset: 3264)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !873, file: !172, line: 412, baseType: !77, size: 32, offset: 3296)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !873, file: !172, line: 413, baseType: !7, size: 32, offset: 3328)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !873, file: !172, line: 413, baseType: !7, size: 32, offset: 3360)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !873, file: !172, line: 415, baseType: !7, size: 32, offset: 3392)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !873, file: !172, line: 415, baseType: !7, size: 32, offset: 3424)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !873, file: !172, line: 416, baseType: !94, size: 16, offset: 3456)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !873, file: !172, line: 416, baseType: !94, size: 16, offset: 3472)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !873, file: !172, line: 418, baseType: !77, size: 32, offset: 3488)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !873, file: !172, line: 418, baseType: !77, size: 32, offset: 3520)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !873, file: !172, line: 421, baseType: !77, size: 32, offset: 3552)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !873, file: !172, line: 421, baseType: !77, size: 32, offset: 3584)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !873, file: !172, line: 421, baseType: !77, size: 32, offset: 3616)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !873, file: !172, line: 425, baseType: !94, size: 16, offset: 3648)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !873, file: !172, line: 425, baseType: !94, size: 16, offset: 3664)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !873, file: !172, line: 425, baseType: !94, size: 16, offset: 3680)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !873, file: !172, line: 426, baseType: !94, size: 16, offset: 3696)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !873, file: !172, line: 428, baseType: !94, size: 16, offset: 3712)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !873, file: !172, line: 428, baseType: !94, size: 16, offset: 3728)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !873, file: !172, line: 431, baseType: !7, size: 32, offset: 3744)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !873, file: !172, line: 433, baseType: !94, size: 16, offset: 3776)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !873, file: !172, line: 435, baseType: !94, size: 16, offset: 3792)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !873, file: !172, line: 437, baseType: !94, size: 16, offset: 3808)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !873, file: !172, line: 439, baseType: !94, size: 16, offset: 3824)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !873, file: !172, line: 441, baseType: !94, size: 16, offset: 3840)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !873, file: !172, line: 443, baseType: !94, size: 16, offset: 3856)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !873, file: !172, line: 449, baseType: !7, size: 32, offset: 3872)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !873, file: !172, line: 453, baseType: !7, size: 32, offset: 3904)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !873, file: !172, line: 458, baseType: !94, size: 16, offset: 3936)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !873, file: !172, line: 462, baseType: !94, size: 16, offset: 3952)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !873, file: !172, line: 467, baseType: !7, size: 32, offset: 3968)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !873, file: !172, line: 467, baseType: !7, size: 32, offset: 4000)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !873, file: !172, line: 469, baseType: !94, size: 16, offset: 4032)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !873, file: !172, line: 469, baseType: !94, size: 16, offset: 4048)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !873, file: !172, line: 469, baseType: !94, size: 16, offset: 4064)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !873, file: !172, line: 469, baseType: !94, size: 16, offset: 4080)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !873, file: !172, line: 474, baseType: !94, size: 16, offset: 4096)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !873, file: !172, line: 475, baseType: !85, size: 8, offset: 4112)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !873, file: !172, line: 476, baseType: !85, size: 8, offset: 4120)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !873, file: !172, line: 481, baseType: !7, size: 32, offset: 4128)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !873, file: !172, line: 486, baseType: !7, size: 32, offset: 4160)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !873, file: !172, line: 491, baseType: !7, size: 32, offset: 4192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !873, file: !172, line: 496, baseType: !94, size: 16, offset: 4224)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !873, file: !172, line: 498, baseType: !94, size: 16, offset: 4240)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !873, file: !172, line: 501, baseType: !94, size: 16, offset: 4256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !873, file: !172, line: 502, baseType: !94, size: 16, offset: 4272)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !873, file: !172, line: 508, baseType: !94, size: 16, offset: 4288)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !873, file: !172, line: 513, baseType: !94, size: 16, offset: 4304)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !873, file: !172, line: 515, baseType: !94, size: 16, offset: 4320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !873, file: !172, line: 515, baseType: !94, size: 16, offset: 4336)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !873, file: !172, line: 519, baseType: !503, size: 128, offset: 4352)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !873, file: !172, line: 519, baseType: !503, size: 128, offset: 4480)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !873, file: !172, line: 520, baseType: !628, size: 128, offset: 4608)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !873, file: !172, line: 523, baseType: !233, size: 128, offset: 4736)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !873, file: !172, line: 524, baseType: !94, size: 16, offset: 4864)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !873, file: !172, line: 527, baseType: !94, size: 16, offset: 4880)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !873, file: !172, line: 532, baseType: !77, size: 32, offset: 4896)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !873, file: !172, line: 532, baseType: !77, size: 32, offset: 4928)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !873, file: !172, line: 534, baseType: !77, size: 32, offset: 4960)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !873, file: !172, line: 538, baseType: !77, size: 32, offset: 4992)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !873, file: !172, line: 542, baseType: !7, size: 32, offset: 5024)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !873, file: !172, line: 545, baseType: !77, size: 32, offset: 5056)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !873, file: !172, line: 545, baseType: !77, size: 32, offset: 5088)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !873, file: !172, line: 545, baseType: !77, size: 32, offset: 5120)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !873, file: !172, line: 548, baseType: !77, size: 32, offset: 5152)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !873, file: !172, line: 551, baseType: !94, size: 16, offset: 5184)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !873, file: !172, line: 551, baseType: !94, size: 16, offset: 5200)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !873, file: !172, line: 551, baseType: !94, size: 16, offset: 5216)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !873, file: !172, line: 551, baseType: !94, size: 16, offset: 5232)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !873, file: !172, line: 552, baseType: !94, size: 16, offset: 5248)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !873, file: !172, line: 552, baseType: !94, size: 16, offset: 5264)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !873, file: !172, line: 553, baseType: !77, size: 32, offset: 5280)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !873, file: !172, line: 553, baseType: !77, size: 32, offset: 5312)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !873, file: !172, line: 554, baseType: !94, size: 16, offset: 5344)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !873, file: !172, line: 554, baseType: !94, size: 16, offset: 5360)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !873, file: !172, line: 555, baseType: !77, size: 32, offset: 5376)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !873, file: !172, line: 555, baseType: !77, size: 32, offset: 5408)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !873, file: !172, line: 558, baseType: !195, size: 8192, offset: 5440)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !873, file: !172, line: 561, baseType: !7, size: 32, offset: 13632)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !873, file: !172, line: 562, baseType: !94, size: 16, offset: 13664)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !873, file: !172, line: 562, baseType: !94, size: 16, offset: 13680)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !873, file: !172, line: 565, baseType: !411, size: 6144, offset: 13696)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !873, file: !172, line: 568, baseType: !722, size: 128, offset: 19840)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !873, file: !172, line: 569, baseType: !722, size: 128, offset: 19968)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !873, file: !172, line: 572, baseType: !85, size: 8, offset: 20096)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !873, file: !172, line: 573, baseType: !85, size: 8, offset: 20104)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !873, file: !172, line: 574, baseType: !85, size: 8, offset: 20112)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !873, file: !172, line: 575, baseType: !581, size: 40, offset: 20120)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !873, file: !172, line: 578, baseType: !7, size: 32, offset: 20160)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !873, file: !172, line: 579, baseType: !94, size: 16, offset: 20192)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !873, file: !172, line: 580, baseType: !94, size: 16, offset: 20208)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !873, file: !172, line: 581, baseType: !77, size: 32, offset: 20224)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !873, file: !172, line: 582, baseType: !77, size: 32, offset: 20256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !873, file: !172, line: 585, baseType: !94, size: 16, offset: 20288)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !873, file: !172, line: 585, baseType: !94, size: 16, offset: 20304)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !873, file: !172, line: 586, baseType: !77, size: 32, offset: 20320)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !873, file: !172, line: 589, baseType: !94, size: 16, offset: 20352)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !873, file: !172, line: 589, baseType: !94, size: 16, offset: 20368)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !873, file: !172, line: 590, baseType: !7, size: 32, offset: 20384)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !873, file: !172, line: 593, baseType: !94, size: 16, offset: 20416)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !873, file: !172, line: 593, baseType: !94, size: 16, offset: 20432)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !873, file: !172, line: 594, baseType: !94, size: 16, offset: 20448)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !873, file: !172, line: 594, baseType: !94, size: 16, offset: 20464)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !873, file: !172, line: 595, baseType: !77, size: 32, offset: 20480)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !873, file: !172, line: 596, baseType: !77, size: 32, offset: 20512)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !873, file: !172, line: 597, baseType: !1127, size: 64, offset: 20544)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !665, line: 44, flags: DIFlagFwdDecl)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !873, file: !172, line: 600, baseType: !7, size: 32, offset: 20608)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !873, file: !172, line: 601, baseType: !77, size: 32, offset: 20640)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !873, file: !172, line: 604, baseType: !1132, size: 256, offset: 20672)
!1132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 256, elements: !1133)
!1133 = !{!1134}
!1134 = !DISubrange(count: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !873, file: !172, line: 607, baseType: !1136, size: 10880, offset: 20928)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !172, line: 364, size: 10880, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1136, file: !172, line: 365, baseType: !876, size: 1984)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1136, file: !172, line: 367, baseType: !195, size: 8192, offset: 1984)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1136, file: !172, line: 369, baseType: !94, size: 16, offset: 10176)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1136, file: !172, line: 369, baseType: !94, size: 16, offset: 10192)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1136, file: !172, line: 370, baseType: !94, size: 16, offset: 10208)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1136, file: !172, line: 370, baseType: !94, size: 16, offset: 10224)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1136, file: !172, line: 372, baseType: !77, size: 32, offset: 10240)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1136, file: !172, line: 373, baseType: !77, size: 32, offset: 10272)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1136, file: !172, line: 375, baseType: !494, size: 24, offset: 10304)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1136, file: !172, line: 376, baseType: !85, size: 8, offset: 10328)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1136, file: !172, line: 378, baseType: !85, size: 8, offset: 10336)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1136, file: !172, line: 379, baseType: !494, size: 24, offset: 10344)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1136, file: !172, line: 381, baseType: !223, size: 512, offset: 10368)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !873, file: !172, line: 609, baseType: !7, size: 32, offset: 31808)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !873, file: !172, line: 610, baseType: !7, size: 32, offset: 31840)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !173, file: !172, line: 1252, baseType: !1154, size: 256, offset: 34112)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !172, line: 158, size: 256, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1154, file: !172, line: 159, baseType: !7, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1154, file: !172, line: 160, baseType: !77, size: 32, offset: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1154, file: !172, line: 161, baseType: !77, size: 32, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1154, file: !172, line: 162, baseType: !77, size: 32, offset: 96)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1154, file: !172, line: 163, baseType: !7, size: 32, offset: 128)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1154, file: !172, line: 164, baseType: !94, size: 16, offset: 160)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1154, file: !172, line: 165, baseType: !94, size: 16, offset: 176)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1154, file: !172, line: 166, baseType: !77, size: 32, offset: 192)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1154, file: !172, line: 167, baseType: !77, size: 32, offset: 224)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !173, file: !172, line: 1254, baseType: !233, size: 128, offset: 34368)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !173, file: !172, line: 1255, baseType: !233, size: 128, offset: 34496)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !173, file: !172, line: 1257, baseType: !82, size: 64, offset: 34624)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !173, file: !172, line: 1258, baseType: !82, size: 64, offset: 34688)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !173, file: !172, line: 1259, baseType: !82, size: 64, offset: 34752)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !173, file: !172, line: 1260, baseType: !82, size: 64, offset: 34816)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !173, file: !172, line: 1262, baseType: !82, size: 64, offset: 34880)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !173, file: !172, line: 1265, baseType: !1173, size: 64, offset: 34944)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !172, line: 1265, flags: DIFlagFwdDecl)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !173, file: !172, line: 1266, baseType: !94, size: 16, offset: 35008)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !173, file: !172, line: 1267, baseType: !94, size: 16, offset: 35024)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !173, file: !172, line: 1270, baseType: !7, size: 32, offset: 35040)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !173, file: !172, line: 1271, baseType: !233, size: 128, offset: 35072)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !173, file: !172, line: 1274, baseType: !1180, size: 128, offset: 35200)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !172, line: 650, size: 128, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1180, file: !172, line: 651, baseType: !123, size: 96)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1180, file: !172, line: 652, baseType: !85, size: 8, offset: 96)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1180, file: !172, line: 652, baseType: !85, size: 8, offset: 104)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1180, file: !172, line: 652, baseType: !85, size: 8, offset: 112)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1180, file: !172, line: 652, baseType: !85, size: 8, offset: 120)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !173, file: !172, line: 1275, baseType: !1188, size: 1472, offset: 35328)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !172, line: 676, size: 1472, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1202, !1212, !1213, !1214, !1215, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1188, file: !172, line: 679, baseType: !1180, size: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1188, file: !172, line: 680, baseType: !94, size: 16, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1188, file: !172, line: 680, baseType: !94, size: 16, offset: 144)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1188, file: !172, line: 680, baseType: !94, size: 16, offset: 160)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1188, file: !172, line: 680, baseType: !94, size: 16, offset: 176)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1188, file: !172, line: 681, baseType: !94, size: 16, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1188, file: !172, line: 681, baseType: !94, size: 16, offset: 208)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1188, file: !172, line: 681, baseType: !94, size: 16, offset: 224)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1188, file: !172, line: 681, baseType: !94, size: 16, offset: 240)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1188, file: !172, line: 682, baseType: !94, size: 16, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1188, file: !172, line: 682, baseType: !1201, size: 48, offset: 272)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !94, size: 48, elements: !124)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1188, file: !172, line: 685, baseType: !1203, size: 192, offset: 320)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !172, line: 633, size: 192, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1208, !1209, !1210, !1211}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1203, file: !172, line: 634, baseType: !94, size: 16)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1203, file: !172, line: 634, baseType: !94, size: 16, offset: 16)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1203, file: !172, line: 635, baseType: !94, size: 16, offset: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1203, file: !172, line: 635, baseType: !94, size: 16, offset: 48)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1203, file: !172, line: 636, baseType: !77, size: 32, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1203, file: !172, line: 636, baseType: !77, size: 32, offset: 96)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1203, file: !172, line: 637, baseType: !1127, size: 64, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1188, file: !172, line: 686, baseType: !94, size: 16, offset: 512)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1188, file: !172, line: 686, baseType: !94, size: 16, offset: 528)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1188, file: !172, line: 687, baseType: !77, size: 32, offset: 544)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1188, file: !172, line: 688, baseType: !1216, size: 448, offset: 576)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !172, line: 674, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !172, line: 659, size: 448, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1217, file: !172, line: 660, baseType: !77, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1217, file: !172, line: 661, baseType: !77, size: 32, offset: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1217, file: !172, line: 662, baseType: !77, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1217, file: !172, line: 663, baseType: !77, size: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1217, file: !172, line: 664, baseType: !77, size: 32, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1217, file: !172, line: 665, baseType: !77, size: 32, offset: 160)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1217, file: !172, line: 666, baseType: !77, size: 32, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1217, file: !172, line: 667, baseType: !77, size: 32, offset: 224)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1217, file: !172, line: 668, baseType: !77, size: 32, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1217, file: !172, line: 669, baseType: !77, size: 32, offset: 288)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1217, file: !172, line: 670, baseType: !7, size: 32, offset: 320)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1217, file: !172, line: 671, baseType: !77, size: 32, offset: 352)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1217, file: !172, line: 672, baseType: !77, size: 32, offset: 384)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1217, file: !172, line: 673, baseType: !94, size: 16, offset: 416)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1217, file: !172, line: 673, baseType: !94, size: 16, offset: 432)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1188, file: !172, line: 692, baseType: !77, size: 32, offset: 1024)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1188, file: !172, line: 697, baseType: !77, size: 32, offset: 1056)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1188, file: !172, line: 703, baseType: !7, size: 32, offset: 1088)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1188, file: !172, line: 704, baseType: !94, size: 16, offset: 1120)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1188, file: !172, line: 704, baseType: !94, size: 16, offset: 1136)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1188, file: !172, line: 705, baseType: !94, size: 16, offset: 1152)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1188, file: !172, line: 706, baseType: !94, size: 16, offset: 1168)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1188, file: !172, line: 707, baseType: !94, size: 16, offset: 1184)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1188, file: !172, line: 708, baseType: !94, size: 16, offset: 1200)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1188, file: !172, line: 709, baseType: !94, size: 16, offset: 1216)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1188, file: !172, line: 709, baseType: !94, size: 16, offset: 1232)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1188, file: !172, line: 709, baseType: !94, size: 16, offset: 1248)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1188, file: !172, line: 709, baseType: !94, size: 16, offset: 1264)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1188, file: !172, line: 710, baseType: !94, size: 16, offset: 1280)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1188, file: !172, line: 711, baseType: !94, size: 16, offset: 1296)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1188, file: !172, line: 712, baseType: !77, size: 32, offset: 1312)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1188, file: !172, line: 713, baseType: !77, size: 32, offset: 1344)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1188, file: !172, line: 713, baseType: !77, size: 32, offset: 1376)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1188, file: !172, line: 713, baseType: !77, size: 32, offset: 1408)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1188, file: !172, line: 713, baseType: !77, size: 32, offset: 1440)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !173, file: !172, line: 1278, baseType: !1255, size: 64, offset: 36800)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !172, line: 1197, size: 64, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1255, file: !172, line: 1199, baseType: !77, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1255, file: !172, line: 1200, baseType: !85, size: 8, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1255, file: !172, line: 1201, baseType: !85, size: 8, offset: 40)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1255, file: !172, line: 1202, baseType: !94, size: 16, offset: 48)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !173, file: !172, line: 1281, baseType: !1262, size: 64, offset: 36864)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !172, line: 61, flags: DIFlagFwdDecl)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !173, file: !172, line: 1284, baseType: !1265, size: 192, offset: 36928)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !172, line: 1208, size: 192, elements: !1266)
!1266 = !{!1267, !1268, !1269, !1270}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1265, file: !172, line: 1209, baseType: !123, size: 96)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1265, file: !172, line: 1210, baseType: !7, size: 32, offset: 96)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1265, file: !172, line: 1210, baseType: !7, size: 32, offset: 128)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1265, file: !172, line: 1210, baseType: !7, size: 32, offset: 160)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !173, file: !172, line: 1287, baseType: !466, size: 64, offset: 37120)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !173, file: !172, line: 1289, baseType: !1273, size: 64, offset: 37184)
!1273 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1274, line: 27, baseType: !1275)
!1274 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1276, line: 45, baseType: !1277)
!1276 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1277 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !173, file: !172, line: 1290, baseType: !1273, size: 64, offset: 37248)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !173, file: !172, line: 1293, baseType: !896, size: 1280, offset: 37312)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !173, file: !172, line: 1294, baseType: !946, size: 512, offset: 38592)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !173, file: !172, line: 1295, baseType: !455, size: 512, offset: 39104)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !173, file: !172, line: 1298, baseType: !1283, size: 64, offset: 39616)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !172, line: 1298, flags: DIFlagFwdDecl)
!1285 = !{}
!1286 = !DILocalVariable(name: "scene", arg: 1, scope: !167, file: !3, line: 2442, type: !170)
!1287 = !DILocation(line: 2442, column: 51, scope: !167)
!1288 = !DILocalVariable(name: "seq", arg: 2, scope: !167, file: !3, line: 2442, type: !360)
!1289 = !DILocation(line: 2442, column: 68, scope: !167)
!1290 = !DILocalVariable(name: "force", arg: 3, scope: !167, file: !3, line: 2442, type: !84)
!1291 = !DILocation(line: 2442, column: 78, scope: !167)
!1292 = !DILocalVariable(name: "cfra", scope: !167, file: !3, line: 2444, type: !7)
!1293 = !DILocation(line: 2444, column: 6, scope: !167)
!1294 = !DILocalVariable(name: "fallback_fac", scope: !167, file: !3, line: 2445, type: !77)
!1295 = !DILocation(line: 2445, column: 8, scope: !167)
!1296 = !DILocalVariable(name: "v", scope: !167, file: !3, line: 2446, type: !71)
!1297 = !DILocation(line: 2446, column: 20, scope: !167)
!1298 = !DILocation(line: 2446, column: 45, scope: !167)
!1299 = !DILocation(line: 2446, column: 50, scope: !167)
!1300 = !DILocation(line: 2446, column: 24, scope: !167)
!1301 = !DILocalVariable(name: "fcu", scope: !167, file: !3, line: 2447, type: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCurve", file: !246, line: 463, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCurve", file: !246, line: 433, size: 896, elements: !1305)
!1305 = !{!1306, !1308, !1309, !1332, !1344, !1345, !1369, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1304, file: !246, line: 434, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1304, file: !246, line: 434, baseType: !1307, size: 64, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !1304, file: !246, line: 437, baseType: !1310, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !251, line: 450, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !251, line: 440, size: 960, elements: !1313)
!1313 = !{!1314, !1316, !1317, !1318, !1319, !1320, !1321}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1312, file: !251, line: 441, baseType: !1315, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1312, file: !251, line: 441, baseType: !1315, size: 64, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1312, file: !251, line: 443, baseType: !233, size: 128, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1312, file: !251, line: 445, baseType: !7, size: 32, offset: 256)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !1312, file: !251, line: 446, baseType: !7, size: 32, offset: 288)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1312, file: !251, line: 447, baseType: !223, size: 512, offset: 320)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1312, file: !251, line: 449, baseType: !1322, size: 128, offset: 832)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !1323, line: 347, baseType: !1324)
!1323 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !1323, line: 340, size: 128, elements: !1325)
!1325 = !{!1326, !1328, !1329, !1330, !1331}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !1324, file: !1323, line: 341, baseType: !1327, size: 32)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 32, elements: !533)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !1324, file: !1323, line: 342, baseType: !1327, size: 32, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1324, file: !1323, line: 343, baseType: !1327, size: 32, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1324, file: !1323, line: 345, baseType: !94, size: 16, offset: 96)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1324, file: !1323, line: 346, baseType: !94, size: 16, offset: 112)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1304, file: !246, line: 440, baseType: !1333, size: 64, offset: 192)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelDriver", file: !246, line: 386, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelDriver", file: !246, line: 371, size: 2368, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1340, !1341, !1342, !1343}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !1335, file: !246, line: 372, baseType: !233, size: 128)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !1335, file: !246, line: 377, baseType: !407, size: 2048, offset: 128)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "expr_comp", scope: !1335, file: !246, line: 378, baseType: !82, size: 64, offset: 2176)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !1335, file: !246, line: 380, baseType: !77, size: 32, offset: 2240)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !1335, file: !246, line: 381, baseType: !77, size: 32, offset: 2272)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1335, file: !246, line: 384, baseType: !7, size: 32, offset: 2304)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1335, file: !246, line: 385, baseType: !7, size: 32, offset: 2336)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1304, file: !246, line: 442, baseType: !233, size: 128, offset: 256)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !1304, file: !246, line: 445, baseType: !1346, size: 64, offset: 384)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !1348, line: 133, baseType: !1349)
!1348 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !1348, line: 117, size: 576, elements: !1350)
!1350 = !{!1351, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1349, file: !1348, line: 118, baseType: !1352, size: 288)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 288, elements: !1353)
!1353 = !{!125, !125}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1349, file: !1348, line: 119, baseType: !77, size: 32, offset: 288)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1349, file: !1348, line: 119, baseType: !77, size: 32, offset: 320)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1349, file: !1348, line: 119, baseType: !77, size: 32, offset: 352)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1349, file: !1348, line: 121, baseType: !85, size: 8, offset: 384)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1349, file: !1348, line: 123, baseType: !85, size: 8, offset: 392)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1349, file: !1348, line: 123, baseType: !85, size: 8, offset: 400)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1349, file: !1348, line: 124, baseType: !85, size: 8, offset: 408)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1349, file: !1348, line: 124, baseType: !85, size: 8, offset: 416)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1349, file: !1348, line: 124, baseType: !85, size: 8, offset: 424)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1349, file: !1348, line: 126, baseType: !85, size: 8, offset: 432)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1349, file: !1348, line: 128, baseType: !85, size: 8, offset: 440)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1349, file: !1348, line: 129, baseType: !77, size: 32, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1349, file: !1348, line: 130, baseType: !77, size: 32, offset: 480)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1349, file: !1348, line: 130, baseType: !77, size: 32, offset: 512)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1349, file: !1348, line: 132, baseType: !1327, size: 32, offset: 544)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "fpt", scope: !1304, file: !246, line: 446, baseType: !1370, size: 64, offset: 448)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "FPoint", file: !246, line: 430, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPoint", file: !246, line: 426, size: 128, elements: !1373)
!1373 = !{!1374, !1375, !1376}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1372, file: !246, line: 427, baseType: !834, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1372, file: !246, line: 428, baseType: !7, size: 32, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1372, file: !246, line: 429, baseType: !7, size: 32, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1304, file: !246, line: 447, baseType: !36, size: 32, offset: 512)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !1304, file: !246, line: 450, baseType: !77, size: 32, offset: 544)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1304, file: !246, line: 451, baseType: !94, size: 16, offset: 576)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1304, file: !246, line: 452, baseType: !94, size: 16, offset: 592)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !1304, file: !246, line: 455, baseType: !7, size: 32, offset: 608)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !1304, file: !246, line: 456, baseType: !678, size: 64, offset: 640)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1304, file: !246, line: 459, baseType: !7, size: 32, offset: 704)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1304, file: !246, line: 460, baseType: !123, size: 96, offset: 736)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "prev_norm_factor", scope: !1304, file: !246, line: 462, baseType: !77, size: 32, offset: 832)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1304, file: !246, line: 462, baseType: !77, size: 32, offset: 864)
!1387 = !DILocation(line: 2447, column: 10, scope: !167)
!1388 = !DILocalVariable(name: "flags", scope: !167, file: !3, line: 2448, type: !7)
!1389 = !DILocation(line: 2448, column: 6, scope: !167)
!1390 = !DILocation(line: 2448, column: 14, scope: !167)
!1391 = !DILocation(line: 2448, column: 17, scope: !167)
!1392 = !DILocation(line: 2451, column: 26, scope: !167)
!1393 = !DILocation(line: 2451, column: 2, scope: !167)
!1394 = !DILocation(line: 2453, column: 7, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !167, file: !3, line: 2453, column: 6)
!1396 = !DILocation(line: 2453, column: 13, scope: !1395)
!1397 = !DILocation(line: 2453, column: 23, scope: !1395)
!1398 = !DILocation(line: 2454, column: 7, scope: !1395)
!1399 = !DILocation(line: 2454, column: 12, scope: !1395)
!1400 = !DILocation(line: 2454, column: 19, scope: !1395)
!1401 = !DILocation(line: 2454, column: 22, scope: !1395)
!1402 = !DILocation(line: 2454, column: 16, scope: !1395)
!1403 = !DILocation(line: 2454, column: 30, scope: !1395)
!1404 = !DILocation(line: 2455, column: 7, scope: !1395)
!1405 = !DILocation(line: 2455, column: 10, scope: !1395)
!1406 = !DILocation(line: 2455, column: 19, scope: !1395)
!1407 = !DILocation(line: 2453, column: 6, scope: !167)
!1408 = !DILocation(line: 2457, column: 3, scope: !1409)
!1409 = distinct !DILexicalBlock(scope: !1395, file: !3, line: 2456, column: 2)
!1410 = !DILocation(line: 2459, column: 7, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !167, file: !3, line: 2459, column: 6)
!1412 = !DILocation(line: 2459, column: 12, scope: !1411)
!1413 = !DILocation(line: 2459, column: 17, scope: !1411)
!1414 = !DILocation(line: 2459, column: 26, scope: !1411)
!1415 = !DILocation(line: 2459, column: 30, scope: !1411)
!1416 = !DILocation(line: 2459, column: 35, scope: !1411)
!1417 = !DILocation(line: 2459, column: 39, scope: !1411)
!1418 = !DILocation(line: 2459, column: 6, scope: !167)
!1419 = !DILocation(line: 2461, column: 3, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1411, file: !3, line: 2459, column: 45)
!1421 = !DILocation(line: 2466, column: 29, scope: !167)
!1422 = !DILocation(line: 2466, column: 36, scope: !167)
!1423 = !DILocation(line: 2466, column: 40, scope: !167)
!1424 = !DILocation(line: 2466, column: 8, scope: !167)
!1425 = !DILocation(line: 2466, column: 6, scope: !167)
!1426 = !DILocation(line: 2469, column: 7, scope: !1427)
!1427 = distinct !DILexicalBlock(scope: !167, file: !3, line: 2469, column: 6)
!1428 = !DILocation(line: 2469, column: 10, scope: !1427)
!1429 = !DILocation(line: 2469, column: 19, scope: !1427)
!1430 = !DILocation(line: 2469, column: 22, scope: !1427)
!1431 = !DILocation(line: 2469, column: 25, scope: !1427)
!1432 = !DILocation(line: 2469, column: 35, scope: !1427)
!1433 = !DILocation(line: 2469, column: 40, scope: !1427)
!1434 = !DILocation(line: 2469, column: 32, scope: !1427)
!1435 = !DILocation(line: 2469, column: 6, scope: !167)
!1436 = !DILocation(line: 2470, column: 7, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1438, file: !3, line: 2470, column: 7)
!1438 = distinct !DILexicalBlock(scope: !1427, file: !3, line: 2469, column: 45)
!1439 = !DILocation(line: 2470, column: 10, scope: !1437)
!1440 = !DILocation(line: 2470, column: 7, scope: !1438)
!1441 = !DILocation(line: 2470, column: 20, scope: !1437)
!1442 = !DILocation(line: 2470, column: 30, scope: !1437)
!1443 = !DILocation(line: 2470, column: 33, scope: !1437)
!1444 = !DILocation(line: 2472, column: 15, scope: !1438)
!1445 = !DILocation(line: 2472, column: 20, scope: !1438)
!1446 = !DILocation(line: 2472, column: 3, scope: !1438)
!1447 = !DILocation(line: 2472, column: 6, scope: !1438)
!1448 = !DILocation(line: 2472, column: 13, scope: !1438)
!1449 = !DILocation(line: 2474, column: 17, scope: !1438)
!1450 = !DILocation(line: 2474, column: 45, scope: !1438)
!1451 = !DILocation(line: 2474, column: 48, scope: !1438)
!1452 = !DILocation(line: 2474, column: 43, scope: !1438)
!1453 = !DILocation(line: 2474, column: 3, scope: !1438)
!1454 = !DILocation(line: 2474, column: 6, scope: !1438)
!1455 = !DILocation(line: 2474, column: 15, scope: !1438)
!1456 = !DILocation(line: 2475, column: 2, scope: !1438)
!1457 = !DILocation(line: 2477, column: 15, scope: !167)
!1458 = !DILocation(line: 2479, column: 6, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !167, file: !3, line: 2479, column: 6)
!1460 = !DILocation(line: 2479, column: 11, scope: !1459)
!1461 = !DILocation(line: 2479, column: 16, scope: !1459)
!1462 = !DILocation(line: 2479, column: 6, scope: !167)
!1463 = !DILocation(line: 2480, column: 8, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 2480, column: 7)
!1465 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 2479, column: 47)
!1466 = !DILocation(line: 2480, column: 13, scope: !1464)
!1467 = !DILocation(line: 2480, column: 19, scope: !1464)
!1468 = !DILocation(line: 2480, column: 30, scope: !1464)
!1469 = !DILocation(line: 2480, column: 35, scope: !1464)
!1470 = !DILocation(line: 2480, column: 41, scope: !1464)
!1471 = !DILocation(line: 2480, column: 27, scope: !1464)
!1472 = !DILocation(line: 2480, column: 48, scope: !1464)
!1473 = !DILocation(line: 2481, column: 8, scope: !1464)
!1474 = !DILocation(line: 2481, column: 13, scope: !1464)
!1475 = !DILocation(line: 2481, column: 19, scope: !1464)
!1476 = !DILocation(line: 2481, column: 23, scope: !1464)
!1477 = !DILocation(line: 2480, column: 7, scope: !1465)
!1478 = !DILocation(line: 2483, column: 27, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 2482, column: 3)
!1480 = !DILocation(line: 2483, column: 32, scope: !1479)
!1481 = !DILocation(line: 2483, column: 38, scope: !1479)
!1482 = !DILocation(line: 2483, column: 19, scope: !1479)
!1483 = !DILocation(line: 2483, column: 53, scope: !1479)
!1484 = !DILocation(line: 2483, column: 58, scope: !1479)
!1485 = !DILocation(line: 2483, column: 64, scope: !1479)
!1486 = !DILocation(line: 2483, column: 74, scope: !1479)
!1487 = !DILocation(line: 2483, column: 79, scope: !1479)
!1488 = !DILocation(line: 2483, column: 85, scope: !1479)
!1489 = !DILocation(line: 2483, column: 72, scope: !1479)
!1490 = !DILocation(line: 2483, column: 44, scope: !1479)
!1491 = !DILocation(line: 2483, column: 42, scope: !1479)
!1492 = !DILocation(line: 2483, column: 17, scope: !1479)
!1493 = !DILocation(line: 2484, column: 10, scope: !1479)
!1494 = !DILocation(line: 2485, column: 8, scope: !1479)
!1495 = !DILocation(line: 2486, column: 3, scope: !1479)
!1496 = !DILocation(line: 2487, column: 2, scope: !1465)
!1497 = !DILocation(line: 2490, column: 8, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 2490, column: 7)
!1499 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 2488, column: 7)
!1500 = !DILocation(line: 2490, column: 7, scope: !1499)
!1501 = !DILocation(line: 2491, column: 19, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1498, file: !3, line: 2490, column: 13)
!1503 = !DILocation(line: 2491, column: 24, scope: !1502)
!1504 = !DILocation(line: 2491, column: 17, scope: !1502)
!1505 = !DILocation(line: 2492, column: 3, scope: !1502)
!1506 = !DILocation(line: 2495, column: 6, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !167, file: !3, line: 2495, column: 6)
!1508 = !DILocation(line: 2495, column: 12, scope: !1507)
!1509 = !DILocation(line: 2495, column: 6, scope: !167)
!1510 = !DILocalVariable(name: "cursor", scope: !1511, file: !3, line: 2496, type: !77)
!1511 = distinct !DILexicalBlock(scope: !1507, file: !3, line: 2495, column: 35)
!1512 = !DILocation(line: 2496, column: 9, scope: !1511)
!1513 = !DILocalVariable(name: "facf", scope: !1511, file: !3, line: 2497, type: !77)
!1514 = !DILocation(line: 2497, column: 9, scope: !1511)
!1515 = !DILocation(line: 2499, column: 3, scope: !1511)
!1516 = !DILocation(line: 2499, column: 6, scope: !1511)
!1517 = !DILocation(line: 2499, column: 18, scope: !1511)
!1518 = !DILocation(line: 2500, column: 3, scope: !1511)
!1519 = !DILocation(line: 2500, column: 6, scope: !1511)
!1520 = !DILocation(line: 2500, column: 21, scope: !1511)
!1521 = !DILocation(line: 2502, column: 13, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1511, file: !3, line: 2502, column: 3)
!1523 = !DILocation(line: 2502, column: 8, scope: !1522)
!1524 = !DILocation(line: 2502, column: 18, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1522, file: !3, line: 2502, column: 3)
!1526 = !DILocation(line: 2502, column: 25, scope: !1525)
!1527 = !DILocation(line: 2502, column: 28, scope: !1525)
!1528 = !DILocation(line: 2502, column: 23, scope: !1525)
!1529 = !DILocation(line: 2502, column: 3, scope: !1522)
!1530 = !DILocation(line: 2503, column: 8, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1532, file: !3, line: 2503, column: 8)
!1532 = distinct !DILexicalBlock(scope: !1525, file: !3, line: 2502, column: 44)
!1533 = !DILocation(line: 2503, column: 8, scope: !1532)
!1534 = !DILocation(line: 2504, column: 28, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 2503, column: 13)
!1536 = !DILocation(line: 2504, column: 33, scope: !1535)
!1537 = !DILocation(line: 2504, column: 38, scope: !1535)
!1538 = !DILocation(line: 2504, column: 50, scope: !1535)
!1539 = !DILocation(line: 2504, column: 48, scope: !1535)
!1540 = !DILocation(line: 2504, column: 12, scope: !1535)
!1541 = !DILocation(line: 2504, column: 10, scope: !1535)
!1542 = !DILocation(line: 2505, column: 4, scope: !1535)
!1543 = !DILocation(line: 2507, column: 12, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 2506, column: 9)
!1545 = !DILocation(line: 2507, column: 10, scope: !1544)
!1546 = !DILocation(line: 2509, column: 12, scope: !1532)
!1547 = !DILocation(line: 2509, column: 15, scope: !1532)
!1548 = !DILocation(line: 2509, column: 9, scope: !1532)
!1549 = !DILocation(line: 2511, column: 14, scope: !1532)
!1550 = !DILocation(line: 2511, column: 11, scope: !1532)
!1551 = !DILocation(line: 2513, column: 8, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1532, file: !3, line: 2513, column: 8)
!1553 = !DILocation(line: 2513, column: 18, scope: !1552)
!1554 = !DILocation(line: 2513, column: 23, scope: !1552)
!1555 = !DILocation(line: 2513, column: 29, scope: !1552)
!1556 = !DILocation(line: 2513, column: 15, scope: !1552)
!1557 = !DILocation(line: 2513, column: 8, scope: !1532)
!1558 = !DILocation(line: 2514, column: 25, scope: !1559)
!1559 = distinct !DILexicalBlock(scope: !1552, file: !3, line: 2513, column: 34)
!1560 = !DILocation(line: 2514, column: 30, scope: !1559)
!1561 = !DILocation(line: 2514, column: 36, scope: !1559)
!1562 = !DILocation(line: 2514, column: 40, scope: !1559)
!1563 = !DILocation(line: 2514, column: 5, scope: !1559)
!1564 = !DILocation(line: 2514, column: 8, scope: !1559)
!1565 = !DILocation(line: 2514, column: 17, scope: !1559)
!1566 = !DILocation(line: 2514, column: 23, scope: !1559)
!1567 = !DILocation(line: 2515, column: 4, scope: !1559)
!1568 = !DILocation(line: 2517, column: 25, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1552, file: !3, line: 2516, column: 9)
!1570 = !DILocation(line: 2517, column: 5, scope: !1569)
!1571 = !DILocation(line: 2517, column: 8, scope: !1569)
!1572 = !DILocation(line: 2517, column: 17, scope: !1569)
!1573 = !DILocation(line: 2517, column: 23, scope: !1569)
!1574 = !DILocation(line: 2518, column: 25, scope: !1569)
!1575 = !DILocation(line: 2518, column: 5, scope: !1569)
!1576 = !DILocation(line: 2518, column: 8, scope: !1569)
!1577 = !DILocation(line: 2518, column: 23, scope: !1569)
!1578 = !DILocation(line: 2520, column: 3, scope: !1532)
!1579 = !DILocation(line: 2502, column: 40, scope: !1525)
!1580 = !DILocation(line: 2502, column: 3, scope: !1525)
!1581 = distinct !{!1581, !1529, !1582}
!1582 = !DILocation(line: 2520, column: 3, scope: !1522)
!1583 = !DILocation(line: 2521, column: 2, scope: !1511)
!1584 = !DILocalVariable(name: "facf", scope: !1585, file: !3, line: 2523, type: !77)
!1585 = distinct !DILexicalBlock(scope: !1507, file: !3, line: 2522, column: 7)
!1586 = !DILocation(line: 2523, column: 9, scope: !1585)
!1587 = !DILocation(line: 2525, column: 3, scope: !1585)
!1588 = !DILocation(line: 2525, column: 6, scope: !1585)
!1589 = !DILocation(line: 2525, column: 21, scope: !1585)
!1590 = !DILocation(line: 2526, column: 13, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1585, file: !3, line: 2526, column: 3)
!1592 = !DILocation(line: 2526, column: 8, scope: !1591)
!1593 = !DILocation(line: 2526, column: 18, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1591, file: !3, line: 2526, column: 3)
!1595 = !DILocation(line: 2526, column: 25, scope: !1594)
!1596 = !DILocation(line: 2526, column: 28, scope: !1594)
!1597 = !DILocation(line: 2526, column: 23, scope: !1594)
!1598 = !DILocation(line: 2526, column: 3, scope: !1591)
!1599 = !DILocation(line: 2528, column: 8, scope: !1600)
!1600 = distinct !DILexicalBlock(scope: !1601, file: !3, line: 2528, column: 8)
!1601 = distinct !DILexicalBlock(scope: !1594, file: !3, line: 2526, column: 44)
!1602 = !DILocation(line: 2528, column: 8, scope: !1601)
!1603 = !DILocation(line: 2529, column: 28, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1600, file: !3, line: 2528, column: 13)
!1605 = !DILocation(line: 2529, column: 33, scope: !1604)
!1606 = !DILocation(line: 2529, column: 38, scope: !1604)
!1607 = !DILocation(line: 2529, column: 50, scope: !1604)
!1608 = !DILocation(line: 2529, column: 48, scope: !1604)
!1609 = !DILocation(line: 2529, column: 12, scope: !1604)
!1610 = !DILocation(line: 2529, column: 10, scope: !1604)
!1611 = !DILocation(line: 2530, column: 4, scope: !1604)
!1612 = !DILocation(line: 2532, column: 12, scope: !1613)
!1613 = distinct !DILexicalBlock(scope: !1600, file: !3, line: 2531, column: 9)
!1614 = !DILocation(line: 2532, column: 10, scope: !1613)
!1615 = !DILocation(line: 2535, column: 8, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1601, file: !3, line: 2535, column: 8)
!1617 = !DILocation(line: 2535, column: 14, scope: !1616)
!1618 = !DILocation(line: 2535, column: 8, scope: !1601)
!1619 = !DILocation(line: 2536, column: 13, scope: !1620)
!1620 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 2535, column: 42)
!1621 = !DILocation(line: 2536, column: 18, scope: !1620)
!1622 = !DILocation(line: 2536, column: 24, scope: !1620)
!1623 = !DILocation(line: 2536, column: 10, scope: !1620)
!1624 = !DILocation(line: 2537, column: 4, scope: !1620)
!1625 = !DILocation(line: 2538, column: 12, scope: !1601)
!1626 = !DILocation(line: 2538, column: 15, scope: !1601)
!1627 = !DILocation(line: 2538, column: 9, scope: !1601)
!1628 = !DILocation(line: 2540, column: 8, scope: !1629)
!1629 = distinct !DILexicalBlock(scope: !1601, file: !3, line: 2540, column: 8)
!1630 = !DILocation(line: 2540, column: 16, scope: !1629)
!1631 = !DILocation(line: 2540, column: 21, scope: !1629)
!1632 = !DILocation(line: 2540, column: 27, scope: !1629)
!1633 = !DILocation(line: 2540, column: 13, scope: !1629)
!1634 = !DILocation(line: 2540, column: 8, scope: !1601)
!1635 = !DILocation(line: 2541, column: 12, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1629, file: !3, line: 2540, column: 32)
!1637 = !DILocation(line: 2541, column: 17, scope: !1636)
!1638 = !DILocation(line: 2541, column: 23, scope: !1636)
!1639 = !DILocation(line: 2541, column: 27, scope: !1636)
!1640 = !DILocation(line: 2541, column: 10, scope: !1636)
!1641 = !DILocation(line: 2542, column: 4, scope: !1636)
!1642 = !DILocation(line: 2544, column: 25, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1629, file: !3, line: 2543, column: 9)
!1644 = !DILocation(line: 2544, column: 5, scope: !1643)
!1645 = !DILocation(line: 2544, column: 8, scope: !1643)
!1646 = !DILocation(line: 2544, column: 23, scope: !1643)
!1647 = !DILocation(line: 2546, column: 24, scope: !1601)
!1648 = !DILocation(line: 2546, column: 4, scope: !1601)
!1649 = !DILocation(line: 2546, column: 7, scope: !1601)
!1650 = !DILocation(line: 2546, column: 16, scope: !1601)
!1651 = !DILocation(line: 2546, column: 22, scope: !1601)
!1652 = !DILocation(line: 2547, column: 3, scope: !1601)
!1653 = !DILocation(line: 2526, column: 40, scope: !1594)
!1654 = !DILocation(line: 2526, column: 3, scope: !1594)
!1655 = distinct !{!1655, !1598, !1656}
!1656 = !DILocation(line: 2547, column: 3, scope: !1591)
!1657 = !DILocation(line: 2549, column: 1, scope: !167)
!1658 = distinct !DISubprogram(name: "BKE_sequence_get_effect", scope: !3, file: !3, line: 3084, type: !1659, scopeLine: 3085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!1661, !360}
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SeqEffectHandle", file: !1662, line: 118, size: 768, elements: !1663)
!1662 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_sequencer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1663 = !{!1664, !1665, !1666, !1670, !1674, !1675, !1679, !1680, !1684, !1688, !1692, !1778, !1782}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "multithreaded", scope: !1661, file: !1662, line: 119, baseType: !84, size: 8)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "supports_mask", scope: !1661, file: !1662, line: 120, baseType: !84, size: 8, offset: 8)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1661, file: !1662, line: 124, baseType: !1667, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{null, !365}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "num_inputs", scope: !1661, file: !1662, line: 128, baseType: !1671, size: 64, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!7}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1661, file: !1662, line: 132, baseType: !1667, size: 64, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !1661, file: !1662, line: 135, baseType: !1676, size: 64, offset: 256)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{null, !365, !365}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1661, file: !1662, line: 138, baseType: !1667, size: 64, offset: 320)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "early_out", scope: !1661, file: !1662, line: 144, baseType: !1681, size: 64, offset: 384)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{!7, !365, !77, !77}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "store_icu_yrange", scope: !1661, file: !1662, line: 147, baseType: !1685, size: 64, offset: 448)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{null, !365, !94, !76, !76}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "get_default_fac", scope: !1661, file: !1662, line: 150, baseType: !1689, size: 64, offset: 512)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !365, !77, !76, !76}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1661, file: !1662, line: 157, baseType: !1693, size: 64, offset: 576)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{!1696, !1759, !365, !77, !77, !77, !1696, !1696, !1696}
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1698, line: 70, size: 19840, elements: !1699)
!1698 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1699 = !{!1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1713, !1714, !1715, !1716, !1717, !1719, !1720, !1721, !1722, !1726, !1727, !1728, !1729, !1730, !1733, !1734, !1735, !1736, !1737, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1750, !1751, !1752}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1697, file: !1698, line: 71, baseType: !1696, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1697, file: !1698, line: 71, baseType: !1696, size: 64, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1697, file: !1698, line: 74, baseType: !7, size: 32, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1697, file: !1698, line: 74, baseType: !7, size: 32, offset: 160)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1697, file: !1698, line: 79, baseType: !84, size: 8, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1697, file: !1698, line: 80, baseType: !7, size: 32, offset: 224)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1697, file: !1698, line: 83, baseType: !7, size: 32, offset: 256)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !1697, file: !1698, line: 84, baseType: !7, size: 32, offset: 288)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1697, file: !1698, line: 87, baseType: !86, size: 64, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !1697, file: !1698, line: 88, baseType: !76, size: 64, offset: 384)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !1697, file: !1698, line: 93, baseType: !1711, size: 128, offset: 448)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1712, size: 128, elements: !594)
!1712 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1697, file: !1698, line: 96, baseType: !7, size: 32, offset: 576)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1697, file: !1698, line: 96, baseType: !7, size: 32, offset: 608)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !1697, file: !1698, line: 97, baseType: !7, size: 32, offset: 640)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !1697, file: !1698, line: 97, baseType: !7, size: 32, offset: 672)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !1697, file: !1698, line: 98, baseType: !1718, size: 64, offset: 704)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1697, file: !1698, line: 101, baseType: !624, size: 64, offset: 768)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !1697, file: !1698, line: 102, baseType: !76, size: 64, offset: 832)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1697, file: !1698, line: 105, baseType: !77, size: 32, offset: 896)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !1697, file: !1698, line: 108, baseType: !1723, size: 1280, offset: 960)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1696, size: 1280, elements: !1724)
!1724 = !{!1725}
!1725 = !DISubrange(count: 20)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !1697, file: !1698, line: 109, baseType: !7, size: 32, offset: 2240)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !1697, file: !1698, line: 109, baseType: !7, size: 32, offset: 2272)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1697, file: !1698, line: 112, baseType: !7, size: 32, offset: 2304)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !1697, file: !1698, line: 113, baseType: !7, size: 32, offset: 2336)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1697, file: !1698, line: 114, baseType: !1731, size: 64, offset: 2368)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !1698, line: 50, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1697, file: !1698, line: 115, baseType: !82, size: 64, offset: 2432)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !1697, file: !1698, line: 118, baseType: !7, size: 32, offset: 2496)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1697, file: !1698, line: 119, baseType: !195, size: 8192, offset: 2528)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !1697, file: !1698, line: 120, baseType: !195, size: 8192, offset: 10720)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !1697, file: !1698, line: 123, baseType: !1738, size: 64, offset: 18944)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !1698, line: 123, flags: DIFlagFwdDecl)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !1697, file: !1698, line: 124, baseType: !7, size: 32, offset: 19008)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !1697, file: !1698, line: 127, baseType: !83, size: 64, offset: 19072)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !1697, file: !1698, line: 128, baseType: !36, size: 32, offset: 19136)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !1697, file: !1698, line: 129, baseType: !36, size: 32, offset: 19168)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !1697, file: !1698, line: 132, baseType: !848, size: 64, offset: 19200)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !1697, file: !1698, line: 133, baseType: !848, size: 64, offset: 19264)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !1697, file: !1698, line: 134, baseType: !86, size: 64, offset: 19328)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !1697, file: !1698, line: 135, baseType: !1748, size: 64, offset: 19392)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !1698, line: 135, flags: DIFlagFwdDecl)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !1697, file: !1698, line: 136, baseType: !7, size: 32, offset: 19456)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !1697, file: !1698, line: 137, baseType: !628, size: 128, offset: 19488)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !1697, file: !1698, line: 140, baseType: !1753, size: 192, offset: 19648)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !1698, line: 55, size: 192, elements: !1754)
!1754 = !{!1755, !1756, !1757, !1758}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1753, file: !1698, line: 56, baseType: !36, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1753, file: !1698, line: 57, baseType: !36, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1753, file: !1698, line: 58, baseType: !83, size: 64, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1753, file: !1698, line: 59, baseType: !36, size: 32, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1761)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "SeqRenderData", file: !1662, line: 103, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SeqRenderData", file: !1662, line: 92, size: 384, elements: !1763)
!1763 = !{!1764, !1767, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !1762, file: !1662, line: 93, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !1662, line: 34, flags: DIFlagFwdDecl)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "bmain", scope: !1762, file: !1662, line: 94, baseType: !1768, size: 64, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !1662, line: 38, flags: DIFlagFwdDecl)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1762, file: !1662, line: 95, baseType: !320, size: 64, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !1762, file: !1662, line: 96, baseType: !7, size: 32, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !1762, file: !1662, line: 97, baseType: !7, size: 32, offset: 224)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "preview_render_size", scope: !1762, file: !1662, line: 98, baseType: !7, size: 32, offset: 256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "motion_blur_samples", scope: !1762, file: !1662, line: 99, baseType: !7, size: 32, offset: 288)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "motion_blur_shutter", scope: !1762, file: !1662, line: 100, baseType: !77, size: 32, offset: 320)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "skip_cache", scope: !1762, file: !1662, line: 101, baseType: !84, size: 8, offset: 352)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "is_proxy_render", scope: !1762, file: !1662, line: 102, baseType: !84, size: 8, offset: 360)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "init_execution", scope: !1661, file: !1662, line: 160, baseType: !1779, size: 64, offset: 640)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!1696, !1759, !1696, !1696, !1696}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "execute_slice", scope: !1661, file: !1662, line: 163, baseType: !1783, size: 64, offset: 704)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{null, !1759, !365, !77, !77, !77, !1696, !1696, !1696, !7, !7, !1696}
!1786 = !DILocalVariable(name: "seq", arg: 1, scope: !1658, file: !3, line: 3084, type: !360)
!1787 = !DILocation(line: 3084, column: 58, scope: !1658)
!1788 = !DILocalVariable(name: "rval", scope: !1658, file: !3, line: 3086, type: !1661)
!1789 = !DILocation(line: 3086, column: 25, scope: !1658)
!1790 = !DILocation(line: 3088, column: 6, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 3088, column: 6)
!1792 = !DILocation(line: 3088, column: 11, scope: !1791)
!1793 = !DILocation(line: 3088, column: 16, scope: !1791)
!1794 = !DILocation(line: 3088, column: 6, scope: !1658)
!1795 = !DILocation(line: 3089, column: 35, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1791, file: !3, line: 3088, column: 35)
!1797 = !DILocation(line: 3089, column: 40, scope: !1796)
!1798 = !DILocation(line: 3089, column: 10, scope: !1796)
!1799 = !DILocation(line: 3090, column: 8, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1796, file: !3, line: 3090, column: 7)
!1801 = !DILocation(line: 3090, column: 13, scope: !1800)
!1802 = !DILocation(line: 3090, column: 18, scope: !1800)
!1803 = !DILocation(line: 3090, column: 43, scope: !1800)
!1804 = !DILocation(line: 3090, column: 7, scope: !1796)
!1805 = !DILocation(line: 3091, column: 9, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 3090, column: 49)
!1807 = !DILocation(line: 3091, column: 14, scope: !1806)
!1808 = !DILocation(line: 3091, column: 4, scope: !1806)
!1809 = !DILocation(line: 3092, column: 4, scope: !1806)
!1810 = !DILocation(line: 3092, column: 9, scope: !1806)
!1811 = !DILocation(line: 3092, column: 14, scope: !1806)
!1812 = !DILocation(line: 3093, column: 3, scope: !1806)
!1813 = !DILocation(line: 3094, column: 2, scope: !1796)
!1814 = !DILocation(line: 3096, column: 2, scope: !1658)
!1815 = distinct !DISubprogram(name: "get_sequence_effect_impl", scope: !3, file: !3, line: 2953, type: !1816, scopeLine: 2954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!1661, !7}
!1818 = !DILocalVariable(name: "seq_type", arg: 1, scope: !1815, file: !3, line: 2953, type: !7)
!1819 = !DILocation(line: 2953, column: 60, scope: !1815)
!1820 = !DILocalVariable(name: "rval", scope: !1815, file: !3, line: 2955, type: !1661)
!1821 = !DILocation(line: 2955, column: 25, scope: !1815)
!1822 = !DILocalVariable(name: "sequence_type", scope: !1815, file: !3, line: 2956, type: !7)
!1823 = !DILocation(line: 2956, column: 6, scope: !1815)
!1824 = !DILocation(line: 2956, column: 22, scope: !1815)
!1825 = !DILocation(line: 2958, column: 7, scope: !1815)
!1826 = !DILocation(line: 2958, column: 21, scope: !1815)
!1827 = !DILocation(line: 2959, column: 7, scope: !1815)
!1828 = !DILocation(line: 2959, column: 21, scope: !1815)
!1829 = !DILocation(line: 2960, column: 7, scope: !1815)
!1830 = !DILocation(line: 2960, column: 12, scope: !1815)
!1831 = !DILocation(line: 2961, column: 7, scope: !1815)
!1832 = !DILocation(line: 2961, column: 18, scope: !1815)
!1833 = !DILocation(line: 2962, column: 7, scope: !1815)
!1834 = !DILocation(line: 2962, column: 12, scope: !1815)
!1835 = !DILocation(line: 2963, column: 7, scope: !1815)
!1836 = !DILocation(line: 2963, column: 12, scope: !1815)
!1837 = !DILocation(line: 2964, column: 7, scope: !1815)
!1838 = !DILocation(line: 2964, column: 17, scope: !1815)
!1839 = !DILocation(line: 2965, column: 7, scope: !1815)
!1840 = !DILocation(line: 2965, column: 23, scope: !1815)
!1841 = !DILocation(line: 2966, column: 7, scope: !1815)
!1842 = !DILocation(line: 2966, column: 24, scope: !1815)
!1843 = !DILocation(line: 2967, column: 7, scope: !1815)
!1844 = !DILocation(line: 2967, column: 15, scope: !1815)
!1845 = !DILocation(line: 2968, column: 7, scope: !1815)
!1846 = !DILocation(line: 2968, column: 22, scope: !1815)
!1847 = !DILocation(line: 2969, column: 7, scope: !1815)
!1848 = !DILocation(line: 2969, column: 21, scope: !1815)
!1849 = !DILocation(line: 2970, column: 7, scope: !1815)
!1850 = !DILocation(line: 2970, column: 12, scope: !1815)
!1851 = !DILocation(line: 2972, column: 10, scope: !1815)
!1852 = !DILocation(line: 2972, column: 2, scope: !1815)
!1853 = !DILocation(line: 2974, column: 9, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 2972, column: 25)
!1855 = !DILocation(line: 2974, column: 23, scope: !1854)
!1856 = !DILocation(line: 2975, column: 9, scope: !1854)
!1857 = !DILocation(line: 2975, column: 23, scope: !1854)
!1858 = !DILocation(line: 2976, column: 9, scope: !1854)
!1859 = !DILocation(line: 2976, column: 19, scope: !1854)
!1860 = !DILocation(line: 2977, column: 9, scope: !1854)
!1861 = !DILocation(line: 2977, column: 25, scope: !1854)
!1862 = !DILocation(line: 2978, column: 4, scope: !1854)
!1863 = !DILocation(line: 2980, column: 9, scope: !1854)
!1864 = !DILocation(line: 2980, column: 23, scope: !1854)
!1865 = !DILocation(line: 2981, column: 9, scope: !1854)
!1866 = !DILocation(line: 2981, column: 14, scope: !1854)
!1867 = !DILocation(line: 2982, column: 9, scope: !1854)
!1868 = !DILocation(line: 2982, column: 14, scope: !1854)
!1869 = !DILocation(line: 2983, column: 9, scope: !1854)
!1870 = !DILocation(line: 2983, column: 14, scope: !1854)
!1871 = !DILocation(line: 2984, column: 9, scope: !1854)
!1872 = !DILocation(line: 2984, column: 19, scope: !1854)
!1873 = !DILocation(line: 2985, column: 9, scope: !1854)
!1874 = !DILocation(line: 2985, column: 25, scope: !1854)
!1875 = !DILocation(line: 2986, column: 9, scope: !1854)
!1876 = !DILocation(line: 2986, column: 24, scope: !1854)
!1877 = !DILocation(line: 2987, column: 9, scope: !1854)
!1878 = !DILocation(line: 2987, column: 23, scope: !1854)
!1879 = !DILocation(line: 2988, column: 4, scope: !1854)
!1880 = !DILocation(line: 2990, column: 9, scope: !1854)
!1881 = !DILocation(line: 2990, column: 23, scope: !1854)
!1882 = !DILocation(line: 2991, column: 9, scope: !1854)
!1883 = !DILocation(line: 2991, column: 23, scope: !1854)
!1884 = !DILocation(line: 2992, column: 9, scope: !1854)
!1885 = !DILocation(line: 2992, column: 19, scope: !1854)
!1886 = !DILocation(line: 2993, column: 4, scope: !1854)
!1887 = !DILocation(line: 2995, column: 9, scope: !1854)
!1888 = !DILocation(line: 2995, column: 23, scope: !1854)
!1889 = !DILocation(line: 2996, column: 9, scope: !1854)
!1890 = !DILocation(line: 2996, column: 23, scope: !1854)
!1891 = !DILocation(line: 2997, column: 9, scope: !1854)
!1892 = !DILocation(line: 2997, column: 19, scope: !1854)
!1893 = !DILocation(line: 2998, column: 4, scope: !1854)
!1894 = !DILocation(line: 3000, column: 9, scope: !1854)
!1895 = !DILocation(line: 3000, column: 23, scope: !1854)
!1896 = !DILocation(line: 3001, column: 9, scope: !1854)
!1897 = !DILocation(line: 3001, column: 23, scope: !1854)
!1898 = !DILocation(line: 3002, column: 9, scope: !1854)
!1899 = !DILocation(line: 3002, column: 19, scope: !1854)
!1900 = !DILocation(line: 3003, column: 4, scope: !1854)
!1901 = !DILocation(line: 3005, column: 9, scope: !1854)
!1902 = !DILocation(line: 3005, column: 23, scope: !1854)
!1903 = !DILocation(line: 3006, column: 9, scope: !1854)
!1904 = !DILocation(line: 3006, column: 14, scope: !1854)
!1905 = !DILocation(line: 3007, column: 9, scope: !1854)
!1906 = !DILocation(line: 3007, column: 23, scope: !1854)
!1907 = !DILocation(line: 3008, column: 4, scope: !1854)
!1908 = !DILocation(line: 3010, column: 9, scope: !1854)
!1909 = !DILocation(line: 3010, column: 23, scope: !1854)
!1910 = !DILocation(line: 3011, column: 9, scope: !1854)
!1911 = !DILocation(line: 3011, column: 23, scope: !1854)
!1912 = !DILocation(line: 3012, column: 4, scope: !1854)
!1913 = !DILocation(line: 3014, column: 9, scope: !1854)
!1914 = !DILocation(line: 3014, column: 23, scope: !1854)
!1915 = !DILocation(line: 3015, column: 9, scope: !1854)
!1916 = !DILocation(line: 3015, column: 14, scope: !1854)
!1917 = !DILocation(line: 3016, column: 9, scope: !1854)
!1918 = !DILocation(line: 3016, column: 23, scope: !1854)
!1919 = !DILocation(line: 3017, column: 4, scope: !1854)
!1920 = !DILocation(line: 3019, column: 9, scope: !1854)
!1921 = !DILocation(line: 3019, column: 14, scope: !1854)
!1922 = !DILocation(line: 3020, column: 9, scope: !1854)
!1923 = !DILocation(line: 3020, column: 20, scope: !1854)
!1924 = !DILocation(line: 3021, column: 9, scope: !1854)
!1925 = !DILocation(line: 3021, column: 14, scope: !1854)
!1926 = !DILocation(line: 3022, column: 9, scope: !1854)
!1927 = !DILocation(line: 3022, column: 14, scope: !1854)
!1928 = !DILocation(line: 3023, column: 9, scope: !1854)
!1929 = !DILocation(line: 3023, column: 19, scope: !1854)
!1930 = !DILocation(line: 3024, column: 9, scope: !1854)
!1931 = !DILocation(line: 3024, column: 25, scope: !1854)
!1932 = !DILocation(line: 3025, column: 9, scope: !1854)
!1933 = !DILocation(line: 3025, column: 17, scope: !1854)
!1934 = !DILocation(line: 3026, column: 4, scope: !1854)
!1935 = !DILocation(line: 3028, column: 9, scope: !1854)
!1936 = !DILocation(line: 3028, column: 14, scope: !1854)
!1937 = !DILocation(line: 3029, column: 9, scope: !1854)
!1938 = !DILocation(line: 3029, column: 20, scope: !1854)
!1939 = !DILocation(line: 3030, column: 9, scope: !1854)
!1940 = !DILocation(line: 3030, column: 14, scope: !1854)
!1941 = !DILocation(line: 3031, column: 9, scope: !1854)
!1942 = !DILocation(line: 3031, column: 14, scope: !1854)
!1943 = !DILocation(line: 3032, column: 9, scope: !1854)
!1944 = !DILocation(line: 3032, column: 17, scope: !1854)
!1945 = !DILocation(line: 3033, column: 4, scope: !1854)
!1946 = !DILocation(line: 3035, column: 9, scope: !1854)
!1947 = !DILocation(line: 3035, column: 14, scope: !1854)
!1948 = !DILocation(line: 3036, column: 9, scope: !1854)
!1949 = !DILocation(line: 3036, column: 20, scope: !1854)
!1950 = !DILocation(line: 3037, column: 9, scope: !1854)
!1951 = !DILocation(line: 3037, column: 14, scope: !1854)
!1952 = !DILocation(line: 3038, column: 9, scope: !1854)
!1953 = !DILocation(line: 3038, column: 14, scope: !1854)
!1954 = !DILocation(line: 3039, column: 9, scope: !1854)
!1955 = !DILocation(line: 3039, column: 17, scope: !1854)
!1956 = !DILocation(line: 3040, column: 4, scope: !1854)
!1957 = !DILocation(line: 3042, column: 9, scope: !1854)
!1958 = !DILocation(line: 3042, column: 14, scope: !1854)
!1959 = !DILocation(line: 3043, column: 9, scope: !1854)
!1960 = !DILocation(line: 3043, column: 20, scope: !1854)
!1961 = !DILocation(line: 3044, column: 9, scope: !1854)
!1962 = !DILocation(line: 3044, column: 14, scope: !1854)
!1963 = !DILocation(line: 3045, column: 9, scope: !1854)
!1964 = !DILocation(line: 3045, column: 14, scope: !1854)
!1965 = !DILocation(line: 3046, column: 9, scope: !1854)
!1966 = !DILocation(line: 3046, column: 14, scope: !1854)
!1967 = !DILocation(line: 3047, column: 9, scope: !1854)
!1968 = !DILocation(line: 3047, column: 17, scope: !1854)
!1969 = !DILocation(line: 3048, column: 9, scope: !1854)
!1970 = !DILocation(line: 3048, column: 19, scope: !1854)
!1971 = !DILocation(line: 3049, column: 9, scope: !1854)
!1972 = !DILocation(line: 3049, column: 26, scope: !1854)
!1973 = !DILocation(line: 3050, column: 4, scope: !1854)
!1974 = !DILocation(line: 3052, column: 9, scope: !1854)
!1975 = !DILocation(line: 3052, column: 14, scope: !1854)
!1976 = !DILocation(line: 3053, column: 9, scope: !1854)
!1977 = !DILocation(line: 3053, column: 20, scope: !1854)
!1978 = !DILocation(line: 3054, column: 9, scope: !1854)
!1979 = !DILocation(line: 3054, column: 19, scope: !1854)
!1980 = !DILocation(line: 3055, column: 9, scope: !1854)
!1981 = !DILocation(line: 3055, column: 14, scope: !1854)
!1982 = !DILocation(line: 3056, column: 9, scope: !1854)
!1983 = !DILocation(line: 3056, column: 14, scope: !1854)
!1984 = !DILocation(line: 3057, column: 9, scope: !1854)
!1985 = !DILocation(line: 3057, column: 17, scope: !1854)
!1986 = !DILocation(line: 3058, column: 4, scope: !1854)
!1987 = !DILocation(line: 3060, column: 9, scope: !1854)
!1988 = !DILocation(line: 3060, column: 20, scope: !1854)
!1989 = !DILocation(line: 3061, column: 9, scope: !1854)
!1990 = !DILocation(line: 3061, column: 19, scope: !1854)
!1991 = !DILocation(line: 3062, column: 9, scope: !1854)
!1992 = !DILocation(line: 3062, column: 17, scope: !1854)
!1993 = !DILocation(line: 3063, column: 4, scope: !1854)
!1994 = !DILocation(line: 3065, column: 9, scope: !1854)
!1995 = !DILocation(line: 3065, column: 23, scope: !1854)
!1996 = !DILocation(line: 3066, column: 9, scope: !1854)
!1997 = !DILocation(line: 3066, column: 20, scope: !1854)
!1998 = !DILocation(line: 3067, column: 9, scope: !1854)
!1999 = !DILocation(line: 3067, column: 19, scope: !1854)
!2000 = !DILocation(line: 3068, column: 9, scope: !1854)
!2001 = !DILocation(line: 3068, column: 17, scope: !1854)
!2002 = !DILocation(line: 3069, column: 4, scope: !1854)
!2003 = !DILocation(line: 3071, column: 9, scope: !1854)
!2004 = !DILocation(line: 3071, column: 23, scope: !1854)
!2005 = !DILocation(line: 3072, column: 9, scope: !1854)
!2006 = !DILocation(line: 3072, column: 14, scope: !1854)
!2007 = !DILocation(line: 3073, column: 9, scope: !1854)
!2008 = !DILocation(line: 3073, column: 20, scope: !1854)
!2009 = !DILocation(line: 3074, column: 9, scope: !1854)
!2010 = !DILocation(line: 3074, column: 14, scope: !1854)
!2011 = !DILocation(line: 3075, column: 9, scope: !1854)
!2012 = !DILocation(line: 3075, column: 14, scope: !1854)
!2013 = !DILocation(line: 3076, column: 9, scope: !1854)
!2014 = !DILocation(line: 3076, column: 19, scope: !1854)
!2015 = !DILocation(line: 3077, column: 9, scope: !1854)
!2016 = !DILocation(line: 3077, column: 23, scope: !1854)
!2017 = !DILocation(line: 3078, column: 4, scope: !1854)
!2018 = !DILocation(line: 3081, column: 2, scope: !1815)
!2019 = distinct !DISubprogram(name: "BKE_sequence_get_blend", scope: !3, file: !3, line: 3099, type: !1659, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2020 = !DILocalVariable(name: "seq", arg: 1, scope: !2019, file: !3, line: 3099, type: !360)
!2021 = !DILocation(line: 3099, column: 57, scope: !2019)
!2022 = !DILocalVariable(name: "rval", scope: !2019, file: !3, line: 3101, type: !1661)
!2023 = !DILocation(line: 3101, column: 25, scope: !2019)
!2024 = !DILocation(line: 3103, column: 6, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !2019, file: !3, line: 3103, column: 6)
!2026 = !DILocation(line: 3103, column: 11, scope: !2025)
!2027 = !DILocation(line: 3103, column: 22, scope: !2025)
!2028 = !DILocation(line: 3103, column: 6, scope: !2019)
!2029 = !DILocation(line: 3104, column: 35, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2025, file: !3, line: 3103, column: 28)
!2031 = !DILocation(line: 3104, column: 40, scope: !2030)
!2032 = !DILocation(line: 3104, column: 10, scope: !2030)
!2033 = !DILocation(line: 3105, column: 8, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 3105, column: 7)
!2035 = !DILocation(line: 3105, column: 13, scope: !2034)
!2036 = !DILocation(line: 3105, column: 18, scope: !2034)
!2037 = !DILocation(line: 3105, column: 43, scope: !2034)
!2038 = !DILocation(line: 3105, column: 7, scope: !2030)
!2039 = !DILocation(line: 3106, column: 9, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 3105, column: 49)
!2041 = !DILocation(line: 3106, column: 14, scope: !2040)
!2042 = !DILocation(line: 3106, column: 4, scope: !2040)
!2043 = !DILocation(line: 3107, column: 4, scope: !2040)
!2044 = !DILocation(line: 3107, column: 9, scope: !2040)
!2045 = !DILocation(line: 3107, column: 14, scope: !2040)
!2046 = !DILocation(line: 3108, column: 3, scope: !2040)
!2047 = !DILocation(line: 3109, column: 2, scope: !2030)
!2048 = !DILocation(line: 3111, column: 2, scope: !2019)
!2049 = distinct !DISubprogram(name: "BKE_sequence_effect_get_num_inputs", scope: !3, file: !3, line: 3114, type: !2050, scopeLine: 3115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{!7, !7}
!2052 = !DILocalVariable(name: "seq_type", arg: 1, scope: !2049, file: !3, line: 3114, type: !7)
!2053 = !DILocation(line: 3114, column: 44, scope: !2049)
!2054 = !DILocalVariable(name: "rval", scope: !2049, file: !3, line: 3116, type: !1661)
!2055 = !DILocation(line: 3116, column: 25, scope: !2049)
!2056 = !DILocation(line: 3116, column: 57, scope: !2049)
!2057 = !DILocation(line: 3116, column: 32, scope: !2049)
!2058 = !DILocalVariable(name: "cnt", scope: !2049, file: !3, line: 3118, type: !7)
!2059 = !DILocation(line: 3118, column: 6, scope: !2049)
!2060 = !DILocation(line: 3118, column: 17, scope: !2049)
!2061 = !DILocation(line: 3118, column: 12, scope: !2049)
!2062 = !DILocation(line: 3119, column: 11, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2049, file: !3, line: 3119, column: 6)
!2064 = !DILocation(line: 3119, column: 6, scope: !2063)
!2065 = !DILocation(line: 3119, column: 19, scope: !2063)
!2066 = !DILocation(line: 3119, column: 28, scope: !2063)
!2067 = !DILocation(line: 3119, column: 23, scope: !2063)
!2068 = !DILocation(line: 3119, column: 42, scope: !2063)
!2069 = !DILocation(line: 3119, column: 50, scope: !2063)
!2070 = !DILocation(line: 3119, column: 45, scope: !2063)
!2071 = !DILocation(line: 3119, column: 6, scope: !2049)
!2072 = !DILocation(line: 3120, column: 10, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2063, file: !3, line: 3119, column: 67)
!2074 = !DILocation(line: 3120, column: 3, scope: !2073)
!2075 = !DILocation(line: 3122, column: 2, scope: !2049)
!2076 = !DILocation(line: 3123, column: 1, scope: !2049)
!2077 = distinct !DISubprogram(name: "BKE_sequence_effect_get_supports_mask", scope: !3, file: !3, line: 3125, type: !2050, scopeLine: 3126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2078 = !DILocalVariable(name: "seq_type", arg: 1, scope: !2077, file: !3, line: 3125, type: !7)
!2079 = !DILocation(line: 3125, column: 47, scope: !2077)
!2080 = !DILocalVariable(name: "rval", scope: !2077, file: !3, line: 3127, type: !1661)
!2081 = !DILocation(line: 3127, column: 25, scope: !2077)
!2082 = !DILocation(line: 3127, column: 57, scope: !2077)
!2083 = !DILocation(line: 3127, column: 32, scope: !2077)
!2084 = !DILocation(line: 3129, column: 14, scope: !2077)
!2085 = !DILocation(line: 3129, column: 9, scope: !2077)
!2086 = !DILocation(line: 3129, column: 2, scope: !2077)
!2087 = distinct !DISubprogram(name: "init_noop", scope: !3, file: !3, line: 2884, type: !2088, scopeLine: 2885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !360}
!2090 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2087, file: !3, line: 2884, type: !360)
!2091 = !DILocation(line: 2884, column: 33, scope: !2087)
!2092 = !DILocation(line: 2887, column: 1, scope: !2087)
!2093 = distinct !DISubprogram(name: "num_inputs_default", scope: !3, file: !3, line: 2899, type: !1672, scopeLine: 2900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2094 = !DILocation(line: 2901, column: 2, scope: !2093)
!2095 = distinct !DISubprogram(name: "load_noop", scope: !3, file: !3, line: 2889, type: !2088, scopeLine: 2890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2096 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2095, file: !3, line: 2889, type: !360)
!2097 = !DILocation(line: 2889, column: 33, scope: !2095)
!2098 = !DILocation(line: 2892, column: 1, scope: !2095)
!2099 = distinct !DISubprogram(name: "free_noop", scope: !3, file: !3, line: 2894, type: !2088, scopeLine: 2895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2100 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2099, file: !3, line: 2894, type: !360)
!2101 = !DILocation(line: 2894, column: 33, scope: !2099)
!2102 = !DILocation(line: 2897, column: 1, scope: !2099)
!2103 = distinct !DISubprogram(name: "early_out_noop", scope: !3, file: !3, line: 2904, type: !2104, scopeLine: 2905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!7, !360, !77, !77}
!2106 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2103, file: !3, line: 2904, type: !360)
!2107 = !DILocation(line: 2904, column: 37, scope: !2103)
!2108 = !DILocalVariable(name: "UNUSED_facf0", arg: 2, scope: !2103, file: !3, line: 2904, type: !77)
!2109 = !DILocation(line: 2904, column: 56, scope: !2103)
!2110 = !DILocalVariable(name: "UNUSED_facf1", arg: 3, scope: !2103, file: !3, line: 2904, type: !77)
!2111 = !DILocation(line: 2904, column: 77, scope: !2103)
!2112 = !DILocation(line: 2906, column: 2, scope: !2103)
!2113 = distinct !DISubprogram(name: "get_default_fac_noop", scope: !3, file: !3, line: 2933, type: !2114, scopeLine: 2934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !360, !77, !76, !76}
!2116 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2113, file: !3, line: 2933, type: !360)
!2117 = !DILocation(line: 2933, column: 44, scope: !2113)
!2118 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !2113, file: !3, line: 2933, type: !77)
!2119 = !DILocation(line: 2933, column: 63, scope: !2113)
!2120 = !DILocalVariable(name: "facf0", arg: 3, scope: !2113, file: !3, line: 2933, type: !76)
!2121 = !DILocation(line: 2933, column: 84, scope: !2113)
!2122 = !DILocalVariable(name: "facf1", arg: 4, scope: !2113, file: !3, line: 2933, type: !76)
!2123 = !DILocation(line: 2933, column: 98, scope: !2113)
!2124 = !DILocation(line: 2935, column: 12, scope: !2113)
!2125 = !DILocation(line: 2935, column: 18, scope: !2113)
!2126 = !DILocation(line: 2935, column: 3, scope: !2113)
!2127 = !DILocation(line: 2935, column: 9, scope: !2113)
!2128 = !DILocation(line: 2936, column: 1, scope: !2113)
!2129 = distinct !DISubprogram(name: "store_icu_yrange_noop", scope: !3, file: !3, line: 2928, type: !2130, scopeLine: 2929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !360, !94, !76, !76}
!2132 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2129, file: !3, line: 2928, type: !360)
!2133 = !DILocation(line: 2928, column: 45, scope: !2129)
!2134 = !DILocalVariable(name: "UNUSED_adrcode", arg: 2, scope: !2129, file: !3, line: 2928, type: !94)
!2135 = !DILocation(line: 2928, column: 64, scope: !2129)
!2136 = !DILocalVariable(name: "UNUSED_ymin", arg: 3, scope: !2129, file: !3, line: 2928, type: !76)
!2137 = !DILocation(line: 2928, column: 88, scope: !2129)
!2138 = !DILocalVariable(name: "UNUSED_ymax", arg: 4, scope: !2129, file: !3, line: 2928, type: !76)
!2139 = !DILocation(line: 2928, column: 109, scope: !2129)
!2140 = !DILocation(line: 2931, column: 1, scope: !2129)
!2141 = distinct !DISubprogram(name: "init_execution", scope: !3, file: !3, line: 2946, type: !2142, scopeLine: 2947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!1696, !1759, !2144, !2144, !2144}
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !1698, line: 141, baseType: !1697)
!2146 = !DILocalVariable(name: "context", arg: 1, scope: !2141, file: !3, line: 2946, type: !1759)
!2147 = !DILocation(line: 2946, column: 58, scope: !2141)
!2148 = !DILocalVariable(name: "ibuf1", arg: 2, scope: !2141, file: !3, line: 2946, type: !2144)
!2149 = !DILocation(line: 2946, column: 74, scope: !2141)
!2150 = !DILocalVariable(name: "ibuf2", arg: 3, scope: !2141, file: !3, line: 2946, type: !2144)
!2151 = !DILocation(line: 2946, column: 88, scope: !2141)
!2152 = !DILocalVariable(name: "ibuf3", arg: 4, scope: !2141, file: !3, line: 2946, type: !2144)
!2153 = !DILocation(line: 2946, column: 102, scope: !2141)
!2154 = !DILocalVariable(name: "out", scope: !2141, file: !3, line: 2948, type: !2144)
!2155 = !DILocation(line: 2948, column: 9, scope: !2141)
!2156 = !DILocation(line: 2948, column: 37, scope: !2141)
!2157 = !DILocation(line: 2948, column: 46, scope: !2141)
!2158 = !DILocation(line: 2948, column: 53, scope: !2141)
!2159 = !DILocation(line: 2948, column: 60, scope: !2141)
!2160 = !DILocation(line: 2948, column: 15, scope: !2141)
!2161 = !DILocation(line: 2950, column: 9, scope: !2141)
!2162 = !DILocation(line: 2950, column: 2, scope: !2141)
!2163 = distinct !DISubprogram(name: "do_cross_effect", scope: !3, file: !3, line: 567, type: !2164, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{null, !1759, !360, !77, !77, !77, !2144, !2144, !2144, !7, !7, !2144}
!2166 = !DILocalVariable(name: "context", arg: 1, scope: !2163, file: !3, line: 567, type: !1759)
!2167 = !DILocation(line: 567, column: 50, scope: !2163)
!2168 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !2163, file: !3, line: 567, type: !360)
!2169 = !DILocation(line: 567, column: 69, scope: !2163)
!2170 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2163, file: !3, line: 567, type: !77)
!2171 = !DILocation(line: 567, column: 88, scope: !2163)
!2172 = !DILocalVariable(name: "facf0", arg: 4, scope: !2163, file: !3, line: 568, type: !77)
!2173 = !DILocation(line: 568, column: 35, scope: !2163)
!2174 = !DILocalVariable(name: "facf1", arg: 5, scope: !2163, file: !3, line: 568, type: !77)
!2175 = !DILocation(line: 568, column: 48, scope: !2163)
!2176 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2163, file: !3, line: 568, type: !2144)
!2177 = !DILocation(line: 568, column: 62, scope: !2163)
!2178 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2163, file: !3, line: 568, type: !2144)
!2179 = !DILocation(line: 568, column: 76, scope: !2163)
!2180 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !2163, file: !3, line: 568, type: !2144)
!2181 = !DILocation(line: 568, column: 90, scope: !2163)
!2182 = !DILocalVariable(name: "start_line", arg: 9, scope: !2163, file: !3, line: 569, type: !7)
!2183 = !DILocation(line: 569, column: 33, scope: !2163)
!2184 = !DILocalVariable(name: "total_lines", arg: 10, scope: !2163, file: !3, line: 569, type: !7)
!2185 = !DILocation(line: 569, column: 49, scope: !2163)
!2186 = !DILocalVariable(name: "out", arg: 11, scope: !2163, file: !3, line: 569, type: !2144)
!2187 = !DILocation(line: 569, column: 69, scope: !2163)
!2188 = !DILocation(line: 571, column: 6, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2163, file: !3, line: 571, column: 6)
!2190 = !DILocation(line: 571, column: 11, scope: !2189)
!2191 = !DILocation(line: 571, column: 6, scope: !2163)
!2192 = !DILocalVariable(name: "rect1", scope: !2193, file: !3, line: 572, type: !76)
!2193 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 571, column: 23)
!2194 = !DILocation(line: 572, column: 10, scope: !2193)
!2195 = !DILocalVariable(name: "rect2", scope: !2193, file: !3, line: 572, type: !76)
!2196 = !DILocation(line: 572, column: 25, scope: !2193)
!2197 = !DILocalVariable(name: "rect_out", scope: !2193, file: !3, line: 572, type: !76)
!2198 = !DILocation(line: 572, column: 40, scope: !2193)
!2199 = !DILocation(line: 574, column: 27, scope: !2193)
!2200 = !DILocation(line: 574, column: 36, scope: !2193)
!2201 = !DILocation(line: 574, column: 43, scope: !2193)
!2202 = !DILocation(line: 574, column: 56, scope: !2193)
!2203 = !DILocation(line: 574, column: 61, scope: !2193)
!2204 = !DILocation(line: 574, column: 3, scope: !2193)
!2205 = !DILocation(line: 576, column: 25, scope: !2193)
!2206 = !DILocation(line: 576, column: 32, scope: !2193)
!2207 = !DILocation(line: 576, column: 39, scope: !2193)
!2208 = !DILocation(line: 576, column: 48, scope: !2193)
!2209 = !DILocation(line: 576, column: 55, scope: !2193)
!2210 = !DILocation(line: 576, column: 68, scope: !2193)
!2211 = !DILocation(line: 576, column: 75, scope: !2193)
!2212 = !DILocation(line: 576, column: 82, scope: !2193)
!2213 = !DILocation(line: 576, column: 3, scope: !2193)
!2214 = !DILocation(line: 577, column: 2, scope: !2193)
!2215 = !DILocalVariable(name: "rect1", scope: !2216, file: !3, line: 579, type: !83)
!2216 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 578, column: 7)
!2217 = !DILocation(line: 579, column: 18, scope: !2216)
!2218 = !DILocalVariable(name: "rect2", scope: !2216, file: !3, line: 579, type: !83)
!2219 = !DILocation(line: 579, column: 33, scope: !2216)
!2220 = !DILocalVariable(name: "rect_out", scope: !2216, file: !3, line: 579, type: !83)
!2221 = !DILocation(line: 579, column: 48, scope: !2216)
!2222 = !DILocation(line: 581, column: 26, scope: !2216)
!2223 = !DILocation(line: 581, column: 35, scope: !2216)
!2224 = !DILocation(line: 581, column: 42, scope: !2216)
!2225 = !DILocation(line: 581, column: 55, scope: !2216)
!2226 = !DILocation(line: 581, column: 60, scope: !2216)
!2227 = !DILocation(line: 581, column: 3, scope: !2216)
!2228 = !DILocation(line: 583, column: 24, scope: !2216)
!2229 = !DILocation(line: 583, column: 31, scope: !2216)
!2230 = !DILocation(line: 583, column: 38, scope: !2216)
!2231 = !DILocation(line: 583, column: 47, scope: !2216)
!2232 = !DILocation(line: 583, column: 54, scope: !2216)
!2233 = !DILocation(line: 583, column: 67, scope: !2216)
!2234 = !DILocation(line: 583, column: 74, scope: !2216)
!2235 = !DILocation(line: 583, column: 81, scope: !2216)
!2236 = !DILocation(line: 583, column: 3, scope: !2216)
!2237 = !DILocation(line: 585, column: 1, scope: !2163)
!2238 = distinct !DISubprogram(name: "early_out_fade", scope: !3, file: !3, line: 2909, type: !2104, scopeLine: 2910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2239 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2238, file: !3, line: 2909, type: !360)
!2240 = !DILocation(line: 2909, column: 37, scope: !2238)
!2241 = !DILocalVariable(name: "facf0", arg: 2, scope: !2238, file: !3, line: 2909, type: !77)
!2242 = !DILocation(line: 2909, column: 56, scope: !2238)
!2243 = !DILocalVariable(name: "facf1", arg: 3, scope: !2238, file: !3, line: 2909, type: !77)
!2244 = !DILocation(line: 2909, column: 69, scope: !2238)
!2245 = !DILocation(line: 2911, column: 6, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 2911, column: 6)
!2247 = !DILocation(line: 2911, column: 12, scope: !2246)
!2248 = !DILocation(line: 2911, column: 20, scope: !2246)
!2249 = !DILocation(line: 2911, column: 23, scope: !2246)
!2250 = !DILocation(line: 2911, column: 29, scope: !2246)
!2251 = !DILocation(line: 2911, column: 6, scope: !2238)
!2252 = !DILocation(line: 2912, column: 3, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2246, file: !3, line: 2911, column: 38)
!2254 = !DILocation(line: 2914, column: 11, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2246, file: !3, line: 2914, column: 11)
!2256 = !DILocation(line: 2914, column: 17, scope: !2255)
!2257 = !DILocation(line: 2914, column: 25, scope: !2255)
!2258 = !DILocation(line: 2914, column: 28, scope: !2255)
!2259 = !DILocation(line: 2914, column: 34, scope: !2255)
!2260 = !DILocation(line: 2914, column: 11, scope: !2246)
!2261 = !DILocation(line: 2915, column: 3, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2255, file: !3, line: 2914, column: 43)
!2263 = !DILocation(line: 2917, column: 2, scope: !2238)
!2264 = !DILocation(line: 2918, column: 1, scope: !2238)
!2265 = distinct !DISubprogram(name: "get_default_fac_fade", scope: !3, file: !3, line: 2938, type: !2114, scopeLine: 2939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2266 = !DILocalVariable(name: "seq", arg: 1, scope: !2265, file: !3, line: 2938, type: !360)
!2267 = !DILocation(line: 2938, column: 44, scope: !2265)
!2268 = !DILocalVariable(name: "cfra", arg: 2, scope: !2265, file: !3, line: 2938, type: !77)
!2269 = !DILocation(line: 2938, column: 55, scope: !2265)
!2270 = !DILocalVariable(name: "facf0", arg: 3, scope: !2265, file: !3, line: 2938, type: !76)
!2271 = !DILocation(line: 2938, column: 68, scope: !2265)
!2272 = !DILocalVariable(name: "facf1", arg: 4, scope: !2265, file: !3, line: 2938, type: !76)
!2273 = !DILocation(line: 2938, column: 82, scope: !2265)
!2274 = !DILocation(line: 2940, column: 19, scope: !2265)
!2275 = !DILocation(line: 2940, column: 26, scope: !2265)
!2276 = !DILocation(line: 2940, column: 31, scope: !2265)
!2277 = !DILocation(line: 2940, column: 24, scope: !2265)
!2278 = !DILocation(line: 2940, column: 3, scope: !2265)
!2279 = !DILocation(line: 2940, column: 9, scope: !2265)
!2280 = !DILocation(line: 2941, column: 20, scope: !2265)
!2281 = !DILocation(line: 2941, column: 19, scope: !2265)
!2282 = !DILocation(line: 2941, column: 26, scope: !2265)
!2283 = !DILocation(line: 2941, column: 3, scope: !2265)
!2284 = !DILocation(line: 2941, column: 9, scope: !2265)
!2285 = !DILocation(line: 2942, column: 12, scope: !2265)
!2286 = !DILocation(line: 2942, column: 17, scope: !2265)
!2287 = !DILocation(line: 2942, column: 3, scope: !2265)
!2288 = !DILocation(line: 2942, column: 9, scope: !2265)
!2289 = !DILocation(line: 2943, column: 12, scope: !2265)
!2290 = !DILocation(line: 2943, column: 17, scope: !2265)
!2291 = !DILocation(line: 2943, column: 3, scope: !2265)
!2292 = !DILocation(line: 2943, column: 9, scope: !2265)
!2293 = !DILocation(line: 2944, column: 1, scope: !2265)
!2294 = distinct !DISubprogram(name: "init_gammacross", scope: !3, file: !3, line: 715, type: !2088, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2295 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2294, file: !3, line: 715, type: !360)
!2296 = !DILocation(line: 715, column: 39, scope: !2294)
!2297 = !DILocation(line: 717, column: 1, scope: !2294)
!2298 = distinct !DISubprogram(name: "load_gammacross", scope: !3, file: !3, line: 719, type: !2088, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2299 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2298, file: !3, line: 719, type: !360)
!2300 = !DILocation(line: 719, column: 39, scope: !2298)
!2301 = !DILocation(line: 721, column: 1, scope: !2298)
!2302 = distinct !DISubprogram(name: "free_gammacross", scope: !3, file: !3, line: 723, type: !2088, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2303 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2302, file: !3, line: 723, type: !360)
!2304 = !DILocation(line: 723, column: 39, scope: !2302)
!2305 = !DILocation(line: 725, column: 1, scope: !2302)
!2306 = distinct !DISubprogram(name: "gammacross_init_execution", scope: !3, file: !3, line: 813, type: !2142, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2307 = !DILocalVariable(name: "context", arg: 1, scope: !2306, file: !3, line: 813, type: !1759)
!2308 = !DILocation(line: 813, column: 69, scope: !2306)
!2309 = !DILocalVariable(name: "ibuf1", arg: 2, scope: !2306, file: !3, line: 813, type: !2144)
!2310 = !DILocation(line: 813, column: 85, scope: !2306)
!2311 = !DILocalVariable(name: "ibuf2", arg: 3, scope: !2306, file: !3, line: 813, type: !2144)
!2312 = !DILocation(line: 813, column: 99, scope: !2306)
!2313 = !DILocalVariable(name: "ibuf3", arg: 4, scope: !2306, file: !3, line: 813, type: !2144)
!2314 = !DILocation(line: 813, column: 113, scope: !2306)
!2315 = !DILocalVariable(name: "out", scope: !2306, file: !3, line: 815, type: !2144)
!2316 = !DILocation(line: 815, column: 9, scope: !2306)
!2317 = !DILocation(line: 815, column: 37, scope: !2306)
!2318 = !DILocation(line: 815, column: 46, scope: !2306)
!2319 = !DILocation(line: 815, column: 53, scope: !2306)
!2320 = !DILocation(line: 815, column: 60, scope: !2306)
!2321 = !DILocation(line: 815, column: 15, scope: !2306)
!2322 = !DILocation(line: 816, column: 2, scope: !2306)
!2323 = !DILocation(line: 818, column: 9, scope: !2306)
!2324 = !DILocation(line: 818, column: 2, scope: !2306)
!2325 = distinct !DISubprogram(name: "do_gammacross_effect", scope: !3, file: !3, line: 821, type: !2164, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2326 = !DILocalVariable(name: "context", arg: 1, scope: !2325, file: !3, line: 821, type: !1759)
!2327 = !DILocation(line: 821, column: 55, scope: !2325)
!2328 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !2325, file: !3, line: 821, type: !360)
!2329 = !DILocation(line: 821, column: 74, scope: !2325)
!2330 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2325, file: !3, line: 821, type: !77)
!2331 = !DILocation(line: 821, column: 93, scope: !2325)
!2332 = !DILocalVariable(name: "facf0", arg: 4, scope: !2325, file: !3, line: 822, type: !77)
!2333 = !DILocation(line: 822, column: 40, scope: !2325)
!2334 = !DILocalVariable(name: "facf1", arg: 5, scope: !2325, file: !3, line: 822, type: !77)
!2335 = !DILocation(line: 822, column: 53, scope: !2325)
!2336 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2325, file: !3, line: 822, type: !2144)
!2337 = !DILocation(line: 822, column: 67, scope: !2325)
!2338 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2325, file: !3, line: 822, type: !2144)
!2339 = !DILocation(line: 822, column: 81, scope: !2325)
!2340 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !2325, file: !3, line: 822, type: !2144)
!2341 = !DILocation(line: 822, column: 95, scope: !2325)
!2342 = !DILocalVariable(name: "start_line", arg: 9, scope: !2325, file: !3, line: 823, type: !7)
!2343 = !DILocation(line: 823, column: 38, scope: !2325)
!2344 = !DILocalVariable(name: "total_lines", arg: 10, scope: !2325, file: !3, line: 823, type: !7)
!2345 = !DILocation(line: 823, column: 54, scope: !2325)
!2346 = !DILocalVariable(name: "out", arg: 11, scope: !2325, file: !3, line: 823, type: !2144)
!2347 = !DILocation(line: 823, column: 74, scope: !2325)
!2348 = !DILocation(line: 825, column: 6, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2325, file: !3, line: 825, column: 6)
!2350 = !DILocation(line: 825, column: 11, scope: !2349)
!2351 = !DILocation(line: 825, column: 6, scope: !2325)
!2352 = !DILocalVariable(name: "rect1", scope: !2353, file: !3, line: 826, type: !76)
!2353 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 825, column: 23)
!2354 = !DILocation(line: 826, column: 10, scope: !2353)
!2355 = !DILocalVariable(name: "rect2", scope: !2353, file: !3, line: 826, type: !76)
!2356 = !DILocation(line: 826, column: 25, scope: !2353)
!2357 = !DILocalVariable(name: "rect_out", scope: !2353, file: !3, line: 826, type: !76)
!2358 = !DILocation(line: 826, column: 40, scope: !2353)
!2359 = !DILocation(line: 828, column: 27, scope: !2353)
!2360 = !DILocation(line: 828, column: 36, scope: !2353)
!2361 = !DILocation(line: 828, column: 43, scope: !2353)
!2362 = !DILocation(line: 828, column: 56, scope: !2353)
!2363 = !DILocation(line: 828, column: 61, scope: !2353)
!2364 = !DILocation(line: 828, column: 3, scope: !2353)
!2365 = !DILocation(line: 830, column: 30, scope: !2353)
!2366 = !DILocation(line: 830, column: 37, scope: !2353)
!2367 = !DILocation(line: 830, column: 44, scope: !2353)
!2368 = !DILocation(line: 830, column: 53, scope: !2353)
!2369 = !DILocation(line: 830, column: 60, scope: !2353)
!2370 = !DILocation(line: 830, column: 73, scope: !2353)
!2371 = !DILocation(line: 830, column: 80, scope: !2353)
!2372 = !DILocation(line: 830, column: 87, scope: !2353)
!2373 = !DILocation(line: 830, column: 3, scope: !2353)
!2374 = !DILocation(line: 831, column: 2, scope: !2353)
!2375 = !DILocalVariable(name: "rect1", scope: !2376, file: !3, line: 833, type: !83)
!2376 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 832, column: 7)
!2377 = !DILocation(line: 833, column: 18, scope: !2376)
!2378 = !DILocalVariable(name: "rect2", scope: !2376, file: !3, line: 833, type: !83)
!2379 = !DILocation(line: 833, column: 33, scope: !2376)
!2380 = !DILocalVariable(name: "rect_out", scope: !2376, file: !3, line: 833, type: !83)
!2381 = !DILocation(line: 833, column: 48, scope: !2376)
!2382 = !DILocation(line: 835, column: 26, scope: !2376)
!2383 = !DILocation(line: 835, column: 35, scope: !2376)
!2384 = !DILocation(line: 835, column: 42, scope: !2376)
!2385 = !DILocation(line: 835, column: 55, scope: !2376)
!2386 = !DILocation(line: 835, column: 60, scope: !2376)
!2387 = !DILocation(line: 835, column: 3, scope: !2376)
!2388 = !DILocation(line: 837, column: 29, scope: !2376)
!2389 = !DILocation(line: 837, column: 36, scope: !2376)
!2390 = !DILocation(line: 837, column: 43, scope: !2376)
!2391 = !DILocation(line: 837, column: 52, scope: !2376)
!2392 = !DILocation(line: 837, column: 59, scope: !2376)
!2393 = !DILocation(line: 837, column: 72, scope: !2376)
!2394 = !DILocation(line: 837, column: 79, scope: !2376)
!2395 = !DILocation(line: 837, column: 86, scope: !2376)
!2396 = !DILocation(line: 837, column: 3, scope: !2376)
!2397 = !DILocation(line: 839, column: 1, scope: !2325)
!2398 = distinct !DISubprogram(name: "do_add_effect", scope: !3, file: !3, line: 928, type: !2164, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2399 = !DILocalVariable(name: "context", arg: 1, scope: !2398, file: !3, line: 928, type: !1759)
!2400 = !DILocation(line: 928, column: 48, scope: !2398)
!2401 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !2398, file: !3, line: 928, type: !360)
!2402 = !DILocation(line: 928, column: 67, scope: !2398)
!2403 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2398, file: !3, line: 928, type: !77)
!2404 = !DILocation(line: 928, column: 86, scope: !2398)
!2405 = !DILocalVariable(name: "facf0", arg: 4, scope: !2398, file: !3, line: 928, type: !77)
!2406 = !DILocation(line: 928, column: 106, scope: !2398)
!2407 = !DILocalVariable(name: "facf1", arg: 5, scope: !2398, file: !3, line: 928, type: !77)
!2408 = !DILocation(line: 928, column: 119, scope: !2398)
!2409 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2398, file: !3, line: 929, type: !2144)
!2410 = !DILocation(line: 929, column: 34, scope: !2398)
!2411 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2398, file: !3, line: 929, type: !2144)
!2412 = !DILocation(line: 929, column: 48, scope: !2398)
!2413 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !2398, file: !3, line: 929, type: !2144)
!2414 = !DILocation(line: 929, column: 62, scope: !2398)
!2415 = !DILocalVariable(name: "start_line", arg: 9, scope: !2398, file: !3, line: 929, type: !7)
!2416 = !DILocation(line: 929, column: 81, scope: !2398)
!2417 = !DILocalVariable(name: "total_lines", arg: 10, scope: !2398, file: !3, line: 929, type: !7)
!2418 = !DILocation(line: 929, column: 97, scope: !2398)
!2419 = !DILocalVariable(name: "out", arg: 11, scope: !2398, file: !3, line: 929, type: !2144)
!2420 = !DILocation(line: 929, column: 117, scope: !2398)
!2421 = !DILocation(line: 931, column: 6, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 931, column: 6)
!2423 = !DILocation(line: 931, column: 11, scope: !2422)
!2424 = !DILocation(line: 931, column: 6, scope: !2398)
!2425 = !DILocalVariable(name: "rect1", scope: !2426, file: !3, line: 932, type: !76)
!2426 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 931, column: 23)
!2427 = !DILocation(line: 932, column: 10, scope: !2426)
!2428 = !DILocalVariable(name: "rect2", scope: !2426, file: !3, line: 932, type: !76)
!2429 = !DILocation(line: 932, column: 25, scope: !2426)
!2430 = !DILocalVariable(name: "rect_out", scope: !2426, file: !3, line: 932, type: !76)
!2431 = !DILocation(line: 932, column: 40, scope: !2426)
!2432 = !DILocation(line: 934, column: 27, scope: !2426)
!2433 = !DILocation(line: 934, column: 36, scope: !2426)
!2434 = !DILocation(line: 934, column: 43, scope: !2426)
!2435 = !DILocation(line: 934, column: 56, scope: !2426)
!2436 = !DILocation(line: 934, column: 61, scope: !2426)
!2437 = !DILocation(line: 934, column: 3, scope: !2426)
!2438 = !DILocation(line: 936, column: 23, scope: !2426)
!2439 = !DILocation(line: 936, column: 30, scope: !2426)
!2440 = !DILocation(line: 936, column: 37, scope: !2426)
!2441 = !DILocation(line: 936, column: 46, scope: !2426)
!2442 = !DILocation(line: 936, column: 53, scope: !2426)
!2443 = !DILocation(line: 936, column: 66, scope: !2426)
!2444 = !DILocation(line: 936, column: 73, scope: !2426)
!2445 = !DILocation(line: 936, column: 80, scope: !2426)
!2446 = !DILocation(line: 936, column: 3, scope: !2426)
!2447 = !DILocation(line: 937, column: 2, scope: !2426)
!2448 = !DILocalVariable(name: "rect1", scope: !2449, file: !3, line: 939, type: !83)
!2449 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 938, column: 7)
!2450 = !DILocation(line: 939, column: 18, scope: !2449)
!2451 = !DILocalVariable(name: "rect2", scope: !2449, file: !3, line: 939, type: !83)
!2452 = !DILocation(line: 939, column: 33, scope: !2449)
!2453 = !DILocalVariable(name: "rect_out", scope: !2449, file: !3, line: 939, type: !83)
!2454 = !DILocation(line: 939, column: 48, scope: !2449)
!2455 = !DILocation(line: 941, column: 26, scope: !2449)
!2456 = !DILocation(line: 941, column: 35, scope: !2449)
!2457 = !DILocation(line: 941, column: 42, scope: !2449)
!2458 = !DILocation(line: 941, column: 55, scope: !2449)
!2459 = !DILocation(line: 941, column: 60, scope: !2449)
!2460 = !DILocation(line: 941, column: 3, scope: !2449)
!2461 = !DILocation(line: 943, column: 22, scope: !2449)
!2462 = !DILocation(line: 943, column: 29, scope: !2449)
!2463 = !DILocation(line: 943, column: 36, scope: !2449)
!2464 = !DILocation(line: 943, column: 45, scope: !2449)
!2465 = !DILocation(line: 943, column: 52, scope: !2449)
!2466 = !DILocation(line: 943, column: 65, scope: !2449)
!2467 = !DILocation(line: 943, column: 72, scope: !2449)
!2468 = !DILocation(line: 943, column: 79, scope: !2449)
!2469 = !DILocation(line: 943, column: 3, scope: !2449)
!2470 = !DILocation(line: 945, column: 1, scope: !2398)
!2471 = distinct !DISubprogram(name: "early_out_mul_input2", scope: !3, file: !3, line: 2920, type: !2104, scopeLine: 2921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2472 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !2471, file: !3, line: 2920, type: !360)
!2473 = !DILocation(line: 2920, column: 43, scope: !2471)
!2474 = !DILocalVariable(name: "facf0", arg: 2, scope: !2471, file: !3, line: 2920, type: !77)
!2475 = !DILocation(line: 2920, column: 62, scope: !2471)
!2476 = !DILocalVariable(name: "facf1", arg: 3, scope: !2471, file: !3, line: 2920, type: !77)
!2477 = !DILocation(line: 2920, column: 75, scope: !2471)
!2478 = !DILocation(line: 2922, column: 6, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2471, file: !3, line: 2922, column: 6)
!2480 = !DILocation(line: 2922, column: 12, scope: !2479)
!2481 = !DILocation(line: 2922, column: 20, scope: !2479)
!2482 = !DILocation(line: 2922, column: 23, scope: !2479)
!2483 = !DILocation(line: 2922, column: 29, scope: !2479)
!2484 = !DILocation(line: 2922, column: 6, scope: !2471)
!2485 = !DILocation(line: 2923, column: 3, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2479, file: !3, line: 2922, column: 38)
!2487 = !DILocation(line: 2925, column: 2, scope: !2471)
!2488 = !DILocation(line: 2926, column: 1, scope: !2471)
!2489 = distinct !DISubprogram(name: "do_sub_effect", scope: !3, file: !3, line: 1033, type: !2164, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2490 = !DILocalVariable(name: "context", arg: 1, scope: !2489, file: !3, line: 1033, type: !1759)
!2491 = !DILocation(line: 1033, column: 48, scope: !2489)
!2492 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !2489, file: !3, line: 1033, type: !360)
!2493 = !DILocation(line: 1033, column: 67, scope: !2489)
!2494 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2489, file: !3, line: 1033, type: !77)
!2495 = !DILocation(line: 1033, column: 86, scope: !2489)
!2496 = !DILocalVariable(name: "facf0", arg: 4, scope: !2489, file: !3, line: 1033, type: !77)
!2497 = !DILocation(line: 1033, column: 106, scope: !2489)
!2498 = !DILocalVariable(name: "facf1", arg: 5, scope: !2489, file: !3, line: 1033, type: !77)
!2499 = !DILocation(line: 1033, column: 119, scope: !2489)
!2500 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2489, file: !3, line: 1034, type: !2144)
!2501 = !DILocation(line: 1034, column: 34, scope: !2489)
!2502 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2489, file: !3, line: 1034, type: !2144)
!2503 = !DILocation(line: 1034, column: 48, scope: !2489)
!2504 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !2489, file: !3, line: 1034, type: !2144)
!2505 = !DILocation(line: 1034, column: 62, scope: !2489)
!2506 = !DILocalVariable(name: "start_line", arg: 9, scope: !2489, file: !3, line: 1034, type: !7)
!2507 = !DILocation(line: 1034, column: 81, scope: !2489)
!2508 = !DILocalVariable(name: "total_lines", arg: 10, scope: !2489, file: !3, line: 1034, type: !7)
!2509 = !DILocation(line: 1034, column: 97, scope: !2489)
!2510 = !DILocalVariable(name: "out", arg: 11, scope: !2489, file: !3, line: 1034, type: !2144)
!2511 = !DILocation(line: 1034, column: 117, scope: !2489)
!2512 = !DILocation(line: 1036, column: 6, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 1036, column: 6)
!2514 = !DILocation(line: 1036, column: 11, scope: !2513)
!2515 = !DILocation(line: 1036, column: 6, scope: !2489)
!2516 = !DILocalVariable(name: "rect1", scope: !2517, file: !3, line: 1037, type: !76)
!2517 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 1036, column: 23)
!2518 = !DILocation(line: 1037, column: 10, scope: !2517)
!2519 = !DILocalVariable(name: "rect2", scope: !2517, file: !3, line: 1037, type: !76)
!2520 = !DILocation(line: 1037, column: 25, scope: !2517)
!2521 = !DILocalVariable(name: "rect_out", scope: !2517, file: !3, line: 1037, type: !76)
!2522 = !DILocation(line: 1037, column: 40, scope: !2517)
!2523 = !DILocation(line: 1039, column: 27, scope: !2517)
!2524 = !DILocation(line: 1039, column: 36, scope: !2517)
!2525 = !DILocation(line: 1039, column: 43, scope: !2517)
!2526 = !DILocation(line: 1039, column: 56, scope: !2517)
!2527 = !DILocation(line: 1039, column: 61, scope: !2517)
!2528 = !DILocation(line: 1039, column: 3, scope: !2517)
!2529 = !DILocation(line: 1041, column: 23, scope: !2517)
!2530 = !DILocation(line: 1041, column: 30, scope: !2517)
!2531 = !DILocation(line: 1041, column: 37, scope: !2517)
!2532 = !DILocation(line: 1041, column: 46, scope: !2517)
!2533 = !DILocation(line: 1041, column: 53, scope: !2517)
!2534 = !DILocation(line: 1041, column: 66, scope: !2517)
!2535 = !DILocation(line: 1041, column: 73, scope: !2517)
!2536 = !DILocation(line: 1041, column: 80, scope: !2517)
!2537 = !DILocation(line: 1041, column: 3, scope: !2517)
!2538 = !DILocation(line: 1042, column: 2, scope: !2517)
!2539 = !DILocalVariable(name: "rect1", scope: !2540, file: !3, line: 1044, type: !83)
!2540 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 1043, column: 7)
!2541 = !DILocation(line: 1044, column: 18, scope: !2540)
!2542 = !DILocalVariable(name: "rect2", scope: !2540, file: !3, line: 1044, type: !83)
!2543 = !DILocation(line: 1044, column: 33, scope: !2540)
!2544 = !DILocalVariable(name: "rect_out", scope: !2540, file: !3, line: 1044, type: !83)
!2545 = !DILocation(line: 1044, column: 48, scope: !2540)
!2546 = !DILocation(line: 1046, column: 26, scope: !2540)
!2547 = !DILocation(line: 1046, column: 35, scope: !2540)
!2548 = !DILocation(line: 1046, column: 42, scope: !2540)
!2549 = !DILocation(line: 1046, column: 55, scope: !2540)
!2550 = !DILocation(line: 1046, column: 60, scope: !2540)
!2551 = !DILocation(line: 1046, column: 3, scope: !2540)
!2552 = !DILocation(line: 1048, column: 22, scope: !2540)
!2553 = !DILocation(line: 1048, column: 29, scope: !2540)
!2554 = !DILocation(line: 1048, column: 36, scope: !2540)
!2555 = !DILocation(line: 1048, column: 45, scope: !2540)
!2556 = !DILocation(line: 1048, column: 52, scope: !2540)
!2557 = !DILocation(line: 1048, column: 65, scope: !2540)
!2558 = !DILocation(line: 1048, column: 72, scope: !2540)
!2559 = !DILocation(line: 1048, column: 79, scope: !2540)
!2560 = !DILocation(line: 1048, column: 3, scope: !2540)
!2561 = !DILocation(line: 1050, column: 1, scope: !2489)
!2562 = distinct !DISubprogram(name: "do_mul_effect", scope: !3, file: !3, line: 1230, type: !2164, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2563 = !DILocalVariable(name: "context", arg: 1, scope: !2562, file: !3, line: 1230, type: !1759)
!2564 = !DILocation(line: 1230, column: 48, scope: !2562)
!2565 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !2562, file: !3, line: 1230, type: !360)
!2566 = !DILocation(line: 1230, column: 67, scope: !2562)
!2567 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2562, file: !3, line: 1230, type: !77)
!2568 = !DILocation(line: 1230, column: 86, scope: !2562)
!2569 = !DILocalVariable(name: "facf0", arg: 4, scope: !2562, file: !3, line: 1230, type: !77)
!2570 = !DILocation(line: 1230, column: 106, scope: !2562)
!2571 = !DILocalVariable(name: "facf1", arg: 5, scope: !2562, file: !3, line: 1230, type: !77)
!2572 = !DILocation(line: 1230, column: 119, scope: !2562)
!2573 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2562, file: !3, line: 1231, type: !2144)
!2574 = !DILocation(line: 1231, column: 34, scope: !2562)
!2575 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2562, file: !3, line: 1231, type: !2144)
!2576 = !DILocation(line: 1231, column: 48, scope: !2562)
!2577 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !2562, file: !3, line: 1231, type: !2144)
!2578 = !DILocation(line: 1231, column: 62, scope: !2562)
!2579 = !DILocalVariable(name: "start_line", arg: 9, scope: !2562, file: !3, line: 1231, type: !7)
!2580 = !DILocation(line: 1231, column: 81, scope: !2562)
!2581 = !DILocalVariable(name: "total_lines", arg: 10, scope: !2562, file: !3, line: 1231, type: !7)
!2582 = !DILocation(line: 1231, column: 97, scope: !2562)
!2583 = !DILocalVariable(name: "out", arg: 11, scope: !2562, file: !3, line: 1231, type: !2144)
!2584 = !DILocation(line: 1231, column: 117, scope: !2562)
!2585 = !DILocation(line: 1233, column: 6, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 1233, column: 6)
!2587 = !DILocation(line: 1233, column: 11, scope: !2586)
!2588 = !DILocation(line: 1233, column: 6, scope: !2562)
!2589 = !DILocalVariable(name: "rect1", scope: !2590, file: !3, line: 1234, type: !76)
!2590 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 1233, column: 23)
!2591 = !DILocation(line: 1234, column: 10, scope: !2590)
!2592 = !DILocalVariable(name: "rect2", scope: !2590, file: !3, line: 1234, type: !76)
!2593 = !DILocation(line: 1234, column: 25, scope: !2590)
!2594 = !DILocalVariable(name: "rect_out", scope: !2590, file: !3, line: 1234, type: !76)
!2595 = !DILocation(line: 1234, column: 40, scope: !2590)
!2596 = !DILocation(line: 1236, column: 27, scope: !2590)
!2597 = !DILocation(line: 1236, column: 36, scope: !2590)
!2598 = !DILocation(line: 1236, column: 43, scope: !2590)
!2599 = !DILocation(line: 1236, column: 56, scope: !2590)
!2600 = !DILocation(line: 1236, column: 61, scope: !2590)
!2601 = !DILocation(line: 1236, column: 3, scope: !2590)
!2602 = !DILocation(line: 1238, column: 23, scope: !2590)
!2603 = !DILocation(line: 1238, column: 30, scope: !2590)
!2604 = !DILocation(line: 1238, column: 37, scope: !2590)
!2605 = !DILocation(line: 1238, column: 46, scope: !2590)
!2606 = !DILocation(line: 1238, column: 53, scope: !2590)
!2607 = !DILocation(line: 1238, column: 66, scope: !2590)
!2608 = !DILocation(line: 1238, column: 73, scope: !2590)
!2609 = !DILocation(line: 1238, column: 80, scope: !2590)
!2610 = !DILocation(line: 1238, column: 3, scope: !2590)
!2611 = !DILocation(line: 1239, column: 2, scope: !2590)
!2612 = !DILocalVariable(name: "rect1", scope: !2613, file: !3, line: 1241, type: !83)
!2613 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 1240, column: 7)
!2614 = !DILocation(line: 1241, column: 18, scope: !2613)
!2615 = !DILocalVariable(name: "rect2", scope: !2613, file: !3, line: 1241, type: !83)
!2616 = !DILocation(line: 1241, column: 33, scope: !2613)
!2617 = !DILocalVariable(name: "rect_out", scope: !2613, file: !3, line: 1241, type: !83)
!2618 = !DILocation(line: 1241, column: 48, scope: !2613)
!2619 = !DILocation(line: 1243, column: 26, scope: !2613)
!2620 = !DILocation(line: 1243, column: 35, scope: !2613)
!2621 = !DILocation(line: 1243, column: 42, scope: !2613)
!2622 = !DILocation(line: 1243, column: 55, scope: !2613)
!2623 = !DILocation(line: 1243, column: 60, scope: !2613)
!2624 = !DILocation(line: 1243, column: 3, scope: !2613)
!2625 = !DILocation(line: 1245, column: 22, scope: !2613)
!2626 = !DILocation(line: 1245, column: 29, scope: !2613)
!2627 = !DILocation(line: 1245, column: 36, scope: !2613)
!2628 = !DILocation(line: 1245, column: 45, scope: !2613)
!2629 = !DILocation(line: 1245, column: 52, scope: !2613)
!2630 = !DILocation(line: 1245, column: 65, scope: !2613)
!2631 = !DILocation(line: 1245, column: 72, scope: !2613)
!2632 = !DILocation(line: 1245, column: 79, scope: !2613)
!2633 = !DILocation(line: 1245, column: 3, scope: !2613)
!2634 = !DILocation(line: 1247, column: 1, scope: !2562)
!2635 = distinct !DISubprogram(name: "init_alpha_over_or_under", scope: !3, file: !3, line: 152, type: !2088, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2636 = !DILocalVariable(name: "seq", arg: 1, scope: !2635, file: !3, line: 152, type: !360)
!2637 = !DILocation(line: 152, column: 48, scope: !2635)
!2638 = !DILocalVariable(name: "seq1", scope: !2635, file: !3, line: 154, type: !360)
!2639 = !DILocation(line: 154, column: 12, scope: !2635)
!2640 = !DILocation(line: 154, column: 19, scope: !2635)
!2641 = !DILocation(line: 154, column: 24, scope: !2635)
!2642 = !DILocalVariable(name: "seq2", scope: !2635, file: !3, line: 155, type: !360)
!2643 = !DILocation(line: 155, column: 12, scope: !2635)
!2644 = !DILocation(line: 155, column: 19, scope: !2635)
!2645 = !DILocation(line: 155, column: 24, scope: !2635)
!2646 = !DILocation(line: 157, column: 14, scope: !2635)
!2647 = !DILocation(line: 157, column: 2, scope: !2635)
!2648 = !DILocation(line: 157, column: 7, scope: !2635)
!2649 = !DILocation(line: 157, column: 12, scope: !2635)
!2650 = !DILocation(line: 158, column: 14, scope: !2635)
!2651 = !DILocation(line: 158, column: 2, scope: !2635)
!2652 = !DILocation(line: 158, column: 7, scope: !2635)
!2653 = !DILocation(line: 158, column: 12, scope: !2635)
!2654 = !DILocation(line: 159, column: 1, scope: !2635)
!2655 = distinct !DISubprogram(name: "do_alphaover_effect", scope: !3, file: !3, line: 289, type: !2164, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2656 = !DILocalVariable(name: "context", arg: 1, scope: !2655, file: !3, line: 289, type: !1759)
!2657 = !DILocation(line: 289, column: 54, scope: !2655)
!2658 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !2655, file: !3, line: 289, type: !360)
!2659 = !DILocation(line: 289, column: 73, scope: !2655)
!2660 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2655, file: !3, line: 289, type: !77)
!2661 = !DILocation(line: 289, column: 92, scope: !2655)
!2662 = !DILocalVariable(name: "facf0", arg: 4, scope: !2655, file: !3, line: 289, type: !77)
!2663 = !DILocation(line: 289, column: 112, scope: !2655)
!2664 = !DILocalVariable(name: "facf1", arg: 5, scope: !2655, file: !3, line: 290, type: !77)
!2665 = !DILocation(line: 290, column: 39, scope: !2655)
!2666 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2655, file: !3, line: 290, type: !2144)
!2667 = !DILocation(line: 290, column: 53, scope: !2655)
!2668 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2655, file: !3, line: 290, type: !2144)
!2669 = !DILocation(line: 290, column: 67, scope: !2655)
!2670 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !2655, file: !3, line: 290, type: !2144)
!2671 = !DILocation(line: 290, column: 81, scope: !2655)
!2672 = !DILocalVariable(name: "start_line", arg: 9, scope: !2655, file: !3, line: 291, type: !7)
!2673 = !DILocation(line: 291, column: 37, scope: !2655)
!2674 = !DILocalVariable(name: "total_lines", arg: 10, scope: !2655, file: !3, line: 291, type: !7)
!2675 = !DILocation(line: 291, column: 53, scope: !2655)
!2676 = !DILocalVariable(name: "out", arg: 11, scope: !2655, file: !3, line: 291, type: !2144)
!2677 = !DILocation(line: 291, column: 73, scope: !2655)
!2678 = !DILocation(line: 293, column: 6, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2655, file: !3, line: 293, column: 6)
!2680 = !DILocation(line: 293, column: 11, scope: !2679)
!2681 = !DILocation(line: 293, column: 6, scope: !2655)
!2682 = !DILocalVariable(name: "rect1", scope: !2683, file: !3, line: 294, type: !76)
!2683 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 293, column: 23)
!2684 = !DILocation(line: 294, column: 10, scope: !2683)
!2685 = !DILocalVariable(name: "rect2", scope: !2683, file: !3, line: 294, type: !76)
!2686 = !DILocation(line: 294, column: 25, scope: !2683)
!2687 = !DILocalVariable(name: "rect_out", scope: !2683, file: !3, line: 294, type: !76)
!2688 = !DILocation(line: 294, column: 40, scope: !2683)
!2689 = !DILocation(line: 296, column: 27, scope: !2683)
!2690 = !DILocation(line: 296, column: 36, scope: !2683)
!2691 = !DILocation(line: 296, column: 43, scope: !2683)
!2692 = !DILocation(line: 296, column: 56, scope: !2683)
!2693 = !DILocation(line: 296, column: 61, scope: !2683)
!2694 = !DILocation(line: 296, column: 3, scope: !2683)
!2695 = !DILocation(line: 298, column: 29, scope: !2683)
!2696 = !DILocation(line: 298, column: 36, scope: !2683)
!2697 = !DILocation(line: 298, column: 43, scope: !2683)
!2698 = !DILocation(line: 298, column: 52, scope: !2683)
!2699 = !DILocation(line: 298, column: 59, scope: !2683)
!2700 = !DILocation(line: 298, column: 72, scope: !2683)
!2701 = !DILocation(line: 298, column: 79, scope: !2683)
!2702 = !DILocation(line: 298, column: 86, scope: !2683)
!2703 = !DILocation(line: 298, column: 3, scope: !2683)
!2704 = !DILocation(line: 299, column: 2, scope: !2683)
!2705 = !DILocalVariable(name: "rect1", scope: !2706, file: !3, line: 301, type: !83)
!2706 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 300, column: 7)
!2707 = !DILocation(line: 301, column: 18, scope: !2706)
!2708 = !DILocalVariable(name: "rect2", scope: !2706, file: !3, line: 301, type: !83)
!2709 = !DILocation(line: 301, column: 33, scope: !2706)
!2710 = !DILocalVariable(name: "rect_out", scope: !2706, file: !3, line: 301, type: !83)
!2711 = !DILocation(line: 301, column: 48, scope: !2706)
!2712 = !DILocation(line: 303, column: 26, scope: !2706)
!2713 = !DILocation(line: 303, column: 35, scope: !2706)
!2714 = !DILocation(line: 303, column: 42, scope: !2706)
!2715 = !DILocation(line: 303, column: 55, scope: !2706)
!2716 = !DILocation(line: 303, column: 60, scope: !2706)
!2717 = !DILocation(line: 303, column: 3, scope: !2706)
!2718 = !DILocation(line: 305, column: 28, scope: !2706)
!2719 = !DILocation(line: 305, column: 35, scope: !2706)
!2720 = !DILocation(line: 305, column: 42, scope: !2706)
!2721 = !DILocation(line: 305, column: 51, scope: !2706)
!2722 = !DILocation(line: 305, column: 58, scope: !2706)
!2723 = !DILocation(line: 305, column: 71, scope: !2706)
!2724 = !DILocation(line: 305, column: 78, scope: !2706)
!2725 = !DILocation(line: 305, column: 85, scope: !2706)
!2726 = !DILocation(line: 305, column: 3, scope: !2706)
!2727 = !DILocation(line: 307, column: 1, scope: !2655)
!2728 = distinct !DISubprogram(name: "do_overdrop_effect", scope: !3, file: !3, line: 2569, type: !2164, scopeLine: 2571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2729 = !DILocalVariable(name: "context", arg: 1, scope: !2728, file: !3, line: 2569, type: !1759)
!2730 = !DILocation(line: 2569, column: 53, scope: !2728)
!2731 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !2728, file: !3, line: 2569, type: !360)
!2732 = !DILocation(line: 2569, column: 72, scope: !2728)
!2733 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2728, file: !3, line: 2569, type: !77)
!2734 = !DILocation(line: 2569, column: 91, scope: !2728)
!2735 = !DILocalVariable(name: "facf0", arg: 4, scope: !2728, file: !3, line: 2569, type: !77)
!2736 = !DILocation(line: 2569, column: 111, scope: !2728)
!2737 = !DILocalVariable(name: "facf1", arg: 5, scope: !2728, file: !3, line: 2569, type: !77)
!2738 = !DILocation(line: 2569, column: 124, scope: !2728)
!2739 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2728, file: !3, line: 2570, type: !2144)
!2740 = !DILocation(line: 2570, column: 39, scope: !2728)
!2741 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2728, file: !3, line: 2570, type: !2144)
!2742 = !DILocation(line: 2570, column: 53, scope: !2728)
!2743 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !2728, file: !3, line: 2570, type: !2144)
!2744 = !DILocation(line: 2570, column: 67, scope: !2728)
!2745 = !DILocalVariable(name: "start_line", arg: 9, scope: !2728, file: !3, line: 2570, type: !7)
!2746 = !DILocation(line: 2570, column: 86, scope: !2728)
!2747 = !DILocalVariable(name: "total_lines", arg: 10, scope: !2728, file: !3, line: 2570, type: !7)
!2748 = !DILocation(line: 2570, column: 102, scope: !2728)
!2749 = !DILocalVariable(name: "out", arg: 11, scope: !2728, file: !3, line: 2570, type: !2144)
!2750 = !DILocation(line: 2570, column: 122, scope: !2728)
!2751 = !DILocalVariable(name: "x", scope: !2728, file: !3, line: 2572, type: !7)
!2752 = !DILocation(line: 2572, column: 6, scope: !2728)
!2753 = !DILocation(line: 2572, column: 10, scope: !2728)
!2754 = !DILocation(line: 2572, column: 19, scope: !2728)
!2755 = !DILocalVariable(name: "y", scope: !2728, file: !3, line: 2573, type: !7)
!2756 = !DILocation(line: 2573, column: 6, scope: !2728)
!2757 = !DILocation(line: 2573, column: 10, scope: !2728)
!2758 = !DILocation(line: 2575, column: 6, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2728, file: !3, line: 2575, column: 6)
!2760 = !DILocation(line: 2575, column: 11, scope: !2759)
!2761 = !DILocation(line: 2575, column: 6, scope: !2728)
!2762 = !DILocalVariable(name: "rect1", scope: !2763, file: !3, line: 2576, type: !76)
!2763 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 2575, column: 23)
!2764 = !DILocation(line: 2576, column: 10, scope: !2763)
!2765 = !DILocalVariable(name: "rect2", scope: !2763, file: !3, line: 2576, type: !76)
!2766 = !DILocation(line: 2576, column: 25, scope: !2763)
!2767 = !DILocalVariable(name: "rect_out", scope: !2763, file: !3, line: 2576, type: !76)
!2768 = !DILocation(line: 2576, column: 40, scope: !2763)
!2769 = !DILocation(line: 2578, column: 27, scope: !2763)
!2770 = !DILocation(line: 2578, column: 36, scope: !2763)
!2771 = !DILocation(line: 2578, column: 43, scope: !2763)
!2772 = !DILocation(line: 2578, column: 56, scope: !2763)
!2773 = !DILocation(line: 2578, column: 61, scope: !2763)
!2774 = !DILocation(line: 2578, column: 3, scope: !2763)
!2775 = !DILocation(line: 2580, column: 24, scope: !2763)
!2776 = !DILocation(line: 2580, column: 31, scope: !2763)
!2777 = !DILocation(line: 2580, column: 38, scope: !2763)
!2778 = !DILocation(line: 2580, column: 41, scope: !2763)
!2779 = !DILocation(line: 2580, column: 44, scope: !2763)
!2780 = !DILocation(line: 2580, column: 51, scope: !2763)
!2781 = !DILocation(line: 2580, column: 58, scope: !2763)
!2782 = !DILocation(line: 2580, column: 3, scope: !2763)
!2783 = !DILocation(line: 2581, column: 29, scope: !2763)
!2784 = !DILocation(line: 2581, column: 36, scope: !2763)
!2785 = !DILocation(line: 2581, column: 43, scope: !2763)
!2786 = !DILocation(line: 2581, column: 46, scope: !2763)
!2787 = !DILocation(line: 2581, column: 49, scope: !2763)
!2788 = !DILocation(line: 2581, column: 56, scope: !2763)
!2789 = !DILocation(line: 2581, column: 63, scope: !2763)
!2790 = !DILocation(line: 2581, column: 3, scope: !2763)
!2791 = !DILocation(line: 2582, column: 2, scope: !2763)
!2792 = !DILocalVariable(name: "rect1", scope: !2793, file: !3, line: 2584, type: !83)
!2793 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 2583, column: 7)
!2794 = !DILocation(line: 2584, column: 18, scope: !2793)
!2795 = !DILocalVariable(name: "rect2", scope: !2793, file: !3, line: 2584, type: !83)
!2796 = !DILocation(line: 2584, column: 33, scope: !2793)
!2797 = !DILocalVariable(name: "rect_out", scope: !2793, file: !3, line: 2584, type: !83)
!2798 = !DILocation(line: 2584, column: 48, scope: !2793)
!2799 = !DILocation(line: 2586, column: 26, scope: !2793)
!2800 = !DILocation(line: 2586, column: 35, scope: !2793)
!2801 = !DILocation(line: 2586, column: 42, scope: !2793)
!2802 = !DILocation(line: 2586, column: 55, scope: !2793)
!2803 = !DILocation(line: 2586, column: 60, scope: !2793)
!2804 = !DILocation(line: 2586, column: 3, scope: !2793)
!2805 = !DILocation(line: 2588, column: 23, scope: !2793)
!2806 = !DILocation(line: 2588, column: 30, scope: !2793)
!2807 = !DILocation(line: 2588, column: 37, scope: !2793)
!2808 = !DILocation(line: 2588, column: 40, scope: !2793)
!2809 = !DILocation(line: 2588, column: 43, scope: !2793)
!2810 = !DILocation(line: 2588, column: 50, scope: !2793)
!2811 = !DILocation(line: 2588, column: 57, scope: !2793)
!2812 = !DILocation(line: 2588, column: 3, scope: !2793)
!2813 = !DILocation(line: 2589, column: 28, scope: !2793)
!2814 = !DILocation(line: 2589, column: 35, scope: !2793)
!2815 = !DILocation(line: 2589, column: 42, scope: !2793)
!2816 = !DILocation(line: 2589, column: 45, scope: !2793)
!2817 = !DILocation(line: 2589, column: 48, scope: !2793)
!2818 = !DILocation(line: 2589, column: 55, scope: !2793)
!2819 = !DILocation(line: 2589, column: 62, scope: !2793)
!2820 = !DILocation(line: 2589, column: 3, scope: !2793)
!2821 = !DILocation(line: 2591, column: 1, scope: !2728)
!2822 = distinct !DISubprogram(name: "do_alphaunder_effect", scope: !3, file: !3, line: 457, type: !2164, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2823 = !DILocalVariable(name: "context", arg: 1, scope: !2822, file: !3, line: 457, type: !1759)
!2824 = !DILocation(line: 457, column: 55, scope: !2822)
!2825 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !2822, file: !3, line: 457, type: !360)
!2826 = !DILocation(line: 457, column: 74, scope: !2822)
!2827 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2822, file: !3, line: 457, type: !77)
!2828 = !DILocation(line: 457, column: 93, scope: !2822)
!2829 = !DILocalVariable(name: "facf0", arg: 4, scope: !2822, file: !3, line: 458, type: !77)
!2830 = !DILocation(line: 458, column: 40, scope: !2822)
!2831 = !DILocalVariable(name: "facf1", arg: 5, scope: !2822, file: !3, line: 458, type: !77)
!2832 = !DILocation(line: 458, column: 53, scope: !2822)
!2833 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2822, file: !3, line: 458, type: !2144)
!2834 = !DILocation(line: 458, column: 67, scope: !2822)
!2835 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2822, file: !3, line: 458, type: !2144)
!2836 = !DILocation(line: 458, column: 81, scope: !2822)
!2837 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !2822, file: !3, line: 458, type: !2144)
!2838 = !DILocation(line: 458, column: 95, scope: !2822)
!2839 = !DILocalVariable(name: "start_line", arg: 9, scope: !2822, file: !3, line: 459, type: !7)
!2840 = !DILocation(line: 459, column: 38, scope: !2822)
!2841 = !DILocalVariable(name: "total_lines", arg: 10, scope: !2822, file: !3, line: 459, type: !7)
!2842 = !DILocation(line: 459, column: 54, scope: !2822)
!2843 = !DILocalVariable(name: "out", arg: 11, scope: !2822, file: !3, line: 459, type: !2144)
!2844 = !DILocation(line: 459, column: 74, scope: !2822)
!2845 = !DILocation(line: 461, column: 6, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 461, column: 6)
!2847 = !DILocation(line: 461, column: 11, scope: !2846)
!2848 = !DILocation(line: 461, column: 6, scope: !2822)
!2849 = !DILocalVariable(name: "rect1", scope: !2850, file: !3, line: 462, type: !76)
!2850 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 461, column: 23)
!2851 = !DILocation(line: 462, column: 10, scope: !2850)
!2852 = !DILocalVariable(name: "rect2", scope: !2850, file: !3, line: 462, type: !76)
!2853 = !DILocation(line: 462, column: 25, scope: !2850)
!2854 = !DILocalVariable(name: "rect_out", scope: !2850, file: !3, line: 462, type: !76)
!2855 = !DILocation(line: 462, column: 40, scope: !2850)
!2856 = !DILocation(line: 464, column: 27, scope: !2850)
!2857 = !DILocation(line: 464, column: 36, scope: !2850)
!2858 = !DILocation(line: 464, column: 43, scope: !2850)
!2859 = !DILocation(line: 464, column: 56, scope: !2850)
!2860 = !DILocation(line: 464, column: 61, scope: !2850)
!2861 = !DILocation(line: 464, column: 3, scope: !2850)
!2862 = !DILocation(line: 466, column: 30, scope: !2850)
!2863 = !DILocation(line: 466, column: 37, scope: !2850)
!2864 = !DILocation(line: 466, column: 44, scope: !2850)
!2865 = !DILocation(line: 466, column: 53, scope: !2850)
!2866 = !DILocation(line: 466, column: 60, scope: !2850)
!2867 = !DILocation(line: 466, column: 73, scope: !2850)
!2868 = !DILocation(line: 466, column: 80, scope: !2850)
!2869 = !DILocation(line: 466, column: 87, scope: !2850)
!2870 = !DILocation(line: 466, column: 3, scope: !2850)
!2871 = !DILocation(line: 467, column: 2, scope: !2850)
!2872 = !DILocalVariable(name: "rect1", scope: !2873, file: !3, line: 469, type: !83)
!2873 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 468, column: 7)
!2874 = !DILocation(line: 469, column: 18, scope: !2873)
!2875 = !DILocalVariable(name: "rect2", scope: !2873, file: !3, line: 469, type: !83)
!2876 = !DILocation(line: 469, column: 33, scope: !2873)
!2877 = !DILocalVariable(name: "rect_out", scope: !2873, file: !3, line: 469, type: !83)
!2878 = !DILocation(line: 469, column: 48, scope: !2873)
!2879 = !DILocation(line: 471, column: 26, scope: !2873)
!2880 = !DILocation(line: 471, column: 35, scope: !2873)
!2881 = !DILocation(line: 471, column: 42, scope: !2873)
!2882 = !DILocation(line: 471, column: 55, scope: !2873)
!2883 = !DILocation(line: 471, column: 60, scope: !2873)
!2884 = !DILocation(line: 471, column: 3, scope: !2873)
!2885 = !DILocation(line: 473, column: 29, scope: !2873)
!2886 = !DILocation(line: 473, column: 36, scope: !2873)
!2887 = !DILocation(line: 473, column: 43, scope: !2873)
!2888 = !DILocation(line: 473, column: 52, scope: !2873)
!2889 = !DILocation(line: 473, column: 59, scope: !2873)
!2890 = !DILocation(line: 473, column: 72, scope: !2873)
!2891 = !DILocation(line: 473, column: 79, scope: !2873)
!2892 = !DILocation(line: 473, column: 86, scope: !2873)
!2893 = !DILocation(line: 473, column: 3, scope: !2873)
!2894 = !DILocation(line: 475, column: 1, scope: !2822)
!2895 = distinct !DISubprogram(name: "init_wipe_effect", scope: !3, file: !3, line: 1527, type: !2088, scopeLine: 1528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2896 = !DILocalVariable(name: "seq", arg: 1, scope: !2895, file: !3, line: 1527, type: !360)
!2897 = !DILocation(line: 1527, column: 40, scope: !2895)
!2898 = !DILocation(line: 1529, column: 6, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 1529, column: 6)
!2900 = !DILocation(line: 1529, column: 11, scope: !2899)
!2901 = !DILocation(line: 1529, column: 6, scope: !2895)
!2902 = !DILocation(line: 1530, column: 3, scope: !2899)
!2903 = !DILocation(line: 1530, column: 13, scope: !2899)
!2904 = !DILocation(line: 1530, column: 18, scope: !2899)
!2905 = !DILocation(line: 1532, column: 20, scope: !2895)
!2906 = !DILocation(line: 1532, column: 2, scope: !2895)
!2907 = !DILocation(line: 1532, column: 7, scope: !2895)
!2908 = !DILocation(line: 1532, column: 18, scope: !2895)
!2909 = !DILocation(line: 1533, column: 1, scope: !2895)
!2910 = distinct !DISubprogram(name: "num_inputs_wipe", scope: !3, file: !3, line: 1535, type: !1672, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2911 = !DILocation(line: 1537, column: 2, scope: !2910)
!2912 = distinct !DISubprogram(name: "free_wipe_effect", scope: !3, file: !3, line: 1540, type: !2088, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2913 = !DILocalVariable(name: "seq", arg: 1, scope: !2912, file: !3, line: 1540, type: !360)
!2914 = !DILocation(line: 1540, column: 40, scope: !2912)
!2915 = !DILocation(line: 1542, column: 6, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2912, file: !3, line: 1542, column: 6)
!2917 = !DILocation(line: 1542, column: 11, scope: !2916)
!2918 = !DILocation(line: 1542, column: 6, scope: !2912)
!2919 = !DILocation(line: 1543, column: 3, scope: !2916)
!2920 = !DILocation(line: 1543, column: 13, scope: !2916)
!2921 = !DILocation(line: 1543, column: 18, scope: !2916)
!2922 = !DILocation(line: 1545, column: 2, scope: !2912)
!2923 = !DILocation(line: 1545, column: 7, scope: !2912)
!2924 = !DILocation(line: 1545, column: 18, scope: !2912)
!2925 = !DILocation(line: 1546, column: 1, scope: !2912)
!2926 = distinct !DISubprogram(name: "copy_wipe_effect", scope: !3, file: !3, line: 1548, type: !2927, scopeLine: 1549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{null, !360, !360}
!2929 = !DILocalVariable(name: "dst", arg: 1, scope: !2926, file: !3, line: 1548, type: !360)
!2930 = !DILocation(line: 1548, column: 40, scope: !2926)
!2931 = !DILocalVariable(name: "src", arg: 2, scope: !2926, file: !3, line: 1548, type: !360)
!2932 = !DILocation(line: 1548, column: 55, scope: !2926)
!2933 = !DILocation(line: 1550, column: 20, scope: !2926)
!2934 = !DILocation(line: 1550, column: 34, scope: !2926)
!2935 = !DILocation(line: 1550, column: 39, scope: !2926)
!2936 = !DILocation(line: 1550, column: 2, scope: !2926)
!2937 = !DILocation(line: 1550, column: 7, scope: !2926)
!2938 = !DILocation(line: 1550, column: 18, scope: !2926)
!2939 = !DILocation(line: 1551, column: 1, scope: !2926)
!2940 = distinct !DISubprogram(name: "do_wipe_effect", scope: !3, file: !3, line: 1678, type: !2941, scopeLine: 1680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{!2144, !1759, !360, !77, !77, !77, !2144, !2144, !2144}
!2943 = !DILocalVariable(name: "context", arg: 1, scope: !2940, file: !3, line: 1678, type: !1759)
!2944 = !DILocation(line: 1678, column: 51, scope: !2940)
!2945 = !DILocalVariable(name: "seq", arg: 2, scope: !2940, file: !3, line: 1678, type: !360)
!2946 = !DILocation(line: 1678, column: 70, scope: !2940)
!2947 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !2940, file: !3, line: 1678, type: !77)
!2948 = !DILocation(line: 1678, column: 81, scope: !2940)
!2949 = !DILocalVariable(name: "facf0", arg: 4, scope: !2940, file: !3, line: 1678, type: !77)
!2950 = !DILocation(line: 1678, column: 101, scope: !2940)
!2951 = !DILocalVariable(name: "facf1", arg: 5, scope: !2940, file: !3, line: 1678, type: !77)
!2952 = !DILocation(line: 1678, column: 114, scope: !2940)
!2953 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !2940, file: !3, line: 1679, type: !2144)
!2954 = !DILocation(line: 1679, column: 37, scope: !2940)
!2955 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !2940, file: !3, line: 1679, type: !2144)
!2956 = !DILocation(line: 1679, column: 51, scope: !2940)
!2957 = !DILocalVariable(name: "ibuf3", arg: 8, scope: !2940, file: !3, line: 1679, type: !2144)
!2958 = !DILocation(line: 1679, column: 65, scope: !2940)
!2959 = !DILocalVariable(name: "out", scope: !2940, file: !3, line: 1681, type: !2144)
!2960 = !DILocation(line: 1681, column: 9, scope: !2940)
!2961 = !DILocation(line: 1681, column: 37, scope: !2940)
!2962 = !DILocation(line: 1681, column: 46, scope: !2940)
!2963 = !DILocation(line: 1681, column: 53, scope: !2940)
!2964 = !DILocation(line: 1681, column: 60, scope: !2940)
!2965 = !DILocation(line: 1681, column: 15, scope: !2940)
!2966 = !DILocation(line: 1683, column: 6, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 1683, column: 6)
!2968 = !DILocation(line: 1683, column: 11, scope: !2967)
!2969 = !DILocation(line: 1683, column: 6, scope: !2940)
!2970 = !DILocation(line: 1684, column: 24, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 1683, column: 23)
!2972 = !DILocation(line: 1684, column: 29, scope: !2971)
!2973 = !DILocation(line: 1684, column: 36, scope: !2971)
!2974 = !DILocation(line: 1684, column: 43, scope: !2971)
!2975 = !DILocation(line: 1684, column: 52, scope: !2971)
!2976 = !DILocation(line: 1684, column: 59, scope: !2971)
!2977 = !DILocation(line: 1684, column: 68, scope: !2971)
!2978 = !DILocation(line: 1684, column: 75, scope: !2971)
!2979 = !DILocation(line: 1684, column: 82, scope: !2971)
!2980 = !DILocation(line: 1685, column: 24, scope: !2971)
!2981 = !DILocation(line: 1685, column: 31, scope: !2971)
!2982 = !DILocation(line: 1685, column: 43, scope: !2971)
!2983 = !DILocation(line: 1685, column: 48, scope: !2971)
!2984 = !DILocation(line: 1684, column: 3, scope: !2971)
!2985 = !DILocation(line: 1686, column: 2, scope: !2971)
!2986 = !DILocation(line: 1688, column: 23, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 1687, column: 7)
!2988 = !DILocation(line: 1688, column: 28, scope: !2987)
!2989 = !DILocation(line: 1688, column: 35, scope: !2987)
!2990 = !DILocation(line: 1688, column: 42, scope: !2987)
!2991 = !DILocation(line: 1688, column: 51, scope: !2987)
!2992 = !DILocation(line: 1688, column: 58, scope: !2987)
!2993 = !DILocation(line: 1688, column: 67, scope: !2987)
!2994 = !DILocation(line: 1688, column: 92, scope: !2987)
!2995 = !DILocation(line: 1688, column: 99, scope: !2987)
!2996 = !DILocation(line: 1688, column: 74, scope: !2987)
!2997 = !DILocation(line: 1689, column: 41, scope: !2987)
!2998 = !DILocation(line: 1689, column: 48, scope: !2987)
!2999 = !DILocation(line: 1689, column: 23, scope: !2987)
!3000 = !DILocation(line: 1689, column: 72, scope: !2987)
!3001 = !DILocation(line: 1689, column: 77, scope: !2987)
!3002 = !DILocation(line: 1689, column: 54, scope: !2987)
!3003 = !DILocation(line: 1688, column: 3, scope: !2987)
!3004 = !DILocation(line: 1692, column: 9, scope: !2940)
!3005 = !DILocation(line: 1692, column: 2, scope: !2940)
!3006 = distinct !DISubprogram(name: "init_glow_effect", scope: !3, file: !3, line: 2033, type: !2088, scopeLine: 2034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3007 = !DILocalVariable(name: "seq", arg: 1, scope: !3006, file: !3, line: 2033, type: !360)
!3008 = !DILocation(line: 2033, column: 40, scope: !3006)
!3009 = !DILocalVariable(name: "glow", scope: !3006, file: !3, line: 2035, type: !96)
!3010 = !DILocation(line: 2035, column: 12, scope: !3006)
!3011 = !DILocation(line: 2037, column: 6, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 2037, column: 6)
!3013 = !DILocation(line: 2037, column: 11, scope: !3012)
!3014 = !DILocation(line: 2037, column: 6, scope: !3006)
!3015 = !DILocation(line: 2038, column: 3, scope: !3012)
!3016 = !DILocation(line: 2038, column: 13, scope: !3012)
!3017 = !DILocation(line: 2038, column: 18, scope: !3012)
!3018 = !DILocation(line: 2040, column: 20, scope: !3006)
!3019 = !DILocation(line: 2040, column: 2, scope: !3006)
!3020 = !DILocation(line: 2040, column: 7, scope: !3006)
!3021 = !DILocation(line: 2040, column: 18, scope: !3006)
!3022 = !DILocation(line: 2042, column: 21, scope: !3006)
!3023 = !DILocation(line: 2042, column: 26, scope: !3006)
!3024 = !DILocation(line: 2042, column: 9, scope: !3006)
!3025 = !DILocation(line: 2042, column: 7, scope: !3006)
!3026 = !DILocation(line: 2043, column: 2, scope: !3006)
!3027 = !DILocation(line: 2043, column: 8, scope: !3006)
!3028 = !DILocation(line: 2043, column: 14, scope: !3006)
!3029 = !DILocation(line: 2044, column: 2, scope: !3006)
!3030 = !DILocation(line: 2044, column: 8, scope: !3006)
!3031 = !DILocation(line: 2044, column: 15, scope: !3006)
!3032 = !DILocation(line: 2045, column: 2, scope: !3006)
!3033 = !DILocation(line: 2045, column: 8, scope: !3006)
!3034 = !DILocation(line: 2045, column: 15, scope: !3006)
!3035 = !DILocation(line: 2046, column: 2, scope: !3006)
!3036 = !DILocation(line: 2046, column: 8, scope: !3006)
!3037 = !DILocation(line: 2046, column: 14, scope: !3006)
!3038 = !DILocation(line: 2047, column: 2, scope: !3006)
!3039 = !DILocation(line: 2047, column: 8, scope: !3006)
!3040 = !DILocation(line: 2047, column: 17, scope: !3006)
!3041 = !DILocation(line: 2048, column: 2, scope: !3006)
!3042 = !DILocation(line: 2048, column: 8, scope: !3006)
!3043 = !DILocation(line: 2048, column: 16, scope: !3006)
!3044 = !DILocation(line: 2049, column: 1, scope: !3006)
!3045 = distinct !DISubprogram(name: "num_inputs_glow", scope: !3, file: !3, line: 2051, type: !1672, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3046 = !DILocation(line: 2053, column: 2, scope: !3045)
!3047 = distinct !DISubprogram(name: "free_glow_effect", scope: !3, file: !3, line: 2056, type: !2088, scopeLine: 2057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3048 = !DILocalVariable(name: "seq", arg: 1, scope: !3047, file: !3, line: 2056, type: !360)
!3049 = !DILocation(line: 2056, column: 40, scope: !3047)
!3050 = !DILocation(line: 2058, column: 6, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 2058, column: 6)
!3052 = !DILocation(line: 2058, column: 11, scope: !3051)
!3053 = !DILocation(line: 2058, column: 6, scope: !3047)
!3054 = !DILocation(line: 2059, column: 3, scope: !3051)
!3055 = !DILocation(line: 2059, column: 13, scope: !3051)
!3056 = !DILocation(line: 2059, column: 18, scope: !3051)
!3057 = !DILocation(line: 2061, column: 2, scope: !3047)
!3058 = !DILocation(line: 2061, column: 7, scope: !3047)
!3059 = !DILocation(line: 2061, column: 18, scope: !3047)
!3060 = !DILocation(line: 2062, column: 1, scope: !3047)
!3061 = distinct !DISubprogram(name: "copy_glow_effect", scope: !3, file: !3, line: 2064, type: !2927, scopeLine: 2065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3062 = !DILocalVariable(name: "dst", arg: 1, scope: !3061, file: !3, line: 2064, type: !360)
!3063 = !DILocation(line: 2064, column: 40, scope: !3061)
!3064 = !DILocalVariable(name: "src", arg: 2, scope: !3061, file: !3, line: 2064, type: !360)
!3065 = !DILocation(line: 2064, column: 55, scope: !3061)
!3066 = !DILocation(line: 2066, column: 20, scope: !3061)
!3067 = !DILocation(line: 2066, column: 34, scope: !3061)
!3068 = !DILocation(line: 2066, column: 39, scope: !3061)
!3069 = !DILocation(line: 2066, column: 2, scope: !3061)
!3070 = !DILocation(line: 2066, column: 7, scope: !3061)
!3071 = !DILocation(line: 2066, column: 18, scope: !3061)
!3072 = !DILocation(line: 2067, column: 1, scope: !3061)
!3073 = distinct !DISubprogram(name: "do_glow_effect", scope: !3, file: !3, line: 2106, type: !2941, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3074 = !DILocalVariable(name: "context", arg: 1, scope: !3073, file: !3, line: 2106, type: !1759)
!3075 = !DILocation(line: 2106, column: 51, scope: !3073)
!3076 = !DILocalVariable(name: "seq", arg: 2, scope: !3073, file: !3, line: 2106, type: !360)
!3077 = !DILocation(line: 2106, column: 70, scope: !3073)
!3078 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !3073, file: !3, line: 2106, type: !77)
!3079 = !DILocation(line: 2106, column: 81, scope: !3073)
!3080 = !DILocalVariable(name: "facf0", arg: 4, scope: !3073, file: !3, line: 2106, type: !77)
!3081 = !DILocation(line: 2106, column: 101, scope: !3073)
!3082 = !DILocalVariable(name: "facf1", arg: 5, scope: !3073, file: !3, line: 2106, type: !77)
!3083 = !DILocation(line: 2106, column: 114, scope: !3073)
!3084 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !3073, file: !3, line: 2107, type: !2144)
!3085 = !DILocation(line: 2107, column: 37, scope: !3073)
!3086 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !3073, file: !3, line: 2107, type: !2144)
!3087 = !DILocation(line: 2107, column: 51, scope: !3073)
!3088 = !DILocalVariable(name: "ibuf3", arg: 8, scope: !3073, file: !3, line: 2107, type: !2144)
!3089 = !DILocation(line: 2107, column: 65, scope: !3073)
!3090 = !DILocalVariable(name: "out", scope: !3073, file: !3, line: 2109, type: !2144)
!3091 = !DILocation(line: 2109, column: 9, scope: !3073)
!3092 = !DILocation(line: 2109, column: 37, scope: !3073)
!3093 = !DILocation(line: 2109, column: 46, scope: !3073)
!3094 = !DILocation(line: 2109, column: 53, scope: !3073)
!3095 = !DILocation(line: 2109, column: 60, scope: !3073)
!3096 = !DILocation(line: 2109, column: 15, scope: !3073)
!3097 = !DILocalVariable(name: "render_size", scope: !3073, file: !3, line: 2111, type: !7)
!3098 = !DILocation(line: 2111, column: 6, scope: !3073)
!3099 = !DILocation(line: 2111, column: 26, scope: !3073)
!3100 = !DILocation(line: 2111, column: 35, scope: !3073)
!3101 = !DILocation(line: 2111, column: 24, scope: !3073)
!3102 = !DILocation(line: 2111, column: 43, scope: !3073)
!3103 = !DILocation(line: 2111, column: 52, scope: !3073)
!3104 = !DILocation(line: 2111, column: 59, scope: !3073)
!3105 = !DILocation(line: 2111, column: 61, scope: !3073)
!3106 = !DILocation(line: 2111, column: 41, scope: !3073)
!3107 = !DILocation(line: 2113, column: 6, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 2113, column: 6)
!3109 = !DILocation(line: 2113, column: 11, scope: !3108)
!3110 = !DILocation(line: 2113, column: 6, scope: !3073)
!3111 = !DILocation(line: 2114, column: 24, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 2113, column: 23)
!3113 = !DILocation(line: 2114, column: 29, scope: !3112)
!3114 = !DILocation(line: 2114, column: 42, scope: !3112)
!3115 = !DILocation(line: 2114, column: 49, scope: !3112)
!3116 = !DILocation(line: 2114, column: 56, scope: !3112)
!3117 = !DILocation(line: 2114, column: 65, scope: !3112)
!3118 = !DILocation(line: 2114, column: 72, scope: !3112)
!3119 = !DILocation(line: 2114, column: 81, scope: !3112)
!3120 = !DILocation(line: 2115, column: 24, scope: !3112)
!3121 = !DILocation(line: 2115, column: 31, scope: !3112)
!3122 = !DILocation(line: 2115, column: 43, scope: !3112)
!3123 = !DILocation(line: 2115, column: 50, scope: !3112)
!3124 = !DILocation(line: 2115, column: 62, scope: !3112)
!3125 = !DILocation(line: 2115, column: 67, scope: !3112)
!3126 = !DILocation(line: 2114, column: 3, scope: !3112)
!3127 = !DILocation(line: 2116, column: 2, scope: !3112)
!3128 = !DILocation(line: 2118, column: 23, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3108, file: !3, line: 2117, column: 7)
!3130 = !DILocation(line: 2118, column: 28, scope: !3129)
!3131 = !DILocation(line: 2118, column: 41, scope: !3129)
!3132 = !DILocation(line: 2118, column: 48, scope: !3129)
!3133 = !DILocation(line: 2118, column: 55, scope: !3129)
!3134 = !DILocation(line: 2118, column: 64, scope: !3129)
!3135 = !DILocation(line: 2118, column: 71, scope: !3129)
!3136 = !DILocation(line: 2118, column: 80, scope: !3129)
!3137 = !DILocation(line: 2119, column: 41, scope: !3129)
!3138 = !DILocation(line: 2119, column: 48, scope: !3129)
!3139 = !DILocation(line: 2119, column: 23, scope: !3129)
!3140 = !DILocation(line: 2119, column: 72, scope: !3129)
!3141 = !DILocation(line: 2119, column: 79, scope: !3129)
!3142 = !DILocation(line: 2119, column: 54, scope: !3129)
!3143 = !DILocation(line: 2119, column: 103, scope: !3129)
!3144 = !DILocation(line: 2119, column: 108, scope: !3129)
!3145 = !DILocation(line: 2119, column: 85, scope: !3129)
!3146 = !DILocation(line: 2118, column: 3, scope: !3129)
!3147 = !DILocation(line: 2122, column: 9, scope: !3073)
!3148 = !DILocation(line: 2122, column: 2, scope: !3073)
!3149 = distinct !DISubprogram(name: "init_transform_effect", scope: !3, file: !3, line: 1697, type: !2088, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3150 = !DILocalVariable(name: "seq", arg: 1, scope: !3149, file: !3, line: 1697, type: !360)
!3151 = !DILocation(line: 1697, column: 45, scope: !3149)
!3152 = !DILocalVariable(name: "transform", scope: !3149, file: !3, line: 1699, type: !106)
!3153 = !DILocation(line: 1699, column: 17, scope: !3149)
!3154 = !DILocation(line: 1701, column: 6, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1701, column: 6)
!3156 = !DILocation(line: 1701, column: 11, scope: !3155)
!3157 = !DILocation(line: 1701, column: 6, scope: !3149)
!3158 = !DILocation(line: 1702, column: 3, scope: !3155)
!3159 = !DILocation(line: 1702, column: 13, scope: !3155)
!3160 = !DILocation(line: 1702, column: 18, scope: !3155)
!3161 = !DILocation(line: 1704, column: 20, scope: !3149)
!3162 = !DILocation(line: 1704, column: 2, scope: !3149)
!3163 = !DILocation(line: 1704, column: 7, scope: !3149)
!3164 = !DILocation(line: 1704, column: 18, scope: !3149)
!3165 = !DILocation(line: 1706, column: 32, scope: !3149)
!3166 = !DILocation(line: 1706, column: 37, scope: !3149)
!3167 = !DILocation(line: 1706, column: 14, scope: !3149)
!3168 = !DILocation(line: 1706, column: 12, scope: !3149)
!3169 = !DILocation(line: 1708, column: 2, scope: !3149)
!3170 = !DILocation(line: 1708, column: 13, scope: !3149)
!3171 = !DILocation(line: 1708, column: 23, scope: !3149)
!3172 = !DILocation(line: 1709, column: 2, scope: !3149)
!3173 = !DILocation(line: 1709, column: 13, scope: !3149)
!3174 = !DILocation(line: 1709, column: 23, scope: !3149)
!3175 = !DILocation(line: 1711, column: 2, scope: !3149)
!3176 = !DILocation(line: 1711, column: 13, scope: !3149)
!3177 = !DILocation(line: 1711, column: 18, scope: !3149)
!3178 = !DILocation(line: 1712, column: 2, scope: !3149)
!3179 = !DILocation(line: 1712, column: 13, scope: !3149)
!3180 = !DILocation(line: 1712, column: 18, scope: !3149)
!3181 = !DILocation(line: 1714, column: 2, scope: !3149)
!3182 = !DILocation(line: 1714, column: 13, scope: !3149)
!3183 = !DILocation(line: 1714, column: 20, scope: !3149)
!3184 = !DILocation(line: 1716, column: 2, scope: !3149)
!3185 = !DILocation(line: 1716, column: 13, scope: !3149)
!3186 = !DILocation(line: 1716, column: 27, scope: !3149)
!3187 = !DILocation(line: 1717, column: 2, scope: !3149)
!3188 = !DILocation(line: 1717, column: 13, scope: !3149)
!3189 = !DILocation(line: 1717, column: 21, scope: !3149)
!3190 = !DILocation(line: 1718, column: 2, scope: !3149)
!3191 = !DILocation(line: 1718, column: 13, scope: !3149)
!3192 = !DILocation(line: 1718, column: 27, scope: !3149)
!3193 = !DILocation(line: 1719, column: 1, scope: !3149)
!3194 = distinct !DISubprogram(name: "num_inputs_transform", scope: !3, file: !3, line: 1721, type: !1672, scopeLine: 1722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3195 = !DILocation(line: 1723, column: 2, scope: !3194)
!3196 = distinct !DISubprogram(name: "free_transform_effect", scope: !3, file: !3, line: 1726, type: !2088, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3197 = !DILocalVariable(name: "seq", arg: 1, scope: !3196, file: !3, line: 1726, type: !360)
!3198 = !DILocation(line: 1726, column: 45, scope: !3196)
!3199 = !DILocation(line: 1728, column: 6, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 1728, column: 6)
!3201 = !DILocation(line: 1728, column: 11, scope: !3200)
!3202 = !DILocation(line: 1728, column: 6, scope: !3196)
!3203 = !DILocation(line: 1728, column: 23, scope: !3200)
!3204 = !DILocation(line: 1728, column: 33, scope: !3200)
!3205 = !DILocation(line: 1728, column: 38, scope: !3200)
!3206 = !DILocation(line: 1729, column: 2, scope: !3196)
!3207 = !DILocation(line: 1729, column: 7, scope: !3196)
!3208 = !DILocation(line: 1729, column: 18, scope: !3196)
!3209 = !DILocation(line: 1730, column: 1, scope: !3196)
!3210 = distinct !DISubprogram(name: "copy_transform_effect", scope: !3, file: !3, line: 1732, type: !2927, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3211 = !DILocalVariable(name: "dst", arg: 1, scope: !3210, file: !3, line: 1732, type: !360)
!3212 = !DILocation(line: 1732, column: 45, scope: !3210)
!3213 = !DILocalVariable(name: "src", arg: 2, scope: !3210, file: !3, line: 1732, type: !360)
!3214 = !DILocation(line: 1732, column: 60, scope: !3210)
!3215 = !DILocation(line: 1734, column: 20, scope: !3210)
!3216 = !DILocation(line: 1734, column: 34, scope: !3210)
!3217 = !DILocation(line: 1734, column: 39, scope: !3210)
!3218 = !DILocation(line: 1734, column: 2, scope: !3210)
!3219 = !DILocation(line: 1734, column: 7, scope: !3210)
!3220 = !DILocation(line: 1734, column: 18, scope: !3210)
!3221 = !DILocation(line: 1735, column: 1, scope: !3210)
!3222 = distinct !DISubprogram(name: "do_transform_effect", scope: !3, file: !3, line: 1818, type: !2941, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3223 = !DILocalVariable(name: "context", arg: 1, scope: !3222, file: !3, line: 1818, type: !1759)
!3224 = !DILocation(line: 1818, column: 56, scope: !3222)
!3225 = !DILocalVariable(name: "seq", arg: 2, scope: !3222, file: !3, line: 1818, type: !360)
!3226 = !DILocation(line: 1818, column: 75, scope: !3222)
!3227 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !3222, file: !3, line: 1818, type: !77)
!3228 = !DILocation(line: 1818, column: 86, scope: !3222)
!3229 = !DILocalVariable(name: "facf0", arg: 4, scope: !3222, file: !3, line: 1818, type: !77)
!3230 = !DILocation(line: 1818, column: 106, scope: !3222)
!3231 = !DILocalVariable(name: "UNUSED_facf1", arg: 5, scope: !3222, file: !3, line: 1819, type: !77)
!3232 = !DILocation(line: 1819, column: 41, scope: !3222)
!3233 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !3222, file: !3, line: 1819, type: !2144)
!3234 = !DILocation(line: 1819, column: 63, scope: !3222)
!3235 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !3222, file: !3, line: 1819, type: !2144)
!3236 = !DILocation(line: 1819, column: 77, scope: !3222)
!3237 = !DILocalVariable(name: "ibuf3", arg: 8, scope: !3222, file: !3, line: 1819, type: !2144)
!3238 = !DILocation(line: 1819, column: 91, scope: !3222)
!3239 = !DILocalVariable(name: "out", scope: !3222, file: !3, line: 1821, type: !2144)
!3240 = !DILocation(line: 1821, column: 9, scope: !3222)
!3241 = !DILocation(line: 1821, column: 37, scope: !3222)
!3242 = !DILocation(line: 1821, column: 46, scope: !3222)
!3243 = !DILocation(line: 1821, column: 53, scope: !3222)
!3244 = !DILocation(line: 1821, column: 60, scope: !3222)
!3245 = !DILocation(line: 1821, column: 15, scope: !3222)
!3246 = !DILocation(line: 1823, column: 15, scope: !3222)
!3247 = !DILocation(line: 1823, column: 24, scope: !3222)
!3248 = !DILocation(line: 1823, column: 31, scope: !3222)
!3249 = !DILocation(line: 1823, column: 36, scope: !3222)
!3250 = !DILocation(line: 1823, column: 43, scope: !3222)
!3251 = !DILocation(line: 1823, column: 52, scope: !3222)
!3252 = !DILocation(line: 1823, column: 59, scope: !3222)
!3253 = !DILocation(line: 1823, column: 68, scope: !3222)
!3254 = !DILocation(line: 1823, column: 75, scope: !3222)
!3255 = !DILocation(line: 1823, column: 82, scope: !3222)
!3256 = !DILocation(line: 1823, column: 2, scope: !3222)
!3257 = !DILocation(line: 1825, column: 9, scope: !3222)
!3258 = !DILocation(line: 1825, column: 2, scope: !3222)
!3259 = distinct !DISubprogram(name: "init_speed_effect", scope: !3, file: !3, line: 2366, type: !2088, scopeLine: 2367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3260 = !DILocalVariable(name: "seq", arg: 1, scope: !3259, file: !3, line: 2366, type: !360)
!3261 = !DILocation(line: 2366, column: 41, scope: !3259)
!3262 = !DILocalVariable(name: "v", scope: !3259, file: !3, line: 2368, type: !71)
!3263 = !DILocation(line: 2368, column: 20, scope: !3259)
!3264 = !DILocation(line: 2370, column: 6, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2370, column: 6)
!3266 = !DILocation(line: 2370, column: 11, scope: !3265)
!3267 = !DILocation(line: 2370, column: 6, scope: !3259)
!3268 = !DILocation(line: 2371, column: 3, scope: !3265)
!3269 = !DILocation(line: 2371, column: 13, scope: !3265)
!3270 = !DILocation(line: 2371, column: 18, scope: !3265)
!3271 = !DILocation(line: 2373, column: 20, scope: !3259)
!3272 = !DILocation(line: 2373, column: 2, scope: !3259)
!3273 = !DILocation(line: 2373, column: 7, scope: !3259)
!3274 = !DILocation(line: 2373, column: 18, scope: !3259)
!3275 = !DILocation(line: 2375, column: 26, scope: !3259)
!3276 = !DILocation(line: 2375, column: 31, scope: !3259)
!3277 = !DILocation(line: 2375, column: 6, scope: !3259)
!3278 = !DILocation(line: 2375, column: 4, scope: !3259)
!3279 = !DILocation(line: 2376, column: 2, scope: !3259)
!3280 = !DILocation(line: 2376, column: 5, scope: !3259)
!3281 = !DILocation(line: 2376, column: 17, scope: !3259)
!3282 = !DILocation(line: 2377, column: 2, scope: !3259)
!3283 = !DILocation(line: 2377, column: 5, scope: !3259)
!3284 = !DILocation(line: 2377, column: 14, scope: !3259)
!3285 = !DILocation(line: 2378, column: 2, scope: !3259)
!3286 = !DILocation(line: 2378, column: 5, scope: !3259)
!3287 = !DILocation(line: 2378, column: 11, scope: !3259)
!3288 = !DILocation(line: 2379, column: 2, scope: !3259)
!3289 = !DILocation(line: 2379, column: 5, scope: !3259)
!3290 = !DILocation(line: 2379, column: 12, scope: !3259)
!3291 = !DILocation(line: 2380, column: 1, scope: !3259)
!3292 = distinct !DISubprogram(name: "num_inputs_speed", scope: !3, file: !3, line: 2390, type: !1672, scopeLine: 2391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3293 = !DILocation(line: 2392, column: 2, scope: !3292)
!3294 = distinct !DISubprogram(name: "load_speed_effect", scope: !3, file: !3, line: 2382, type: !2088, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3295 = !DILocalVariable(name: "seq", arg: 1, scope: !3294, file: !3, line: 2382, type: !360)
!3296 = !DILocation(line: 2382, column: 41, scope: !3294)
!3297 = !DILocalVariable(name: "v", scope: !3294, file: !3, line: 2384, type: !71)
!3298 = !DILocation(line: 2384, column: 20, scope: !3294)
!3299 = !DILocation(line: 2384, column: 44, scope: !3294)
!3300 = !DILocation(line: 2384, column: 49, scope: !3294)
!3301 = !DILocation(line: 2384, column: 24, scope: !3294)
!3302 = !DILocation(line: 2386, column: 2, scope: !3294)
!3303 = !DILocation(line: 2386, column: 5, scope: !3294)
!3304 = !DILocation(line: 2386, column: 14, scope: !3294)
!3305 = !DILocation(line: 2387, column: 2, scope: !3294)
!3306 = !DILocation(line: 2387, column: 5, scope: !3294)
!3307 = !DILocation(line: 2387, column: 12, scope: !3294)
!3308 = !DILocation(line: 2388, column: 1, scope: !3294)
!3309 = distinct !DISubprogram(name: "free_speed_effect", scope: !3, file: !3, line: 2395, type: !2088, scopeLine: 2396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3310 = !DILocalVariable(name: "seq", arg: 1, scope: !3309, file: !3, line: 2395, type: !360)
!3311 = !DILocation(line: 2395, column: 41, scope: !3309)
!3312 = !DILocalVariable(name: "v", scope: !3309, file: !3, line: 2397, type: !71)
!3313 = !DILocation(line: 2397, column: 20, scope: !3309)
!3314 = !DILocation(line: 2397, column: 44, scope: !3309)
!3315 = !DILocation(line: 2397, column: 49, scope: !3309)
!3316 = !DILocation(line: 2397, column: 24, scope: !3309)
!3317 = !DILocation(line: 2398, column: 6, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 2398, column: 6)
!3319 = !DILocation(line: 2398, column: 9, scope: !3318)
!3320 = !DILocation(line: 2398, column: 6, scope: !3309)
!3321 = !DILocation(line: 2399, column: 3, scope: !3318)
!3322 = !DILocation(line: 2399, column: 13, scope: !3318)
!3323 = !DILocation(line: 2399, column: 16, scope: !3318)
!3324 = !DILocation(line: 2400, column: 6, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 2400, column: 6)
!3326 = !DILocation(line: 2400, column: 11, scope: !3325)
!3327 = !DILocation(line: 2400, column: 6, scope: !3309)
!3328 = !DILocation(line: 2401, column: 3, scope: !3325)
!3329 = !DILocation(line: 2401, column: 13, scope: !3325)
!3330 = !DILocation(line: 2401, column: 18, scope: !3325)
!3331 = !DILocation(line: 2402, column: 2, scope: !3309)
!3332 = !DILocation(line: 2402, column: 7, scope: !3309)
!3333 = !DILocation(line: 2402, column: 18, scope: !3309)
!3334 = !DILocation(line: 2403, column: 1, scope: !3309)
!3335 = distinct !DISubprogram(name: "copy_speed_effect", scope: !3, file: !3, line: 2405, type: !2927, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3336 = !DILocalVariable(name: "dst", arg: 1, scope: !3335, file: !3, line: 2405, type: !360)
!3337 = !DILocation(line: 2405, column: 41, scope: !3335)
!3338 = !DILocalVariable(name: "src", arg: 2, scope: !3335, file: !3, line: 2405, type: !360)
!3339 = !DILocation(line: 2405, column: 56, scope: !3335)
!3340 = !DILocalVariable(name: "v", scope: !3335, file: !3, line: 2407, type: !71)
!3341 = !DILocation(line: 2407, column: 20, scope: !3335)
!3342 = !DILocation(line: 2408, column: 20, scope: !3335)
!3343 = !DILocation(line: 2408, column: 34, scope: !3335)
!3344 = !DILocation(line: 2408, column: 39, scope: !3335)
!3345 = !DILocation(line: 2408, column: 2, scope: !3335)
!3346 = !DILocation(line: 2408, column: 7, scope: !3335)
!3347 = !DILocation(line: 2408, column: 18, scope: !3335)
!3348 = !DILocation(line: 2409, column: 26, scope: !3335)
!3349 = !DILocation(line: 2409, column: 31, scope: !3335)
!3350 = !DILocation(line: 2409, column: 6, scope: !3335)
!3351 = !DILocation(line: 2409, column: 4, scope: !3335)
!3352 = !DILocation(line: 2410, column: 2, scope: !3335)
!3353 = !DILocation(line: 2410, column: 5, scope: !3335)
!3354 = !DILocation(line: 2410, column: 14, scope: !3335)
!3355 = !DILocation(line: 2411, column: 2, scope: !3335)
!3356 = !DILocation(line: 2411, column: 5, scope: !3335)
!3357 = !DILocation(line: 2411, column: 12, scope: !3335)
!3358 = !DILocation(line: 2412, column: 1, scope: !3335)
!3359 = distinct !DISubprogram(name: "do_speed_effect", scope: !3, file: !3, line: 2551, type: !2941, scopeLine: 2553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3360 = !DILocalVariable(name: "context", arg: 1, scope: !3359, file: !3, line: 2551, type: !1759)
!3361 = !DILocation(line: 2551, column: 52, scope: !3359)
!3362 = !DILocalVariable(name: "UNUSED_seq", arg: 2, scope: !3359, file: !3, line: 2551, type: !360)
!3363 = !DILocation(line: 2551, column: 71, scope: !3359)
!3364 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !3359, file: !3, line: 2551, type: !77)
!3365 = !DILocation(line: 2551, column: 90, scope: !3359)
!3366 = !DILocalVariable(name: "facf0", arg: 4, scope: !3359, file: !3, line: 2552, type: !77)
!3367 = !DILocation(line: 2552, column: 37, scope: !3359)
!3368 = !DILocalVariable(name: "facf1", arg: 5, scope: !3359, file: !3, line: 2552, type: !77)
!3369 = !DILocation(line: 2552, column: 50, scope: !3359)
!3370 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !3359, file: !3, line: 2552, type: !2144)
!3371 = !DILocation(line: 2552, column: 64, scope: !3359)
!3372 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !3359, file: !3, line: 2552, type: !2144)
!3373 = !DILocation(line: 2552, column: 78, scope: !3359)
!3374 = !DILocalVariable(name: "ibuf3", arg: 8, scope: !3359, file: !3, line: 2552, type: !2144)
!3375 = !DILocation(line: 2552, column: 92, scope: !3359)
!3376 = !DILocalVariable(name: "out", scope: !3359, file: !3, line: 2554, type: !2144)
!3377 = !DILocation(line: 2554, column: 9, scope: !3359)
!3378 = !DILocation(line: 2554, column: 37, scope: !3359)
!3379 = !DILocation(line: 2554, column: 46, scope: !3359)
!3380 = !DILocation(line: 2554, column: 53, scope: !3359)
!3381 = !DILocation(line: 2554, column: 60, scope: !3359)
!3382 = !DILocation(line: 2554, column: 15, scope: !3359)
!3383 = !DILocation(line: 2556, column: 6, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 2556, column: 6)
!3385 = !DILocation(line: 2556, column: 11, scope: !3384)
!3386 = !DILocation(line: 2556, column: 6, scope: !3359)
!3387 = !DILocation(line: 2557, column: 25, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 2556, column: 23)
!3389 = !DILocation(line: 2557, column: 32, scope: !3388)
!3390 = !DILocation(line: 2557, column: 39, scope: !3388)
!3391 = !DILocation(line: 2557, column: 48, scope: !3388)
!3392 = !DILocation(line: 2557, column: 55, scope: !3388)
!3393 = !DILocation(line: 2557, column: 64, scope: !3388)
!3394 = !DILocation(line: 2558, column: 25, scope: !3388)
!3395 = !DILocation(line: 2558, column: 32, scope: !3388)
!3396 = !DILocation(line: 2558, column: 44, scope: !3388)
!3397 = !DILocation(line: 2558, column: 51, scope: !3388)
!3398 = !DILocation(line: 2558, column: 63, scope: !3388)
!3399 = !DILocation(line: 2558, column: 68, scope: !3388)
!3400 = !DILocation(line: 2557, column: 3, scope: !3388)
!3401 = !DILocation(line: 2559, column: 2, scope: !3388)
!3402 = !DILocation(line: 2561, column: 24, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 2560, column: 7)
!3404 = !DILocation(line: 2561, column: 31, scope: !3403)
!3405 = !DILocation(line: 2561, column: 38, scope: !3403)
!3406 = !DILocation(line: 2561, column: 47, scope: !3403)
!3407 = !DILocation(line: 2561, column: 54, scope: !3403)
!3408 = !DILocation(line: 2561, column: 63, scope: !3403)
!3409 = !DILocation(line: 2562, column: 42, scope: !3403)
!3410 = !DILocation(line: 2562, column: 49, scope: !3403)
!3411 = !DILocation(line: 2562, column: 24, scope: !3403)
!3412 = !DILocation(line: 2562, column: 73, scope: !3403)
!3413 = !DILocation(line: 2562, column: 80, scope: !3403)
!3414 = !DILocation(line: 2562, column: 55, scope: !3403)
!3415 = !DILocation(line: 2562, column: 104, scope: !3403)
!3416 = !DILocation(line: 2562, column: 109, scope: !3403)
!3417 = !DILocation(line: 2562, column: 86, scope: !3403)
!3418 = !DILocation(line: 2561, column: 3, scope: !3403)
!3419 = !DILocation(line: 2564, column: 9, scope: !3359)
!3420 = !DILocation(line: 2564, column: 2, scope: !3359)
!3421 = distinct !DISubprogram(name: "early_out_speed", scope: !3, file: !3, line: 2414, type: !2104, scopeLine: 2415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3422 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !3421, file: !3, line: 2414, type: !360)
!3423 = !DILocation(line: 2414, column: 38, scope: !3421)
!3424 = !DILocalVariable(name: "UNUSED_facf0", arg: 2, scope: !3421, file: !3, line: 2414, type: !77)
!3425 = !DILocation(line: 2414, column: 57, scope: !3421)
!3426 = !DILocalVariable(name: "UNUSED_facf1", arg: 3, scope: !3421, file: !3, line: 2414, type: !77)
!3427 = !DILocation(line: 2414, column: 78, scope: !3421)
!3428 = !DILocation(line: 2416, column: 2, scope: !3421)
!3429 = distinct !DISubprogram(name: "store_icu_yrange_speed", scope: !3, file: !3, line: 2419, type: !2130, scopeLine: 2420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3430 = !DILocalVariable(name: "seq", arg: 1, scope: !3429, file: !3, line: 2419, type: !360)
!3431 = !DILocation(line: 2419, column: 46, scope: !3429)
!3432 = !DILocalVariable(name: "UNUSED_adrcode", arg: 2, scope: !3429, file: !3, line: 2419, type: !94)
!3433 = !DILocation(line: 2419, column: 57, scope: !3429)
!3434 = !DILocalVariable(name: "ymin", arg: 3, scope: !3429, file: !3, line: 2419, type: !76)
!3435 = !DILocation(line: 2419, column: 81, scope: !3429)
!3436 = !DILocalVariable(name: "ymax", arg: 4, scope: !3429, file: !3, line: 2419, type: !76)
!3437 = !DILocation(line: 2419, column: 94, scope: !3429)
!3438 = !DILocalVariable(name: "v", scope: !3429, file: !3, line: 2421, type: !71)
!3439 = !DILocation(line: 2421, column: 20, scope: !3429)
!3440 = !DILocation(line: 2421, column: 44, scope: !3429)
!3441 = !DILocation(line: 2421, column: 49, scope: !3429)
!3442 = !DILocation(line: 2421, column: 24, scope: !3429)
!3443 = !DILocation(line: 2424, column: 26, scope: !3429)
!3444 = !DILocation(line: 2424, column: 2, scope: !3429)
!3445 = !DILocation(line: 2426, column: 7, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 2426, column: 6)
!3447 = !DILocation(line: 2426, column: 10, scope: !3446)
!3448 = !DILocation(line: 2426, column: 16, scope: !3446)
!3449 = !DILocation(line: 2426, column: 39, scope: !3446)
!3450 = !DILocation(line: 2426, column: 6, scope: !3429)
!3451 = !DILocation(line: 2427, column: 4, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 2426, column: 45)
!3453 = !DILocation(line: 2427, column: 9, scope: !3452)
!3454 = !DILocation(line: 2428, column: 4, scope: !3452)
!3455 = !DILocation(line: 2428, column: 9, scope: !3452)
!3456 = !DILocation(line: 2429, column: 2, scope: !3452)
!3457 = !DILocation(line: 2431, column: 7, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 2431, column: 7)
!3459 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 2430, column: 7)
!3460 = !DILocation(line: 2431, column: 10, scope: !3458)
!3461 = !DILocation(line: 2431, column: 16, scope: !3458)
!3462 = !DILocation(line: 2431, column: 7, scope: !3459)
!3463 = !DILocation(line: 2432, column: 5, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 2431, column: 44)
!3465 = !DILocation(line: 2432, column: 10, scope: !3464)
!3466 = !DILocation(line: 2433, column: 5, scope: !3464)
!3467 = !DILocation(line: 2433, column: 10, scope: !3464)
!3468 = !DILocation(line: 2434, column: 3, scope: !3464)
!3469 = !DILocation(line: 2436, column: 5, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 2435, column: 8)
!3471 = !DILocation(line: 2436, column: 10, scope: !3470)
!3472 = !DILocation(line: 2437, column: 12, scope: !3470)
!3473 = !DILocation(line: 2437, column: 17, scope: !3470)
!3474 = !DILocation(line: 2437, column: 5, scope: !3470)
!3475 = !DILocation(line: 2437, column: 10, scope: !3470)
!3476 = !DILocation(line: 2440, column: 1, scope: !3429)
!3477 = distinct !DISubprogram(name: "init_solid_color", scope: !3, file: !3, line: 2127, type: !2088, scopeLine: 2128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3478 = !DILocalVariable(name: "seq", arg: 1, scope: !3477, file: !3, line: 2127, type: !360)
!3479 = !DILocation(line: 2127, column: 40, scope: !3477)
!3480 = !DILocalVariable(name: "cv", scope: !3477, file: !3, line: 2129, type: !118)
!3481 = !DILocation(line: 2129, column: 18, scope: !3477)
!3482 = !DILocation(line: 2131, column: 6, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 2131, column: 6)
!3484 = !DILocation(line: 2131, column: 11, scope: !3483)
!3485 = !DILocation(line: 2131, column: 6, scope: !3477)
!3486 = !DILocation(line: 2132, column: 3, scope: !3483)
!3487 = !DILocation(line: 2132, column: 13, scope: !3483)
!3488 = !DILocation(line: 2132, column: 18, scope: !3483)
!3489 = !DILocation(line: 2134, column: 20, scope: !3477)
!3490 = !DILocation(line: 2134, column: 2, scope: !3477)
!3491 = !DILocation(line: 2134, column: 7, scope: !3477)
!3492 = !DILocation(line: 2134, column: 18, scope: !3477)
!3493 = !DILocation(line: 2136, column: 25, scope: !3477)
!3494 = !DILocation(line: 2136, column: 30, scope: !3477)
!3495 = !DILocation(line: 2136, column: 7, scope: !3477)
!3496 = !DILocation(line: 2136, column: 5, scope: !3477)
!3497 = !DILocation(line: 2137, column: 28, scope: !3477)
!3498 = !DILocation(line: 2137, column: 32, scope: !3477)
!3499 = !DILocation(line: 2137, column: 39, scope: !3477)
!3500 = !DILocation(line: 2137, column: 15, scope: !3477)
!3501 = !DILocation(line: 2137, column: 19, scope: !3477)
!3502 = !DILocation(line: 2137, column: 26, scope: !3477)
!3503 = !DILocation(line: 2137, column: 2, scope: !3477)
!3504 = !DILocation(line: 2137, column: 6, scope: !3477)
!3505 = !DILocation(line: 2137, column: 13, scope: !3477)
!3506 = !DILocation(line: 2138, column: 1, scope: !3477)
!3507 = distinct !DISubprogram(name: "num_inputs_color", scope: !3, file: !3, line: 2140, type: !1672, scopeLine: 2141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3508 = !DILocation(line: 2142, column: 2, scope: !3507)
!3509 = distinct !DISubprogram(name: "early_out_color", scope: !3, file: !3, line: 2158, type: !2104, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3510 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !3509, file: !3, line: 2158, type: !360)
!3511 = !DILocation(line: 2158, column: 38, scope: !3509)
!3512 = !DILocalVariable(name: "UNUSED_facf0", arg: 2, scope: !3509, file: !3, line: 2158, type: !77)
!3513 = !DILocation(line: 2158, column: 57, scope: !3509)
!3514 = !DILocalVariable(name: "UNUSED_facf1", arg: 3, scope: !3509, file: !3, line: 2158, type: !77)
!3515 = !DILocation(line: 2158, column: 78, scope: !3509)
!3516 = !DILocation(line: 2160, column: 2, scope: !3509)
!3517 = distinct !DISubprogram(name: "free_solid_color", scope: !3, file: !3, line: 2145, type: !2088, scopeLine: 2146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3518 = !DILocalVariable(name: "seq", arg: 1, scope: !3517, file: !3, line: 2145, type: !360)
!3519 = !DILocation(line: 2145, column: 40, scope: !3517)
!3520 = !DILocation(line: 2147, column: 6, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 2147, column: 6)
!3522 = !DILocation(line: 2147, column: 11, scope: !3521)
!3523 = !DILocation(line: 2147, column: 6, scope: !3517)
!3524 = !DILocation(line: 2148, column: 3, scope: !3521)
!3525 = !DILocation(line: 2148, column: 13, scope: !3521)
!3526 = !DILocation(line: 2148, column: 18, scope: !3521)
!3527 = !DILocation(line: 2150, column: 2, scope: !3517)
!3528 = !DILocation(line: 2150, column: 7, scope: !3517)
!3529 = !DILocation(line: 2150, column: 18, scope: !3517)
!3530 = !DILocation(line: 2151, column: 1, scope: !3517)
!3531 = distinct !DISubprogram(name: "copy_solid_color", scope: !3, file: !3, line: 2153, type: !2927, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3532 = !DILocalVariable(name: "dst", arg: 1, scope: !3531, file: !3, line: 2153, type: !360)
!3533 = !DILocation(line: 2153, column: 40, scope: !3531)
!3534 = !DILocalVariable(name: "src", arg: 2, scope: !3531, file: !3, line: 2153, type: !360)
!3535 = !DILocation(line: 2153, column: 55, scope: !3531)
!3536 = !DILocation(line: 2155, column: 20, scope: !3531)
!3537 = !DILocation(line: 2155, column: 34, scope: !3531)
!3538 = !DILocation(line: 2155, column: 39, scope: !3531)
!3539 = !DILocation(line: 2155, column: 2, scope: !3531)
!3540 = !DILocation(line: 2155, column: 7, scope: !3531)
!3541 = !DILocation(line: 2155, column: 18, scope: !3531)
!3542 = !DILocation(line: 2156, column: 1, scope: !3531)
!3543 = distinct !DISubprogram(name: "do_solid_color", scope: !3, file: !3, line: 2163, type: !2941, scopeLine: 2165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3544 = !DILocalVariable(name: "context", arg: 1, scope: !3543, file: !3, line: 2163, type: !1759)
!3545 = !DILocation(line: 2163, column: 51, scope: !3543)
!3546 = !DILocalVariable(name: "seq", arg: 2, scope: !3543, file: !3, line: 2163, type: !360)
!3547 = !DILocation(line: 2163, column: 70, scope: !3543)
!3548 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !3543, file: !3, line: 2163, type: !77)
!3549 = !DILocation(line: 2163, column: 81, scope: !3543)
!3550 = !DILocalVariable(name: "facf0", arg: 4, scope: !3543, file: !3, line: 2163, type: !77)
!3551 = !DILocation(line: 2163, column: 101, scope: !3543)
!3552 = !DILocalVariable(name: "facf1", arg: 5, scope: !3543, file: !3, line: 2163, type: !77)
!3553 = !DILocation(line: 2163, column: 114, scope: !3543)
!3554 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !3543, file: !3, line: 2164, type: !2144)
!3555 = !DILocation(line: 2164, column: 37, scope: !3543)
!3556 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !3543, file: !3, line: 2164, type: !2144)
!3557 = !DILocation(line: 2164, column: 51, scope: !3543)
!3558 = !DILocalVariable(name: "ibuf3", arg: 8, scope: !3543, file: !3, line: 2164, type: !2144)
!3559 = !DILocation(line: 2164, column: 65, scope: !3543)
!3560 = !DILocalVariable(name: "out", scope: !3543, file: !3, line: 2166, type: !2144)
!3561 = !DILocation(line: 2166, column: 9, scope: !3543)
!3562 = !DILocation(line: 2166, column: 37, scope: !3543)
!3563 = !DILocation(line: 2166, column: 46, scope: !3543)
!3564 = !DILocation(line: 2166, column: 53, scope: !3543)
!3565 = !DILocation(line: 2166, column: 60, scope: !3543)
!3566 = !DILocation(line: 2166, column: 15, scope: !3543)
!3567 = !DILocalVariable(name: "cv", scope: !3543, file: !3, line: 2168, type: !118)
!3568 = !DILocation(line: 2168, column: 18, scope: !3543)
!3569 = !DILocation(line: 2168, column: 41, scope: !3543)
!3570 = !DILocation(line: 2168, column: 46, scope: !3543)
!3571 = !DILocation(line: 2168, column: 23, scope: !3543)
!3572 = !DILocalVariable(name: "rect", scope: !3543, file: !3, line: 2170, type: !83)
!3573 = !DILocation(line: 2170, column: 17, scope: !3543)
!3574 = !DILocalVariable(name: "rect_float", scope: !3543, file: !3, line: 2171, type: !76)
!3575 = !DILocation(line: 2171, column: 9, scope: !3543)
!3576 = !DILocalVariable(name: "x", scope: !3543, file: !3, line: 2172, type: !7)
!3577 = !DILocation(line: 2172, column: 6, scope: !3543)
!3578 = !DILocalVariable(name: "y", scope: !3543, file: !3, line: 2173, type: !7)
!3579 = !DILocation(line: 2173, column: 6, scope: !3543)
!3580 = !DILocation(line: 2175, column: 6, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3543, file: !3, line: 2175, column: 6)
!3582 = !DILocation(line: 2175, column: 11, scope: !3581)
!3583 = !DILocation(line: 2175, column: 6, scope: !3543)
!3584 = !DILocalVariable(name: "col0", scope: !3585, file: !3, line: 2176, type: !3586)
!3585 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 2175, column: 17)
!3586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 24, elements: !124)
!3587 = !DILocation(line: 2176, column: 17, scope: !3585)
!3588 = !DILocalVariable(name: "col1", scope: !3585, file: !3, line: 2177, type: !3586)
!3589 = !DILocation(line: 2177, column: 17, scope: !3585)
!3590 = !DILocation(line: 2179, column: 13, scope: !3585)
!3591 = !DILocation(line: 2179, column: 21, scope: !3585)
!3592 = !DILocation(line: 2179, column: 25, scope: !3585)
!3593 = !DILocation(line: 2179, column: 19, scope: !3585)
!3594 = !DILocation(line: 2179, column: 32, scope: !3585)
!3595 = !DILocation(line: 2179, column: 3, scope: !3585)
!3596 = !DILocation(line: 2179, column: 11, scope: !3585)
!3597 = !DILocation(line: 2180, column: 13, scope: !3585)
!3598 = !DILocation(line: 2180, column: 21, scope: !3585)
!3599 = !DILocation(line: 2180, column: 25, scope: !3585)
!3600 = !DILocation(line: 2180, column: 19, scope: !3585)
!3601 = !DILocation(line: 2180, column: 32, scope: !3585)
!3602 = !DILocation(line: 2180, column: 3, scope: !3585)
!3603 = !DILocation(line: 2180, column: 11, scope: !3585)
!3604 = !DILocation(line: 2181, column: 13, scope: !3585)
!3605 = !DILocation(line: 2181, column: 21, scope: !3585)
!3606 = !DILocation(line: 2181, column: 25, scope: !3585)
!3607 = !DILocation(line: 2181, column: 19, scope: !3585)
!3608 = !DILocation(line: 2181, column: 32, scope: !3585)
!3609 = !DILocation(line: 2181, column: 3, scope: !3585)
!3610 = !DILocation(line: 2181, column: 11, scope: !3585)
!3611 = !DILocation(line: 2183, column: 13, scope: !3585)
!3612 = !DILocation(line: 2183, column: 21, scope: !3585)
!3613 = !DILocation(line: 2183, column: 25, scope: !3585)
!3614 = !DILocation(line: 2183, column: 19, scope: !3585)
!3615 = !DILocation(line: 2183, column: 32, scope: !3585)
!3616 = !DILocation(line: 2183, column: 3, scope: !3585)
!3617 = !DILocation(line: 2183, column: 11, scope: !3585)
!3618 = !DILocation(line: 2184, column: 13, scope: !3585)
!3619 = !DILocation(line: 2184, column: 21, scope: !3585)
!3620 = !DILocation(line: 2184, column: 25, scope: !3585)
!3621 = !DILocation(line: 2184, column: 19, scope: !3585)
!3622 = !DILocation(line: 2184, column: 32, scope: !3585)
!3623 = !DILocation(line: 2184, column: 3, scope: !3585)
!3624 = !DILocation(line: 2184, column: 11, scope: !3585)
!3625 = !DILocation(line: 2185, column: 13, scope: !3585)
!3626 = !DILocation(line: 2185, column: 21, scope: !3585)
!3627 = !DILocation(line: 2185, column: 25, scope: !3585)
!3628 = !DILocation(line: 2185, column: 19, scope: !3585)
!3629 = !DILocation(line: 2185, column: 32, scope: !3585)
!3630 = !DILocation(line: 2185, column: 3, scope: !3585)
!3631 = !DILocation(line: 2185, column: 11, scope: !3585)
!3632 = !DILocation(line: 2187, column: 27, scope: !3585)
!3633 = !DILocation(line: 2187, column: 32, scope: !3585)
!3634 = !DILocation(line: 2187, column: 10, scope: !3585)
!3635 = !DILocation(line: 2187, column: 8, scope: !3585)
!3636 = !DILocation(line: 2189, column: 10, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 2189, column: 3)
!3638 = !DILocation(line: 2189, column: 8, scope: !3637)
!3639 = !DILocation(line: 2189, column: 15, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 2189, column: 3)
!3641 = !DILocation(line: 2189, column: 19, scope: !3640)
!3642 = !DILocation(line: 2189, column: 24, scope: !3640)
!3643 = !DILocation(line: 2189, column: 17, scope: !3640)
!3644 = !DILocation(line: 2189, column: 3, scope: !3637)
!3645 = !DILocation(line: 2190, column: 11, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 2190, column: 4)
!3647 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 2189, column: 32)
!3648 = !DILocation(line: 2190, column: 9, scope: !3646)
!3649 = !DILocation(line: 2190, column: 16, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 2190, column: 4)
!3651 = !DILocation(line: 2190, column: 20, scope: !3650)
!3652 = !DILocation(line: 2190, column: 25, scope: !3650)
!3653 = !DILocation(line: 2190, column: 18, scope: !3650)
!3654 = !DILocation(line: 2190, column: 4, scope: !3646)
!3655 = !DILocation(line: 2191, column: 15, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 2190, column: 44)
!3657 = !DILocation(line: 2191, column: 5, scope: !3656)
!3658 = !DILocation(line: 2191, column: 13, scope: !3656)
!3659 = !DILocation(line: 2192, column: 15, scope: !3656)
!3660 = !DILocation(line: 2192, column: 5, scope: !3656)
!3661 = !DILocation(line: 2192, column: 13, scope: !3656)
!3662 = !DILocation(line: 2193, column: 15, scope: !3656)
!3663 = !DILocation(line: 2193, column: 5, scope: !3656)
!3664 = !DILocation(line: 2193, column: 13, scope: !3656)
!3665 = !DILocation(line: 2194, column: 5, scope: !3656)
!3666 = !DILocation(line: 2194, column: 13, scope: !3656)
!3667 = !DILocation(line: 2195, column: 4, scope: !3656)
!3668 = !DILocation(line: 2190, column: 29, scope: !3650)
!3669 = !DILocation(line: 2190, column: 38, scope: !3650)
!3670 = !DILocation(line: 2190, column: 4, scope: !3650)
!3671 = distinct !{!3671, !3654, !3672}
!3672 = !DILocation(line: 2195, column: 4, scope: !3646)
!3673 = !DILocation(line: 2196, column: 5, scope: !3647)
!3674 = !DILocation(line: 2197, column: 8, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3647, file: !3, line: 2197, column: 8)
!3676 = !DILocation(line: 2197, column: 12, scope: !3675)
!3677 = !DILocation(line: 2197, column: 17, scope: !3675)
!3678 = !DILocation(line: 2197, column: 10, scope: !3675)
!3679 = !DILocation(line: 2197, column: 8, scope: !3647)
!3680 = !DILocation(line: 2198, column: 12, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 2198, column: 5)
!3682 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 2197, column: 20)
!3683 = !DILocation(line: 2198, column: 10, scope: !3681)
!3684 = !DILocation(line: 2198, column: 17, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 2198, column: 5)
!3686 = !DILocation(line: 2198, column: 21, scope: !3685)
!3687 = !DILocation(line: 2198, column: 26, scope: !3685)
!3688 = !DILocation(line: 2198, column: 19, scope: !3685)
!3689 = !DILocation(line: 2198, column: 5, scope: !3681)
!3690 = !DILocation(line: 2199, column: 16, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 2198, column: 45)
!3692 = !DILocation(line: 2199, column: 6, scope: !3691)
!3693 = !DILocation(line: 2199, column: 14, scope: !3691)
!3694 = !DILocation(line: 2200, column: 16, scope: !3691)
!3695 = !DILocation(line: 2200, column: 6, scope: !3691)
!3696 = !DILocation(line: 2200, column: 14, scope: !3691)
!3697 = !DILocation(line: 2201, column: 16, scope: !3691)
!3698 = !DILocation(line: 2201, column: 6, scope: !3691)
!3699 = !DILocation(line: 2201, column: 14, scope: !3691)
!3700 = !DILocation(line: 2202, column: 6, scope: !3691)
!3701 = !DILocation(line: 2202, column: 14, scope: !3691)
!3702 = !DILocation(line: 2203, column: 5, scope: !3691)
!3703 = !DILocation(line: 2198, column: 30, scope: !3685)
!3704 = !DILocation(line: 2198, column: 39, scope: !3685)
!3705 = !DILocation(line: 2198, column: 5, scope: !3685)
!3706 = distinct !{!3706, !3689, !3707}
!3707 = !DILocation(line: 2203, column: 5, scope: !3681)
!3708 = !DILocation(line: 2204, column: 4, scope: !3682)
!3709 = !DILocation(line: 2205, column: 3, scope: !3647)
!3710 = !DILocation(line: 2189, column: 28, scope: !3640)
!3711 = !DILocation(line: 2189, column: 3, scope: !3640)
!3712 = distinct !{!3712, !3644, !3713}
!3713 = !DILocation(line: 2205, column: 3, scope: !3637)
!3714 = !DILocation(line: 2207, column: 2, scope: !3585)
!3715 = !DILocation(line: 2208, column: 11, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 2208, column: 11)
!3717 = !DILocation(line: 2208, column: 16, scope: !3716)
!3718 = !DILocation(line: 2208, column: 11, scope: !3581)
!3719 = !DILocalVariable(name: "col0", scope: !3720, file: !3, line: 2209, type: !123)
!3720 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 2208, column: 28)
!3721 = !DILocation(line: 2209, column: 9, scope: !3720)
!3722 = !DILocalVariable(name: "col1", scope: !3720, file: !3, line: 2210, type: !123)
!3723 = !DILocation(line: 2210, column: 9, scope: !3720)
!3724 = !DILocation(line: 2212, column: 13, scope: !3720)
!3725 = !DILocation(line: 2212, column: 21, scope: !3720)
!3726 = !DILocation(line: 2212, column: 25, scope: !3720)
!3727 = !DILocation(line: 2212, column: 19, scope: !3720)
!3728 = !DILocation(line: 2212, column: 3, scope: !3720)
!3729 = !DILocation(line: 2212, column: 11, scope: !3720)
!3730 = !DILocation(line: 2213, column: 13, scope: !3720)
!3731 = !DILocation(line: 2213, column: 21, scope: !3720)
!3732 = !DILocation(line: 2213, column: 25, scope: !3720)
!3733 = !DILocation(line: 2213, column: 19, scope: !3720)
!3734 = !DILocation(line: 2213, column: 3, scope: !3720)
!3735 = !DILocation(line: 2213, column: 11, scope: !3720)
!3736 = !DILocation(line: 2214, column: 13, scope: !3720)
!3737 = !DILocation(line: 2214, column: 21, scope: !3720)
!3738 = !DILocation(line: 2214, column: 25, scope: !3720)
!3739 = !DILocation(line: 2214, column: 19, scope: !3720)
!3740 = !DILocation(line: 2214, column: 3, scope: !3720)
!3741 = !DILocation(line: 2214, column: 11, scope: !3720)
!3742 = !DILocation(line: 2216, column: 13, scope: !3720)
!3743 = !DILocation(line: 2216, column: 21, scope: !3720)
!3744 = !DILocation(line: 2216, column: 25, scope: !3720)
!3745 = !DILocation(line: 2216, column: 19, scope: !3720)
!3746 = !DILocation(line: 2216, column: 3, scope: !3720)
!3747 = !DILocation(line: 2216, column: 11, scope: !3720)
!3748 = !DILocation(line: 2217, column: 13, scope: !3720)
!3749 = !DILocation(line: 2217, column: 21, scope: !3720)
!3750 = !DILocation(line: 2217, column: 25, scope: !3720)
!3751 = !DILocation(line: 2217, column: 19, scope: !3720)
!3752 = !DILocation(line: 2217, column: 3, scope: !3720)
!3753 = !DILocation(line: 2217, column: 11, scope: !3720)
!3754 = !DILocation(line: 2218, column: 13, scope: !3720)
!3755 = !DILocation(line: 2218, column: 21, scope: !3720)
!3756 = !DILocation(line: 2218, column: 25, scope: !3720)
!3757 = !DILocation(line: 2218, column: 19, scope: !3720)
!3758 = !DILocation(line: 2218, column: 3, scope: !3720)
!3759 = !DILocation(line: 2218, column: 11, scope: !3720)
!3760 = !DILocation(line: 2220, column: 16, scope: !3720)
!3761 = !DILocation(line: 2220, column: 21, scope: !3720)
!3762 = !DILocation(line: 2220, column: 14, scope: !3720)
!3763 = !DILocation(line: 2222, column: 10, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 2222, column: 3)
!3765 = !DILocation(line: 2222, column: 8, scope: !3764)
!3766 = !DILocation(line: 2222, column: 15, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 2222, column: 3)
!3768 = !DILocation(line: 2222, column: 19, scope: !3767)
!3769 = !DILocation(line: 2222, column: 24, scope: !3767)
!3770 = !DILocation(line: 2222, column: 17, scope: !3767)
!3771 = !DILocation(line: 2222, column: 3, scope: !3764)
!3772 = !DILocation(line: 2223, column: 11, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 2223, column: 4)
!3774 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 2222, column: 32)
!3775 = !DILocation(line: 2223, column: 9, scope: !3773)
!3776 = !DILocation(line: 2223, column: 16, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 2223, column: 4)
!3778 = !DILocation(line: 2223, column: 20, scope: !3777)
!3779 = !DILocation(line: 2223, column: 25, scope: !3777)
!3780 = !DILocation(line: 2223, column: 18, scope: !3777)
!3781 = !DILocation(line: 2223, column: 4, scope: !3773)
!3782 = !DILocation(line: 2224, column: 21, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 2223, column: 50)
!3784 = !DILocation(line: 2224, column: 5, scope: !3783)
!3785 = !DILocation(line: 2224, column: 19, scope: !3783)
!3786 = !DILocation(line: 2225, column: 21, scope: !3783)
!3787 = !DILocation(line: 2225, column: 5, scope: !3783)
!3788 = !DILocation(line: 2225, column: 19, scope: !3783)
!3789 = !DILocation(line: 2226, column: 21, scope: !3783)
!3790 = !DILocation(line: 2226, column: 5, scope: !3783)
!3791 = !DILocation(line: 2226, column: 19, scope: !3783)
!3792 = !DILocation(line: 2227, column: 5, scope: !3783)
!3793 = !DILocation(line: 2227, column: 19, scope: !3783)
!3794 = !DILocation(line: 2228, column: 4, scope: !3783)
!3795 = !DILocation(line: 2223, column: 29, scope: !3777)
!3796 = !DILocation(line: 2223, column: 44, scope: !3777)
!3797 = !DILocation(line: 2223, column: 4, scope: !3777)
!3798 = distinct !{!3798, !3781, !3799}
!3799 = !DILocation(line: 2228, column: 4, scope: !3773)
!3800 = !DILocation(line: 2229, column: 5, scope: !3774)
!3801 = !DILocation(line: 2230, column: 8, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 2230, column: 8)
!3803 = !DILocation(line: 2230, column: 12, scope: !3802)
!3804 = !DILocation(line: 2230, column: 17, scope: !3802)
!3805 = !DILocation(line: 2230, column: 10, scope: !3802)
!3806 = !DILocation(line: 2230, column: 8, scope: !3774)
!3807 = !DILocation(line: 2231, column: 12, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !3, line: 2231, column: 5)
!3809 = distinct !DILexicalBlock(scope: !3802, file: !3, line: 2230, column: 20)
!3810 = !DILocation(line: 2231, column: 10, scope: !3808)
!3811 = !DILocation(line: 2231, column: 17, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 2231, column: 5)
!3813 = !DILocation(line: 2231, column: 21, scope: !3812)
!3814 = !DILocation(line: 2231, column: 26, scope: !3812)
!3815 = !DILocation(line: 2231, column: 19, scope: !3812)
!3816 = !DILocation(line: 2231, column: 5, scope: !3808)
!3817 = !DILocation(line: 2232, column: 22, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 2231, column: 51)
!3819 = !DILocation(line: 2232, column: 6, scope: !3818)
!3820 = !DILocation(line: 2232, column: 20, scope: !3818)
!3821 = !DILocation(line: 2233, column: 22, scope: !3818)
!3822 = !DILocation(line: 2233, column: 6, scope: !3818)
!3823 = !DILocation(line: 2233, column: 20, scope: !3818)
!3824 = !DILocation(line: 2234, column: 22, scope: !3818)
!3825 = !DILocation(line: 2234, column: 6, scope: !3818)
!3826 = !DILocation(line: 2234, column: 20, scope: !3818)
!3827 = !DILocation(line: 2235, column: 6, scope: !3818)
!3828 = !DILocation(line: 2235, column: 20, scope: !3818)
!3829 = !DILocation(line: 2236, column: 5, scope: !3818)
!3830 = !DILocation(line: 2231, column: 30, scope: !3812)
!3831 = !DILocation(line: 2231, column: 45, scope: !3812)
!3832 = !DILocation(line: 2231, column: 5, scope: !3812)
!3833 = distinct !{!3833, !3816, !3834}
!3834 = !DILocation(line: 2236, column: 5, scope: !3808)
!3835 = !DILocation(line: 2237, column: 4, scope: !3809)
!3836 = !DILocation(line: 2238, column: 3, scope: !3774)
!3837 = !DILocation(line: 2222, column: 28, scope: !3767)
!3838 = !DILocation(line: 2222, column: 3, scope: !3767)
!3839 = distinct !{!3839, !3771, !3840}
!3840 = !DILocation(line: 2238, column: 3, scope: !3764)
!3841 = !DILocation(line: 2239, column: 2, scope: !3720)
!3842 = !DILocation(line: 2240, column: 9, scope: !3543)
!3843 = !DILocation(line: 2240, column: 2, scope: !3543)
!3844 = distinct !DISubprogram(name: "num_inputs_multicam", scope: !3, file: !3, line: 2246, type: !1672, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3845 = !DILocation(line: 2248, column: 2, scope: !3844)
!3846 = distinct !DISubprogram(name: "early_out_multicam", scope: !3, file: !3, line: 2251, type: !2104, scopeLine: 2252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3847 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !3846, file: !3, line: 2251, type: !360)
!3848 = !DILocation(line: 2251, column: 41, scope: !3846)
!3849 = !DILocalVariable(name: "UNUSED_facf0", arg: 2, scope: !3846, file: !3, line: 2251, type: !77)
!3850 = !DILocation(line: 2251, column: 60, scope: !3846)
!3851 = !DILocalVariable(name: "UNUSED_facf1", arg: 3, scope: !3846, file: !3, line: 2251, type: !77)
!3852 = !DILocation(line: 2251, column: 81, scope: !3846)
!3853 = !DILocation(line: 2253, column: 2, scope: !3846)
!3854 = distinct !DISubprogram(name: "do_multicam", scope: !3, file: !3, line: 2256, type: !2941, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3855 = !DILocalVariable(name: "context", arg: 1, scope: !3854, file: !3, line: 2256, type: !1759)
!3856 = !DILocation(line: 2256, column: 48, scope: !3854)
!3857 = !DILocalVariable(name: "seq", arg: 2, scope: !3854, file: !3, line: 2256, type: !360)
!3858 = !DILocation(line: 2256, column: 67, scope: !3854)
!3859 = !DILocalVariable(name: "cfra", arg: 3, scope: !3854, file: !3, line: 2256, type: !77)
!3860 = !DILocation(line: 2256, column: 78, scope: !3854)
!3861 = !DILocalVariable(name: "UNUSED_facf0", arg: 4, scope: !3854, file: !3, line: 2256, type: !77)
!3862 = !DILocation(line: 2256, column: 90, scope: !3854)
!3863 = !DILocalVariable(name: "UNUSED_facf1", arg: 5, scope: !3854, file: !3, line: 2256, type: !77)
!3864 = !DILocation(line: 2256, column: 111, scope: !3854)
!3865 = !DILocalVariable(name: "UNUSED_ibuf1", arg: 6, scope: !3854, file: !3, line: 2257, type: !2144)
!3866 = !DILocation(line: 2257, column: 34, scope: !3854)
!3867 = !DILocalVariable(name: "UNUSED_ibuf2", arg: 7, scope: !3854, file: !3, line: 2257, type: !2144)
!3868 = !DILocation(line: 2257, column: 56, scope: !3854)
!3869 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !3854, file: !3, line: 2257, type: !2144)
!3870 = !DILocation(line: 2257, column: 78, scope: !3854)
!3871 = !DILocalVariable(name: "i", scope: !3854, file: !3, line: 2259, type: !2144)
!3872 = !DILocation(line: 2259, column: 9, scope: !3854)
!3873 = !DILocalVariable(name: "out", scope: !3854, file: !3, line: 2260, type: !2144)
!3874 = !DILocation(line: 2260, column: 9, scope: !3854)
!3875 = !DILocalVariable(name: "ed", scope: !3854, file: !3, line: 2261, type: !3876)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DIDerivedType(tag: DW_TAG_typedef, name: "Editing", file: !6, line: 213, baseType: !353)
!3878 = !DILocation(line: 2261, column: 11, scope: !3854)
!3879 = !DILocalVariable(name: "seqbasep", scope: !3854, file: !3, line: 2262, type: !356)
!3880 = !DILocation(line: 2262, column: 12, scope: !3854)
!3881 = !DILocation(line: 2264, column: 6, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 2264, column: 6)
!3883 = !DILocation(line: 2264, column: 11, scope: !3882)
!3884 = !DILocation(line: 2264, column: 27, scope: !3882)
!3885 = !DILocation(line: 2264, column: 32, scope: !3882)
!3886 = !DILocation(line: 2264, column: 35, scope: !3882)
!3887 = !DILocation(line: 2264, column: 40, scope: !3882)
!3888 = !DILocation(line: 2264, column: 59, scope: !3882)
!3889 = !DILocation(line: 2264, column: 64, scope: !3882)
!3890 = !DILocation(line: 2264, column: 56, scope: !3882)
!3891 = !DILocation(line: 2264, column: 6, scope: !3854)
!3892 = !DILocation(line: 2265, column: 3, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 2264, column: 73)
!3894 = !DILocation(line: 2268, column: 7, scope: !3854)
!3895 = !DILocation(line: 2268, column: 16, scope: !3854)
!3896 = !DILocation(line: 2268, column: 23, scope: !3854)
!3897 = !DILocation(line: 2268, column: 5, scope: !3854)
!3898 = !DILocation(line: 2269, column: 7, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 2269, column: 6)
!3900 = !DILocation(line: 2269, column: 6, scope: !3854)
!3901 = !DILocation(line: 2270, column: 3, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 2269, column: 11)
!3903 = !DILocation(line: 2272, column: 35, scope: !3854)
!3904 = !DILocation(line: 2272, column: 39, scope: !3854)
!3905 = !DILocation(line: 2272, column: 48, scope: !3854)
!3906 = !DILocation(line: 2272, column: 13, scope: !3854)
!3907 = !DILocation(line: 2272, column: 11, scope: !3854)
!3908 = !DILocation(line: 2273, column: 7, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 2273, column: 6)
!3910 = !DILocation(line: 2273, column: 6, scope: !3854)
!3911 = !DILocation(line: 2274, column: 3, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3909, file: !3, line: 2273, column: 17)
!3913 = !DILocation(line: 2277, column: 38, scope: !3854)
!3914 = !DILocation(line: 2277, column: 47, scope: !3854)
!3915 = !DILocation(line: 2277, column: 53, scope: !3854)
!3916 = !DILocation(line: 2277, column: 58, scope: !3854)
!3917 = !DILocation(line: 2277, column: 75, scope: !3854)
!3918 = !DILocation(line: 2277, column: 6, scope: !3854)
!3919 = !DILocation(line: 2277, column: 4, scope: !3854)
!3920 = !DILocation(line: 2278, column: 7, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 2278, column: 6)
!3922 = !DILocation(line: 2278, column: 6, scope: !3854)
!3923 = !DILocation(line: 2279, column: 3, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3921, file: !3, line: 2278, column: 10)
!3925 = !DILocation(line: 2282, column: 45, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 2282, column: 6)
!3927 = !DILocation(line: 2282, column: 54, scope: !3926)
!3928 = !DILocation(line: 2282, column: 59, scope: !3926)
!3929 = !DILocation(line: 2282, column: 6, scope: !3926)
!3930 = !DILocation(line: 2282, column: 6, scope: !3854)
!3931 = !DILocation(line: 2283, column: 22, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 2282, column: 66)
!3933 = !DILocation(line: 2283, column: 9, scope: !3932)
!3934 = !DILocation(line: 2283, column: 7, scope: !3932)
!3935 = !DILocation(line: 2284, column: 17, scope: !3932)
!3936 = !DILocation(line: 2284, column: 3, scope: !3932)
!3937 = !DILocation(line: 2285, column: 2, scope: !3932)
!3938 = !DILocation(line: 2287, column: 9, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 2286, column: 7)
!3940 = !DILocation(line: 2287, column: 7, scope: !3939)
!3941 = !DILocation(line: 2290, column: 9, scope: !3854)
!3942 = !DILocation(line: 2290, column: 2, scope: !3854)
!3943 = !DILocation(line: 2291, column: 1, scope: !3854)
!3944 = distinct !DISubprogram(name: "num_inputs_adjustment", scope: !3, file: !3, line: 2296, type: !1672, scopeLine: 2297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3945 = !DILocation(line: 2298, column: 2, scope: !3944)
!3946 = distinct !DISubprogram(name: "early_out_adjustment", scope: !3, file: !3, line: 2301, type: !2104, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3947 = !DILocalVariable(name: "UNUSED_seq", arg: 1, scope: !3946, file: !3, line: 2301, type: !360)
!3948 = !DILocation(line: 2301, column: 43, scope: !3946)
!3949 = !DILocalVariable(name: "UNUSED_facf0", arg: 2, scope: !3946, file: !3, line: 2301, type: !77)
!3950 = !DILocation(line: 2301, column: 62, scope: !3946)
!3951 = !DILocalVariable(name: "UNUSED_facf1", arg: 3, scope: !3946, file: !3, line: 2301, type: !77)
!3952 = !DILocation(line: 2301, column: 83, scope: !3946)
!3953 = !DILocation(line: 2303, column: 2, scope: !3946)
!3954 = distinct !DISubprogram(name: "do_adjustment", scope: !3, file: !3, line: 2338, type: !2941, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!3955 = !DILocalVariable(name: "context", arg: 1, scope: !3954, file: !3, line: 2338, type: !1759)
!3956 = !DILocation(line: 2338, column: 50, scope: !3954)
!3957 = !DILocalVariable(name: "seq", arg: 2, scope: !3954, file: !3, line: 2338, type: !360)
!3958 = !DILocation(line: 2338, column: 69, scope: !3954)
!3959 = !DILocalVariable(name: "cfra", arg: 3, scope: !3954, file: !3, line: 2338, type: !77)
!3960 = !DILocation(line: 2338, column: 80, scope: !3954)
!3961 = !DILocalVariable(name: "UNUSED_facf0", arg: 4, scope: !3954, file: !3, line: 2338, type: !77)
!3962 = !DILocation(line: 2338, column: 92, scope: !3954)
!3963 = !DILocalVariable(name: "UNUSED_facf1", arg: 5, scope: !3954, file: !3, line: 2338, type: !77)
!3964 = !DILocation(line: 2338, column: 113, scope: !3954)
!3965 = !DILocalVariable(name: "UNUSED_ibuf1", arg: 6, scope: !3954, file: !3, line: 2339, type: !2144)
!3966 = !DILocation(line: 2339, column: 36, scope: !3954)
!3967 = !DILocalVariable(name: "UNUSED_ibuf2", arg: 7, scope: !3954, file: !3, line: 2339, type: !2144)
!3968 = !DILocation(line: 2339, column: 58, scope: !3954)
!3969 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !3954, file: !3, line: 2339, type: !2144)
!3970 = !DILocation(line: 2339, column: 80, scope: !3954)
!3971 = !DILocalVariable(name: "i", scope: !3954, file: !3, line: 2341, type: !2144)
!3972 = !DILocation(line: 2341, column: 9, scope: !3954)
!3973 = !DILocalVariable(name: "out", scope: !3954, file: !3, line: 2342, type: !2144)
!3974 = !DILocation(line: 2342, column: 9, scope: !3954)
!3975 = !DILocalVariable(name: "ed", scope: !3954, file: !3, line: 2343, type: !3876)
!3976 = !DILocation(line: 2343, column: 11, scope: !3954)
!3977 = !DILocation(line: 2345, column: 7, scope: !3954)
!3978 = !DILocation(line: 2345, column: 16, scope: !3954)
!3979 = !DILocation(line: 2345, column: 23, scope: !3954)
!3980 = !DILocation(line: 2345, column: 5, scope: !3954)
!3981 = !DILocation(line: 2347, column: 7, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 2347, column: 6)
!3983 = !DILocation(line: 2347, column: 6, scope: !3954)
!3984 = !DILocation(line: 2348, column: 3, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 2347, column: 11)
!3986 = !DILocation(line: 2351, column: 25, scope: !3954)
!3987 = !DILocation(line: 2351, column: 34, scope: !3954)
!3988 = !DILocation(line: 2351, column: 39, scope: !3954)
!3989 = !DILocation(line: 2351, column: 6, scope: !3954)
!3990 = !DILocation(line: 2351, column: 4, scope: !3954)
!3991 = !DILocation(line: 2353, column: 45, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 2353, column: 6)
!3993 = !DILocation(line: 2353, column: 54, scope: !3992)
!3994 = !DILocation(line: 2353, column: 59, scope: !3992)
!3995 = !DILocation(line: 2353, column: 6, scope: !3992)
!3996 = !DILocation(line: 2353, column: 6, scope: !3954)
!3997 = !DILocation(line: 2354, column: 22, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 2353, column: 66)
!3999 = !DILocation(line: 2354, column: 9, scope: !3998)
!4000 = !DILocation(line: 2354, column: 7, scope: !3998)
!4001 = !DILocation(line: 2355, column: 17, scope: !3998)
!4002 = !DILocation(line: 2355, column: 3, scope: !3998)
!4003 = !DILocation(line: 2356, column: 2, scope: !3998)
!4004 = !DILocation(line: 2358, column: 9, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 2357, column: 7)
!4006 = !DILocation(line: 2358, column: 7, scope: !4005)
!4007 = !DILocation(line: 2361, column: 9, scope: !3954)
!4008 = !DILocation(line: 2361, column: 2, scope: !3954)
!4009 = !DILocation(line: 2362, column: 1, scope: !3954)
!4010 = distinct !DISubprogram(name: "init_gaussian_blur_effect", scope: !3, file: !3, line: 2603, type: !2088, scopeLine: 2604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4011 = !DILocalVariable(name: "seq", arg: 1, scope: !4010, file: !3, line: 2603, type: !360)
!4012 = !DILocation(line: 2603, column: 49, scope: !4010)
!4013 = !DILocation(line: 2605, column: 6, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 2605, column: 6)
!4015 = !DILocation(line: 2605, column: 11, scope: !4014)
!4016 = !DILocation(line: 2605, column: 6, scope: !4010)
!4017 = !DILocation(line: 2606, column: 3, scope: !4014)
!4018 = !DILocation(line: 2606, column: 13, scope: !4014)
!4019 = !DILocation(line: 2606, column: 18, scope: !4014)
!4020 = !DILocation(line: 2608, column: 20, scope: !4010)
!4021 = !DILocation(line: 2608, column: 2, scope: !4010)
!4022 = !DILocation(line: 2608, column: 7, scope: !4010)
!4023 = !DILocation(line: 2608, column: 18, scope: !4010)
!4024 = !DILocation(line: 2609, column: 1, scope: !4010)
!4025 = distinct !DISubprogram(name: "num_inputs_gaussian_blur", scope: !3, file: !3, line: 2611, type: !1672, scopeLine: 2612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4026 = !DILocation(line: 2613, column: 2, scope: !4025)
!4027 = distinct !DISubprogram(name: "free_gaussian_blur_effect", scope: !3, file: !3, line: 2616, type: !2088, scopeLine: 2617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4028 = !DILocalVariable(name: "seq", arg: 1, scope: !4027, file: !3, line: 2616, type: !360)
!4029 = !DILocation(line: 2616, column: 49, scope: !4027)
!4030 = !DILocation(line: 2618, column: 6, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 2618, column: 6)
!4032 = !DILocation(line: 2618, column: 11, scope: !4031)
!4033 = !DILocation(line: 2618, column: 6, scope: !4027)
!4034 = !DILocation(line: 2619, column: 3, scope: !4031)
!4035 = !DILocation(line: 2619, column: 13, scope: !4031)
!4036 = !DILocation(line: 2619, column: 18, scope: !4031)
!4037 = !DILocation(line: 2621, column: 2, scope: !4027)
!4038 = !DILocation(line: 2621, column: 7, scope: !4027)
!4039 = !DILocation(line: 2621, column: 18, scope: !4027)
!4040 = !DILocation(line: 2622, column: 1, scope: !4027)
!4041 = distinct !DISubprogram(name: "copy_gaussian_blur_effect", scope: !3, file: !3, line: 2624, type: !2927, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4042 = !DILocalVariable(name: "dst", arg: 1, scope: !4041, file: !3, line: 2624, type: !360)
!4043 = !DILocation(line: 2624, column: 49, scope: !4041)
!4044 = !DILocalVariable(name: "src", arg: 2, scope: !4041, file: !3, line: 2624, type: !360)
!4045 = !DILocation(line: 2624, column: 64, scope: !4041)
!4046 = !DILocation(line: 2626, column: 20, scope: !4041)
!4047 = !DILocation(line: 2626, column: 34, scope: !4041)
!4048 = !DILocation(line: 2626, column: 39, scope: !4041)
!4049 = !DILocation(line: 2626, column: 2, scope: !4041)
!4050 = !DILocation(line: 2626, column: 7, scope: !4041)
!4051 = !DILocation(line: 2626, column: 18, scope: !4041)
!4052 = !DILocation(line: 2627, column: 1, scope: !4041)
!4053 = distinct !DISubprogram(name: "early_out_gaussian_blur", scope: !3, file: !3, line: 2629, type: !2104, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4054 = !DILocalVariable(name: "seq", arg: 1, scope: !4053, file: !3, line: 2629, type: !360)
!4055 = !DILocation(line: 2629, column: 46, scope: !4053)
!4056 = !DILocalVariable(name: "UNUSED_facf0", arg: 2, scope: !4053, file: !3, line: 2629, type: !77)
!4057 = !DILocation(line: 2629, column: 57, scope: !4053)
!4058 = !DILocalVariable(name: "UNUSED_facf1", arg: 3, scope: !4053, file: !3, line: 2629, type: !77)
!4059 = !DILocation(line: 2629, column: 78, scope: !4053)
!4060 = !DILocalVariable(name: "data", scope: !4053, file: !3, line: 2631, type: !4061)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DIDerivedType(tag: DW_TAG_typedef, name: "GaussianBlurVars", file: !6, line: 257, baseType: !4063)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GaussianBlurVars", file: !6, line: 254, size: 64, elements: !4064)
!4064 = !{!4065, !4066}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "size_x", scope: !4063, file: !6, line: 255, baseType: !77, size: 32)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "size_y", scope: !4063, file: !6, line: 256, baseType: !77, size: 32, offset: 32)
!4067 = !DILocation(line: 2631, column: 20, scope: !4053)
!4068 = !DILocation(line: 2631, column: 27, scope: !4053)
!4069 = !DILocation(line: 2631, column: 32, scope: !4053)
!4070 = !DILocation(line: 2632, column: 6, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 2632, column: 6)
!4072 = !DILocation(line: 2632, column: 12, scope: !4071)
!4073 = !DILocation(line: 2632, column: 19, scope: !4071)
!4074 = !DILocation(line: 2632, column: 27, scope: !4071)
!4075 = !DILocation(line: 2632, column: 30, scope: !4071)
!4076 = !DILocation(line: 2632, column: 36, scope: !4071)
!4077 = !DILocation(line: 2632, column: 43, scope: !4071)
!4078 = !DILocation(line: 2632, column: 6, scope: !4053)
!4079 = !DILocation(line: 2633, column: 3, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 2632, column: 49)
!4081 = !DILocation(line: 2635, column: 2, scope: !4053)
!4082 = !DILocation(line: 2636, column: 1, scope: !4053)
!4083 = distinct !DISubprogram(name: "do_gaussian_blur_effect", scope: !3, file: !3, line: 2824, type: !2164, scopeLine: 2835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4084 = !DILocalVariable(name: "context", arg: 1, scope: !4083, file: !3, line: 2824, type: !1759)
!4085 = !DILocation(line: 2824, column: 58, scope: !4083)
!4086 = !DILocalVariable(name: "seq", arg: 2, scope: !4083, file: !3, line: 2825, type: !360)
!4087 = !DILocation(line: 2825, column: 47, scope: !4083)
!4088 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !4083, file: !3, line: 2826, type: !77)
!4089 = !DILocation(line: 2826, column: 43, scope: !4083)
!4090 = !DILocalVariable(name: "UNUSED_facf0", arg: 4, scope: !4083, file: !3, line: 2827, type: !77)
!4091 = !DILocation(line: 2827, column: 43, scope: !4083)
!4092 = !DILocalVariable(name: "UNUSED_facf1", arg: 5, scope: !4083, file: !3, line: 2828, type: !77)
!4093 = !DILocation(line: 2828, column: 43, scope: !4083)
!4094 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !4083, file: !3, line: 2829, type: !2144)
!4095 = !DILocation(line: 2829, column: 44, scope: !4083)
!4096 = !DILocalVariable(name: "ibuf2", arg: 7, scope: !4083, file: !3, line: 2830, type: !2144)
!4097 = !DILocation(line: 2830, column: 44, scope: !4083)
!4098 = !DILocalVariable(name: "UNUSED_ibuf3", arg: 8, scope: !4083, file: !3, line: 2831, type: !2144)
!4099 = !DILocation(line: 2831, column: 44, scope: !4083)
!4100 = !DILocalVariable(name: "start_line", arg: 9, scope: !4083, file: !3, line: 2832, type: !7)
!4101 = !DILocation(line: 2832, column: 41, scope: !4083)
!4102 = !DILocalVariable(name: "total_lines", arg: 10, scope: !4083, file: !3, line: 2833, type: !7)
!4103 = !DILocation(line: 2833, column: 41, scope: !4083)
!4104 = !DILocalVariable(name: "out", arg: 11, scope: !4083, file: !3, line: 2834, type: !2144)
!4105 = !DILocation(line: 2834, column: 44, scope: !4083)
!4106 = !DILocation(line: 2836, column: 6, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 2836, column: 6)
!4108 = !DILocation(line: 2836, column: 11, scope: !4107)
!4109 = !DILocation(line: 2836, column: 6, scope: !4083)
!4110 = !DILocalVariable(name: "rect1", scope: !4111, file: !3, line: 2837, type: !76)
!4111 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 2836, column: 23)
!4112 = !DILocation(line: 2837, column: 10, scope: !4111)
!4113 = !DILocalVariable(name: "rect2", scope: !4111, file: !3, line: 2837, type: !76)
!4114 = !DILocation(line: 2837, column: 25, scope: !4111)
!4115 = !DILocalVariable(name: "rect_out", scope: !4111, file: !3, line: 2837, type: !76)
!4116 = !DILocation(line: 2837, column: 40, scope: !4111)
!4117 = !DILocation(line: 2839, column: 27, scope: !4111)
!4118 = !DILocation(line: 2840, column: 27, scope: !4111)
!4119 = !DILocation(line: 2840, column: 34, scope: !4111)
!4120 = !DILocation(line: 2842, column: 27, scope: !4111)
!4121 = !DILocation(line: 2843, column: 27, scope: !4111)
!4122 = !DILocation(line: 2839, column: 3, scope: !4111)
!4123 = !DILocation(line: 2849, column: 33, scope: !4111)
!4124 = !DILocation(line: 2850, column: 33, scope: !4111)
!4125 = !DILocation(line: 2851, column: 33, scope: !4111)
!4126 = !DILocation(line: 2851, column: 42, scope: !4111)
!4127 = !DILocation(line: 2852, column: 33, scope: !4111)
!4128 = !DILocation(line: 2853, column: 33, scope: !4111)
!4129 = !DILocation(line: 2853, column: 42, scope: !4111)
!4130 = !DILocation(line: 2854, column: 33, scope: !4111)
!4131 = !DILocation(line: 2854, column: 42, scope: !4111)
!4132 = !DILocation(line: 2855, column: 33, scope: !4111)
!4133 = !DILocation(line: 2855, column: 40, scope: !4111)
!4134 = !DILocation(line: 2856, column: 33, scope: !4111)
!4135 = !DILocation(line: 2849, column: 3, scope: !4111)
!4136 = !DILocation(line: 2857, column: 2, scope: !4111)
!4137 = !DILocalVariable(name: "rect1", scope: !4138, file: !3, line: 2859, type: !83)
!4138 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 2858, column: 7)
!4139 = !DILocation(line: 2859, column: 18, scope: !4138)
!4140 = !DILocalVariable(name: "rect2", scope: !4138, file: !3, line: 2859, type: !83)
!4141 = !DILocation(line: 2859, column: 33, scope: !4138)
!4142 = !DILocalVariable(name: "rect_out", scope: !4138, file: !3, line: 2859, type: !83)
!4143 = !DILocation(line: 2859, column: 48, scope: !4138)
!4144 = !DILocation(line: 2861, column: 26, scope: !4138)
!4145 = !DILocation(line: 2862, column: 26, scope: !4138)
!4146 = !DILocation(line: 2862, column: 33, scope: !4138)
!4147 = !DILocation(line: 2864, column: 26, scope: !4138)
!4148 = !DILocation(line: 2865, column: 26, scope: !4138)
!4149 = !DILocation(line: 2861, column: 3, scope: !4138)
!4150 = !DILocation(line: 2871, column: 32, scope: !4138)
!4151 = !DILocation(line: 2872, column: 32, scope: !4138)
!4152 = !DILocation(line: 2873, column: 32, scope: !4138)
!4153 = !DILocation(line: 2873, column: 41, scope: !4138)
!4154 = !DILocation(line: 2874, column: 32, scope: !4138)
!4155 = !DILocation(line: 2875, column: 32, scope: !4138)
!4156 = !DILocation(line: 2875, column: 41, scope: !4138)
!4157 = !DILocation(line: 2876, column: 32, scope: !4138)
!4158 = !DILocation(line: 2876, column: 41, scope: !4138)
!4159 = !DILocation(line: 2877, column: 50, scope: !4138)
!4160 = !DILocation(line: 2877, column: 57, scope: !4138)
!4161 = !DILocation(line: 2877, column: 32, scope: !4138)
!4162 = !DILocation(line: 2878, column: 32, scope: !4138)
!4163 = !DILocation(line: 2871, column: 3, scope: !4138)
!4164 = !DILocation(line: 2880, column: 1, scope: !4083)
!4165 = distinct !DISubprogram(name: "prepare_effect_imbufs", scope: !3, file: !3, line: 101, type: !4166, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{!2144, !1759, !2144, !2144, !2144}
!4168 = !DILocalVariable(name: "context", arg: 1, scope: !4165, file: !3, line: 101, type: !1759)
!4169 = !DILocation(line: 101, column: 58, scope: !4165)
!4170 = !DILocalVariable(name: "ibuf1", arg: 2, scope: !4165, file: !3, line: 101, type: !2144)
!4171 = !DILocation(line: 101, column: 74, scope: !4165)
!4172 = !DILocalVariable(name: "ibuf2", arg: 3, scope: !4165, file: !3, line: 101, type: !2144)
!4173 = !DILocation(line: 101, column: 88, scope: !4165)
!4174 = !DILocalVariable(name: "ibuf3", arg: 4, scope: !4165, file: !3, line: 101, type: !2144)
!4175 = !DILocation(line: 101, column: 102, scope: !4165)
!4176 = !DILocalVariable(name: "out", scope: !4165, file: !3, line: 103, type: !2144)
!4177 = !DILocation(line: 103, column: 9, scope: !4165)
!4178 = !DILocalVariable(name: "scene", scope: !4165, file: !3, line: 104, type: !170)
!4179 = !DILocation(line: 104, column: 9, scope: !4165)
!4180 = !DILocation(line: 104, column: 17, scope: !4165)
!4181 = !DILocation(line: 104, column: 26, scope: !4165)
!4182 = !DILocalVariable(name: "x", scope: !4165, file: !3, line: 105, type: !7)
!4183 = !DILocation(line: 105, column: 6, scope: !4165)
!4184 = !DILocation(line: 105, column: 10, scope: !4165)
!4185 = !DILocation(line: 105, column: 19, scope: !4165)
!4186 = !DILocalVariable(name: "y", scope: !4165, file: !3, line: 106, type: !7)
!4187 = !DILocation(line: 106, column: 6, scope: !4165)
!4188 = !DILocation(line: 106, column: 10, scope: !4165)
!4189 = !DILocation(line: 106, column: 19, scope: !4165)
!4190 = !DILocation(line: 108, column: 7, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 108, column: 6)
!4192 = !DILocation(line: 108, column: 13, scope: !4191)
!4193 = !DILocation(line: 108, column: 17, scope: !4191)
!4194 = !DILocation(line: 108, column: 23, scope: !4191)
!4195 = !DILocation(line: 108, column: 27, scope: !4191)
!4196 = !DILocation(line: 108, column: 6, scope: !4165)
!4197 = !DILocation(line: 110, column: 24, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 108, column: 34)
!4199 = !DILocation(line: 110, column: 27, scope: !4198)
!4200 = !DILocation(line: 110, column: 9, scope: !4198)
!4201 = !DILocation(line: 110, column: 7, scope: !4198)
!4202 = !DILocation(line: 111, column: 2, scope: !4198)
!4203 = !DILocation(line: 112, column: 12, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 112, column: 11)
!4205 = !DILocation(line: 112, column: 18, scope: !4204)
!4206 = !DILocation(line: 112, column: 21, scope: !4204)
!4207 = !DILocation(line: 112, column: 28, scope: !4204)
!4208 = !DILocation(line: 112, column: 40, scope: !4204)
!4209 = !DILocation(line: 113, column: 12, scope: !4204)
!4210 = !DILocation(line: 113, column: 18, scope: !4204)
!4211 = !DILocation(line: 113, column: 21, scope: !4204)
!4212 = !DILocation(line: 113, column: 28, scope: !4204)
!4213 = !DILocation(line: 113, column: 40, scope: !4204)
!4214 = !DILocation(line: 114, column: 12, scope: !4204)
!4215 = !DILocation(line: 114, column: 18, scope: !4204)
!4216 = !DILocation(line: 114, column: 21, scope: !4204)
!4217 = !DILocation(line: 114, column: 28, scope: !4204)
!4218 = !DILocation(line: 112, column: 11, scope: !4191)
!4219 = !DILocation(line: 118, column: 24, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 115, column: 2)
!4221 = !DILocation(line: 118, column: 27, scope: !4220)
!4222 = !DILocation(line: 118, column: 9, scope: !4220)
!4223 = !DILocation(line: 118, column: 7, scope: !4220)
!4224 = !DILocation(line: 119, column: 2, scope: !4220)
!4225 = !DILocation(line: 121, column: 24, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 120, column: 7)
!4227 = !DILocation(line: 121, column: 27, scope: !4226)
!4228 = !DILocation(line: 121, column: 9, scope: !4226)
!4229 = !DILocation(line: 121, column: 7, scope: !4226)
!4230 = !DILocation(line: 124, column: 6, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 124, column: 6)
!4232 = !DILocation(line: 124, column: 12, scope: !4231)
!4233 = !DILocation(line: 124, column: 16, scope: !4231)
!4234 = !DILocation(line: 124, column: 23, scope: !4231)
!4235 = !DILocation(line: 124, column: 34, scope: !4231)
!4236 = !DILocation(line: 124, column: 37, scope: !4231)
!4237 = !DILocation(line: 124, column: 42, scope: !4231)
!4238 = !DILocation(line: 124, column: 6, scope: !4165)
!4239 = !DILocation(line: 125, column: 42, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 124, column: 54)
!4241 = !DILocation(line: 125, column: 49, scope: !4240)
!4242 = !DILocation(line: 125, column: 3, scope: !4240)
!4243 = !DILocation(line: 126, column: 2, scope: !4240)
!4244 = !DILocation(line: 127, column: 6, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 127, column: 6)
!4246 = !DILocation(line: 127, column: 12, scope: !4245)
!4247 = !DILocation(line: 127, column: 16, scope: !4245)
!4248 = !DILocation(line: 127, column: 23, scope: !4245)
!4249 = !DILocation(line: 127, column: 34, scope: !4245)
!4250 = !DILocation(line: 127, column: 37, scope: !4245)
!4251 = !DILocation(line: 127, column: 42, scope: !4245)
!4252 = !DILocation(line: 127, column: 6, scope: !4165)
!4253 = !DILocation(line: 128, column: 42, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 127, column: 54)
!4255 = !DILocation(line: 128, column: 49, scope: !4254)
!4256 = !DILocation(line: 128, column: 3, scope: !4254)
!4257 = !DILocation(line: 129, column: 2, scope: !4254)
!4258 = !DILocation(line: 130, column: 6, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 130, column: 6)
!4260 = !DILocation(line: 130, column: 12, scope: !4259)
!4261 = !DILocation(line: 130, column: 16, scope: !4259)
!4262 = !DILocation(line: 130, column: 23, scope: !4259)
!4263 = !DILocation(line: 130, column: 34, scope: !4259)
!4264 = !DILocation(line: 130, column: 37, scope: !4259)
!4265 = !DILocation(line: 130, column: 42, scope: !4259)
!4266 = !DILocation(line: 130, column: 6, scope: !4165)
!4267 = !DILocation(line: 131, column: 42, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 130, column: 54)
!4269 = !DILocation(line: 131, column: 49, scope: !4268)
!4270 = !DILocation(line: 131, column: 3, scope: !4268)
!4271 = !DILocation(line: 132, column: 2, scope: !4268)
!4272 = !DILocation(line: 134, column: 6, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 134, column: 6)
!4274 = !DILocation(line: 134, column: 12, scope: !4273)
!4275 = !DILocation(line: 134, column: 16, scope: !4273)
!4276 = !DILocation(line: 134, column: 23, scope: !4273)
!4277 = !DILocation(line: 134, column: 28, scope: !4273)
!4278 = !DILocation(line: 134, column: 32, scope: !4273)
!4279 = !DILocation(line: 134, column: 37, scope: !4273)
!4280 = !DILocation(line: 134, column: 6, scope: !4165)
!4281 = !DILocation(line: 135, column: 23, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 134, column: 49)
!4283 = !DILocation(line: 135, column: 3, scope: !4282)
!4284 = !DILocation(line: 136, column: 2, scope: !4282)
!4285 = !DILocation(line: 137, column: 6, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 137, column: 6)
!4287 = !DILocation(line: 137, column: 12, scope: !4286)
!4288 = !DILocation(line: 137, column: 16, scope: !4286)
!4289 = !DILocation(line: 137, column: 23, scope: !4286)
!4290 = !DILocation(line: 137, column: 28, scope: !4286)
!4291 = !DILocation(line: 137, column: 32, scope: !4286)
!4292 = !DILocation(line: 137, column: 37, scope: !4286)
!4293 = !DILocation(line: 137, column: 6, scope: !4165)
!4294 = !DILocation(line: 138, column: 23, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4286, file: !3, line: 137, column: 49)
!4296 = !DILocation(line: 138, column: 3, scope: !4295)
!4297 = !DILocation(line: 139, column: 2, scope: !4295)
!4298 = !DILocation(line: 140, column: 6, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 140, column: 6)
!4300 = !DILocation(line: 140, column: 12, scope: !4299)
!4301 = !DILocation(line: 140, column: 16, scope: !4299)
!4302 = !DILocation(line: 140, column: 23, scope: !4299)
!4303 = !DILocation(line: 140, column: 28, scope: !4299)
!4304 = !DILocation(line: 140, column: 32, scope: !4299)
!4305 = !DILocation(line: 140, column: 37, scope: !4299)
!4306 = !DILocation(line: 140, column: 6, scope: !4165)
!4307 = !DILocation(line: 141, column: 23, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 140, column: 49)
!4309 = !DILocation(line: 141, column: 3, scope: !4308)
!4310 = !DILocation(line: 142, column: 2, scope: !4308)
!4311 = !DILocation(line: 144, column: 6, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 144, column: 6)
!4313 = !DILocation(line: 144, column: 11, scope: !4312)
!4314 = !DILocation(line: 144, column: 6, scope: !4165)
!4315 = !DILocation(line: 145, column: 47, scope: !4312)
!4316 = !DILocation(line: 145, column: 52, scope: !4312)
!4317 = !DILocation(line: 145, column: 59, scope: !4312)
!4318 = !DILocation(line: 145, column: 89, scope: !4312)
!4319 = !DILocation(line: 145, column: 3, scope: !4312)
!4320 = !DILocation(line: 147, column: 9, scope: !4165)
!4321 = !DILocation(line: 147, column: 2, scope: !4165)
!4322 = distinct !DISubprogram(name: "slice_get_float_buffers", scope: !3, file: !3, line: 76, type: !4323, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{null, !1759, !4325, !4325, !4325, !4325, !7, !4327, !4327, !4327, !4327}
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!4327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!4328 = !DILocalVariable(name: "context", arg: 1, scope: !4322, file: !3, line: 76, type: !1759)
!4329 = !DILocation(line: 76, column: 58, scope: !4322)
!4330 = !DILocalVariable(name: "ibuf1", arg: 2, scope: !4322, file: !3, line: 76, type: !4325)
!4331 = !DILocation(line: 76, column: 80, scope: !4322)
!4332 = !DILocalVariable(name: "ibuf2", arg: 3, scope: !4322, file: !3, line: 76, type: !4325)
!4333 = !DILocation(line: 76, column: 100, scope: !4322)
!4334 = !DILocalVariable(name: "ibuf3", arg: 4, scope: !4322, file: !3, line: 77, type: !4325)
!4335 = !DILocation(line: 77, column: 50, scope: !4322)
!4336 = !DILocalVariable(name: "out", arg: 5, scope: !4322, file: !3, line: 77, type: !4325)
!4337 = !DILocation(line: 77, column: 70, scope: !4322)
!4338 = !DILocalVariable(name: "start_line", arg: 6, scope: !4322, file: !3, line: 77, type: !7)
!4339 = !DILocation(line: 77, column: 79, scope: !4322)
!4340 = !DILocalVariable(name: "rect1", arg: 7, scope: !4322, file: !3, line: 78, type: !4327)
!4341 = !DILocation(line: 78, column: 45, scope: !4322)
!4342 = !DILocalVariable(name: "rect2", arg: 8, scope: !4322, file: !3, line: 78, type: !4327)
!4343 = !DILocation(line: 78, column: 60, scope: !4322)
!4344 = !DILocalVariable(name: "rect3", arg: 9, scope: !4322, file: !3, line: 78, type: !4327)
!4345 = !DILocation(line: 78, column: 75, scope: !4322)
!4346 = !DILocalVariable(name: "rect_out", arg: 10, scope: !4322, file: !3, line: 78, type: !4327)
!4347 = !DILocation(line: 78, column: 90, scope: !4322)
!4348 = !DILocalVariable(name: "offset", scope: !4322, file: !3, line: 80, type: !7)
!4349 = !DILocation(line: 80, column: 6, scope: !4322)
!4350 = !DILocation(line: 80, column: 19, scope: !4322)
!4351 = !DILocation(line: 80, column: 17, scope: !4322)
!4352 = !DILocation(line: 80, column: 32, scope: !4322)
!4353 = !DILocation(line: 80, column: 41, scope: !4322)
!4354 = !DILocation(line: 80, column: 30, scope: !4322)
!4355 = !DILocation(line: 82, column: 11, scope: !4322)
!4356 = !DILocation(line: 82, column: 18, scope: !4322)
!4357 = !DILocation(line: 82, column: 31, scope: !4322)
!4358 = !DILocation(line: 82, column: 29, scope: !4322)
!4359 = !DILocation(line: 82, column: 3, scope: !4322)
!4360 = !DILocation(line: 82, column: 9, scope: !4322)
!4361 = !DILocation(line: 83, column: 14, scope: !4322)
!4362 = !DILocation(line: 83, column: 19, scope: !4322)
!4363 = !DILocation(line: 83, column: 32, scope: !4322)
!4364 = !DILocation(line: 83, column: 30, scope: !4322)
!4365 = !DILocation(line: 83, column: 3, scope: !4322)
!4366 = !DILocation(line: 83, column: 12, scope: !4322)
!4367 = !DILocation(line: 85, column: 6, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4322, file: !3, line: 85, column: 6)
!4369 = !DILocation(line: 85, column: 6, scope: !4322)
!4370 = !DILocation(line: 86, column: 12, scope: !4368)
!4371 = !DILocation(line: 86, column: 19, scope: !4368)
!4372 = !DILocation(line: 86, column: 32, scope: !4368)
!4373 = !DILocation(line: 86, column: 30, scope: !4368)
!4374 = !DILocation(line: 86, column: 4, scope: !4368)
!4375 = !DILocation(line: 86, column: 10, scope: !4368)
!4376 = !DILocation(line: 86, column: 3, scope: !4368)
!4377 = !DILocation(line: 88, column: 6, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4322, file: !3, line: 88, column: 6)
!4379 = !DILocation(line: 88, column: 6, scope: !4322)
!4380 = !DILocation(line: 89, column: 12, scope: !4378)
!4381 = !DILocation(line: 89, column: 19, scope: !4378)
!4382 = !DILocation(line: 89, column: 32, scope: !4378)
!4383 = !DILocation(line: 89, column: 30, scope: !4378)
!4384 = !DILocation(line: 89, column: 4, scope: !4378)
!4385 = !DILocation(line: 89, column: 10, scope: !4378)
!4386 = !DILocation(line: 89, column: 3, scope: !4378)
!4387 = !DILocation(line: 90, column: 1, scope: !4322)
!4388 = distinct !DISubprogram(name: "do_cross_effect_float", scope: !3, file: !3, line: 523, type: !4389, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{null, !77, !77, !7, !7, !76, !76, !76}
!4391 = !DILocalVariable(name: "facf0", arg: 1, scope: !4388, file: !3, line: 523, type: !77)
!4392 = !DILocation(line: 523, column: 41, scope: !4388)
!4393 = !DILocalVariable(name: "facf1", arg: 2, scope: !4388, file: !3, line: 523, type: !77)
!4394 = !DILocation(line: 523, column: 54, scope: !4388)
!4395 = !DILocalVariable(name: "x", arg: 3, scope: !4388, file: !3, line: 523, type: !7)
!4396 = !DILocation(line: 523, column: 65, scope: !4388)
!4397 = !DILocalVariable(name: "y", arg: 4, scope: !4388, file: !3, line: 523, type: !7)
!4398 = !DILocation(line: 523, column: 72, scope: !4388)
!4399 = !DILocalVariable(name: "rect1", arg: 5, scope: !4388, file: !3, line: 523, type: !76)
!4400 = !DILocation(line: 523, column: 82, scope: !4388)
!4401 = !DILocalVariable(name: "rect2", arg: 6, scope: !4388, file: !3, line: 523, type: !76)
!4402 = !DILocation(line: 523, column: 96, scope: !4388)
!4403 = !DILocalVariable(name: "out", arg: 7, scope: !4388, file: !3, line: 523, type: !76)
!4404 = !DILocation(line: 523, column: 110, scope: !4388)
!4405 = !DILocalVariable(name: "fac1", scope: !4388, file: !3, line: 525, type: !77)
!4406 = !DILocation(line: 525, column: 8, scope: !4388)
!4407 = !DILocalVariable(name: "fac2", scope: !4388, file: !3, line: 525, type: !77)
!4408 = !DILocation(line: 525, column: 14, scope: !4388)
!4409 = !DILocalVariable(name: "fac3", scope: !4388, file: !3, line: 525, type: !77)
!4410 = !DILocation(line: 525, column: 20, scope: !4388)
!4411 = !DILocalVariable(name: "fac4", scope: !4388, file: !3, line: 525, type: !77)
!4412 = !DILocation(line: 525, column: 26, scope: !4388)
!4413 = !DILocalVariable(name: "xo", scope: !4388, file: !3, line: 526, type: !7)
!4414 = !DILocation(line: 526, column: 6, scope: !4388)
!4415 = !DILocalVariable(name: "rt1", scope: !4388, file: !3, line: 527, type: !76)
!4416 = !DILocation(line: 527, column: 9, scope: !4388)
!4417 = !DILocalVariable(name: "rt2", scope: !4388, file: !3, line: 527, type: !76)
!4418 = !DILocation(line: 527, column: 15, scope: !4388)
!4419 = !DILocalVariable(name: "rt", scope: !4388, file: !3, line: 527, type: !76)
!4420 = !DILocation(line: 527, column: 21, scope: !4388)
!4421 = !DILocation(line: 529, column: 7, scope: !4388)
!4422 = !DILocation(line: 529, column: 5, scope: !4388)
!4423 = !DILocation(line: 530, column: 8, scope: !4388)
!4424 = !DILocation(line: 530, column: 6, scope: !4388)
!4425 = !DILocation(line: 531, column: 8, scope: !4388)
!4426 = !DILocation(line: 531, column: 6, scope: !4388)
!4427 = !DILocation(line: 532, column: 7, scope: !4388)
!4428 = !DILocation(line: 532, column: 5, scope: !4388)
!4429 = !DILocation(line: 534, column: 9, scope: !4388)
!4430 = !DILocation(line: 534, column: 7, scope: !4388)
!4431 = !DILocation(line: 535, column: 16, scope: !4388)
!4432 = !DILocation(line: 535, column: 14, scope: !4388)
!4433 = !DILocation(line: 535, column: 7, scope: !4388)
!4434 = !DILocation(line: 536, column: 9, scope: !4388)
!4435 = !DILocation(line: 536, column: 7, scope: !4388)
!4436 = !DILocation(line: 537, column: 16, scope: !4388)
!4437 = !DILocation(line: 537, column: 14, scope: !4388)
!4438 = !DILocation(line: 537, column: 7, scope: !4388)
!4439 = !DILocation(line: 539, column: 2, scope: !4388)
!4440 = !DILocation(line: 539, column: 10, scope: !4388)
!4441 = !DILocation(line: 540, column: 7, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 539, column: 14)
!4443 = !DILocation(line: 540, column: 5, scope: !4442)
!4444 = !DILocation(line: 541, column: 3, scope: !4442)
!4445 = !DILocation(line: 541, column: 11, scope: !4442)
!4446 = !DILocation(line: 542, column: 12, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 541, column: 15)
!4448 = !DILocation(line: 542, column: 19, scope: !4447)
!4449 = !DILocation(line: 542, column: 17, scope: !4447)
!4450 = !DILocation(line: 542, column: 28, scope: !4447)
!4451 = !DILocation(line: 542, column: 35, scope: !4447)
!4452 = !DILocation(line: 542, column: 33, scope: !4447)
!4453 = !DILocation(line: 542, column: 26, scope: !4447)
!4454 = !DILocation(line: 542, column: 4, scope: !4447)
!4455 = !DILocation(line: 542, column: 10, scope: !4447)
!4456 = !DILocation(line: 543, column: 12, scope: !4447)
!4457 = !DILocation(line: 543, column: 19, scope: !4447)
!4458 = !DILocation(line: 543, column: 17, scope: !4447)
!4459 = !DILocation(line: 543, column: 28, scope: !4447)
!4460 = !DILocation(line: 543, column: 35, scope: !4447)
!4461 = !DILocation(line: 543, column: 33, scope: !4447)
!4462 = !DILocation(line: 543, column: 26, scope: !4447)
!4463 = !DILocation(line: 543, column: 4, scope: !4447)
!4464 = !DILocation(line: 543, column: 10, scope: !4447)
!4465 = !DILocation(line: 544, column: 12, scope: !4447)
!4466 = !DILocation(line: 544, column: 19, scope: !4447)
!4467 = !DILocation(line: 544, column: 17, scope: !4447)
!4468 = !DILocation(line: 544, column: 28, scope: !4447)
!4469 = !DILocation(line: 544, column: 35, scope: !4447)
!4470 = !DILocation(line: 544, column: 33, scope: !4447)
!4471 = !DILocation(line: 544, column: 26, scope: !4447)
!4472 = !DILocation(line: 544, column: 4, scope: !4447)
!4473 = !DILocation(line: 544, column: 10, scope: !4447)
!4474 = !DILocation(line: 545, column: 12, scope: !4447)
!4475 = !DILocation(line: 545, column: 19, scope: !4447)
!4476 = !DILocation(line: 545, column: 17, scope: !4447)
!4477 = !DILocation(line: 545, column: 28, scope: !4447)
!4478 = !DILocation(line: 545, column: 35, scope: !4447)
!4479 = !DILocation(line: 545, column: 33, scope: !4447)
!4480 = !DILocation(line: 545, column: 26, scope: !4447)
!4481 = !DILocation(line: 545, column: 4, scope: !4447)
!4482 = !DILocation(line: 545, column: 10, scope: !4447)
!4483 = !DILocation(line: 547, column: 8, scope: !4447)
!4484 = !DILocation(line: 547, column: 18, scope: !4447)
!4485 = !DILocation(line: 547, column: 27, scope: !4447)
!4486 = distinct !{!4486, !4444, !4487}
!4487 = !DILocation(line: 548, column: 3, scope: !4442)
!4488 = !DILocation(line: 550, column: 7, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 550, column: 7)
!4490 = !DILocation(line: 550, column: 9, scope: !4489)
!4491 = !DILocation(line: 550, column: 7, scope: !4442)
!4492 = !DILocation(line: 551, column: 4, scope: !4489)
!4493 = !DILocation(line: 552, column: 4, scope: !4442)
!4494 = !DILocation(line: 554, column: 7, scope: !4442)
!4495 = !DILocation(line: 554, column: 5, scope: !4442)
!4496 = !DILocation(line: 555, column: 3, scope: !4442)
!4497 = !DILocation(line: 555, column: 11, scope: !4442)
!4498 = !DILocation(line: 556, column: 12, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 555, column: 15)
!4500 = !DILocation(line: 556, column: 19, scope: !4499)
!4501 = !DILocation(line: 556, column: 17, scope: !4499)
!4502 = !DILocation(line: 556, column: 28, scope: !4499)
!4503 = !DILocation(line: 556, column: 35, scope: !4499)
!4504 = !DILocation(line: 556, column: 33, scope: !4499)
!4505 = !DILocation(line: 556, column: 26, scope: !4499)
!4506 = !DILocation(line: 556, column: 4, scope: !4499)
!4507 = !DILocation(line: 556, column: 10, scope: !4499)
!4508 = !DILocation(line: 557, column: 12, scope: !4499)
!4509 = !DILocation(line: 557, column: 19, scope: !4499)
!4510 = !DILocation(line: 557, column: 17, scope: !4499)
!4511 = !DILocation(line: 557, column: 28, scope: !4499)
!4512 = !DILocation(line: 557, column: 35, scope: !4499)
!4513 = !DILocation(line: 557, column: 33, scope: !4499)
!4514 = !DILocation(line: 557, column: 26, scope: !4499)
!4515 = !DILocation(line: 557, column: 4, scope: !4499)
!4516 = !DILocation(line: 557, column: 10, scope: !4499)
!4517 = !DILocation(line: 558, column: 12, scope: !4499)
!4518 = !DILocation(line: 558, column: 19, scope: !4499)
!4519 = !DILocation(line: 558, column: 17, scope: !4499)
!4520 = !DILocation(line: 558, column: 28, scope: !4499)
!4521 = !DILocation(line: 558, column: 35, scope: !4499)
!4522 = !DILocation(line: 558, column: 33, scope: !4499)
!4523 = !DILocation(line: 558, column: 26, scope: !4499)
!4524 = !DILocation(line: 558, column: 4, scope: !4499)
!4525 = !DILocation(line: 558, column: 10, scope: !4499)
!4526 = !DILocation(line: 559, column: 12, scope: !4499)
!4527 = !DILocation(line: 559, column: 19, scope: !4499)
!4528 = !DILocation(line: 559, column: 17, scope: !4499)
!4529 = !DILocation(line: 559, column: 28, scope: !4499)
!4530 = !DILocation(line: 559, column: 35, scope: !4499)
!4531 = !DILocation(line: 559, column: 33, scope: !4499)
!4532 = !DILocation(line: 559, column: 26, scope: !4499)
!4533 = !DILocation(line: 559, column: 4, scope: !4499)
!4534 = !DILocation(line: 559, column: 10, scope: !4499)
!4535 = !DILocation(line: 561, column: 8, scope: !4499)
!4536 = !DILocation(line: 561, column: 18, scope: !4499)
!4537 = !DILocation(line: 561, column: 27, scope: !4499)
!4538 = distinct !{!4538, !4496, !4539}
!4539 = !DILocation(line: 562, column: 3, scope: !4442)
!4540 = distinct !{!4540, !4439, !4541}
!4541 = !DILocation(line: 564, column: 2, scope: !4388)
!4542 = !DILocation(line: 565, column: 1, scope: !4388)
!4543 = distinct !DISubprogram(name: "slice_get_byte_buffers", scope: !3, file: !3, line: 60, type: !4544, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{null, !1759, !4325, !4325, !4325, !4325, !7, !4546, !4546, !4546, !4546}
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!4547 = !DILocalVariable(name: "context", arg: 1, scope: !4543, file: !3, line: 60, type: !1759)
!4548 = !DILocation(line: 60, column: 57, scope: !4543)
!4549 = !DILocalVariable(name: "ibuf1", arg: 2, scope: !4543, file: !3, line: 60, type: !4325)
!4550 = !DILocation(line: 60, column: 79, scope: !4543)
!4551 = !DILocalVariable(name: "ibuf2", arg: 3, scope: !4543, file: !3, line: 60, type: !4325)
!4552 = !DILocation(line: 60, column: 99, scope: !4543)
!4553 = !DILocalVariable(name: "ibuf3", arg: 4, scope: !4543, file: !3, line: 61, type: !4325)
!4554 = !DILocation(line: 61, column: 49, scope: !4543)
!4555 = !DILocalVariable(name: "out", arg: 5, scope: !4543, file: !3, line: 61, type: !4325)
!4556 = !DILocation(line: 61, column: 69, scope: !4543)
!4557 = !DILocalVariable(name: "start_line", arg: 6, scope: !4543, file: !3, line: 61, type: !7)
!4558 = !DILocation(line: 61, column: 78, scope: !4543)
!4559 = !DILocalVariable(name: "rect1", arg: 7, scope: !4543, file: !3, line: 61, type: !4546)
!4560 = !DILocation(line: 61, column: 106, scope: !4543)
!4561 = !DILocalVariable(name: "rect2", arg: 8, scope: !4543, file: !3, line: 62, type: !4546)
!4562 = !DILocation(line: 62, column: 52, scope: !4543)
!4563 = !DILocalVariable(name: "rect3", arg: 9, scope: !4543, file: !3, line: 62, type: !4546)
!4564 = !DILocation(line: 62, column: 75, scope: !4543)
!4565 = !DILocalVariable(name: "rect_out", arg: 10, scope: !4543, file: !3, line: 62, type: !4546)
!4566 = !DILocation(line: 62, column: 98, scope: !4543)
!4567 = !DILocalVariable(name: "offset", scope: !4543, file: !3, line: 64, type: !7)
!4568 = !DILocation(line: 64, column: 6, scope: !4543)
!4569 = !DILocation(line: 64, column: 19, scope: !4543)
!4570 = !DILocation(line: 64, column: 17, scope: !4543)
!4571 = !DILocation(line: 64, column: 32, scope: !4543)
!4572 = !DILocation(line: 64, column: 41, scope: !4543)
!4573 = !DILocation(line: 64, column: 30, scope: !4543)
!4574 = !DILocation(line: 66, column: 28, scope: !4543)
!4575 = !DILocation(line: 66, column: 35, scope: !4543)
!4576 = !DILocation(line: 66, column: 11, scope: !4543)
!4577 = !DILocation(line: 66, column: 42, scope: !4543)
!4578 = !DILocation(line: 66, column: 40, scope: !4543)
!4579 = !DILocation(line: 66, column: 3, scope: !4543)
!4580 = !DILocation(line: 66, column: 9, scope: !4543)
!4581 = !DILocation(line: 67, column: 31, scope: !4543)
!4582 = !DILocation(line: 67, column: 36, scope: !4543)
!4583 = !DILocation(line: 67, column: 14, scope: !4543)
!4584 = !DILocation(line: 67, column: 43, scope: !4543)
!4585 = !DILocation(line: 67, column: 41, scope: !4543)
!4586 = !DILocation(line: 67, column: 3, scope: !4543)
!4587 = !DILocation(line: 67, column: 12, scope: !4543)
!4588 = !DILocation(line: 69, column: 6, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 69, column: 6)
!4590 = !DILocation(line: 69, column: 6, scope: !4543)
!4591 = !DILocation(line: 70, column: 29, scope: !4589)
!4592 = !DILocation(line: 70, column: 36, scope: !4589)
!4593 = !DILocation(line: 70, column: 12, scope: !4589)
!4594 = !DILocation(line: 70, column: 43, scope: !4589)
!4595 = !DILocation(line: 70, column: 41, scope: !4589)
!4596 = !DILocation(line: 70, column: 4, scope: !4589)
!4597 = !DILocation(line: 70, column: 10, scope: !4589)
!4598 = !DILocation(line: 70, column: 3, scope: !4589)
!4599 = !DILocation(line: 72, column: 6, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 72, column: 6)
!4601 = !DILocation(line: 72, column: 6, scope: !4543)
!4602 = !DILocation(line: 73, column: 29, scope: !4600)
!4603 = !DILocation(line: 73, column: 36, scope: !4600)
!4604 = !DILocation(line: 73, column: 12, scope: !4600)
!4605 = !DILocation(line: 73, column: 43, scope: !4600)
!4606 = !DILocation(line: 73, column: 41, scope: !4600)
!4607 = !DILocation(line: 73, column: 4, scope: !4600)
!4608 = !DILocation(line: 73, column: 10, scope: !4600)
!4609 = !DILocation(line: 73, column: 3, scope: !4600)
!4610 = !DILocation(line: 74, column: 1, scope: !4543)
!4611 = distinct !DISubprogram(name: "do_cross_effect_byte", scope: !3, file: !3, line: 479, type: !4612, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{null, !77, !77, !7, !7, !83, !83, !83}
!4614 = !DILocalVariable(name: "facf0", arg: 1, scope: !4611, file: !3, line: 479, type: !77)
!4615 = !DILocation(line: 479, column: 40, scope: !4611)
!4616 = !DILocalVariable(name: "facf1", arg: 2, scope: !4611, file: !3, line: 479, type: !77)
!4617 = !DILocation(line: 479, column: 53, scope: !4611)
!4618 = !DILocalVariable(name: "x", arg: 3, scope: !4611, file: !3, line: 479, type: !7)
!4619 = !DILocation(line: 479, column: 64, scope: !4611)
!4620 = !DILocalVariable(name: "y", arg: 4, scope: !4611, file: !3, line: 479, type: !7)
!4621 = !DILocation(line: 479, column: 71, scope: !4611)
!4622 = !DILocalVariable(name: "rect1", arg: 5, scope: !4611, file: !3, line: 479, type: !83)
!4623 = !DILocation(line: 479, column: 89, scope: !4611)
!4624 = !DILocalVariable(name: "rect2", arg: 6, scope: !4611, file: !3, line: 479, type: !83)
!4625 = !DILocation(line: 479, column: 111, scope: !4611)
!4626 = !DILocalVariable(name: "out", arg: 7, scope: !4611, file: !3, line: 479, type: !83)
!4627 = !DILocation(line: 479, column: 133, scope: !4611)
!4628 = !DILocalVariable(name: "fac1", scope: !4611, file: !3, line: 481, type: !7)
!4629 = !DILocation(line: 481, column: 6, scope: !4611)
!4630 = !DILocalVariable(name: "fac2", scope: !4611, file: !3, line: 481, type: !7)
!4631 = !DILocation(line: 481, column: 12, scope: !4611)
!4632 = !DILocalVariable(name: "fac3", scope: !4611, file: !3, line: 481, type: !7)
!4633 = !DILocation(line: 481, column: 18, scope: !4611)
!4634 = !DILocalVariable(name: "fac4", scope: !4611, file: !3, line: 481, type: !7)
!4635 = !DILocation(line: 481, column: 24, scope: !4611)
!4636 = !DILocalVariable(name: "xo", scope: !4611, file: !3, line: 482, type: !7)
!4637 = !DILocation(line: 482, column: 6, scope: !4611)
!4638 = !DILocalVariable(name: "rt1", scope: !4611, file: !3, line: 483, type: !83)
!4639 = !DILocation(line: 483, column: 17, scope: !4611)
!4640 = !DILocalVariable(name: "rt2", scope: !4611, file: !3, line: 483, type: !83)
!4641 = !DILocation(line: 483, column: 23, scope: !4611)
!4642 = !DILocalVariable(name: "rt", scope: !4611, file: !3, line: 483, type: !83)
!4643 = !DILocation(line: 483, column: 29, scope: !4611)
!4644 = !DILocation(line: 485, column: 7, scope: !4611)
!4645 = !DILocation(line: 485, column: 5, scope: !4611)
!4646 = !DILocation(line: 486, column: 8, scope: !4611)
!4647 = !DILocation(line: 486, column: 6, scope: !4611)
!4648 = !DILocation(line: 487, column: 8, scope: !4611)
!4649 = !DILocation(line: 487, column: 6, scope: !4611)
!4650 = !DILocation(line: 488, column: 7, scope: !4611)
!4651 = !DILocation(line: 488, column: 5, scope: !4611)
!4652 = !DILocation(line: 490, column: 25, scope: !4611)
!4653 = !DILocation(line: 490, column: 23, scope: !4611)
!4654 = !DILocation(line: 490, column: 9, scope: !4611)
!4655 = !DILocation(line: 490, column: 7, scope: !4611)
!4656 = !DILocation(line: 491, column: 15, scope: !4611)
!4657 = !DILocation(line: 491, column: 13, scope: !4611)
!4658 = !DILocation(line: 491, column: 7, scope: !4611)
!4659 = !DILocation(line: 492, column: 25, scope: !4611)
!4660 = !DILocation(line: 492, column: 23, scope: !4611)
!4661 = !DILocation(line: 492, column: 9, scope: !4611)
!4662 = !DILocation(line: 492, column: 7, scope: !4611)
!4663 = !DILocation(line: 493, column: 15, scope: !4611)
!4664 = !DILocation(line: 493, column: 13, scope: !4611)
!4665 = !DILocation(line: 493, column: 7, scope: !4611)
!4666 = !DILocation(line: 495, column: 2, scope: !4611)
!4667 = !DILocation(line: 495, column: 10, scope: !4611)
!4668 = !DILocation(line: 496, column: 7, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 495, column: 14)
!4670 = !DILocation(line: 496, column: 5, scope: !4669)
!4671 = !DILocation(line: 497, column: 3, scope: !4669)
!4672 = !DILocation(line: 497, column: 11, scope: !4669)
!4673 = !DILocation(line: 498, column: 13, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 497, column: 15)
!4675 = !DILocation(line: 498, column: 20, scope: !4674)
!4676 = !DILocation(line: 498, column: 18, scope: !4674)
!4677 = !DILocation(line: 498, column: 29, scope: !4674)
!4678 = !DILocation(line: 498, column: 36, scope: !4674)
!4679 = !DILocation(line: 498, column: 34, scope: !4674)
!4680 = !DILocation(line: 498, column: 27, scope: !4674)
!4681 = !DILocation(line: 498, column: 44, scope: !4674)
!4682 = !DILocation(line: 498, column: 12, scope: !4674)
!4683 = !DILocation(line: 498, column: 4, scope: !4674)
!4684 = !DILocation(line: 498, column: 10, scope: !4674)
!4685 = !DILocation(line: 499, column: 13, scope: !4674)
!4686 = !DILocation(line: 499, column: 20, scope: !4674)
!4687 = !DILocation(line: 499, column: 18, scope: !4674)
!4688 = !DILocation(line: 499, column: 29, scope: !4674)
!4689 = !DILocation(line: 499, column: 36, scope: !4674)
!4690 = !DILocation(line: 499, column: 34, scope: !4674)
!4691 = !DILocation(line: 499, column: 27, scope: !4674)
!4692 = !DILocation(line: 499, column: 44, scope: !4674)
!4693 = !DILocation(line: 499, column: 12, scope: !4674)
!4694 = !DILocation(line: 499, column: 4, scope: !4674)
!4695 = !DILocation(line: 499, column: 10, scope: !4674)
!4696 = !DILocation(line: 500, column: 13, scope: !4674)
!4697 = !DILocation(line: 500, column: 20, scope: !4674)
!4698 = !DILocation(line: 500, column: 18, scope: !4674)
!4699 = !DILocation(line: 500, column: 29, scope: !4674)
!4700 = !DILocation(line: 500, column: 36, scope: !4674)
!4701 = !DILocation(line: 500, column: 34, scope: !4674)
!4702 = !DILocation(line: 500, column: 27, scope: !4674)
!4703 = !DILocation(line: 500, column: 44, scope: !4674)
!4704 = !DILocation(line: 500, column: 12, scope: !4674)
!4705 = !DILocation(line: 500, column: 4, scope: !4674)
!4706 = !DILocation(line: 500, column: 10, scope: !4674)
!4707 = !DILocation(line: 501, column: 13, scope: !4674)
!4708 = !DILocation(line: 501, column: 20, scope: !4674)
!4709 = !DILocation(line: 501, column: 18, scope: !4674)
!4710 = !DILocation(line: 501, column: 29, scope: !4674)
!4711 = !DILocation(line: 501, column: 36, scope: !4674)
!4712 = !DILocation(line: 501, column: 34, scope: !4674)
!4713 = !DILocation(line: 501, column: 27, scope: !4674)
!4714 = !DILocation(line: 501, column: 44, scope: !4674)
!4715 = !DILocation(line: 501, column: 12, scope: !4674)
!4716 = !DILocation(line: 501, column: 4, scope: !4674)
!4717 = !DILocation(line: 501, column: 10, scope: !4674)
!4718 = !DILocation(line: 503, column: 8, scope: !4674)
!4719 = !DILocation(line: 503, column: 18, scope: !4674)
!4720 = !DILocation(line: 503, column: 27, scope: !4674)
!4721 = distinct !{!4721, !4671, !4722}
!4722 = !DILocation(line: 504, column: 3, scope: !4669)
!4723 = !DILocation(line: 506, column: 7, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 506, column: 7)
!4725 = !DILocation(line: 506, column: 9, scope: !4724)
!4726 = !DILocation(line: 506, column: 7, scope: !4669)
!4727 = !DILocation(line: 507, column: 4, scope: !4724)
!4728 = !DILocation(line: 508, column: 4, scope: !4669)
!4729 = !DILocation(line: 510, column: 7, scope: !4669)
!4730 = !DILocation(line: 510, column: 5, scope: !4669)
!4731 = !DILocation(line: 511, column: 3, scope: !4669)
!4732 = !DILocation(line: 511, column: 11, scope: !4669)
!4733 = !DILocation(line: 512, column: 13, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 511, column: 15)
!4735 = !DILocation(line: 512, column: 20, scope: !4734)
!4736 = !DILocation(line: 512, column: 18, scope: !4734)
!4737 = !DILocation(line: 512, column: 29, scope: !4734)
!4738 = !DILocation(line: 512, column: 36, scope: !4734)
!4739 = !DILocation(line: 512, column: 34, scope: !4734)
!4740 = !DILocation(line: 512, column: 27, scope: !4734)
!4741 = !DILocation(line: 512, column: 44, scope: !4734)
!4742 = !DILocation(line: 512, column: 12, scope: !4734)
!4743 = !DILocation(line: 512, column: 4, scope: !4734)
!4744 = !DILocation(line: 512, column: 10, scope: !4734)
!4745 = !DILocation(line: 513, column: 13, scope: !4734)
!4746 = !DILocation(line: 513, column: 20, scope: !4734)
!4747 = !DILocation(line: 513, column: 18, scope: !4734)
!4748 = !DILocation(line: 513, column: 29, scope: !4734)
!4749 = !DILocation(line: 513, column: 36, scope: !4734)
!4750 = !DILocation(line: 513, column: 34, scope: !4734)
!4751 = !DILocation(line: 513, column: 27, scope: !4734)
!4752 = !DILocation(line: 513, column: 44, scope: !4734)
!4753 = !DILocation(line: 513, column: 12, scope: !4734)
!4754 = !DILocation(line: 513, column: 4, scope: !4734)
!4755 = !DILocation(line: 513, column: 10, scope: !4734)
!4756 = !DILocation(line: 514, column: 13, scope: !4734)
!4757 = !DILocation(line: 514, column: 20, scope: !4734)
!4758 = !DILocation(line: 514, column: 18, scope: !4734)
!4759 = !DILocation(line: 514, column: 29, scope: !4734)
!4760 = !DILocation(line: 514, column: 36, scope: !4734)
!4761 = !DILocation(line: 514, column: 34, scope: !4734)
!4762 = !DILocation(line: 514, column: 27, scope: !4734)
!4763 = !DILocation(line: 514, column: 44, scope: !4734)
!4764 = !DILocation(line: 514, column: 12, scope: !4734)
!4765 = !DILocation(line: 514, column: 4, scope: !4734)
!4766 = !DILocation(line: 514, column: 10, scope: !4734)
!4767 = !DILocation(line: 515, column: 13, scope: !4734)
!4768 = !DILocation(line: 515, column: 20, scope: !4734)
!4769 = !DILocation(line: 515, column: 18, scope: !4734)
!4770 = !DILocation(line: 515, column: 29, scope: !4734)
!4771 = !DILocation(line: 515, column: 36, scope: !4734)
!4772 = !DILocation(line: 515, column: 34, scope: !4734)
!4773 = !DILocation(line: 515, column: 27, scope: !4734)
!4774 = !DILocation(line: 515, column: 44, scope: !4734)
!4775 = !DILocation(line: 515, column: 12, scope: !4734)
!4776 = !DILocation(line: 515, column: 4, scope: !4734)
!4777 = !DILocation(line: 515, column: 10, scope: !4734)
!4778 = !DILocation(line: 517, column: 8, scope: !4734)
!4779 = !DILocation(line: 517, column: 18, scope: !4734)
!4780 = !DILocation(line: 517, column: 27, scope: !4734)
!4781 = distinct !{!4781, !4731, !4782}
!4782 = !DILocation(line: 518, column: 3, scope: !4669)
!4783 = distinct !{!4783, !4666, !4784}
!4784 = !DILocation(line: 520, column: 2, scope: !4611)
!4785 = !DILocation(line: 521, column: 1, scope: !4611)
!4786 = distinct !DISubprogram(name: "build_gammatabs", scope: !3, file: !3, line: 706, type: !4787, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{null}
!4789 = !DILocation(line: 708, column: 6, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 708, column: 6)
!4791 = !DILocation(line: 708, column: 22, scope: !4790)
!4792 = !DILocation(line: 708, column: 6, scope: !4786)
!4793 = !DILocation(line: 709, column: 3, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 708, column: 32)
!4795 = !DILocation(line: 710, column: 3, scope: !4794)
!4796 = !DILocation(line: 711, column: 19, scope: !4794)
!4797 = !DILocation(line: 712, column: 2, scope: !4794)
!4798 = !DILocation(line: 713, column: 1, scope: !4786)
!4799 = distinct !DISubprogram(name: "gamtabs", scope: !3, file: !3, line: 678, type: !4800, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{null, !77}
!4802 = !DILocalVariable(name: "gamma", arg: 1, scope: !4799, file: !3, line: 678, type: !77)
!4803 = !DILocation(line: 678, column: 27, scope: !4799)
!4804 = !DILocalVariable(name: "val", scope: !4799, file: !3, line: 680, type: !77)
!4805 = !DILocation(line: 680, column: 8, scope: !4799)
!4806 = !DILocalVariable(name: "igamma", scope: !4799, file: !3, line: 680, type: !77)
!4807 = !DILocation(line: 680, column: 13, scope: !4799)
!4808 = !DILocation(line: 680, column: 29, scope: !4799)
!4809 = !DILocation(line: 680, column: 27, scope: !4799)
!4810 = !DILocalVariable(name: "a", scope: !4799, file: !3, line: 681, type: !7)
!4811 = !DILocation(line: 681, column: 6, scope: !4799)
!4812 = !DILocation(line: 684, column: 9, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 684, column: 2)
!4814 = !DILocation(line: 684, column: 7, scope: !4813)
!4815 = !DILocation(line: 684, column: 14, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 684, column: 2)
!4817 = !DILocation(line: 684, column: 16, scope: !4816)
!4818 = !DILocation(line: 684, column: 2, scope: !4813)
!4819 = !DILocation(line: 685, column: 9, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 684, column: 30)
!4821 = !DILocation(line: 685, column: 7, scope: !4820)
!4822 = !DILocation(line: 686, column: 7, scope: !4820)
!4823 = !DILocation(line: 688, column: 7, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 688, column: 7)
!4825 = !DILocation(line: 688, column: 13, scope: !4824)
!4826 = !DILocation(line: 688, column: 7, scope: !4820)
!4827 = !DILocation(line: 689, column: 16, scope: !4824)
!4828 = !DILocation(line: 689, column: 10, scope: !4824)
!4829 = !DILocation(line: 689, column: 8, scope: !4824)
!4830 = !DILocation(line: 689, column: 4, scope: !4824)
!4831 = !DILocation(line: 690, column: 12, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 690, column: 12)
!4833 = !DILocation(line: 690, column: 18, scope: !4832)
!4834 = !DILocation(line: 690, column: 12, scope: !4824)
!4835 = !DILocation(line: 691, column: 15, scope: !4832)
!4836 = !DILocation(line: 691, column: 20, scope: !4832)
!4837 = !DILocation(line: 691, column: 10, scope: !4832)
!4838 = !DILocation(line: 691, column: 8, scope: !4832)
!4839 = !DILocation(line: 691, column: 4, scope: !4832)
!4840 = !DILocation(line: 693, column: 28, scope: !4820)
!4841 = !DILocation(line: 693, column: 26, scope: !4820)
!4842 = !DILocation(line: 693, column: 15, scope: !4820)
!4843 = !DILocation(line: 693, column: 10, scope: !4820)
!4844 = !DILocation(line: 693, column: 3, scope: !4820)
!4845 = !DILocation(line: 693, column: 13, scope: !4820)
!4846 = !DILocation(line: 694, column: 2, scope: !4820)
!4847 = !DILocation(line: 684, column: 26, scope: !4816)
!4848 = !DILocation(line: 684, column: 2, scope: !4816)
!4849 = distinct !{!4849, !4818, !4850}
!4850 = !DILocation(line: 694, column: 2, scope: !4813)
!4851 = !DILocation(line: 696, column: 9, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 696, column: 2)
!4853 = !DILocation(line: 696, column: 7, scope: !4852)
!4854 = !DILocation(line: 696, column: 14, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 696, column: 2)
!4856 = !DILocation(line: 696, column: 16, scope: !4855)
!4857 = !DILocation(line: 696, column: 2, scope: !4852)
!4858 = !DILocation(line: 697, column: 12, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 697, column: 12)
!4860 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 696, column: 29)
!4861 = !DILocation(line: 697, column: 18, scope: !4859)
!4862 = !DILocation(line: 697, column: 12, scope: !4860)
!4863 = !DILocation(line: 697, column: 45, scope: !4859)
!4864 = !DILocation(line: 697, column: 51, scope: !4859)
!4865 = !DILocation(line: 697, column: 49, scope: !4859)
!4866 = !DILocation(line: 697, column: 53, scope: !4859)
!4867 = !DILocation(line: 697, column: 36, scope: !4859)
!4868 = !DILocation(line: 697, column: 38, scope: !4859)
!4869 = !DILocation(line: 697, column: 27, scope: !4859)
!4870 = !DILocation(line: 697, column: 43, scope: !4859)
!4871 = !DILocation(line: 698, column: 12, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 698, column: 12)
!4873 = !DILocation(line: 698, column: 18, scope: !4872)
!4874 = !DILocation(line: 698, column: 12, scope: !4859)
!4875 = !DILocation(line: 698, column: 51, scope: !4872)
!4876 = !DILocation(line: 698, column: 49, scope: !4872)
!4877 = !DILocation(line: 698, column: 53, scope: !4872)
!4878 = !DILocation(line: 698, column: 45, scope: !4872)
!4879 = !DILocation(line: 698, column: 36, scope: !4872)
!4880 = !DILocation(line: 698, column: 38, scope: !4872)
!4881 = !DILocation(line: 698, column: 27, scope: !4872)
!4882 = !DILocation(line: 698, column: 43, scope: !4872)
!4883 = !DILocation(line: 700, column: 10, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4872, file: !3, line: 699, column: 8)
!4885 = !DILocation(line: 700, column: 12, scope: !4884)
!4886 = !DILocation(line: 700, column: 8, scope: !4884)
!4887 = !DILocation(line: 701, column: 37, scope: !4884)
!4888 = !DILocation(line: 701, column: 42, scope: !4884)
!4889 = !DILocation(line: 701, column: 33, scope: !4884)
!4890 = !DILocation(line: 701, column: 31, scope: !4884)
!4891 = !DILocation(line: 701, column: 50, scope: !4884)
!4892 = !DILocation(line: 701, column: 22, scope: !4884)
!4893 = !DILocation(line: 701, column: 13, scope: !4884)
!4894 = !DILocation(line: 701, column: 15, scope: !4884)
!4895 = !DILocation(line: 701, column: 4, scope: !4884)
!4896 = !DILocation(line: 701, column: 20, scope: !4884)
!4897 = !DILocation(line: 703, column: 2, scope: !4860)
!4898 = !DILocation(line: 696, column: 25, scope: !4855)
!4899 = !DILocation(line: 696, column: 2, scope: !4855)
!4900 = distinct !{!4900, !4857, !4901}
!4901 = !DILocation(line: 703, column: 2, scope: !4852)
!4902 = !DILocation(line: 704, column: 1, scope: !4799)
!4903 = distinct !DISubprogram(name: "makeGammaTables", scope: !3, file: !3, line: 606, type: !4800, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4904 = !DILocalVariable(name: "gamma", arg: 1, scope: !4903, file: !3, line: 606, type: !77)
!4905 = !DILocation(line: 606, column: 35, scope: !4903)
!4906 = !DILocalVariable(name: "i", scope: !4903, file: !3, line: 609, type: !7)
!4907 = !DILocation(line: 609, column: 6, scope: !4903)
!4908 = !DILocation(line: 611, column: 22, scope: !4903)
!4909 = !DILocation(line: 611, column: 20, scope: !4903)
!4910 = !DILocation(line: 612, column: 29, scope: !4903)
!4911 = !DILocation(line: 612, column: 27, scope: !4903)
!4912 = !DILocation(line: 612, column: 20, scope: !4903)
!4913 = !DILocation(line: 613, column: 20, scope: !4903)
!4914 = !DILocation(line: 614, column: 20, scope: !4903)
!4915 = !DILocation(line: 617, column: 9, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 617, column: 2)
!4917 = !DILocation(line: 617, column: 7, scope: !4916)
!4918 = !DILocation(line: 617, column: 14, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 617, column: 2)
!4920 = !DILocation(line: 617, column: 16, scope: !4919)
!4921 = !DILocation(line: 617, column: 2, scope: !4916)
!4922 = !DILocation(line: 618, column: 30, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 617, column: 44)
!4924 = !DILocation(line: 618, column: 34, scope: !4923)
!4925 = !DILocation(line: 618, column: 32, scope: !4923)
!4926 = !DILocation(line: 618, column: 22, scope: !4923)
!4927 = !DILocation(line: 618, column: 3, scope: !4923)
!4928 = !DILocation(line: 618, column: 28, scope: !4923)
!4929 = !DILocation(line: 619, column: 53, scope: !4923)
!4930 = !DILocation(line: 619, column: 34, scope: !4923)
!4931 = !DILocation(line: 619, column: 57, scope: !4923)
!4932 = !DILocation(line: 619, column: 30, scope: !4923)
!4933 = !DILocation(line: 619, column: 21, scope: !4923)
!4934 = !DILocation(line: 619, column: 3, scope: !4923)
!4935 = !DILocation(line: 619, column: 28, scope: !4923)
!4936 = !DILocation(line: 620, column: 53, scope: !4923)
!4937 = !DILocation(line: 620, column: 34, scope: !4923)
!4938 = !DILocation(line: 620, column: 57, scope: !4923)
!4939 = !DILocation(line: 620, column: 30, scope: !4923)
!4940 = !DILocation(line: 620, column: 25, scope: !4923)
!4941 = !DILocation(line: 620, column: 3, scope: !4923)
!4942 = !DILocation(line: 620, column: 28, scope: !4923)
!4943 = !DILocation(line: 621, column: 2, scope: !4923)
!4944 = !DILocation(line: 617, column: 40, scope: !4919)
!4945 = !DILocation(line: 617, column: 2, scope: !4919)
!4946 = distinct !{!4946, !4921, !4947}
!4947 = !DILocation(line: 621, column: 2, scope: !4916)
!4948 = !DILocation(line: 628, column: 45, scope: !4903)
!4949 = !DILocation(line: 629, column: 45, scope: !4903)
!4950 = !DILocation(line: 630, column: 45, scope: !4903)
!4951 = !DILocation(line: 635, column: 9, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 635, column: 2)
!4953 = !DILocation(line: 635, column: 7, scope: !4952)
!4954 = !DILocation(line: 635, column: 14, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 635, column: 2)
!4956 = !DILocation(line: 635, column: 16, scope: !4955)
!4957 = !DILocation(line: 635, column: 2, scope: !4952)
!4958 = !DILocation(line: 636, column: 24, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 635, column: 44)
!4960 = !DILocation(line: 636, column: 60, scope: !4959)
!4961 = !DILocation(line: 636, column: 62, scope: !4959)
!4962 = !DILocation(line: 636, column: 42, scope: !4959)
!4963 = !DILocation(line: 636, column: 87, scope: !4959)
!4964 = !DILocation(line: 636, column: 69, scope: !4959)
!4965 = !DILocation(line: 636, column: 67, scope: !4959)
!4966 = !DILocation(line: 636, column: 39, scope: !4959)
!4967 = !DILocation(line: 636, column: 19, scope: !4959)
!4968 = !DILocation(line: 636, column: 3, scope: !4959)
!4969 = !DILocation(line: 636, column: 22, scope: !4959)
!4970 = !DILocation(line: 637, column: 28, scope: !4959)
!4971 = !DILocation(line: 637, column: 68, scope: !4959)
!4972 = !DILocation(line: 637, column: 70, scope: !4959)
!4973 = !DILocation(line: 637, column: 46, scope: !4959)
!4974 = !DILocation(line: 637, column: 99, scope: !4959)
!4975 = !DILocation(line: 637, column: 77, scope: !4959)
!4976 = !DILocation(line: 637, column: 75, scope: !4959)
!4977 = !DILocation(line: 637, column: 43, scope: !4959)
!4978 = !DILocation(line: 637, column: 23, scope: !4959)
!4979 = !DILocation(line: 637, column: 3, scope: !4959)
!4980 = !DILocation(line: 637, column: 26, scope: !4959)
!4981 = !DILocation(line: 638, column: 2, scope: !4959)
!4982 = !DILocation(line: 635, column: 40, scope: !4955)
!4983 = !DILocation(line: 635, column: 2, scope: !4955)
!4984 = distinct !{!4984, !4957, !4985}
!4985 = !DILocation(line: 638, column: 2, scope: !4952)
!4986 = !DILocation(line: 640, column: 1, scope: !4903)
!4987 = distinct !DISubprogram(name: "do_gammacross_effect_float", scope: !3, file: !3, line: 778, type: !4389, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!4988 = !DILocalVariable(name: "facf0", arg: 1, scope: !4987, file: !3, line: 778, type: !77)
!4989 = !DILocation(line: 778, column: 46, scope: !4987)
!4990 = !DILocalVariable(name: "UNUSED_facf1", arg: 2, scope: !4987, file: !3, line: 778, type: !77)
!4991 = !DILocation(line: 778, column: 59, scope: !4987)
!4992 = !DILocalVariable(name: "x", arg: 3, scope: !4987, file: !3, line: 778, type: !7)
!4993 = !DILocation(line: 778, column: 78, scope: !4987)
!4994 = !DILocalVariable(name: "y", arg: 4, scope: !4987, file: !3, line: 778, type: !7)
!4995 = !DILocation(line: 778, column: 85, scope: !4987)
!4996 = !DILocalVariable(name: "rect1", arg: 5, scope: !4987, file: !3, line: 778, type: !76)
!4997 = !DILocation(line: 778, column: 95, scope: !4987)
!4998 = !DILocalVariable(name: "rect2", arg: 6, scope: !4987, file: !3, line: 779, type: !76)
!4999 = !DILocation(line: 779, column: 47, scope: !4987)
!5000 = !DILocalVariable(name: "out", arg: 7, scope: !4987, file: !3, line: 779, type: !76)
!5001 = !DILocation(line: 779, column: 61, scope: !4987)
!5002 = !DILocalVariable(name: "fac1", scope: !4987, file: !3, line: 781, type: !77)
!5003 = !DILocation(line: 781, column: 8, scope: !4987)
!5004 = !DILocalVariable(name: "fac2", scope: !4987, file: !3, line: 781, type: !77)
!5005 = !DILocation(line: 781, column: 14, scope: !4987)
!5006 = !DILocalVariable(name: "xo", scope: !4987, file: !3, line: 782, type: !7)
!5007 = !DILocation(line: 782, column: 6, scope: !4987)
!5008 = !DILocalVariable(name: "rt1", scope: !4987, file: !3, line: 783, type: !76)
!5009 = !DILocation(line: 783, column: 9, scope: !4987)
!5010 = !DILocalVariable(name: "rt2", scope: !4987, file: !3, line: 783, type: !76)
!5011 = !DILocation(line: 783, column: 15, scope: !4987)
!5012 = !DILocalVariable(name: "rt", scope: !4987, file: !3, line: 783, type: !76)
!5013 = !DILocation(line: 783, column: 21, scope: !4987)
!5014 = !DILocation(line: 785, column: 7, scope: !4987)
!5015 = !DILocation(line: 785, column: 5, scope: !4987)
!5016 = !DILocation(line: 786, column: 8, scope: !4987)
!5017 = !DILocation(line: 786, column: 6, scope: !4987)
!5018 = !DILocation(line: 787, column: 8, scope: !4987)
!5019 = !DILocation(line: 787, column: 6, scope: !4987)
!5020 = !DILocation(line: 788, column: 7, scope: !4987)
!5021 = !DILocation(line: 788, column: 5, scope: !4987)
!5022 = !DILocation(line: 790, column: 9, scope: !4987)
!5023 = !DILocation(line: 790, column: 7, scope: !4987)
!5024 = !DILocation(line: 791, column: 16, scope: !4987)
!5025 = !DILocation(line: 791, column: 14, scope: !4987)
!5026 = !DILocation(line: 791, column: 7, scope: !4987)
!5027 = !DILocation(line: 793, column: 2, scope: !4987)
!5028 = !DILocation(line: 793, column: 10, scope: !4987)
!5029 = !DILocation(line: 794, column: 7, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 793, column: 14)
!5031 = !DILocation(line: 794, column: 10, scope: !5030)
!5032 = !DILocation(line: 794, column: 5, scope: !5030)
!5033 = !DILocation(line: 795, column: 3, scope: !5030)
!5034 = !DILocation(line: 795, column: 11, scope: !5030)
!5035 = !DILocation(line: 796, column: 23, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 795, column: 15)
!5037 = !DILocation(line: 796, column: 47, scope: !5036)
!5038 = !DILocation(line: 796, column: 46, scope: !5036)
!5039 = !DILocation(line: 796, column: 30, scope: !5036)
!5040 = !DILocation(line: 796, column: 28, scope: !5036)
!5041 = !DILocation(line: 796, column: 54, scope: !5036)
!5042 = !DILocation(line: 796, column: 78, scope: !5036)
!5043 = !DILocation(line: 796, column: 77, scope: !5036)
!5044 = !DILocation(line: 796, column: 61, scope: !5036)
!5045 = !DILocation(line: 796, column: 59, scope: !5036)
!5046 = !DILocation(line: 796, column: 52, scope: !5036)
!5047 = !DILocation(line: 796, column: 10, scope: !5036)
!5048 = !DILocation(line: 796, column: 5, scope: !5036)
!5049 = !DILocation(line: 796, column: 8, scope: !5036)
!5050 = !DILocation(line: 797, column: 7, scope: !5036)
!5051 = !DILocation(line: 797, column: 14, scope: !5036)
!5052 = !DILocation(line: 797, column: 20, scope: !5036)
!5053 = distinct !{!5053, !5033, !5054}
!5054 = !DILocation(line: 798, column: 3, scope: !5030)
!5055 = !DILocation(line: 800, column: 7, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 800, column: 7)
!5057 = !DILocation(line: 800, column: 9, scope: !5056)
!5058 = !DILocation(line: 800, column: 7, scope: !5030)
!5059 = !DILocation(line: 801, column: 4, scope: !5056)
!5060 = !DILocation(line: 802, column: 4, scope: !5030)
!5061 = !DILocation(line: 804, column: 7, scope: !5030)
!5062 = !DILocation(line: 804, column: 10, scope: !5030)
!5063 = !DILocation(line: 804, column: 5, scope: !5030)
!5064 = !DILocation(line: 805, column: 3, scope: !5030)
!5065 = !DILocation(line: 805, column: 11, scope: !5030)
!5066 = !DILocation(line: 806, column: 23, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 805, column: 15)
!5068 = !DILocation(line: 806, column: 47, scope: !5067)
!5069 = !DILocation(line: 806, column: 46, scope: !5067)
!5070 = !DILocation(line: 806, column: 30, scope: !5067)
!5071 = !DILocation(line: 806, column: 28, scope: !5067)
!5072 = !DILocation(line: 806, column: 54, scope: !5067)
!5073 = !DILocation(line: 806, column: 78, scope: !5067)
!5074 = !DILocation(line: 806, column: 77, scope: !5067)
!5075 = !DILocation(line: 806, column: 61, scope: !5067)
!5076 = !DILocation(line: 806, column: 59, scope: !5067)
!5077 = !DILocation(line: 806, column: 52, scope: !5067)
!5078 = !DILocation(line: 806, column: 10, scope: !5067)
!5079 = !DILocation(line: 806, column: 5, scope: !5067)
!5080 = !DILocation(line: 806, column: 8, scope: !5067)
!5081 = !DILocation(line: 808, column: 7, scope: !5067)
!5082 = !DILocation(line: 808, column: 14, scope: !5067)
!5083 = !DILocation(line: 808, column: 20, scope: !5067)
!5084 = distinct !{!5084, !5064, !5085}
!5085 = !DILocation(line: 809, column: 3, scope: !5030)
!5086 = distinct !{!5086, !5027, !5087}
!5087 = !DILocation(line: 810, column: 2, scope: !4987)
!5088 = !DILocation(line: 811, column: 1, scope: !4987)
!5089 = distinct !DISubprogram(name: "do_gammacross_effect_byte", scope: !3, file: !3, line: 727, type: !4612, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5090 = !DILocalVariable(name: "facf0", arg: 1, scope: !5089, file: !3, line: 727, type: !77)
!5091 = !DILocation(line: 727, column: 45, scope: !5089)
!5092 = !DILocalVariable(name: "UNUSED_facf1", arg: 2, scope: !5089, file: !3, line: 727, type: !77)
!5093 = !DILocation(line: 727, column: 58, scope: !5089)
!5094 = !DILocalVariable(name: "x", arg: 3, scope: !5089, file: !3, line: 727, type: !7)
!5095 = !DILocation(line: 727, column: 78, scope: !5089)
!5096 = !DILocalVariable(name: "y", arg: 4, scope: !5089, file: !3, line: 727, type: !7)
!5097 = !DILocation(line: 727, column: 85, scope: !5089)
!5098 = !DILocalVariable(name: "rect1", arg: 5, scope: !5089, file: !3, line: 727, type: !83)
!5099 = !DILocation(line: 727, column: 103, scope: !5089)
!5100 = !DILocalVariable(name: "rect2", arg: 6, scope: !5089, file: !3, line: 728, type: !83)
!5101 = !DILocation(line: 728, column: 54, scope: !5089)
!5102 = !DILocalVariable(name: "out", arg: 7, scope: !5089, file: !3, line: 728, type: !83)
!5103 = !DILocation(line: 728, column: 76, scope: !5089)
!5104 = !DILocalVariable(name: "fac1", scope: !5089, file: !3, line: 730, type: !77)
!5105 = !DILocation(line: 730, column: 8, scope: !5089)
!5106 = !DILocalVariable(name: "fac2", scope: !5089, file: !3, line: 730, type: !77)
!5107 = !DILocation(line: 730, column: 14, scope: !5089)
!5108 = !DILocalVariable(name: "xo", scope: !5089, file: !3, line: 731, type: !7)
!5109 = !DILocation(line: 731, column: 6, scope: !5089)
!5110 = !DILocalVariable(name: "cp1", scope: !5089, file: !3, line: 732, type: !83)
!5111 = !DILocation(line: 732, column: 17, scope: !5089)
!5112 = !DILocalVariable(name: "cp2", scope: !5089, file: !3, line: 732, type: !83)
!5113 = !DILocation(line: 732, column: 23, scope: !5089)
!5114 = !DILocalVariable(name: "rt", scope: !5089, file: !3, line: 732, type: !83)
!5115 = !DILocation(line: 732, column: 29, scope: !5089)
!5116 = !DILocalVariable(name: "rt1", scope: !5089, file: !3, line: 733, type: !722)
!5117 = !DILocation(line: 733, column: 8, scope: !5089)
!5118 = !DILocalVariable(name: "rt2", scope: !5089, file: !3, line: 733, type: !722)
!5119 = !DILocation(line: 733, column: 16, scope: !5089)
!5120 = !DILocalVariable(name: "tempc", scope: !5089, file: !3, line: 733, type: !722)
!5121 = !DILocation(line: 733, column: 24, scope: !5089)
!5122 = !DILocation(line: 735, column: 7, scope: !5089)
!5123 = !DILocation(line: 735, column: 5, scope: !5089)
!5124 = !DILocation(line: 736, column: 8, scope: !5089)
!5125 = !DILocation(line: 736, column: 6, scope: !5089)
!5126 = !DILocation(line: 737, column: 8, scope: !5089)
!5127 = !DILocation(line: 737, column: 6, scope: !5089)
!5128 = !DILocation(line: 738, column: 7, scope: !5089)
!5129 = !DILocation(line: 738, column: 5, scope: !5089)
!5130 = !DILocation(line: 740, column: 9, scope: !5089)
!5131 = !DILocation(line: 740, column: 7, scope: !5089)
!5132 = !DILocation(line: 741, column: 16, scope: !5089)
!5133 = !DILocation(line: 741, column: 14, scope: !5089)
!5134 = !DILocation(line: 741, column: 7, scope: !5089)
!5135 = !DILocation(line: 743, column: 2, scope: !5089)
!5136 = !DILocation(line: 743, column: 10, scope: !5089)
!5137 = !DILocation(line: 744, column: 7, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 743, column: 14)
!5139 = !DILocation(line: 744, column: 5, scope: !5138)
!5140 = !DILocation(line: 745, column: 3, scope: !5138)
!5141 = !DILocation(line: 745, column: 11, scope: !5138)
!5142 = !DILocation(line: 746, column: 35, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 745, column: 15)
!5144 = !DILocation(line: 746, column: 40, scope: !5143)
!5145 = !DILocation(line: 746, column: 4, scope: !5143)
!5146 = !DILocation(line: 747, column: 35, scope: !5143)
!5147 = !DILocation(line: 747, column: 40, scope: !5143)
!5148 = !DILocation(line: 747, column: 4, scope: !5143)
!5149 = !DILocation(line: 749, column: 28, scope: !5143)
!5150 = !DILocation(line: 749, column: 51, scope: !5143)
!5151 = !DILocation(line: 749, column: 35, scope: !5143)
!5152 = !DILocation(line: 749, column: 33, scope: !5143)
!5153 = !DILocation(line: 749, column: 61, scope: !5143)
!5154 = !DILocation(line: 749, column: 84, scope: !5143)
!5155 = !DILocation(line: 749, column: 68, scope: !5143)
!5156 = !DILocation(line: 749, column: 66, scope: !5143)
!5157 = !DILocation(line: 749, column: 59, scope: !5143)
!5158 = !DILocation(line: 749, column: 15, scope: !5143)
!5159 = !DILocation(line: 749, column: 4, scope: !5143)
!5160 = !DILocation(line: 749, column: 13, scope: !5143)
!5161 = !DILocation(line: 750, column: 28, scope: !5143)
!5162 = !DILocation(line: 750, column: 51, scope: !5143)
!5163 = !DILocation(line: 750, column: 35, scope: !5143)
!5164 = !DILocation(line: 750, column: 33, scope: !5143)
!5165 = !DILocation(line: 750, column: 61, scope: !5143)
!5166 = !DILocation(line: 750, column: 84, scope: !5143)
!5167 = !DILocation(line: 750, column: 68, scope: !5143)
!5168 = !DILocation(line: 750, column: 66, scope: !5143)
!5169 = !DILocation(line: 750, column: 59, scope: !5143)
!5170 = !DILocation(line: 750, column: 15, scope: !5143)
!5171 = !DILocation(line: 750, column: 4, scope: !5143)
!5172 = !DILocation(line: 750, column: 13, scope: !5143)
!5173 = !DILocation(line: 751, column: 28, scope: !5143)
!5174 = !DILocation(line: 751, column: 51, scope: !5143)
!5175 = !DILocation(line: 751, column: 35, scope: !5143)
!5176 = !DILocation(line: 751, column: 33, scope: !5143)
!5177 = !DILocation(line: 751, column: 61, scope: !5143)
!5178 = !DILocation(line: 751, column: 84, scope: !5143)
!5179 = !DILocation(line: 751, column: 68, scope: !5143)
!5180 = !DILocation(line: 751, column: 66, scope: !5143)
!5181 = !DILocation(line: 751, column: 59, scope: !5143)
!5182 = !DILocation(line: 751, column: 15, scope: !5143)
!5183 = !DILocation(line: 751, column: 4, scope: !5143)
!5184 = !DILocation(line: 751, column: 13, scope: !5143)
!5185 = !DILocation(line: 752, column: 28, scope: !5143)
!5186 = !DILocation(line: 752, column: 51, scope: !5143)
!5187 = !DILocation(line: 752, column: 35, scope: !5143)
!5188 = !DILocation(line: 752, column: 33, scope: !5143)
!5189 = !DILocation(line: 752, column: 61, scope: !5143)
!5190 = !DILocation(line: 752, column: 84, scope: !5143)
!5191 = !DILocation(line: 752, column: 68, scope: !5143)
!5192 = !DILocation(line: 752, column: 66, scope: !5143)
!5193 = !DILocation(line: 752, column: 59, scope: !5143)
!5194 = !DILocation(line: 752, column: 15, scope: !5143)
!5195 = !DILocation(line: 752, column: 4, scope: !5143)
!5196 = !DILocation(line: 752, column: 13, scope: !5143)
!5197 = !DILocation(line: 754, column: 35, scope: !5143)
!5198 = !DILocation(line: 754, column: 39, scope: !5143)
!5199 = !DILocation(line: 754, column: 4, scope: !5143)
!5200 = !DILocation(line: 755, column: 8, scope: !5143)
!5201 = !DILocation(line: 755, column: 18, scope: !5143)
!5202 = !DILocation(line: 755, column: 27, scope: !5143)
!5203 = distinct !{!5203, !5140, !5204}
!5204 = !DILocation(line: 756, column: 3, scope: !5138)
!5205 = !DILocation(line: 758, column: 7, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 758, column: 7)
!5207 = !DILocation(line: 758, column: 9, scope: !5206)
!5208 = !DILocation(line: 758, column: 7, scope: !5138)
!5209 = !DILocation(line: 759, column: 4, scope: !5206)
!5210 = !DILocation(line: 760, column: 4, scope: !5138)
!5211 = !DILocation(line: 762, column: 7, scope: !5138)
!5212 = !DILocation(line: 762, column: 5, scope: !5138)
!5213 = !DILocation(line: 763, column: 3, scope: !5138)
!5214 = !DILocation(line: 763, column: 11, scope: !5138)
!5215 = !DILocation(line: 764, column: 35, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 763, column: 15)
!5217 = !DILocation(line: 764, column: 40, scope: !5216)
!5218 = !DILocation(line: 764, column: 4, scope: !5216)
!5219 = !DILocation(line: 765, column: 35, scope: !5216)
!5220 = !DILocation(line: 765, column: 40, scope: !5216)
!5221 = !DILocation(line: 765, column: 4, scope: !5216)
!5222 = !DILocation(line: 767, column: 28, scope: !5216)
!5223 = !DILocation(line: 767, column: 51, scope: !5216)
!5224 = !DILocation(line: 767, column: 35, scope: !5216)
!5225 = !DILocation(line: 767, column: 33, scope: !5216)
!5226 = !DILocation(line: 767, column: 61, scope: !5216)
!5227 = !DILocation(line: 767, column: 84, scope: !5216)
!5228 = !DILocation(line: 767, column: 68, scope: !5216)
!5229 = !DILocation(line: 767, column: 66, scope: !5216)
!5230 = !DILocation(line: 767, column: 59, scope: !5216)
!5231 = !DILocation(line: 767, column: 15, scope: !5216)
!5232 = !DILocation(line: 767, column: 4, scope: !5216)
!5233 = !DILocation(line: 767, column: 13, scope: !5216)
!5234 = !DILocation(line: 768, column: 28, scope: !5216)
!5235 = !DILocation(line: 768, column: 51, scope: !5216)
!5236 = !DILocation(line: 768, column: 35, scope: !5216)
!5237 = !DILocation(line: 768, column: 33, scope: !5216)
!5238 = !DILocation(line: 768, column: 61, scope: !5216)
!5239 = !DILocation(line: 768, column: 84, scope: !5216)
!5240 = !DILocation(line: 768, column: 68, scope: !5216)
!5241 = !DILocation(line: 768, column: 66, scope: !5216)
!5242 = !DILocation(line: 768, column: 59, scope: !5216)
!5243 = !DILocation(line: 768, column: 15, scope: !5216)
!5244 = !DILocation(line: 768, column: 4, scope: !5216)
!5245 = !DILocation(line: 768, column: 13, scope: !5216)
!5246 = !DILocation(line: 769, column: 28, scope: !5216)
!5247 = !DILocation(line: 769, column: 51, scope: !5216)
!5248 = !DILocation(line: 769, column: 35, scope: !5216)
!5249 = !DILocation(line: 769, column: 33, scope: !5216)
!5250 = !DILocation(line: 769, column: 61, scope: !5216)
!5251 = !DILocation(line: 769, column: 84, scope: !5216)
!5252 = !DILocation(line: 769, column: 68, scope: !5216)
!5253 = !DILocation(line: 769, column: 66, scope: !5216)
!5254 = !DILocation(line: 769, column: 59, scope: !5216)
!5255 = !DILocation(line: 769, column: 15, scope: !5216)
!5256 = !DILocation(line: 769, column: 4, scope: !5216)
!5257 = !DILocation(line: 769, column: 13, scope: !5216)
!5258 = !DILocation(line: 770, column: 28, scope: !5216)
!5259 = !DILocation(line: 770, column: 51, scope: !5216)
!5260 = !DILocation(line: 770, column: 35, scope: !5216)
!5261 = !DILocation(line: 770, column: 33, scope: !5216)
!5262 = !DILocation(line: 770, column: 61, scope: !5216)
!5263 = !DILocation(line: 770, column: 84, scope: !5216)
!5264 = !DILocation(line: 770, column: 68, scope: !5216)
!5265 = !DILocation(line: 770, column: 66, scope: !5216)
!5266 = !DILocation(line: 770, column: 59, scope: !5216)
!5267 = !DILocation(line: 770, column: 15, scope: !5216)
!5268 = !DILocation(line: 770, column: 4, scope: !5216)
!5269 = !DILocation(line: 770, column: 13, scope: !5216)
!5270 = !DILocation(line: 772, column: 35, scope: !5216)
!5271 = !DILocation(line: 772, column: 39, scope: !5216)
!5272 = !DILocation(line: 772, column: 4, scope: !5216)
!5273 = !DILocation(line: 773, column: 8, scope: !5216)
!5274 = !DILocation(line: 773, column: 18, scope: !5216)
!5275 = !DILocation(line: 773, column: 27, scope: !5216)
!5276 = distinct !{!5276, !5213, !5277}
!5277 = !DILocation(line: 774, column: 3, scope: !5138)
!5278 = distinct !{!5278, !5135, !5279}
!5279 = !DILocation(line: 775, column: 2, scope: !5089)
!5280 = !DILocation(line: 776, column: 1, scope: !5089)
!5281 = distinct !DISubprogram(name: "gammaCorrect", scope: !3, file: !3, line: 642, type: !5282, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!77, !77}
!5284 = !DILocalVariable(name: "c", arg: 1, scope: !5281, file: !3, line: 642, type: !77)
!5285 = !DILocation(line: 642, column: 33, scope: !5281)
!5286 = !DILocalVariable(name: "i", scope: !5281, file: !3, line: 644, type: !7)
!5287 = !DILocation(line: 644, column: 6, scope: !5281)
!5288 = !DILocalVariable(name: "res", scope: !5281, file: !3, line: 645, type: !77)
!5289 = !DILocation(line: 645, column: 8, scope: !5281)
!5290 = !DILocation(line: 647, column: 13, scope: !5281)
!5291 = !DILocation(line: 647, column: 17, scope: !5281)
!5292 = !DILocation(line: 647, column: 15, scope: !5281)
!5293 = !DILocation(line: 647, column: 6, scope: !5281)
!5294 = !DILocation(line: 647, column: 4, scope: !5281)
!5295 = !DILocation(line: 653, column: 11, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 653, column: 11)
!5297 = !DILocation(line: 653, column: 11, scope: !5281)
!5298 = !DILocation(line: 653, column: 50, scope: !5296)
!5299 = !DILocation(line: 653, column: 49, scope: !5296)
!5300 = !DILocation(line: 653, column: 53, scope: !5296)
!5301 = !DILocation(line: 653, column: 44, scope: !5296)
!5302 = !DILocation(line: 653, column: 43, scope: !5296)
!5303 = !DILocation(line: 653, column: 41, scope: !5296)
!5304 = !DILocation(line: 653, column: 37, scope: !5296)
!5305 = !DILocation(line: 654, column: 11, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 654, column: 11)
!5307 = !DILocation(line: 654, column: 13, scope: !5306)
!5308 = !DILocation(line: 654, column: 11, scope: !5296)
!5309 = !DILocation(line: 654, column: 49, scope: !5306)
!5310 = !DILocation(line: 654, column: 53, scope: !5306)
!5311 = !DILocation(line: 654, column: 44, scope: !5306)
!5312 = !DILocation(line: 654, column: 41, scope: !5306)
!5313 = !DILocation(line: 654, column: 37, scope: !5306)
!5314 = !DILocation(line: 655, column: 62, scope: !5306)
!5315 = !DILocation(line: 655, column: 44, scope: !5306)
!5316 = !DILocation(line: 656, column: 46, scope: !5306)
!5317 = !DILocation(line: 656, column: 69, scope: !5306)
!5318 = !DILocation(line: 656, column: 50, scope: !5306)
!5319 = !DILocation(line: 656, column: 48, scope: !5306)
!5320 = !DILocation(line: 656, column: 91, scope: !5306)
!5321 = !DILocation(line: 656, column: 75, scope: !5306)
!5322 = !DILocation(line: 656, column: 73, scope: !5306)
!5323 = !DILocation(line: 655, column: 65, scope: !5306)
!5324 = !DILocation(line: 655, column: 41, scope: !5306)
!5325 = !DILocation(line: 658, column: 9, scope: !5281)
!5326 = !DILocation(line: 658, column: 2, scope: !5281)
!5327 = distinct !DISubprogram(name: "invGammaCorrect", scope: !3, file: !3, line: 663, type: !5282, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5328 = !DILocalVariable(name: "c", arg: 1, scope: !5327, file: !3, line: 663, type: !77)
!5329 = !DILocation(line: 663, column: 36, scope: !5327)
!5330 = !DILocalVariable(name: "i", scope: !5327, file: !3, line: 665, type: !7)
!5331 = !DILocation(line: 665, column: 6, scope: !5327)
!5332 = !DILocalVariable(name: "res", scope: !5327, file: !3, line: 666, type: !77)
!5333 = !DILocation(line: 666, column: 8, scope: !5327)
!5334 = !DILocation(line: 668, column: 13, scope: !5327)
!5335 = !DILocation(line: 668, column: 17, scope: !5327)
!5336 = !DILocation(line: 668, column: 15, scope: !5327)
!5337 = !DILocation(line: 668, column: 6, scope: !5327)
!5338 = !DILocation(line: 668, column: 4, scope: !5327)
!5339 = !DILocation(line: 670, column: 11, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 670, column: 11)
!5341 = !DILocation(line: 670, column: 11, scope: !5327)
!5342 = !DILocation(line: 670, column: 50, scope: !5340)
!5343 = !DILocation(line: 670, column: 49, scope: !5340)
!5344 = !DILocation(line: 670, column: 53, scope: !5340)
!5345 = !DILocation(line: 670, column: 44, scope: !5340)
!5346 = !DILocation(line: 670, column: 43, scope: !5340)
!5347 = !DILocation(line: 670, column: 41, scope: !5340)
!5348 = !DILocation(line: 670, column: 37, scope: !5340)
!5349 = !DILocation(line: 671, column: 11, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 671, column: 11)
!5351 = !DILocation(line: 671, column: 13, scope: !5350)
!5352 = !DILocation(line: 671, column: 11, scope: !5340)
!5353 = !DILocation(line: 671, column: 49, scope: !5350)
!5354 = !DILocation(line: 671, column: 53, scope: !5350)
!5355 = !DILocation(line: 671, column: 44, scope: !5350)
!5356 = !DILocation(line: 671, column: 41, scope: !5350)
!5357 = !DILocation(line: 671, column: 37, scope: !5350)
!5358 = !DILocation(line: 672, column: 65, scope: !5350)
!5359 = !DILocation(line: 672, column: 43, scope: !5350)
!5360 = !DILocation(line: 673, column: 45, scope: !5350)
!5361 = !DILocation(line: 673, column: 68, scope: !5350)
!5362 = !DILocation(line: 673, column: 49, scope: !5350)
!5363 = !DILocation(line: 673, column: 47, scope: !5350)
!5364 = !DILocation(line: 673, column: 94, scope: !5350)
!5365 = !DILocation(line: 673, column: 74, scope: !5350)
!5366 = !DILocation(line: 673, column: 72, scope: !5350)
!5367 = !DILocation(line: 672, column: 68, scope: !5350)
!5368 = !DILocation(line: 672, column: 41, scope: !5350)
!5369 = !DILocation(line: 675, column: 9, scope: !5327)
!5370 = !DILocation(line: 675, column: 2, scope: !5327)
!5371 = distinct !DISubprogram(name: "straight_uchar_to_premul_float", scope: !5372, file: !5372, line: 310, type: !5373, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5372 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5373 = !DISubroutineType(types: !5374)
!5374 = !{null, !76, !5375}
!5375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5376, size: 64)
!5376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !84)
!5377 = !DILocalVariable(name: "result", arg: 1, scope: !5371, file: !5372, line: 310, type: !76)
!5378 = !DILocation(line: 310, column: 51, scope: !5371)
!5379 = !DILocalVariable(name: "color", arg: 2, scope: !5371, file: !5372, line: 310, type: !5375)
!5380 = !DILocation(line: 310, column: 82, scope: !5371)
!5381 = !DILocalVariable(name: "alpha", scope: !5371, file: !5372, line: 312, type: !5382)
!5382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !77)
!5383 = !DILocation(line: 312, column: 14, scope: !5371)
!5384 = !DILocation(line: 312, column: 22, scope: !5371)
!5385 = !DILocation(line: 312, column: 31, scope: !5371)
!5386 = !DILocalVariable(name: "fac", scope: !5371, file: !5372, line: 313, type: !5382)
!5387 = !DILocation(line: 313, column: 14, scope: !5371)
!5388 = !DILocation(line: 313, column: 20, scope: !5371)
!5389 = !DILocation(line: 313, column: 26, scope: !5371)
!5390 = !DILocation(line: 315, column: 14, scope: !5371)
!5391 = !DILocation(line: 315, column: 25, scope: !5371)
!5392 = !DILocation(line: 315, column: 23, scope: !5371)
!5393 = !DILocation(line: 315, column: 2, scope: !5371)
!5394 = !DILocation(line: 315, column: 12, scope: !5371)
!5395 = !DILocation(line: 316, column: 14, scope: !5371)
!5396 = !DILocation(line: 316, column: 25, scope: !5371)
!5397 = !DILocation(line: 316, column: 23, scope: !5371)
!5398 = !DILocation(line: 316, column: 2, scope: !5371)
!5399 = !DILocation(line: 316, column: 12, scope: !5371)
!5400 = !DILocation(line: 317, column: 14, scope: !5371)
!5401 = !DILocation(line: 317, column: 25, scope: !5371)
!5402 = !DILocation(line: 317, column: 23, scope: !5371)
!5403 = !DILocation(line: 317, column: 2, scope: !5371)
!5404 = !DILocation(line: 317, column: 12, scope: !5371)
!5405 = !DILocation(line: 318, column: 14, scope: !5371)
!5406 = !DILocation(line: 318, column: 2, scope: !5371)
!5407 = !DILocation(line: 318, column: 12, scope: !5371)
!5408 = !DILocation(line: 319, column: 1, scope: !5371)
!5409 = distinct !DISubprogram(name: "premul_float_to_straight_uchar", scope: !5372, file: !5372, line: 321, type: !5410, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5410 = !DISubroutineType(types: !5411)
!5411 = !{null, !83, !5412}
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5382, size: 64)
!5413 = !DILocalVariable(name: "result", arg: 1, scope: !5409, file: !5372, line: 321, type: !83)
!5414 = !DILocation(line: 321, column: 60, scope: !5409)
!5415 = !DILocalVariable(name: "color", arg: 2, scope: !5409, file: !5372, line: 321, type: !5412)
!5416 = !DILocation(line: 321, column: 80, scope: !5409)
!5417 = !DILocation(line: 323, column: 6, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5409, file: !5372, line: 323, column: 6)
!5419 = !DILocation(line: 323, column: 15, scope: !5418)
!5420 = !DILocation(line: 323, column: 23, scope: !5418)
!5421 = !DILocation(line: 323, column: 26, scope: !5418)
!5422 = !DILocation(line: 323, column: 35, scope: !5418)
!5423 = !DILocation(line: 323, column: 6, scope: !5409)
!5424 = !DILocation(line: 324, column: 15, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5418, file: !5372, line: 323, column: 44)
!5426 = !DILocation(line: 324, column: 3, scope: !5425)
!5427 = !DILocation(line: 324, column: 13, scope: !5425)
!5428 = !DILocation(line: 325, column: 15, scope: !5425)
!5429 = !DILocation(line: 325, column: 3, scope: !5425)
!5430 = !DILocation(line: 325, column: 13, scope: !5425)
!5431 = !DILocation(line: 326, column: 15, scope: !5425)
!5432 = !DILocation(line: 326, column: 3, scope: !5425)
!5433 = !DILocation(line: 326, column: 13, scope: !5425)
!5434 = !DILocation(line: 327, column: 15, scope: !5425)
!5435 = !DILocation(line: 327, column: 3, scope: !5425)
!5436 = !DILocation(line: 327, column: 13, scope: !5425)
!5437 = !DILocation(line: 328, column: 2, scope: !5425)
!5438 = !DILocalVariable(name: "alpha_inv", scope: !5439, file: !5372, line: 330, type: !5382)
!5439 = distinct !DILexicalBlock(scope: !5418, file: !5372, line: 329, column: 7)
!5440 = !DILocation(line: 330, column: 15, scope: !5439)
!5441 = !DILocation(line: 330, column: 34, scope: !5439)
!5442 = !DILocation(line: 330, column: 32, scope: !5439)
!5443 = !DILocation(line: 333, column: 15, scope: !5439)
!5444 = !DILocation(line: 333, column: 3, scope: !5439)
!5445 = !DILocation(line: 333, column: 13, scope: !5439)
!5446 = !DILocation(line: 334, column: 15, scope: !5439)
!5447 = !DILocation(line: 334, column: 3, scope: !5439)
!5448 = !DILocation(line: 334, column: 13, scope: !5439)
!5449 = !DILocation(line: 335, column: 15, scope: !5439)
!5450 = !DILocation(line: 335, column: 3, scope: !5439)
!5451 = !DILocation(line: 335, column: 13, scope: !5439)
!5452 = !DILocation(line: 336, column: 15, scope: !5439)
!5453 = !DILocation(line: 336, column: 3, scope: !5439)
!5454 = !DILocation(line: 336, column: 13, scope: !5439)
!5455 = !DILocation(line: 338, column: 1, scope: !5409)
!5456 = distinct !DISubprogram(name: "do_add_effect_float", scope: !3, file: !3, line: 885, type: !4389, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5457 = !DILocalVariable(name: "facf0", arg: 1, scope: !5456, file: !3, line: 885, type: !77)
!5458 = !DILocation(line: 885, column: 39, scope: !5456)
!5459 = !DILocalVariable(name: "facf1", arg: 2, scope: !5456, file: !3, line: 885, type: !77)
!5460 = !DILocation(line: 885, column: 52, scope: !5456)
!5461 = !DILocalVariable(name: "x", arg: 3, scope: !5456, file: !3, line: 885, type: !7)
!5462 = !DILocation(line: 885, column: 63, scope: !5456)
!5463 = !DILocalVariable(name: "y", arg: 4, scope: !5456, file: !3, line: 885, type: !7)
!5464 = !DILocation(line: 885, column: 70, scope: !5456)
!5465 = !DILocalVariable(name: "rect1", arg: 5, scope: !5456, file: !3, line: 885, type: !76)
!5466 = !DILocation(line: 885, column: 80, scope: !5456)
!5467 = !DILocalVariable(name: "rect2", arg: 6, scope: !5456, file: !3, line: 885, type: !76)
!5468 = !DILocation(line: 885, column: 94, scope: !5456)
!5469 = !DILocalVariable(name: "out", arg: 7, scope: !5456, file: !3, line: 885, type: !76)
!5470 = !DILocation(line: 885, column: 108, scope: !5456)
!5471 = !DILocalVariable(name: "xo", scope: !5456, file: !3, line: 887, type: !7)
!5472 = !DILocation(line: 887, column: 6, scope: !5456)
!5473 = !DILocalVariable(name: "m", scope: !5456, file: !3, line: 888, type: !77)
!5474 = !DILocation(line: 888, column: 8, scope: !5456)
!5475 = !DILocalVariable(name: "fac1", scope: !5456, file: !3, line: 888, type: !77)
!5476 = !DILocation(line: 888, column: 11, scope: !5456)
!5477 = !DILocalVariable(name: "fac3", scope: !5456, file: !3, line: 888, type: !77)
!5478 = !DILocation(line: 888, column: 17, scope: !5456)
!5479 = !DILocalVariable(name: "rt1", scope: !5456, file: !3, line: 889, type: !76)
!5480 = !DILocation(line: 889, column: 9, scope: !5456)
!5481 = !DILocalVariable(name: "rt2", scope: !5456, file: !3, line: 889, type: !76)
!5482 = !DILocation(line: 889, column: 15, scope: !5456)
!5483 = !DILocalVariable(name: "rt", scope: !5456, file: !3, line: 889, type: !76)
!5484 = !DILocation(line: 889, column: 21, scope: !5456)
!5485 = !DILocation(line: 891, column: 7, scope: !5456)
!5486 = !DILocation(line: 891, column: 5, scope: !5456)
!5487 = !DILocation(line: 892, column: 8, scope: !5456)
!5488 = !DILocation(line: 892, column: 6, scope: !5456)
!5489 = !DILocation(line: 893, column: 8, scope: !5456)
!5490 = !DILocation(line: 893, column: 6, scope: !5456)
!5491 = !DILocation(line: 894, column: 7, scope: !5456)
!5492 = !DILocation(line: 894, column: 5, scope: !5456)
!5493 = !DILocation(line: 896, column: 9, scope: !5456)
!5494 = !DILocation(line: 896, column: 7, scope: !5456)
!5495 = !DILocation(line: 897, column: 9, scope: !5456)
!5496 = !DILocation(line: 897, column: 7, scope: !5456)
!5497 = !DILocation(line: 899, column: 2, scope: !5456)
!5498 = !DILocation(line: 899, column: 10, scope: !5456)
!5499 = !DILocation(line: 900, column: 7, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 899, column: 14)
!5501 = !DILocation(line: 900, column: 5, scope: !5500)
!5502 = !DILocation(line: 901, column: 3, scope: !5500)
!5503 = !DILocation(line: 901, column: 11, scope: !5500)
!5504 = !DILocation(line: 902, column: 16, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 901, column: 15)
!5506 = !DILocation(line: 902, column: 33, scope: !5505)
!5507 = !DILocation(line: 902, column: 31, scope: !5505)
!5508 = !DILocation(line: 902, column: 23, scope: !5505)
!5509 = !DILocation(line: 902, column: 13, scope: !5505)
!5510 = !DILocation(line: 902, column: 6, scope: !5505)
!5511 = !DILocation(line: 903, column: 12, scope: !5505)
!5512 = !DILocation(line: 903, column: 21, scope: !5505)
!5513 = !DILocation(line: 903, column: 25, scope: !5505)
!5514 = !DILocation(line: 903, column: 23, scope: !5505)
!5515 = !DILocation(line: 903, column: 19, scope: !5505)
!5516 = !DILocation(line: 903, column: 4, scope: !5505)
!5517 = !DILocation(line: 903, column: 10, scope: !5505)
!5518 = !DILocation(line: 904, column: 12, scope: !5505)
!5519 = !DILocation(line: 904, column: 21, scope: !5505)
!5520 = !DILocation(line: 904, column: 25, scope: !5505)
!5521 = !DILocation(line: 904, column: 23, scope: !5505)
!5522 = !DILocation(line: 904, column: 19, scope: !5505)
!5523 = !DILocation(line: 904, column: 4, scope: !5505)
!5524 = !DILocation(line: 904, column: 10, scope: !5505)
!5525 = !DILocation(line: 905, column: 12, scope: !5505)
!5526 = !DILocation(line: 905, column: 21, scope: !5505)
!5527 = !DILocation(line: 905, column: 25, scope: !5505)
!5528 = !DILocation(line: 905, column: 23, scope: !5505)
!5529 = !DILocation(line: 905, column: 19, scope: !5505)
!5530 = !DILocation(line: 905, column: 4, scope: !5505)
!5531 = !DILocation(line: 905, column: 10, scope: !5505)
!5532 = !DILocation(line: 906, column: 12, scope: !5505)
!5533 = !DILocation(line: 906, column: 4, scope: !5505)
!5534 = !DILocation(line: 906, column: 10, scope: !5505)
!5535 = !DILocation(line: 908, column: 8, scope: !5505)
!5536 = !DILocation(line: 908, column: 18, scope: !5505)
!5537 = !DILocation(line: 908, column: 27, scope: !5505)
!5538 = distinct !{!5538, !5502, !5539}
!5539 = !DILocation(line: 909, column: 3, scope: !5500)
!5540 = !DILocation(line: 911, column: 7, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 911, column: 7)
!5542 = !DILocation(line: 911, column: 9, scope: !5541)
!5543 = !DILocation(line: 911, column: 7, scope: !5500)
!5544 = !DILocation(line: 912, column: 4, scope: !5541)
!5545 = !DILocation(line: 913, column: 4, scope: !5500)
!5546 = !DILocation(line: 915, column: 7, scope: !5500)
!5547 = !DILocation(line: 915, column: 5, scope: !5500)
!5548 = !DILocation(line: 916, column: 3, scope: !5500)
!5549 = !DILocation(line: 916, column: 11, scope: !5500)
!5550 = !DILocation(line: 917, column: 16, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 916, column: 15)
!5552 = !DILocation(line: 917, column: 33, scope: !5551)
!5553 = !DILocation(line: 917, column: 31, scope: !5551)
!5554 = !DILocation(line: 917, column: 23, scope: !5551)
!5555 = !DILocation(line: 917, column: 13, scope: !5551)
!5556 = !DILocation(line: 917, column: 6, scope: !5551)
!5557 = !DILocation(line: 918, column: 12, scope: !5551)
!5558 = !DILocation(line: 918, column: 21, scope: !5551)
!5559 = !DILocation(line: 918, column: 25, scope: !5551)
!5560 = !DILocation(line: 918, column: 23, scope: !5551)
!5561 = !DILocation(line: 918, column: 19, scope: !5551)
!5562 = !DILocation(line: 918, column: 4, scope: !5551)
!5563 = !DILocation(line: 918, column: 10, scope: !5551)
!5564 = !DILocation(line: 919, column: 12, scope: !5551)
!5565 = !DILocation(line: 919, column: 21, scope: !5551)
!5566 = !DILocation(line: 919, column: 25, scope: !5551)
!5567 = !DILocation(line: 919, column: 23, scope: !5551)
!5568 = !DILocation(line: 919, column: 19, scope: !5551)
!5569 = !DILocation(line: 919, column: 4, scope: !5551)
!5570 = !DILocation(line: 919, column: 10, scope: !5551)
!5571 = !DILocation(line: 920, column: 12, scope: !5551)
!5572 = !DILocation(line: 920, column: 21, scope: !5551)
!5573 = !DILocation(line: 920, column: 25, scope: !5551)
!5574 = !DILocation(line: 920, column: 23, scope: !5551)
!5575 = !DILocation(line: 920, column: 19, scope: !5551)
!5576 = !DILocation(line: 920, column: 4, scope: !5551)
!5577 = !DILocation(line: 920, column: 10, scope: !5551)
!5578 = !DILocation(line: 921, column: 12, scope: !5551)
!5579 = !DILocation(line: 921, column: 4, scope: !5551)
!5580 = !DILocation(line: 921, column: 10, scope: !5551)
!5581 = !DILocation(line: 923, column: 8, scope: !5551)
!5582 = !DILocation(line: 923, column: 18, scope: !5551)
!5583 = !DILocation(line: 923, column: 27, scope: !5551)
!5584 = distinct !{!5584, !5548, !5585}
!5585 = !DILocation(line: 924, column: 3, scope: !5500)
!5586 = distinct !{!5586, !5497, !5587}
!5587 = !DILocation(line: 925, column: 2, scope: !5456)
!5588 = !DILocation(line: 926, column: 1, scope: !5456)
!5589 = distinct !DISubprogram(name: "do_add_effect_byte", scope: !3, file: !3, line: 843, type: !4612, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5590 = !DILocalVariable(name: "facf0", arg: 1, scope: !5589, file: !3, line: 843, type: !77)
!5591 = !DILocation(line: 843, column: 38, scope: !5589)
!5592 = !DILocalVariable(name: "facf1", arg: 2, scope: !5589, file: !3, line: 843, type: !77)
!5593 = !DILocation(line: 843, column: 51, scope: !5589)
!5594 = !DILocalVariable(name: "x", arg: 3, scope: !5589, file: !3, line: 843, type: !7)
!5595 = !DILocation(line: 843, column: 62, scope: !5589)
!5596 = !DILocalVariable(name: "y", arg: 4, scope: !5589, file: !3, line: 843, type: !7)
!5597 = !DILocation(line: 843, column: 69, scope: !5589)
!5598 = !DILocalVariable(name: "rect1", arg: 5, scope: !5589, file: !3, line: 843, type: !83)
!5599 = !DILocation(line: 843, column: 87, scope: !5589)
!5600 = !DILocalVariable(name: "rect2", arg: 6, scope: !5589, file: !3, line: 843, type: !83)
!5601 = !DILocation(line: 843, column: 109, scope: !5589)
!5602 = !DILocalVariable(name: "out", arg: 7, scope: !5589, file: !3, line: 844, type: !83)
!5603 = !DILocation(line: 844, column: 47, scope: !5589)
!5604 = !DILocalVariable(name: "xo", scope: !5589, file: !3, line: 846, type: !7)
!5605 = !DILocation(line: 846, column: 6, scope: !5589)
!5606 = !DILocalVariable(name: "fac1", scope: !5589, file: !3, line: 846, type: !7)
!5607 = !DILocation(line: 846, column: 10, scope: !5589)
!5608 = !DILocalVariable(name: "fac3", scope: !5589, file: !3, line: 846, type: !7)
!5609 = !DILocation(line: 846, column: 16, scope: !5589)
!5610 = !DILocalVariable(name: "cp1", scope: !5589, file: !3, line: 847, type: !83)
!5611 = !DILocation(line: 847, column: 17, scope: !5589)
!5612 = !DILocalVariable(name: "cp2", scope: !5589, file: !3, line: 847, type: !83)
!5613 = !DILocation(line: 847, column: 23, scope: !5589)
!5614 = !DILocalVariable(name: "rt", scope: !5589, file: !3, line: 847, type: !83)
!5615 = !DILocation(line: 847, column: 29, scope: !5589)
!5616 = !DILocation(line: 849, column: 7, scope: !5589)
!5617 = !DILocation(line: 849, column: 5, scope: !5589)
!5618 = !DILocation(line: 850, column: 8, scope: !5589)
!5619 = !DILocation(line: 850, column: 6, scope: !5589)
!5620 = !DILocation(line: 851, column: 8, scope: !5589)
!5621 = !DILocation(line: 851, column: 6, scope: !5589)
!5622 = !DILocation(line: 852, column: 7, scope: !5589)
!5623 = !DILocation(line: 852, column: 5, scope: !5589)
!5624 = !DILocation(line: 854, column: 24, scope: !5589)
!5625 = !DILocation(line: 854, column: 22, scope: !5589)
!5626 = !DILocation(line: 854, column: 9, scope: !5589)
!5627 = !DILocation(line: 854, column: 7, scope: !5589)
!5628 = !DILocation(line: 855, column: 24, scope: !5589)
!5629 = !DILocation(line: 855, column: 22, scope: !5589)
!5630 = !DILocation(line: 855, column: 9, scope: !5589)
!5631 = !DILocation(line: 855, column: 7, scope: !5589)
!5632 = !DILocation(line: 857, column: 2, scope: !5589)
!5633 = !DILocation(line: 857, column: 10, scope: !5589)
!5634 = !DILocation(line: 858, column: 7, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 857, column: 14)
!5636 = !DILocation(line: 858, column: 5, scope: !5635)
!5637 = !DILocation(line: 860, column: 3, scope: !5635)
!5638 = !DILocation(line: 860, column: 11, scope: !5635)
!5639 = !DILocation(line: 861, column: 19, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 860, column: 15)
!5641 = !DILocation(line: 861, column: 30, scope: !5640)
!5642 = !DILocation(line: 861, column: 37, scope: !5640)
!5643 = !DILocation(line: 861, column: 35, scope: !5640)
!5644 = !DILocation(line: 861, column: 45, scope: !5640)
!5645 = !DILocation(line: 861, column: 26, scope: !5640)
!5646 = !DILocation(line: 861, column: 12, scope: !5640)
!5647 = !DILocation(line: 861, column: 4, scope: !5640)
!5648 = !DILocation(line: 861, column: 10, scope: !5640)
!5649 = !DILocation(line: 862, column: 19, scope: !5640)
!5650 = !DILocation(line: 862, column: 30, scope: !5640)
!5651 = !DILocation(line: 862, column: 37, scope: !5640)
!5652 = !DILocation(line: 862, column: 35, scope: !5640)
!5653 = !DILocation(line: 862, column: 45, scope: !5640)
!5654 = !DILocation(line: 862, column: 26, scope: !5640)
!5655 = !DILocation(line: 862, column: 12, scope: !5640)
!5656 = !DILocation(line: 862, column: 4, scope: !5640)
!5657 = !DILocation(line: 862, column: 10, scope: !5640)
!5658 = !DILocation(line: 863, column: 19, scope: !5640)
!5659 = !DILocation(line: 863, column: 30, scope: !5640)
!5660 = !DILocation(line: 863, column: 37, scope: !5640)
!5661 = !DILocation(line: 863, column: 35, scope: !5640)
!5662 = !DILocation(line: 863, column: 45, scope: !5640)
!5663 = !DILocation(line: 863, column: 26, scope: !5640)
!5664 = !DILocation(line: 863, column: 12, scope: !5640)
!5665 = !DILocation(line: 863, column: 4, scope: !5640)
!5666 = !DILocation(line: 863, column: 10, scope: !5640)
!5667 = !DILocation(line: 864, column: 12, scope: !5640)
!5668 = !DILocation(line: 864, column: 4, scope: !5640)
!5669 = !DILocation(line: 864, column: 10, scope: !5640)
!5670 = !DILocation(line: 866, column: 8, scope: !5640)
!5671 = !DILocation(line: 866, column: 18, scope: !5640)
!5672 = !DILocation(line: 866, column: 27, scope: !5640)
!5673 = distinct !{!5673, !5637, !5674}
!5674 = !DILocation(line: 867, column: 3, scope: !5635)
!5675 = !DILocation(line: 869, column: 7, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 869, column: 7)
!5677 = !DILocation(line: 869, column: 9, scope: !5676)
!5678 = !DILocation(line: 869, column: 7, scope: !5635)
!5679 = !DILocation(line: 870, column: 4, scope: !5676)
!5680 = !DILocation(line: 871, column: 4, scope: !5635)
!5681 = !DILocation(line: 873, column: 7, scope: !5635)
!5682 = !DILocation(line: 873, column: 5, scope: !5635)
!5683 = !DILocation(line: 874, column: 3, scope: !5635)
!5684 = !DILocation(line: 874, column: 11, scope: !5635)
!5685 = !DILocation(line: 875, column: 19, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 874, column: 15)
!5687 = !DILocation(line: 875, column: 30, scope: !5686)
!5688 = !DILocation(line: 875, column: 37, scope: !5686)
!5689 = !DILocation(line: 875, column: 35, scope: !5686)
!5690 = !DILocation(line: 875, column: 45, scope: !5686)
!5691 = !DILocation(line: 875, column: 26, scope: !5686)
!5692 = !DILocation(line: 875, column: 12, scope: !5686)
!5693 = !DILocation(line: 875, column: 4, scope: !5686)
!5694 = !DILocation(line: 875, column: 10, scope: !5686)
!5695 = !DILocation(line: 876, column: 19, scope: !5686)
!5696 = !DILocation(line: 876, column: 30, scope: !5686)
!5697 = !DILocation(line: 876, column: 37, scope: !5686)
!5698 = !DILocation(line: 876, column: 35, scope: !5686)
!5699 = !DILocation(line: 876, column: 45, scope: !5686)
!5700 = !DILocation(line: 876, column: 26, scope: !5686)
!5701 = !DILocation(line: 876, column: 12, scope: !5686)
!5702 = !DILocation(line: 876, column: 4, scope: !5686)
!5703 = !DILocation(line: 876, column: 10, scope: !5686)
!5704 = !DILocation(line: 877, column: 19, scope: !5686)
!5705 = !DILocation(line: 877, column: 30, scope: !5686)
!5706 = !DILocation(line: 877, column: 37, scope: !5686)
!5707 = !DILocation(line: 877, column: 35, scope: !5686)
!5708 = !DILocation(line: 877, column: 45, scope: !5686)
!5709 = !DILocation(line: 877, column: 26, scope: !5686)
!5710 = !DILocation(line: 877, column: 12, scope: !5686)
!5711 = !DILocation(line: 877, column: 4, scope: !5686)
!5712 = !DILocation(line: 877, column: 10, scope: !5686)
!5713 = !DILocation(line: 878, column: 12, scope: !5686)
!5714 = !DILocation(line: 878, column: 4, scope: !5686)
!5715 = !DILocation(line: 878, column: 10, scope: !5686)
!5716 = !DILocation(line: 880, column: 8, scope: !5686)
!5717 = !DILocation(line: 880, column: 18, scope: !5686)
!5718 = !DILocation(line: 880, column: 27, scope: !5686)
!5719 = distinct !{!5719, !5683, !5720}
!5720 = !DILocation(line: 881, column: 3, scope: !5635)
!5721 = distinct !{!5721, !5632, !5722}
!5722 = !DILocation(line: 882, column: 2, scope: !5589)
!5723 = !DILocation(line: 883, column: 1, scope: !5589)
!5724 = distinct !DISubprogram(name: "min_ii", scope: !5725, file: !5725, line: 211, type: !5726, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5725 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!7, !7, !7}
!5728 = !DILocalVariable(name: "a", arg: 1, scope: !5724, file: !5725, line: 211, type: !7)
!5729 = !DILocation(line: 211, column: 24, scope: !5724)
!5730 = !DILocalVariable(name: "b", arg: 2, scope: !5724, file: !5725, line: 211, type: !7)
!5731 = !DILocation(line: 211, column: 31, scope: !5724)
!5732 = !DILocation(line: 213, column: 10, scope: !5724)
!5733 = !DILocation(line: 213, column: 14, scope: !5724)
!5734 = !DILocation(line: 213, column: 12, scope: !5724)
!5735 = !DILocation(line: 213, column: 9, scope: !5724)
!5736 = !DILocation(line: 213, column: 19, scope: !5724)
!5737 = !DILocation(line: 213, column: 23, scope: !5724)
!5738 = !DILocation(line: 213, column: 2, scope: !5724)
!5739 = distinct !DISubprogram(name: "do_sub_effect_float", scope: !3, file: !3, line: 989, type: !4389, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5740 = !DILocalVariable(name: "UNUSED_facf0", arg: 1, scope: !5739, file: !3, line: 989, type: !77)
!5741 = !DILocation(line: 989, column: 39, scope: !5739)
!5742 = !DILocalVariable(name: "facf1", arg: 2, scope: !5739, file: !3, line: 989, type: !77)
!5743 = !DILocation(line: 989, column: 60, scope: !5739)
!5744 = !DILocalVariable(name: "x", arg: 3, scope: !5739, file: !3, line: 989, type: !7)
!5745 = !DILocation(line: 989, column: 71, scope: !5739)
!5746 = !DILocalVariable(name: "y", arg: 4, scope: !5739, file: !3, line: 989, type: !7)
!5747 = !DILocation(line: 989, column: 78, scope: !5739)
!5748 = !DILocalVariable(name: "rect1", arg: 5, scope: !5739, file: !3, line: 989, type: !76)
!5749 = !DILocation(line: 989, column: 88, scope: !5739)
!5750 = !DILocalVariable(name: "rect2", arg: 6, scope: !5739, file: !3, line: 989, type: !76)
!5751 = !DILocation(line: 989, column: 102, scope: !5739)
!5752 = !DILocalVariable(name: "out", arg: 7, scope: !5739, file: !3, line: 989, type: !76)
!5753 = !DILocation(line: 989, column: 116, scope: !5739)
!5754 = !DILocalVariable(name: "xo", scope: !5739, file: !3, line: 991, type: !7)
!5755 = !DILocation(line: 991, column: 6, scope: !5739)
!5756 = !DILocalVariable(name: "m", scope: !5739, file: !3, line: 992, type: !77)
!5757 = !DILocation(line: 992, column: 8, scope: !5739)
!5758 = !DILocalVariable(name: "fac3", scope: !5739, file: !3, line: 992, type: !77)
!5759 = !DILocation(line: 992, column: 22, scope: !5739)
!5760 = !DILocalVariable(name: "rt1", scope: !5739, file: !3, line: 993, type: !76)
!5761 = !DILocation(line: 993, column: 9, scope: !5739)
!5762 = !DILocalVariable(name: "rt2", scope: !5739, file: !3, line: 993, type: !76)
!5763 = !DILocation(line: 993, column: 15, scope: !5739)
!5764 = !DILocalVariable(name: "rt", scope: !5739, file: !3, line: 993, type: !76)
!5765 = !DILocation(line: 993, column: 21, scope: !5739)
!5766 = !DILocation(line: 995, column: 7, scope: !5739)
!5767 = !DILocation(line: 995, column: 5, scope: !5739)
!5768 = !DILocation(line: 996, column: 8, scope: !5739)
!5769 = !DILocation(line: 996, column: 6, scope: !5739)
!5770 = !DILocation(line: 997, column: 8, scope: !5739)
!5771 = !DILocation(line: 997, column: 6, scope: !5739)
!5772 = !DILocation(line: 998, column: 7, scope: !5739)
!5773 = !DILocation(line: 998, column: 5, scope: !5739)
!5774 = !DILocation(line: 1002, column: 9, scope: !5739)
!5775 = !DILocation(line: 1002, column: 7, scope: !5739)
!5776 = !DILocation(line: 1004, column: 2, scope: !5739)
!5777 = !DILocation(line: 1004, column: 10, scope: !5739)
!5778 = !DILocation(line: 1005, column: 7, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 1004, column: 14)
!5780 = !DILocation(line: 1005, column: 5, scope: !5779)
!5781 = !DILocation(line: 1006, column: 3, scope: !5779)
!5782 = !DILocation(line: 1006, column: 11, scope: !5779)
!5783 = !DILocation(line: 1007, column: 16, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1006, column: 15)
!5785 = !DILocation(line: 1007, column: 30, scope: !5784)
!5786 = !DILocation(line: 1007, column: 28, scope: !5784)
!5787 = !DILocation(line: 1007, column: 23, scope: !5784)
!5788 = !DILocation(line: 1007, column: 13, scope: !5784)
!5789 = !DILocation(line: 1007, column: 6, scope: !5784)
!5790 = !DILocation(line: 1008, column: 19, scope: !5784)
!5791 = !DILocation(line: 1008, column: 28, scope: !5784)
!5792 = !DILocation(line: 1008, column: 32, scope: !5784)
!5793 = !DILocation(line: 1008, column: 30, scope: !5784)
!5794 = !DILocation(line: 1008, column: 26, scope: !5784)
!5795 = !DILocation(line: 1008, column: 12, scope: !5784)
!5796 = !DILocation(line: 1008, column: 4, scope: !5784)
!5797 = !DILocation(line: 1008, column: 10, scope: !5784)
!5798 = !DILocation(line: 1009, column: 19, scope: !5784)
!5799 = !DILocation(line: 1009, column: 28, scope: !5784)
!5800 = !DILocation(line: 1009, column: 32, scope: !5784)
!5801 = !DILocation(line: 1009, column: 30, scope: !5784)
!5802 = !DILocation(line: 1009, column: 26, scope: !5784)
!5803 = !DILocation(line: 1009, column: 12, scope: !5784)
!5804 = !DILocation(line: 1009, column: 4, scope: !5784)
!5805 = !DILocation(line: 1009, column: 10, scope: !5784)
!5806 = !DILocation(line: 1010, column: 19, scope: !5784)
!5807 = !DILocation(line: 1010, column: 28, scope: !5784)
!5808 = !DILocation(line: 1010, column: 32, scope: !5784)
!5809 = !DILocation(line: 1010, column: 30, scope: !5784)
!5810 = !DILocation(line: 1010, column: 26, scope: !5784)
!5811 = !DILocation(line: 1010, column: 12, scope: !5784)
!5812 = !DILocation(line: 1010, column: 4, scope: !5784)
!5813 = !DILocation(line: 1010, column: 10, scope: !5784)
!5814 = !DILocation(line: 1011, column: 12, scope: !5784)
!5815 = !DILocation(line: 1011, column: 4, scope: !5784)
!5816 = !DILocation(line: 1011, column: 10, scope: !5784)
!5817 = !DILocation(line: 1013, column: 8, scope: !5784)
!5818 = !DILocation(line: 1013, column: 18, scope: !5784)
!5819 = !DILocation(line: 1013, column: 27, scope: !5784)
!5820 = distinct !{!5820, !5781, !5821}
!5821 = !DILocation(line: 1014, column: 3, scope: !5779)
!5822 = !DILocation(line: 1016, column: 7, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1016, column: 7)
!5824 = !DILocation(line: 1016, column: 9, scope: !5823)
!5825 = !DILocation(line: 1016, column: 7, scope: !5779)
!5826 = !DILocation(line: 1017, column: 4, scope: !5823)
!5827 = !DILocation(line: 1018, column: 4, scope: !5779)
!5828 = !DILocation(line: 1020, column: 7, scope: !5779)
!5829 = !DILocation(line: 1020, column: 5, scope: !5779)
!5830 = !DILocation(line: 1021, column: 3, scope: !5779)
!5831 = !DILocation(line: 1021, column: 11, scope: !5779)
!5832 = !DILocation(line: 1022, column: 16, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1021, column: 15)
!5834 = !DILocation(line: 1022, column: 30, scope: !5833)
!5835 = !DILocation(line: 1022, column: 28, scope: !5833)
!5836 = !DILocation(line: 1022, column: 23, scope: !5833)
!5837 = !DILocation(line: 1022, column: 13, scope: !5833)
!5838 = !DILocation(line: 1022, column: 6, scope: !5833)
!5839 = !DILocation(line: 1023, column: 19, scope: !5833)
!5840 = !DILocation(line: 1023, column: 28, scope: !5833)
!5841 = !DILocation(line: 1023, column: 32, scope: !5833)
!5842 = !DILocation(line: 1023, column: 30, scope: !5833)
!5843 = !DILocation(line: 1023, column: 26, scope: !5833)
!5844 = !DILocation(line: 1023, column: 12, scope: !5833)
!5845 = !DILocation(line: 1023, column: 4, scope: !5833)
!5846 = !DILocation(line: 1023, column: 10, scope: !5833)
!5847 = !DILocation(line: 1024, column: 19, scope: !5833)
!5848 = !DILocation(line: 1024, column: 28, scope: !5833)
!5849 = !DILocation(line: 1024, column: 32, scope: !5833)
!5850 = !DILocation(line: 1024, column: 30, scope: !5833)
!5851 = !DILocation(line: 1024, column: 26, scope: !5833)
!5852 = !DILocation(line: 1024, column: 12, scope: !5833)
!5853 = !DILocation(line: 1024, column: 4, scope: !5833)
!5854 = !DILocation(line: 1024, column: 10, scope: !5833)
!5855 = !DILocation(line: 1025, column: 19, scope: !5833)
!5856 = !DILocation(line: 1025, column: 28, scope: !5833)
!5857 = !DILocation(line: 1025, column: 32, scope: !5833)
!5858 = !DILocation(line: 1025, column: 30, scope: !5833)
!5859 = !DILocation(line: 1025, column: 26, scope: !5833)
!5860 = !DILocation(line: 1025, column: 12, scope: !5833)
!5861 = !DILocation(line: 1025, column: 4, scope: !5833)
!5862 = !DILocation(line: 1025, column: 10, scope: !5833)
!5863 = !DILocation(line: 1026, column: 12, scope: !5833)
!5864 = !DILocation(line: 1026, column: 4, scope: !5833)
!5865 = !DILocation(line: 1026, column: 10, scope: !5833)
!5866 = !DILocation(line: 1028, column: 8, scope: !5833)
!5867 = !DILocation(line: 1028, column: 18, scope: !5833)
!5868 = !DILocation(line: 1028, column: 27, scope: !5833)
!5869 = distinct !{!5869, !5830, !5870}
!5870 = !DILocation(line: 1029, column: 3, scope: !5779)
!5871 = distinct !{!5871, !5776, !5872}
!5872 = !DILocation(line: 1030, column: 2, scope: !5739)
!5873 = !DILocation(line: 1031, column: 1, scope: !5739)
!5874 = distinct !DISubprogram(name: "do_sub_effect_byte", scope: !3, file: !3, line: 949, type: !4612, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!5875 = !DILocalVariable(name: "facf0", arg: 1, scope: !5874, file: !3, line: 949, type: !77)
!5876 = !DILocation(line: 949, column: 38, scope: !5874)
!5877 = !DILocalVariable(name: "facf1", arg: 2, scope: !5874, file: !3, line: 949, type: !77)
!5878 = !DILocation(line: 949, column: 51, scope: !5874)
!5879 = !DILocalVariable(name: "x", arg: 3, scope: !5874, file: !3, line: 949, type: !7)
!5880 = !DILocation(line: 949, column: 62, scope: !5874)
!5881 = !DILocalVariable(name: "y", arg: 4, scope: !5874, file: !3, line: 949, type: !7)
!5882 = !DILocation(line: 949, column: 69, scope: !5874)
!5883 = !DILocalVariable(name: "rect1", arg: 5, scope: !5874, file: !3, line: 949, type: !83)
!5884 = !DILocation(line: 949, column: 87, scope: !5874)
!5885 = !DILocalVariable(name: "rect2", arg: 6, scope: !5874, file: !3, line: 949, type: !83)
!5886 = !DILocation(line: 949, column: 109, scope: !5874)
!5887 = !DILocalVariable(name: "out", arg: 7, scope: !5874, file: !3, line: 949, type: !83)
!5888 = !DILocation(line: 949, column: 131, scope: !5874)
!5889 = !DILocalVariable(name: "xo", scope: !5874, file: !3, line: 951, type: !7)
!5890 = !DILocation(line: 951, column: 6, scope: !5874)
!5891 = !DILocalVariable(name: "fac1", scope: !5874, file: !3, line: 951, type: !7)
!5892 = !DILocation(line: 951, column: 10, scope: !5874)
!5893 = !DILocalVariable(name: "fac3", scope: !5874, file: !3, line: 951, type: !7)
!5894 = !DILocation(line: 951, column: 16, scope: !5874)
!5895 = !DILocalVariable(name: "cp1", scope: !5874, file: !3, line: 952, type: !83)
!5896 = !DILocation(line: 952, column: 17, scope: !5874)
!5897 = !DILocalVariable(name: "cp2", scope: !5874, file: !3, line: 952, type: !83)
!5898 = !DILocation(line: 952, column: 23, scope: !5874)
!5899 = !DILocalVariable(name: "rt", scope: !5874, file: !3, line: 952, type: !83)
!5900 = !DILocation(line: 952, column: 29, scope: !5874)
!5901 = !DILocation(line: 954, column: 7, scope: !5874)
!5902 = !DILocation(line: 954, column: 5, scope: !5874)
!5903 = !DILocation(line: 955, column: 8, scope: !5874)
!5904 = !DILocation(line: 955, column: 6, scope: !5874)
!5905 = !DILocation(line: 956, column: 8, scope: !5874)
!5906 = !DILocation(line: 956, column: 6, scope: !5874)
!5907 = !DILocation(line: 957, column: 7, scope: !5874)
!5908 = !DILocation(line: 957, column: 5, scope: !5874)
!5909 = !DILocation(line: 959, column: 25, scope: !5874)
!5910 = !DILocation(line: 959, column: 23, scope: !5874)
!5911 = !DILocation(line: 959, column: 9, scope: !5874)
!5912 = !DILocation(line: 959, column: 7, scope: !5874)
!5913 = !DILocation(line: 960, column: 25, scope: !5874)
!5914 = !DILocation(line: 960, column: 23, scope: !5874)
!5915 = !DILocation(line: 960, column: 9, scope: !5874)
!5916 = !DILocation(line: 960, column: 7, scope: !5874)
!5917 = !DILocation(line: 962, column: 2, scope: !5874)
!5918 = !DILocation(line: 962, column: 10, scope: !5874)
!5919 = !DILocation(line: 963, column: 7, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 962, column: 14)
!5921 = !DILocation(line: 963, column: 5, scope: !5920)
!5922 = !DILocation(line: 964, column: 3, scope: !5920)
!5923 = !DILocation(line: 964, column: 11, scope: !5920)
!5924 = !DILocation(line: 965, column: 19, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 964, column: 15)
!5926 = !DILocation(line: 965, column: 30, scope: !5925)
!5927 = !DILocation(line: 965, column: 37, scope: !5925)
!5928 = !DILocation(line: 965, column: 35, scope: !5925)
!5929 = !DILocation(line: 965, column: 45, scope: !5925)
!5930 = !DILocation(line: 965, column: 26, scope: !5925)
!5931 = !DILocation(line: 965, column: 12, scope: !5925)
!5932 = !DILocation(line: 965, column: 4, scope: !5925)
!5933 = !DILocation(line: 965, column: 10, scope: !5925)
!5934 = !DILocation(line: 966, column: 19, scope: !5925)
!5935 = !DILocation(line: 966, column: 30, scope: !5925)
!5936 = !DILocation(line: 966, column: 37, scope: !5925)
!5937 = !DILocation(line: 966, column: 35, scope: !5925)
!5938 = !DILocation(line: 966, column: 45, scope: !5925)
!5939 = !DILocation(line: 966, column: 26, scope: !5925)
!5940 = !DILocation(line: 966, column: 12, scope: !5925)
!5941 = !DILocation(line: 966, column: 4, scope: !5925)
!5942 = !DILocation(line: 966, column: 10, scope: !5925)
!5943 = !DILocation(line: 967, column: 19, scope: !5925)
!5944 = !DILocation(line: 967, column: 30, scope: !5925)
!5945 = !DILocation(line: 967, column: 37, scope: !5925)
!5946 = !DILocation(line: 967, column: 35, scope: !5925)
!5947 = !DILocation(line: 967, column: 45, scope: !5925)
!5948 = !DILocation(line: 967, column: 26, scope: !5925)
!5949 = !DILocation(line: 967, column: 12, scope: !5925)
!5950 = !DILocation(line: 967, column: 4, scope: !5925)
!5951 = !DILocation(line: 967, column: 10, scope: !5925)
!5952 = !DILocation(line: 968, column: 12, scope: !5925)
!5953 = !DILocation(line: 968, column: 4, scope: !5925)
!5954 = !DILocation(line: 968, column: 10, scope: !5925)
!5955 = !DILocation(line: 970, column: 8, scope: !5925)
!5956 = !DILocation(line: 970, column: 18, scope: !5925)
!5957 = !DILocation(line: 970, column: 27, scope: !5925)
!5958 = distinct !{!5958, !5922, !5959}
!5959 = !DILocation(line: 971, column: 3, scope: !5920)
!5960 = !DILocation(line: 973, column: 7, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 973, column: 7)
!5962 = !DILocation(line: 973, column: 9, scope: !5961)
!5963 = !DILocation(line: 973, column: 7, scope: !5920)
!5964 = !DILocation(line: 974, column: 4, scope: !5961)
!5965 = !DILocation(line: 975, column: 4, scope: !5920)
!5966 = !DILocation(line: 977, column: 7, scope: !5920)
!5967 = !DILocation(line: 977, column: 5, scope: !5920)
!5968 = !DILocation(line: 978, column: 3, scope: !5920)
!5969 = !DILocation(line: 978, column: 11, scope: !5920)
!5970 = !DILocation(line: 979, column: 19, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 978, column: 15)
!5972 = !DILocation(line: 979, column: 30, scope: !5971)
!5973 = !DILocation(line: 979, column: 37, scope: !5971)
!5974 = !DILocation(line: 979, column: 35, scope: !5971)
!5975 = !DILocation(line: 979, column: 45, scope: !5971)
!5976 = !DILocation(line: 979, column: 26, scope: !5971)
!5977 = !DILocation(line: 979, column: 12, scope: !5971)
!5978 = !DILocation(line: 979, column: 4, scope: !5971)
!5979 = !DILocation(line: 979, column: 10, scope: !5971)
!5980 = !DILocation(line: 980, column: 19, scope: !5971)
!5981 = !DILocation(line: 980, column: 30, scope: !5971)
!5982 = !DILocation(line: 980, column: 37, scope: !5971)
!5983 = !DILocation(line: 980, column: 35, scope: !5971)
!5984 = !DILocation(line: 980, column: 45, scope: !5971)
!5985 = !DILocation(line: 980, column: 26, scope: !5971)
!5986 = !DILocation(line: 980, column: 12, scope: !5971)
!5987 = !DILocation(line: 980, column: 4, scope: !5971)
!5988 = !DILocation(line: 980, column: 10, scope: !5971)
!5989 = !DILocation(line: 981, column: 19, scope: !5971)
!5990 = !DILocation(line: 981, column: 30, scope: !5971)
!5991 = !DILocation(line: 981, column: 37, scope: !5971)
!5992 = !DILocation(line: 981, column: 35, scope: !5971)
!5993 = !DILocation(line: 981, column: 45, scope: !5971)
!5994 = !DILocation(line: 981, column: 26, scope: !5971)
!5995 = !DILocation(line: 981, column: 12, scope: !5971)
!5996 = !DILocation(line: 981, column: 4, scope: !5971)
!5997 = !DILocation(line: 981, column: 10, scope: !5971)
!5998 = !DILocation(line: 982, column: 12, scope: !5971)
!5999 = !DILocation(line: 982, column: 4, scope: !5971)
!6000 = !DILocation(line: 982, column: 10, scope: !5971)
!6001 = !DILocation(line: 984, column: 8, scope: !5971)
!6002 = !DILocation(line: 984, column: 18, scope: !5971)
!6003 = !DILocation(line: 984, column: 27, scope: !5971)
!6004 = distinct !{!6004, !5968, !6005}
!6005 = !DILocation(line: 985, column: 3, scope: !5920)
!6006 = distinct !{!6006, !5917, !6007}
!6007 = !DILocation(line: 986, column: 2, scope: !5874)
!6008 = !DILocation(line: 987, column: 1, scope: !5874)
!6009 = distinct !DISubprogram(name: "max_ff", scope: !5725, file: !5725, line: 206, type: !6010, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{!77, !77, !77}
!6012 = !DILocalVariable(name: "a", arg: 1, scope: !6009, file: !5725, line: 206, type: !77)
!6013 = !DILocation(line: 206, column: 28, scope: !6009)
!6014 = !DILocalVariable(name: "b", arg: 2, scope: !6009, file: !5725, line: 206, type: !77)
!6015 = !DILocation(line: 206, column: 37, scope: !6009)
!6016 = !DILocation(line: 208, column: 10, scope: !6009)
!6017 = !DILocation(line: 208, column: 14, scope: !6009)
!6018 = !DILocation(line: 208, column: 12, scope: !6009)
!6019 = !DILocation(line: 208, column: 9, scope: !6009)
!6020 = !DILocation(line: 208, column: 19, scope: !6009)
!6021 = !DILocation(line: 208, column: 23, scope: !6009)
!6022 = !DILocation(line: 208, column: 2, scope: !6009)
!6023 = distinct !DISubprogram(name: "max_ii", scope: !5725, file: !5725, line: 215, type: !5726, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!6024 = !DILocalVariable(name: "a", arg: 1, scope: !6023, file: !5725, line: 215, type: !7)
!6025 = !DILocation(line: 215, column: 24, scope: !6023)
!6026 = !DILocalVariable(name: "b", arg: 2, scope: !6023, file: !5725, line: 215, type: !7)
!6027 = !DILocation(line: 215, column: 31, scope: !6023)
!6028 = !DILocation(line: 217, column: 10, scope: !6023)
!6029 = !DILocation(line: 217, column: 14, scope: !6023)
!6030 = !DILocation(line: 217, column: 12, scope: !6023)
!6031 = !DILocation(line: 217, column: 9, scope: !6023)
!6032 = !DILocation(line: 217, column: 19, scope: !6023)
!6033 = !DILocation(line: 217, column: 23, scope: !6023)
!6034 = !DILocation(line: 217, column: 2, scope: !6023)
!6035 = distinct !DISubprogram(name: "do_mul_effect_float", scope: !3, file: !3, line: 1185, type: !4389, scopeLine: 1186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!6036 = !DILocalVariable(name: "facf0", arg: 1, scope: !6035, file: !3, line: 1185, type: !77)
!6037 = !DILocation(line: 1185, column: 39, scope: !6035)
!6038 = !DILocalVariable(name: "facf1", arg: 2, scope: !6035, file: !3, line: 1185, type: !77)
!6039 = !DILocation(line: 1185, column: 52, scope: !6035)
!6040 = !DILocalVariable(name: "x", arg: 3, scope: !6035, file: !3, line: 1185, type: !7)
!6041 = !DILocation(line: 1185, column: 63, scope: !6035)
!6042 = !DILocalVariable(name: "y", arg: 4, scope: !6035, file: !3, line: 1185, type: !7)
!6043 = !DILocation(line: 1185, column: 70, scope: !6035)
!6044 = !DILocalVariable(name: "rect1", arg: 5, scope: !6035, file: !3, line: 1185, type: !76)
!6045 = !DILocation(line: 1185, column: 80, scope: !6035)
!6046 = !DILocalVariable(name: "rect2", arg: 6, scope: !6035, file: !3, line: 1185, type: !76)
!6047 = !DILocation(line: 1185, column: 94, scope: !6035)
!6048 = !DILocalVariable(name: "out", arg: 7, scope: !6035, file: !3, line: 1185, type: !76)
!6049 = !DILocation(line: 1185, column: 108, scope: !6035)
!6050 = !DILocalVariable(name: "xo", scope: !6035, file: !3, line: 1187, type: !7)
!6051 = !DILocation(line: 1187, column: 6, scope: !6035)
!6052 = !DILocalVariable(name: "fac1", scope: !6035, file: !3, line: 1188, type: !77)
!6053 = !DILocation(line: 1188, column: 8, scope: !6035)
!6054 = !DILocalVariable(name: "fac3", scope: !6035, file: !3, line: 1188, type: !77)
!6055 = !DILocation(line: 1188, column: 14, scope: !6035)
!6056 = !DILocalVariable(name: "rt1", scope: !6035, file: !3, line: 1189, type: !76)
!6057 = !DILocation(line: 1189, column: 9, scope: !6035)
!6058 = !DILocalVariable(name: "rt2", scope: !6035, file: !3, line: 1189, type: !76)
!6059 = !DILocation(line: 1189, column: 15, scope: !6035)
!6060 = !DILocalVariable(name: "rt", scope: !6035, file: !3, line: 1189, type: !76)
!6061 = !DILocation(line: 1189, column: 21, scope: !6035)
!6062 = !DILocation(line: 1191, column: 7, scope: !6035)
!6063 = !DILocation(line: 1191, column: 5, scope: !6035)
!6064 = !DILocation(line: 1192, column: 8, scope: !6035)
!6065 = !DILocation(line: 1192, column: 6, scope: !6035)
!6066 = !DILocation(line: 1193, column: 8, scope: !6035)
!6067 = !DILocation(line: 1193, column: 6, scope: !6035)
!6068 = !DILocation(line: 1194, column: 7, scope: !6035)
!6069 = !DILocation(line: 1194, column: 5, scope: !6035)
!6070 = !DILocation(line: 1196, column: 9, scope: !6035)
!6071 = !DILocation(line: 1196, column: 7, scope: !6035)
!6072 = !DILocation(line: 1197, column: 9, scope: !6035)
!6073 = !DILocation(line: 1197, column: 7, scope: !6035)
!6074 = !DILocation(line: 1203, column: 2, scope: !6035)
!6075 = !DILocation(line: 1203, column: 10, scope: !6035)
!6076 = !DILocation(line: 1204, column: 7, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 1203, column: 14)
!6078 = !DILocation(line: 1204, column: 5, scope: !6077)
!6079 = !DILocation(line: 1205, column: 3, scope: !6077)
!6080 = !DILocation(line: 1205, column: 11, scope: !6077)
!6081 = !DILocation(line: 1206, column: 12, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1205, column: 15)
!6083 = !DILocation(line: 1206, column: 21, scope: !6082)
!6084 = !DILocation(line: 1206, column: 28, scope: !6082)
!6085 = !DILocation(line: 1206, column: 26, scope: !6082)
!6086 = !DILocation(line: 1206, column: 38, scope: !6082)
!6087 = !DILocation(line: 1206, column: 45, scope: !6082)
!6088 = !DILocation(line: 1206, column: 35, scope: !6082)
!6089 = !DILocation(line: 1206, column: 19, scope: !6082)
!6090 = !DILocation(line: 1206, column: 4, scope: !6082)
!6091 = !DILocation(line: 1206, column: 10, scope: !6082)
!6092 = !DILocation(line: 1207, column: 12, scope: !6082)
!6093 = !DILocation(line: 1207, column: 21, scope: !6082)
!6094 = !DILocation(line: 1207, column: 28, scope: !6082)
!6095 = !DILocation(line: 1207, column: 26, scope: !6082)
!6096 = !DILocation(line: 1207, column: 38, scope: !6082)
!6097 = !DILocation(line: 1207, column: 45, scope: !6082)
!6098 = !DILocation(line: 1207, column: 35, scope: !6082)
!6099 = !DILocation(line: 1207, column: 19, scope: !6082)
!6100 = !DILocation(line: 1207, column: 4, scope: !6082)
!6101 = !DILocation(line: 1207, column: 10, scope: !6082)
!6102 = !DILocation(line: 1208, column: 12, scope: !6082)
!6103 = !DILocation(line: 1208, column: 21, scope: !6082)
!6104 = !DILocation(line: 1208, column: 28, scope: !6082)
!6105 = !DILocation(line: 1208, column: 26, scope: !6082)
!6106 = !DILocation(line: 1208, column: 38, scope: !6082)
!6107 = !DILocation(line: 1208, column: 45, scope: !6082)
!6108 = !DILocation(line: 1208, column: 35, scope: !6082)
!6109 = !DILocation(line: 1208, column: 19, scope: !6082)
!6110 = !DILocation(line: 1208, column: 4, scope: !6082)
!6111 = !DILocation(line: 1208, column: 10, scope: !6082)
!6112 = !DILocation(line: 1209, column: 12, scope: !6082)
!6113 = !DILocation(line: 1209, column: 21, scope: !6082)
!6114 = !DILocation(line: 1209, column: 28, scope: !6082)
!6115 = !DILocation(line: 1209, column: 26, scope: !6082)
!6116 = !DILocation(line: 1209, column: 38, scope: !6082)
!6117 = !DILocation(line: 1209, column: 45, scope: !6082)
!6118 = !DILocation(line: 1209, column: 35, scope: !6082)
!6119 = !DILocation(line: 1209, column: 19, scope: !6082)
!6120 = !DILocation(line: 1209, column: 4, scope: !6082)
!6121 = !DILocation(line: 1209, column: 10, scope: !6082)
!6122 = !DILocation(line: 1211, column: 8, scope: !6082)
!6123 = !DILocation(line: 1211, column: 18, scope: !6082)
!6124 = !DILocation(line: 1211, column: 27, scope: !6082)
!6125 = distinct !{!6125, !6079, !6126}
!6126 = !DILocation(line: 1212, column: 3, scope: !6077)
!6127 = !DILocation(line: 1214, column: 7, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1214, column: 7)
!6129 = !DILocation(line: 1214, column: 9, scope: !6128)
!6130 = !DILocation(line: 1214, column: 7, scope: !6077)
!6131 = !DILocation(line: 1215, column: 4, scope: !6128)
!6132 = !DILocation(line: 1216, column: 4, scope: !6077)
!6133 = !DILocation(line: 1218, column: 7, scope: !6077)
!6134 = !DILocation(line: 1218, column: 5, scope: !6077)
!6135 = !DILocation(line: 1219, column: 3, scope: !6077)
!6136 = !DILocation(line: 1219, column: 11, scope: !6077)
!6137 = !DILocation(line: 1220, column: 12, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1219, column: 15)
!6139 = !DILocation(line: 1220, column: 21, scope: !6138)
!6140 = !DILocation(line: 1220, column: 28, scope: !6138)
!6141 = !DILocation(line: 1220, column: 26, scope: !6138)
!6142 = !DILocation(line: 1220, column: 38, scope: !6138)
!6143 = !DILocation(line: 1220, column: 45, scope: !6138)
!6144 = !DILocation(line: 1220, column: 35, scope: !6138)
!6145 = !DILocation(line: 1220, column: 19, scope: !6138)
!6146 = !DILocation(line: 1220, column: 4, scope: !6138)
!6147 = !DILocation(line: 1220, column: 10, scope: !6138)
!6148 = !DILocation(line: 1221, column: 12, scope: !6138)
!6149 = !DILocation(line: 1221, column: 21, scope: !6138)
!6150 = !DILocation(line: 1221, column: 28, scope: !6138)
!6151 = !DILocation(line: 1221, column: 26, scope: !6138)
!6152 = !DILocation(line: 1221, column: 38, scope: !6138)
!6153 = !DILocation(line: 1221, column: 45, scope: !6138)
!6154 = !DILocation(line: 1221, column: 35, scope: !6138)
!6155 = !DILocation(line: 1221, column: 19, scope: !6138)
!6156 = !DILocation(line: 1221, column: 4, scope: !6138)
!6157 = !DILocation(line: 1221, column: 10, scope: !6138)
!6158 = !DILocation(line: 1222, column: 12, scope: !6138)
!6159 = !DILocation(line: 1222, column: 21, scope: !6138)
!6160 = !DILocation(line: 1222, column: 28, scope: !6138)
!6161 = !DILocation(line: 1222, column: 26, scope: !6138)
!6162 = !DILocation(line: 1222, column: 38, scope: !6138)
!6163 = !DILocation(line: 1222, column: 45, scope: !6138)
!6164 = !DILocation(line: 1222, column: 35, scope: !6138)
!6165 = !DILocation(line: 1222, column: 19, scope: !6138)
!6166 = !DILocation(line: 1222, column: 4, scope: !6138)
!6167 = !DILocation(line: 1222, column: 10, scope: !6138)
!6168 = !DILocation(line: 1223, column: 12, scope: !6138)
!6169 = !DILocation(line: 1223, column: 21, scope: !6138)
!6170 = !DILocation(line: 1223, column: 28, scope: !6138)
!6171 = !DILocation(line: 1223, column: 26, scope: !6138)
!6172 = !DILocation(line: 1223, column: 38, scope: !6138)
!6173 = !DILocation(line: 1223, column: 45, scope: !6138)
!6174 = !DILocation(line: 1223, column: 35, scope: !6138)
!6175 = !DILocation(line: 1223, column: 19, scope: !6138)
!6176 = !DILocation(line: 1223, column: 4, scope: !6138)
!6177 = !DILocation(line: 1223, column: 10, scope: !6138)
!6178 = !DILocation(line: 1225, column: 8, scope: !6138)
!6179 = !DILocation(line: 1225, column: 18, scope: !6138)
!6180 = !DILocation(line: 1225, column: 27, scope: !6138)
!6181 = distinct !{!6181, !6135, !6182}
!6182 = !DILocation(line: 1226, column: 3, scope: !6077)
!6183 = distinct !{!6183, !6074, !6184}
!6184 = !DILocation(line: 1227, column: 2, scope: !6035)
!6185 = !DILocation(line: 1228, column: 1, scope: !6035)
!6186 = distinct !DISubprogram(name: "do_mul_effect_byte", scope: !3, file: !3, line: 1137, type: !4612, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!6187 = !DILocalVariable(name: "facf0", arg: 1, scope: !6186, file: !3, line: 1137, type: !77)
!6188 = !DILocation(line: 1137, column: 38, scope: !6186)
!6189 = !DILocalVariable(name: "facf1", arg: 2, scope: !6186, file: !3, line: 1137, type: !77)
!6190 = !DILocation(line: 1137, column: 51, scope: !6186)
!6191 = !DILocalVariable(name: "x", arg: 3, scope: !6186, file: !3, line: 1137, type: !7)
!6192 = !DILocation(line: 1137, column: 62, scope: !6186)
!6193 = !DILocalVariable(name: "y", arg: 4, scope: !6186, file: !3, line: 1137, type: !7)
!6194 = !DILocation(line: 1137, column: 69, scope: !6186)
!6195 = !DILocalVariable(name: "rect1", arg: 5, scope: !6186, file: !3, line: 1137, type: !83)
!6196 = !DILocation(line: 1137, column: 87, scope: !6186)
!6197 = !DILocalVariable(name: "rect2", arg: 6, scope: !6186, file: !3, line: 1137, type: !83)
!6198 = !DILocation(line: 1137, column: 109, scope: !6186)
!6199 = !DILocalVariable(name: "out", arg: 7, scope: !6186, file: !3, line: 1138, type: !83)
!6200 = !DILocation(line: 1138, column: 47, scope: !6186)
!6201 = !DILocalVariable(name: "xo", scope: !6186, file: !3, line: 1140, type: !7)
!6202 = !DILocation(line: 1140, column: 6, scope: !6186)
!6203 = !DILocalVariable(name: "fac1", scope: !6186, file: !3, line: 1140, type: !7)
!6204 = !DILocation(line: 1140, column: 10, scope: !6186)
!6205 = !DILocalVariable(name: "fac3", scope: !6186, file: !3, line: 1140, type: !7)
!6206 = !DILocation(line: 1140, column: 16, scope: !6186)
!6207 = !DILocalVariable(name: "rt1", scope: !6186, file: !3, line: 1141, type: !83)
!6208 = !DILocation(line: 1141, column: 17, scope: !6186)
!6209 = !DILocalVariable(name: "rt2", scope: !6186, file: !3, line: 1141, type: !83)
!6210 = !DILocation(line: 1141, column: 23, scope: !6186)
!6211 = !DILocalVariable(name: "rt", scope: !6186, file: !3, line: 1141, type: !83)
!6212 = !DILocation(line: 1141, column: 29, scope: !6186)
!6213 = !DILocation(line: 1143, column: 7, scope: !6186)
!6214 = !DILocation(line: 1143, column: 5, scope: !6186)
!6215 = !DILocation(line: 1144, column: 8, scope: !6186)
!6216 = !DILocation(line: 1144, column: 6, scope: !6186)
!6217 = !DILocation(line: 1145, column: 8, scope: !6186)
!6218 = !DILocation(line: 1145, column: 6, scope: !6186)
!6219 = !DILocation(line: 1146, column: 7, scope: !6186)
!6220 = !DILocation(line: 1146, column: 5, scope: !6186)
!6221 = !DILocation(line: 1148, column: 24, scope: !6186)
!6222 = !DILocation(line: 1148, column: 22, scope: !6186)
!6223 = !DILocation(line: 1148, column: 9, scope: !6186)
!6224 = !DILocation(line: 1148, column: 7, scope: !6186)
!6225 = !DILocation(line: 1149, column: 24, scope: !6186)
!6226 = !DILocation(line: 1149, column: 22, scope: !6186)
!6227 = !DILocation(line: 1149, column: 9, scope: !6186)
!6228 = !DILocation(line: 1149, column: 7, scope: !6186)
!6229 = !DILocation(line: 1156, column: 2, scope: !6186)
!6230 = !DILocation(line: 1156, column: 10, scope: !6186)
!6231 = !DILocation(line: 1158, column: 7, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1156, column: 14)
!6233 = !DILocation(line: 1158, column: 5, scope: !6232)
!6234 = !DILocation(line: 1159, column: 3, scope: !6232)
!6235 = !DILocation(line: 1159, column: 11, scope: !6232)
!6236 = !DILocation(line: 1161, column: 12, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 1159, column: 15)
!6238 = !DILocation(line: 1161, column: 23, scope: !6237)
!6239 = !DILocation(line: 1161, column: 30, scope: !6237)
!6240 = !DILocation(line: 1161, column: 28, scope: !6237)
!6241 = !DILocation(line: 1161, column: 40, scope: !6237)
!6242 = !DILocation(line: 1161, column: 47, scope: !6237)
!6243 = !DILocation(line: 1161, column: 37, scope: !6237)
!6244 = !DILocation(line: 1161, column: 55, scope: !6237)
!6245 = !DILocation(line: 1161, column: 19, scope: !6237)
!6246 = !DILocation(line: 1161, column: 4, scope: !6237)
!6247 = !DILocation(line: 1161, column: 10, scope: !6237)
!6248 = !DILocation(line: 1162, column: 12, scope: !6237)
!6249 = !DILocation(line: 1162, column: 23, scope: !6237)
!6250 = !DILocation(line: 1162, column: 30, scope: !6237)
!6251 = !DILocation(line: 1162, column: 28, scope: !6237)
!6252 = !DILocation(line: 1162, column: 40, scope: !6237)
!6253 = !DILocation(line: 1162, column: 47, scope: !6237)
!6254 = !DILocation(line: 1162, column: 37, scope: !6237)
!6255 = !DILocation(line: 1162, column: 55, scope: !6237)
!6256 = !DILocation(line: 1162, column: 19, scope: !6237)
!6257 = !DILocation(line: 1162, column: 4, scope: !6237)
!6258 = !DILocation(line: 1162, column: 10, scope: !6237)
!6259 = !DILocation(line: 1163, column: 12, scope: !6237)
!6260 = !DILocation(line: 1163, column: 23, scope: !6237)
!6261 = !DILocation(line: 1163, column: 30, scope: !6237)
!6262 = !DILocation(line: 1163, column: 28, scope: !6237)
!6263 = !DILocation(line: 1163, column: 40, scope: !6237)
!6264 = !DILocation(line: 1163, column: 47, scope: !6237)
!6265 = !DILocation(line: 1163, column: 37, scope: !6237)
!6266 = !DILocation(line: 1163, column: 55, scope: !6237)
!6267 = !DILocation(line: 1163, column: 19, scope: !6237)
!6268 = !DILocation(line: 1163, column: 4, scope: !6237)
!6269 = !DILocation(line: 1163, column: 10, scope: !6237)
!6270 = !DILocation(line: 1164, column: 12, scope: !6237)
!6271 = !DILocation(line: 1164, column: 23, scope: !6237)
!6272 = !DILocation(line: 1164, column: 30, scope: !6237)
!6273 = !DILocation(line: 1164, column: 28, scope: !6237)
!6274 = !DILocation(line: 1164, column: 40, scope: !6237)
!6275 = !DILocation(line: 1164, column: 47, scope: !6237)
!6276 = !DILocation(line: 1164, column: 37, scope: !6237)
!6277 = !DILocation(line: 1164, column: 55, scope: !6237)
!6278 = !DILocation(line: 1164, column: 19, scope: !6237)
!6279 = !DILocation(line: 1164, column: 4, scope: !6237)
!6280 = !DILocation(line: 1164, column: 10, scope: !6237)
!6281 = !DILocation(line: 1166, column: 8, scope: !6237)
!6282 = !DILocation(line: 1166, column: 18, scope: !6237)
!6283 = !DILocation(line: 1166, column: 27, scope: !6237)
!6284 = distinct !{!6284, !6234, !6285}
!6285 = !DILocation(line: 1167, column: 3, scope: !6232)
!6286 = !DILocation(line: 1169, column: 7, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 1169, column: 7)
!6288 = !DILocation(line: 1169, column: 9, scope: !6287)
!6289 = !DILocation(line: 1169, column: 7, scope: !6232)
!6290 = !DILocation(line: 1169, column: 15, scope: !6287)
!6291 = !DILocation(line: 1170, column: 4, scope: !6232)
!6292 = !DILocation(line: 1172, column: 7, scope: !6232)
!6293 = !DILocation(line: 1172, column: 5, scope: !6232)
!6294 = !DILocation(line: 1173, column: 3, scope: !6232)
!6295 = !DILocation(line: 1173, column: 11, scope: !6232)
!6296 = !DILocation(line: 1175, column: 12, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 1173, column: 15)
!6298 = !DILocation(line: 1175, column: 23, scope: !6297)
!6299 = !DILocation(line: 1175, column: 30, scope: !6297)
!6300 = !DILocation(line: 1175, column: 28, scope: !6297)
!6301 = !DILocation(line: 1175, column: 40, scope: !6297)
!6302 = !DILocation(line: 1175, column: 47, scope: !6297)
!6303 = !DILocation(line: 1175, column: 37, scope: !6297)
!6304 = !DILocation(line: 1175, column: 55, scope: !6297)
!6305 = !DILocation(line: 1175, column: 19, scope: !6297)
!6306 = !DILocation(line: 1175, column: 4, scope: !6297)
!6307 = !DILocation(line: 1175, column: 10, scope: !6297)
!6308 = !DILocation(line: 1176, column: 12, scope: !6297)
!6309 = !DILocation(line: 1176, column: 23, scope: !6297)
!6310 = !DILocation(line: 1176, column: 30, scope: !6297)
!6311 = !DILocation(line: 1176, column: 28, scope: !6297)
!6312 = !DILocation(line: 1176, column: 40, scope: !6297)
!6313 = !DILocation(line: 1176, column: 47, scope: !6297)
!6314 = !DILocation(line: 1176, column: 37, scope: !6297)
!6315 = !DILocation(line: 1176, column: 55, scope: !6297)
!6316 = !DILocation(line: 1176, column: 19, scope: !6297)
!6317 = !DILocation(line: 1176, column: 4, scope: !6297)
!6318 = !DILocation(line: 1176, column: 10, scope: !6297)
!6319 = !DILocation(line: 1177, column: 12, scope: !6297)
!6320 = !DILocation(line: 1177, column: 23, scope: !6297)
!6321 = !DILocation(line: 1177, column: 30, scope: !6297)
!6322 = !DILocation(line: 1177, column: 28, scope: !6297)
!6323 = !DILocation(line: 1177, column: 40, scope: !6297)
!6324 = !DILocation(line: 1177, column: 47, scope: !6297)
!6325 = !DILocation(line: 1177, column: 37, scope: !6297)
!6326 = !DILocation(line: 1177, column: 55, scope: !6297)
!6327 = !DILocation(line: 1177, column: 19, scope: !6297)
!6328 = !DILocation(line: 1177, column: 4, scope: !6297)
!6329 = !DILocation(line: 1177, column: 10, scope: !6297)
!6330 = !DILocation(line: 1178, column: 12, scope: !6297)
!6331 = !DILocation(line: 1178, column: 23, scope: !6297)
!6332 = !DILocation(line: 1178, column: 30, scope: !6297)
!6333 = !DILocation(line: 1178, column: 28, scope: !6297)
!6334 = !DILocation(line: 1178, column: 40, scope: !6297)
!6335 = !DILocation(line: 1178, column: 47, scope: !6297)
!6336 = !DILocation(line: 1178, column: 37, scope: !6297)
!6337 = !DILocation(line: 1178, column: 55, scope: !6297)
!6338 = !DILocation(line: 1178, column: 19, scope: !6297)
!6339 = !DILocation(line: 1178, column: 4, scope: !6297)
!6340 = !DILocation(line: 1178, column: 10, scope: !6297)
!6341 = !DILocation(line: 1180, column: 8, scope: !6297)
!6342 = !DILocation(line: 1180, column: 18, scope: !6297)
!6343 = !DILocation(line: 1180, column: 27, scope: !6297)
!6344 = distinct !{!6344, !6294, !6345}
!6345 = !DILocation(line: 1181, column: 3, scope: !6232)
!6346 = distinct !{!6346, !6229, !6347}
!6347 = !DILocation(line: 1182, column: 2, scope: !6186)
!6348 = !DILocation(line: 1183, column: 1, scope: !6186)
!6349 = distinct !DISubprogram(name: "do_alphaover_effect_float", scope: !3, file: !3, line: 226, type: !4389, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!6350 = !DILocalVariable(name: "facf0", arg: 1, scope: !6349, file: !3, line: 226, type: !77)
!6351 = !DILocation(line: 226, column: 45, scope: !6349)
!6352 = !DILocalVariable(name: "facf1", arg: 2, scope: !6349, file: !3, line: 226, type: !77)
!6353 = !DILocation(line: 226, column: 58, scope: !6349)
!6354 = !DILocalVariable(name: "x", arg: 3, scope: !6349, file: !3, line: 226, type: !7)
!6355 = !DILocation(line: 226, column: 69, scope: !6349)
!6356 = !DILocalVariable(name: "y", arg: 4, scope: !6349, file: !3, line: 226, type: !7)
!6357 = !DILocation(line: 226, column: 76, scope: !6349)
!6358 = !DILocalVariable(name: "rect1", arg: 5, scope: !6349, file: !3, line: 226, type: !76)
!6359 = !DILocation(line: 226, column: 87, scope: !6349)
!6360 = !DILocalVariable(name: "rect2", arg: 6, scope: !6349, file: !3, line: 226, type: !76)
!6361 = !DILocation(line: 226, column: 101, scope: !6349)
!6362 = !DILocalVariable(name: "out", arg: 7, scope: !6349, file: !3, line: 226, type: !76)
!6363 = !DILocation(line: 226, column: 115, scope: !6349)
!6364 = !DILocalVariable(name: "fac2", scope: !6349, file: !3, line: 228, type: !77)
!6365 = !DILocation(line: 228, column: 8, scope: !6349)
!6366 = !DILocalVariable(name: "mfac", scope: !6349, file: !3, line: 228, type: !77)
!6367 = !DILocation(line: 228, column: 14, scope: !6349)
!6368 = !DILocalVariable(name: "fac", scope: !6349, file: !3, line: 228, type: !77)
!6369 = !DILocation(line: 228, column: 20, scope: !6349)
!6370 = !DILocalVariable(name: "fac4", scope: !6349, file: !3, line: 228, type: !77)
!6371 = !DILocation(line: 228, column: 25, scope: !6349)
!6372 = !DILocalVariable(name: "xo", scope: !6349, file: !3, line: 229, type: !7)
!6373 = !DILocation(line: 229, column: 6, scope: !6349)
!6374 = !DILocalVariable(name: "rt1", scope: !6349, file: !3, line: 230, type: !76)
!6375 = !DILocation(line: 230, column: 9, scope: !6349)
!6376 = !DILocalVariable(name: "rt2", scope: !6349, file: !3, line: 230, type: !76)
!6377 = !DILocation(line: 230, column: 15, scope: !6349)
!6378 = !DILocalVariable(name: "rt", scope: !6349, file: !3, line: 230, type: !76)
!6379 = !DILocation(line: 230, column: 21, scope: !6349)
!6380 = !DILocation(line: 232, column: 7, scope: !6349)
!6381 = !DILocation(line: 232, column: 5, scope: !6349)
!6382 = !DILocation(line: 233, column: 8, scope: !6349)
!6383 = !DILocation(line: 233, column: 6, scope: !6349)
!6384 = !DILocation(line: 234, column: 8, scope: !6349)
!6385 = !DILocation(line: 234, column: 6, scope: !6349)
!6386 = !DILocation(line: 235, column: 7, scope: !6349)
!6387 = !DILocation(line: 235, column: 5, scope: !6349)
!6388 = !DILocation(line: 237, column: 9, scope: !6349)
!6389 = !DILocation(line: 237, column: 7, scope: !6349)
!6390 = !DILocation(line: 238, column: 9, scope: !6349)
!6391 = !DILocation(line: 238, column: 7, scope: !6349)
!6392 = !DILocation(line: 240, column: 2, scope: !6349)
!6393 = !DILocation(line: 240, column: 10, scope: !6349)
!6394 = !DILocation(line: 241, column: 7, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 240, column: 14)
!6396 = !DILocation(line: 241, column: 5, scope: !6395)
!6397 = !DILocation(line: 242, column: 3, scope: !6395)
!6398 = !DILocation(line: 242, column: 11, scope: !6395)
!6399 = !DILocation(line: 245, column: 10, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 242, column: 15)
!6401 = !DILocation(line: 245, column: 8, scope: !6400)
!6402 = !DILocation(line: 246, column: 19, scope: !6400)
!6403 = !DILocation(line: 246, column: 26, scope: !6400)
!6404 = !DILocation(line: 246, column: 24, scope: !6400)
!6405 = !DILocation(line: 246, column: 16, scope: !6400)
!6406 = !DILocation(line: 246, column: 9, scope: !6400)
!6407 = !DILocation(line: 248, column: 8, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 248, column: 8)
!6409 = !DILocation(line: 248, column: 12, scope: !6408)
!6410 = !DILocation(line: 248, column: 8, scope: !6400)
!6411 = !DILocation(line: 249, column: 12, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 248, column: 21)
!6413 = !DILocation(line: 249, column: 5, scope: !6412)
!6414 = !DILocation(line: 249, column: 16, scope: !6412)
!6415 = !DILocation(line: 250, column: 4, scope: !6412)
!6416 = !DILocation(line: 251, column: 13, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 251, column: 13)
!6418 = !DILocation(line: 251, column: 18, scope: !6417)
!6419 = !DILocation(line: 251, column: 13, scope: !6408)
!6420 = !DILocation(line: 252, column: 12, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 251, column: 24)
!6422 = !DILocation(line: 252, column: 5, scope: !6421)
!6423 = !DILocation(line: 252, column: 16, scope: !6421)
!6424 = !DILocation(line: 253, column: 4, scope: !6421)
!6425 = !DILocation(line: 255, column: 13, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6417, file: !3, line: 254, column: 9)
!6427 = !DILocation(line: 255, column: 19, scope: !6426)
!6428 = !DILocation(line: 255, column: 17, scope: !6426)
!6429 = !DILocation(line: 255, column: 28, scope: !6426)
!6430 = !DILocation(line: 255, column: 35, scope: !6426)
!6431 = !DILocation(line: 255, column: 33, scope: !6426)
!6432 = !DILocation(line: 255, column: 26, scope: !6426)
!6433 = !DILocation(line: 255, column: 5, scope: !6426)
!6434 = !DILocation(line: 255, column: 11, scope: !6426)
!6435 = !DILocation(line: 256, column: 13, scope: !6426)
!6436 = !DILocation(line: 256, column: 19, scope: !6426)
!6437 = !DILocation(line: 256, column: 17, scope: !6426)
!6438 = !DILocation(line: 256, column: 28, scope: !6426)
!6439 = !DILocation(line: 256, column: 35, scope: !6426)
!6440 = !DILocation(line: 256, column: 33, scope: !6426)
!6441 = !DILocation(line: 256, column: 26, scope: !6426)
!6442 = !DILocation(line: 256, column: 5, scope: !6426)
!6443 = !DILocation(line: 256, column: 11, scope: !6426)
!6444 = !DILocation(line: 257, column: 13, scope: !6426)
!6445 = !DILocation(line: 257, column: 19, scope: !6426)
!6446 = !DILocation(line: 257, column: 17, scope: !6426)
!6447 = !DILocation(line: 257, column: 28, scope: !6426)
!6448 = !DILocation(line: 257, column: 35, scope: !6426)
!6449 = !DILocation(line: 257, column: 33, scope: !6426)
!6450 = !DILocation(line: 257, column: 26, scope: !6426)
!6451 = !DILocation(line: 257, column: 5, scope: !6426)
!6452 = !DILocation(line: 257, column: 11, scope: !6426)
!6453 = !DILocation(line: 258, column: 13, scope: !6426)
!6454 = !DILocation(line: 258, column: 19, scope: !6426)
!6455 = !DILocation(line: 258, column: 17, scope: !6426)
!6456 = !DILocation(line: 258, column: 28, scope: !6426)
!6457 = !DILocation(line: 258, column: 35, scope: !6426)
!6458 = !DILocation(line: 258, column: 33, scope: !6426)
!6459 = !DILocation(line: 258, column: 26, scope: !6426)
!6460 = !DILocation(line: 258, column: 5, scope: !6426)
!6461 = !DILocation(line: 258, column: 11, scope: !6426)
!6462 = !DILocation(line: 260, column: 8, scope: !6400)
!6463 = !DILocation(line: 260, column: 18, scope: !6400)
!6464 = !DILocation(line: 260, column: 27, scope: !6400)
!6465 = distinct !{!6465, !6397, !6466}
!6466 = !DILocation(line: 261, column: 3, scope: !6395)
!6467 = !DILocation(line: 263, column: 7, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 263, column: 7)
!6469 = !DILocation(line: 263, column: 9, scope: !6468)
!6470 = !DILocation(line: 263, column: 7, scope: !6395)
!6471 = !DILocation(line: 264, column: 4, scope: !6468)
!6472 = !DILocation(line: 265, column: 4, scope: !6395)
!6473 = !DILocation(line: 267, column: 7, scope: !6395)
!6474 = !DILocation(line: 267, column: 5, scope: !6395)
!6475 = !DILocation(line: 268, column: 3, scope: !6395)
!6476 = !DILocation(line: 268, column: 11, scope: !6395)
!6477 = !DILocation(line: 269, column: 10, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 268, column: 15)
!6479 = !DILocation(line: 269, column: 8, scope: !6478)
!6480 = !DILocation(line: 270, column: 19, scope: !6478)
!6481 = !DILocation(line: 270, column: 26, scope: !6478)
!6482 = !DILocation(line: 270, column: 24, scope: !6478)
!6483 = !DILocation(line: 270, column: 16, scope: !6478)
!6484 = !DILocation(line: 270, column: 9, scope: !6478)
!6485 = !DILocation(line: 272, column: 8, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 272, column: 8)
!6487 = !DILocation(line: 272, column: 12, scope: !6486)
!6488 = !DILocation(line: 272, column: 8, scope: !6478)
!6489 = !DILocation(line: 273, column: 12, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 272, column: 21)
!6491 = !DILocation(line: 273, column: 5, scope: !6490)
!6492 = !DILocation(line: 273, column: 16, scope: !6490)
!6493 = !DILocation(line: 274, column: 4, scope: !6490)
!6494 = !DILocation(line: 275, column: 13, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 275, column: 13)
!6496 = !DILocation(line: 275, column: 18, scope: !6495)
!6497 = !DILocation(line: 275, column: 13, scope: !6486)
!6498 = !DILocation(line: 276, column: 12, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 275, column: 27)
!6500 = !DILocation(line: 276, column: 5, scope: !6499)
!6501 = !DILocation(line: 276, column: 16, scope: !6499)
!6502 = !DILocation(line: 277, column: 4, scope: !6499)
!6503 = !DILocation(line: 279, column: 13, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 278, column: 9)
!6505 = !DILocation(line: 279, column: 19, scope: !6504)
!6506 = !DILocation(line: 279, column: 17, scope: !6504)
!6507 = !DILocation(line: 279, column: 28, scope: !6504)
!6508 = !DILocation(line: 279, column: 35, scope: !6504)
!6509 = !DILocation(line: 279, column: 33, scope: !6504)
!6510 = !DILocation(line: 279, column: 26, scope: !6504)
!6511 = !DILocation(line: 279, column: 5, scope: !6504)
!6512 = !DILocation(line: 279, column: 11, scope: !6504)
!6513 = !DILocation(line: 280, column: 13, scope: !6504)
!6514 = !DILocation(line: 280, column: 19, scope: !6504)
!6515 = !DILocation(line: 280, column: 17, scope: !6504)
!6516 = !DILocation(line: 280, column: 28, scope: !6504)
!6517 = !DILocation(line: 280, column: 35, scope: !6504)
!6518 = !DILocation(line: 280, column: 33, scope: !6504)
!6519 = !DILocation(line: 280, column: 26, scope: !6504)
!6520 = !DILocation(line: 280, column: 5, scope: !6504)
!6521 = !DILocation(line: 280, column: 11, scope: !6504)
!6522 = !DILocation(line: 281, column: 13, scope: !6504)
!6523 = !DILocation(line: 281, column: 19, scope: !6504)
!6524 = !DILocation(line: 281, column: 17, scope: !6504)
!6525 = !DILocation(line: 281, column: 28, scope: !6504)
!6526 = !DILocation(line: 281, column: 35, scope: !6504)
!6527 = !DILocation(line: 281, column: 33, scope: !6504)
!6528 = !DILocation(line: 281, column: 26, scope: !6504)
!6529 = !DILocation(line: 281, column: 5, scope: !6504)
!6530 = !DILocation(line: 281, column: 11, scope: !6504)
!6531 = !DILocation(line: 282, column: 13, scope: !6504)
!6532 = !DILocation(line: 282, column: 19, scope: !6504)
!6533 = !DILocation(line: 282, column: 17, scope: !6504)
!6534 = !DILocation(line: 282, column: 28, scope: !6504)
!6535 = !DILocation(line: 282, column: 35, scope: !6504)
!6536 = !DILocation(line: 282, column: 33, scope: !6504)
!6537 = !DILocation(line: 282, column: 26, scope: !6504)
!6538 = !DILocation(line: 282, column: 5, scope: !6504)
!6539 = !DILocation(line: 282, column: 11, scope: !6504)
!6540 = !DILocation(line: 284, column: 8, scope: !6478)
!6541 = !DILocation(line: 284, column: 18, scope: !6478)
!6542 = !DILocation(line: 284, column: 27, scope: !6478)
!6543 = distinct !{!6543, !6475, !6544}
!6544 = !DILocation(line: 285, column: 3, scope: !6395)
!6545 = distinct !{!6545, !6392, !6546}
!6546 = !DILocation(line: 286, column: 2, scope: !6349)
!6547 = !DILocation(line: 287, column: 1, scope: !6349)
!6548 = distinct !DISubprogram(name: "do_alphaover_effect_byte", scope: !3, file: !3, line: 161, type: !4612, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!6549 = !DILocalVariable(name: "facf0", arg: 1, scope: !6548, file: !3, line: 161, type: !77)
!6550 = !DILocation(line: 161, column: 44, scope: !6548)
!6551 = !DILocalVariable(name: "facf1", arg: 2, scope: !6548, file: !3, line: 161, type: !77)
!6552 = !DILocation(line: 161, column: 57, scope: !6548)
!6553 = !DILocalVariable(name: "x", arg: 3, scope: !6548, file: !3, line: 161, type: !7)
!6554 = !DILocation(line: 161, column: 68, scope: !6548)
!6555 = !DILocalVariable(name: "y", arg: 4, scope: !6548, file: !3, line: 161, type: !7)
!6556 = !DILocation(line: 161, column: 75, scope: !6548)
!6557 = !DILocalVariable(name: "rect1", arg: 5, scope: !6548, file: !3, line: 161, type: !83)
!6558 = !DILocation(line: 161, column: 94, scope: !6548)
!6559 = !DILocalVariable(name: "rect2", arg: 6, scope: !6548, file: !3, line: 161, type: !83)
!6560 = !DILocation(line: 161, column: 116, scope: !6548)
!6561 = !DILocalVariable(name: "out", arg: 7, scope: !6548, file: !3, line: 161, type: !83)
!6562 = !DILocation(line: 161, column: 138, scope: !6548)
!6563 = !DILocalVariable(name: "fac2", scope: !6548, file: !3, line: 163, type: !77)
!6564 = !DILocation(line: 163, column: 8, scope: !6548)
!6565 = !DILocalVariable(name: "mfac", scope: !6548, file: !3, line: 163, type: !77)
!6566 = !DILocation(line: 163, column: 14, scope: !6548)
!6567 = !DILocalVariable(name: "fac", scope: !6548, file: !3, line: 163, type: !77)
!6568 = !DILocation(line: 163, column: 20, scope: !6548)
!6569 = !DILocalVariable(name: "fac4", scope: !6548, file: !3, line: 163, type: !77)
!6570 = !DILocation(line: 163, column: 25, scope: !6548)
!6571 = !DILocalVariable(name: "xo", scope: !6548, file: !3, line: 164, type: !7)
!6572 = !DILocation(line: 164, column: 6, scope: !6548)
!6573 = !DILocalVariable(name: "cp1", scope: !6548, file: !3, line: 165, type: !83)
!6574 = !DILocation(line: 165, column: 17, scope: !6548)
!6575 = !DILocalVariable(name: "cp2", scope: !6548, file: !3, line: 165, type: !83)
!6576 = !DILocation(line: 165, column: 23, scope: !6548)
!6577 = !DILocalVariable(name: "rt", scope: !6548, file: !3, line: 165, type: !83)
!6578 = !DILocation(line: 165, column: 29, scope: !6548)
!6579 = !DILocalVariable(name: "tempc", scope: !6548, file: !3, line: 166, type: !722)
!6580 = !DILocation(line: 166, column: 8, scope: !6548)
!6581 = !DILocalVariable(name: "rt1", scope: !6548, file: !3, line: 166, type: !722)
!6582 = !DILocation(line: 166, column: 18, scope: !6548)
!6583 = !DILocalVariable(name: "rt2", scope: !6548, file: !3, line: 166, type: !722)
!6584 = !DILocation(line: 166, column: 26, scope: !6548)
!6585 = !DILocation(line: 168, column: 7, scope: !6548)
!6586 = !DILocation(line: 168, column: 5, scope: !6548)
!6587 = !DILocation(line: 169, column: 8, scope: !6548)
!6588 = !DILocation(line: 169, column: 6, scope: !6548)
!6589 = !DILocation(line: 170, column: 8, scope: !6548)
!6590 = !DILocation(line: 170, column: 6, scope: !6548)
!6591 = !DILocation(line: 171, column: 7, scope: !6548)
!6592 = !DILocation(line: 171, column: 5, scope: !6548)
!6593 = !DILocation(line: 173, column: 9, scope: !6548)
!6594 = !DILocation(line: 173, column: 7, scope: !6548)
!6595 = !DILocation(line: 174, column: 9, scope: !6548)
!6596 = !DILocation(line: 174, column: 7, scope: !6548)
!6597 = !DILocation(line: 176, column: 2, scope: !6548)
!6598 = !DILocation(line: 176, column: 10, scope: !6548)
!6599 = !DILocation(line: 177, column: 7, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 176, column: 14)
!6601 = !DILocation(line: 177, column: 5, scope: !6600)
!6602 = !DILocation(line: 178, column: 3, scope: !6600)
!6603 = !DILocation(line: 178, column: 11, scope: !6600)
!6604 = !DILocation(line: 181, column: 35, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 178, column: 15)
!6606 = !DILocation(line: 181, column: 40, scope: !6605)
!6607 = !DILocation(line: 181, column: 4, scope: !6605)
!6608 = !DILocation(line: 182, column: 35, scope: !6605)
!6609 = !DILocation(line: 182, column: 40, scope: !6605)
!6610 = !DILocation(line: 182, column: 4, scope: !6605)
!6611 = !DILocation(line: 184, column: 10, scope: !6605)
!6612 = !DILocation(line: 184, column: 8, scope: !6605)
!6613 = !DILocation(line: 185, column: 18, scope: !6605)
!6614 = !DILocation(line: 185, column: 25, scope: !6605)
!6615 = !DILocation(line: 185, column: 23, scope: !6605)
!6616 = !DILocation(line: 185, column: 16, scope: !6605)
!6617 = !DILocation(line: 185, column: 9, scope: !6605)
!6618 = !DILocation(line: 187, column: 13, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 187, column: 13)
!6620 = !DILocation(line: 187, column: 18, scope: !6619)
!6621 = !DILocation(line: 187, column: 13, scope: !6605)
!6622 = !DILocation(line: 187, column: 71, scope: !6619)
!6623 = !DILocation(line: 187, column: 52, scope: !6619)
!6624 = !DILocation(line: 187, column: 46, scope: !6619)
!6625 = !DILocation(line: 187, column: 27, scope: !6619)
!6626 = !DILocation(line: 187, column: 50, scope: !6619)
!6627 = !DILocation(line: 188, column: 13, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 188, column: 13)
!6629 = !DILocation(line: 188, column: 18, scope: !6628)
!6630 = !DILocation(line: 188, column: 13, scope: !6619)
!6631 = !DILocation(line: 188, column: 71, scope: !6628)
!6632 = !DILocation(line: 188, column: 52, scope: !6628)
!6633 = !DILocation(line: 188, column: 46, scope: !6628)
!6634 = !DILocation(line: 188, column: 27, scope: !6628)
!6635 = !DILocation(line: 188, column: 50, scope: !6628)
!6636 = !DILocation(line: 190, column: 16, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 189, column: 9)
!6638 = !DILocation(line: 190, column: 22, scope: !6637)
!6639 = !DILocation(line: 190, column: 20, scope: !6637)
!6640 = !DILocation(line: 190, column: 31, scope: !6637)
!6641 = !DILocation(line: 190, column: 38, scope: !6637)
!6642 = !DILocation(line: 190, column: 36, scope: !6637)
!6643 = !DILocation(line: 190, column: 29, scope: !6637)
!6644 = !DILocation(line: 190, column: 5, scope: !6637)
!6645 = !DILocation(line: 190, column: 14, scope: !6637)
!6646 = !DILocation(line: 191, column: 16, scope: !6637)
!6647 = !DILocation(line: 191, column: 22, scope: !6637)
!6648 = !DILocation(line: 191, column: 20, scope: !6637)
!6649 = !DILocation(line: 191, column: 31, scope: !6637)
!6650 = !DILocation(line: 191, column: 38, scope: !6637)
!6651 = !DILocation(line: 191, column: 36, scope: !6637)
!6652 = !DILocation(line: 191, column: 29, scope: !6637)
!6653 = !DILocation(line: 191, column: 5, scope: !6637)
!6654 = !DILocation(line: 191, column: 14, scope: !6637)
!6655 = !DILocation(line: 192, column: 16, scope: !6637)
!6656 = !DILocation(line: 192, column: 22, scope: !6637)
!6657 = !DILocation(line: 192, column: 20, scope: !6637)
!6658 = !DILocation(line: 192, column: 31, scope: !6637)
!6659 = !DILocation(line: 192, column: 38, scope: !6637)
!6660 = !DILocation(line: 192, column: 36, scope: !6637)
!6661 = !DILocation(line: 192, column: 29, scope: !6637)
!6662 = !DILocation(line: 192, column: 5, scope: !6637)
!6663 = !DILocation(line: 192, column: 14, scope: !6637)
!6664 = !DILocation(line: 193, column: 16, scope: !6637)
!6665 = !DILocation(line: 193, column: 22, scope: !6637)
!6666 = !DILocation(line: 193, column: 20, scope: !6637)
!6667 = !DILocation(line: 193, column: 31, scope: !6637)
!6668 = !DILocation(line: 193, column: 38, scope: !6637)
!6669 = !DILocation(line: 193, column: 36, scope: !6637)
!6670 = !DILocation(line: 193, column: 29, scope: !6637)
!6671 = !DILocation(line: 193, column: 5, scope: !6637)
!6672 = !DILocation(line: 193, column: 14, scope: !6637)
!6673 = !DILocation(line: 195, column: 36, scope: !6637)
!6674 = !DILocation(line: 195, column: 40, scope: !6637)
!6675 = !DILocation(line: 195, column: 5, scope: !6637)
!6676 = !DILocation(line: 197, column: 8, scope: !6605)
!6677 = !DILocation(line: 197, column: 18, scope: !6605)
!6678 = !DILocation(line: 197, column: 27, scope: !6605)
!6679 = distinct !{!6679, !6602, !6680}
!6680 = !DILocation(line: 198, column: 3, scope: !6600)
!6681 = !DILocation(line: 200, column: 7, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 200, column: 7)
!6683 = !DILocation(line: 200, column: 9, scope: !6682)
!6684 = !DILocation(line: 200, column: 7, scope: !6600)
!6685 = !DILocation(line: 200, column: 15, scope: !6682)
!6686 = !DILocation(line: 201, column: 4, scope: !6600)
!6687 = !DILocation(line: 203, column: 7, scope: !6600)
!6688 = !DILocation(line: 203, column: 5, scope: !6600)
!6689 = !DILocation(line: 204, column: 3, scope: !6600)
!6690 = !DILocation(line: 204, column: 11, scope: !6600)
!6691 = !DILocation(line: 205, column: 35, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 204, column: 15)
!6693 = !DILocation(line: 205, column: 40, scope: !6692)
!6694 = !DILocation(line: 205, column: 4, scope: !6692)
!6695 = !DILocation(line: 206, column: 35, scope: !6692)
!6696 = !DILocation(line: 206, column: 40, scope: !6692)
!6697 = !DILocation(line: 206, column: 4, scope: !6692)
!6698 = !DILocation(line: 208, column: 10, scope: !6692)
!6699 = !DILocation(line: 208, column: 8, scope: !6692)
!6700 = !DILocation(line: 209, column: 19, scope: !6692)
!6701 = !DILocation(line: 209, column: 26, scope: !6692)
!6702 = !DILocation(line: 209, column: 24, scope: !6692)
!6703 = !DILocation(line: 209, column: 16, scope: !6692)
!6704 = !DILocation(line: 209, column: 9, scope: !6692)
!6705 = !DILocation(line: 211, column: 13, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6692, file: !3, line: 211, column: 13)
!6707 = !DILocation(line: 211, column: 18, scope: !6706)
!6708 = !DILocation(line: 211, column: 13, scope: !6692)
!6709 = !DILocation(line: 211, column: 71, scope: !6706)
!6710 = !DILocation(line: 211, column: 52, scope: !6706)
!6711 = !DILocation(line: 211, column: 46, scope: !6706)
!6712 = !DILocation(line: 211, column: 27, scope: !6706)
!6713 = !DILocation(line: 211, column: 50, scope: !6706)
!6714 = !DILocation(line: 212, column: 13, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 212, column: 13)
!6716 = !DILocation(line: 212, column: 18, scope: !6715)
!6717 = !DILocation(line: 212, column: 13, scope: !6706)
!6718 = !DILocation(line: 212, column: 71, scope: !6715)
!6719 = !DILocation(line: 212, column: 52, scope: !6715)
!6720 = !DILocation(line: 212, column: 46, scope: !6715)
!6721 = !DILocation(line: 212, column: 27, scope: !6715)
!6722 = !DILocation(line: 212, column: 50, scope: !6715)
!6723 = !DILocation(line: 214, column: 16, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 213, column: 9)
!6725 = !DILocation(line: 214, column: 22, scope: !6724)
!6726 = !DILocation(line: 214, column: 20, scope: !6724)
!6727 = !DILocation(line: 214, column: 31, scope: !6724)
!6728 = !DILocation(line: 214, column: 38, scope: !6724)
!6729 = !DILocation(line: 214, column: 36, scope: !6724)
!6730 = !DILocation(line: 214, column: 29, scope: !6724)
!6731 = !DILocation(line: 214, column: 5, scope: !6724)
!6732 = !DILocation(line: 214, column: 14, scope: !6724)
!6733 = !DILocation(line: 215, column: 16, scope: !6724)
!6734 = !DILocation(line: 215, column: 22, scope: !6724)
!6735 = !DILocation(line: 215, column: 20, scope: !6724)
!6736 = !DILocation(line: 215, column: 31, scope: !6724)
!6737 = !DILocation(line: 215, column: 38, scope: !6724)
!6738 = !DILocation(line: 215, column: 36, scope: !6724)
!6739 = !DILocation(line: 215, column: 29, scope: !6724)
!6740 = !DILocation(line: 215, column: 5, scope: !6724)
!6741 = !DILocation(line: 215, column: 14, scope: !6724)
!6742 = !DILocation(line: 216, column: 16, scope: !6724)
!6743 = !DILocation(line: 216, column: 22, scope: !6724)
!6744 = !DILocation(line: 216, column: 20, scope: !6724)
!6745 = !DILocation(line: 216, column: 31, scope: !6724)
!6746 = !DILocation(line: 216, column: 38, scope: !6724)
!6747 = !DILocation(line: 216, column: 36, scope: !6724)
!6748 = !DILocation(line: 216, column: 29, scope: !6724)
!6749 = !DILocation(line: 216, column: 5, scope: !6724)
!6750 = !DILocation(line: 216, column: 14, scope: !6724)
!6751 = !DILocation(line: 217, column: 16, scope: !6724)
!6752 = !DILocation(line: 217, column: 22, scope: !6724)
!6753 = !DILocation(line: 217, column: 20, scope: !6724)
!6754 = !DILocation(line: 217, column: 31, scope: !6724)
!6755 = !DILocation(line: 217, column: 38, scope: !6724)
!6756 = !DILocation(line: 217, column: 36, scope: !6724)
!6757 = !DILocation(line: 217, column: 29, scope: !6724)
!6758 = !DILocation(line: 217, column: 5, scope: !6724)
!6759 = !DILocation(line: 217, column: 14, scope: !6724)
!6760 = !DILocation(line: 219, column: 36, scope: !6724)
!6761 = !DILocation(line: 219, column: 40, scope: !6724)
!6762 = !DILocation(line: 219, column: 5, scope: !6724)
!6763 = !DILocation(line: 221, column: 8, scope: !6692)
!6764 = !DILocation(line: 221, column: 18, scope: !6692)
!6765 = !DILocation(line: 221, column: 27, scope: !6692)
!6766 = distinct !{!6766, !6689, !6767}
!6767 = !DILocation(line: 222, column: 3, scope: !6600)
!6768 = distinct !{!6768, !6597, !6769}
!6769 = !DILocation(line: 223, column: 2, scope: !6548)
!6770 = !DILocation(line: 224, column: 1, scope: !6548)
!6771 = distinct !DISubprogram(name: "do_drop_effect_float", scope: !3, file: !3, line: 1096, type: !4389, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!6772 = !DILocalVariable(name: "facf0", arg: 1, scope: !6771, file: !3, line: 1096, type: !77)
!6773 = !DILocation(line: 1096, column: 40, scope: !6771)
!6774 = !DILocalVariable(name: "facf1", arg: 2, scope: !6771, file: !3, line: 1096, type: !77)
!6775 = !DILocation(line: 1096, column: 53, scope: !6771)
!6776 = !DILocalVariable(name: "x", arg: 3, scope: !6771, file: !3, line: 1096, type: !7)
!6777 = !DILocation(line: 1096, column: 64, scope: !6771)
!6778 = !DILocalVariable(name: "y", arg: 4, scope: !6771, file: !3, line: 1096, type: !7)
!6779 = !DILocation(line: 1096, column: 71, scope: !6771)
!6780 = !DILocalVariable(name: "rect2i", arg: 5, scope: !6771, file: !3, line: 1096, type: !76)
!6781 = !DILocation(line: 1096, column: 81, scope: !6771)
!6782 = !DILocalVariable(name: "rect1i", arg: 6, scope: !6771, file: !3, line: 1096, type: !76)
!6783 = !DILocation(line: 1096, column: 96, scope: !6771)
!6784 = !DILocalVariable(name: "outi", arg: 7, scope: !6771, file: !3, line: 1096, type: !76)
!6785 = !DILocation(line: 1096, column: 111, scope: !6771)
!6786 = !DILocalVariable(name: "height", scope: !6771, file: !3, line: 1098, type: !7)
!6787 = !DILocation(line: 1098, column: 6, scope: !6771)
!6788 = !DILocalVariable(name: "width", scope: !6771, file: !3, line: 1098, type: !7)
!6789 = !DILocation(line: 1098, column: 14, scope: !6771)
!6790 = !DILocalVariable(name: "temp", scope: !6771, file: !3, line: 1099, type: !77)
!6791 = !DILocation(line: 1099, column: 8, scope: !6771)
!6792 = !DILocalVariable(name: "fac", scope: !6771, file: !3, line: 1099, type: !77)
!6793 = !DILocation(line: 1099, column: 14, scope: !6771)
!6794 = !DILocalVariable(name: "fac1", scope: !6771, file: !3, line: 1099, type: !77)
!6795 = !DILocation(line: 1099, column: 19, scope: !6771)
!6796 = !DILocalVariable(name: "fac2", scope: !6771, file: !3, line: 1099, type: !77)
!6797 = !DILocation(line: 1099, column: 25, scope: !6771)
!6798 = !DILocalVariable(name: "rt1", scope: !6771, file: !3, line: 1100, type: !76)
!6799 = !DILocation(line: 1100, column: 9, scope: !6771)
!6800 = !DILocalVariable(name: "rt2", scope: !6771, file: !3, line: 1100, type: !76)
!6801 = !DILocation(line: 1100, column: 15, scope: !6771)
!6802 = !DILocalVariable(name: "out", scope: !6771, file: !3, line: 1100, type: !76)
!6803 = !DILocation(line: 1100, column: 21, scope: !6771)
!6804 = !DILocalVariable(name: "field", scope: !6771, file: !3, line: 1101, type: !7)
!6805 = !DILocation(line: 1101, column: 6, scope: !6771)
!6806 = !DILocation(line: 1103, column: 10, scope: !6771)
!6807 = !DILocation(line: 1103, column: 8, scope: !6771)
!6808 = !DILocation(line: 1104, column: 11, scope: !6771)
!6809 = !DILocation(line: 1104, column: 9, scope: !6771)
!6810 = !DILocation(line: 1106, column: 17, scope: !6771)
!6811 = !DILocation(line: 1106, column: 15, scope: !6771)
!6812 = !DILocation(line: 1106, column: 7, scope: !6771)
!6813 = !DILocation(line: 1107, column: 17, scope: !6771)
!6814 = !DILocation(line: 1107, column: 15, scope: !6771)
!6815 = !DILocation(line: 1107, column: 7, scope: !6771)
!6816 = !DILocation(line: 1109, column: 10, scope: !6771)
!6817 = !DILocation(line: 1109, column: 26, scope: !6771)
!6818 = !DILocation(line: 1109, column: 24, scope: !6771)
!6819 = !DILocation(line: 1109, column: 17, scope: !6771)
!6820 = !DILocation(line: 1109, column: 6, scope: !6771)
!6821 = !DILocation(line: 1110, column: 9, scope: !6771)
!6822 = !DILocation(line: 1110, column: 6, scope: !6771)
!6823 = !DILocation(line: 1111, column: 9, scope: !6771)
!6824 = !DILocation(line: 1111, column: 6, scope: !6771)
!6825 = !DILocation(line: 1112, column: 9, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 1112, column: 2)
!6827 = !DILocation(line: 1112, column: 7, scope: !6826)
!6828 = !DILocation(line: 1112, column: 14, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 1112, column: 2)
!6830 = !DILocation(line: 1112, column: 18, scope: !6829)
!6831 = !DILocation(line: 1112, column: 25, scope: !6829)
!6832 = !DILocation(line: 1112, column: 16, scope: !6829)
!6833 = !DILocation(line: 1112, column: 2, scope: !6826)
!6834 = !DILocation(line: 1113, column: 7, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 1113, column: 7)
!6836 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 1112, column: 38)
!6837 = !DILocation(line: 1113, column: 7, scope: !6836)
!6838 = !DILocation(line: 1113, column: 20, scope: !6835)
!6839 = !DILocation(line: 1113, column: 18, scope: !6835)
!6840 = !DILocation(line: 1113, column: 14, scope: !6835)
!6841 = !DILocation(line: 1114, column: 14, scope: !6835)
!6842 = !DILocation(line: 1114, column: 12, scope: !6835)
!6843 = !DILocation(line: 1115, column: 12, scope: !6836)
!6844 = !DILocation(line: 1115, column: 11, scope: !6836)
!6845 = !DILocation(line: 1115, column: 9, scope: !6836)
!6846 = !DILocation(line: 1117, column: 10, scope: !6836)
!6847 = !DILocation(line: 1117, column: 3, scope: !6836)
!6848 = !DILocation(line: 1117, column: 15, scope: !6836)
!6849 = !DILocation(line: 1118, column: 7, scope: !6836)
!6850 = !DILocation(line: 1119, column: 7, scope: !6836)
!6851 = !DILocation(line: 1121, column: 10, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 1121, column: 3)
!6853 = !DILocation(line: 1121, column: 8, scope: !6852)
!6854 = !DILocation(line: 1121, column: 18, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 1121, column: 3)
!6856 = !DILocation(line: 1121, column: 22, scope: !6855)
!6857 = !DILocation(line: 1121, column: 20, scope: !6855)
!6858 = !DILocation(line: 1121, column: 3, scope: !6852)
!6859 = !DILocation(line: 1122, column: 11, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 1121, column: 34)
!6861 = !DILocation(line: 1122, column: 17, scope: !6860)
!6862 = !DILocation(line: 1122, column: 15, scope: !6860)
!6863 = !DILocation(line: 1122, column: 9, scope: !6860)
!6864 = !DILocation(line: 1124, column: 15, scope: !6860)
!6865 = !DILocation(line: 1124, column: 9, scope: !6860)
!6866 = !DILocation(line: 1124, column: 13, scope: !6860)
!6867 = !DILocation(line: 1124, column: 43, scope: !6860)
!6868 = !DILocation(line: 1125, column: 15, scope: !6860)
!6869 = !DILocation(line: 1125, column: 9, scope: !6860)
!6870 = !DILocation(line: 1125, column: 13, scope: !6860)
!6871 = !DILocation(line: 1125, column: 43, scope: !6860)
!6872 = !DILocation(line: 1126, column: 15, scope: !6860)
!6873 = !DILocation(line: 1126, column: 9, scope: !6860)
!6874 = !DILocation(line: 1126, column: 13, scope: !6860)
!6875 = !DILocation(line: 1126, column: 43, scope: !6860)
!6876 = !DILocation(line: 1127, column: 15, scope: !6860)
!6877 = !DILocation(line: 1127, column: 9, scope: !6860)
!6878 = !DILocation(line: 1127, column: 13, scope: !6860)
!6879 = !DILocation(line: 1127, column: 43, scope: !6860)
!6880 = !DILocation(line: 1128, column: 8, scope: !6860)
!6881 = !DILocation(line: 1129, column: 3, scope: !6860)
!6882 = !DILocation(line: 1121, column: 30, scope: !6855)
!6883 = !DILocation(line: 1121, column: 3, scope: !6855)
!6884 = distinct !{!6884, !6858, !6885}
!6885 = !DILocation(line: 1129, column: 3, scope: !6852)
!6886 = !DILocation(line: 1130, column: 7, scope: !6836)
!6887 = !DILocation(line: 1131, column: 2, scope: !6836)
!6888 = !DILocation(line: 1112, column: 34, scope: !6829)
!6889 = !DILocation(line: 1112, column: 2, scope: !6829)
!6890 = distinct !{!6890, !6833, !6891}
!6891 = !DILocation(line: 1131, column: 2, scope: !6826)
!6892 = !DILocation(line: 1132, column: 9, scope: !6771)
!6893 = !DILocation(line: 1132, column: 2, scope: !6771)
!6894 = !DILocation(line: 1132, column: 14, scope: !6771)
!6895 = !DILocation(line: 1132, column: 46, scope: !6771)
!6896 = !DILocation(line: 1132, column: 44, scope: !6771)
!6897 = !DILocation(line: 1133, column: 1, scope: !6771)
!6898 = distinct !DISubprogram(name: "do_drop_effect_byte", scope: !3, file: !3, line: 1058, type: !4612, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!6899 = !DILocalVariable(name: "facf0", arg: 1, scope: !6898, file: !3, line: 1058, type: !77)
!6900 = !DILocation(line: 1058, column: 39, scope: !6898)
!6901 = !DILocalVariable(name: "facf1", arg: 2, scope: !6898, file: !3, line: 1058, type: !77)
!6902 = !DILocation(line: 1058, column: 52, scope: !6898)
!6903 = !DILocalVariable(name: "x", arg: 3, scope: !6898, file: !3, line: 1058, type: !7)
!6904 = !DILocation(line: 1058, column: 63, scope: !6898)
!6905 = !DILocalVariable(name: "y", arg: 4, scope: !6898, file: !3, line: 1058, type: !7)
!6906 = !DILocation(line: 1058, column: 70, scope: !6898)
!6907 = !DILocalVariable(name: "rect2i", arg: 5, scope: !6898, file: !3, line: 1058, type: !83)
!6908 = !DILocation(line: 1058, column: 88, scope: !6898)
!6909 = !DILocalVariable(name: "rect1i", arg: 6, scope: !6898, file: !3, line: 1058, type: !83)
!6910 = !DILocation(line: 1058, column: 111, scope: !6898)
!6911 = !DILocalVariable(name: "outi", arg: 7, scope: !6898, file: !3, line: 1058, type: !83)
!6912 = !DILocation(line: 1058, column: 134, scope: !6898)
!6913 = !DILocalVariable(name: "height", scope: !6898, file: !3, line: 1060, type: !7)
!6914 = !DILocation(line: 1060, column: 6, scope: !6898)
!6915 = !DILocalVariable(name: "width", scope: !6898, file: !3, line: 1060, type: !7)
!6916 = !DILocation(line: 1060, column: 14, scope: !6898)
!6917 = !DILocalVariable(name: "temp", scope: !6898, file: !3, line: 1060, type: !7)
!6918 = !DILocation(line: 1060, column: 21, scope: !6898)
!6919 = !DILocalVariable(name: "fac", scope: !6898, file: !3, line: 1060, type: !7)
!6920 = !DILocation(line: 1060, column: 27, scope: !6898)
!6921 = !DILocalVariable(name: "fac1", scope: !6898, file: !3, line: 1060, type: !7)
!6922 = !DILocation(line: 1060, column: 32, scope: !6898)
!6923 = !DILocalVariable(name: "fac2", scope: !6898, file: !3, line: 1060, type: !7)
!6924 = !DILocation(line: 1060, column: 38, scope: !6898)
!6925 = !DILocalVariable(name: "rt1", scope: !6898, file: !3, line: 1061, type: !83)
!6926 = !DILocation(line: 1061, column: 17, scope: !6898)
!6927 = !DILocalVariable(name: "rt2", scope: !6898, file: !3, line: 1061, type: !83)
!6928 = !DILocation(line: 1061, column: 23, scope: !6898)
!6929 = !DILocalVariable(name: "out", scope: !6898, file: !3, line: 1061, type: !83)
!6930 = !DILocation(line: 1061, column: 29, scope: !6898)
!6931 = !DILocalVariable(name: "field", scope: !6898, file: !3, line: 1062, type: !7)
!6932 = !DILocation(line: 1062, column: 6, scope: !6898)
!6933 = !DILocation(line: 1064, column: 10, scope: !6898)
!6934 = !DILocation(line: 1064, column: 8, scope: !6898)
!6935 = !DILocation(line: 1065, column: 11, scope: !6898)
!6936 = !DILocation(line: 1065, column: 9, scope: !6898)
!6937 = !DILocation(line: 1067, column: 24, scope: !6898)
!6938 = !DILocation(line: 1067, column: 22, scope: !6898)
!6939 = !DILocation(line: 1067, column: 9, scope: !6898)
!6940 = !DILocation(line: 1067, column: 7, scope: !6898)
!6941 = !DILocation(line: 1068, column: 24, scope: !6898)
!6942 = !DILocation(line: 1068, column: 22, scope: !6898)
!6943 = !DILocation(line: 1068, column: 9, scope: !6898)
!6944 = !DILocation(line: 1068, column: 7, scope: !6898)
!6945 = !DILocation(line: 1070, column: 27, scope: !6898)
!6946 = !DILocation(line: 1070, column: 43, scope: !6898)
!6947 = !DILocation(line: 1070, column: 41, scope: !6898)
!6948 = !DILocation(line: 1070, column: 34, scope: !6898)
!6949 = !DILocation(line: 1070, column: 6, scope: !6898)
!6950 = !DILocation(line: 1071, column: 26, scope: !6898)
!6951 = !DILocation(line: 1071, column: 6, scope: !6898)
!6952 = !DILocation(line: 1072, column: 26, scope: !6898)
!6953 = !DILocation(line: 1072, column: 6, scope: !6898)
!6954 = !DILocation(line: 1073, column: 9, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 1073, column: 2)
!6956 = !DILocation(line: 1073, column: 7, scope: !6955)
!6957 = !DILocation(line: 1073, column: 14, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 1073, column: 2)
!6959 = !DILocation(line: 1073, column: 18, scope: !6958)
!6960 = !DILocation(line: 1073, column: 25, scope: !6958)
!6961 = !DILocation(line: 1073, column: 16, scope: !6958)
!6962 = !DILocation(line: 1073, column: 2, scope: !6955)
!6963 = !DILocation(line: 1074, column: 7, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1074, column: 7)
!6965 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 1073, column: 38)
!6966 = !DILocation(line: 1074, column: 7, scope: !6965)
!6967 = !DILocation(line: 1074, column: 20, scope: !6964)
!6968 = !DILocation(line: 1074, column: 18, scope: !6964)
!6969 = !DILocation(line: 1074, column: 14, scope: !6964)
!6970 = !DILocation(line: 1075, column: 14, scope: !6964)
!6971 = !DILocation(line: 1075, column: 12, scope: !6964)
!6972 = !DILocation(line: 1076, column: 12, scope: !6965)
!6973 = !DILocation(line: 1076, column: 11, scope: !6965)
!6974 = !DILocation(line: 1076, column: 9, scope: !6965)
!6975 = !DILocation(line: 1078, column: 10, scope: !6965)
!6976 = !DILocation(line: 1078, column: 15, scope: !6965)
!6977 = !DILocation(line: 1078, column: 3, scope: !6965)
!6978 = !DILocation(line: 1079, column: 7, scope: !6965)
!6979 = !DILocation(line: 1080, column: 7, scope: !6965)
!6980 = !DILocation(line: 1082, column: 10, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 1082, column: 3)
!6982 = !DILocation(line: 1082, column: 8, scope: !6981)
!6983 = !DILocation(line: 1082, column: 18, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 1082, column: 3)
!6985 = !DILocation(line: 1082, column: 22, scope: !6984)
!6986 = !DILocation(line: 1082, column: 20, scope: !6984)
!6987 = !DILocation(line: 1082, column: 3, scope: !6981)
!6988 = !DILocation(line: 1083, column: 13, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 1082, column: 34)
!6990 = !DILocation(line: 1083, column: 19, scope: !6989)
!6991 = !DILocation(line: 1083, column: 17, scope: !6989)
!6992 = !DILocation(line: 1083, column: 27, scope: !6989)
!6993 = !DILocation(line: 1083, column: 9, scope: !6989)
!6994 = !DILocation(line: 1085, column: 15, scope: !6989)
!6995 = !DILocation(line: 1085, column: 9, scope: !6989)
!6996 = !DILocation(line: 1085, column: 13, scope: !6989)
!6997 = !DILocation(line: 1085, column: 40, scope: !6989)
!6998 = !DILocation(line: 1086, column: 15, scope: !6989)
!6999 = !DILocation(line: 1086, column: 9, scope: !6989)
!7000 = !DILocation(line: 1086, column: 13, scope: !6989)
!7001 = !DILocation(line: 1086, column: 40, scope: !6989)
!7002 = !DILocation(line: 1087, column: 15, scope: !6989)
!7003 = !DILocation(line: 1087, column: 9, scope: !6989)
!7004 = !DILocation(line: 1087, column: 13, scope: !6989)
!7005 = !DILocation(line: 1087, column: 40, scope: !6989)
!7006 = !DILocation(line: 1088, column: 15, scope: !6989)
!7007 = !DILocation(line: 1088, column: 9, scope: !6989)
!7008 = !DILocation(line: 1088, column: 13, scope: !6989)
!7009 = !DILocation(line: 1088, column: 40, scope: !6989)
!7010 = !DILocation(line: 1089, column: 8, scope: !6989)
!7011 = !DILocation(line: 1090, column: 3, scope: !6989)
!7012 = !DILocation(line: 1082, column: 30, scope: !6984)
!7013 = !DILocation(line: 1082, column: 3, scope: !6984)
!7014 = distinct !{!7014, !6987, !7015}
!7015 = !DILocation(line: 1090, column: 3, scope: !6981)
!7016 = !DILocation(line: 1091, column: 7, scope: !6965)
!7017 = !DILocation(line: 1092, column: 2, scope: !6965)
!7018 = !DILocation(line: 1073, column: 34, scope: !6958)
!7019 = !DILocation(line: 1073, column: 2, scope: !6958)
!7020 = distinct !{!7020, !6962, !7021}
!7021 = !DILocation(line: 1092, column: 2, scope: !6955)
!7022 = !DILocation(line: 1093, column: 9, scope: !6898)
!7023 = !DILocation(line: 1093, column: 14, scope: !6898)
!7024 = !DILocation(line: 1093, column: 40, scope: !6898)
!7025 = !DILocation(line: 1093, column: 38, scope: !6898)
!7026 = !DILocation(line: 1093, column: 2, scope: !6898)
!7027 = !DILocation(line: 1094, column: 1, scope: !6898)
!7028 = distinct !DISubprogram(name: "do_alphaunder_effect_float", scope: !3, file: !3, line: 383, type: !4389, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!7029 = !DILocalVariable(name: "facf0", arg: 1, scope: !7028, file: !3, line: 383, type: !77)
!7030 = !DILocation(line: 383, column: 46, scope: !7028)
!7031 = !DILocalVariable(name: "facf1", arg: 2, scope: !7028, file: !3, line: 383, type: !77)
!7032 = !DILocation(line: 383, column: 59, scope: !7028)
!7033 = !DILocalVariable(name: "x", arg: 3, scope: !7028, file: !3, line: 383, type: !7)
!7034 = !DILocation(line: 383, column: 70, scope: !7028)
!7035 = !DILocalVariable(name: "y", arg: 4, scope: !7028, file: !3, line: 383, type: !7)
!7036 = !DILocation(line: 383, column: 77, scope: !7028)
!7037 = !DILocalVariable(name: "rect1", arg: 5, scope: !7028, file: !3, line: 383, type: !76)
!7038 = !DILocation(line: 383, column: 88, scope: !7028)
!7039 = !DILocalVariable(name: "rect2", arg: 6, scope: !7028, file: !3, line: 383, type: !76)
!7040 = !DILocation(line: 383, column: 102, scope: !7028)
!7041 = !DILocalVariable(name: "out", arg: 7, scope: !7028, file: !3, line: 383, type: !76)
!7042 = !DILocation(line: 383, column: 116, scope: !7028)
!7043 = !DILocalVariable(name: "fac2", scope: !7028, file: !3, line: 385, type: !77)
!7044 = !DILocation(line: 385, column: 8, scope: !7028)
!7045 = !DILocalVariable(name: "fac", scope: !7028, file: !3, line: 385, type: !77)
!7046 = !DILocation(line: 385, column: 14, scope: !7028)
!7047 = !DILocalVariable(name: "fac4", scope: !7028, file: !3, line: 385, type: !77)
!7048 = !DILocation(line: 385, column: 19, scope: !7028)
!7049 = !DILocalVariable(name: "xo", scope: !7028, file: !3, line: 386, type: !7)
!7050 = !DILocation(line: 386, column: 6, scope: !7028)
!7051 = !DILocalVariable(name: "rt1", scope: !7028, file: !3, line: 387, type: !76)
!7052 = !DILocation(line: 387, column: 9, scope: !7028)
!7053 = !DILocalVariable(name: "rt2", scope: !7028, file: !3, line: 387, type: !76)
!7054 = !DILocation(line: 387, column: 15, scope: !7028)
!7055 = !DILocalVariable(name: "rt", scope: !7028, file: !3, line: 387, type: !76)
!7056 = !DILocation(line: 387, column: 21, scope: !7028)
!7057 = !DILocation(line: 389, column: 7, scope: !7028)
!7058 = !DILocation(line: 389, column: 5, scope: !7028)
!7059 = !DILocation(line: 390, column: 8, scope: !7028)
!7060 = !DILocation(line: 390, column: 6, scope: !7028)
!7061 = !DILocation(line: 391, column: 8, scope: !7028)
!7062 = !DILocation(line: 391, column: 6, scope: !7028)
!7063 = !DILocation(line: 392, column: 7, scope: !7028)
!7064 = !DILocation(line: 392, column: 5, scope: !7028)
!7065 = !DILocation(line: 394, column: 9, scope: !7028)
!7066 = !DILocation(line: 394, column: 7, scope: !7028)
!7067 = !DILocation(line: 395, column: 9, scope: !7028)
!7068 = !DILocation(line: 395, column: 7, scope: !7028)
!7069 = !DILocation(line: 397, column: 2, scope: !7028)
!7070 = !DILocation(line: 397, column: 10, scope: !7028)
!7071 = !DILocation(line: 398, column: 7, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 397, column: 14)
!7073 = !DILocation(line: 398, column: 5, scope: !7072)
!7074 = !DILocation(line: 399, column: 3, scope: !7072)
!7075 = !DILocation(line: 399, column: 11, scope: !7072)
!7076 = !DILocation(line: 405, column: 8, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 405, column: 8)
!7078 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 399, column: 15)
!7079 = !DILocation(line: 405, column: 15, scope: !7077)
!7080 = !DILocation(line: 405, column: 20, scope: !7077)
!7081 = !DILocation(line: 405, column: 23, scope: !7077)
!7082 = !DILocation(line: 405, column: 28, scope: !7077)
!7083 = !DILocation(line: 405, column: 8, scope: !7078)
!7084 = !DILocation(line: 406, column: 12, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 405, column: 37)
!7086 = !DILocation(line: 406, column: 5, scope: !7085)
!7087 = !DILocation(line: 406, column: 16, scope: !7085)
!7088 = !DILocation(line: 407, column: 4, scope: !7085)
!7089 = !DILocation(line: 408, column: 13, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 408, column: 13)
!7091 = !DILocation(line: 408, column: 20, scope: !7090)
!7092 = !DILocation(line: 408, column: 13, scope: !7077)
!7093 = !DILocation(line: 409, column: 12, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 408, column: 29)
!7095 = !DILocation(line: 409, column: 5, scope: !7094)
!7096 = !DILocation(line: 409, column: 16, scope: !7094)
!7097 = !DILocation(line: 410, column: 4, scope: !7094)
!7098 = !DILocation(line: 412, column: 11, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 411, column: 9)
!7100 = !DILocation(line: 412, column: 26, scope: !7099)
!7101 = !DILocation(line: 412, column: 24, scope: !7099)
!7102 = !DILocation(line: 412, column: 16, scope: !7099)
!7103 = !DILocation(line: 412, column: 9, scope: !7099)
!7104 = !DILocation(line: 414, column: 9, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 414, column: 9)
!7106 = !DILocation(line: 414, column: 13, scope: !7105)
!7107 = !DILocation(line: 414, column: 9, scope: !7099)
!7108 = !DILocation(line: 415, column: 13, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 414, column: 19)
!7110 = !DILocation(line: 415, column: 6, scope: !7109)
!7111 = !DILocation(line: 415, column: 17, scope: !7109)
!7112 = !DILocation(line: 416, column: 5, scope: !7109)
!7113 = !DILocation(line: 418, column: 14, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7105, file: !3, line: 417, column: 10)
!7115 = !DILocation(line: 418, column: 20, scope: !7114)
!7116 = !DILocation(line: 418, column: 18, scope: !7114)
!7117 = !DILocation(line: 418, column: 29, scope: !7114)
!7118 = !DILocation(line: 418, column: 27, scope: !7114)
!7119 = !DILocation(line: 418, column: 6, scope: !7114)
!7120 = !DILocation(line: 418, column: 12, scope: !7114)
!7121 = !DILocation(line: 419, column: 14, scope: !7114)
!7122 = !DILocation(line: 419, column: 20, scope: !7114)
!7123 = !DILocation(line: 419, column: 18, scope: !7114)
!7124 = !DILocation(line: 419, column: 29, scope: !7114)
!7125 = !DILocation(line: 419, column: 27, scope: !7114)
!7126 = !DILocation(line: 419, column: 6, scope: !7114)
!7127 = !DILocation(line: 419, column: 12, scope: !7114)
!7128 = !DILocation(line: 420, column: 14, scope: !7114)
!7129 = !DILocation(line: 420, column: 20, scope: !7114)
!7130 = !DILocation(line: 420, column: 18, scope: !7114)
!7131 = !DILocation(line: 420, column: 29, scope: !7114)
!7132 = !DILocation(line: 420, column: 27, scope: !7114)
!7133 = !DILocation(line: 420, column: 6, scope: !7114)
!7134 = !DILocation(line: 420, column: 12, scope: !7114)
!7135 = !DILocation(line: 421, column: 14, scope: !7114)
!7136 = !DILocation(line: 421, column: 20, scope: !7114)
!7137 = !DILocation(line: 421, column: 18, scope: !7114)
!7138 = !DILocation(line: 421, column: 29, scope: !7114)
!7139 = !DILocation(line: 421, column: 27, scope: !7114)
!7140 = !DILocation(line: 421, column: 6, scope: !7114)
!7141 = !DILocation(line: 421, column: 12, scope: !7114)
!7142 = !DILocation(line: 424, column: 8, scope: !7078)
!7143 = !DILocation(line: 424, column: 18, scope: !7078)
!7144 = !DILocation(line: 424, column: 27, scope: !7078)
!7145 = distinct !{!7145, !7074, !7146}
!7146 = !DILocation(line: 425, column: 3, scope: !7072)
!7147 = !DILocation(line: 427, column: 7, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 427, column: 7)
!7149 = !DILocation(line: 427, column: 9, scope: !7148)
!7150 = !DILocation(line: 427, column: 7, scope: !7072)
!7151 = !DILocation(line: 428, column: 4, scope: !7148)
!7152 = !DILocation(line: 429, column: 4, scope: !7072)
!7153 = !DILocation(line: 431, column: 7, scope: !7072)
!7154 = !DILocation(line: 431, column: 5, scope: !7072)
!7155 = !DILocation(line: 432, column: 3, scope: !7072)
!7156 = !DILocation(line: 432, column: 11, scope: !7072)
!7157 = !DILocation(line: 433, column: 8, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 433, column: 8)
!7159 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 432, column: 15)
!7160 = !DILocation(line: 433, column: 15, scope: !7158)
!7161 = !DILocation(line: 433, column: 20, scope: !7158)
!7162 = !DILocation(line: 433, column: 23, scope: !7158)
!7163 = !DILocation(line: 433, column: 28, scope: !7158)
!7164 = !DILocation(line: 433, column: 8, scope: !7159)
!7165 = !DILocation(line: 434, column: 12, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 433, column: 37)
!7167 = !DILocation(line: 434, column: 5, scope: !7166)
!7168 = !DILocation(line: 434, column: 16, scope: !7166)
!7169 = !DILocation(line: 435, column: 4, scope: !7166)
!7170 = !DILocation(line: 436, column: 13, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 436, column: 13)
!7172 = !DILocation(line: 436, column: 20, scope: !7171)
!7173 = !DILocation(line: 436, column: 13, scope: !7158)
!7174 = !DILocation(line: 437, column: 12, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 436, column: 29)
!7176 = !DILocation(line: 437, column: 5, scope: !7175)
!7177 = !DILocation(line: 437, column: 16, scope: !7175)
!7178 = !DILocation(line: 438, column: 4, scope: !7175)
!7179 = !DILocation(line: 440, column: 11, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 439, column: 9)
!7181 = !DILocation(line: 440, column: 26, scope: !7180)
!7182 = !DILocation(line: 440, column: 24, scope: !7180)
!7183 = !DILocation(line: 440, column: 16, scope: !7180)
!7184 = !DILocation(line: 440, column: 9, scope: !7180)
!7185 = !DILocation(line: 442, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 442, column: 9)
!7187 = !DILocation(line: 442, column: 13, scope: !7186)
!7188 = !DILocation(line: 442, column: 9, scope: !7180)
!7189 = !DILocation(line: 443, column: 13, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 442, column: 19)
!7191 = !DILocation(line: 443, column: 6, scope: !7190)
!7192 = !DILocation(line: 443, column: 17, scope: !7190)
!7193 = !DILocation(line: 444, column: 5, scope: !7190)
!7194 = !DILocation(line: 446, column: 14, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 445, column: 10)
!7196 = !DILocation(line: 446, column: 20, scope: !7195)
!7197 = !DILocation(line: 446, column: 18, scope: !7195)
!7198 = !DILocation(line: 446, column: 29, scope: !7195)
!7199 = !DILocation(line: 446, column: 27, scope: !7195)
!7200 = !DILocation(line: 446, column: 6, scope: !7195)
!7201 = !DILocation(line: 446, column: 12, scope: !7195)
!7202 = !DILocation(line: 447, column: 14, scope: !7195)
!7203 = !DILocation(line: 447, column: 20, scope: !7195)
!7204 = !DILocation(line: 447, column: 18, scope: !7195)
!7205 = !DILocation(line: 447, column: 29, scope: !7195)
!7206 = !DILocation(line: 447, column: 27, scope: !7195)
!7207 = !DILocation(line: 447, column: 6, scope: !7195)
!7208 = !DILocation(line: 447, column: 12, scope: !7195)
!7209 = !DILocation(line: 448, column: 14, scope: !7195)
!7210 = !DILocation(line: 448, column: 20, scope: !7195)
!7211 = !DILocation(line: 448, column: 18, scope: !7195)
!7212 = !DILocation(line: 448, column: 29, scope: !7195)
!7213 = !DILocation(line: 448, column: 27, scope: !7195)
!7214 = !DILocation(line: 448, column: 6, scope: !7195)
!7215 = !DILocation(line: 448, column: 12, scope: !7195)
!7216 = !DILocation(line: 449, column: 14, scope: !7195)
!7217 = !DILocation(line: 449, column: 20, scope: !7195)
!7218 = !DILocation(line: 449, column: 18, scope: !7195)
!7219 = !DILocation(line: 449, column: 29, scope: !7195)
!7220 = !DILocation(line: 449, column: 27, scope: !7195)
!7221 = !DILocation(line: 449, column: 6, scope: !7195)
!7222 = !DILocation(line: 449, column: 12, scope: !7195)
!7223 = !DILocation(line: 452, column: 8, scope: !7159)
!7224 = !DILocation(line: 452, column: 18, scope: !7159)
!7225 = !DILocation(line: 452, column: 27, scope: !7159)
!7226 = distinct !{!7226, !7155, !7227}
!7227 = !DILocation(line: 453, column: 3, scope: !7072)
!7228 = distinct !{!7228, !7069, !7229}
!7229 = !DILocation(line: 454, column: 2, scope: !7028)
!7230 = !DILocation(line: 455, column: 1, scope: !7028)
!7231 = distinct !DISubprogram(name: "do_alphaunder_effect_byte", scope: !3, file: !3, line: 311, type: !4612, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!7232 = !DILocalVariable(name: "facf0", arg: 1, scope: !7231, file: !3, line: 311, type: !77)
!7233 = !DILocation(line: 311, column: 45, scope: !7231)
!7234 = !DILocalVariable(name: "facf1", arg: 2, scope: !7231, file: !3, line: 311, type: !77)
!7235 = !DILocation(line: 311, column: 58, scope: !7231)
!7236 = !DILocalVariable(name: "x", arg: 3, scope: !7231, file: !3, line: 311, type: !7)
!7237 = !DILocation(line: 311, column: 69, scope: !7231)
!7238 = !DILocalVariable(name: "y", arg: 4, scope: !7231, file: !3, line: 311, type: !7)
!7239 = !DILocation(line: 311, column: 76, scope: !7231)
!7240 = !DILocalVariable(name: "rect1", arg: 5, scope: !7231, file: !3, line: 311, type: !83)
!7241 = !DILocation(line: 311, column: 94, scope: !7231)
!7242 = !DILocalVariable(name: "rect2", arg: 6, scope: !7231, file: !3, line: 311, type: !83)
!7243 = !DILocation(line: 311, column: 116, scope: !7231)
!7244 = !DILocalVariable(name: "out", arg: 7, scope: !7231, file: !3, line: 311, type: !83)
!7245 = !DILocation(line: 311, column: 138, scope: !7231)
!7246 = !DILocalVariable(name: "fac2", scope: !7231, file: !3, line: 313, type: !77)
!7247 = !DILocation(line: 313, column: 8, scope: !7231)
!7248 = !DILocalVariable(name: "fac", scope: !7231, file: !3, line: 313, type: !77)
!7249 = !DILocation(line: 313, column: 14, scope: !7231)
!7250 = !DILocalVariable(name: "fac4", scope: !7231, file: !3, line: 313, type: !77)
!7251 = !DILocation(line: 313, column: 19, scope: !7231)
!7252 = !DILocalVariable(name: "xo", scope: !7231, file: !3, line: 314, type: !7)
!7253 = !DILocation(line: 314, column: 6, scope: !7231)
!7254 = !DILocalVariable(name: "cp1", scope: !7231, file: !3, line: 315, type: !83)
!7255 = !DILocation(line: 315, column: 17, scope: !7231)
!7256 = !DILocalVariable(name: "cp2", scope: !7231, file: !3, line: 315, type: !83)
!7257 = !DILocation(line: 315, column: 23, scope: !7231)
!7258 = !DILocalVariable(name: "rt", scope: !7231, file: !3, line: 315, type: !83)
!7259 = !DILocation(line: 315, column: 29, scope: !7231)
!7260 = !DILocalVariable(name: "tempc", scope: !7231, file: !3, line: 316, type: !722)
!7261 = !DILocation(line: 316, column: 8, scope: !7231)
!7262 = !DILocalVariable(name: "rt1", scope: !7231, file: !3, line: 316, type: !722)
!7263 = !DILocation(line: 316, column: 18, scope: !7231)
!7264 = !DILocalVariable(name: "rt2", scope: !7231, file: !3, line: 316, type: !722)
!7265 = !DILocation(line: 316, column: 26, scope: !7231)
!7266 = !DILocation(line: 318, column: 7, scope: !7231)
!7267 = !DILocation(line: 318, column: 5, scope: !7231)
!7268 = !DILocation(line: 319, column: 8, scope: !7231)
!7269 = !DILocation(line: 319, column: 6, scope: !7231)
!7270 = !DILocation(line: 320, column: 8, scope: !7231)
!7271 = !DILocation(line: 320, column: 6, scope: !7231)
!7272 = !DILocation(line: 321, column: 7, scope: !7231)
!7273 = !DILocation(line: 321, column: 5, scope: !7231)
!7274 = !DILocation(line: 323, column: 9, scope: !7231)
!7275 = !DILocation(line: 323, column: 7, scope: !7231)
!7276 = !DILocation(line: 324, column: 9, scope: !7231)
!7277 = !DILocation(line: 324, column: 7, scope: !7231)
!7278 = !DILocation(line: 326, column: 2, scope: !7231)
!7279 = !DILocation(line: 326, column: 10, scope: !7231)
!7280 = !DILocation(line: 327, column: 7, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 326, column: 14)
!7282 = !DILocation(line: 327, column: 5, scope: !7281)
!7283 = !DILocation(line: 328, column: 3, scope: !7281)
!7284 = !DILocation(line: 328, column: 11, scope: !7281)
!7285 = !DILocation(line: 330, column: 35, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 328, column: 15)
!7287 = !DILocation(line: 330, column: 40, scope: !7286)
!7288 = !DILocation(line: 330, column: 4, scope: !7286)
!7289 = !DILocation(line: 331, column: 35, scope: !7286)
!7290 = !DILocation(line: 331, column: 40, scope: !7286)
!7291 = !DILocation(line: 331, column: 4, scope: !7286)
!7292 = !DILocation(line: 336, column: 13, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 336, column: 13)
!7294 = !DILocation(line: 336, column: 20, scope: !7293)
!7295 = !DILocation(line: 336, column: 28, scope: !7293)
!7296 = !DILocation(line: 336, column: 31, scope: !7293)
!7297 = !DILocation(line: 336, column: 36, scope: !7293)
!7298 = !DILocation(line: 336, column: 13, scope: !7286)
!7299 = !DILocation(line: 336, column: 89, scope: !7293)
!7300 = !DILocation(line: 336, column: 70, scope: !7293)
!7301 = !DILocation(line: 336, column: 64, scope: !7293)
!7302 = !DILocation(line: 336, column: 45, scope: !7293)
!7303 = !DILocation(line: 336, column: 68, scope: !7293)
!7304 = !DILocation(line: 337, column: 13, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 337, column: 13)
!7306 = !DILocation(line: 337, column: 20, scope: !7305)
!7307 = !DILocation(line: 337, column: 13, scope: !7293)
!7308 = !DILocation(line: 337, column: 89, scope: !7305)
!7309 = !DILocation(line: 337, column: 70, scope: !7305)
!7310 = !DILocation(line: 337, column: 64, scope: !7305)
!7311 = !DILocation(line: 337, column: 45, scope: !7305)
!7312 = !DILocation(line: 337, column: 68, scope: !7305)
!7313 = !DILocation(line: 339, column: 12, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 338, column: 9)
!7315 = !DILocation(line: 339, column: 27, scope: !7314)
!7316 = !DILocation(line: 339, column: 25, scope: !7314)
!7317 = !DILocation(line: 339, column: 17, scope: !7314)
!7318 = !DILocation(line: 339, column: 9, scope: !7314)
!7319 = !DILocation(line: 341, column: 9, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 341, column: 9)
!7321 = !DILocation(line: 341, column: 13, scope: !7320)
!7322 = !DILocation(line: 341, column: 9, scope: !7314)
!7323 = !DILocation(line: 341, column: 63, scope: !7320)
!7324 = !DILocation(line: 341, column: 44, scope: !7320)
!7325 = !DILocation(line: 341, column: 38, scope: !7320)
!7326 = !DILocation(line: 341, column: 19, scope: !7320)
!7327 = !DILocation(line: 341, column: 42, scope: !7320)
!7328 = !DILocation(line: 343, column: 18, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 342, column: 10)
!7330 = !DILocation(line: 343, column: 24, scope: !7329)
!7331 = !DILocation(line: 343, column: 22, scope: !7329)
!7332 = !DILocation(line: 343, column: 33, scope: !7329)
!7333 = !DILocation(line: 343, column: 31, scope: !7329)
!7334 = !DILocation(line: 343, column: 6, scope: !7329)
!7335 = !DILocation(line: 343, column: 15, scope: !7329)
!7336 = !DILocation(line: 344, column: 18, scope: !7329)
!7337 = !DILocation(line: 344, column: 24, scope: !7329)
!7338 = !DILocation(line: 344, column: 22, scope: !7329)
!7339 = !DILocation(line: 344, column: 33, scope: !7329)
!7340 = !DILocation(line: 344, column: 31, scope: !7329)
!7341 = !DILocation(line: 344, column: 6, scope: !7329)
!7342 = !DILocation(line: 344, column: 15, scope: !7329)
!7343 = !DILocation(line: 345, column: 18, scope: !7329)
!7344 = !DILocation(line: 345, column: 24, scope: !7329)
!7345 = !DILocation(line: 345, column: 22, scope: !7329)
!7346 = !DILocation(line: 345, column: 33, scope: !7329)
!7347 = !DILocation(line: 345, column: 31, scope: !7329)
!7348 = !DILocation(line: 345, column: 6, scope: !7329)
!7349 = !DILocation(line: 345, column: 15, scope: !7329)
!7350 = !DILocation(line: 346, column: 18, scope: !7329)
!7351 = !DILocation(line: 346, column: 24, scope: !7329)
!7352 = !DILocation(line: 346, column: 22, scope: !7329)
!7353 = !DILocation(line: 346, column: 33, scope: !7329)
!7354 = !DILocation(line: 346, column: 31, scope: !7329)
!7355 = !DILocation(line: 346, column: 6, scope: !7329)
!7356 = !DILocation(line: 346, column: 15, scope: !7329)
!7357 = !DILocation(line: 348, column: 37, scope: !7329)
!7358 = !DILocation(line: 348, column: 41, scope: !7329)
!7359 = !DILocation(line: 348, column: 6, scope: !7329)
!7360 = !DILocation(line: 351, column: 8, scope: !7286)
!7361 = !DILocation(line: 351, column: 18, scope: !7286)
!7362 = !DILocation(line: 351, column: 27, scope: !7286)
!7363 = distinct !{!7363, !7283, !7364}
!7364 = !DILocation(line: 352, column: 3, scope: !7281)
!7365 = !DILocation(line: 354, column: 7, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 354, column: 7)
!7367 = !DILocation(line: 354, column: 9, scope: !7366)
!7368 = !DILocation(line: 354, column: 7, scope: !7281)
!7369 = !DILocation(line: 355, column: 4, scope: !7366)
!7370 = !DILocation(line: 356, column: 4, scope: !7281)
!7371 = !DILocation(line: 358, column: 7, scope: !7281)
!7372 = !DILocation(line: 358, column: 5, scope: !7281)
!7373 = !DILocation(line: 359, column: 3, scope: !7281)
!7374 = !DILocation(line: 359, column: 11, scope: !7281)
!7375 = !DILocation(line: 360, column: 35, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 359, column: 15)
!7377 = !DILocation(line: 360, column: 40, scope: !7376)
!7378 = !DILocation(line: 360, column: 4, scope: !7376)
!7379 = !DILocation(line: 361, column: 35, scope: !7376)
!7380 = !DILocation(line: 361, column: 40, scope: !7376)
!7381 = !DILocation(line: 361, column: 4, scope: !7376)
!7382 = !DILocation(line: 363, column: 13, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7376, file: !3, line: 363, column: 13)
!7384 = !DILocation(line: 363, column: 20, scope: !7383)
!7385 = !DILocation(line: 363, column: 28, scope: !7383)
!7386 = !DILocation(line: 363, column: 31, scope: !7383)
!7387 = !DILocation(line: 363, column: 36, scope: !7383)
!7388 = !DILocation(line: 363, column: 13, scope: !7376)
!7389 = !DILocation(line: 363, column: 89, scope: !7383)
!7390 = !DILocation(line: 363, column: 70, scope: !7383)
!7391 = !DILocation(line: 363, column: 64, scope: !7383)
!7392 = !DILocation(line: 363, column: 45, scope: !7383)
!7393 = !DILocation(line: 363, column: 68, scope: !7383)
!7394 = !DILocation(line: 364, column: 13, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 364, column: 13)
!7396 = !DILocation(line: 364, column: 20, scope: !7395)
!7397 = !DILocation(line: 364, column: 13, scope: !7383)
!7398 = !DILocation(line: 364, column: 89, scope: !7395)
!7399 = !DILocation(line: 364, column: 70, scope: !7395)
!7400 = !DILocation(line: 364, column: 64, scope: !7395)
!7401 = !DILocation(line: 364, column: 45, scope: !7395)
!7402 = !DILocation(line: 364, column: 68, scope: !7395)
!7403 = !DILocation(line: 366, column: 12, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 365, column: 9)
!7405 = !DILocation(line: 366, column: 27, scope: !7404)
!7406 = !DILocation(line: 366, column: 25, scope: !7404)
!7407 = !DILocation(line: 366, column: 17, scope: !7404)
!7408 = !DILocation(line: 366, column: 9, scope: !7404)
!7409 = !DILocation(line: 368, column: 9, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 368, column: 9)
!7411 = !DILocation(line: 368, column: 13, scope: !7410)
!7412 = !DILocation(line: 368, column: 9, scope: !7404)
!7413 = !DILocation(line: 368, column: 61, scope: !7410)
!7414 = !DILocation(line: 368, column: 43, scope: !7410)
!7415 = !DILocation(line: 368, column: 37, scope: !7410)
!7416 = !DILocation(line: 368, column: 19, scope: !7410)
!7417 = !DILocation(line: 368, column: 41, scope: !7410)
!7418 = !DILocation(line: 370, column: 18, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 369, column: 10)
!7420 = !DILocation(line: 370, column: 24, scope: !7419)
!7421 = !DILocation(line: 370, column: 22, scope: !7419)
!7422 = !DILocation(line: 370, column: 33, scope: !7419)
!7423 = !DILocation(line: 370, column: 31, scope: !7419)
!7424 = !DILocation(line: 370, column: 6, scope: !7419)
!7425 = !DILocation(line: 370, column: 15, scope: !7419)
!7426 = !DILocation(line: 371, column: 18, scope: !7419)
!7427 = !DILocation(line: 371, column: 24, scope: !7419)
!7428 = !DILocation(line: 371, column: 22, scope: !7419)
!7429 = !DILocation(line: 371, column: 33, scope: !7419)
!7430 = !DILocation(line: 371, column: 31, scope: !7419)
!7431 = !DILocation(line: 371, column: 6, scope: !7419)
!7432 = !DILocation(line: 371, column: 15, scope: !7419)
!7433 = !DILocation(line: 372, column: 18, scope: !7419)
!7434 = !DILocation(line: 372, column: 24, scope: !7419)
!7435 = !DILocation(line: 372, column: 22, scope: !7419)
!7436 = !DILocation(line: 372, column: 33, scope: !7419)
!7437 = !DILocation(line: 372, column: 31, scope: !7419)
!7438 = !DILocation(line: 372, column: 6, scope: !7419)
!7439 = !DILocation(line: 372, column: 15, scope: !7419)
!7440 = !DILocation(line: 373, column: 18, scope: !7419)
!7441 = !DILocation(line: 373, column: 24, scope: !7419)
!7442 = !DILocation(line: 373, column: 22, scope: !7419)
!7443 = !DILocation(line: 373, column: 33, scope: !7419)
!7444 = !DILocation(line: 373, column: 31, scope: !7419)
!7445 = !DILocation(line: 373, column: 6, scope: !7419)
!7446 = !DILocation(line: 373, column: 15, scope: !7419)
!7447 = !DILocation(line: 375, column: 37, scope: !7419)
!7448 = !DILocation(line: 375, column: 41, scope: !7419)
!7449 = !DILocation(line: 375, column: 6, scope: !7419)
!7450 = !DILocation(line: 378, column: 8, scope: !7376)
!7451 = !DILocation(line: 378, column: 18, scope: !7376)
!7452 = !DILocation(line: 378, column: 27, scope: !7376)
!7453 = distinct !{!7453, !7373, !7454}
!7454 = !DILocation(line: 379, column: 3, scope: !7281)
!7455 = distinct !{!7455, !7278, !7456}
!7456 = !DILocation(line: 380, column: 2, scope: !7231)
!7457 = !DILocation(line: 381, column: 1, scope: !7231)
!7458 = distinct !DISubprogram(name: "do_wipe_effect_float", scope: !3, file: !3, line: 1619, type: !7459, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!7459 = !DISubroutineType(types: !7460)
!7460 = !{null, !360, !77, !77, !7, !7, !76, !76, !76}
!7461 = !DILocalVariable(name: "seq", arg: 1, scope: !7458, file: !3, line: 1619, type: !360)
!7462 = !DILocation(line: 1619, column: 44, scope: !7458)
!7463 = !DILocalVariable(name: "facf0", arg: 2, scope: !7458, file: !3, line: 1619, type: !77)
!7464 = !DILocation(line: 1619, column: 55, scope: !7458)
!7465 = !DILocalVariable(name: "UNUSED_facf1", arg: 3, scope: !7458, file: !3, line: 1619, type: !77)
!7466 = !DILocation(line: 1619, column: 68, scope: !7458)
!7467 = !DILocalVariable(name: "x", arg: 4, scope: !7458, file: !3, line: 1619, type: !7)
!7468 = !DILocation(line: 1619, column: 87, scope: !7458)
!7469 = !DILocalVariable(name: "y", arg: 5, scope: !7458, file: !3, line: 1619, type: !7)
!7470 = !DILocation(line: 1619, column: 94, scope: !7458)
!7471 = !DILocalVariable(name: "rect1", arg: 6, scope: !7458, file: !3, line: 1619, type: !76)
!7472 = !DILocation(line: 1619, column: 104, scope: !7458)
!7473 = !DILocalVariable(name: "rect2", arg: 7, scope: !7458, file: !3, line: 1620, type: !76)
!7474 = !DILocation(line: 1620, column: 41, scope: !7458)
!7475 = !DILocalVariable(name: "out", arg: 8, scope: !7458, file: !3, line: 1620, type: !76)
!7476 = !DILocation(line: 1620, column: 55, scope: !7458)
!7477 = !DILocalVariable(name: "wipezone", scope: !7458, file: !3, line: 1622, type: !7478)
!7478 = !DIDerivedType(tag: DW_TAG_typedef, name: "WipeZone", file: !3, line: 1257, baseType: !7479)
!7479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WipeZone", file: !3, line: 1251, size: 192, elements: !7480)
!7480 = !{!7481, !7482, !7483, !7484, !7485, !7486}
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !7479, file: !3, line: 1252, baseType: !77, size: 32)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "flip", scope: !7479, file: !3, line: 1253, baseType: !7, size: 32, offset: 32)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "xo", scope: !7479, file: !3, line: 1254, baseType: !7, size: 32, offset: 64)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "yo", scope: !7479, file: !3, line: 1254, baseType: !7, size: 32, offset: 96)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !7479, file: !3, line: 1255, baseType: !7, size: 32, offset: 128)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "pythangle", scope: !7479, file: !3, line: 1256, baseType: !77, size: 32, offset: 160)
!7487 = !DILocation(line: 1622, column: 11, scope: !7458)
!7488 = !DILocalVariable(name: "wipe", scope: !7458, file: !3, line: 1623, type: !87)
!7489 = !DILocation(line: 1623, column: 12, scope: !7458)
!7490 = !DILocation(line: 1623, column: 31, scope: !7458)
!7491 = !DILocation(line: 1623, column: 36, scope: !7458)
!7492 = !DILocation(line: 1623, column: 19, scope: !7458)
!7493 = !DILocalVariable(name: "xo", scope: !7458, file: !3, line: 1624, type: !7)
!7494 = !DILocation(line: 1624, column: 6, scope: !7458)
!7495 = !DILocalVariable(name: "yo", scope: !7458, file: !3, line: 1624, type: !7)
!7496 = !DILocation(line: 1624, column: 10, scope: !7458)
!7497 = !DILocalVariable(name: "rt1", scope: !7458, file: !3, line: 1625, type: !76)
!7498 = !DILocation(line: 1625, column: 9, scope: !7458)
!7499 = !DILocalVariable(name: "rt2", scope: !7458, file: !3, line: 1625, type: !76)
!7500 = !DILocation(line: 1625, column: 15, scope: !7458)
!7501 = !DILocalVariable(name: "rt", scope: !7458, file: !3, line: 1625, type: !76)
!7502 = !DILocation(line: 1625, column: 21, scope: !7458)
!7503 = !DILocation(line: 1627, column: 31, scope: !7458)
!7504 = !DILocation(line: 1627, column: 37, scope: !7458)
!7505 = !DILocation(line: 1627, column: 40, scope: !7458)
!7506 = !DILocation(line: 1627, column: 2, scope: !7458)
!7507 = !DILocation(line: 1629, column: 8, scope: !7458)
!7508 = !DILocation(line: 1629, column: 6, scope: !7458)
!7509 = !DILocation(line: 1630, column: 8, scope: !7458)
!7510 = !DILocation(line: 1630, column: 6, scope: !7458)
!7511 = !DILocation(line: 1631, column: 7, scope: !7458)
!7512 = !DILocation(line: 1631, column: 5, scope: !7458)
!7513 = !DILocation(line: 1633, column: 7, scope: !7458)
!7514 = !DILocation(line: 1633, column: 5, scope: !7458)
!7515 = !DILocation(line: 1634, column: 7, scope: !7458)
!7516 = !DILocation(line: 1634, column: 5, scope: !7458)
!7517 = !DILocation(line: 1635, column: 9, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 1635, column: 2)
!7519 = !DILocation(line: 1635, column: 7, scope: !7518)
!7520 = !DILocation(line: 1635, column: 14, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 1635, column: 2)
!7522 = !DILocation(line: 1635, column: 18, scope: !7521)
!7523 = !DILocation(line: 1635, column: 16, scope: !7521)
!7524 = !DILocation(line: 1635, column: 2, scope: !7518)
!7525 = !DILocation(line: 1636, column: 10, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 1636, column: 3)
!7527 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 1635, column: 27)
!7528 = !DILocation(line: 1636, column: 8, scope: !7526)
!7529 = !DILocation(line: 1636, column: 15, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1636, column: 3)
!7531 = !DILocation(line: 1636, column: 19, scope: !7530)
!7532 = !DILocation(line: 1636, column: 17, scope: !7530)
!7533 = !DILocation(line: 1636, column: 3, scope: !7526)
!7534 = !DILocalVariable(name: "check", scope: !7535, file: !3, line: 1637, type: !77)
!7535 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 1636, column: 28)
!7536 = !DILocation(line: 1637, column: 10, scope: !7535)
!7537 = !DILocation(line: 1637, column: 40, scope: !7535)
!7538 = !DILocation(line: 1637, column: 43, scope: !7535)
!7539 = !DILocation(line: 1637, column: 46, scope: !7535)
!7540 = !DILocation(line: 1637, column: 51, scope: !7535)
!7541 = !DILocation(line: 1637, column: 18, scope: !7535)
!7542 = !DILocation(line: 1638, column: 8, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 1638, column: 8)
!7544 = !DILocation(line: 1638, column: 8, scope: !7535)
!7545 = !DILocation(line: 1639, column: 9, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 1639, column: 9)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 1638, column: 15)
!7548 = !DILocation(line: 1639, column: 9, scope: !7547)
!7549 = !DILocation(line: 1640, column: 14, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 1639, column: 14)
!7551 = !DILocation(line: 1640, column: 23, scope: !7550)
!7552 = !DILocation(line: 1640, column: 21, scope: !7550)
!7553 = !DILocation(line: 1640, column: 31, scope: !7550)
!7554 = !DILocation(line: 1640, column: 45, scope: !7550)
!7555 = !DILocation(line: 1640, column: 43, scope: !7550)
!7556 = !DILocation(line: 1640, column: 38, scope: !7550)
!7557 = !DILocation(line: 1640, column: 29, scope: !7550)
!7558 = !DILocation(line: 1640, column: 6, scope: !7550)
!7559 = !DILocation(line: 1640, column: 12, scope: !7550)
!7560 = !DILocation(line: 1641, column: 14, scope: !7550)
!7561 = !DILocation(line: 1641, column: 23, scope: !7550)
!7562 = !DILocation(line: 1641, column: 21, scope: !7550)
!7563 = !DILocation(line: 1641, column: 31, scope: !7550)
!7564 = !DILocation(line: 1641, column: 45, scope: !7550)
!7565 = !DILocation(line: 1641, column: 43, scope: !7550)
!7566 = !DILocation(line: 1641, column: 38, scope: !7550)
!7567 = !DILocation(line: 1641, column: 29, scope: !7550)
!7568 = !DILocation(line: 1641, column: 6, scope: !7550)
!7569 = !DILocation(line: 1641, column: 12, scope: !7550)
!7570 = !DILocation(line: 1642, column: 14, scope: !7550)
!7571 = !DILocation(line: 1642, column: 23, scope: !7550)
!7572 = !DILocation(line: 1642, column: 21, scope: !7550)
!7573 = !DILocation(line: 1642, column: 31, scope: !7550)
!7574 = !DILocation(line: 1642, column: 45, scope: !7550)
!7575 = !DILocation(line: 1642, column: 43, scope: !7550)
!7576 = !DILocation(line: 1642, column: 38, scope: !7550)
!7577 = !DILocation(line: 1642, column: 29, scope: !7550)
!7578 = !DILocation(line: 1642, column: 6, scope: !7550)
!7579 = !DILocation(line: 1642, column: 12, scope: !7550)
!7580 = !DILocation(line: 1643, column: 14, scope: !7550)
!7581 = !DILocation(line: 1643, column: 23, scope: !7550)
!7582 = !DILocation(line: 1643, column: 21, scope: !7550)
!7583 = !DILocation(line: 1643, column: 31, scope: !7550)
!7584 = !DILocation(line: 1643, column: 45, scope: !7550)
!7585 = !DILocation(line: 1643, column: 43, scope: !7550)
!7586 = !DILocation(line: 1643, column: 38, scope: !7550)
!7587 = !DILocation(line: 1643, column: 29, scope: !7550)
!7588 = !DILocation(line: 1643, column: 6, scope: !7550)
!7589 = !DILocation(line: 1643, column: 12, scope: !7550)
!7590 = !DILocation(line: 1644, column: 5, scope: !7550)
!7591 = !DILocation(line: 1646, column: 6, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 1645, column: 10)
!7593 = !DILocation(line: 1646, column: 12, scope: !7592)
!7594 = !DILocation(line: 1647, column: 6, scope: !7592)
!7595 = !DILocation(line: 1647, column: 12, scope: !7592)
!7596 = !DILocation(line: 1648, column: 6, scope: !7592)
!7597 = !DILocation(line: 1648, column: 12, scope: !7592)
!7598 = !DILocation(line: 1649, column: 6, scope: !7592)
!7599 = !DILocation(line: 1649, column: 12, scope: !7592)
!7600 = !DILocation(line: 1651, column: 4, scope: !7547)
!7601 = !DILocation(line: 1653, column: 9, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 1653, column: 9)
!7603 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 1652, column: 9)
!7604 = !DILocation(line: 1653, column: 9, scope: !7603)
!7605 = !DILocation(line: 1654, column: 14, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 1653, column: 14)
!7607 = !DILocation(line: 1654, column: 6, scope: !7606)
!7608 = !DILocation(line: 1654, column: 12, scope: !7606)
!7609 = !DILocation(line: 1655, column: 14, scope: !7606)
!7610 = !DILocation(line: 1655, column: 6, scope: !7606)
!7611 = !DILocation(line: 1655, column: 12, scope: !7606)
!7612 = !DILocation(line: 1656, column: 14, scope: !7606)
!7613 = !DILocation(line: 1656, column: 6, scope: !7606)
!7614 = !DILocation(line: 1656, column: 12, scope: !7606)
!7615 = !DILocation(line: 1657, column: 14, scope: !7606)
!7616 = !DILocation(line: 1657, column: 6, scope: !7606)
!7617 = !DILocation(line: 1657, column: 12, scope: !7606)
!7618 = !DILocation(line: 1658, column: 5, scope: !7606)
!7619 = !DILocation(line: 1660, column: 6, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 1659, column: 10)
!7621 = !DILocation(line: 1660, column: 12, scope: !7620)
!7622 = !DILocation(line: 1661, column: 6, scope: !7620)
!7623 = !DILocation(line: 1661, column: 12, scope: !7620)
!7624 = !DILocation(line: 1662, column: 6, scope: !7620)
!7625 = !DILocation(line: 1662, column: 12, scope: !7620)
!7626 = !DILocation(line: 1663, column: 6, scope: !7620)
!7627 = !DILocation(line: 1663, column: 12, scope: !7620)
!7628 = !DILocation(line: 1667, column: 7, scope: !7535)
!7629 = !DILocation(line: 1668, column: 8, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 1668, column: 8)
!7631 = !DILocation(line: 1668, column: 12, scope: !7630)
!7632 = !DILocation(line: 1668, column: 8, scope: !7535)
!7633 = !DILocation(line: 1669, column: 9, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 1668, column: 21)
!7635 = !DILocation(line: 1670, column: 4, scope: !7634)
!7636 = !DILocation(line: 1671, column: 8, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 1671, column: 8)
!7638 = !DILocation(line: 1671, column: 12, scope: !7637)
!7639 = !DILocation(line: 1671, column: 8, scope: !7535)
!7640 = !DILocation(line: 1672, column: 9, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 1671, column: 21)
!7642 = !DILocation(line: 1673, column: 4, scope: !7641)
!7643 = !DILocation(line: 1674, column: 3, scope: !7535)
!7644 = !DILocation(line: 1636, column: 24, scope: !7530)
!7645 = !DILocation(line: 1636, column: 3, scope: !7530)
!7646 = distinct !{!7646, !7533, !7647}
!7647 = !DILocation(line: 1674, column: 3, scope: !7526)
!7648 = !DILocation(line: 1675, column: 2, scope: !7527)
!7649 = !DILocation(line: 1635, column: 23, scope: !7521)
!7650 = !DILocation(line: 1635, column: 2, scope: !7521)
!7651 = distinct !{!7651, !7524, !7652}
!7652 = !DILocation(line: 1675, column: 2, scope: !7518)
!7653 = !DILocation(line: 1676, column: 1, scope: !7458)
!7654 = distinct !DISubprogram(name: "do_wipe_effect_byte", scope: !3, file: !3, line: 1553, type: !7655, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!7655 = !DISubroutineType(types: !7656)
!7656 = !{null, !360, !77, !77, !7, !7, !83, !83, !83}
!7657 = !DILocalVariable(name: "seq", arg: 1, scope: !7654, file: !3, line: 1553, type: !360)
!7658 = !DILocation(line: 1553, column: 43, scope: !7654)
!7659 = !DILocalVariable(name: "facf0", arg: 2, scope: !7654, file: !3, line: 1553, type: !77)
!7660 = !DILocation(line: 1553, column: 54, scope: !7654)
!7661 = !DILocalVariable(name: "UNUSED_facf1", arg: 3, scope: !7654, file: !3, line: 1553, type: !77)
!7662 = !DILocation(line: 1553, column: 67, scope: !7654)
!7663 = !DILocalVariable(name: "x", arg: 4, scope: !7654, file: !3, line: 1553, type: !7)
!7664 = !DILocation(line: 1553, column: 87, scope: !7654)
!7665 = !DILocalVariable(name: "y", arg: 5, scope: !7654, file: !3, line: 1553, type: !7)
!7666 = !DILocation(line: 1553, column: 94, scope: !7654)
!7667 = !DILocalVariable(name: "rect1", arg: 6, scope: !7654, file: !3, line: 1553, type: !83)
!7668 = !DILocation(line: 1553, column: 112, scope: !7654)
!7669 = !DILocalVariable(name: "rect2", arg: 7, scope: !7654, file: !3, line: 1554, type: !83)
!7670 = !DILocation(line: 1554, column: 48, scope: !7654)
!7671 = !DILocalVariable(name: "out", arg: 8, scope: !7654, file: !3, line: 1554, type: !83)
!7672 = !DILocation(line: 1554, column: 70, scope: !7654)
!7673 = !DILocalVariable(name: "wipezone", scope: !7654, file: !3, line: 1556, type: !7478)
!7674 = !DILocation(line: 1556, column: 11, scope: !7654)
!7675 = !DILocalVariable(name: "wipe", scope: !7654, file: !3, line: 1557, type: !87)
!7676 = !DILocation(line: 1557, column: 12, scope: !7654)
!7677 = !DILocation(line: 1557, column: 31, scope: !7654)
!7678 = !DILocation(line: 1557, column: 36, scope: !7654)
!7679 = !DILocation(line: 1557, column: 19, scope: !7654)
!7680 = !DILocalVariable(name: "xo", scope: !7654, file: !3, line: 1558, type: !7)
!7681 = !DILocation(line: 1558, column: 6, scope: !7654)
!7682 = !DILocalVariable(name: "yo", scope: !7654, file: !3, line: 1558, type: !7)
!7683 = !DILocation(line: 1558, column: 10, scope: !7654)
!7684 = !DILocalVariable(name: "cp1", scope: !7654, file: !3, line: 1559, type: !83)
!7685 = !DILocation(line: 1559, column: 17, scope: !7654)
!7686 = !DILocalVariable(name: "cp2", scope: !7654, file: !3, line: 1559, type: !83)
!7687 = !DILocation(line: 1559, column: 23, scope: !7654)
!7688 = !DILocalVariable(name: "rt", scope: !7654, file: !3, line: 1559, type: !83)
!7689 = !DILocation(line: 1559, column: 29, scope: !7654)
!7690 = !DILocation(line: 1561, column: 31, scope: !7654)
!7691 = !DILocation(line: 1561, column: 37, scope: !7654)
!7692 = !DILocation(line: 1561, column: 40, scope: !7654)
!7693 = !DILocation(line: 1561, column: 2, scope: !7654)
!7694 = !DILocation(line: 1563, column: 8, scope: !7654)
!7695 = !DILocation(line: 1563, column: 6, scope: !7654)
!7696 = !DILocation(line: 1564, column: 8, scope: !7654)
!7697 = !DILocation(line: 1564, column: 6, scope: !7654)
!7698 = !DILocation(line: 1565, column: 7, scope: !7654)
!7699 = !DILocation(line: 1565, column: 5, scope: !7654)
!7700 = !DILocation(line: 1567, column: 7, scope: !7654)
!7701 = !DILocation(line: 1567, column: 5, scope: !7654)
!7702 = !DILocation(line: 1568, column: 7, scope: !7654)
!7703 = !DILocation(line: 1568, column: 5, scope: !7654)
!7704 = !DILocation(line: 1569, column: 9, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 1569, column: 2)
!7706 = !DILocation(line: 1569, column: 7, scope: !7705)
!7707 = !DILocation(line: 1569, column: 14, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1569, column: 2)
!7709 = !DILocation(line: 1569, column: 18, scope: !7708)
!7710 = !DILocation(line: 1569, column: 16, scope: !7708)
!7711 = !DILocation(line: 1569, column: 2, scope: !7705)
!7712 = !DILocation(line: 1570, column: 10, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 1570, column: 3)
!7714 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 1569, column: 27)
!7715 = !DILocation(line: 1570, column: 8, scope: !7713)
!7716 = !DILocation(line: 1570, column: 15, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 1570, column: 3)
!7718 = !DILocation(line: 1570, column: 19, scope: !7717)
!7719 = !DILocation(line: 1570, column: 17, scope: !7717)
!7720 = !DILocation(line: 1570, column: 3, scope: !7713)
!7721 = !DILocalVariable(name: "check", scope: !7722, file: !3, line: 1571, type: !77)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 1570, column: 28)
!7723 = !DILocation(line: 1571, column: 10, scope: !7722)
!7724 = !DILocation(line: 1571, column: 40, scope: !7722)
!7725 = !DILocation(line: 1571, column: 43, scope: !7722)
!7726 = !DILocation(line: 1571, column: 46, scope: !7722)
!7727 = !DILocation(line: 1571, column: 51, scope: !7722)
!7728 = !DILocation(line: 1571, column: 18, scope: !7722)
!7729 = !DILocation(line: 1572, column: 8, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1572, column: 8)
!7731 = !DILocation(line: 1572, column: 8, scope: !7722)
!7732 = !DILocation(line: 1573, column: 9, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 1573, column: 9)
!7734 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 1572, column: 15)
!7735 = !DILocation(line: 1573, column: 9, scope: !7734)
!7736 = !DILocalVariable(name: "rt1", scope: !7737, file: !3, line: 1574, type: !722)
!7737 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 1573, column: 14)
!7738 = !DILocation(line: 1574, column: 12, scope: !7737)
!7739 = !DILocalVariable(name: "rt2", scope: !7737, file: !3, line: 1574, type: !722)
!7740 = !DILocation(line: 1574, column: 20, scope: !7737)
!7741 = !DILocalVariable(name: "tempc", scope: !7737, file: !3, line: 1574, type: !722)
!7742 = !DILocation(line: 1574, column: 28, scope: !7737)
!7743 = !DILocation(line: 1576, column: 37, scope: !7737)
!7744 = !DILocation(line: 1576, column: 42, scope: !7737)
!7745 = !DILocation(line: 1576, column: 6, scope: !7737)
!7746 = !DILocation(line: 1577, column: 37, scope: !7737)
!7747 = !DILocation(line: 1577, column: 42, scope: !7737)
!7748 = !DILocation(line: 1577, column: 6, scope: !7737)
!7749 = !DILocation(line: 1579, column: 17, scope: !7737)
!7750 = !DILocation(line: 1579, column: 26, scope: !7737)
!7751 = !DILocation(line: 1579, column: 24, scope: !7737)
!7752 = !DILocation(line: 1579, column: 34, scope: !7737)
!7753 = !DILocation(line: 1579, column: 48, scope: !7737)
!7754 = !DILocation(line: 1579, column: 46, scope: !7737)
!7755 = !DILocation(line: 1579, column: 41, scope: !7737)
!7756 = !DILocation(line: 1579, column: 32, scope: !7737)
!7757 = !DILocation(line: 1579, column: 6, scope: !7737)
!7758 = !DILocation(line: 1579, column: 15, scope: !7737)
!7759 = !DILocation(line: 1580, column: 17, scope: !7737)
!7760 = !DILocation(line: 1580, column: 26, scope: !7737)
!7761 = !DILocation(line: 1580, column: 24, scope: !7737)
!7762 = !DILocation(line: 1580, column: 34, scope: !7737)
!7763 = !DILocation(line: 1580, column: 48, scope: !7737)
!7764 = !DILocation(line: 1580, column: 46, scope: !7737)
!7765 = !DILocation(line: 1580, column: 41, scope: !7737)
!7766 = !DILocation(line: 1580, column: 32, scope: !7737)
!7767 = !DILocation(line: 1580, column: 6, scope: !7737)
!7768 = !DILocation(line: 1580, column: 15, scope: !7737)
!7769 = !DILocation(line: 1581, column: 17, scope: !7737)
!7770 = !DILocation(line: 1581, column: 26, scope: !7737)
!7771 = !DILocation(line: 1581, column: 24, scope: !7737)
!7772 = !DILocation(line: 1581, column: 34, scope: !7737)
!7773 = !DILocation(line: 1581, column: 48, scope: !7737)
!7774 = !DILocation(line: 1581, column: 46, scope: !7737)
!7775 = !DILocation(line: 1581, column: 41, scope: !7737)
!7776 = !DILocation(line: 1581, column: 32, scope: !7737)
!7777 = !DILocation(line: 1581, column: 6, scope: !7737)
!7778 = !DILocation(line: 1581, column: 15, scope: !7737)
!7779 = !DILocation(line: 1582, column: 17, scope: !7737)
!7780 = !DILocation(line: 1582, column: 26, scope: !7737)
!7781 = !DILocation(line: 1582, column: 24, scope: !7737)
!7782 = !DILocation(line: 1582, column: 34, scope: !7737)
!7783 = !DILocation(line: 1582, column: 48, scope: !7737)
!7784 = !DILocation(line: 1582, column: 46, scope: !7737)
!7785 = !DILocation(line: 1582, column: 41, scope: !7737)
!7786 = !DILocation(line: 1582, column: 32, scope: !7737)
!7787 = !DILocation(line: 1582, column: 6, scope: !7737)
!7788 = !DILocation(line: 1582, column: 15, scope: !7737)
!7789 = !DILocation(line: 1584, column: 37, scope: !7737)
!7790 = !DILocation(line: 1584, column: 41, scope: !7737)
!7791 = !DILocation(line: 1584, column: 6, scope: !7737)
!7792 = !DILocation(line: 1585, column: 5, scope: !7737)
!7793 = !DILocation(line: 1587, column: 6, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 1586, column: 10)
!7795 = !DILocation(line: 1587, column: 12, scope: !7794)
!7796 = !DILocation(line: 1588, column: 6, scope: !7794)
!7797 = !DILocation(line: 1588, column: 12, scope: !7794)
!7798 = !DILocation(line: 1589, column: 6, scope: !7794)
!7799 = !DILocation(line: 1589, column: 12, scope: !7794)
!7800 = !DILocation(line: 1590, column: 6, scope: !7794)
!7801 = !DILocation(line: 1590, column: 12, scope: !7794)
!7802 = !DILocation(line: 1592, column: 4, scope: !7734)
!7803 = !DILocation(line: 1594, column: 9, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !3, line: 1594, column: 9)
!7805 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 1593, column: 9)
!7806 = !DILocation(line: 1594, column: 9, scope: !7805)
!7807 = !DILocation(line: 1595, column: 14, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1594, column: 14)
!7809 = !DILocation(line: 1595, column: 6, scope: !7808)
!7810 = !DILocation(line: 1595, column: 12, scope: !7808)
!7811 = !DILocation(line: 1596, column: 14, scope: !7808)
!7812 = !DILocation(line: 1596, column: 6, scope: !7808)
!7813 = !DILocation(line: 1596, column: 12, scope: !7808)
!7814 = !DILocation(line: 1597, column: 14, scope: !7808)
!7815 = !DILocation(line: 1597, column: 6, scope: !7808)
!7816 = !DILocation(line: 1597, column: 12, scope: !7808)
!7817 = !DILocation(line: 1598, column: 14, scope: !7808)
!7818 = !DILocation(line: 1598, column: 6, scope: !7808)
!7819 = !DILocation(line: 1598, column: 12, scope: !7808)
!7820 = !DILocation(line: 1599, column: 5, scope: !7808)
!7821 = !DILocation(line: 1601, column: 6, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 1600, column: 10)
!7823 = !DILocation(line: 1601, column: 12, scope: !7822)
!7824 = !DILocation(line: 1602, column: 6, scope: !7822)
!7825 = !DILocation(line: 1602, column: 12, scope: !7822)
!7826 = !DILocation(line: 1603, column: 6, scope: !7822)
!7827 = !DILocation(line: 1603, column: 12, scope: !7822)
!7828 = !DILocation(line: 1604, column: 6, scope: !7822)
!7829 = !DILocation(line: 1604, column: 12, scope: !7822)
!7830 = !DILocation(line: 1608, column: 7, scope: !7722)
!7831 = !DILocation(line: 1609, column: 8, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1609, column: 8)
!7833 = !DILocation(line: 1609, column: 12, scope: !7832)
!7834 = !DILocation(line: 1609, column: 8, scope: !7722)
!7835 = !DILocation(line: 1610, column: 9, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 1609, column: 21)
!7837 = !DILocation(line: 1611, column: 4, scope: !7836)
!7838 = !DILocation(line: 1612, column: 8, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1612, column: 8)
!7840 = !DILocation(line: 1612, column: 12, scope: !7839)
!7841 = !DILocation(line: 1612, column: 8, scope: !7722)
!7842 = !DILocation(line: 1613, column: 9, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1612, column: 21)
!7844 = !DILocation(line: 1614, column: 4, scope: !7843)
!7845 = !DILocation(line: 1615, column: 3, scope: !7722)
!7846 = !DILocation(line: 1570, column: 24, scope: !7717)
!7847 = !DILocation(line: 1570, column: 3, scope: !7717)
!7848 = distinct !{!7848, !7720, !7849}
!7849 = !DILocation(line: 1615, column: 3, scope: !7713)
!7850 = !DILocation(line: 1616, column: 2, scope: !7714)
!7851 = !DILocation(line: 1569, column: 23, scope: !7708)
!7852 = !DILocation(line: 1569, column: 2, scope: !7708)
!7853 = distinct !{!7853, !7711, !7854}
!7854 = !DILocation(line: 1616, column: 2, scope: !7705)
!7855 = !DILocation(line: 1617, column: 1, scope: !7654)
!7856 = distinct !DISubprogram(name: "precalc_wipe_zone", scope: !3, file: !3, line: 1259, type: !7857, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{null, !7859, !87, !7, !7}
!7859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7478, size: 64)
!7860 = !DILocalVariable(name: "wipezone", arg: 1, scope: !7856, file: !3, line: 1259, type: !7859)
!7861 = !DILocation(line: 1259, column: 41, scope: !7856)
!7862 = !DILocalVariable(name: "wipe", arg: 2, scope: !7856, file: !3, line: 1259, type: !87)
!7863 = !DILocation(line: 1259, column: 61, scope: !7856)
!7864 = !DILocalVariable(name: "xo", arg: 3, scope: !7856, file: !3, line: 1259, type: !7)
!7865 = !DILocation(line: 1259, column: 71, scope: !7856)
!7866 = !DILocalVariable(name: "yo", arg: 4, scope: !7856, file: !3, line: 1259, type: !7)
!7867 = !DILocation(line: 1259, column: 79, scope: !7856)
!7868 = !DILocation(line: 1261, column: 20, scope: !7856)
!7869 = !DILocation(line: 1261, column: 26, scope: !7856)
!7870 = !DILocation(line: 1261, column: 32, scope: !7856)
!7871 = !DILocation(line: 1261, column: 2, scope: !7856)
!7872 = !DILocation(line: 1261, column: 12, scope: !7856)
!7873 = !DILocation(line: 1261, column: 17, scope: !7856)
!7874 = !DILocation(line: 1262, column: 31, scope: !7856)
!7875 = !DILocation(line: 1262, column: 37, scope: !7856)
!7876 = !DILocation(line: 1262, column: 25, scope: !7856)
!7877 = !DILocation(line: 1262, column: 20, scope: !7856)
!7878 = !DILocation(line: 1262, column: 2, scope: !7856)
!7879 = !DILocation(line: 1262, column: 12, scope: !7856)
!7880 = !DILocation(line: 1262, column: 18, scope: !7856)
!7881 = !DILocation(line: 1263, column: 17, scope: !7856)
!7882 = !DILocation(line: 1263, column: 2, scope: !7856)
!7883 = !DILocation(line: 1263, column: 12, scope: !7856)
!7884 = !DILocation(line: 1263, column: 15, scope: !7856)
!7885 = !DILocation(line: 1264, column: 17, scope: !7856)
!7886 = !DILocation(line: 1264, column: 2, scope: !7856)
!7887 = !DILocation(line: 1264, column: 12, scope: !7856)
!7888 = !DILocation(line: 1264, column: 15, scope: !7856)
!7889 = !DILocation(line: 1265, column: 26, scope: !7856)
!7890 = !DILocation(line: 1265, column: 32, scope: !7856)
!7891 = !DILocation(line: 1265, column: 46, scope: !7856)
!7892 = !DILocation(line: 1265, column: 51, scope: !7856)
!7893 = !DILocation(line: 1265, column: 49, scope: !7856)
!7894 = !DILocation(line: 1265, column: 45, scope: !7856)
!7895 = !DILocation(line: 1265, column: 55, scope: !7856)
!7896 = !DILocation(line: 1265, column: 42, scope: !7856)
!7897 = !DILocation(line: 1265, column: 20, scope: !7856)
!7898 = !DILocation(line: 1265, column: 2, scope: !7856)
!7899 = !DILocation(line: 1265, column: 12, scope: !7856)
!7900 = !DILocation(line: 1265, column: 18, scope: !7856)
!7901 = !DILocation(line: 1266, column: 37, scope: !7856)
!7902 = !DILocation(line: 1266, column: 47, scope: !7856)
!7903 = !DILocation(line: 1266, column: 55, scope: !7856)
!7904 = !DILocation(line: 1266, column: 65, scope: !7856)
!7905 = !DILocation(line: 1266, column: 53, scope: !7856)
!7906 = !DILocation(line: 1266, column: 71, scope: !7856)
!7907 = !DILocation(line: 1266, column: 31, scope: !7856)
!7908 = !DILocation(line: 1266, column: 29, scope: !7856)
!7909 = !DILocation(line: 1266, column: 2, scope: !7856)
!7910 = !DILocation(line: 1266, column: 12, scope: !7856)
!7911 = !DILocation(line: 1266, column: 22, scope: !7856)
!7912 = !DILocation(line: 1267, column: 1, scope: !7856)
!7913 = distinct !DISubprogram(name: "check_zone", scope: !3, file: !3, line: 1291, type: !7914, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{!77, !7859, !7, !7, !360, !77}
!7916 = !DILocalVariable(name: "wipezone", arg: 1, scope: !7913, file: !3, line: 1291, type: !7859)
!7917 = !DILocation(line: 1291, column: 35, scope: !7913)
!7918 = !DILocalVariable(name: "x", arg: 2, scope: !7913, file: !3, line: 1291, type: !7)
!7919 = !DILocation(line: 1291, column: 49, scope: !7913)
!7920 = !DILocalVariable(name: "y", arg: 3, scope: !7913, file: !3, line: 1291, type: !7)
!7921 = !DILocation(line: 1291, column: 56, scope: !7913)
!7922 = !DILocalVariable(name: "seq", arg: 4, scope: !7913, file: !3, line: 1291, type: !360)
!7923 = !DILocation(line: 1291, column: 69, scope: !7913)
!7924 = !DILocalVariable(name: "facf0", arg: 5, scope: !7913, file: !3, line: 1291, type: !77)
!7925 = !DILocation(line: 1291, column: 80, scope: !7913)
!7926 = !DILocalVariable(name: "posx", scope: !7913, file: !3, line: 1293, type: !77)
!7927 = !DILocation(line: 1293, column: 8, scope: !7913)
!7928 = !DILocalVariable(name: "posy", scope: !7913, file: !3, line: 1293, type: !77)
!7929 = !DILocation(line: 1293, column: 14, scope: !7913)
!7930 = !DILocalVariable(name: "hyp", scope: !7913, file: !3, line: 1293, type: !77)
!7931 = !DILocation(line: 1293, column: 20, scope: !7913)
!7932 = !DILocalVariable(name: "hyp2", scope: !7913, file: !3, line: 1293, type: !77)
!7933 = !DILocation(line: 1293, column: 25, scope: !7913)
!7934 = !DILocalVariable(name: "angle", scope: !7913, file: !3, line: 1293, type: !77)
!7935 = !DILocation(line: 1293, column: 31, scope: !7913)
!7936 = !DILocalVariable(name: "hwidth", scope: !7913, file: !3, line: 1293, type: !77)
!7937 = !DILocation(line: 1293, column: 38, scope: !7913)
!7938 = !DILocalVariable(name: "b1", scope: !7913, file: !3, line: 1293, type: !77)
!7939 = !DILocation(line: 1293, column: 46, scope: !7913)
!7940 = !DILocalVariable(name: "b2", scope: !7913, file: !3, line: 1293, type: !77)
!7941 = !DILocation(line: 1293, column: 50, scope: !7913)
!7942 = !DILocalVariable(name: "b3", scope: !7913, file: !3, line: 1293, type: !77)
!7943 = !DILocation(line: 1293, column: 54, scope: !7913)
!7944 = !DILocalVariable(name: "pointdist", scope: !7913, file: !3, line: 1293, type: !77)
!7945 = !DILocation(line: 1293, column: 58, scope: !7913)
!7946 = !DILocalVariable(name: "temp1", scope: !7913, file: !3, line: 1296, type: !77)
!7947 = !DILocation(line: 1296, column: 8, scope: !7913)
!7948 = !DILocalVariable(name: "temp2", scope: !7913, file: !3, line: 1296, type: !77)
!7949 = !DILocation(line: 1296, column: 15, scope: !7913)
!7950 = !DILocalVariable(name: "temp3", scope: !7913, file: !3, line: 1296, type: !77)
!7951 = !DILocation(line: 1296, column: 22, scope: !7913)
!7952 = !DILocalVariable(name: "temp4", scope: !7913, file: !3, line: 1296, type: !77)
!7953 = !DILocation(line: 1296, column: 29, scope: !7913)
!7954 = !DILocalVariable(name: "xo", scope: !7913, file: !3, line: 1297, type: !7)
!7955 = !DILocation(line: 1297, column: 6, scope: !7913)
!7956 = !DILocation(line: 1297, column: 11, scope: !7913)
!7957 = !DILocation(line: 1297, column: 21, scope: !7913)
!7958 = !DILocalVariable(name: "yo", scope: !7913, file: !3, line: 1298, type: !7)
!7959 = !DILocation(line: 1298, column: 6, scope: !7913)
!7960 = !DILocation(line: 1298, column: 11, scope: !7913)
!7961 = !DILocation(line: 1298, column: 21, scope: !7913)
!7962 = !DILocalVariable(name: "halfx", scope: !7913, file: !3, line: 1299, type: !77)
!7963 = !DILocation(line: 1299, column: 8, scope: !7913)
!7964 = !DILocation(line: 1299, column: 16, scope: !7913)
!7965 = !DILocation(line: 1299, column: 19, scope: !7913)
!7966 = !DILocalVariable(name: "halfy", scope: !7913, file: !3, line: 1300, type: !77)
!7967 = !DILocation(line: 1300, column: 8, scope: !7913)
!7968 = !DILocation(line: 1300, column: 16, scope: !7913)
!7969 = !DILocation(line: 1300, column: 19, scope: !7913)
!7970 = !DILocalVariable(name: "widthf", scope: !7913, file: !3, line: 1301, type: !77)
!7971 = !DILocation(line: 1301, column: 8, scope: !7913)
!7972 = !DILocalVariable(name: "output", scope: !7913, file: !3, line: 1301, type: !77)
!7973 = !DILocation(line: 1301, column: 16, scope: !7913)
!7974 = !DILocalVariable(name: "wipe", scope: !7913, file: !3, line: 1302, type: !87)
!7975 = !DILocation(line: 1302, column: 12, scope: !7913)
!7976 = !DILocation(line: 1302, column: 31, scope: !7913)
!7977 = !DILocation(line: 1302, column: 36, scope: !7913)
!7978 = !DILocation(line: 1302, column: 19, scope: !7913)
!7979 = !DILocalVariable(name: "width", scope: !7913, file: !3, line: 1303, type: !7)
!7980 = !DILocation(line: 1303, column: 6, scope: !7913)
!7981 = !DILocation(line: 1305, column: 6, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1305, column: 6)
!7983 = !DILocation(line: 1305, column: 16, scope: !7982)
!7984 = !DILocation(line: 1305, column: 6, scope: !7913)
!7985 = !DILocation(line: 1305, column: 26, scope: !7982)
!7986 = !DILocation(line: 1305, column: 31, scope: !7982)
!7987 = !DILocation(line: 1305, column: 29, scope: !7982)
!7988 = !DILocation(line: 1305, column: 24, scope: !7982)
!7989 = !DILocation(line: 1305, column: 22, scope: !7982)
!7990 = !DILocation(line: 1306, column: 10, scope: !7913)
!7991 = !DILocation(line: 1306, column: 20, scope: !7913)
!7992 = !DILocation(line: 1306, column: 8, scope: !7913)
!7993 = !DILocation(line: 1308, column: 6, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1308, column: 6)
!7995 = !DILocation(line: 1308, column: 12, scope: !7994)
!7996 = !DILocation(line: 1308, column: 6, scope: !7913)
!7997 = !DILocation(line: 1309, column: 10, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 1308, column: 21)
!7999 = !DILocation(line: 1309, column: 18, scope: !7998)
!8000 = !DILocation(line: 1309, column: 16, scope: !7998)
!8001 = !DILocation(line: 1309, column: 8, scope: !7998)
!8002 = !DILocation(line: 1310, column: 10, scope: !7998)
!8003 = !DILocation(line: 1310, column: 18, scope: !7998)
!8004 = !DILocation(line: 1310, column: 16, scope: !7998)
!8005 = !DILocation(line: 1310, column: 8, scope: !7998)
!8006 = !DILocation(line: 1311, column: 2, scope: !7998)
!8007 = !DILocation(line: 1313, column: 10, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 1312, column: 7)
!8009 = !DILocation(line: 1313, column: 15, scope: !8008)
!8010 = !DILocation(line: 1313, column: 23, scope: !8008)
!8011 = !DILocation(line: 1313, column: 21, scope: !8008)
!8012 = !DILocation(line: 1313, column: 13, scope: !8008)
!8013 = !DILocation(line: 1313, column: 8, scope: !8008)
!8014 = !DILocation(line: 1314, column: 10, scope: !8008)
!8015 = !DILocation(line: 1314, column: 15, scope: !8008)
!8016 = !DILocation(line: 1314, column: 23, scope: !8008)
!8017 = !DILocation(line: 1314, column: 21, scope: !8008)
!8018 = !DILocation(line: 1314, column: 13, scope: !8008)
!8019 = !DILocation(line: 1314, column: 8, scope: !8008)
!8020 = !DILocation(line: 1317, column: 10, scope: !7913)
!8021 = !DILocation(line: 1317, column: 16, scope: !7913)
!8022 = !DILocation(line: 1317, column: 2, scope: !7913)
!8023 = !DILocation(line: 1319, column: 19, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1317, column: 26)
!8025 = !DILocation(line: 1319, column: 29, scope: !8024)
!8026 = !DILocation(line: 1319, column: 36, scope: !8024)
!8027 = !DILocation(line: 1319, column: 44, scope: !8024)
!8028 = !DILocation(line: 1319, column: 42, scope: !8024)
!8029 = !DILocation(line: 1319, column: 12, scope: !8024)
!8030 = !DILocation(line: 1319, column: 10, scope: !8024)
!8031 = !DILocation(line: 1320, column: 19, scope: !8024)
!8032 = !DILocation(line: 1320, column: 26, scope: !8024)
!8033 = !DILocation(line: 1320, column: 31, scope: !8024)
!8034 = !DILocation(line: 1320, column: 39, scope: !8024)
!8035 = !DILocation(line: 1320, column: 37, scope: !8024)
!8036 = !DILocation(line: 1320, column: 29, scope: !8024)
!8037 = !DILocation(line: 1320, column: 12, scope: !8024)
!8038 = !DILocation(line: 1320, column: 10, scope: !8024)
!8039 = !DILocation(line: 1322, column: 8, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1322, column: 8)
!8041 = !DILocation(line: 1322, column: 14, scope: !8040)
!8042 = !DILocation(line: 1322, column: 8, scope: !8024)
!8043 = !DILocation(line: 1323, column: 10, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 1322, column: 23)
!8045 = !DILocation(line: 1323, column: 8, scope: !8044)
!8046 = !DILocation(line: 1324, column: 10, scope: !8044)
!8047 = !DILocation(line: 1324, column: 8, scope: !8044)
!8048 = !DILocation(line: 1325, column: 17, scope: !8044)
!8049 = !DILocation(line: 1325, column: 21, scope: !8044)
!8050 = !DILocation(line: 1325, column: 19, scope: !8044)
!8051 = !DILocation(line: 1325, column: 11, scope: !8044)
!8052 = !DILocation(line: 1325, column: 9, scope: !8044)
!8053 = !DILocation(line: 1326, column: 4, scope: !8044)
!8054 = !DILocation(line: 1328, column: 10, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 1327, column: 9)
!8056 = !DILocation(line: 1328, column: 19, scope: !8055)
!8057 = !DILocation(line: 1328, column: 18, scope: !8055)
!8058 = !DILocation(line: 1328, column: 28, scope: !8055)
!8059 = !DILocation(line: 1328, column: 26, scope: !8055)
!8060 = !DILocation(line: 1328, column: 15, scope: !8055)
!8061 = !DILocation(line: 1328, column: 8, scope: !8055)
!8062 = !DILocation(line: 1329, column: 10, scope: !8055)
!8063 = !DILocation(line: 1329, column: 16, scope: !8055)
!8064 = !DILocation(line: 1329, column: 15, scope: !8055)
!8065 = !DILocation(line: 1329, column: 25, scope: !8055)
!8066 = !DILocation(line: 1329, column: 23, scope: !8055)
!8067 = !DILocation(line: 1329, column: 12, scope: !8055)
!8068 = !DILocation(line: 1329, column: 8, scope: !8055)
!8069 = !DILocation(line: 1330, column: 17, scope: !8055)
!8070 = !DILocation(line: 1330, column: 25, scope: !8055)
!8071 = !DILocation(line: 1330, column: 23, scope: !8055)
!8072 = !DILocation(line: 1330, column: 29, scope: !8055)
!8073 = !DILocation(line: 1330, column: 27, scope: !8055)
!8074 = !DILocation(line: 1330, column: 35, scope: !8055)
!8075 = !DILocation(line: 1330, column: 34, scope: !8055)
!8076 = !DILocation(line: 1330, column: 42, scope: !8055)
!8077 = !DILocation(line: 1330, column: 50, scope: !8055)
!8078 = !DILocation(line: 1330, column: 48, scope: !8055)
!8079 = !DILocation(line: 1330, column: 40, scope: !8055)
!8080 = !DILocation(line: 1330, column: 31, scope: !8055)
!8081 = !DILocation(line: 1330, column: 11, scope: !8055)
!8082 = !DILocation(line: 1330, column: 59, scope: !8055)
!8083 = !DILocation(line: 1330, column: 69, scope: !8055)
!8084 = !DILocation(line: 1330, column: 57, scope: !8055)
!8085 = !DILocation(line: 1330, column: 9, scope: !8055)
!8086 = !DILocation(line: 1333, column: 8, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1333, column: 8)
!8088 = !DILocation(line: 1333, column: 14, scope: !8087)
!8089 = !DILocation(line: 1333, column: 8, scope: !8024)
!8090 = !DILocation(line: 1334, column: 13, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 1333, column: 19)
!8092 = !DILocation(line: 1334, column: 11, scope: !8091)
!8093 = !DILocation(line: 1335, column: 10, scope: !8091)
!8094 = !DILocation(line: 1335, column: 8, scope: !8091)
!8095 = !DILocation(line: 1336, column: 10, scope: !8091)
!8096 = !DILocation(line: 1336, column: 8, scope: !8091)
!8097 = !DILocation(line: 1337, column: 4, scope: !8091)
!8098 = !DILocation(line: 1339, column: 8, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1339, column: 8)
!8100 = !DILocation(line: 1339, column: 14, scope: !8099)
!8101 = !DILocation(line: 1339, column: 8, scope: !8024)
!8102 = !DILocation(line: 1340, column: 9, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 1340, column: 9)
!8104 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 1339, column: 23)
!8105 = !DILocation(line: 1340, column: 14, scope: !8103)
!8106 = !DILocation(line: 1340, column: 12, scope: !8103)
!8107 = !DILocation(line: 1340, column: 9, scope: !8104)
!8108 = !DILocation(line: 1341, column: 23, scope: !8103)
!8109 = !DILocation(line: 1341, column: 30, scope: !8103)
!8110 = !DILocation(line: 1341, column: 15, scope: !8103)
!8111 = !DILocation(line: 1341, column: 13, scope: !8103)
!8112 = !DILocation(line: 1341, column: 6, scope: !8103)
!8113 = !DILocation(line: 1343, column: 23, scope: !8103)
!8114 = !DILocation(line: 1343, column: 30, scope: !8103)
!8115 = !DILocation(line: 1343, column: 15, scope: !8103)
!8116 = !DILocation(line: 1343, column: 13, scope: !8103)
!8117 = !DILocation(line: 1344, column: 4, scope: !8104)
!8118 = !DILocation(line: 1346, column: 9, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 1346, column: 9)
!8120 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 1345, column: 9)
!8121 = !DILocation(line: 1346, column: 14, scope: !8119)
!8122 = !DILocation(line: 1346, column: 12, scope: !8119)
!8123 = !DILocation(line: 1346, column: 9, scope: !8120)
!8124 = !DILocation(line: 1347, column: 23, scope: !8119)
!8125 = !DILocation(line: 1347, column: 30, scope: !8119)
!8126 = !DILocation(line: 1347, column: 15, scope: !8119)
!8127 = !DILocation(line: 1347, column: 13, scope: !8119)
!8128 = !DILocation(line: 1347, column: 6, scope: !8119)
!8129 = !DILocation(line: 1349, column: 23, scope: !8119)
!8130 = !DILocation(line: 1349, column: 30, scope: !8119)
!8131 = !DILocation(line: 1349, column: 15, scope: !8119)
!8132 = !DILocation(line: 1349, column: 13, scope: !8119)
!8133 = !DILocation(line: 1351, column: 4, scope: !8024)
!8134 = !DILocation(line: 1354, column: 9, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1354, column: 8)
!8136 = !DILocation(line: 1354, column: 15, scope: !8135)
!8137 = !DILocation(line: 1354, column: 8, scope: !8024)
!8138 = !DILocation(line: 1355, column: 20, scope: !8135)
!8139 = !DILocation(line: 1355, column: 18, scope: !8135)
!8140 = !DILocation(line: 1355, column: 11, scope: !8135)
!8141 = !DILocation(line: 1355, column: 5, scope: !8135)
!8142 = !DILocation(line: 1357, column: 12, scope: !8024)
!8143 = !DILocation(line: 1357, column: 22, scope: !8024)
!8144 = !DILocation(line: 1357, column: 10, scope: !8024)
!8145 = !DILocation(line: 1358, column: 13, scope: !8024)
!8146 = !DILocation(line: 1358, column: 19, scope: !8024)
!8147 = !DILocation(line: 1358, column: 11, scope: !8024)
!8148 = !DILocation(line: 1359, column: 8, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1359, column: 8)
!8150 = !DILocation(line: 1359, column: 14, scope: !8149)
!8151 = !DILocation(line: 1359, column: 8, scope: !8024)
!8152 = !DILocation(line: 1360, column: 10, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 1359, column: 20)
!8154 = !DILocation(line: 1360, column: 15, scope: !8153)
!8155 = !DILocation(line: 1360, column: 8, scope: !8153)
!8156 = !DILocation(line: 1361, column: 10, scope: !8153)
!8157 = !DILocation(line: 1361, column: 15, scope: !8153)
!8158 = !DILocation(line: 1361, column: 20, scope: !8153)
!8159 = !DILocation(line: 1361, column: 13, scope: !8153)
!8160 = !DILocation(line: 1361, column: 8, scope: !8153)
!8161 = !DILocation(line: 1362, column: 10, scope: !8153)
!8162 = !DILocation(line: 1362, column: 8, scope: !8153)
!8163 = !DILocation(line: 1364, column: 17, scope: !8153)
!8164 = !DILocation(line: 1364, column: 21, scope: !8153)
!8165 = !DILocation(line: 1364, column: 26, scope: !8153)
!8166 = !DILocation(line: 1364, column: 19, scope: !8153)
!8167 = !DILocation(line: 1364, column: 11, scope: !8153)
!8168 = !DILocation(line: 1364, column: 9, scope: !8153)
!8169 = !DILocation(line: 1365, column: 18, scope: !8153)
!8170 = !DILocation(line: 1365, column: 23, scope: !8153)
!8171 = !DILocation(line: 1365, column: 28, scope: !8153)
!8172 = !DILocation(line: 1365, column: 33, scope: !8153)
!8173 = !DILocation(line: 1365, column: 26, scope: !8153)
!8174 = !DILocation(line: 1365, column: 20, scope: !8153)
!8175 = !DILocation(line: 1365, column: 12, scope: !8153)
!8176 = !DILocation(line: 1365, column: 10, scope: !8153)
!8177 = !DILocation(line: 1366, column: 4, scope: !8153)
!8178 = !DILocation(line: 1368, column: 10, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 1367, column: 9)
!8180 = !DILocation(line: 1368, column: 15, scope: !8179)
!8181 = !DILocation(line: 1368, column: 26, scope: !8179)
!8182 = !DILocation(line: 1368, column: 25, scope: !8179)
!8183 = !DILocation(line: 1368, column: 35, scope: !8179)
!8184 = !DILocation(line: 1368, column: 33, scope: !8179)
!8185 = !DILocation(line: 1368, column: 40, scope: !8179)
!8186 = !DILocation(line: 1368, column: 22, scope: !8179)
!8187 = !DILocation(line: 1368, column: 8, scope: !8179)
!8188 = !DILocation(line: 1369, column: 11, scope: !8179)
!8189 = !DILocation(line: 1369, column: 16, scope: !8179)
!8190 = !DILocation(line: 1369, column: 21, scope: !8179)
!8191 = !DILocation(line: 1369, column: 14, scope: !8179)
!8192 = !DILocation(line: 1369, column: 33, scope: !8179)
!8193 = !DILocation(line: 1369, column: 32, scope: !8179)
!8194 = !DILocation(line: 1369, column: 43, scope: !8179)
!8195 = !DILocation(line: 1369, column: 48, scope: !8179)
!8196 = !DILocation(line: 1369, column: 53, scope: !8179)
!8197 = !DILocation(line: 1369, column: 46, scope: !8179)
!8198 = !DILocation(line: 1369, column: 40, scope: !8179)
!8199 = !DILocation(line: 1369, column: 29, scope: !8179)
!8200 = !DILocation(line: 1369, column: 8, scope: !8179)
!8201 = !DILocation(line: 1370, column: 10, scope: !8179)
!8202 = !DILocation(line: 1370, column: 16, scope: !8179)
!8203 = !DILocation(line: 1370, column: 15, scope: !8179)
!8204 = !DILocation(line: 1370, column: 25, scope: !8179)
!8205 = !DILocation(line: 1370, column: 23, scope: !8179)
!8206 = !DILocation(line: 1370, column: 12, scope: !8179)
!8207 = !DILocation(line: 1370, column: 8, scope: !8179)
!8208 = !DILocation(line: 1372, column: 17, scope: !8179)
!8209 = !DILocation(line: 1372, column: 25, scope: !8179)
!8210 = !DILocation(line: 1372, column: 23, scope: !8179)
!8211 = !DILocation(line: 1372, column: 29, scope: !8179)
!8212 = !DILocation(line: 1372, column: 27, scope: !8179)
!8213 = !DILocation(line: 1372, column: 35, scope: !8179)
!8214 = !DILocation(line: 1372, column: 34, scope: !8179)
!8215 = !DILocation(line: 1372, column: 40, scope: !8179)
!8216 = !DILocation(line: 1372, column: 49, scope: !8179)
!8217 = !DILocation(line: 1372, column: 57, scope: !8179)
!8218 = !DILocation(line: 1372, column: 55, scope: !8179)
!8219 = !DILocation(line: 1372, column: 62, scope: !8179)
!8220 = !DILocation(line: 1372, column: 47, scope: !8179)
!8221 = !DILocation(line: 1372, column: 31, scope: !8179)
!8222 = !DILocation(line: 1372, column: 11, scope: !8179)
!8223 = !DILocation(line: 1372, column: 73, scope: !8179)
!8224 = !DILocation(line: 1372, column: 83, scope: !8179)
!8225 = !DILocation(line: 1372, column: 71, scope: !8179)
!8226 = !DILocation(line: 1372, column: 9, scope: !8179)
!8227 = !DILocation(line: 1373, column: 18, scope: !8179)
!8228 = !DILocation(line: 1373, column: 26, scope: !8179)
!8229 = !DILocation(line: 1373, column: 24, scope: !8179)
!8230 = !DILocation(line: 1373, column: 30, scope: !8179)
!8231 = !DILocation(line: 1373, column: 28, scope: !8179)
!8232 = !DILocation(line: 1373, column: 37, scope: !8179)
!8233 = !DILocation(line: 1373, column: 42, scope: !8179)
!8234 = !DILocation(line: 1373, column: 47, scope: !8179)
!8235 = !DILocation(line: 1373, column: 40, scope: !8179)
!8236 = !DILocation(line: 1373, column: 35, scope: !8179)
!8237 = !DILocation(line: 1373, column: 57, scope: !8179)
!8238 = !DILocation(line: 1373, column: 66, scope: !8179)
!8239 = !DILocation(line: 1373, column: 71, scope: !8179)
!8240 = !DILocation(line: 1373, column: 76, scope: !8179)
!8241 = !DILocation(line: 1373, column: 69, scope: !8179)
!8242 = !DILocation(line: 1373, column: 63, scope: !8179)
!8243 = !DILocation(line: 1373, column: 55, scope: !8179)
!8244 = !DILocation(line: 1373, column: 32, scope: !8179)
!8245 = !DILocation(line: 1373, column: 12, scope: !8179)
!8246 = !DILocation(line: 1373, column: 88, scope: !8179)
!8247 = !DILocation(line: 1373, column: 98, scope: !8179)
!8248 = !DILocation(line: 1373, column: 86, scope: !8179)
!8249 = !DILocation(line: 1373, column: 10, scope: !8179)
!8250 = !DILocation(line: 1376, column: 20, scope: !8024)
!8251 = !DILocation(line: 1376, column: 34, scope: !8024)
!8252 = !DILocation(line: 1376, column: 39, scope: !8024)
!8253 = !DILocation(line: 1376, column: 37, scope: !8024)
!8254 = !DILocation(line: 1376, column: 28, scope: !8024)
!8255 = !DILocation(line: 1376, column: 43, scope: !8024)
!8256 = !DILocation(line: 1376, column: 13, scope: !8024)
!8257 = !DILocation(line: 1376, column: 11, scope: !8024)
!8258 = !DILocation(line: 1378, column: 8, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1378, column: 8)
!8260 = !DILocation(line: 1378, column: 13, scope: !8259)
!8261 = !DILocation(line: 1378, column: 11, scope: !8259)
!8262 = !DILocation(line: 1378, column: 16, scope: !8259)
!8263 = !DILocation(line: 1378, column: 19, scope: !8259)
!8264 = !DILocation(line: 1378, column: 24, scope: !8259)
!8265 = !DILocation(line: 1378, column: 22, scope: !8259)
!8266 = !DILocation(line: 1378, column: 8, scope: !8024)
!8267 = !DILocation(line: 1379, column: 22, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 1378, column: 28)
!8269 = !DILocation(line: 1379, column: 30, scope: !8268)
!8270 = !DILocation(line: 1379, column: 14, scope: !8268)
!8271 = !DILocation(line: 1379, column: 12, scope: !8268)
!8272 = !DILocation(line: 1380, column: 4, scope: !8268)
!8273 = !DILocation(line: 1381, column: 13, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 1381, column: 13)
!8275 = !DILocation(line: 1381, column: 18, scope: !8274)
!8276 = !DILocation(line: 1381, column: 16, scope: !8274)
!8277 = !DILocation(line: 1381, column: 21, scope: !8274)
!8278 = !DILocation(line: 1381, column: 24, scope: !8274)
!8279 = !DILocation(line: 1381, column: 29, scope: !8274)
!8280 = !DILocation(line: 1381, column: 27, scope: !8274)
!8281 = !DILocation(line: 1381, column: 13, scope: !8259)
!8282 = !DILocation(line: 1382, column: 22, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1381, column: 33)
!8284 = !DILocation(line: 1382, column: 30, scope: !8283)
!8285 = !DILocation(line: 1382, column: 14, scope: !8283)
!8286 = !DILocation(line: 1382, column: 12, scope: !8283)
!8287 = !DILocation(line: 1383, column: 4, scope: !8283)
!8288 = !DILocation(line: 1385, column: 9, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 1385, column: 9)
!8290 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1384, column: 9)
!8291 = !DILocation(line: 1385, column: 15, scope: !8289)
!8292 = !DILocation(line: 1385, column: 13, scope: !8289)
!8293 = !DILocation(line: 1385, column: 22, scope: !8289)
!8294 = !DILocation(line: 1385, column: 25, scope: !8289)
!8295 = !DILocation(line: 1385, column: 32, scope: !8289)
!8296 = !DILocation(line: 1385, column: 30, scope: !8289)
!8297 = !DILocation(line: 1385, column: 9, scope: !8290)
!8298 = !DILocation(line: 1386, column: 23, scope: !8289)
!8299 = !DILocation(line: 1386, column: 31, scope: !8289)
!8300 = !DILocation(line: 1386, column: 15, scope: !8289)
!8301 = !DILocation(line: 1386, column: 13, scope: !8289)
!8302 = !DILocation(line: 1386, column: 6, scope: !8289)
!8303 = !DILocation(line: 1387, column: 14, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 1387, column: 14)
!8305 = !DILocation(line: 1387, column: 20, scope: !8304)
!8306 = !DILocation(line: 1387, column: 18, scope: !8304)
!8307 = !DILocation(line: 1387, column: 27, scope: !8304)
!8308 = !DILocation(line: 1387, column: 30, scope: !8304)
!8309 = !DILocation(line: 1387, column: 37, scope: !8304)
!8310 = !DILocation(line: 1387, column: 35, scope: !8304)
!8311 = !DILocation(line: 1387, column: 14, scope: !8289)
!8312 = !DILocation(line: 1388, column: 23, scope: !8304)
!8313 = !DILocation(line: 1388, column: 31, scope: !8304)
!8314 = !DILocation(line: 1388, column: 15, scope: !8304)
!8315 = !DILocation(line: 1388, column: 13, scope: !8304)
!8316 = !DILocation(line: 1388, column: 6, scope: !8304)
!8317 = !DILocation(line: 1390, column: 23, scope: !8304)
!8318 = !DILocation(line: 1390, column: 31, scope: !8304)
!8319 = !DILocation(line: 1390, column: 15, scope: !8304)
!8320 = !DILocation(line: 1390, column: 53, scope: !8304)
!8321 = !DILocation(line: 1390, column: 61, scope: !8304)
!8322 = !DILocation(line: 1390, column: 45, scope: !8304)
!8323 = !DILocation(line: 1390, column: 43, scope: !8304)
!8324 = !DILocation(line: 1390, column: 13, scope: !8304)
!8325 = !DILocation(line: 1392, column: 9, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1392, column: 8)
!8327 = !DILocation(line: 1392, column: 15, scope: !8326)
!8328 = !DILocation(line: 1392, column: 8, scope: !8024)
!8329 = !DILocation(line: 1392, column: 37, scope: !8326)
!8330 = !DILocation(line: 1392, column: 35, scope: !8326)
!8331 = !DILocation(line: 1392, column: 31, scope: !8326)
!8332 = !DILocation(line: 1392, column: 24, scope: !8326)
!8333 = !DILocation(line: 1393, column: 4, scope: !8024)
!8334 = !DILocation(line: 1401, column: 20, scope: !8024)
!8335 = !DILocation(line: 1401, column: 18, scope: !8024)
!8336 = !DILocation(line: 1401, column: 11, scope: !8024)
!8337 = !DILocation(line: 1402, column: 13, scope: !8024)
!8338 = !DILocation(line: 1402, column: 19, scope: !8024)
!8339 = !DILocation(line: 1402, column: 29, scope: !8024)
!8340 = !DILocation(line: 1402, column: 36, scope: !8024)
!8341 = !DILocation(line: 1402, column: 11, scope: !8024)
!8342 = !DILocation(line: 1403, column: 33, scope: !8024)
!8343 = !DILocation(line: 1403, column: 31, scope: !8024)
!8344 = !DILocation(line: 1403, column: 10, scope: !8024)
!8345 = !DILocation(line: 1405, column: 8, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1405, column: 8)
!8347 = !DILocation(line: 1405, column: 14, scope: !8346)
!8348 = !DILocation(line: 1405, column: 8, scope: !8024)
!8349 = !DILocation(line: 1406, column: 34, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 1405, column: 23)
!8351 = !DILocation(line: 1406, column: 32, scope: !8350)
!8352 = !DILocation(line: 1406, column: 11, scope: !8350)
!8353 = !DILocation(line: 1407, column: 4, scope: !8350)
!8354 = !DILocation(line: 1409, column: 8, scope: !8024)
!8355 = !DILocation(line: 1409, column: 12, scope: !8024)
!8356 = !DILocation(line: 1409, column: 10, scope: !8024)
!8357 = !DILocation(line: 1409, column: 6, scope: !8024)
!8358 = !DILocation(line: 1410, column: 8, scope: !8024)
!8359 = !DILocation(line: 1410, column: 12, scope: !8024)
!8360 = !DILocation(line: 1410, column: 10, scope: !8024)
!8361 = !DILocation(line: 1410, column: 6, scope: !8024)
!8362 = !DILocation(line: 1412, column: 21, scope: !8024)
!8363 = !DILocation(line: 1412, column: 17, scope: !8024)
!8364 = !DILocation(line: 1412, column: 32, scope: !8024)
!8365 = !DILocation(line: 1412, column: 35, scope: !8024)
!8366 = !DILocation(line: 1412, column: 26, scope: !8024)
!8367 = !DILocation(line: 1412, column: 24, scope: !8024)
!8368 = !DILocation(line: 1412, column: 12, scope: !8024)
!8369 = !DILocation(line: 1412, column: 10, scope: !8024)
!8370 = !DILocation(line: 1413, column: 8, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1413, column: 8)
!8372 = !DILocation(line: 1413, column: 10, scope: !8371)
!8373 = !DILocation(line: 1413, column: 15, scope: !8371)
!8374 = !DILocation(line: 1413, column: 18, scope: !8371)
!8375 = !DILocation(line: 1413, column: 20, scope: !8371)
!8376 = !DILocation(line: 1413, column: 8, scope: !8024)
!8377 = !DILocation(line: 1413, column: 48, scope: !8371)
!8378 = !DILocation(line: 1413, column: 46, scope: !8371)
!8379 = !DILocation(line: 1413, column: 32, scope: !8371)
!8380 = !DILocation(line: 1413, column: 26, scope: !8371)
!8381 = !DILocation(line: 1414, column: 13, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 1414, column: 13)
!8383 = !DILocation(line: 1414, column: 15, scope: !8382)
!8384 = !DILocation(line: 1414, column: 20, scope: !8382)
!8385 = !DILocation(line: 1414, column: 23, scope: !8382)
!8386 = !DILocation(line: 1414, column: 25, scope: !8382)
!8387 = !DILocation(line: 1414, column: 13, scope: !8371)
!8388 = !DILocation(line: 1414, column: 37, scope: !8382)
!8389 = !DILocation(line: 1414, column: 31, scope: !8382)
!8390 = !DILocation(line: 1415, column: 13, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 1415, column: 13)
!8392 = !DILocation(line: 1415, column: 15, scope: !8391)
!8393 = !DILocation(line: 1415, column: 20, scope: !8391)
!8394 = !DILocation(line: 1415, column: 23, scope: !8391)
!8395 = !DILocation(line: 1415, column: 25, scope: !8391)
!8396 = !DILocation(line: 1415, column: 13, scope: !8382)
!8397 = !DILocation(line: 1415, column: 60, scope: !8391)
!8398 = !DILocation(line: 1415, column: 58, scope: !8391)
!8399 = !DILocation(line: 1415, column: 37, scope: !8391)
!8400 = !DILocation(line: 1415, column: 31, scope: !8391)
!8401 = !DILocation(line: 1417, column: 8, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1417, column: 8)
!8403 = !DILocation(line: 1417, column: 14, scope: !8402)
!8404 = !DILocation(line: 1417, column: 8, scope: !8024)
!8405 = !DILocation(line: 1418, column: 13, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1417, column: 23)
!8407 = !DILocation(line: 1418, column: 22, scope: !8406)
!8408 = !DILocation(line: 1418, column: 29, scope: !8406)
!8409 = !DILocation(line: 1418, column: 39, scope: !8406)
!8410 = !DILocation(line: 1418, column: 37, scope: !8406)
!8411 = !DILocation(line: 1418, column: 19, scope: !8406)
!8412 = !DILocation(line: 1418, column: 11, scope: !8406)
!8413 = !DILocation(line: 1419, column: 13, scope: !8406)
!8414 = !DILocation(line: 1419, column: 22, scope: !8406)
!8415 = !DILocation(line: 1419, column: 29, scope: !8406)
!8416 = !DILocation(line: 1419, column: 44, scope: !8406)
!8417 = !DILocation(line: 1419, column: 42, scope: !8406)
!8418 = !DILocation(line: 1419, column: 37, scope: !8406)
!8419 = !DILocation(line: 1419, column: 19, scope: !8406)
!8420 = !DILocation(line: 1419, column: 11, scope: !8406)
!8421 = !DILocation(line: 1420, column: 4, scope: !8406)
!8422 = !DILocation(line: 1422, column: 13, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 1421, column: 9)
!8424 = !DILocation(line: 1422, column: 22, scope: !8423)
!8425 = !DILocation(line: 1422, column: 29, scope: !8423)
!8426 = !DILocation(line: 1422, column: 44, scope: !8423)
!8427 = !DILocation(line: 1422, column: 42, scope: !8423)
!8428 = !DILocation(line: 1422, column: 37, scope: !8423)
!8429 = !DILocation(line: 1422, column: 19, scope: !8423)
!8430 = !DILocation(line: 1422, column: 11, scope: !8423)
!8431 = !DILocation(line: 1423, column: 13, scope: !8423)
!8432 = !DILocation(line: 1423, column: 22, scope: !8423)
!8433 = !DILocation(line: 1423, column: 29, scope: !8423)
!8434 = !DILocation(line: 1423, column: 39, scope: !8423)
!8435 = !DILocation(line: 1423, column: 37, scope: !8423)
!8436 = !DILocation(line: 1423, column: 19, scope: !8423)
!8437 = !DILocation(line: 1423, column: 11, scope: !8423)
!8438 = !DILocation(line: 1425, column: 8, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1425, column: 8)
!8440 = !DILocation(line: 1425, column: 14, scope: !8439)
!8441 = !DILocation(line: 1425, column: 8, scope: !8024)
!8442 = !DILocation(line: 1425, column: 25, scope: !8439)
!8443 = !DILocation(line: 1425, column: 19, scope: !8439)
!8444 = !DILocation(line: 1426, column: 8, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1426, column: 8)
!8446 = !DILocation(line: 1426, column: 14, scope: !8445)
!8447 = !DILocation(line: 1426, column: 8, scope: !8024)
!8448 = !DILocation(line: 1426, column: 42, scope: !8445)
!8449 = !DILocation(line: 1426, column: 36, scope: !8445)
!8450 = !DILocation(line: 1429, column: 8, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1429, column: 8)
!8452 = !DILocation(line: 1429, column: 16, scope: !8451)
!8453 = !DILocation(line: 1429, column: 14, scope: !8451)
!8454 = !DILocation(line: 1429, column: 8, scope: !8024)
!8455 = !DILocation(line: 1429, column: 30, scope: !8451)
!8456 = !DILocation(line: 1429, column: 23, scope: !8451)
!8457 = !DILocation(line: 1430, column: 13, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 1430, column: 13)
!8459 = !DILocation(line: 1430, column: 21, scope: !8458)
!8460 = !DILocation(line: 1430, column: 19, scope: !8458)
!8461 = !DILocation(line: 1430, column: 13, scope: !8451)
!8462 = !DILocation(line: 1430, column: 35, scope: !8458)
!8463 = !DILocation(line: 1430, column: 28, scope: !8458)
!8464 = !DILocation(line: 1431, column: 19, scope: !8458)
!8465 = !DILocation(line: 1431, column: 27, scope: !8458)
!8466 = !DILocation(line: 1431, column: 25, scope: !8458)
!8467 = !DILocation(line: 1431, column: 37, scope: !8458)
!8468 = !DILocation(line: 1431, column: 45, scope: !8458)
!8469 = !DILocation(line: 1431, column: 43, scope: !8458)
!8470 = !DILocation(line: 1431, column: 34, scope: !8458)
!8471 = !DILocation(line: 1431, column: 16, scope: !8458)
!8472 = !DILocation(line: 1432, column: 8, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1432, column: 8)
!8474 = !DILocation(line: 1432, column: 10, scope: !8473)
!8475 = !DILocation(line: 1432, column: 15, scope: !8473)
!8476 = !DILocation(line: 1432, column: 18, scope: !8473)
!8477 = !DILocation(line: 1432, column: 20, scope: !8473)
!8478 = !DILocation(line: 1432, column: 8, scope: !8024)
!8479 = !DILocation(line: 1432, column: 33, scope: !8473)
!8480 = !DILocation(line: 1432, column: 26, scope: !8473)
!8481 = !DILocation(line: 1433, column: 8, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1433, column: 8)
!8483 = !DILocation(line: 1433, column: 18, scope: !8482)
!8484 = !DILocation(line: 1433, column: 15, scope: !8482)
!8485 = !DILocation(line: 1433, column: 8, scope: !8024)
!8486 = !DILocation(line: 1433, column: 33, scope: !8482)
!8487 = !DILocation(line: 1433, column: 26, scope: !8482)
!8488 = !DILocation(line: 1434, column: 8, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1434, column: 8)
!8490 = !DILocation(line: 1434, column: 14, scope: !8489)
!8491 = !DILocation(line: 1434, column: 8, scope: !8024)
!8492 = !DILocation(line: 1434, column: 36, scope: !8489)
!8493 = !DILocation(line: 1434, column: 34, scope: !8489)
!8494 = !DILocation(line: 1434, column: 30, scope: !8489)
!8495 = !DILocation(line: 1434, column: 23, scope: !8489)
!8496 = !DILocation(line: 1435, column: 4, scope: !8024)
!8497 = !DILocation(line: 1503, column: 8, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1503, column: 8)
!8499 = !DILocation(line: 1503, column: 13, scope: !8498)
!8500 = !DILocation(line: 1503, column: 11, scope: !8498)
!8501 = !DILocation(line: 1503, column: 8, scope: !8024)
!8502 = !DILocation(line: 1503, column: 22, scope: !8498)
!8503 = !DILocation(line: 1503, column: 20, scope: !8498)
!8504 = !DILocation(line: 1503, column: 17, scope: !8498)
!8505 = !DILocation(line: 1504, column: 14, scope: !8498)
!8506 = !DILocation(line: 1504, column: 12, scope: !8498)
!8507 = !DILocation(line: 1506, column: 9, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1506, column: 8)
!8509 = !DILocation(line: 1506, column: 15, scope: !8508)
!8510 = !DILocation(line: 1506, column: 8, scope: !8024)
!8511 = !DILocation(line: 1506, column: 36, scope: !8508)
!8512 = !DILocation(line: 1506, column: 34, scope: !8508)
!8513 = !DILocation(line: 1506, column: 30, scope: !8508)
!8514 = !DILocation(line: 1506, column: 24, scope: !8508)
!8515 = !DILocation(line: 1508, column: 12, scope: !8024)
!8516 = !DILocation(line: 1508, column: 22, scope: !8024)
!8517 = !DILocation(line: 1508, column: 10, scope: !8024)
!8518 = !DILocation(line: 1509, column: 13, scope: !8024)
!8519 = !DILocation(line: 1509, column: 19, scope: !8024)
!8520 = !DILocation(line: 1509, column: 11, scope: !8024)
!8521 = !DILocation(line: 1511, column: 13, scope: !8024)
!8522 = !DILocation(line: 1511, column: 22, scope: !8024)
!8523 = !DILocation(line: 1511, column: 31, scope: !8024)
!8524 = !DILocation(line: 1511, column: 29, scope: !8024)
!8525 = !DILocation(line: 1511, column: 19, scope: !8024)
!8526 = !DILocation(line: 1511, column: 10, scope: !8024)
!8527 = !DILocation(line: 1512, column: 23, scope: !8024)
!8528 = !DILocation(line: 1512, column: 30, scope: !8024)
!8529 = !DILocation(line: 1512, column: 16, scope: !8024)
!8530 = !DILocation(line: 1512, column: 14, scope: !8024)
!8531 = !DILocation(line: 1514, column: 19, scope: !8024)
!8532 = !DILocation(line: 1514, column: 27, scope: !8024)
!8533 = !DILocation(line: 1514, column: 25, scope: !8024)
!8534 = !DILocation(line: 1514, column: 30, scope: !8024)
!8535 = !DILocation(line: 1514, column: 38, scope: !8024)
!8536 = !DILocation(line: 1514, column: 36, scope: !8024)
!8537 = !DILocation(line: 1514, column: 12, scope: !8024)
!8538 = !DILocation(line: 1514, column: 10, scope: !8024)
!8539 = !DILocation(line: 1515, column: 8, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1515, column: 8)
!8541 = !DILocation(line: 1515, column: 16, scope: !8540)
!8542 = !DILocation(line: 1515, column: 14, scope: !8540)
!8543 = !DILocation(line: 1515, column: 8, scope: !8024)
!8544 = !DILocation(line: 1515, column: 44, scope: !8540)
!8545 = !DILocation(line: 1515, column: 58, scope: !8540)
!8546 = !DILocation(line: 1515, column: 66, scope: !8540)
!8547 = !DILocation(line: 1515, column: 64, scope: !8540)
!8548 = !DILocation(line: 1515, column: 52, scope: !8540)
!8549 = !DILocation(line: 1515, column: 36, scope: !8540)
!8550 = !DILocation(line: 1515, column: 34, scope: !8540)
!8551 = !DILocation(line: 1515, column: 27, scope: !8540)
!8552 = !DILocation(line: 1516, column: 26, scope: !8540)
!8553 = !DILocation(line: 1516, column: 40, scope: !8540)
!8554 = !DILocation(line: 1516, column: 48, scope: !8540)
!8555 = !DILocation(line: 1516, column: 46, scope: !8540)
!8556 = !DILocation(line: 1516, column: 34, scope: !8540)
!8557 = !DILocation(line: 1516, column: 18, scope: !8540)
!8558 = !DILocation(line: 1516, column: 16, scope: !8540)
!8559 = !DILocation(line: 1518, column: 9, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 1518, column: 8)
!8561 = !DILocation(line: 1518, column: 15, scope: !8560)
!8562 = !DILocation(line: 1518, column: 8, scope: !8024)
!8563 = !DILocation(line: 1518, column: 37, scope: !8560)
!8564 = !DILocation(line: 1518, column: 35, scope: !8560)
!8565 = !DILocation(line: 1518, column: 31, scope: !8560)
!8566 = !DILocation(line: 1518, column: 24, scope: !8560)
!8567 = !DILocation(line: 1520, column: 4, scope: !8024)
!8568 = !DILocation(line: 1522, column: 6, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 1522, column: 6)
!8570 = !DILocation(line: 1522, column: 13, scope: !8569)
!8571 = !DILocation(line: 1522, column: 6, scope: !7913)
!8572 = !DILocation(line: 1522, column: 25, scope: !8569)
!8573 = !DILocation(line: 1522, column: 18, scope: !8569)
!8574 = !DILocation(line: 1523, column: 11, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 1523, column: 11)
!8576 = !DILocation(line: 1523, column: 18, scope: !8575)
!8577 = !DILocation(line: 1523, column: 11, scope: !8569)
!8578 = !DILocation(line: 1523, column: 30, scope: !8575)
!8579 = !DILocation(line: 1523, column: 23, scope: !8575)
!8580 = !DILocation(line: 1524, column: 9, scope: !7913)
!8581 = !DILocation(line: 1524, column: 2, scope: !7913)
!8582 = distinct !DISubprogram(name: "in_band", scope: !3, file: !3, line: 1270, type: !8583, scopeLine: 1271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{!77, !77, !77, !7, !7}
!8585 = !DILocalVariable(name: "width", arg: 1, scope: !8582, file: !3, line: 1270, type: !77)
!8586 = !DILocation(line: 1270, column: 28, scope: !8582)
!8587 = !DILocalVariable(name: "dist", arg: 2, scope: !8582, file: !3, line: 1270, type: !77)
!8588 = !DILocation(line: 1270, column: 41, scope: !8582)
!8589 = !DILocalVariable(name: "side", arg: 3, scope: !8582, file: !3, line: 1270, type: !7)
!8590 = !DILocation(line: 1270, column: 51, scope: !8582)
!8591 = !DILocalVariable(name: "dir", arg: 4, scope: !8582, file: !3, line: 1270, type: !7)
!8592 = !DILocation(line: 1270, column: 61, scope: !8582)
!8593 = !DILocalVariable(name: "alpha", scope: !8582, file: !3, line: 1272, type: !77)
!8594 = !DILocation(line: 1272, column: 8, scope: !8582)
!8595 = !DILocation(line: 1274, column: 6, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1274, column: 6)
!8597 = !DILocation(line: 1274, column: 12, scope: !8596)
!8598 = !DILocation(line: 1274, column: 6, scope: !8582)
!8599 = !DILocation(line: 1275, column: 17, scope: !8596)
!8600 = !DILocation(line: 1275, column: 10, scope: !8596)
!8601 = !DILocation(line: 1275, column: 3, scope: !8596)
!8602 = !DILocation(line: 1277, column: 6, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1277, column: 6)
!8604 = !DILocation(line: 1277, column: 14, scope: !8603)
!8605 = !DILocation(line: 1277, column: 12, scope: !8603)
!8606 = !DILocation(line: 1277, column: 6, scope: !8582)
!8607 = !DILocation(line: 1278, column: 17, scope: !8603)
!8608 = !DILocation(line: 1278, column: 10, scope: !8603)
!8609 = !DILocation(line: 1278, column: 3, scope: !8603)
!8610 = !DILocation(line: 1280, column: 6, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1280, column: 6)
!8612 = !DILocation(line: 1280, column: 11, scope: !8611)
!8613 = !DILocation(line: 1280, column: 6, scope: !8582)
!8614 = !DILocation(line: 1281, column: 12, scope: !8611)
!8615 = !DILocation(line: 1281, column: 26, scope: !8611)
!8616 = !DILocation(line: 1281, column: 24, scope: !8611)
!8617 = !DILocation(line: 1281, column: 17, scope: !8611)
!8618 = !DILocation(line: 1281, column: 36, scope: !8611)
!8619 = !DILocation(line: 1281, column: 33, scope: !8611)
!8620 = !DILocation(line: 1281, column: 9, scope: !8611)
!8621 = !DILocation(line: 1281, column: 3, scope: !8611)
!8622 = !DILocation(line: 1283, column: 19, scope: !8611)
!8623 = !DILocation(line: 1283, column: 17, scope: !8611)
!8624 = !DILocation(line: 1283, column: 27, scope: !8611)
!8625 = !DILocation(line: 1283, column: 25, scope: !8611)
!8626 = !DILocation(line: 1283, column: 36, scope: !8611)
!8627 = !DILocation(line: 1283, column: 33, scope: !8611)
!8628 = !DILocation(line: 1283, column: 9, scope: !8611)
!8629 = !DILocation(line: 1285, column: 6, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1285, column: 6)
!8631 = !DILocation(line: 1285, column: 10, scope: !8630)
!8632 = !DILocation(line: 1285, column: 6, scope: !8582)
!8633 = !DILocation(line: 1286, column: 15, scope: !8630)
!8634 = !DILocation(line: 1286, column: 13, scope: !8630)
!8635 = !DILocation(line: 1286, column: 9, scope: !8630)
!8636 = !DILocation(line: 1286, column: 3, scope: !8630)
!8637 = !DILocation(line: 1288, column: 9, scope: !8582)
!8638 = !DILocation(line: 1288, column: 2, scope: !8582)
!8639 = !DILocation(line: 1289, column: 1, scope: !8582)
!8640 = distinct !DISubprogram(name: "min_ff", scope: !5725, file: !5725, line: 202, type: !6010, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!8641 = !DILocalVariable(name: "a", arg: 1, scope: !8640, file: !5725, line: 202, type: !77)
!8642 = !DILocation(line: 202, column: 28, scope: !8640)
!8643 = !DILocalVariable(name: "b", arg: 2, scope: !8640, file: !5725, line: 202, type: !77)
!8644 = !DILocation(line: 202, column: 37, scope: !8640)
!8645 = !DILocation(line: 204, column: 10, scope: !8640)
!8646 = !DILocation(line: 204, column: 14, scope: !8640)
!8647 = !DILocation(line: 204, column: 12, scope: !8640)
!8648 = !DILocation(line: 204, column: 9, scope: !8640)
!8649 = !DILocation(line: 204, column: 19, scope: !8640)
!8650 = !DILocation(line: 204, column: 23, scope: !8640)
!8651 = !DILocation(line: 204, column: 2, scope: !8640)
!8652 = distinct !DISubprogram(name: "do_glow_effect_float", scope: !3, file: !3, line: 2093, type: !8653, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!8653 = !DISubroutineType(types: !8654)
!8654 = !{null, !360, !7, !77, !77, !7, !7, !76, !76, !76}
!8655 = !DILocalVariable(name: "seq", arg: 1, scope: !8652, file: !3, line: 2093, type: !360)
!8656 = !DILocation(line: 2093, column: 44, scope: !8652)
!8657 = !DILocalVariable(name: "render_size", arg: 2, scope: !8652, file: !3, line: 2093, type: !7)
!8658 = !DILocation(line: 2093, column: 53, scope: !8652)
!8659 = !DILocalVariable(name: "facf0", arg: 3, scope: !8652, file: !3, line: 2093, type: !77)
!8660 = !DILocation(line: 2093, column: 72, scope: !8652)
!8661 = !DILocalVariable(name: "UNUSED_facf1", arg: 4, scope: !8652, file: !3, line: 2093, type: !77)
!8662 = !DILocation(line: 2093, column: 85, scope: !8652)
!8663 = !DILocalVariable(name: "x", arg: 5, scope: !8652, file: !3, line: 2093, type: !7)
!8664 = !DILocation(line: 2093, column: 105, scope: !8652)
!8665 = !DILocalVariable(name: "y", arg: 6, scope: !8652, file: !3, line: 2093, type: !7)
!8666 = !DILocation(line: 2093, column: 112, scope: !8652)
!8667 = !DILocalVariable(name: "rect1", arg: 7, scope: !8652, file: !3, line: 2094, type: !76)
!8668 = !DILocation(line: 2094, column: 41, scope: !8652)
!8669 = !DILocalVariable(name: "UNUSED_rect2", arg: 8, scope: !8652, file: !3, line: 2094, type: !76)
!8670 = !DILocation(line: 2094, column: 55, scope: !8652)
!8671 = !DILocalVariable(name: "out", arg: 9, scope: !8652, file: !3, line: 2094, type: !76)
!8672 = !DILocation(line: 2094, column: 77, scope: !8652)
!8673 = !DILocalVariable(name: "outbuf", scope: !8652, file: !3, line: 2096, type: !76)
!8674 = !DILocation(line: 2096, column: 9, scope: !8652)
!8675 = !DILocation(line: 2096, column: 18, scope: !8652)
!8676 = !DILocalVariable(name: "inbuf", scope: !8652, file: !3, line: 2097, type: !76)
!8677 = !DILocation(line: 2097, column: 9, scope: !8652)
!8678 = !DILocation(line: 2097, column: 17, scope: !8652)
!8679 = !DILocalVariable(name: "glow", scope: !8652, file: !3, line: 2098, type: !96)
!8680 = !DILocation(line: 2098, column: 12, scope: !8652)
!8681 = !DILocation(line: 2098, column: 31, scope: !8652)
!8682 = !DILocation(line: 2098, column: 36, scope: !8652)
!8683 = !DILocation(line: 2098, column: 19, scope: !8652)
!8684 = !DILocation(line: 2100, column: 28, scope: !8652)
!8685 = !DILocation(line: 2100, column: 35, scope: !8652)
!8686 = !DILocation(line: 2100, column: 43, scope: !8652)
!8687 = !DILocation(line: 2100, column: 46, scope: !8652)
!8688 = !DILocation(line: 2100, column: 49, scope: !8652)
!8689 = !DILocation(line: 2100, column: 55, scope: !8652)
!8690 = !DILocation(line: 2100, column: 61, scope: !8652)
!8691 = !DILocation(line: 2100, column: 69, scope: !8652)
!8692 = !DILocation(line: 2100, column: 75, scope: !8652)
!8693 = !DILocation(line: 2100, column: 84, scope: !8652)
!8694 = !DILocation(line: 2100, column: 82, scope: !8652)
!8695 = !DILocation(line: 2100, column: 91, scope: !8652)
!8696 = !DILocation(line: 2100, column: 97, scope: !8652)
!8697 = !DILocation(line: 2100, column: 2, scope: !8652)
!8698 = !DILocation(line: 2101, column: 22, scope: !8652)
!8699 = !DILocation(line: 2101, column: 30, scope: !8652)
!8700 = !DILocation(line: 2101, column: 33, scope: !8652)
!8701 = !DILocation(line: 2101, column: 36, scope: !8652)
!8702 = !DILocation(line: 2101, column: 42, scope: !8652)
!8703 = !DILocation(line: 2101, column: 51, scope: !8652)
!8704 = !DILocation(line: 2101, column: 63, scope: !8652)
!8705 = !DILocation(line: 2101, column: 48, scope: !8652)
!8706 = !DILocation(line: 2101, column: 74, scope: !8652)
!8707 = !DILocation(line: 2101, column: 80, scope: !8652)
!8708 = !DILocation(line: 2101, column: 2, scope: !8652)
!8709 = !DILocation(line: 2102, column: 7, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 2102, column: 6)
!8711 = !DILocation(line: 2102, column: 13, scope: !8710)
!8712 = !DILocation(line: 2102, column: 6, scope: !8652)
!8713 = !DILocation(line: 2103, column: 22, scope: !8710)
!8714 = !DILocation(line: 2103, column: 29, scope: !8710)
!8715 = !DILocation(line: 2103, column: 37, scope: !8710)
!8716 = !DILocation(line: 2103, column: 45, scope: !8710)
!8717 = !DILocation(line: 2103, column: 48, scope: !8710)
!8718 = !DILocation(line: 2103, column: 3, scope: !8710)
!8719 = !DILocation(line: 2104, column: 1, scope: !8652)
!8720 = distinct !DISubprogram(name: "do_glow_effect_byte", scope: !3, file: !3, line: 2069, type: !8721, scopeLine: 2071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{null, !360, !7, !77, !77, !7, !7, !83, !83, !83}
!8723 = !DILocalVariable(name: "seq", arg: 1, scope: !8720, file: !3, line: 2069, type: !360)
!8724 = !DILocation(line: 2069, column: 43, scope: !8720)
!8725 = !DILocalVariable(name: "render_size", arg: 2, scope: !8720, file: !3, line: 2069, type: !7)
!8726 = !DILocation(line: 2069, column: 52, scope: !8720)
!8727 = !DILocalVariable(name: "facf0", arg: 3, scope: !8720, file: !3, line: 2069, type: !77)
!8728 = !DILocation(line: 2069, column: 71, scope: !8720)
!8729 = !DILocalVariable(name: "UNUSED_facf1", arg: 4, scope: !8720, file: !3, line: 2069, type: !77)
!8730 = !DILocation(line: 2069, column: 84, scope: !8720)
!8731 = !DILocalVariable(name: "x", arg: 5, scope: !8720, file: !3, line: 2069, type: !7)
!8732 = !DILocation(line: 2069, column: 104, scope: !8720)
!8733 = !DILocalVariable(name: "y", arg: 6, scope: !8720, file: !3, line: 2069, type: !7)
!8734 = !DILocation(line: 2069, column: 111, scope: !8720)
!8735 = !DILocalVariable(name: "rect1", arg: 7, scope: !8720, file: !3, line: 2070, type: !83)
!8736 = !DILocation(line: 2070, column: 48, scope: !8720)
!8737 = !DILocalVariable(name: "UNUSED_rect2", arg: 8, scope: !8720, file: !3, line: 2070, type: !83)
!8738 = !DILocation(line: 2070, column: 70, scope: !8720)
!8739 = !DILocalVariable(name: "out", arg: 9, scope: !8720, file: !3, line: 2070, type: !83)
!8740 = !DILocation(line: 2070, column: 100, scope: !8720)
!8741 = !DILocalVariable(name: "outbuf", scope: !8720, file: !3, line: 2072, type: !76)
!8742 = !DILocation(line: 2072, column: 9, scope: !8720)
!8743 = !DILocalVariable(name: "inbuf", scope: !8720, file: !3, line: 2072, type: !76)
!8744 = !DILocation(line: 2072, column: 18, scope: !8720)
!8745 = !DILocalVariable(name: "glow", scope: !8720, file: !3, line: 2073, type: !96)
!8746 = !DILocation(line: 2073, column: 12, scope: !8720)
!8747 = !DILocation(line: 2073, column: 31, scope: !8720)
!8748 = !DILocation(line: 2073, column: 36, scope: !8720)
!8749 = !DILocation(line: 2073, column: 19, scope: !8720)
!8750 = !DILocation(line: 2075, column: 10, scope: !8720)
!8751 = !DILocation(line: 2075, column: 42, scope: !8720)
!8752 = !DILocation(line: 2075, column: 40, scope: !8720)
!8753 = !DILocation(line: 2075, column: 46, scope: !8720)
!8754 = !DILocation(line: 2075, column: 44, scope: !8720)
!8755 = !DILocation(line: 2075, column: 8, scope: !8720)
!8756 = !DILocation(line: 2076, column: 11, scope: !8720)
!8757 = !DILocation(line: 2076, column: 43, scope: !8720)
!8758 = !DILocation(line: 2076, column: 41, scope: !8720)
!8759 = !DILocation(line: 2076, column: 47, scope: !8720)
!8760 = !DILocation(line: 2076, column: 45, scope: !8720)
!8761 = !DILocation(line: 2076, column: 9, scope: !8720)
!8762 = !DILocation(line: 2078, column: 29, scope: !8720)
!8763 = !DILocation(line: 2078, column: 36, scope: !8720)
!8764 = !DILocation(line: 2078, column: 84, scope: !8720)
!8765 = !DILocation(line: 2078, column: 87, scope: !8720)
!8766 = !DILocation(line: 2078, column: 90, scope: !8720)
!8767 = !DILocation(line: 2078, column: 93, scope: !8720)
!8768 = !DILocation(line: 2078, column: 2, scope: !8720)
!8769 = !DILocation(line: 2079, column: 31, scope: !8720)
!8770 = !DILocation(line: 2079, column: 38, scope: !8720)
!8771 = !DILocation(line: 2079, column: 41, scope: !8720)
!8772 = !DILocation(line: 2079, column: 2, scope: !8720)
!8773 = !DILocation(line: 2081, column: 28, scope: !8720)
!8774 = !DILocation(line: 2081, column: 35, scope: !8720)
!8775 = !DILocation(line: 2081, column: 43, scope: !8720)
!8776 = !DILocation(line: 2081, column: 46, scope: !8720)
!8777 = !DILocation(line: 2081, column: 49, scope: !8720)
!8778 = !DILocation(line: 2081, column: 55, scope: !8720)
!8779 = !DILocation(line: 2081, column: 61, scope: !8720)
!8780 = !DILocation(line: 2081, column: 69, scope: !8720)
!8781 = !DILocation(line: 2081, column: 75, scope: !8720)
!8782 = !DILocation(line: 2081, column: 84, scope: !8720)
!8783 = !DILocation(line: 2081, column: 82, scope: !8720)
!8784 = !DILocation(line: 2081, column: 91, scope: !8720)
!8785 = !DILocation(line: 2081, column: 97, scope: !8720)
!8786 = !DILocation(line: 2081, column: 2, scope: !8720)
!8787 = !DILocation(line: 2082, column: 22, scope: !8720)
!8788 = !DILocation(line: 2082, column: 30, scope: !8720)
!8789 = !DILocation(line: 2082, column: 33, scope: !8720)
!8790 = !DILocation(line: 2082, column: 36, scope: !8720)
!8791 = !DILocation(line: 2082, column: 42, scope: !8720)
!8792 = !DILocation(line: 2082, column: 51, scope: !8720)
!8793 = !DILocation(line: 2082, column: 63, scope: !8720)
!8794 = !DILocation(line: 2082, column: 48, scope: !8720)
!8795 = !DILocation(line: 2082, column: 74, scope: !8720)
!8796 = !DILocation(line: 2082, column: 80, scope: !8720)
!8797 = !DILocation(line: 2082, column: 2, scope: !8720)
!8798 = !DILocation(line: 2083, column: 7, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 2083, column: 6)
!8800 = !DILocation(line: 2083, column: 13, scope: !8799)
!8801 = !DILocation(line: 2083, column: 6, scope: !8720)
!8802 = !DILocation(line: 2084, column: 22, scope: !8799)
!8803 = !DILocation(line: 2084, column: 29, scope: !8799)
!8804 = !DILocation(line: 2084, column: 37, scope: !8799)
!8805 = !DILocation(line: 2084, column: 45, scope: !8799)
!8806 = !DILocation(line: 2084, column: 48, scope: !8799)
!8807 = !DILocation(line: 2084, column: 3, scope: !8799)
!8808 = !DILocation(line: 2086, column: 33, scope: !8720)
!8809 = !DILocation(line: 2086, column: 41, scope: !8720)
!8810 = !DILocation(line: 2086, column: 44, scope: !8720)
!8811 = !DILocation(line: 2086, column: 2, scope: !8720)
!8812 = !DILocation(line: 2087, column: 29, scope: !8720)
!8813 = !DILocation(line: 2087, column: 34, scope: !8720)
!8814 = !DILocation(line: 2087, column: 92, scope: !8720)
!8815 = !DILocation(line: 2087, column: 95, scope: !8720)
!8816 = !DILocation(line: 2087, column: 98, scope: !8720)
!8817 = !DILocation(line: 2087, column: 101, scope: !8720)
!8818 = !DILocation(line: 2087, column: 2, scope: !8720)
!8819 = !DILocation(line: 2089, column: 2, scope: !8720)
!8820 = !DILocation(line: 2089, column: 12, scope: !8720)
!8821 = !DILocation(line: 2090, column: 2, scope: !8720)
!8822 = !DILocation(line: 2090, column: 12, scope: !8720)
!8823 = !DILocation(line: 2091, column: 1, scope: !8720)
!8824 = distinct !DISubprogram(name: "RVIsolateHighlights_float", scope: !3, file: !3, line: 2006, type: !8825, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!8825 = !DISubroutineType(types: !8826)
!8826 = !{null, !76, !76, !7, !7, !77, !77, !77}
!8827 = !DILocalVariable(name: "in", arg: 1, scope: !8824, file: !3, line: 2006, type: !76)
!8828 = !DILocation(line: 2006, column: 46, scope: !8824)
!8829 = !DILocalVariable(name: "out", arg: 2, scope: !8824, file: !3, line: 2006, type: !76)
!8830 = !DILocation(line: 2006, column: 57, scope: !8824)
!8831 = !DILocalVariable(name: "width", arg: 3, scope: !8824, file: !3, line: 2006, type: !7)
!8832 = !DILocation(line: 2006, column: 66, scope: !8824)
!8833 = !DILocalVariable(name: "height", arg: 4, scope: !8824, file: !3, line: 2006, type: !7)
!8834 = !DILocation(line: 2006, column: 77, scope: !8824)
!8835 = !DILocalVariable(name: "threshold", arg: 5, scope: !8824, file: !3, line: 2006, type: !77)
!8836 = !DILocation(line: 2006, column: 91, scope: !8824)
!8837 = !DILocalVariable(name: "boost", arg: 6, scope: !8824, file: !3, line: 2006, type: !77)
!8838 = !DILocation(line: 2006, column: 108, scope: !8824)
!8839 = !DILocalVariable(name: "clamp", arg: 7, scope: !8824, file: !3, line: 2006, type: !77)
!8840 = !DILocation(line: 2006, column: 121, scope: !8824)
!8841 = !DILocalVariable(name: "x", scope: !8824, file: !3, line: 2008, type: !7)
!8842 = !DILocation(line: 2008, column: 6, scope: !8824)
!8843 = !DILocalVariable(name: "y", scope: !8824, file: !3, line: 2008, type: !7)
!8844 = !DILocation(line: 2008, column: 9, scope: !8824)
!8845 = !DILocalVariable(name: "index", scope: !8824, file: !3, line: 2008, type: !7)
!8846 = !DILocation(line: 2008, column: 12, scope: !8824)
!8847 = !DILocalVariable(name: "intensity", scope: !8824, file: !3, line: 2009, type: !77)
!8848 = !DILocation(line: 2009, column: 8, scope: !8824)
!8849 = !DILocation(line: 2011, column: 9, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 2011, column: 2)
!8851 = !DILocation(line: 2011, column: 7, scope: !8850)
!8852 = !DILocation(line: 2011, column: 14, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2011, column: 2)
!8854 = !DILocation(line: 2011, column: 18, scope: !8853)
!8855 = !DILocation(line: 2011, column: 16, scope: !8853)
!8856 = !DILocation(line: 2011, column: 2, scope: !8850)
!8857 = !DILocation(line: 2012, column: 10, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 2012, column: 3)
!8859 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 2011, column: 31)
!8860 = !DILocation(line: 2012, column: 8, scope: !8858)
!8861 = !DILocation(line: 2012, column: 15, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 2012, column: 3)
!8863 = !DILocation(line: 2012, column: 19, scope: !8862)
!8864 = !DILocation(line: 2012, column: 17, scope: !8862)
!8865 = !DILocation(line: 2012, column: 3, scope: !8858)
!8866 = !DILocation(line: 2013, column: 13, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 2012, column: 31)
!8868 = !DILocation(line: 2013, column: 17, scope: !8867)
!8869 = !DILocation(line: 2013, column: 21, scope: !8867)
!8870 = !DILocation(line: 2013, column: 19, scope: !8867)
!8871 = !DILocation(line: 2013, column: 15, scope: !8867)
!8872 = !DILocation(line: 2013, column: 28, scope: !8867)
!8873 = !DILocation(line: 2013, column: 10, scope: !8867)
!8874 = !DILocation(line: 2016, column: 17, scope: !8867)
!8875 = !DILocation(line: 2016, column: 20, scope: !8867)
!8876 = !DILocation(line: 2016, column: 26, scope: !8867)
!8877 = !DILocation(line: 2016, column: 37, scope: !8867)
!8878 = !DILocation(line: 2016, column: 40, scope: !8867)
!8879 = !DILocation(line: 2016, column: 46, scope: !8867)
!8880 = !DILocation(line: 2016, column: 35, scope: !8867)
!8881 = !DILocation(line: 2016, column: 57, scope: !8867)
!8882 = !DILocation(line: 2016, column: 60, scope: !8867)
!8883 = !DILocation(line: 2016, column: 66, scope: !8867)
!8884 = !DILocation(line: 2016, column: 55, scope: !8867)
!8885 = !DILocation(line: 2016, column: 77, scope: !8867)
!8886 = !DILocation(line: 2016, column: 75, scope: !8867)
!8887 = !DILocation(line: 2016, column: 14, scope: !8867)
!8888 = !DILocation(line: 2017, column: 8, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 2017, column: 8)
!8890 = !DILocation(line: 2017, column: 18, scope: !8889)
!8891 = !DILocation(line: 2017, column: 8, scope: !8867)
!8892 = !DILocation(line: 2018, column: 26, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2017, column: 23)
!8894 = !DILocation(line: 2018, column: 5, scope: !8893)
!8895 = !DILocation(line: 2018, column: 9, scope: !8893)
!8896 = !DILocation(line: 2018, column: 15, scope: !8893)
!8897 = !DILocation(line: 2018, column: 24, scope: !8893)
!8898 = !DILocation(line: 2019, column: 26, scope: !8893)
!8899 = !DILocation(line: 2019, column: 5, scope: !8893)
!8900 = !DILocation(line: 2019, column: 9, scope: !8893)
!8901 = !DILocation(line: 2019, column: 15, scope: !8893)
!8902 = !DILocation(line: 2019, column: 24, scope: !8893)
!8903 = !DILocation(line: 2020, column: 26, scope: !8893)
!8904 = !DILocation(line: 2020, column: 5, scope: !8893)
!8905 = !DILocation(line: 2020, column: 9, scope: !8893)
!8906 = !DILocation(line: 2020, column: 15, scope: !8893)
!8907 = !DILocation(line: 2020, column: 24, scope: !8893)
!8908 = !DILocation(line: 2021, column: 26, scope: !8893)
!8909 = !DILocation(line: 2021, column: 5, scope: !8893)
!8910 = !DILocation(line: 2021, column: 9, scope: !8893)
!8911 = !DILocation(line: 2021, column: 15, scope: !8893)
!8912 = !DILocation(line: 2021, column: 24, scope: !8893)
!8913 = !DILocation(line: 2022, column: 4, scope: !8893)
!8914 = !DILocation(line: 2024, column: 5, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2023, column: 9)
!8916 = !DILocation(line: 2024, column: 9, scope: !8915)
!8917 = !DILocation(line: 2024, column: 15, scope: !8915)
!8918 = !DILocation(line: 2024, column: 24, scope: !8915)
!8919 = !DILocation(line: 2025, column: 5, scope: !8915)
!8920 = !DILocation(line: 2025, column: 9, scope: !8915)
!8921 = !DILocation(line: 2025, column: 15, scope: !8915)
!8922 = !DILocation(line: 2025, column: 24, scope: !8915)
!8923 = !DILocation(line: 2026, column: 5, scope: !8915)
!8924 = !DILocation(line: 2026, column: 9, scope: !8915)
!8925 = !DILocation(line: 2026, column: 15, scope: !8915)
!8926 = !DILocation(line: 2026, column: 24, scope: !8915)
!8927 = !DILocation(line: 2027, column: 5, scope: !8915)
!8928 = !DILocation(line: 2027, column: 9, scope: !8915)
!8929 = !DILocation(line: 2027, column: 15, scope: !8915)
!8930 = !DILocation(line: 2027, column: 24, scope: !8915)
!8931 = !DILocation(line: 2029, column: 3, scope: !8867)
!8932 = !DILocation(line: 2012, column: 27, scope: !8862)
!8933 = !DILocation(line: 2012, column: 3, scope: !8862)
!8934 = distinct !{!8934, !8865, !8935}
!8935 = !DILocation(line: 2029, column: 3, scope: !8858)
!8936 = !DILocation(line: 2030, column: 2, scope: !8859)
!8937 = !DILocation(line: 2011, column: 27, scope: !8853)
!8938 = !DILocation(line: 2011, column: 2, scope: !8853)
!8939 = distinct !{!8939, !8856, !8940}
!8940 = !DILocation(line: 2030, column: 2, scope: !8850)
!8941 = !DILocation(line: 2031, column: 1, scope: !8824)
!8942 = distinct !DISubprogram(name: "RVBlurBitmap2_float", scope: !3, file: !3, line: 1830, type: !8943, scopeLine: 1839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{null, !76, !7, !7, !77, !7}
!8945 = !DILocalVariable(name: "map", arg: 1, scope: !8942, file: !3, line: 1830, type: !76)
!8946 = !DILocation(line: 1830, column: 40, scope: !8942)
!8947 = !DILocalVariable(name: "width", arg: 2, scope: !8942, file: !3, line: 1830, type: !7)
!8948 = !DILocation(line: 1830, column: 49, scope: !8942)
!8949 = !DILocalVariable(name: "height", arg: 3, scope: !8942, file: !3, line: 1830, type: !7)
!8950 = !DILocation(line: 1830, column: 60, scope: !8942)
!8951 = !DILocalVariable(name: "blur", arg: 4, scope: !8942, file: !3, line: 1830, type: !77)
!8952 = !DILocation(line: 1830, column: 74, scope: !8942)
!8953 = !DILocalVariable(name: "quality", arg: 5, scope: !8942, file: !3, line: 1830, type: !7)
!8954 = !DILocation(line: 1830, column: 84, scope: !8942)
!8955 = !DILocalVariable(name: "temp", scope: !8942, file: !3, line: 1840, type: !76)
!8956 = !DILocation(line: 1840, column: 9, scope: !8942)
!8957 = !DILocalVariable(name: "swap", scope: !8942, file: !3, line: 1840, type: !76)
!8958 = !DILocation(line: 1840, column: 23, scope: !8942)
!8959 = !DILocalVariable(name: "filter", scope: !8942, file: !3, line: 1841, type: !76)
!8960 = !DILocation(line: 1841, column: 9, scope: !8942)
!8961 = !DILocalVariable(name: "x", scope: !8942, file: !3, line: 1842, type: !7)
!8962 = !DILocation(line: 1842, column: 6, scope: !8942)
!8963 = !DILocalVariable(name: "y", scope: !8942, file: !3, line: 1842, type: !7)
!8964 = !DILocation(line: 1842, column: 9, scope: !8942)
!8965 = !DILocalVariable(name: "i", scope: !8942, file: !3, line: 1842, type: !7)
!8966 = !DILocation(line: 1842, column: 12, scope: !8942)
!8967 = !DILocalVariable(name: "fx", scope: !8942, file: !3, line: 1842, type: !7)
!8968 = !DILocation(line: 1842, column: 15, scope: !8942)
!8969 = !DILocalVariable(name: "fy", scope: !8942, file: !3, line: 1842, type: !7)
!8970 = !DILocation(line: 1842, column: 19, scope: !8942)
!8971 = !DILocalVariable(name: "index", scope: !8942, file: !3, line: 1843, type: !7)
!8972 = !DILocation(line: 1843, column: 6, scope: !8942)
!8973 = !DILocalVariable(name: "ix", scope: !8942, file: !3, line: 1843, type: !7)
!8974 = !DILocation(line: 1843, column: 13, scope: !8942)
!8975 = !DILocalVariable(name: "halfWidth", scope: !8942, file: !3, line: 1843, type: !7)
!8976 = !DILocation(line: 1843, column: 17, scope: !8942)
!8977 = !DILocalVariable(name: "fval", scope: !8942, file: !3, line: 1844, type: !77)
!8978 = !DILocation(line: 1844, column: 8, scope: !8942)
!8979 = !DILocalVariable(name: "k", scope: !8942, file: !3, line: 1844, type: !77)
!8980 = !DILocation(line: 1844, column: 14, scope: !8942)
!8981 = !DILocalVariable(name: "curColor", scope: !8942, file: !3, line: 1844, type: !123)
!8982 = !DILocation(line: 1844, column: 17, scope: !8942)
!8983 = !DILocalVariable(name: "curColor2", scope: !8942, file: !3, line: 1844, type: !123)
!8984 = !DILocation(line: 1844, column: 30, scope: !8942)
!8985 = !DILocalVariable(name: "weight", scope: !8942, file: !3, line: 1844, type: !77)
!8986 = !DILocation(line: 1844, column: 44, scope: !8942)
!8987 = !DILocation(line: 1847, column: 6, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1847, column: 6)
!8989 = !DILocation(line: 1847, column: 11, scope: !8988)
!8990 = !DILocation(line: 1847, column: 6, scope: !8942)
!8991 = !DILocation(line: 1848, column: 3, scope: !8988)
!8992 = !DILocation(line: 1851, column: 9, scope: !8942)
!8993 = !DILocation(line: 1851, column: 22, scope: !8942)
!8994 = !DILocation(line: 1851, column: 30, scope: !8942)
!8995 = !DILocation(line: 1851, column: 28, scope: !8942)
!8996 = !DILocation(line: 1851, column: 37, scope: !8942)
!8997 = !DILocation(line: 1851, column: 41, scope: !8942)
!8998 = !DILocation(line: 1851, column: 7, scope: !8942)
!8999 = !DILocation(line: 1852, column: 7, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1852, column: 6)
!9001 = !DILocation(line: 1852, column: 6, scope: !8942)
!9002 = !DILocation(line: 1853, column: 3, scope: !9000)
!9003 = !DILocation(line: 1856, column: 16, scope: !8942)
!9004 = !DILocation(line: 1856, column: 24, scope: !8942)
!9005 = !DILocation(line: 1856, column: 15, scope: !8942)
!9006 = !DILocation(line: 1856, column: 31, scope: !8942)
!9007 = !DILocation(line: 1856, column: 29, scope: !8942)
!9008 = !DILocation(line: 1856, column: 14, scope: !8942)
!9009 = !DILocation(line: 1856, column: 12, scope: !8942)
!9010 = !DILocation(line: 1857, column: 20, scope: !8942)
!9011 = !DILocation(line: 1857, column: 48, scope: !8942)
!9012 = !DILocation(line: 1857, column: 46, scope: !8942)
!9013 = !DILocation(line: 1857, column: 58, scope: !8942)
!9014 = !DILocation(line: 1857, column: 11, scope: !8942)
!9015 = !DILocation(line: 1857, column: 9, scope: !8942)
!9016 = !DILocation(line: 1858, column: 7, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1858, column: 6)
!9018 = !DILocation(line: 1858, column: 6, scope: !8942)
!9019 = !DILocation(line: 1859, column: 3, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1858, column: 15)
!9021 = !DILocation(line: 1859, column: 13, scope: !9020)
!9022 = !DILocation(line: 1860, column: 3, scope: !9020)
!9023 = !DILocation(line: 1868, column: 36, scope: !8942)
!9024 = !DILocation(line: 1868, column: 34, scope: !8942)
!9025 = !DILocation(line: 1868, column: 43, scope: !8942)
!9026 = !DILocation(line: 1868, column: 41, scope: !8942)
!9027 = !DILocation(line: 1868, column: 12, scope: !8942)
!9028 = !DILocation(line: 1868, column: 4, scope: !8942)
!9029 = !DILocation(line: 1870, column: 10, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1870, column: 2)
!9031 = !DILocation(line: 1870, column: 7, scope: !9030)
!9032 = !DILocation(line: 1870, column: 15, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 1870, column: 2)
!9034 = !DILocation(line: 1870, column: 20, scope: !9033)
!9035 = !DILocation(line: 1870, column: 18, scope: !9033)
!9036 = !DILocation(line: 1870, column: 2, scope: !9030)
!9037 = !DILocation(line: 1871, column: 23, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 1870, column: 37)
!9039 = !DILocation(line: 1871, column: 28, scope: !9038)
!9040 = !DILocation(line: 1871, column: 33, scope: !9038)
!9041 = !DILocation(line: 1871, column: 31, scope: !9038)
!9042 = !DILocation(line: 1871, column: 27, scope: !9038)
!9043 = !DILocation(line: 1871, column: 25, scope: !9038)
!9044 = !DILocation(line: 1871, column: 19, scope: !9038)
!9045 = !DILocation(line: 1871, column: 12, scope: !9038)
!9046 = !DILocation(line: 1871, column: 10, scope: !9038)
!9047 = !DILocation(line: 1872, column: 28, scope: !9038)
!9048 = !DILocation(line: 1872, column: 3, scope: !9038)
!9049 = !DILocation(line: 1872, column: 10, scope: !9038)
!9050 = !DILocation(line: 1872, column: 22, scope: !9038)
!9051 = !DILocation(line: 1872, column: 20, scope: !9038)
!9052 = !DILocation(line: 1872, column: 26, scope: !9038)
!9053 = !DILocation(line: 1873, column: 28, scope: !9038)
!9054 = !DILocation(line: 1873, column: 3, scope: !9038)
!9055 = !DILocation(line: 1873, column: 10, scope: !9038)
!9056 = !DILocation(line: 1873, column: 22, scope: !9038)
!9057 = !DILocation(line: 1873, column: 20, scope: !9038)
!9058 = !DILocation(line: 1873, column: 26, scope: !9038)
!9059 = !DILocation(line: 1874, column: 2, scope: !9038)
!9060 = !DILocation(line: 1870, column: 33, scope: !9033)
!9061 = !DILocation(line: 1870, column: 2, scope: !9033)
!9062 = distinct !{!9062, !9036, !9063}
!9063 = !DILocation(line: 1874, column: 2, scope: !9030)
!9064 = !DILocation(line: 1875, column: 14, scope: !8942)
!9065 = !DILocation(line: 1875, column: 2, scope: !8942)
!9066 = !DILocation(line: 1875, column: 12, scope: !8942)
!9067 = !DILocation(line: 1878, column: 7, scope: !8942)
!9068 = !DILocation(line: 1879, column: 10, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1879, column: 2)
!9070 = !DILocation(line: 1879, column: 7, scope: !9069)
!9071 = !DILocation(line: 1879, column: 15, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1879, column: 2)
!9073 = !DILocation(line: 1879, column: 20, scope: !9072)
!9074 = !DILocation(line: 1879, column: 30, scope: !9072)
!9075 = !DILocation(line: 1879, column: 18, scope: !9072)
!9076 = !DILocation(line: 1879, column: 2, scope: !9069)
!9077 = !DILocation(line: 1880, column: 11, scope: !9072)
!9078 = !DILocation(line: 1880, column: 18, scope: !9072)
!9079 = !DILocation(line: 1880, column: 8, scope: !9072)
!9080 = !DILocation(line: 1880, column: 3, scope: !9072)
!9081 = !DILocation(line: 1879, column: 37, scope: !9072)
!9082 = !DILocation(line: 1879, column: 2, scope: !9072)
!9083 = distinct !{!9083, !9076, !9084}
!9084 = !DILocation(line: 1880, column: 20, scope: !9069)
!9085 = !DILocation(line: 1882, column: 10, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1882, column: 2)
!9087 = !DILocation(line: 1882, column: 7, scope: !9086)
!9088 = !DILocation(line: 1882, column: 15, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 1882, column: 2)
!9090 = !DILocation(line: 1882, column: 20, scope: !9089)
!9091 = !DILocation(line: 1882, column: 30, scope: !9089)
!9092 = !DILocation(line: 1882, column: 18, scope: !9089)
!9093 = !DILocation(line: 1882, column: 2, scope: !9086)
!9094 = !DILocation(line: 1883, column: 17, scope: !9089)
!9095 = !DILocation(line: 1883, column: 3, scope: !9089)
!9096 = !DILocation(line: 1883, column: 10, scope: !9089)
!9097 = !DILocation(line: 1883, column: 14, scope: !9089)
!9098 = !DILocation(line: 1882, column: 37, scope: !9089)
!9099 = !DILocation(line: 1882, column: 2, scope: !9089)
!9100 = distinct !{!9100, !9093, !9101}
!9101 = !DILocation(line: 1883, column: 17, scope: !9086)
!9102 = !DILocation(line: 1886, column: 9, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1886, column: 2)
!9104 = !DILocation(line: 1886, column: 7, scope: !9103)
!9105 = !DILocation(line: 1886, column: 14, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 1886, column: 2)
!9107 = !DILocation(line: 1886, column: 18, scope: !9106)
!9108 = !DILocation(line: 1886, column: 16, scope: !9106)
!9109 = !DILocation(line: 1886, column: 2, scope: !9103)
!9110 = !DILocation(line: 1888, column: 10, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 1888, column: 3)
!9112 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 1886, column: 31)
!9113 = !DILocation(line: 1888, column: 8, scope: !9111)
!9114 = !DILocation(line: 1888, column: 15, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9111, file: !3, line: 1888, column: 3)
!9116 = !DILocation(line: 1888, column: 19, scope: !9115)
!9117 = !DILocation(line: 1888, column: 17, scope: !9115)
!9118 = !DILocation(line: 1888, column: 3, scope: !9111)
!9119 = !DILocation(line: 1889, column: 13, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 1888, column: 35)
!9121 = !DILocation(line: 1889, column: 17, scope: !9120)
!9122 = !DILocation(line: 1889, column: 21, scope: !9120)
!9123 = !DILocation(line: 1889, column: 19, scope: !9120)
!9124 = !DILocation(line: 1889, column: 15, scope: !9120)
!9125 = !DILocation(line: 1889, column: 28, scope: !9120)
!9126 = !DILocation(line: 1889, column: 10, scope: !9120)
!9127 = !DILocation(line: 1890, column: 7, scope: !9120)
!9128 = !DILocation(line: 1891, column: 32, scope: !9120)
!9129 = !DILocation(line: 1891, column: 44, scope: !9120)
!9130 = !DILocation(line: 1891, column: 18, scope: !9120)
!9131 = !DILocation(line: 1891, column: 30, scope: !9120)
!9132 = !DILocation(line: 1891, column: 4, scope: !9120)
!9133 = !DILocation(line: 1891, column: 16, scope: !9120)
!9134 = !DILocation(line: 1892, column: 34, scope: !9120)
!9135 = !DILocation(line: 1892, column: 47, scope: !9120)
!9136 = !DILocation(line: 1892, column: 19, scope: !9120)
!9137 = !DILocation(line: 1892, column: 32, scope: !9120)
!9138 = !DILocation(line: 1892, column: 4, scope: !9120)
!9139 = !DILocation(line: 1892, column: 17, scope: !9120)
!9140 = !DILocation(line: 1894, column: 13, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 1894, column: 4)
!9142 = !DILocation(line: 1894, column: 17, scope: !9141)
!9143 = !DILocation(line: 1894, column: 15, scope: !9141)
!9144 = !DILocation(line: 1894, column: 11, scope: !9141)
!9145 = !DILocation(line: 1894, column: 9, scope: !9141)
!9146 = !DILocation(line: 1894, column: 28, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 1894, column: 4)
!9148 = !DILocation(line: 1894, column: 32, scope: !9147)
!9149 = !DILocation(line: 1894, column: 36, scope: !9147)
!9150 = !DILocation(line: 1894, column: 34, scope: !9147)
!9151 = !DILocation(line: 1894, column: 30, scope: !9147)
!9152 = !DILocation(line: 1894, column: 4, scope: !9141)
!9153 = !DILocation(line: 1895, column: 10, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 1895, column: 9)
!9155 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 1894, column: 52)
!9156 = !DILocation(line: 1895, column: 12, scope: !9154)
!9157 = !DILocation(line: 1895, column: 18, scope: !9154)
!9158 = !DILocation(line: 1895, column: 22, scope: !9154)
!9159 = !DILocation(line: 1895, column: 26, scope: !9154)
!9160 = !DILocation(line: 1895, column: 24, scope: !9154)
!9161 = !DILocation(line: 1895, column: 9, scope: !9155)
!9162 = !DILocation(line: 1896, column: 21, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 1895, column: 34)
!9164 = !DILocation(line: 1896, column: 26, scope: !9163)
!9165 = !DILocation(line: 1896, column: 30, scope: !9163)
!9166 = !DILocation(line: 1896, column: 34, scope: !9163)
!9167 = !DILocation(line: 1896, column: 32, scope: !9163)
!9168 = !DILocation(line: 1896, column: 28, scope: !9163)
!9169 = !DILocation(line: 1896, column: 41, scope: !9163)
!9170 = !DILocation(line: 1896, column: 45, scope: !9163)
!9171 = !DILocation(line: 1896, column: 56, scope: !9163)
!9172 = !DILocation(line: 1896, column: 63, scope: !9163)
!9173 = !DILocation(line: 1896, column: 54, scope: !9163)
!9174 = !DILocation(line: 1896, column: 6, scope: !9163)
!9175 = !DILocation(line: 1896, column: 18, scope: !9163)
!9176 = !DILocation(line: 1897, column: 21, scope: !9163)
!9177 = !DILocation(line: 1897, column: 26, scope: !9163)
!9178 = !DILocation(line: 1897, column: 30, scope: !9163)
!9179 = !DILocation(line: 1897, column: 34, scope: !9163)
!9180 = !DILocation(line: 1897, column: 32, scope: !9163)
!9181 = !DILocation(line: 1897, column: 28, scope: !9163)
!9182 = !DILocation(line: 1897, column: 41, scope: !9163)
!9183 = !DILocation(line: 1897, column: 45, scope: !9163)
!9184 = !DILocation(line: 1897, column: 56, scope: !9163)
!9185 = !DILocation(line: 1897, column: 63, scope: !9163)
!9186 = !DILocation(line: 1897, column: 54, scope: !9163)
!9187 = !DILocation(line: 1897, column: 6, scope: !9163)
!9188 = !DILocation(line: 1897, column: 18, scope: !9163)
!9189 = !DILocation(line: 1898, column: 21, scope: !9163)
!9190 = !DILocation(line: 1898, column: 26, scope: !9163)
!9191 = !DILocation(line: 1898, column: 30, scope: !9163)
!9192 = !DILocation(line: 1898, column: 34, scope: !9163)
!9193 = !DILocation(line: 1898, column: 32, scope: !9163)
!9194 = !DILocation(line: 1898, column: 28, scope: !9163)
!9195 = !DILocation(line: 1898, column: 41, scope: !9163)
!9196 = !DILocation(line: 1898, column: 45, scope: !9163)
!9197 = !DILocation(line: 1898, column: 56, scope: !9163)
!9198 = !DILocation(line: 1898, column: 63, scope: !9163)
!9199 = !DILocation(line: 1898, column: 54, scope: !9163)
!9200 = !DILocation(line: 1898, column: 6, scope: !9163)
!9201 = !DILocation(line: 1898, column: 18, scope: !9163)
!9202 = !DILocation(line: 1900, column: 22, scope: !9163)
!9203 = !DILocation(line: 1900, column: 27, scope: !9163)
!9204 = !DILocation(line: 1900, column: 33, scope: !9163)
!9205 = !DILocation(line: 1900, column: 39, scope: !9163)
!9206 = !DILocation(line: 1900, column: 37, scope: !9163)
!9207 = !DILocation(line: 1900, column: 43, scope: !9163)
!9208 = !DILocation(line: 1900, column: 47, scope: !9163)
!9209 = !DILocation(line: 1900, column: 45, scope: !9163)
!9210 = !DILocation(line: 1900, column: 41, scope: !9163)
!9211 = !DILocation(line: 1900, column: 54, scope: !9163)
!9212 = !DILocation(line: 1900, column: 58, scope: !9163)
!9213 = !DILocation(line: 1900, column: 69, scope: !9163)
!9214 = !DILocation(line: 1900, column: 76, scope: !9163)
!9215 = !DILocation(line: 1900, column: 67, scope: !9163)
!9216 = !DILocation(line: 1900, column: 6, scope: !9163)
!9217 = !DILocation(line: 1900, column: 19, scope: !9163)
!9218 = !DILocation(line: 1901, column: 22, scope: !9163)
!9219 = !DILocation(line: 1901, column: 27, scope: !9163)
!9220 = !DILocation(line: 1901, column: 33, scope: !9163)
!9221 = !DILocation(line: 1901, column: 39, scope: !9163)
!9222 = !DILocation(line: 1901, column: 37, scope: !9163)
!9223 = !DILocation(line: 1901, column: 43, scope: !9163)
!9224 = !DILocation(line: 1901, column: 47, scope: !9163)
!9225 = !DILocation(line: 1901, column: 45, scope: !9163)
!9226 = !DILocation(line: 1901, column: 41, scope: !9163)
!9227 = !DILocation(line: 1901, column: 54, scope: !9163)
!9228 = !DILocation(line: 1901, column: 58, scope: !9163)
!9229 = !DILocation(line: 1901, column: 69, scope: !9163)
!9230 = !DILocation(line: 1901, column: 76, scope: !9163)
!9231 = !DILocation(line: 1901, column: 67, scope: !9163)
!9232 = !DILocation(line: 1901, column: 6, scope: !9163)
!9233 = !DILocation(line: 1901, column: 19, scope: !9163)
!9234 = !DILocation(line: 1902, column: 22, scope: !9163)
!9235 = !DILocation(line: 1902, column: 27, scope: !9163)
!9236 = !DILocation(line: 1902, column: 33, scope: !9163)
!9237 = !DILocation(line: 1902, column: 39, scope: !9163)
!9238 = !DILocation(line: 1902, column: 37, scope: !9163)
!9239 = !DILocation(line: 1902, column: 43, scope: !9163)
!9240 = !DILocation(line: 1902, column: 47, scope: !9163)
!9241 = !DILocation(line: 1902, column: 45, scope: !9163)
!9242 = !DILocation(line: 1902, column: 41, scope: !9163)
!9243 = !DILocation(line: 1902, column: 54, scope: !9163)
!9244 = !DILocation(line: 1902, column: 58, scope: !9163)
!9245 = !DILocation(line: 1902, column: 69, scope: !9163)
!9246 = !DILocation(line: 1902, column: 76, scope: !9163)
!9247 = !DILocation(line: 1902, column: 67, scope: !9163)
!9248 = !DILocation(line: 1902, column: 6, scope: !9163)
!9249 = !DILocation(line: 1902, column: 19, scope: !9163)
!9250 = !DILocation(line: 1903, column: 5, scope: !9163)
!9251 = !DILocation(line: 1904, column: 7, scope: !9155)
!9252 = !DILocation(line: 1905, column: 4, scope: !9155)
!9253 = !DILocation(line: 1894, column: 48, scope: !9147)
!9254 = !DILocation(line: 1894, column: 4, scope: !9147)
!9255 = distinct !{!9255, !9152, !9256}
!9256 = !DILocation(line: 1905, column: 4, scope: !9141)
!9257 = !DILocation(line: 1906, column: 26, scope: !9120)
!9258 = !DILocation(line: 1906, column: 4, scope: !9120)
!9259 = !DILocation(line: 1906, column: 9, scope: !9120)
!9260 = !DILocation(line: 1906, column: 15, scope: !9120)
!9261 = !DILocation(line: 1906, column: 24, scope: !9120)
!9262 = !DILocation(line: 1907, column: 26, scope: !9120)
!9263 = !DILocation(line: 1907, column: 4, scope: !9120)
!9264 = !DILocation(line: 1907, column: 9, scope: !9120)
!9265 = !DILocation(line: 1907, column: 15, scope: !9120)
!9266 = !DILocation(line: 1907, column: 24, scope: !9120)
!9267 = !DILocation(line: 1908, column: 26, scope: !9120)
!9268 = !DILocation(line: 1908, column: 4, scope: !9120)
!9269 = !DILocation(line: 1908, column: 9, scope: !9120)
!9270 = !DILocation(line: 1908, column: 15, scope: !9120)
!9271 = !DILocation(line: 1908, column: 24, scope: !9120)
!9272 = !DILocation(line: 1910, column: 54, scope: !9120)
!9273 = !DILocation(line: 1910, column: 4, scope: !9120)
!9274 = !DILocation(line: 1910, column: 11, scope: !9120)
!9275 = !DILocation(line: 1910, column: 17, scope: !9120)
!9276 = !DILocation(line: 1910, column: 23, scope: !9120)
!9277 = !DILocation(line: 1910, column: 21, scope: !9120)
!9278 = !DILocation(line: 1910, column: 27, scope: !9120)
!9279 = !DILocation(line: 1910, column: 31, scope: !9120)
!9280 = !DILocation(line: 1910, column: 29, scope: !9120)
!9281 = !DILocation(line: 1910, column: 25, scope: !9120)
!9282 = !DILocation(line: 1910, column: 38, scope: !9120)
!9283 = !DILocation(line: 1910, column: 43, scope: !9120)
!9284 = !DILocation(line: 1910, column: 52, scope: !9120)
!9285 = !DILocation(line: 1911, column: 54, scope: !9120)
!9286 = !DILocation(line: 1911, column: 4, scope: !9120)
!9287 = !DILocation(line: 1911, column: 11, scope: !9120)
!9288 = !DILocation(line: 1911, column: 17, scope: !9120)
!9289 = !DILocation(line: 1911, column: 23, scope: !9120)
!9290 = !DILocation(line: 1911, column: 21, scope: !9120)
!9291 = !DILocation(line: 1911, column: 27, scope: !9120)
!9292 = !DILocation(line: 1911, column: 31, scope: !9120)
!9293 = !DILocation(line: 1911, column: 29, scope: !9120)
!9294 = !DILocation(line: 1911, column: 25, scope: !9120)
!9295 = !DILocation(line: 1911, column: 38, scope: !9120)
!9296 = !DILocation(line: 1911, column: 43, scope: !9120)
!9297 = !DILocation(line: 1911, column: 52, scope: !9120)
!9298 = !DILocation(line: 1912, column: 54, scope: !9120)
!9299 = !DILocation(line: 1912, column: 4, scope: !9120)
!9300 = !DILocation(line: 1912, column: 11, scope: !9120)
!9301 = !DILocation(line: 1912, column: 17, scope: !9120)
!9302 = !DILocation(line: 1912, column: 23, scope: !9120)
!9303 = !DILocation(line: 1912, column: 21, scope: !9120)
!9304 = !DILocation(line: 1912, column: 27, scope: !9120)
!9305 = !DILocation(line: 1912, column: 31, scope: !9120)
!9306 = !DILocation(line: 1912, column: 29, scope: !9120)
!9307 = !DILocation(line: 1912, column: 25, scope: !9120)
!9308 = !DILocation(line: 1912, column: 38, scope: !9120)
!9309 = !DILocation(line: 1912, column: 43, scope: !9120)
!9310 = !DILocation(line: 1912, column: 52, scope: !9120)
!9311 = !DILocation(line: 1914, column: 3, scope: !9120)
!9312 = !DILocation(line: 1888, column: 31, scope: !9115)
!9313 = !DILocation(line: 1888, column: 3, scope: !9115)
!9314 = distinct !{!9314, !9118, !9315}
!9315 = !DILocation(line: 1914, column: 3, scope: !9111)
!9316 = !DILocation(line: 1917, column: 12, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 1917, column: 3)
!9318 = !DILocation(line: 1917, column: 10, scope: !9317)
!9319 = !DILocation(line: 1917, column: 8, scope: !9317)
!9320 = !DILocation(line: 1917, column: 23, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 1917, column: 3)
!9322 = !DILocation(line: 1917, column: 27, scope: !9321)
!9323 = !DILocation(line: 1917, column: 35, scope: !9321)
!9324 = !DILocation(line: 1917, column: 33, scope: !9321)
!9325 = !DILocation(line: 1917, column: 25, scope: !9321)
!9326 = !DILocation(line: 1917, column: 3, scope: !9317)
!9327 = !DILocation(line: 1918, column: 13, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 1917, column: 51)
!9329 = !DILocation(line: 1918, column: 17, scope: !9328)
!9330 = !DILocation(line: 1918, column: 21, scope: !9328)
!9331 = !DILocation(line: 1918, column: 19, scope: !9328)
!9332 = !DILocation(line: 1918, column: 15, scope: !9328)
!9333 = !DILocation(line: 1918, column: 28, scope: !9328)
!9334 = !DILocation(line: 1918, column: 10, scope: !9328)
!9335 = !DILocation(line: 1919, column: 7, scope: !9328)
!9336 = !DILocation(line: 1920, column: 12, scope: !9328)
!9337 = !DILocation(line: 1920, column: 4, scope: !9328)
!9338 = !DILocation(line: 1921, column: 13, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 1921, column: 4)
!9340 = !DILocation(line: 1921, column: 17, scope: !9339)
!9341 = !DILocation(line: 1921, column: 15, scope: !9339)
!9342 = !DILocation(line: 1921, column: 11, scope: !9339)
!9343 = !DILocation(line: 1921, column: 9, scope: !9339)
!9344 = !DILocation(line: 1921, column: 28, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9339, file: !3, line: 1921, column: 4)
!9346 = !DILocation(line: 1921, column: 32, scope: !9345)
!9347 = !DILocation(line: 1921, column: 36, scope: !9345)
!9348 = !DILocation(line: 1921, column: 34, scope: !9345)
!9349 = !DILocation(line: 1921, column: 30, scope: !9345)
!9350 = !DILocation(line: 1921, column: 4, scope: !9339)
!9351 = !DILocation(line: 1922, column: 20, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 1921, column: 52)
!9353 = !DILocation(line: 1922, column: 25, scope: !9352)
!9354 = !DILocation(line: 1922, column: 29, scope: !9352)
!9355 = !DILocation(line: 1922, column: 33, scope: !9352)
!9356 = !DILocation(line: 1922, column: 31, scope: !9352)
!9357 = !DILocation(line: 1922, column: 27, scope: !9352)
!9358 = !DILocation(line: 1922, column: 40, scope: !9352)
!9359 = !DILocation(line: 1922, column: 44, scope: !9352)
!9360 = !DILocation(line: 1922, column: 55, scope: !9352)
!9361 = !DILocation(line: 1922, column: 62, scope: !9352)
!9362 = !DILocation(line: 1922, column: 53, scope: !9352)
!9363 = !DILocation(line: 1922, column: 5, scope: !9352)
!9364 = !DILocation(line: 1922, column: 17, scope: !9352)
!9365 = !DILocation(line: 1923, column: 20, scope: !9352)
!9366 = !DILocation(line: 1923, column: 25, scope: !9352)
!9367 = !DILocation(line: 1923, column: 29, scope: !9352)
!9368 = !DILocation(line: 1923, column: 33, scope: !9352)
!9369 = !DILocation(line: 1923, column: 31, scope: !9352)
!9370 = !DILocation(line: 1923, column: 27, scope: !9352)
!9371 = !DILocation(line: 1923, column: 40, scope: !9352)
!9372 = !DILocation(line: 1923, column: 44, scope: !9352)
!9373 = !DILocation(line: 1923, column: 55, scope: !9352)
!9374 = !DILocation(line: 1923, column: 62, scope: !9352)
!9375 = !DILocation(line: 1923, column: 53, scope: !9352)
!9376 = !DILocation(line: 1923, column: 5, scope: !9352)
!9377 = !DILocation(line: 1923, column: 17, scope: !9352)
!9378 = !DILocation(line: 1924, column: 20, scope: !9352)
!9379 = !DILocation(line: 1924, column: 25, scope: !9352)
!9380 = !DILocation(line: 1924, column: 29, scope: !9352)
!9381 = !DILocation(line: 1924, column: 33, scope: !9352)
!9382 = !DILocation(line: 1924, column: 31, scope: !9352)
!9383 = !DILocation(line: 1924, column: 27, scope: !9352)
!9384 = !DILocation(line: 1924, column: 40, scope: !9352)
!9385 = !DILocation(line: 1924, column: 44, scope: !9352)
!9386 = !DILocation(line: 1924, column: 55, scope: !9352)
!9387 = !DILocation(line: 1924, column: 62, scope: !9352)
!9388 = !DILocation(line: 1924, column: 53, scope: !9352)
!9389 = !DILocation(line: 1924, column: 5, scope: !9352)
!9390 = !DILocation(line: 1924, column: 17, scope: !9352)
!9391 = !DILocation(line: 1925, column: 7, scope: !9352)
!9392 = !DILocation(line: 1926, column: 4, scope: !9352)
!9393 = !DILocation(line: 1921, column: 48, scope: !9345)
!9394 = !DILocation(line: 1921, column: 4, scope: !9345)
!9395 = distinct !{!9395, !9350, !9396}
!9396 = !DILocation(line: 1926, column: 4, scope: !9339)
!9397 = !DILocation(line: 1927, column: 26, scope: !9328)
!9398 = !DILocation(line: 1927, column: 4, scope: !9328)
!9399 = !DILocation(line: 1927, column: 9, scope: !9328)
!9400 = !DILocation(line: 1927, column: 15, scope: !9328)
!9401 = !DILocation(line: 1927, column: 24, scope: !9328)
!9402 = !DILocation(line: 1928, column: 26, scope: !9328)
!9403 = !DILocation(line: 1928, column: 4, scope: !9328)
!9404 = !DILocation(line: 1928, column: 9, scope: !9328)
!9405 = !DILocation(line: 1928, column: 15, scope: !9328)
!9406 = !DILocation(line: 1928, column: 24, scope: !9328)
!9407 = !DILocation(line: 1929, column: 26, scope: !9328)
!9408 = !DILocation(line: 1929, column: 4, scope: !9328)
!9409 = !DILocation(line: 1929, column: 9, scope: !9328)
!9410 = !DILocation(line: 1929, column: 15, scope: !9328)
!9411 = !DILocation(line: 1929, column: 24, scope: !9328)
!9412 = !DILocation(line: 1930, column: 3, scope: !9328)
!9413 = !DILocation(line: 1917, column: 47, scope: !9321)
!9414 = !DILocation(line: 1917, column: 3, scope: !9321)
!9415 = distinct !{!9415, !9326, !9416}
!9416 = !DILocation(line: 1930, column: 3, scope: !9317)
!9417 = !DILocation(line: 1931, column: 2, scope: !9112)
!9418 = !DILocation(line: 1886, column: 27, scope: !9106)
!9419 = !DILocation(line: 1886, column: 2, scope: !9106)
!9420 = distinct !{!9420, !9109, !9421}
!9421 = !DILocation(line: 1931, column: 2, scope: !9103)
!9422 = !DILocation(line: 1934, column: 9, scope: !8942)
!9423 = !DILocation(line: 1934, column: 7, scope: !8942)
!9424 = !DILocation(line: 1934, column: 22, scope: !8942)
!9425 = !DILocation(line: 1934, column: 20, scope: !8942)
!9426 = !DILocation(line: 1934, column: 33, scope: !8942)
!9427 = !DILocation(line: 1934, column: 31, scope: !8942)
!9428 = !DILocation(line: 1937, column: 9, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1937, column: 2)
!9430 = !DILocation(line: 1937, column: 7, scope: !9429)
!9431 = !DILocation(line: 1937, column: 14, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 1937, column: 2)
!9433 = !DILocation(line: 1937, column: 18, scope: !9432)
!9434 = !DILocation(line: 1937, column: 16, scope: !9432)
!9435 = !DILocation(line: 1937, column: 2, scope: !9429)
!9436 = !DILocation(line: 1939, column: 10, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 1939, column: 3)
!9438 = distinct !DILexicalBlock(scope: !9432, file: !3, line: 1937, column: 30)
!9439 = !DILocation(line: 1939, column: 8, scope: !9437)
!9440 = !DILocation(line: 1939, column: 15, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 1939, column: 3)
!9442 = !DILocation(line: 1939, column: 19, scope: !9441)
!9443 = !DILocation(line: 1939, column: 17, scope: !9441)
!9444 = !DILocation(line: 1939, column: 3, scope: !9437)
!9445 = !DILocation(line: 1940, column: 13, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9441, file: !3, line: 1939, column: 35)
!9447 = !DILocation(line: 1940, column: 17, scope: !9446)
!9448 = !DILocation(line: 1940, column: 21, scope: !9446)
!9449 = !DILocation(line: 1940, column: 19, scope: !9446)
!9450 = !DILocation(line: 1940, column: 15, scope: !9446)
!9451 = !DILocation(line: 1940, column: 28, scope: !9446)
!9452 = !DILocation(line: 1940, column: 10, scope: !9446)
!9453 = !DILocation(line: 1941, column: 7, scope: !9446)
!9454 = !DILocation(line: 1942, column: 12, scope: !9446)
!9455 = !DILocation(line: 1942, column: 4, scope: !9446)
!9456 = !DILocation(line: 1943, column: 12, scope: !9446)
!9457 = !DILocation(line: 1943, column: 4, scope: !9446)
!9458 = !DILocation(line: 1944, column: 13, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 1944, column: 4)
!9460 = !DILocation(line: 1944, column: 17, scope: !9459)
!9461 = !DILocation(line: 1944, column: 15, scope: !9459)
!9462 = !DILocation(line: 1944, column: 11, scope: !9459)
!9463 = !DILocation(line: 1944, column: 9, scope: !9459)
!9464 = !DILocation(line: 1944, column: 28, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 1944, column: 4)
!9466 = !DILocation(line: 1944, column: 32, scope: !9465)
!9467 = !DILocation(line: 1944, column: 36, scope: !9465)
!9468 = !DILocation(line: 1944, column: 34, scope: !9465)
!9469 = !DILocation(line: 1944, column: 30, scope: !9465)
!9470 = !DILocation(line: 1944, column: 4, scope: !9459)
!9471 = !DILocation(line: 1945, column: 10, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9473, file: !3, line: 1945, column: 9)
!9473 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 1944, column: 52)
!9474 = !DILocation(line: 1945, column: 12, scope: !9472)
!9475 = !DILocation(line: 1945, column: 18, scope: !9472)
!9476 = !DILocation(line: 1945, column: 22, scope: !9472)
!9477 = !DILocation(line: 1945, column: 26, scope: !9472)
!9478 = !DILocation(line: 1945, column: 24, scope: !9472)
!9479 = !DILocation(line: 1945, column: 9, scope: !9473)
!9480 = !DILocation(line: 1947, column: 21, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 1945, column: 35)
!9482 = !DILocation(line: 1947, column: 26, scope: !9481)
!9483 = !DILocation(line: 1947, column: 30, scope: !9481)
!9484 = !DILocation(line: 1947, column: 34, scope: !9481)
!9485 = !DILocation(line: 1947, column: 32, scope: !9481)
!9486 = !DILocation(line: 1947, column: 28, scope: !9481)
!9487 = !DILocation(line: 1947, column: 41, scope: !9481)
!9488 = !DILocation(line: 1947, column: 45, scope: !9481)
!9489 = !DILocation(line: 1947, column: 56, scope: !9481)
!9490 = !DILocation(line: 1947, column: 63, scope: !9481)
!9491 = !DILocation(line: 1947, column: 54, scope: !9481)
!9492 = !DILocation(line: 1947, column: 6, scope: !9481)
!9493 = !DILocation(line: 1947, column: 18, scope: !9481)
!9494 = !DILocation(line: 1948, column: 21, scope: !9481)
!9495 = !DILocation(line: 1948, column: 26, scope: !9481)
!9496 = !DILocation(line: 1948, column: 30, scope: !9481)
!9497 = !DILocation(line: 1948, column: 34, scope: !9481)
!9498 = !DILocation(line: 1948, column: 32, scope: !9481)
!9499 = !DILocation(line: 1948, column: 28, scope: !9481)
!9500 = !DILocation(line: 1948, column: 41, scope: !9481)
!9501 = !DILocation(line: 1948, column: 45, scope: !9481)
!9502 = !DILocation(line: 1948, column: 56, scope: !9481)
!9503 = !DILocation(line: 1948, column: 63, scope: !9481)
!9504 = !DILocation(line: 1948, column: 54, scope: !9481)
!9505 = !DILocation(line: 1948, column: 6, scope: !9481)
!9506 = !DILocation(line: 1948, column: 18, scope: !9481)
!9507 = !DILocation(line: 1949, column: 21, scope: !9481)
!9508 = !DILocation(line: 1949, column: 26, scope: !9481)
!9509 = !DILocation(line: 1949, column: 30, scope: !9481)
!9510 = !DILocation(line: 1949, column: 34, scope: !9481)
!9511 = !DILocation(line: 1949, column: 32, scope: !9481)
!9512 = !DILocation(line: 1949, column: 28, scope: !9481)
!9513 = !DILocation(line: 1949, column: 41, scope: !9481)
!9514 = !DILocation(line: 1949, column: 45, scope: !9481)
!9515 = !DILocation(line: 1949, column: 56, scope: !9481)
!9516 = !DILocation(line: 1949, column: 63, scope: !9481)
!9517 = !DILocation(line: 1949, column: 54, scope: !9481)
!9518 = !DILocation(line: 1949, column: 6, scope: !9481)
!9519 = !DILocation(line: 1949, column: 18, scope: !9481)
!9520 = !DILocation(line: 1952, column: 22, scope: !9481)
!9521 = !DILocation(line: 1952, column: 27, scope: !9481)
!9522 = !DILocation(line: 1952, column: 32, scope: !9481)
!9523 = !DILocation(line: 1952, column: 39, scope: !9481)
!9524 = !DILocation(line: 1952, column: 45, scope: !9481)
!9525 = !DILocation(line: 1952, column: 43, scope: !9481)
!9526 = !DILocation(line: 1952, column: 50, scope: !9481)
!9527 = !DILocation(line: 1952, column: 48, scope: !9481)
!9528 = !DILocation(line: 1952, column: 29, scope: !9481)
!9529 = !DILocation(line: 1952, column: 57, scope: !9481)
!9530 = !DILocation(line: 1952, column: 61, scope: !9481)
!9531 = !DILocation(line: 1952, column: 72, scope: !9481)
!9532 = !DILocation(line: 1952, column: 79, scope: !9481)
!9533 = !DILocation(line: 1952, column: 70, scope: !9481)
!9534 = !DILocation(line: 1952, column: 6, scope: !9481)
!9535 = !DILocation(line: 1952, column: 19, scope: !9481)
!9536 = !DILocation(line: 1953, column: 22, scope: !9481)
!9537 = !DILocation(line: 1953, column: 27, scope: !9481)
!9538 = !DILocation(line: 1953, column: 32, scope: !9481)
!9539 = !DILocation(line: 1953, column: 39, scope: !9481)
!9540 = !DILocation(line: 1953, column: 45, scope: !9481)
!9541 = !DILocation(line: 1953, column: 43, scope: !9481)
!9542 = !DILocation(line: 1953, column: 50, scope: !9481)
!9543 = !DILocation(line: 1953, column: 48, scope: !9481)
!9544 = !DILocation(line: 1953, column: 29, scope: !9481)
!9545 = !DILocation(line: 1953, column: 57, scope: !9481)
!9546 = !DILocation(line: 1953, column: 61, scope: !9481)
!9547 = !DILocation(line: 1953, column: 72, scope: !9481)
!9548 = !DILocation(line: 1953, column: 79, scope: !9481)
!9549 = !DILocation(line: 1953, column: 70, scope: !9481)
!9550 = !DILocation(line: 1953, column: 6, scope: !9481)
!9551 = !DILocation(line: 1953, column: 19, scope: !9481)
!9552 = !DILocation(line: 1954, column: 22, scope: !9481)
!9553 = !DILocation(line: 1954, column: 27, scope: !9481)
!9554 = !DILocation(line: 1954, column: 32, scope: !9481)
!9555 = !DILocation(line: 1954, column: 39, scope: !9481)
!9556 = !DILocation(line: 1954, column: 45, scope: !9481)
!9557 = !DILocation(line: 1954, column: 43, scope: !9481)
!9558 = !DILocation(line: 1954, column: 50, scope: !9481)
!9559 = !DILocation(line: 1954, column: 48, scope: !9481)
!9560 = !DILocation(line: 1954, column: 29, scope: !9481)
!9561 = !DILocation(line: 1954, column: 57, scope: !9481)
!9562 = !DILocation(line: 1954, column: 61, scope: !9481)
!9563 = !DILocation(line: 1954, column: 72, scope: !9481)
!9564 = !DILocation(line: 1954, column: 79, scope: !9481)
!9565 = !DILocation(line: 1954, column: 70, scope: !9481)
!9566 = !DILocation(line: 1954, column: 6, scope: !9481)
!9567 = !DILocation(line: 1954, column: 19, scope: !9481)
!9568 = !DILocation(line: 1955, column: 5, scope: !9481)
!9569 = !DILocation(line: 1956, column: 7, scope: !9473)
!9570 = !DILocation(line: 1957, column: 4, scope: !9473)
!9571 = !DILocation(line: 1944, column: 48, scope: !9465)
!9572 = !DILocation(line: 1944, column: 4, scope: !9465)
!9573 = distinct !{!9573, !9470, !9574}
!9574 = !DILocation(line: 1957, column: 4, scope: !9459)
!9575 = !DILocation(line: 1958, column: 26, scope: !9446)
!9576 = !DILocation(line: 1958, column: 4, scope: !9446)
!9577 = !DILocation(line: 1958, column: 9, scope: !9446)
!9578 = !DILocation(line: 1958, column: 15, scope: !9446)
!9579 = !DILocation(line: 1958, column: 24, scope: !9446)
!9580 = !DILocation(line: 1959, column: 26, scope: !9446)
!9581 = !DILocation(line: 1959, column: 4, scope: !9446)
!9582 = !DILocation(line: 1959, column: 9, scope: !9446)
!9583 = !DILocation(line: 1959, column: 15, scope: !9446)
!9584 = !DILocation(line: 1959, column: 24, scope: !9446)
!9585 = !DILocation(line: 1960, column: 26, scope: !9446)
!9586 = !DILocation(line: 1960, column: 4, scope: !9446)
!9587 = !DILocation(line: 1960, column: 9, scope: !9446)
!9588 = !DILocation(line: 1960, column: 15, scope: !9446)
!9589 = !DILocation(line: 1960, column: 24, scope: !9446)
!9590 = !DILocation(line: 1961, column: 57, scope: !9446)
!9591 = !DILocation(line: 1961, column: 4, scope: !9446)
!9592 = !DILocation(line: 1961, column: 11, scope: !9446)
!9593 = !DILocation(line: 1961, column: 16, scope: !9446)
!9594 = !DILocation(line: 1961, column: 23, scope: !9446)
!9595 = !DILocation(line: 1961, column: 29, scope: !9446)
!9596 = !DILocation(line: 1961, column: 27, scope: !9446)
!9597 = !DILocation(line: 1961, column: 34, scope: !9446)
!9598 = !DILocation(line: 1961, column: 32, scope: !9446)
!9599 = !DILocation(line: 1961, column: 13, scope: !9446)
!9600 = !DILocation(line: 1961, column: 41, scope: !9446)
!9601 = !DILocation(line: 1961, column: 46, scope: !9446)
!9602 = !DILocation(line: 1961, column: 55, scope: !9446)
!9603 = !DILocation(line: 1962, column: 57, scope: !9446)
!9604 = !DILocation(line: 1962, column: 4, scope: !9446)
!9605 = !DILocation(line: 1962, column: 11, scope: !9446)
!9606 = !DILocation(line: 1962, column: 16, scope: !9446)
!9607 = !DILocation(line: 1962, column: 23, scope: !9446)
!9608 = !DILocation(line: 1962, column: 29, scope: !9446)
!9609 = !DILocation(line: 1962, column: 27, scope: !9446)
!9610 = !DILocation(line: 1962, column: 34, scope: !9446)
!9611 = !DILocation(line: 1962, column: 32, scope: !9446)
!9612 = !DILocation(line: 1962, column: 13, scope: !9446)
!9613 = !DILocation(line: 1962, column: 41, scope: !9446)
!9614 = !DILocation(line: 1962, column: 46, scope: !9446)
!9615 = !DILocation(line: 1962, column: 55, scope: !9446)
!9616 = !DILocation(line: 1963, column: 57, scope: !9446)
!9617 = !DILocation(line: 1963, column: 4, scope: !9446)
!9618 = !DILocation(line: 1963, column: 11, scope: !9446)
!9619 = !DILocation(line: 1963, column: 16, scope: !9446)
!9620 = !DILocation(line: 1963, column: 23, scope: !9446)
!9621 = !DILocation(line: 1963, column: 29, scope: !9446)
!9622 = !DILocation(line: 1963, column: 27, scope: !9446)
!9623 = !DILocation(line: 1963, column: 34, scope: !9446)
!9624 = !DILocation(line: 1963, column: 32, scope: !9446)
!9625 = !DILocation(line: 1963, column: 13, scope: !9446)
!9626 = !DILocation(line: 1963, column: 41, scope: !9446)
!9627 = !DILocation(line: 1963, column: 46, scope: !9446)
!9628 = !DILocation(line: 1963, column: 55, scope: !9446)
!9629 = !DILocation(line: 1964, column: 3, scope: !9446)
!9630 = !DILocation(line: 1939, column: 31, scope: !9441)
!9631 = !DILocation(line: 1939, column: 3, scope: !9441)
!9632 = distinct !{!9632, !9444, !9633}
!9633 = !DILocation(line: 1964, column: 3, scope: !9437)
!9634 = !DILocation(line: 1967, column: 12, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 1967, column: 3)
!9636 = !DILocation(line: 1967, column: 10, scope: !9635)
!9637 = !DILocation(line: 1967, column: 8, scope: !9635)
!9638 = !DILocation(line: 1967, column: 23, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 1967, column: 3)
!9640 = !DILocation(line: 1967, column: 27, scope: !9639)
!9641 = !DILocation(line: 1967, column: 36, scope: !9639)
!9642 = !DILocation(line: 1967, column: 34, scope: !9639)
!9643 = !DILocation(line: 1967, column: 25, scope: !9639)
!9644 = !DILocation(line: 1967, column: 3, scope: !9635)
!9645 = !DILocation(line: 1968, column: 13, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 1967, column: 52)
!9647 = !DILocation(line: 1968, column: 17, scope: !9646)
!9648 = !DILocation(line: 1968, column: 21, scope: !9646)
!9649 = !DILocation(line: 1968, column: 19, scope: !9646)
!9650 = !DILocation(line: 1968, column: 15, scope: !9646)
!9651 = !DILocation(line: 1968, column: 28, scope: !9646)
!9652 = !DILocation(line: 1968, column: 10, scope: !9646)
!9653 = !DILocation(line: 1969, column: 7, scope: !9646)
!9654 = !DILocation(line: 1970, column: 12, scope: !9646)
!9655 = !DILocation(line: 1970, column: 4, scope: !9646)
!9656 = !DILocation(line: 1971, column: 13, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 1971, column: 4)
!9658 = !DILocation(line: 1971, column: 17, scope: !9657)
!9659 = !DILocation(line: 1971, column: 15, scope: !9657)
!9660 = !DILocation(line: 1971, column: 11, scope: !9657)
!9661 = !DILocation(line: 1971, column: 9, scope: !9657)
!9662 = !DILocation(line: 1971, column: 28, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 1971, column: 4)
!9664 = !DILocation(line: 1971, column: 32, scope: !9663)
!9665 = !DILocation(line: 1971, column: 36, scope: !9663)
!9666 = !DILocation(line: 1971, column: 34, scope: !9663)
!9667 = !DILocation(line: 1971, column: 30, scope: !9663)
!9668 = !DILocation(line: 1971, column: 4, scope: !9657)
!9669 = !DILocation(line: 1972, column: 20, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 1971, column: 52)
!9671 = !DILocation(line: 1972, column: 25, scope: !9670)
!9672 = !DILocation(line: 1972, column: 29, scope: !9670)
!9673 = !DILocation(line: 1972, column: 33, scope: !9670)
!9674 = !DILocation(line: 1972, column: 31, scope: !9670)
!9675 = !DILocation(line: 1972, column: 27, scope: !9670)
!9676 = !DILocation(line: 1972, column: 40, scope: !9670)
!9677 = !DILocation(line: 1972, column: 44, scope: !9670)
!9678 = !DILocation(line: 1972, column: 55, scope: !9670)
!9679 = !DILocation(line: 1972, column: 62, scope: !9670)
!9680 = !DILocation(line: 1972, column: 53, scope: !9670)
!9681 = !DILocation(line: 1972, column: 5, scope: !9670)
!9682 = !DILocation(line: 1972, column: 17, scope: !9670)
!9683 = !DILocation(line: 1973, column: 20, scope: !9670)
!9684 = !DILocation(line: 1973, column: 25, scope: !9670)
!9685 = !DILocation(line: 1973, column: 29, scope: !9670)
!9686 = !DILocation(line: 1973, column: 33, scope: !9670)
!9687 = !DILocation(line: 1973, column: 31, scope: !9670)
!9688 = !DILocation(line: 1973, column: 27, scope: !9670)
!9689 = !DILocation(line: 1973, column: 40, scope: !9670)
!9690 = !DILocation(line: 1973, column: 44, scope: !9670)
!9691 = !DILocation(line: 1973, column: 55, scope: !9670)
!9692 = !DILocation(line: 1973, column: 62, scope: !9670)
!9693 = !DILocation(line: 1973, column: 53, scope: !9670)
!9694 = !DILocation(line: 1973, column: 5, scope: !9670)
!9695 = !DILocation(line: 1973, column: 17, scope: !9670)
!9696 = !DILocation(line: 1974, column: 20, scope: !9670)
!9697 = !DILocation(line: 1974, column: 25, scope: !9670)
!9698 = !DILocation(line: 1974, column: 29, scope: !9670)
!9699 = !DILocation(line: 1974, column: 33, scope: !9670)
!9700 = !DILocation(line: 1974, column: 31, scope: !9670)
!9701 = !DILocation(line: 1974, column: 27, scope: !9670)
!9702 = !DILocation(line: 1974, column: 40, scope: !9670)
!9703 = !DILocation(line: 1974, column: 44, scope: !9670)
!9704 = !DILocation(line: 1974, column: 55, scope: !9670)
!9705 = !DILocation(line: 1974, column: 62, scope: !9670)
!9706 = !DILocation(line: 1974, column: 53, scope: !9670)
!9707 = !DILocation(line: 1974, column: 5, scope: !9670)
!9708 = !DILocation(line: 1974, column: 17, scope: !9670)
!9709 = !DILocation(line: 1975, column: 7, scope: !9670)
!9710 = !DILocation(line: 1976, column: 4, scope: !9670)
!9711 = !DILocation(line: 1971, column: 48, scope: !9663)
!9712 = !DILocation(line: 1971, column: 4, scope: !9663)
!9713 = distinct !{!9713, !9668, !9714}
!9714 = !DILocation(line: 1976, column: 4, scope: !9657)
!9715 = !DILocation(line: 1977, column: 26, scope: !9646)
!9716 = !DILocation(line: 1977, column: 4, scope: !9646)
!9717 = !DILocation(line: 1977, column: 9, scope: !9646)
!9718 = !DILocation(line: 1977, column: 15, scope: !9646)
!9719 = !DILocation(line: 1977, column: 24, scope: !9646)
!9720 = !DILocation(line: 1978, column: 26, scope: !9646)
!9721 = !DILocation(line: 1978, column: 4, scope: !9646)
!9722 = !DILocation(line: 1978, column: 9, scope: !9646)
!9723 = !DILocation(line: 1978, column: 15, scope: !9646)
!9724 = !DILocation(line: 1978, column: 24, scope: !9646)
!9725 = !DILocation(line: 1979, column: 26, scope: !9646)
!9726 = !DILocation(line: 1979, column: 4, scope: !9646)
!9727 = !DILocation(line: 1979, column: 9, scope: !9646)
!9728 = !DILocation(line: 1979, column: 15, scope: !9646)
!9729 = !DILocation(line: 1979, column: 24, scope: !9646)
!9730 = !DILocation(line: 1980, column: 3, scope: !9646)
!9731 = !DILocation(line: 1967, column: 48, scope: !9639)
!9732 = !DILocation(line: 1967, column: 3, scope: !9639)
!9733 = distinct !{!9733, !9644, !9734}
!9734 = !DILocation(line: 1980, column: 3, scope: !9635)
!9735 = !DILocation(line: 1981, column: 2, scope: !9438)
!9736 = !DILocation(line: 1937, column: 26, scope: !9432)
!9737 = !DILocation(line: 1937, column: 2, scope: !9432)
!9738 = distinct !{!9738, !9435, !9739}
!9739 = !DILocation(line: 1981, column: 2, scope: !9429)
!9740 = !DILocation(line: 1984, column: 9, scope: !8942)
!9741 = !DILocation(line: 1984, column: 7, scope: !8942)
!9742 = !DILocation(line: 1984, column: 22, scope: !8942)
!9743 = !DILocation(line: 1984, column: 20, scope: !8942)
!9744 = !DILocation(line: 1987, column: 2, scope: !8942)
!9745 = !DILocation(line: 1987, column: 12, scope: !8942)
!9746 = !DILocation(line: 1988, column: 2, scope: !8942)
!9747 = !DILocation(line: 1988, column: 12, scope: !8942)
!9748 = !DILocation(line: 1989, column: 1, scope: !8942)
!9749 = distinct !DISubprogram(name: "RVAddBitmaps_float", scope: !3, file: !3, line: 1991, type: !9750, scopeLine: 1992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!9750 = !DISubroutineType(types: !9751)
!9751 = !{null, !76, !76, !76, !7, !7}
!9752 = !DILocalVariable(name: "a", arg: 1, scope: !9749, file: !3, line: 1991, type: !76)
!9753 = !DILocation(line: 1991, column: 39, scope: !9749)
!9754 = !DILocalVariable(name: "b", arg: 2, scope: !9749, file: !3, line: 1991, type: !76)
!9755 = !DILocation(line: 1991, column: 49, scope: !9749)
!9756 = !DILocalVariable(name: "c", arg: 3, scope: !9749, file: !3, line: 1991, type: !76)
!9757 = !DILocation(line: 1991, column: 59, scope: !9749)
!9758 = !DILocalVariable(name: "width", arg: 4, scope: !9749, file: !3, line: 1991, type: !7)
!9759 = !DILocation(line: 1991, column: 66, scope: !9749)
!9760 = !DILocalVariable(name: "height", arg: 5, scope: !9749, file: !3, line: 1991, type: !7)
!9761 = !DILocation(line: 1991, column: 77, scope: !9749)
!9762 = !DILocalVariable(name: "x", scope: !9749, file: !3, line: 1993, type: !7)
!9763 = !DILocation(line: 1993, column: 6, scope: !9749)
!9764 = !DILocalVariable(name: "y", scope: !9749, file: !3, line: 1993, type: !7)
!9765 = !DILocation(line: 1993, column: 9, scope: !9749)
!9766 = !DILocalVariable(name: "index", scope: !9749, file: !3, line: 1993, type: !7)
!9767 = !DILocation(line: 1993, column: 12, scope: !9749)
!9768 = !DILocation(line: 1995, column: 9, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 1995, column: 2)
!9770 = !DILocation(line: 1995, column: 7, scope: !9769)
!9771 = !DILocation(line: 1995, column: 14, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1995, column: 2)
!9773 = !DILocation(line: 1995, column: 18, scope: !9772)
!9774 = !DILocation(line: 1995, column: 16, scope: !9772)
!9775 = !DILocation(line: 1995, column: 2, scope: !9769)
!9776 = !DILocation(line: 1996, column: 10, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9778, file: !3, line: 1996, column: 3)
!9778 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 1995, column: 31)
!9779 = !DILocation(line: 1996, column: 8, scope: !9777)
!9780 = !DILocation(line: 1996, column: 15, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9777, file: !3, line: 1996, column: 3)
!9782 = !DILocation(line: 1996, column: 19, scope: !9781)
!9783 = !DILocation(line: 1996, column: 17, scope: !9781)
!9784 = !DILocation(line: 1996, column: 3, scope: !9777)
!9785 = !DILocation(line: 1997, column: 13, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 1996, column: 31)
!9787 = !DILocation(line: 1997, column: 17, scope: !9786)
!9788 = !DILocation(line: 1997, column: 21, scope: !9786)
!9789 = !DILocation(line: 1997, column: 19, scope: !9786)
!9790 = !DILocation(line: 1997, column: 15, scope: !9786)
!9791 = !DILocation(line: 1997, column: 28, scope: !9786)
!9792 = !DILocation(line: 1997, column: 10, scope: !9786)
!9793 = !DILocation(line: 1998, column: 23, scope: !9786)
!9794 = !DILocation(line: 1998, column: 4, scope: !9786)
!9795 = !DILocation(line: 1998, column: 6, scope: !9786)
!9796 = !DILocation(line: 1998, column: 12, scope: !9786)
!9797 = !DILocation(line: 1998, column: 21, scope: !9786)
!9798 = !DILocation(line: 1999, column: 23, scope: !9786)
!9799 = !DILocation(line: 1999, column: 4, scope: !9786)
!9800 = !DILocation(line: 1999, column: 6, scope: !9786)
!9801 = !DILocation(line: 1999, column: 12, scope: !9786)
!9802 = !DILocation(line: 1999, column: 21, scope: !9786)
!9803 = !DILocation(line: 2000, column: 23, scope: !9786)
!9804 = !DILocation(line: 2000, column: 4, scope: !9786)
!9805 = !DILocation(line: 2000, column: 6, scope: !9786)
!9806 = !DILocation(line: 2000, column: 12, scope: !9786)
!9807 = !DILocation(line: 2000, column: 21, scope: !9786)
!9808 = !DILocation(line: 2001, column: 23, scope: !9786)
!9809 = !DILocation(line: 2001, column: 4, scope: !9786)
!9810 = !DILocation(line: 2001, column: 6, scope: !9786)
!9811 = !DILocation(line: 2001, column: 12, scope: !9786)
!9812 = !DILocation(line: 2001, column: 21, scope: !9786)
!9813 = !DILocation(line: 2002, column: 3, scope: !9786)
!9814 = !DILocation(line: 1996, column: 27, scope: !9781)
!9815 = !DILocation(line: 1996, column: 3, scope: !9781)
!9816 = distinct !{!9816, !9784, !9817}
!9817 = !DILocation(line: 2002, column: 3, scope: !9777)
!9818 = !DILocation(line: 2003, column: 2, scope: !9778)
!9819 = !DILocation(line: 1995, column: 27, scope: !9772)
!9820 = !DILocation(line: 1995, column: 2, scope: !9772)
!9821 = distinct !{!9821, !9775, !9822}
!9822 = !DILocation(line: 2003, column: 2, scope: !9769)
!9823 = !DILocation(line: 2004, column: 1, scope: !9749)
!9824 = distinct !DISubprogram(name: "zero_v3", scope: !9825, file: !9825, line: 43, type: !9826, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!9825 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9826 = !DISubroutineType(types: !9827)
!9827 = !{null, !76}
!9828 = !DILocalVariable(name: "r", arg: 1, scope: !9824, file: !9825, line: 43, type: !76)
!9829 = !DILocation(line: 43, column: 28, scope: !9824)
!9830 = !DILocation(line: 45, column: 2, scope: !9824)
!9831 = !DILocation(line: 45, column: 7, scope: !9824)
!9832 = !DILocation(line: 46, column: 2, scope: !9824)
!9833 = !DILocation(line: 46, column: 7, scope: !9824)
!9834 = !DILocation(line: 47, column: 2, scope: !9824)
!9835 = !DILocation(line: 47, column: 7, scope: !9824)
!9836 = !DILocation(line: 48, column: 1, scope: !9824)
!9837 = distinct !DISubprogram(name: "do_transform", scope: !3, file: !3, line: 1785, type: !9838, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!9838 = !DISubroutineType(types: !9839)
!9839 = !{null, !170, !360, !77, !7, !7, !2144, !2144}
!9840 = !DILocalVariable(name: "scene", arg: 1, scope: !9837, file: !3, line: 1785, type: !170)
!9841 = !DILocation(line: 1785, column: 33, scope: !9837)
!9842 = !DILocalVariable(name: "seq", arg: 2, scope: !9837, file: !3, line: 1785, type: !360)
!9843 = !DILocation(line: 1785, column: 50, scope: !9837)
!9844 = !DILocalVariable(name: "UNUSED_facf0", arg: 3, scope: !9837, file: !3, line: 1785, type: !77)
!9845 = !DILocation(line: 1785, column: 61, scope: !9837)
!9846 = !DILocalVariable(name: "x", arg: 4, scope: !9837, file: !3, line: 1785, type: !7)
!9847 = !DILocation(line: 1785, column: 80, scope: !9837)
!9848 = !DILocalVariable(name: "y", arg: 5, scope: !9837, file: !3, line: 1785, type: !7)
!9849 = !DILocation(line: 1785, column: 87, scope: !9837)
!9850 = !DILocalVariable(name: "ibuf1", arg: 6, scope: !9837, file: !3, line: 1785, type: !2144)
!9851 = !DILocation(line: 1785, column: 98, scope: !9837)
!9852 = !DILocalVariable(name: "out", arg: 7, scope: !9837, file: !3, line: 1785, type: !2144)
!9853 = !DILocation(line: 1785, column: 112, scope: !9837)
!9854 = !DILocalVariable(name: "transform", scope: !9837, file: !3, line: 1787, type: !106)
!9855 = !DILocation(line: 1787, column: 17, scope: !9837)
!9856 = !DILocation(line: 1787, column: 47, scope: !9837)
!9857 = !DILocation(line: 1787, column: 52, scope: !9837)
!9858 = !DILocation(line: 1787, column: 29, scope: !9837)
!9859 = !DILocalVariable(name: "scale_x", scope: !9837, file: !3, line: 1788, type: !77)
!9860 = !DILocation(line: 1788, column: 8, scope: !9837)
!9861 = !DILocalVariable(name: "scale_y", scope: !9837, file: !3, line: 1788, type: !77)
!9862 = !DILocation(line: 1788, column: 17, scope: !9837)
!9863 = !DILocalVariable(name: "translate_x", scope: !9837, file: !3, line: 1788, type: !77)
!9864 = !DILocation(line: 1788, column: 26, scope: !9837)
!9865 = !DILocalVariable(name: "translate_y", scope: !9837, file: !3, line: 1788, type: !77)
!9866 = !DILocation(line: 1788, column: 39, scope: !9837)
!9867 = !DILocalVariable(name: "rotate_radians", scope: !9837, file: !3, line: 1788, type: !77)
!9868 = !DILocation(line: 1788, column: 52, scope: !9837)
!9869 = !DILocation(line: 1791, column: 6, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1791, column: 6)
!9871 = !DILocation(line: 1791, column: 17, scope: !9870)
!9872 = !DILocation(line: 1791, column: 6, scope: !9837)
!9873 = !DILocation(line: 1792, column: 23, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 1791, column: 32)
!9875 = !DILocation(line: 1792, column: 34, scope: !9874)
!9876 = !DILocation(line: 1792, column: 21, scope: !9874)
!9877 = !DILocation(line: 1792, column: 11, scope: !9874)
!9878 = !DILocation(line: 1793, column: 2, scope: !9874)
!9879 = !DILocation(line: 1795, column: 13, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 1794, column: 7)
!9881 = !DILocation(line: 1795, column: 24, scope: !9880)
!9882 = !DILocation(line: 1795, column: 11, scope: !9880)
!9883 = !DILocation(line: 1796, column: 13, scope: !9880)
!9884 = !DILocation(line: 1796, column: 24, scope: !9880)
!9885 = !DILocation(line: 1796, column: 11, scope: !9880)
!9886 = !DILocation(line: 1800, column: 7, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1800, column: 6)
!9888 = !DILocation(line: 1800, column: 18, scope: !9887)
!9889 = !DILocation(line: 1800, column: 6, scope: !9837)
!9890 = !DILocalVariable(name: "rd_s", scope: !9891, file: !3, line: 1801, type: !77)
!9891 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 1800, column: 27)
!9892 = !DILocation(line: 1801, column: 9, scope: !9891)
!9893 = !DILocation(line: 1801, column: 17, scope: !9891)
!9894 = !DILocation(line: 1801, column: 24, scope: !9891)
!9895 = !DILocation(line: 1801, column: 26, scope: !9891)
!9896 = !DILocation(line: 1801, column: 31, scope: !9891)
!9897 = !DILocation(line: 1803, column: 17, scope: !9891)
!9898 = !DILocation(line: 1803, column: 28, scope: !9891)
!9899 = !DILocation(line: 1803, column: 35, scope: !9891)
!9900 = !DILocation(line: 1803, column: 33, scope: !9891)
!9901 = !DILocation(line: 1803, column: 43, scope: !9891)
!9902 = !DILocation(line: 1803, column: 45, scope: !9891)
!9903 = !DILocation(line: 1803, column: 40, scope: !9891)
!9904 = !DILocation(line: 1803, column: 15, scope: !9891)
!9905 = !DILocation(line: 1804, column: 17, scope: !9891)
!9906 = !DILocation(line: 1804, column: 28, scope: !9891)
!9907 = !DILocation(line: 1804, column: 35, scope: !9891)
!9908 = !DILocation(line: 1804, column: 33, scope: !9891)
!9909 = !DILocation(line: 1804, column: 43, scope: !9891)
!9910 = !DILocation(line: 1804, column: 45, scope: !9891)
!9911 = !DILocation(line: 1804, column: 40, scope: !9891)
!9912 = !DILocation(line: 1804, column: 15, scope: !9891)
!9913 = !DILocation(line: 1805, column: 2, scope: !9891)
!9914 = !DILocation(line: 1807, column: 17, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 1806, column: 7)
!9916 = !DILocation(line: 1807, column: 22, scope: !9915)
!9917 = !DILocation(line: 1807, column: 33, scope: !9915)
!9918 = !DILocation(line: 1807, column: 38, scope: !9915)
!9919 = !DILocation(line: 1807, column: 19, scope: !9915)
!9920 = !DILocation(line: 1807, column: 51, scope: !9915)
!9921 = !DILocation(line: 1807, column: 53, scope: !9915)
!9922 = !DILocation(line: 1807, column: 48, scope: !9915)
!9923 = !DILocation(line: 1807, column: 15, scope: !9915)
!9924 = !DILocation(line: 1808, column: 17, scope: !9915)
!9925 = !DILocation(line: 1808, column: 22, scope: !9915)
!9926 = !DILocation(line: 1808, column: 33, scope: !9915)
!9927 = !DILocation(line: 1808, column: 38, scope: !9915)
!9928 = !DILocation(line: 1808, column: 19, scope: !9915)
!9929 = !DILocation(line: 1808, column: 51, scope: !9915)
!9930 = !DILocation(line: 1808, column: 53, scope: !9915)
!9931 = !DILocation(line: 1808, column: 48, scope: !9915)
!9932 = !DILocation(line: 1808, column: 15, scope: !9915)
!9933 = !DILocation(line: 1812, column: 19, scope: !9837)
!9934 = !DILocation(line: 1812, column: 17, scope: !9837)
!9935 = !DILocation(line: 1814, column: 18, scope: !9837)
!9936 = !DILocation(line: 1814, column: 21, scope: !9837)
!9937 = !DILocation(line: 1814, column: 24, scope: !9837)
!9938 = !DILocation(line: 1814, column: 31, scope: !9837)
!9939 = !DILocation(line: 1814, column: 36, scope: !9837)
!9940 = !DILocation(line: 1814, column: 45, scope: !9837)
!9941 = !DILocation(line: 1814, column: 54, scope: !9837)
!9942 = !DILocation(line: 1814, column: 67, scope: !9837)
!9943 = !DILocation(line: 1814, column: 80, scope: !9837)
!9944 = !DILocation(line: 1814, column: 96, scope: !9837)
!9945 = !DILocation(line: 1814, column: 107, scope: !9837)
!9946 = !DILocation(line: 1814, column: 2, scope: !9837)
!9947 = !DILocation(line: 1815, column: 1, scope: !9837)
!9948 = distinct !DISubprogram(name: "transform_image", scope: !3, file: !3, line: 1737, type: !9949, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!9949 = !DISubroutineType(types: !9950)
!9950 = !{null, !7, !7, !2144, !2144, !77, !77, !77, !77, !77, !7}
!9951 = !DILocalVariable(name: "x", arg: 1, scope: !9948, file: !3, line: 1737, type: !7)
!9952 = !DILocation(line: 1737, column: 33, scope: !9948)
!9953 = !DILocalVariable(name: "y", arg: 2, scope: !9948, file: !3, line: 1737, type: !7)
!9954 = !DILocation(line: 1737, column: 40, scope: !9948)
!9955 = !DILocalVariable(name: "ibuf1", arg: 3, scope: !9948, file: !3, line: 1737, type: !2144)
!9956 = !DILocation(line: 1737, column: 50, scope: !9948)
!9957 = !DILocalVariable(name: "out", arg: 4, scope: !9948, file: !3, line: 1737, type: !2144)
!9958 = !DILocation(line: 1737, column: 64, scope: !9948)
!9959 = !DILocalVariable(name: "scale_x", arg: 5, scope: !9948, file: !3, line: 1737, type: !77)
!9960 = !DILocation(line: 1737, column: 76, scope: !9948)
!9961 = !DILocalVariable(name: "scale_y", arg: 6, scope: !9948, file: !3, line: 1737, type: !77)
!9962 = !DILocation(line: 1737, column: 91, scope: !9948)
!9963 = !DILocalVariable(name: "translate_x", arg: 7, scope: !9948, file: !3, line: 1738, type: !77)
!9964 = !DILocation(line: 1738, column: 35, scope: !9948)
!9965 = !DILocalVariable(name: "translate_y", arg: 8, scope: !9948, file: !3, line: 1738, type: !77)
!9966 = !DILocation(line: 1738, column: 54, scope: !9948)
!9967 = !DILocalVariable(name: "rotate", arg: 9, scope: !9948, file: !3, line: 1738, type: !77)
!9968 = !DILocation(line: 1738, column: 73, scope: !9948)
!9969 = !DILocalVariable(name: "interpolation", arg: 10, scope: !9948, file: !3, line: 1738, type: !7)
!9970 = !DILocation(line: 1738, column: 85, scope: !9948)
!9971 = !DILocalVariable(name: "xo", scope: !9948, file: !3, line: 1740, type: !7)
!9972 = !DILocation(line: 1740, column: 6, scope: !9948)
!9973 = !DILocalVariable(name: "yo", scope: !9948, file: !3, line: 1740, type: !7)
!9974 = !DILocation(line: 1740, column: 10, scope: !9948)
!9975 = !DILocalVariable(name: "xi", scope: !9948, file: !3, line: 1740, type: !7)
!9976 = !DILocation(line: 1740, column: 14, scope: !9948)
!9977 = !DILocalVariable(name: "yi", scope: !9948, file: !3, line: 1740, type: !7)
!9978 = !DILocation(line: 1740, column: 18, scope: !9948)
!9979 = !DILocalVariable(name: "xt", scope: !9948, file: !3, line: 1741, type: !77)
!9980 = !DILocation(line: 1741, column: 8, scope: !9948)
!9981 = !DILocalVariable(name: "yt", scope: !9948, file: !3, line: 1741, type: !77)
!9982 = !DILocation(line: 1741, column: 12, scope: !9948)
!9983 = !DILocalVariable(name: "xr", scope: !9948, file: !3, line: 1741, type: !77)
!9984 = !DILocation(line: 1741, column: 16, scope: !9948)
!9985 = !DILocalVariable(name: "yr", scope: !9948, file: !3, line: 1741, type: !77)
!9986 = !DILocation(line: 1741, column: 20, scope: !9948)
!9987 = !DILocalVariable(name: "s", scope: !9948, file: !3, line: 1742, type: !77)
!9988 = !DILocation(line: 1742, column: 8, scope: !9948)
!9989 = !DILocalVariable(name: "c", scope: !9948, file: !3, line: 1742, type: !77)
!9990 = !DILocation(line: 1742, column: 11, scope: !9948)
!9991 = !DILocation(line: 1744, column: 7, scope: !9948)
!9992 = !DILocation(line: 1744, column: 5, scope: !9948)
!9993 = !DILocation(line: 1745, column: 7, scope: !9948)
!9994 = !DILocation(line: 1745, column: 5, scope: !9948)
!9995 = !DILocation(line: 1748, column: 11, scope: !9948)
!9996 = !DILocation(line: 1748, column: 6, scope: !9948)
!9997 = !DILocation(line: 1748, column: 4, scope: !9948)
!9998 = !DILocation(line: 1749, column: 11, scope: !9948)
!9999 = !DILocation(line: 1749, column: 6, scope: !9948)
!10000 = !DILocation(line: 1749, column: 4, scope: !9948)
!10001 = !DILocation(line: 1751, column: 10, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 1751, column: 2)
!10003 = !DILocation(line: 1751, column: 7, scope: !10002)
!10004 = !DILocation(line: 1751, column: 15, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 1751, column: 2)
!10006 = !DILocation(line: 1751, column: 20, scope: !10005)
!10007 = !DILocation(line: 1751, column: 18, scope: !10005)
!10008 = !DILocation(line: 1751, column: 2, scope: !10002)
!10009 = !DILocation(line: 1752, column: 11, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 1752, column: 3)
!10011 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 1751, column: 30)
!10012 = !DILocation(line: 1752, column: 8, scope: !10010)
!10013 = !DILocation(line: 1752, column: 16, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 1752, column: 3)
!10015 = !DILocation(line: 1752, column: 21, scope: !10014)
!10016 = !DILocation(line: 1752, column: 19, scope: !10014)
!10017 = !DILocation(line: 1752, column: 3, scope: !10010)
!10018 = !DILocation(line: 1754, column: 9, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 1752, column: 31)
!10020 = !DILocation(line: 1754, column: 14, scope: !10019)
!10021 = !DILocation(line: 1754, column: 12, scope: !10019)
!10022 = !DILocation(line: 1754, column: 7, scope: !10019)
!10023 = !DILocation(line: 1755, column: 9, scope: !10019)
!10024 = !DILocation(line: 1755, column: 14, scope: !10019)
!10025 = !DILocation(line: 1755, column: 12, scope: !10019)
!10026 = !DILocation(line: 1755, column: 7, scope: !10019)
!10027 = !DILocation(line: 1758, column: 10, scope: !10019)
!10028 = !DILocation(line: 1758, column: 14, scope: !10019)
!10029 = !DILocation(line: 1758, column: 12, scope: !10019)
!10030 = !DILocation(line: 1758, column: 19, scope: !10019)
!10031 = !DILocation(line: 1758, column: 23, scope: !10019)
!10032 = !DILocation(line: 1758, column: 21, scope: !10019)
!10033 = !DILocation(line: 1758, column: 17, scope: !10019)
!10034 = !DILocation(line: 1758, column: 7, scope: !10019)
!10035 = !DILocation(line: 1759, column: 10, scope: !10019)
!10036 = !DILocation(line: 1759, column: 9, scope: !10019)
!10037 = !DILocation(line: 1759, column: 14, scope: !10019)
!10038 = !DILocation(line: 1759, column: 12, scope: !10019)
!10039 = !DILocation(line: 1759, column: 19, scope: !10019)
!10040 = !DILocation(line: 1759, column: 23, scope: !10019)
!10041 = !DILocation(line: 1759, column: 21, scope: !10019)
!10042 = !DILocation(line: 1759, column: 17, scope: !10019)
!10043 = !DILocation(line: 1759, column: 7, scope: !10019)
!10044 = !DILocation(line: 1762, column: 9, scope: !10019)
!10045 = !DILocation(line: 1762, column: 14, scope: !10019)
!10046 = !DILocation(line: 1762, column: 12, scope: !10019)
!10047 = !DILocation(line: 1762, column: 7, scope: !10019)
!10048 = !DILocation(line: 1763, column: 9, scope: !10019)
!10049 = !DILocation(line: 1763, column: 14, scope: !10019)
!10050 = !DILocation(line: 1763, column: 12, scope: !10019)
!10051 = !DILocation(line: 1763, column: 7, scope: !10019)
!10052 = !DILocation(line: 1766, column: 11, scope: !10019)
!10053 = !DILocation(line: 1766, column: 14, scope: !10019)
!10054 = !DILocation(line: 1766, column: 7, scope: !10019)
!10055 = !DILocation(line: 1767, column: 11, scope: !10019)
!10056 = !DILocation(line: 1767, column: 14, scope: !10019)
!10057 = !DILocation(line: 1767, column: 7, scope: !10019)
!10058 = !DILocation(line: 1770, column: 12, scope: !10019)
!10059 = !DILocation(line: 1770, column: 4, scope: !10019)
!10060 = !DILocation(line: 1772, column: 28, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 1770, column: 27)
!10062 = !DILocation(line: 1772, column: 35, scope: !10061)
!10063 = !DILocation(line: 1772, column: 40, scope: !10061)
!10064 = !DILocation(line: 1772, column: 44, scope: !10061)
!10065 = !DILocation(line: 1772, column: 48, scope: !10061)
!10066 = !DILocation(line: 1772, column: 52, scope: !10061)
!10067 = !DILocation(line: 1772, column: 6, scope: !10061)
!10068 = !DILocation(line: 1773, column: 6, scope: !10061)
!10069 = !DILocation(line: 1775, column: 29, scope: !10061)
!10070 = !DILocation(line: 1775, column: 36, scope: !10061)
!10071 = !DILocation(line: 1775, column: 41, scope: !10061)
!10072 = !DILocation(line: 1775, column: 45, scope: !10061)
!10073 = !DILocation(line: 1775, column: 49, scope: !10061)
!10074 = !DILocation(line: 1775, column: 53, scope: !10061)
!10075 = !DILocation(line: 1775, column: 6, scope: !10061)
!10076 = !DILocation(line: 1776, column: 6, scope: !10061)
!10077 = !DILocation(line: 1778, column: 28, scope: !10061)
!10078 = !DILocation(line: 1778, column: 35, scope: !10061)
!10079 = !DILocation(line: 1778, column: 40, scope: !10061)
!10080 = !DILocation(line: 1778, column: 44, scope: !10061)
!10081 = !DILocation(line: 1778, column: 48, scope: !10061)
!10082 = !DILocation(line: 1778, column: 52, scope: !10061)
!10083 = !DILocation(line: 1778, column: 6, scope: !10061)
!10084 = !DILocation(line: 1779, column: 6, scope: !10061)
!10085 = !DILocation(line: 1781, column: 3, scope: !10019)
!10086 = !DILocation(line: 1752, column: 27, scope: !10014)
!10087 = !DILocation(line: 1752, column: 3, scope: !10014)
!10088 = distinct !{!10088, !10017, !10089}
!10089 = !DILocation(line: 1781, column: 3, scope: !10010)
!10090 = !DILocation(line: 1782, column: 2, scope: !10011)
!10091 = !DILocation(line: 1751, column: 26, scope: !10005)
!10092 = !DILocation(line: 1751, column: 2, scope: !10005)
!10093 = distinct !{!10093, !10008, !10094}
!10094 = !DILocation(line: 1782, column: 2, scope: !10002)
!10095 = !DILocation(line: 1783, column: 1, scope: !9948)
!10096 = distinct !DISubprogram(name: "do_adjustment_impl", scope: !3, file: !3, line: 2306, type: !10097, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!10097 = !DISubroutineType(types: !10098)
!10098 = !{!2144, !1759, !360, !77}
!10099 = !DILocalVariable(name: "context", arg: 1, scope: !10096, file: !3, line: 2306, type: !1759)
!10100 = !DILocation(line: 2306, column: 55, scope: !10096)
!10101 = !DILocalVariable(name: "seq", arg: 2, scope: !10096, file: !3, line: 2306, type: !360)
!10102 = !DILocation(line: 2306, column: 74, scope: !10096)
!10103 = !DILocalVariable(name: "cfra", arg: 3, scope: !10096, file: !3, line: 2306, type: !77)
!10104 = !DILocation(line: 2306, column: 85, scope: !10096)
!10105 = !DILocalVariable(name: "ed", scope: !10096, file: !3, line: 2308, type: !3876)
!10106 = !DILocation(line: 2308, column: 11, scope: !10096)
!10107 = !DILocalVariable(name: "seqbasep", scope: !10096, file: !3, line: 2309, type: !356)
!10108 = !DILocation(line: 2309, column: 12, scope: !10096)
!10109 = !DILocalVariable(name: "i", scope: !10096, file: !3, line: 2310, type: !2144)
!10110 = !DILocation(line: 2310, column: 9, scope: !10096)
!10111 = !DILocation(line: 2312, column: 7, scope: !10096)
!10112 = !DILocation(line: 2312, column: 16, scope: !10096)
!10113 = !DILocation(line: 2312, column: 23, scope: !10096)
!10114 = !DILocation(line: 2312, column: 5, scope: !10096)
!10115 = !DILocation(line: 2314, column: 35, scope: !10096)
!10116 = !DILocation(line: 2314, column: 39, scope: !10096)
!10117 = !DILocation(line: 2314, column: 48, scope: !10096)
!10118 = !DILocation(line: 2314, column: 13, scope: !10096)
!10119 = !DILocation(line: 2314, column: 11, scope: !10096)
!10120 = !DILocation(line: 2316, column: 6, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 2316, column: 6)
!10122 = !DILocation(line: 2316, column: 11, scope: !10121)
!10123 = !DILocation(line: 2316, column: 19, scope: !10121)
!10124 = !DILocation(line: 2316, column: 6, scope: !10096)
!10125 = !DILocation(line: 2317, column: 39, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 2316, column: 24)
!10127 = !DILocation(line: 2317, column: 48, scope: !10126)
!10128 = !DILocation(line: 2317, column: 54, scope: !10126)
!10129 = !DILocation(line: 2317, column: 59, scope: !10126)
!10130 = !DILocation(line: 2317, column: 67, scope: !10126)
!10131 = !DILocation(line: 2317, column: 72, scope: !10126)
!10132 = !DILocation(line: 2317, column: 7, scope: !10126)
!10133 = !DILocation(line: 2317, column: 5, scope: !10126)
!10134 = !DILocation(line: 2318, column: 2, scope: !10126)
!10135 = !DILocation(line: 2325, column: 7, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 2325, column: 6)
!10137 = !DILocation(line: 2325, column: 6, scope: !10096)
!10138 = !DILocalVariable(name: "meta", scope: !10139, file: !3, line: 2326, type: !360)
!10139 = distinct !DILexicalBlock(scope: !10136, file: !3, line: 2325, column: 10)
!10140 = !DILocation(line: 2326, column: 13, scope: !10139)
!10141 = !DILocation(line: 2328, column: 34, scope: !10139)
!10142 = !DILocation(line: 2328, column: 38, scope: !10139)
!10143 = !DILocation(line: 2328, column: 53, scope: !10139)
!10144 = !DILocation(line: 2328, column: 10, scope: !10139)
!10145 = !DILocation(line: 2328, column: 8, scope: !10139)
!10146 = !DILocation(line: 2330, column: 7, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10139, file: !3, line: 2330, column: 7)
!10148 = !DILocation(line: 2330, column: 7, scope: !10139)
!10149 = !DILocation(line: 2331, column: 27, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10147, file: !3, line: 2330, column: 13)
!10151 = !DILocation(line: 2331, column: 36, scope: !10150)
!10152 = !DILocation(line: 2331, column: 42, scope: !10150)
!10153 = !DILocation(line: 2331, column: 8, scope: !10150)
!10154 = !DILocation(line: 2331, column: 6, scope: !10150)
!10155 = !DILocation(line: 2332, column: 3, scope: !10150)
!10156 = !DILocation(line: 2333, column: 2, scope: !10139)
!10157 = !DILocation(line: 2335, column: 9, scope: !10096)
!10158 = !DILocation(line: 2335, column: 2, scope: !10096)
!10159 = distinct !DISubprogram(name: "do_gaussian_blur_effect_float", scope: !3, file: !3, line: 2748, type: !10160, scopeLine: 2754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!10160 = !DISubroutineType(types: !10161)
!10161 = !{null, !360, !7, !7, !7, !7, !7, !76, !76}
!10162 = !DILocalVariable(name: "seq", arg: 1, scope: !10159, file: !3, line: 2748, type: !360)
!10163 = !DILocation(line: 2748, column: 53, scope: !10159)
!10164 = !DILocalVariable(name: "start_line", arg: 2, scope: !10159, file: !3, line: 2749, type: !7)
!10165 = !DILocation(line: 2749, column: 47, scope: !10159)
!10166 = !DILocalVariable(name: "x", arg: 3, scope: !10159, file: !3, line: 2750, type: !7)
!10167 = !DILocation(line: 2750, column: 47, scope: !10159)
!10168 = !DILocalVariable(name: "y", arg: 4, scope: !10159, file: !3, line: 2750, type: !7)
!10169 = !DILocation(line: 2750, column: 54, scope: !10159)
!10170 = !DILocalVariable(name: "frame_width", arg: 5, scope: !10159, file: !3, line: 2751, type: !7)
!10171 = !DILocation(line: 2751, column: 47, scope: !10159)
!10172 = !DILocalVariable(name: "frame_height", arg: 6, scope: !10159, file: !3, line: 2751, type: !7)
!10173 = !DILocation(line: 2751, column: 64, scope: !10159)
!10174 = !DILocalVariable(name: "rect", arg: 7, scope: !10159, file: !3, line: 2752, type: !76)
!10175 = !DILocation(line: 2752, column: 50, scope: !10159)
!10176 = !DILocalVariable(name: "out", arg: 8, scope: !10159, file: !3, line: 2753, type: !76)
!10177 = !DILocation(line: 2753, column: 50, scope: !10159)
!10178 = !DILocalVariable(name: "data", scope: !10159, file: !3, line: 2756, type: !4061)
!10179 = !DILocation(line: 2756, column: 20, scope: !10159)
!10180 = !DILocation(line: 2756, column: 27, scope: !10159)
!10181 = !DILocation(line: 2756, column: 32, scope: !10159)
!10182 = !DILocalVariable(name: "size_x", scope: !10159, file: !3, line: 2757, type: !10183)
!10183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!10184 = !DILocation(line: 2757, column: 12, scope: !10159)
!10185 = !DILocation(line: 2757, column: 28, scope: !10159)
!10186 = !DILocation(line: 2757, column: 34, scope: !10159)
!10187 = !DILocation(line: 2757, column: 41, scope: !10159)
!10188 = !DILocation(line: 2757, column: 21, scope: !10159)
!10189 = !DILocalVariable(name: "size_y", scope: !10159, file: !3, line: 2758, type: !10183)
!10190 = !DILocation(line: 2758, column: 12, scope: !10159)
!10191 = !DILocation(line: 2758, column: 28, scope: !10159)
!10192 = !DILocation(line: 2758, column: 34, scope: !10159)
!10193 = !DILocation(line: 2758, column: 41, scope: !10159)
!10194 = !DILocation(line: 2758, column: 21, scope: !10159)
!10195 = !DILocalVariable(name: "i", scope: !10159, file: !3, line: 2759, type: !7)
!10196 = !DILocation(line: 2759, column: 6, scope: !10159)
!10197 = !DILocalVariable(name: "j", scope: !10159, file: !3, line: 2759, type: !7)
!10198 = !DILocation(line: 2759, column: 9, scope: !10159)
!10199 = !DILocalVariable(name: "gausstab_x", scope: !10159, file: !3, line: 2762, type: !76)
!10200 = !DILocation(line: 2762, column: 9, scope: !10159)
!10201 = !DILocalVariable(name: "gausstab_y", scope: !10159, file: !3, line: 2762, type: !76)
!10202 = !DILocation(line: 2762, column: 22, scope: !10159)
!10203 = !DILocation(line: 2763, column: 41, scope: !10159)
!10204 = !DILocation(line: 2763, column: 47, scope: !10159)
!10205 = !DILocation(line: 2763, column: 55, scope: !10159)
!10206 = !DILocation(line: 2763, column: 15, scope: !10159)
!10207 = !DILocation(line: 2763, column: 13, scope: !10159)
!10208 = !DILocation(line: 2764, column: 6, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 2764, column: 6)
!10210 = !DILocation(line: 2764, column: 12, scope: !10209)
!10211 = !DILocation(line: 2764, column: 22, scope: !10209)
!10212 = !DILocation(line: 2764, column: 28, scope: !10209)
!10213 = !DILocation(line: 2764, column: 19, scope: !10209)
!10214 = !DILocation(line: 2764, column: 6, scope: !10159)
!10215 = !DILocation(line: 2765, column: 16, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 2764, column: 36)
!10217 = !DILocation(line: 2765, column: 14, scope: !10216)
!10218 = !DILocation(line: 2766, column: 2, scope: !10216)
!10219 = !DILocation(line: 2768, column: 42, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 2767, column: 7)
!10221 = !DILocation(line: 2768, column: 48, scope: !10220)
!10222 = !DILocation(line: 2768, column: 56, scope: !10220)
!10223 = !DILocation(line: 2768, column: 16, scope: !10220)
!10224 = !DILocation(line: 2768, column: 14, scope: !10220)
!10225 = !DILocation(line: 2771, column: 9, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 2771, column: 2)
!10227 = !DILocation(line: 2771, column: 7, scope: !10226)
!10228 = !DILocation(line: 2771, column: 14, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 2771, column: 2)
!10230 = !DILocation(line: 2771, column: 18, scope: !10229)
!10231 = !DILocation(line: 2771, column: 16, scope: !10229)
!10232 = !DILocation(line: 2771, column: 2, scope: !10226)
!10233 = !DILocation(line: 2772, column: 10, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 2772, column: 3)
!10235 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 2771, column: 26)
!10236 = !DILocation(line: 2772, column: 8, scope: !10234)
!10237 = !DILocation(line: 2772, column: 15, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 2772, column: 3)
!10239 = !DILocation(line: 2772, column: 19, scope: !10238)
!10240 = !DILocation(line: 2772, column: 17, scope: !10238)
!10241 = !DILocation(line: 2772, column: 3, scope: !10234)
!10242 = !DILocalVariable(name: "out_index", scope: !10243, file: !3, line: 2773, type: !7)
!10243 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 2772, column: 27)
!10244 = !DILocation(line: 2773, column: 8, scope: !10243)
!10245 = !DILocation(line: 2773, column: 20, scope: !10243)
!10246 = !DILocalVariable(name: "current_x", scope: !10243, file: !3, line: 2774, type: !7)
!10247 = !DILocation(line: 2774, column: 8, scope: !10243)
!10248 = !DILocalVariable(name: "current_y", scope: !10243, file: !3, line: 2774, type: !7)
!10249 = !DILocation(line: 2774, column: 19, scope: !10243)
!10250 = !DILocalVariable(name: "accum", scope: !10243, file: !3, line: 2775, type: !722)
!10251 = !DILocation(line: 2775, column: 10, scope: !10243)
!10252 = !DILocalVariable(name: "accum_weight", scope: !10243, file: !3, line: 2776, type: !77)
!10253 = !DILocation(line: 2776, column: 10, scope: !10243)
!10254 = !DILocation(line: 2777, column: 21, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10243, file: !3, line: 2777, column: 4)
!10256 = !DILocation(line: 2777, column: 25, scope: !10255)
!10257 = !DILocation(line: 2777, column: 23, scope: !10255)
!10258 = !DILocation(line: 2777, column: 19, scope: !10255)
!10259 = !DILocation(line: 2777, column: 9, scope: !10255)
!10260 = !DILocation(line: 2778, column: 9, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 2777, column: 4)
!10262 = !DILocation(line: 2778, column: 22, scope: !10261)
!10263 = !DILocation(line: 2778, column: 26, scope: !10261)
!10264 = !DILocation(line: 2778, column: 24, scope: !10261)
!10265 = !DILocation(line: 2778, column: 19, scope: !10261)
!10266 = !DILocation(line: 2777, column: 4, scope: !10255)
!10267 = !DILocalVariable(name: "weight", scope: !10268, file: !3, line: 2781, type: !77)
!10268 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 2780, column: 4)
!10269 = !DILocation(line: 2781, column: 11, scope: !10268)
!10270 = !DILocation(line: 2782, column: 9, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 2782, column: 9)
!10272 = !DILocation(line: 2782, column: 22, scope: !10271)
!10273 = !DILocation(line: 2782, column: 21, scope: !10271)
!10274 = !DILocation(line: 2782, column: 19, scope: !10271)
!10275 = !DILocation(line: 2782, column: 33, scope: !10271)
!10276 = !DILocation(line: 2783, column: 9, scope: !10271)
!10277 = !DILocation(line: 2783, column: 21, scope: !10271)
!10278 = !DILocation(line: 2783, column: 19, scope: !10271)
!10279 = !DILocation(line: 2783, column: 35, scope: !10271)
!10280 = !DILocation(line: 2783, column: 32, scope: !10271)
!10281 = !DILocation(line: 2782, column: 9, scope: !10268)
!10282 = !DILocation(line: 2786, column: 6, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 2784, column: 5)
!10284 = !DILocation(line: 2789, column: 22, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 2789, column: 5)
!10286 = !DILocation(line: 2789, column: 26, scope: !10285)
!10287 = !DILocation(line: 2789, column: 24, scope: !10285)
!10288 = !DILocation(line: 2789, column: 20, scope: !10285)
!10289 = !DILocation(line: 2789, column: 10, scope: !10285)
!10290 = !DILocation(line: 2790, column: 10, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 2789, column: 5)
!10292 = !DILocation(line: 2790, column: 23, scope: !10291)
!10293 = !DILocation(line: 2790, column: 27, scope: !10291)
!10294 = !DILocation(line: 2790, column: 25, scope: !10291)
!10295 = !DILocation(line: 2790, column: 20, scope: !10291)
!10296 = !DILocation(line: 2789, column: 5, scope: !10285)
!10297 = !DILocalVariable(name: "index", scope: !10298, file: !3, line: 2793, type: !7)
!10298 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 2792, column: 5)
!10299 = !DILocation(line: 2793, column: 10, scope: !10298)
!10300 = !DILocation(line: 2793, column: 18, scope: !10298)
!10301 = !DILocation(line: 2794, column: 10, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 2794, column: 10)
!10303 = !DILocation(line: 2794, column: 20, scope: !10302)
!10304 = !DILocation(line: 2794, column: 24, scope: !10302)
!10305 = !DILocation(line: 2794, column: 27, scope: !10302)
!10306 = !DILocation(line: 2794, column: 40, scope: !10302)
!10307 = !DILocation(line: 2794, column: 37, scope: !10302)
!10308 = !DILocation(line: 2794, column: 10, scope: !10298)
!10309 = !DILocation(line: 2796, column: 7, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 2794, column: 53)
!10311 = !DILocation(line: 2799, column: 10, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 2799, column: 10)
!10313 = !DILocation(line: 2799, column: 17, scope: !10312)
!10314 = !DILocation(line: 2799, column: 22, scope: !10312)
!10315 = !DILocation(line: 2799, column: 25, scope: !10312)
!10316 = !DILocation(line: 2799, column: 32, scope: !10312)
!10317 = !DILocation(line: 2799, column: 10, scope: !10298)
!10318 = !DILocation(line: 2800, column: 16, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 2799, column: 38)
!10320 = !DILocation(line: 2800, column: 27, scope: !10319)
!10321 = !DILocation(line: 2800, column: 39, scope: !10319)
!10322 = !DILocation(line: 2800, column: 37, scope: !10319)
!10323 = !DILocation(line: 2800, column: 43, scope: !10319)
!10324 = !DILocation(line: 2800, column: 41, scope: !10319)
!10325 = !DILocation(line: 2801, column: 8, scope: !10319)
!10326 = !DILocation(line: 2801, column: 19, scope: !10319)
!10327 = !DILocation(line: 2801, column: 31, scope: !10319)
!10328 = !DILocation(line: 2801, column: 29, scope: !10319)
!10329 = !DILocation(line: 2801, column: 35, scope: !10319)
!10330 = !DILocation(line: 2801, column: 33, scope: !10319)
!10331 = !DILocation(line: 2800, column: 51, scope: !10319)
!10332 = !DILocation(line: 2800, column: 14, scope: !10319)
!10333 = !DILocation(line: 2802, column: 6, scope: !10319)
!10334 = !DILocation(line: 2803, column: 15, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 2803, column: 15)
!10336 = !DILocation(line: 2803, column: 22, scope: !10335)
!10337 = !DILocation(line: 2803, column: 15, scope: !10312)
!10338 = !DILocation(line: 2804, column: 16, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 2803, column: 28)
!10340 = !DILocation(line: 2804, column: 27, scope: !10339)
!10341 = !DILocation(line: 2804, column: 39, scope: !10339)
!10342 = !DILocation(line: 2804, column: 37, scope: !10339)
!10343 = !DILocation(line: 2804, column: 43, scope: !10339)
!10344 = !DILocation(line: 2804, column: 41, scope: !10339)
!10345 = !DILocation(line: 2804, column: 14, scope: !10339)
!10346 = !DILocation(line: 2805, column: 6, scope: !10339)
!10347 = !DILocation(line: 2807, column: 16, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 2806, column: 11)
!10349 = !DILocation(line: 2807, column: 27, scope: !10348)
!10350 = !DILocation(line: 2807, column: 39, scope: !10348)
!10351 = !DILocation(line: 2807, column: 37, scope: !10348)
!10352 = !DILocation(line: 2807, column: 43, scope: !10348)
!10353 = !DILocation(line: 2807, column: 41, scope: !10348)
!10354 = !DILocation(line: 2807, column: 14, scope: !10348)
!10355 = !DILocation(line: 2809, column: 19, scope: !10298)
!10356 = !DILocation(line: 2809, column: 27, scope: !10298)
!10357 = !DILocation(line: 2809, column: 32, scope: !10298)
!10358 = !DILocation(line: 2809, column: 40, scope: !10298)
!10359 = !DILocation(line: 2809, column: 6, scope: !10298)
!10360 = !DILocation(line: 2810, column: 22, scope: !10298)
!10361 = !DILocation(line: 2810, column: 19, scope: !10298)
!10362 = !DILocation(line: 2811, column: 5, scope: !10298)
!10363 = !DILocation(line: 2791, column: 10, scope: !10291)
!10364 = !DILocation(line: 2789, column: 5, scope: !10291)
!10365 = distinct !{!10365, !10296, !10366}
!10366 = !DILocation(line: 2811, column: 5, scope: !10285)
!10367 = !DILocation(line: 2812, column: 4, scope: !10268)
!10368 = !DILocation(line: 2779, column: 9, scope: !10261)
!10369 = !DILocation(line: 2777, column: 4, scope: !10261)
!10370 = distinct !{!10370, !10266, !10371}
!10371 = !DILocation(line: 2812, column: 4, scope: !10255)
!10372 = !DILocation(line: 2813, column: 17, scope: !10243)
!10373 = !DILocation(line: 2813, column: 21, scope: !10243)
!10374 = !DILocation(line: 2813, column: 33, scope: !10243)
!10375 = !DILocation(line: 2813, column: 47, scope: !10243)
!10376 = !DILocation(line: 2813, column: 45, scope: !10243)
!10377 = !DILocation(line: 2813, column: 4, scope: !10243)
!10378 = !DILocation(line: 2814, column: 3, scope: !10243)
!10379 = !DILocation(line: 2772, column: 22, scope: !10238)
!10380 = !DILocation(line: 2772, column: 3, scope: !10238)
!10381 = distinct !{!10381, !10241, !10382}
!10382 = !DILocation(line: 2814, column: 3, scope: !10234)
!10383 = !DILocation(line: 2815, column: 2, scope: !10235)
!10384 = !DILocation(line: 2771, column: 21, scope: !10229)
!10385 = !DILocation(line: 2771, column: 2, scope: !10229)
!10386 = distinct !{!10386, !10232, !10387}
!10387 = !DILocation(line: 2815, column: 2, scope: !10226)
!10388 = !DILocation(line: 2817, column: 2, scope: !10159)
!10389 = !DILocation(line: 2817, column: 12, scope: !10159)
!10390 = !DILocation(line: 2818, column: 6, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 2818, column: 6)
!10392 = !DILocation(line: 2818, column: 20, scope: !10391)
!10393 = !DILocation(line: 2818, column: 17, scope: !10391)
!10394 = !DILocation(line: 2818, column: 6, scope: !10159)
!10395 = !DILocation(line: 2819, column: 3, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 2818, column: 32)
!10397 = !DILocation(line: 2819, column: 13, scope: !10396)
!10398 = !DILocation(line: 2820, column: 2, scope: !10396)
!10399 = !DILocation(line: 2822, column: 1, scope: !10159)
!10400 = distinct !DISubprogram(name: "do_gaussian_blur_effect_byte", scope: !3, file: !3, line: 2664, type: !10401, scopeLine: 2670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!10401 = !DISubroutineType(types: !10402)
!10402 = !{null, !360, !7, !7, !7, !7, !7, !83, !83}
!10403 = !DILocalVariable(name: "seq", arg: 1, scope: !10400, file: !3, line: 2664, type: !360)
!10404 = !DILocation(line: 2664, column: 52, scope: !10400)
!10405 = !DILocalVariable(name: "start_line", arg: 2, scope: !10400, file: !3, line: 2665, type: !7)
!10406 = !DILocation(line: 2665, column: 46, scope: !10400)
!10407 = !DILocalVariable(name: "x", arg: 3, scope: !10400, file: !3, line: 2666, type: !7)
!10408 = !DILocation(line: 2666, column: 46, scope: !10400)
!10409 = !DILocalVariable(name: "y", arg: 4, scope: !10400, file: !3, line: 2666, type: !7)
!10410 = !DILocation(line: 2666, column: 53, scope: !10400)
!10411 = !DILocalVariable(name: "frame_width", arg: 5, scope: !10400, file: !3, line: 2667, type: !7)
!10412 = !DILocation(line: 2667, column: 46, scope: !10400)
!10413 = !DILocalVariable(name: "frame_height", arg: 6, scope: !10400, file: !3, line: 2667, type: !7)
!10414 = !DILocation(line: 2667, column: 63, scope: !10400)
!10415 = !DILocalVariable(name: "rect", arg: 7, scope: !10400, file: !3, line: 2668, type: !83)
!10416 = !DILocation(line: 2668, column: 57, scope: !10400)
!10417 = !DILocalVariable(name: "out", arg: 8, scope: !10400, file: !3, line: 2669, type: !83)
!10418 = !DILocation(line: 2669, column: 57, scope: !10400)
!10419 = !DILocalVariable(name: "data", scope: !10400, file: !3, line: 2672, type: !4061)
!10420 = !DILocation(line: 2672, column: 20, scope: !10400)
!10421 = !DILocation(line: 2672, column: 27, scope: !10400)
!10422 = !DILocation(line: 2672, column: 32, scope: !10400)
!10423 = !DILocalVariable(name: "size_x", scope: !10400, file: !3, line: 2673, type: !10183)
!10424 = !DILocation(line: 2673, column: 12, scope: !10400)
!10425 = !DILocation(line: 2673, column: 28, scope: !10400)
!10426 = !DILocation(line: 2673, column: 34, scope: !10400)
!10427 = !DILocation(line: 2673, column: 41, scope: !10400)
!10428 = !DILocation(line: 2673, column: 21, scope: !10400)
!10429 = !DILocalVariable(name: "size_y", scope: !10400, file: !3, line: 2674, type: !10183)
!10430 = !DILocation(line: 2674, column: 12, scope: !10400)
!10431 = !DILocation(line: 2674, column: 28, scope: !10400)
!10432 = !DILocation(line: 2674, column: 34, scope: !10400)
!10433 = !DILocation(line: 2674, column: 41, scope: !10400)
!10434 = !DILocation(line: 2674, column: 21, scope: !10400)
!10435 = !DILocalVariable(name: "i", scope: !10400, file: !3, line: 2675, type: !7)
!10436 = !DILocation(line: 2675, column: 6, scope: !10400)
!10437 = !DILocalVariable(name: "j", scope: !10400, file: !3, line: 2675, type: !7)
!10438 = !DILocation(line: 2675, column: 9, scope: !10400)
!10439 = !DILocalVariable(name: "gausstab_x", scope: !10400, file: !3, line: 2678, type: !76)
!10440 = !DILocation(line: 2678, column: 9, scope: !10400)
!10441 = !DILocalVariable(name: "gausstab_y", scope: !10400, file: !3, line: 2678, type: !76)
!10442 = !DILocation(line: 2678, column: 22, scope: !10400)
!10443 = !DILocation(line: 2679, column: 41, scope: !10400)
!10444 = !DILocation(line: 2679, column: 47, scope: !10400)
!10445 = !DILocation(line: 2679, column: 55, scope: !10400)
!10446 = !DILocation(line: 2679, column: 15, scope: !10400)
!10447 = !DILocation(line: 2679, column: 13, scope: !10400)
!10448 = !DILocation(line: 2680, column: 6, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 2680, column: 6)
!10450 = !DILocation(line: 2680, column: 12, scope: !10449)
!10451 = !DILocation(line: 2680, column: 22, scope: !10449)
!10452 = !DILocation(line: 2680, column: 28, scope: !10449)
!10453 = !DILocation(line: 2680, column: 19, scope: !10449)
!10454 = !DILocation(line: 2680, column: 6, scope: !10400)
!10455 = !DILocation(line: 2681, column: 16, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 2680, column: 36)
!10457 = !DILocation(line: 2681, column: 14, scope: !10456)
!10458 = !DILocation(line: 2682, column: 2, scope: !10456)
!10459 = !DILocation(line: 2684, column: 42, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 2683, column: 7)
!10461 = !DILocation(line: 2684, column: 48, scope: !10460)
!10462 = !DILocation(line: 2684, column: 56, scope: !10460)
!10463 = !DILocation(line: 2684, column: 16, scope: !10460)
!10464 = !DILocation(line: 2684, column: 14, scope: !10460)
!10465 = !DILocation(line: 2687, column: 9, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 2687, column: 2)
!10467 = !DILocation(line: 2687, column: 7, scope: !10466)
!10468 = !DILocation(line: 2687, column: 14, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 2687, column: 2)
!10470 = !DILocation(line: 2687, column: 18, scope: !10469)
!10471 = !DILocation(line: 2687, column: 16, scope: !10469)
!10472 = !DILocation(line: 2687, column: 2, scope: !10466)
!10473 = !DILocation(line: 2688, column: 10, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 2688, column: 3)
!10475 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 2687, column: 26)
!10476 = !DILocation(line: 2688, column: 8, scope: !10474)
!10477 = !DILocation(line: 2688, column: 15, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10474, file: !3, line: 2688, column: 3)
!10479 = !DILocation(line: 2688, column: 19, scope: !10478)
!10480 = !DILocation(line: 2688, column: 17, scope: !10478)
!10481 = !DILocation(line: 2688, column: 3, scope: !10474)
!10482 = !DILocalVariable(name: "out_index", scope: !10483, file: !3, line: 2689, type: !7)
!10483 = distinct !DILexicalBlock(scope: !10478, file: !3, line: 2688, column: 27)
!10484 = !DILocation(line: 2689, column: 8, scope: !10483)
!10485 = !DILocation(line: 2689, column: 20, scope: !10483)
!10486 = !DILocalVariable(name: "current_x", scope: !10483, file: !3, line: 2690, type: !7)
!10487 = !DILocation(line: 2690, column: 8, scope: !10483)
!10488 = !DILocalVariable(name: "current_y", scope: !10483, file: !3, line: 2690, type: !7)
!10489 = !DILocation(line: 2690, column: 19, scope: !10483)
!10490 = !DILocalVariable(name: "accum", scope: !10483, file: !3, line: 2691, type: !722)
!10491 = !DILocation(line: 2691, column: 10, scope: !10483)
!10492 = !DILocalVariable(name: "accum_weight", scope: !10483, file: !3, line: 2692, type: !77)
!10493 = !DILocation(line: 2692, column: 10, scope: !10483)
!10494 = !DILocation(line: 2693, column: 21, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 2693, column: 4)
!10496 = !DILocation(line: 2693, column: 25, scope: !10495)
!10497 = !DILocation(line: 2693, column: 23, scope: !10495)
!10498 = !DILocation(line: 2693, column: 19, scope: !10495)
!10499 = !DILocation(line: 2693, column: 9, scope: !10495)
!10500 = !DILocation(line: 2694, column: 9, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 2693, column: 4)
!10502 = !DILocation(line: 2694, column: 22, scope: !10501)
!10503 = !DILocation(line: 2694, column: 26, scope: !10501)
!10504 = !DILocation(line: 2694, column: 24, scope: !10501)
!10505 = !DILocation(line: 2694, column: 19, scope: !10501)
!10506 = !DILocation(line: 2693, column: 4, scope: !10495)
!10507 = !DILocation(line: 2697, column: 9, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2697, column: 9)
!10509 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 2696, column: 4)
!10510 = !DILocation(line: 2697, column: 22, scope: !10508)
!10511 = !DILocation(line: 2697, column: 21, scope: !10508)
!10512 = !DILocation(line: 2697, column: 19, scope: !10508)
!10513 = !DILocation(line: 2697, column: 33, scope: !10508)
!10514 = !DILocation(line: 2698, column: 9, scope: !10508)
!10515 = !DILocation(line: 2698, column: 21, scope: !10508)
!10516 = !DILocation(line: 2698, column: 19, scope: !10508)
!10517 = !DILocation(line: 2698, column: 35, scope: !10508)
!10518 = !DILocation(line: 2698, column: 32, scope: !10508)
!10519 = !DILocation(line: 2697, column: 9, scope: !10509)
!10520 = !DILocation(line: 2701, column: 6, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 2699, column: 5)
!10522 = !DILocation(line: 2704, column: 22, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2704, column: 5)
!10524 = !DILocation(line: 2704, column: 26, scope: !10523)
!10525 = !DILocation(line: 2704, column: 24, scope: !10523)
!10526 = !DILocation(line: 2704, column: 20, scope: !10523)
!10527 = !DILocation(line: 2704, column: 10, scope: !10523)
!10528 = !DILocation(line: 2705, column: 10, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 2704, column: 5)
!10530 = !DILocation(line: 2705, column: 23, scope: !10529)
!10531 = !DILocation(line: 2705, column: 27, scope: !10529)
!10532 = !DILocation(line: 2705, column: 25, scope: !10529)
!10533 = !DILocation(line: 2705, column: 20, scope: !10529)
!10534 = !DILocation(line: 2704, column: 5, scope: !10523)
!10535 = !DILocalVariable(name: "weight", scope: !10536, file: !3, line: 2708, type: !77)
!10536 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 2707, column: 5)
!10537 = !DILocation(line: 2708, column: 12, scope: !10536)
!10538 = !DILocalVariable(name: "index", scope: !10536, file: !3, line: 2709, type: !7)
!10539 = !DILocation(line: 2709, column: 10, scope: !10536)
!10540 = !DILocation(line: 2709, column: 18, scope: !10536)
!10541 = !DILocation(line: 2710, column: 10, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 2710, column: 10)
!10543 = !DILocation(line: 2710, column: 20, scope: !10542)
!10544 = !DILocation(line: 2710, column: 24, scope: !10542)
!10545 = !DILocation(line: 2710, column: 27, scope: !10542)
!10546 = !DILocation(line: 2710, column: 40, scope: !10542)
!10547 = !DILocation(line: 2710, column: 37, scope: !10542)
!10548 = !DILocation(line: 2710, column: 10, scope: !10536)
!10549 = !DILocation(line: 2712, column: 7, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10542, file: !3, line: 2710, column: 53)
!10551 = !DILocation(line: 2717, column: 10, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 2717, column: 10)
!10553 = !DILocation(line: 2717, column: 17, scope: !10552)
!10554 = !DILocation(line: 2717, column: 22, scope: !10552)
!10555 = !DILocation(line: 2717, column: 25, scope: !10552)
!10556 = !DILocation(line: 2717, column: 32, scope: !10552)
!10557 = !DILocation(line: 2717, column: 10, scope: !10536)
!10558 = !DILocation(line: 2718, column: 16, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 2717, column: 38)
!10560 = !DILocation(line: 2718, column: 27, scope: !10559)
!10561 = !DILocation(line: 2718, column: 39, scope: !10559)
!10562 = !DILocation(line: 2718, column: 37, scope: !10559)
!10563 = !DILocation(line: 2718, column: 43, scope: !10559)
!10564 = !DILocation(line: 2718, column: 41, scope: !10559)
!10565 = !DILocation(line: 2719, column: 8, scope: !10559)
!10566 = !DILocation(line: 2719, column: 19, scope: !10559)
!10567 = !DILocation(line: 2719, column: 31, scope: !10559)
!10568 = !DILocation(line: 2719, column: 29, scope: !10559)
!10569 = !DILocation(line: 2719, column: 35, scope: !10559)
!10570 = !DILocation(line: 2719, column: 33, scope: !10559)
!10571 = !DILocation(line: 2718, column: 51, scope: !10559)
!10572 = !DILocation(line: 2718, column: 14, scope: !10559)
!10573 = !DILocation(line: 2720, column: 6, scope: !10559)
!10574 = !DILocation(line: 2721, column: 15, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 2721, column: 15)
!10576 = !DILocation(line: 2721, column: 22, scope: !10575)
!10577 = !DILocation(line: 2721, column: 15, scope: !10552)
!10578 = !DILocation(line: 2722, column: 16, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 2721, column: 28)
!10580 = !DILocation(line: 2722, column: 27, scope: !10579)
!10581 = !DILocation(line: 2722, column: 39, scope: !10579)
!10582 = !DILocation(line: 2722, column: 37, scope: !10579)
!10583 = !DILocation(line: 2722, column: 43, scope: !10579)
!10584 = !DILocation(line: 2722, column: 41, scope: !10579)
!10585 = !DILocation(line: 2722, column: 14, scope: !10579)
!10586 = !DILocation(line: 2723, column: 6, scope: !10579)
!10587 = !DILocation(line: 2725, column: 16, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 2724, column: 11)
!10589 = !DILocation(line: 2725, column: 27, scope: !10588)
!10590 = !DILocation(line: 2725, column: 39, scope: !10588)
!10591 = !DILocation(line: 2725, column: 37, scope: !10588)
!10592 = !DILocation(line: 2725, column: 43, scope: !10588)
!10593 = !DILocation(line: 2725, column: 41, scope: !10588)
!10594 = !DILocation(line: 2725, column: 14, scope: !10588)
!10595 = !DILocation(line: 2727, column: 18, scope: !10536)
!10596 = !DILocation(line: 2727, column: 23, scope: !10536)
!10597 = !DILocation(line: 2727, column: 32, scope: !10536)
!10598 = !DILocation(line: 2727, column: 30, scope: !10536)
!10599 = !DILocation(line: 2727, column: 6, scope: !10536)
!10600 = !DILocation(line: 2727, column: 15, scope: !10536)
!10601 = !DILocation(line: 2728, column: 18, scope: !10536)
!10602 = !DILocation(line: 2728, column: 23, scope: !10536)
!10603 = !DILocation(line: 2728, column: 29, scope: !10536)
!10604 = !DILocation(line: 2728, column: 36, scope: !10536)
!10605 = !DILocation(line: 2728, column: 34, scope: !10536)
!10606 = !DILocation(line: 2728, column: 6, scope: !10536)
!10607 = !DILocation(line: 2728, column: 15, scope: !10536)
!10608 = !DILocation(line: 2729, column: 18, scope: !10536)
!10609 = !DILocation(line: 2729, column: 23, scope: !10536)
!10610 = !DILocation(line: 2729, column: 29, scope: !10536)
!10611 = !DILocation(line: 2729, column: 36, scope: !10536)
!10612 = !DILocation(line: 2729, column: 34, scope: !10536)
!10613 = !DILocation(line: 2729, column: 6, scope: !10536)
!10614 = !DILocation(line: 2729, column: 15, scope: !10536)
!10615 = !DILocation(line: 2730, column: 18, scope: !10536)
!10616 = !DILocation(line: 2730, column: 23, scope: !10536)
!10617 = !DILocation(line: 2730, column: 29, scope: !10536)
!10618 = !DILocation(line: 2730, column: 36, scope: !10536)
!10619 = !DILocation(line: 2730, column: 34, scope: !10536)
!10620 = !DILocation(line: 2730, column: 6, scope: !10536)
!10621 = !DILocation(line: 2730, column: 15, scope: !10536)
!10622 = !DILocation(line: 2731, column: 22, scope: !10536)
!10623 = !DILocation(line: 2731, column: 19, scope: !10536)
!10624 = !DILocation(line: 2732, column: 5, scope: !10536)
!10625 = !DILocation(line: 2706, column: 10, scope: !10529)
!10626 = !DILocation(line: 2704, column: 5, scope: !10529)
!10627 = distinct !{!10627, !10534, !10628}
!10628 = !DILocation(line: 2732, column: 5, scope: !10523)
!10629 = !DILocation(line: 2733, column: 4, scope: !10509)
!10630 = !DILocation(line: 2695, column: 9, scope: !10501)
!10631 = !DILocation(line: 2693, column: 4, scope: !10501)
!10632 = distinct !{!10632, !10506, !10633}
!10633 = !DILocation(line: 2733, column: 4, scope: !10495)
!10634 = !DILocation(line: 2734, column: 25, scope: !10483)
!10635 = !DILocation(line: 2734, column: 36, scope: !10483)
!10636 = !DILocation(line: 2734, column: 34, scope: !10483)
!10637 = !DILocation(line: 2734, column: 4, scope: !10483)
!10638 = !DILocation(line: 2734, column: 8, scope: !10483)
!10639 = !DILocation(line: 2734, column: 18, scope: !10483)
!10640 = !DILocation(line: 2734, column: 23, scope: !10483)
!10641 = !DILocation(line: 2735, column: 25, scope: !10483)
!10642 = !DILocation(line: 2735, column: 36, scope: !10483)
!10643 = !DILocation(line: 2735, column: 34, scope: !10483)
!10644 = !DILocation(line: 2735, column: 4, scope: !10483)
!10645 = !DILocation(line: 2735, column: 8, scope: !10483)
!10646 = !DILocation(line: 2735, column: 18, scope: !10483)
!10647 = !DILocation(line: 2735, column: 23, scope: !10483)
!10648 = !DILocation(line: 2736, column: 25, scope: !10483)
!10649 = !DILocation(line: 2736, column: 36, scope: !10483)
!10650 = !DILocation(line: 2736, column: 34, scope: !10483)
!10651 = !DILocation(line: 2736, column: 4, scope: !10483)
!10652 = !DILocation(line: 2736, column: 8, scope: !10483)
!10653 = !DILocation(line: 2736, column: 18, scope: !10483)
!10654 = !DILocation(line: 2736, column: 23, scope: !10483)
!10655 = !DILocation(line: 2737, column: 25, scope: !10483)
!10656 = !DILocation(line: 2737, column: 36, scope: !10483)
!10657 = !DILocation(line: 2737, column: 34, scope: !10483)
!10658 = !DILocation(line: 2737, column: 4, scope: !10483)
!10659 = !DILocation(line: 2737, column: 8, scope: !10483)
!10660 = !DILocation(line: 2737, column: 18, scope: !10483)
!10661 = !DILocation(line: 2737, column: 23, scope: !10483)
!10662 = !DILocation(line: 2738, column: 3, scope: !10483)
!10663 = !DILocation(line: 2688, column: 22, scope: !10478)
!10664 = !DILocation(line: 2688, column: 3, scope: !10478)
!10665 = distinct !{!10665, !10481, !10666}
!10666 = !DILocation(line: 2738, column: 3, scope: !10474)
!10667 = !DILocation(line: 2739, column: 2, scope: !10475)
!10668 = !DILocation(line: 2687, column: 21, scope: !10469)
!10669 = !DILocation(line: 2687, column: 2, scope: !10469)
!10670 = distinct !{!10670, !10472, !10671}
!10671 = !DILocation(line: 2739, column: 2, scope: !10466)
!10672 = !DILocation(line: 2741, column: 2, scope: !10400)
!10673 = !DILocation(line: 2741, column: 12, scope: !10400)
!10674 = !DILocation(line: 2742, column: 6, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 2742, column: 6)
!10676 = !DILocation(line: 2742, column: 20, scope: !10675)
!10677 = !DILocation(line: 2742, column: 17, scope: !10675)
!10678 = !DILocation(line: 2742, column: 6, scope: !10400)
!10679 = !DILocation(line: 2743, column: 3, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 2742, column: 32)
!10681 = !DILocation(line: 2743, column: 13, scope: !10680)
!10682 = !DILocation(line: 2744, column: 2, scope: !10680)
!10683 = !DILocation(line: 2746, column: 1, scope: !10400)
!10684 = distinct !DISubprogram(name: "make_gaussian_blur_kernel", scope: !3, file: !3, line: 2639, type: !10685, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!10685 = !DISubroutineType(types: !10686)
!10686 = !{!76, !77, !7}
!10687 = !DILocalVariable(name: "rad", arg: 1, scope: !10684, file: !3, line: 2639, type: !77)
!10688 = !DILocation(line: 2639, column: 47, scope: !10684)
!10689 = !DILocalVariable(name: "size", arg: 2, scope: !10684, file: !3, line: 2639, type: !7)
!10690 = !DILocation(line: 2639, column: 56, scope: !10684)
!10691 = !DILocalVariable(name: "gausstab", scope: !10684, file: !3, line: 2641, type: !76)
!10692 = !DILocation(line: 2641, column: 9, scope: !10684)
!10693 = !DILocalVariable(name: "sum", scope: !10684, file: !3, line: 2641, type: !77)
!10694 = !DILocation(line: 2641, column: 19, scope: !10684)
!10695 = !DILocalVariable(name: "val", scope: !10684, file: !3, line: 2641, type: !77)
!10696 = !DILocation(line: 2641, column: 24, scope: !10684)
!10697 = !DILocalVariable(name: "fac", scope: !10684, file: !3, line: 2642, type: !77)
!10698 = !DILocation(line: 2642, column: 8, scope: !10684)
!10699 = !DILocalVariable(name: "i", scope: !10684, file: !3, line: 2643, type: !7)
!10700 = !DILocation(line: 2643, column: 6, scope: !10684)
!10701 = !DILocalVariable(name: "n", scope: !10684, file: !3, line: 2643, type: !7)
!10702 = !DILocation(line: 2643, column: 9, scope: !10684)
!10703 = !DILocation(line: 2645, column: 10, scope: !10684)
!10704 = !DILocation(line: 2645, column: 8, scope: !10684)
!10705 = !DILocation(line: 2645, column: 15, scope: !10684)
!10706 = !DILocation(line: 2645, column: 4, scope: !10684)
!10707 = !DILocation(line: 2647, column: 22, scope: !10684)
!10708 = !DILocation(line: 2647, column: 50, scope: !10684)
!10709 = !DILocation(line: 2647, column: 48, scope: !10684)
!10710 = !DILocation(line: 2647, column: 13, scope: !10684)
!10711 = !DILocation(line: 2647, column: 11, scope: !10684)
!10712 = !DILocation(line: 2649, column: 6, scope: !10684)
!10713 = !DILocation(line: 2650, column: 9, scope: !10684)
!10714 = !DILocation(line: 2650, column: 13, scope: !10684)
!10715 = !DILocation(line: 2650, column: 29, scope: !10684)
!10716 = !DILocation(line: 2650, column: 27, scope: !10684)
!10717 = !DILocation(line: 2650, column: 6, scope: !10684)
!10718 = !DILocation(line: 2651, column: 12, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 2651, column: 2)
!10720 = !DILocation(line: 2651, column: 11, scope: !10719)
!10721 = !DILocation(line: 2651, column: 9, scope: !10719)
!10722 = !DILocation(line: 2651, column: 7, scope: !10719)
!10723 = !DILocation(line: 2651, column: 18, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 2651, column: 2)
!10725 = !DILocation(line: 2651, column: 23, scope: !10724)
!10726 = !DILocation(line: 2651, column: 20, scope: !10724)
!10727 = !DILocation(line: 2651, column: 2, scope: !10719)
!10728 = !DILocation(line: 2652, column: 48, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 2651, column: 34)
!10730 = !DILocation(line: 2652, column: 41, scope: !10729)
!10731 = !DILocation(line: 2652, column: 52, scope: !10729)
!10732 = !DILocation(line: 2652, column: 50, scope: !10729)
!10733 = !DILocation(line: 2652, column: 9, scope: !10729)
!10734 = !DILocation(line: 2652, column: 7, scope: !10729)
!10735 = !DILocation(line: 2653, column: 10, scope: !10729)
!10736 = !DILocation(line: 2653, column: 7, scope: !10729)
!10737 = !DILocation(line: 2654, column: 24, scope: !10729)
!10738 = !DILocation(line: 2654, column: 3, scope: !10729)
!10739 = !DILocation(line: 2654, column: 12, scope: !10729)
!10740 = !DILocation(line: 2654, column: 16, scope: !10729)
!10741 = !DILocation(line: 2654, column: 14, scope: !10729)
!10742 = !DILocation(line: 2654, column: 22, scope: !10729)
!10743 = !DILocation(line: 2655, column: 2, scope: !10729)
!10744 = !DILocation(line: 2651, column: 30, scope: !10724)
!10745 = !DILocation(line: 2651, column: 2, scope: !10724)
!10746 = distinct !{!10746, !10727, !10747}
!10747 = !DILocation(line: 2655, column: 2, scope: !10719)
!10748 = !DILocation(line: 2657, column: 15, scope: !10684)
!10749 = !DILocation(line: 2657, column: 13, scope: !10684)
!10750 = !DILocation(line: 2657, column: 6, scope: !10684)
!10751 = !DILocation(line: 2658, column: 9, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 2658, column: 2)
!10753 = !DILocation(line: 2658, column: 7, scope: !10752)
!10754 = !DILocation(line: 2658, column: 14, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 2658, column: 2)
!10756 = !DILocation(line: 2658, column: 18, scope: !10755)
!10757 = !DILocation(line: 2658, column: 16, scope: !10755)
!10758 = !DILocation(line: 2658, column: 2, scope: !10752)
!10759 = !DILocation(line: 2659, column: 18, scope: !10755)
!10760 = !DILocation(line: 2659, column: 3, scope: !10755)
!10761 = !DILocation(line: 2659, column: 12, scope: !10755)
!10762 = !DILocation(line: 2659, column: 15, scope: !10755)
!10763 = !DILocation(line: 2658, column: 22, scope: !10755)
!10764 = !DILocation(line: 2658, column: 2, scope: !10755)
!10765 = distinct !{!10765, !10758, !10766}
!10766 = !DILocation(line: 2659, column: 18, scope: !10752)
!10767 = !DILocation(line: 2661, column: 9, scope: !10684)
!10768 = !DILocation(line: 2661, column: 2, scope: !10684)
!10769 = distinct !DISubprogram(name: "madd_v4_v4fl", scope: !9825, file: !9825, line: 541, type: !10770, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!10770 = !DISubroutineType(types: !10771)
!10771 = !{null, !76, !5412, !77}
!10772 = !DILocalVariable(name: "r", arg: 1, scope: !10769, file: !9825, line: 541, type: !76)
!10773 = !DILocation(line: 541, column: 33, scope: !10769)
!10774 = !DILocalVariable(name: "a", arg: 2, scope: !10769, file: !9825, line: 541, type: !5412)
!10775 = !DILocation(line: 541, column: 51, scope: !10769)
!10776 = !DILocalVariable(name: "f", arg: 3, scope: !10769, file: !9825, line: 541, type: !77)
!10777 = !DILocation(line: 541, column: 63, scope: !10769)
!10778 = !DILocation(line: 543, column: 10, scope: !10769)
!10779 = !DILocation(line: 543, column: 17, scope: !10769)
!10780 = !DILocation(line: 543, column: 15, scope: !10769)
!10781 = !DILocation(line: 543, column: 2, scope: !10769)
!10782 = !DILocation(line: 543, column: 7, scope: !10769)
!10783 = !DILocation(line: 544, column: 10, scope: !10769)
!10784 = !DILocation(line: 544, column: 17, scope: !10769)
!10785 = !DILocation(line: 544, column: 15, scope: !10769)
!10786 = !DILocation(line: 544, column: 2, scope: !10769)
!10787 = !DILocation(line: 544, column: 7, scope: !10769)
!10788 = !DILocation(line: 545, column: 10, scope: !10769)
!10789 = !DILocation(line: 545, column: 17, scope: !10769)
!10790 = !DILocation(line: 545, column: 15, scope: !10769)
!10791 = !DILocation(line: 545, column: 2, scope: !10769)
!10792 = !DILocation(line: 545, column: 7, scope: !10769)
!10793 = !DILocation(line: 546, column: 10, scope: !10769)
!10794 = !DILocation(line: 546, column: 17, scope: !10769)
!10795 = !DILocation(line: 546, column: 15, scope: !10769)
!10796 = !DILocation(line: 546, column: 2, scope: !10769)
!10797 = !DILocation(line: 546, column: 7, scope: !10769)
!10798 = !DILocation(line: 547, column: 1, scope: !10769)
!10799 = distinct !DISubprogram(name: "mul_v4_v4fl", scope: !9825, file: !9825, line: 427, type: !10770, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1285)
!10800 = !DILocalVariable(name: "r", arg: 1, scope: !10799, file: !9825, line: 427, type: !76)
!10801 = !DILocation(line: 427, column: 32, scope: !10799)
!10802 = !DILocalVariable(name: "a", arg: 2, scope: !10799, file: !9825, line: 427, type: !5412)
!10803 = !DILocation(line: 427, column: 50, scope: !10799)
!10804 = !DILocalVariable(name: "f", arg: 3, scope: !10799, file: !9825, line: 427, type: !77)
!10805 = !DILocation(line: 427, column: 62, scope: !10799)
!10806 = !DILocation(line: 429, column: 9, scope: !10799)
!10807 = !DILocation(line: 429, column: 16, scope: !10799)
!10808 = !DILocation(line: 429, column: 14, scope: !10799)
!10809 = !DILocation(line: 429, column: 2, scope: !10799)
!10810 = !DILocation(line: 429, column: 7, scope: !10799)
!10811 = !DILocation(line: 430, column: 9, scope: !10799)
!10812 = !DILocation(line: 430, column: 16, scope: !10799)
!10813 = !DILocation(line: 430, column: 14, scope: !10799)
!10814 = !DILocation(line: 430, column: 2, scope: !10799)
!10815 = !DILocation(line: 430, column: 7, scope: !10799)
!10816 = !DILocation(line: 431, column: 9, scope: !10799)
!10817 = !DILocation(line: 431, column: 16, scope: !10799)
!10818 = !DILocation(line: 431, column: 14, scope: !10799)
!10819 = !DILocation(line: 431, column: 2, scope: !10799)
!10820 = !DILocation(line: 431, column: 7, scope: !10799)
!10821 = !DILocation(line: 432, column: 9, scope: !10799)
!10822 = !DILocation(line: 432, column: 16, scope: !10799)
!10823 = !DILocation(line: 432, column: 14, scope: !10799)
!10824 = !DILocation(line: 432, column: 2, scope: !10799)
!10825 = !DILocation(line: 432, column: 7, scope: !10799)
!10826 = !DILocation(line: 433, column: 1, scope: !10799)
