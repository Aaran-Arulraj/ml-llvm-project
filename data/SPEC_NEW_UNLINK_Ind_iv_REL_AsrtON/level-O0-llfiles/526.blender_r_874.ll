; ModuleID = 'blender/source/blender/editors/interface/interface_layout.c'
source_filename = "blender/source/blender/editors/interface/interface_layout.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.StructRNA = type opaque
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.bContext = type opaque
%struct.PropertyRNA = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.rctf = type { float, float, float, float }
%struct.SmoothView2DStore = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.SpaceLink = type opaque
%struct.wmNotifier = type { %struct.wmNotifier*, %struct.wmNotifier*, %struct.wmWindowManager*, %struct.wmWindow*, i32, i32, i32, i32, i32, i8* }
%struct.bContextDataResult = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.uiBlock = type { %struct.uiBlock*, %struct.uiBlock*, %struct.ListBase, %struct.Panel*, %struct.uiBlock*, %struct.ListBase, %struct.ListBase, %struct.uiLayout*, %struct.ListBase, [128 x i8], [4 x [4 x float]], %struct.rctf, float, i32, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, i32 (%struct.bContext*, %struct.uiBlock*, %struct.wmEvent*)*, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, i8*, i8*, i32, i16, i8, i8, i8, [7 x i8], double, i8*, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.rctf, %struct.ListBase, %struct.uiPopupBlockHandle*, %struct.wmOperator*, i8*, %struct.UnitSettings*, [3 x float], i8, [64 x i8], %struct.PieMenuData }
%struct.Panel = type { %struct.Panel*, %struct.Panel*, %struct.PanelType*, %struct.uiLayout*, [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, %struct.Panel*, i8* }
%struct.PanelType = type { %struct.PanelType*, %struct.PanelType*, [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32 (%struct.bContext*, %struct.PanelType*)*, void (%struct.bContext*, %struct.Panel*)*, void (%struct.bContext*, %struct.Panel*)*, %struct.ExtensionRNA }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.uiLayout = type { %struct.uiItem, %struct.uiLayoutRoot*, %struct.bContextStore*, %struct.ListBase, i32, i32, i32, i32, [2 x float], i16, i8, i8, i8, i8, i8, i8 }
%struct.uiItem = type { i8*, i8*, i32, i32 }
%struct.uiLayoutRoot = type { %struct.uiLayoutRoot*, %struct.uiLayoutRoot*, i32, i32, i32, i32, i32, void (%struct.bContext*, i8*, i32)*, i8*, %struct.uiStyle*, %struct.uiBlock*, %struct.uiLayout* }
%struct.uiStyle = type { %struct.uiStyle*, %struct.uiStyle*, [64 x i8], %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.uiFontStyle = type { i16, i16, i16, [6 x i8], i16, i16, i16, i16, i16, i16, float, float }
%struct.bContextStore = type { %struct.bContextStore*, %struct.bContextStore*, %struct.ListBase, i8 }
%struct.uiPopupBlockHandle = type { %struct.ARegion*, [2 x float], double, i8, i8, void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*)*, i8*, %struct.uiPopupBlockCreate, %struct.wmTimer*, %struct.uiKeyNavLock, %struct.wmOperatorType*, %struct.ScrArea*, %struct.ARegion*, i32, i32, i32, i32, [4 x float], i32, i8, [2 x i32] }
%struct.uiPopupBlockCreate = type { %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.uiPopupBlockHandle*, i8*)*, i8*, [2 x i32], %struct.ARegion* }
%struct.uiKeyNavLock = type { i8, [2 x i32] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.UnitSettings = type opaque
%struct.PieMenuData = type { [2 x float], [2 x float], [2 x float], [2 x float], double, i32, i32, float }
%struct.uiBut = type { %struct.uiBut*, %struct.uiBut*, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8*, [128 x i8], [400 x i8], %struct.rctf, i8*, float, float, float, float, float, float, [4 x i8], void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, %struct.bContextStore*, i32 (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, %struct.uiLink*, [2 x i16], i8*, i8*, i32, i8, i8, i8, i8, i8, i16, i16, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)*, %struct.PointerRNA, %struct.PropertyRNA*, i32, %struct.PointerRNA, %struct.PropertyRNA*, %struct.wmOperatorType*, %struct.PointerRNA*, i16, i8, i8, i8*, %struct.ImBuf*, float, %struct.uiHandleButtonData*, i8*, i8*, double*, float*, i8*, i8*, %struct.uiBlock* }
%struct.uiSearchItems = type opaque
%struct.uiLink = type { i8**, i8***, i16*, i16, i16, i16, i16, %struct.ListBase }
%struct.ImBuf = type opaque
%struct.uiHandleButtonData = type opaque
%union.IDPropertyTemplate = type { %struct.anon.0 }
%struct.anon.0 = type { i8*, i16, i8 }
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.uiLayoutItemSplit = type { %struct.uiLayout, float }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.AnimData = type opaque
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.EditBone = type { %struct.EditBone*, %struct.EditBone*, %struct.IDProperty*, %struct.EditBone*, i8*, [64 x i8], float, [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, float, float, float, float, i16 }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.CollectionPropertyIterator = type { %struct.PointerRNA, %struct.PointerRNA, %struct.PropertyRNA*, %union.anon, i32, i32, %struct.PointerRNA, i32 }
%union.anon = type { %struct.ArrayIterator }
%struct.ArrayIterator = type { i8*, i8*, i8*, i32, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct.CollItemSearch = type { %struct.CollItemSearch*, %struct.CollItemSearch*, i8*, i32, i32 }
%struct.MenuType = type { %struct.MenuType*, %struct.MenuType*, [64 x i8], [64 x i8], [64 x i8], i8*, i32 (%struct.bContext*, %struct.MenuType*)*, void (%struct.bContext*, %struct.Menu*)*, %struct.ExtensionRNA }
%struct.Menu = type { %struct.MenuType*, %struct.uiLayout* }
%struct.MenuItemLevel = type { i32, [64 x i8], [64 x i8], %struct.PointerRNA }
%struct.uiLayoutItemFlow = type { %struct.uiLayout, i32, i32 }
%struct.uiLayoutItemBx = type { %struct.uiLayout, %struct.uiBut* }
%struct.uiButtonItem = type { %struct.uiItem, %struct.uiBut* }
%struct.uiList = type { %struct.uiList*, %struct.uiList*, %struct.uiListType*, [64 x i8], i32, i32, i32, i32, i32, i32, [64 x i8], i32, i32, %struct.IDProperty*, %struct.uiListDyn* }
%struct.uiListType = type { %struct.uiListType*, %struct.uiListType*, [64 x i8], void (%struct.uiList*, %struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i32, %struct.PointerRNA*, i8*, i32, i32)*, void (%struct.uiList*, %struct.bContext*, %struct.uiLayout*)*, void (%struct.uiList*, %struct.bContext*, %struct.PointerRNA*, i8*)*, %struct.ExtensionRNA }
%struct.uiListDyn = type { i32, i32, i32, i32, i32, i32, i32, i32*, i32* }
%struct.DynStr = type opaque

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@U = external dso_local global %struct.UserDef, align 8
@__const.uiItemFullO_ptr.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"wmOperatorProperties\00", align 1
@PointerRNA_NULL = external dso_local constant %struct.PointerRNA, align 8
@.str.2 = private unnamed_addr constant [27 x i8] c"%s: '%s' unknown operator\0A\00", align 1
@__func__.uiItemFullO = private unnamed_addr constant [12 x i8] c"uiItemFullO\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"%s: %s.%s not found\0A\00", align 1
@__func__.uiItemEnumO_ptr = private unnamed_addr constant [16 x i8] c"uiItemEnumO_ptr\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"%s: unknown operator '%s'\0A\00", align 1
@__func__.uiItemEnumO = private unnamed_addr constant [12 x i8] c"uiItemEnumO\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"%s: %s '%s'\0A\00", align 1
@__func__.uiItemsFullEnumO = private unnamed_addr constant [17 x i8] c"uiItemsFullEnumO\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"unknown operator\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"operator missing srna\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.8 = private unnamed_addr constant [29 x i8] c"%s: %s.%s, not an enum type\0A\00", align 1
@__func__.uiItemEnumO_value = private unnamed_addr constant [18 x i8] c"uiItemEnumO_value\00", align 1
@__func__.uiItemEnumO_string = private unnamed_addr constant [19 x i8] c"uiItemEnumO_string\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"%s: %s.%s, enum %s not found\0A\00", align 1
@__func__.uiItemBooleanO = private unnamed_addr constant [15 x i8] c"uiItemBooleanO\00", align 1
@__func__.uiItemIntO = private unnamed_addr constant [11 x i8] c"uiItemIntO\00", align 1
@__func__.uiItemFloatO = private unnamed_addr constant [13 x i8] c"uiItemFloatO\00", align 1
@__func__.uiItemStringO = private unnamed_addr constant [14 x i8] c"uiItemStringO\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"%s: property not found: %s.%s\0A\00", align 1
@__func__.uiItemR = private unnamed_addr constant [8 x i8] c"uiItemR\00", align 1
@__func__.uiItemEnumR = private unnamed_addr constant [12 x i8] c"uiItemEnumR\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%s: enum property not found: %s.%s\0A\00", align 1
@__func__.uiItemEnumR_string = private unnamed_addr constant [19 x i8] c"uiItemEnumR_string\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"%s: enum property value not found: %s\0A\00", align 1
@__func__.uiItemsEnumR = private unnamed_addr constant [13 x i8] c"uiItemsEnumR\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"%s: not an enum property: %s.%s\0A\00", align 1
@__func__.uiItemPointerR = private unnamed_addr constant [15 x i8] c"uiItemPointerR\00", align 1
@.str.14 = private unnamed_addr constant [51 x i8] c"%s: Property %s must be a pointer, string or enum\0A\00", align 1
@.str.15 = private unnamed_addr constant [49 x i8] c"%s: search collection property not found: %s.%s\0A\00", align 1
@.str.16 = private unnamed_addr constant [64 x i8] c"%s: search collection property is not a collection type: %s.%s\0A\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"%s: not found %s\0A\00", align 1
@__func__.uiItemM = private unnamed_addr constant [8 x i8] c"uiItemM\00", align 1
@__func__.uiItemMenuEnumO = private unnamed_addr constant [16 x i8] c"uiItemMenuEnumO\00", align 1
@.str.18 = private unnamed_addr constant [32 x i8] c"%s: operator missing srna '%s'\0A\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.19 = private unnamed_addr constant [14 x i8] c"MenuItemLevel\00", align 1
@__func__.uiItemMenuEnumR = private unnamed_addr constant [16 x i8] c"uiItemMenuEnumR\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"uiLayoutRow\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"uiLayoutColumn\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"uiLayoutItemFlow\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"uiLayoutRadial\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"uiLayoutAbsolute\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"uiLayoutOverlap\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"uiLayoutItemSplit\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"uiLayoutRoot\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"uiLayout\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"uiButtonItem\00", align 1
@str = internal global i8* null, align 8, !dbg !0
@__const.uiLayoutOperatorButs.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.30 = private unnamed_addr constant [21 x i8] c"Operator can't' redo\00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"* Redo Unsupported *\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"WM_MT_operator_presets\00", align 1
@.str.33 = private unnamed_addr constant [26 x i8] c"WM_OT_operator_preset_add\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"operator\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"remove_active\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"No Properties\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"non-empty text\00", align 1
@RNA_Armature = external dso_local global %struct.StructRNA, align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"ui_item_array\00", align 1
@.str.39 = private unnamed_addr constant [28 x i8] c"BUTTONS_OT_directory_browse\00", align 1
@.str.40 = private unnamed_addr constant [23 x i8] c"BUTTONS_OT_file_browse\00", align 1
@RNA_KeyMapItem = external dso_local global %struct.StructRNA, align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"shift\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"ctrl\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"alt\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"oskey\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.45 = private unnamed_addr constant [11 x i8] c"items_list\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"CollectionItemSearch\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.47 = private unnamed_addr constant [23 x i8] c"%s: opening menu \22%s\22\0A\00", align 1
@__func__.ui_item_menutype_func = private unnamed_addr constant [22 x i8] c"ui_item_menutype_func\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"uiLayoutItemBx\00", align 1
@ui_radial_dir_order = external dso_local constant [8 x i8], align 1
@.str.49 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.50 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.51 = private unnamed_addr constant [18 x i8] c"'type':'BUTTON', \00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"'type':'ROW', \00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"'type':'COLUMN', \00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"'type':'COLUMN_FLOW', \00", align 1
@.str.55 = private unnamed_addr constant [20 x i8] c"'type':'ROW_FLOW', \00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"'type':'BOX', \00", align 1
@.str.57 = private unnamed_addr constant [20 x i8] c"'type':'ABSOLUTE', \00", align 1
@.str.58 = private unnamed_addr constant [17 x i8] c"'type':'SPLIT', \00", align 1
@.str.59 = private unnamed_addr constant [19 x i8] c"'type':'OVERLAP', \00", align 1
@.str.60 = private unnamed_addr constant [16 x i8] c"'type':'ROOT', \00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"'type':'UNKNOWN', \00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"'items':\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"], \00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"'type':%d, \00", align 1
@.str.67 = private unnamed_addr constant [25 x i8] c"'draw_string':'''%s''', \00", align 1
@.str.68 = private unnamed_addr constant [17 x i8] c"'tip':'''%s''', \00", align 1
@.str.69 = private unnamed_addr constant [22 x i8] c"'operator':'''%s''', \00", align 1
@.str.70 = private unnamed_addr constant [20 x i8] c"'rna':'%s.%s[%d]', \00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiFileBrowseContextProperty(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA** %prop) #0 !dbg !2338 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA**, align 8
  %ar = alloca %struct.ARegion*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %prevbut = alloca %struct.uiBut*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2346, metadata !DIExpression()), !dbg !2347
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2348, metadata !DIExpression()), !dbg !2349
  store %struct.PropertyRNA** %prop, %struct.PropertyRNA*** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %prop.addr, metadata !2350, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !2352, metadata !DIExpression()), !dbg !2353
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2354
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !2355
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !2353
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !2356, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !2358, metadata !DIExpression()), !dbg !2359
  call void @llvm.dbg.declare(metadata %struct.uiBut** %prevbut, metadata !2360, metadata !DIExpression()), !dbg !2361
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2362
  %2 = bitcast %struct.PointerRNA* %1 to i8*, !dbg !2363
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false), !dbg !2363
  %3 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !2364
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %3, align 8, !dbg !2365
  %4 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !2366
  %tobool = icmp ne %struct.ARegion* %4, null, !dbg !2366
  br i1 %tobool, label %if.end, label %if.then, !dbg !2368

if.then:                                          ; preds = %entry
  br label %for.end19, !dbg !2369

if.end:                                           ; preds = %entry
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !2370
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 21, !dbg !2372
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %uiblocks, i32 0, i32 0, !dbg !2373
  %6 = load i8*, i8** %first, align 8, !dbg !2373
  %7 = bitcast i8* %6 to %struct.uiBlock*, !dbg !2370
  store %struct.uiBlock* %7, %struct.uiBlock** %block, align 8, !dbg !2374
  br label %for.cond, !dbg !2375

for.cond:                                         ; preds = %for.inc17, %if.end
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2376
  %tobool1 = icmp ne %struct.uiBlock* %8, null, !dbg !2378
  br i1 %tobool1, label %for.body, label %for.end19, !dbg !2378

for.body:                                         ; preds = %for.cond
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2379
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 2, !dbg !2382
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !2383
  %10 = load i8*, i8** %first2, align 8, !dbg !2383
  %11 = bitcast i8* %10 to %struct.uiBut*, !dbg !2379
  store %struct.uiBut* %11, %struct.uiBut** %but, align 8, !dbg !2384
  br label %for.cond3, !dbg !2385

for.cond3:                                        ; preds = %for.inc, %for.body
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2386
  %tobool4 = icmp ne %struct.uiBut* %12, null, !dbg !2388
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !2388

for.body5:                                        ; preds = %for.cond3
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2389
  %prev = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 1, !dbg !2391
  %14 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !2391
  store %struct.uiBut* %14, %struct.uiBut** %prevbut, align 8, !dbg !2392
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2393
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 2, !dbg !2395
  %16 = load i32, i32* %flag, align 8, !dbg !2395
  %and = and i32 %16, 262144, !dbg !2396
  %tobool6 = icmp ne i32 %and, 0, !dbg !2396
  br i1 %tobool6, label %land.lhs.true, label %if.end16, !dbg !2397

land.lhs.true:                                    ; preds = %for.body5
  %17 = load %struct.uiBut*, %struct.uiBut** %prevbut, align 8, !dbg !2398
  %tobool7 = icmp ne %struct.uiBut* %17, null, !dbg !2398
  br i1 %tobool7, label %land.lhs.true8, label %if.end16, !dbg !2399

land.lhs.true8:                                   ; preds = %land.lhs.true
  %18 = load %struct.uiBut*, %struct.uiBut** %prevbut, align 8, !dbg !2400
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 54, !dbg !2401
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 2, !dbg !2402
  %19 = load i8*, i8** %data, align 8, !dbg !2402
  %tobool9 = icmp ne i8* %19, null, !dbg !2400
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !2403

if.then10:                                        ; preds = %land.lhs.true8
  %20 = load %struct.uiBut*, %struct.uiBut** %prevbut, align 8, !dbg !2404
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 55, !dbg !2407
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !2407
  %call11 = call i32 @RNA_property_type(%struct.PropertyRNA* %21), !dbg !2408
  %cmp = icmp eq i32 %call11, 3, !dbg !2409
  br i1 %cmp, label %if.then12, label %if.end15, !dbg !2410

if.then12:                                        ; preds = %if.then10
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2411
  %23 = load %struct.uiBut*, %struct.uiBut** %prevbut, align 8, !dbg !2413
  %rnapoin13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 54, !dbg !2414
  %24 = bitcast %struct.PointerRNA* %22 to i8*, !dbg !2414
  %25 = bitcast %struct.PointerRNA* %rnapoin13 to i8*, !dbg !2414
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false), !dbg !2414
  %26 = load %struct.uiBut*, %struct.uiBut** %prevbut, align 8, !dbg !2415
  %rnaprop14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 55, !dbg !2416
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop14, align 8, !dbg !2416
  %28 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !2417
  store %struct.PropertyRNA* %27, %struct.PropertyRNA** %28, align 8, !dbg !2418
  br label %for.end19, !dbg !2419

if.end15:                                         ; preds = %if.then10
  br label %if.end16, !dbg !2420

if.end16:                                         ; preds = %if.end15, %land.lhs.true8, %land.lhs.true, %for.body5
  br label %for.inc, !dbg !2421

for.inc:                                          ; preds = %if.end16
  %29 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2422
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %29, i32 0, i32 0, !dbg !2423
  %30 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !2423
  store %struct.uiBut* %30, %struct.uiBut** %but, align 8, !dbg !2424
  br label %for.cond3, !dbg !2425, !llvm.loop !2426

for.end:                                          ; preds = %for.cond3
  br label %for.inc17, !dbg !2428

for.inc17:                                        ; preds = %for.end
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2429
  %next18 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %31, i32 0, i32 0, !dbg !2430
  %32 = load %struct.uiBlock*, %struct.uiBlock** %next18, align 8, !dbg !2430
  store %struct.uiBlock* %32, %struct.uiBlock** %block, align 8, !dbg !2431
  br label %for.cond, !dbg !2432, !llvm.loop !2433

for.end19:                                        ; preds = %if.then, %if.then12, %for.cond
  ret void, !dbg !2435
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local i32 @RNA_property_type(%struct.PropertyRNA*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemFullO_ptr(%struct.PointerRNA* noalias sret %agg.result, %struct.uiLayout* %layout, %struct.wmOperatorType* %ot, i8* %name, i32 %icon, %struct.IDProperty* %properties, i32 %context, i32 %flag) #0 !dbg !2436 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %properties.addr = alloca %struct.IDProperty*, align 8
  %context.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %w = alloca i32, align 4
  %opptr = alloca %struct.PointerRNA*, align 8
  %val = alloca %union.IDPropertyTemplate, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2441, metadata !DIExpression()), !dbg !2442
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !2443, metadata !DIExpression()), !dbg !2444
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2445, metadata !DIExpression()), !dbg !2446
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !2447, metadata !DIExpression()), !dbg !2448
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !2449, metadata !DIExpression()), !dbg !2450
  store i32 %context, i32* %context.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %context.addr, metadata !2451, metadata !DIExpression()), !dbg !2452
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !2453, metadata !DIExpression()), !dbg !2454
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !2455, metadata !DIExpression()), !dbg !2456
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2457
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !2458
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !2458
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !2459
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !2459
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !2456
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !2460, metadata !DIExpression()), !dbg !2461
  call void @llvm.dbg.declare(metadata i32* %w, metadata !2462, metadata !DIExpression()), !dbg !2463
  %3 = load i8*, i8** %name.addr, align 8, !dbg !2464
  %tobool = icmp ne i8* %3, null, !dbg !2464
  br i1 %tobool, label %if.end7, label %if.then, !dbg !2466

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2467
  %tobool2 = icmp ne %struct.wmOperatorType* %4, null, !dbg !2467
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !2470

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2471
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !2472
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2472
  %tobool3 = icmp ne %struct.StructRNA* %6, null, !dbg !2471
  br i1 %tobool3, label %land.lhs.true4, label %if.else, !dbg !2473

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load i32, i32* %flag.addr, align 4, !dbg !2474
  %and = and i32 %7, 16, !dbg !2475
  %cmp = icmp eq i32 %and, 0, !dbg !2476
  br i1 %cmp, label %if.then5, label %if.else, !dbg !2477

if.then5:                                         ; preds = %land.lhs.true4
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2478
  %srna6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !2479
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna6, align 8, !dbg !2479
  %call = call i8* @RNA_struct_ui_name(%struct.StructRNA* %9), !dbg !2480
  store i8* %call, i8** %name.addr, align 8, !dbg !2481
  br label %if.end, !dbg !2482

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %if.then
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %name.addr, align 8, !dbg !2483
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end7, !dbg !2484

if.end7:                                          ; preds = %if.end, %entry
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2485
  %root8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 1, !dbg !2487
  %11 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root8, align 8, !dbg !2487
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %11, i32 0, i32 2, !dbg !2488
  %12 = load i32, i32* %type, align 8, !dbg !2488
  %cmp9 = icmp eq i32 %12, 2, !dbg !2489
  br i1 %cmp9, label %land.lhs.true10, label %if.end13, !dbg !2490

land.lhs.true10:                                  ; preds = %if.end7
  %13 = load i32, i32* %icon.addr, align 4, !dbg !2491
  %tobool11 = icmp ne i32 %13, 0, !dbg !2491
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !2492

if.then12:                                        ; preds = %land.lhs.true10
  store i32 77, i32* %icon.addr, align 4, !dbg !2493
  br label %if.end13, !dbg !2494

if.end13:                                         ; preds = %if.then12, %land.lhs.true10, %if.end7
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2495
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2496
  call void @uiBlockSetCurLayout(%struct.uiBlock* %14, %struct.uiLayout* %15), !dbg !2497
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2498
  %17 = load i8*, i8** %name.addr, align 8, !dbg !2499
  %18 = load i32, i32* %icon.addr, align 4, !dbg !2500
  %call14 = call i32 @ui_text_icon_width(%struct.uiLayout* %16, i8* %17, i32 %18, i8 zeroext 0), !dbg !2501
  store i32 %call14, i32* %w, align 4, !dbg !2502
  %19 = load i32, i32* %flag.addr, align 4, !dbg !2503
  %and15 = and i32 %19, 128, !dbg !2505
  %tobool16 = icmp ne i32 %and15, 0, !dbg !2505
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !2506

if.then17:                                        ; preds = %if.end13
  %20 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2507
  call void @uiBlockSetEmboss(%struct.uiBlock* %20, i8 zeroext 1), !dbg !2508
  br label %if.end18, !dbg !2508

if.end18:                                         ; preds = %if.then17, %if.end13
  %21 = load i32, i32* %icon.addr, align 4, !dbg !2509
  %tobool19 = icmp ne i32 %21, 0, !dbg !2509
  br i1 %tobool19, label %if.then20, label %if.else28, !dbg !2511

if.then20:                                        ; preds = %if.end18
  %22 = load i8*, i8** %name.addr, align 8, !dbg !2512
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 0, !dbg !2512
  %23 = load i8, i8* %arrayidx, align 1, !dbg !2512
  %tobool21 = icmp ne i8 %23, 0, !dbg !2512
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !2515

if.then22:                                        ; preds = %if.then20
  %24 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2516
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2518
  %26 = load i32, i32* %context.addr, align 4, !dbg !2519
  %27 = load i32, i32* %icon.addr, align 4, !dbg !2520
  %28 = load i8*, i8** %name.addr, align 8, !dbg !2521
  %29 = load i32, i32* %w, align 4, !dbg !2522
  %conv = trunc i32 %29 to i16, !dbg !2522
  %30 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2523
  %call23 = call %struct.uiBut* @uiDefIconTextButO_ptr(%struct.uiBlock* %24, i32 512, %struct.wmOperatorType* %25, i32 %26, i32 %27, i8* %28, i32 0, i32 0, i16 signext %conv, i16 signext %30, i8* null), !dbg !2524
  store %struct.uiBut* %call23, %struct.uiBut** %but, align 8, !dbg !2525
  br label %if.end27, !dbg !2526

if.else24:                                        ; preds = %if.then20
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2527
  %32 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2529
  %33 = load i32, i32* %context.addr, align 4, !dbg !2530
  %34 = load i32, i32* %icon.addr, align 4, !dbg !2531
  %35 = load i32, i32* %w, align 4, !dbg !2532
  %conv25 = trunc i32 %35 to i16, !dbg !2532
  %36 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2533
  %call26 = call %struct.uiBut* @uiDefIconButO_ptr(%struct.uiBlock* %31, i32 512, %struct.wmOperatorType* %32, i32 %33, i32 %34, i32 0, i32 0, i16 signext %conv25, i16 signext %36, i8* null), !dbg !2534
  store %struct.uiBut* %call26, %struct.uiBut** %but, align 8, !dbg !2535
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then22
  br label %if.end31, !dbg !2536

if.else28:                                        ; preds = %if.end18
  %37 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2537
  %38 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2539
  %39 = load i32, i32* %context.addr, align 4, !dbg !2540
  %40 = load i8*, i8** %name.addr, align 8, !dbg !2541
  %41 = load i32, i32* %w, align 4, !dbg !2542
  %conv29 = trunc i32 %41 to i16, !dbg !2542
  %42 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2543
  %call30 = call %struct.uiBut* @uiDefButO_ptr(%struct.uiBlock* %37, i32 512, %struct.wmOperatorType* %38, i32 %39, i8* %40, i32 0, i32 0, i16 signext %conv29, i16 signext %42, i8* null), !dbg !2544
  store %struct.uiBut* %call30, %struct.uiBut** %but, align 8, !dbg !2545
  br label %if.end31

if.end31:                                         ; preds = %if.else28, %if.end27
  %43 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2546
  %root32 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %43, i32 0, i32 1, !dbg !2548
  %44 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root32, align 8, !dbg !2548
  %type33 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %44, i32 0, i32 2, !dbg !2549
  %45 = load i32, i32* %type33, align 8, !dbg !2549
  %cmp34 = icmp eq i32 %45, 3, !dbg !2550
  br i1 %cmp34, label %land.lhs.true36, label %if.end39, !dbg !2551

land.lhs.true36:                                  ; preds = %if.end31
  %46 = load i32, i32* %icon.addr, align 4, !dbg !2552
  %tobool37 = icmp ne i32 %46, 0, !dbg !2552
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !2553

if.then38:                                        ; preds = %land.lhs.true36
  %47 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2554
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 3, !dbg !2555
  %48 = load i32, i32* %drawflag, align 4, !dbg !2556
  %or = or i32 %48, 2, !dbg !2556
  store i32 %or, i32* %drawflag, align 4, !dbg !2556
  br label %if.end39, !dbg !2554

if.end39:                                         ; preds = %if.then38, %land.lhs.true36, %if.end31
  %49 = load i32, i32* %flag.addr, align 4, !dbg !2557
  %and40 = and i32 %49, 128, !dbg !2559
  %tobool41 = icmp ne i32 %and40, 0, !dbg !2559
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !2560

if.then42:                                        ; preds = %if.end39
  %50 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2561
  call void @uiBlockSetEmboss(%struct.uiBlock* %50, i8 zeroext 0), !dbg !2562
  br label %if.end43, !dbg !2562

if.end43:                                         ; preds = %if.then42, %if.end39
  %51 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2563
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %51, i32 0, i32 13, !dbg !2565
  %52 = load i8, i8* %redalert, align 1, !dbg !2565
  %tobool44 = icmp ne i8 %52, 0, !dbg !2563
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !2566

if.then45:                                        ; preds = %if.end43
  %53 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2567
  call void @uiButSetFlag(%struct.uiBut* %53, i32 65536), !dbg !2568
  br label %if.end46, !dbg !2568

if.end46:                                         ; preds = %if.then45, %if.end43
  %54 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !2569
  %tobool47 = icmp ne %struct.IDProperty* %54, null, !dbg !2569
  br i1 %tobool47, label %if.then50, label %lor.lhs.false, !dbg !2571

lor.lhs.false:                                    ; preds = %if.end46
  %55 = load i32, i32* %flag.addr, align 4, !dbg !2572
  %and48 = and i32 %55, 1, !dbg !2573
  %tobool49 = icmp ne i32 %and48, 0, !dbg !2573
  br i1 %tobool49, label %if.then50, label %if.end58, !dbg !2574

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %opptr, metadata !2575, metadata !DIExpression()), !dbg !2577
  %56 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2578
  %call51 = call %struct.PointerRNA* @uiButGetOperatorPtrRNA(%struct.uiBut* %56), !dbg !2579
  store %struct.PointerRNA* %call51, %struct.PointerRNA** %opptr, align 8, !dbg !2577
  %57 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !2580
  %tobool52 = icmp ne %struct.IDProperty* %57, null, !dbg !2580
  br i1 %tobool52, label %if.then53, label %if.else54, !dbg !2582

if.then53:                                        ; preds = %if.then50
  %58 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !2583
  %59 = bitcast %struct.IDProperty* %58 to i8*, !dbg !2583
  %60 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !2585
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %60, i32 0, i32 2, !dbg !2586
  store i8* %59, i8** %data, align 8, !dbg !2587
  br label %if.end57, !dbg !2588

if.else54:                                        ; preds = %if.then50
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !2589, metadata !DIExpression()), !dbg !2615
  %61 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !2615
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.uiItemFullO_ptr.val to i8*), i64 16, i1 false), !dbg !2615
  %call55 = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)), !dbg !2616
  %62 = bitcast %struct.IDProperty* %call55 to i8*, !dbg !2616
  %63 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !2617
  %data56 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %63, i32 0, i32 2, !dbg !2618
  store i8* %62, i8** %data56, align 8, !dbg !2619
  br label %if.end57

if.end57:                                         ; preds = %if.else54, %if.then53
  %64 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !2620
  %65 = bitcast %struct.PointerRNA* %agg.result to i8*, !dbg !2621
  %66 = bitcast %struct.PointerRNA* %64 to i8*, !dbg !2621
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false), !dbg !2621
  br label %return, !dbg !2622

if.end58:                                         ; preds = %lor.lhs.false
  %67 = bitcast %struct.PointerRNA* %agg.result to i8*, !dbg !2623
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 bitcast (%struct.PointerRNA* @PointerRNA_NULL to i8*), i64 24, i1 false), !dbg !2623
  br label %return, !dbg !2624

return:                                           ; preds = %if.end58, %if.end57
  ret void, !dbg !2625
}

declare dso_local i8* @RNA_struct_ui_name(%struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetCurLayout(%struct.uiBlock* %block, %struct.uiLayout* %layout) #0 !dbg !2626 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !2629, metadata !DIExpression()), !dbg !2630
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2631, metadata !DIExpression()), !dbg !2632
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2633
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !2634
  %curlayout = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 7, !dbg !2635
  store %struct.uiLayout* %0, %struct.uiLayout** %curlayout, align 8, !dbg !2636
  ret void, !dbg !2637
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_text_icon_width(%struct.uiLayout* %layout, i8* %name, i32 %icon, i8 zeroext %compact) #0 !dbg !2638 {
entry:
  %retval = alloca i32, align 4
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %compact.addr = alloca i8, align 1
  %variable = alloca i8, align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2641, metadata !DIExpression()), !dbg !2642
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2643, metadata !DIExpression()), !dbg !2644
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !2645, metadata !DIExpression()), !dbg !2646
  store i8 %compact, i8* %compact.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %compact.addr, metadata !2647, metadata !DIExpression()), !dbg !2648
  call void @llvm.dbg.declare(metadata i8* %variable, metadata !2649, metadata !DIExpression()), !dbg !2650
  %0 = load i32, i32* %icon.addr, align 4, !dbg !2651
  %tobool = icmp ne i32 %0, 0, !dbg !2651
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2653

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !2654
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !2654
  %2 = load i8, i8* %arrayidx, align 1, !dbg !2654
  %tobool1 = icmp ne i8 %2, 0, !dbg !2654
  br i1 %tobool1, label %if.end, label %if.then, !dbg !2655

if.then:                                          ; preds = %land.lhs.true
  %3 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2656
  %conv = sext i16 %3 to i32, !dbg !2656
  store i32 %conv, i32* %retval, align 4, !dbg !2657
  br label %return, !dbg !2657

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2658
  %call = call i32 @ui_layout_vary_direction(%struct.uiLayout* %4), !dbg !2659
  %cmp = icmp eq i32 %call, 1, !dbg !2660
  %conv2 = zext i1 %cmp to i32, !dbg !2660
  %conv3 = trunc i32 %conv2 to i8, !dbg !2661
  store i8 %conv3, i8* %variable, align 1, !dbg !2662
  %5 = load i8, i8* %variable, align 1, !dbg !2663
  %tobool4 = icmp ne i8 %5, 0, !dbg !2663
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !2665

if.then5:                                         ; preds = %if.end
  %6 = load i8*, i8** %name.addr, align 8, !dbg !2666
  %call6 = call i32 @UI_GetStringWidth(i8* %6), !dbg !2668
  %conv7 = sitofp i32 %call6 to float, !dbg !2668
  %7 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2669
  %conv8 = sext i16 %7 to i32, !dbg !2669
  %conv9 = sitofp i32 %conv8 to float, !dbg !2669
  %8 = load i8, i8* %compact.addr, align 1, !dbg !2670
  %conv10 = zext i8 %8 to i32, !dbg !2670
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !2670
  %9 = zext i1 %tobool11 to i64, !dbg !2670
  %cond = select i1 %tobool11, float 1.250000e+00, float 1.500000e+00, !dbg !2670
  %10 = load i32, i32* %icon.addr, align 4, !dbg !2671
  %tobool12 = icmp ne i32 %10, 0, !dbg !2671
  %11 = zext i1 %tobool12 to i64, !dbg !2671
  %cond13 = select i1 %tobool12, float 2.500000e-01, float 0.000000e+00, !dbg !2671
  %add = fadd float %cond, %cond13, !dbg !2672
  %mul = fmul float %conv9, %add, !dbg !2673
  %add14 = fadd float %conv7, %mul, !dbg !2674
  %conv15 = fptosi float %add14 to i32, !dbg !2675
  store i32 %conv15, i32* %retval, align 4, !dbg !2676
  br label %return, !dbg !2676

if.else:                                          ; preds = %if.end
  %12 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2677
  %conv16 = sext i16 %12 to i32, !dbg !2677
  %mul17 = mul nsw i32 %conv16, 10, !dbg !2679
  store i32 %mul17, i32* %retval, align 4, !dbg !2680
  br label %return, !dbg !2680

return:                                           ; preds = %if.else, %if.then5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !2681
  ret i32 %13, !dbg !2681
}

declare dso_local void @uiBlockSetEmboss(%struct.uiBlock*, i8 zeroext) #2

declare dso_local %struct.uiBut* @uiDefIconTextButO_ptr(%struct.uiBlock*, i32, %struct.wmOperatorType*, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i8*) #2

declare dso_local %struct.uiBut* @uiDefIconButO_ptr(%struct.uiBlock*, i32, %struct.wmOperatorType*, i32, i32, i32, i32, i16 signext, i16 signext, i8*) #2

declare dso_local %struct.uiBut* @uiDefButO_ptr(%struct.uiBlock*, i32, %struct.wmOperatorType*, i32, i8*, i32, i32, i16 signext, i16 signext, i8*) #2

declare dso_local void @uiButSetFlag(%struct.uiBut*, i32) #2

declare dso_local %struct.PointerRNA* @uiButGetOperatorPtrRNA(%struct.uiBut*) #2

declare dso_local %struct.IDProperty* @IDP_New(i32, %union.IDPropertyTemplate*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemFullO(%struct.PointerRNA* noalias sret %agg.result, %struct.uiLayout* %layout, i8* %opname, i8* %name, i32 %icon, %struct.IDProperty* %properties, i32 %context, i32 %flag) #0 !dbg !2682 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %opname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %properties.addr = alloca %struct.IDProperty*, align 8
  %context.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2685, metadata !DIExpression()), !dbg !2686
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !2687, metadata !DIExpression()), !dbg !2688
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2689, metadata !DIExpression()), !dbg !2690
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !2691, metadata !DIExpression()), !dbg !2692
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !2693, metadata !DIExpression()), !dbg !2694
  store i32 %context, i32* %context.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %context.addr, metadata !2695, metadata !DIExpression()), !dbg !2696
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !2697, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !2699, metadata !DIExpression()), !dbg !2700
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !2701
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !2702
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !2700
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !2703
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !2703
  br i1 %cmp, label %if.then, label %if.end, !dbg !2705

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2706
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !2706
  call void @ui_item_disabled(%struct.uiLayout* %2, i8* %3), !dbg !2706
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !2706
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.uiItemFullO, i64 0, i64 0), i8* %4), !dbg !2706
  %5 = bitcast %struct.PointerRNA* %agg.result to i8*, !dbg !2706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 bitcast (%struct.PointerRNA* @PointerRNA_NULL to i8*), i64 24, i1 false), !dbg !2706
  br label %return, !dbg !2706

if.end:                                           ; preds = %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2708
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !2709
  %8 = load i8*, i8** %name.addr, align 8, !dbg !2710
  %9 = load i32, i32* %icon.addr, align 4, !dbg !2711
  %10 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !2712
  %11 = load i32, i32* %context.addr, align 4, !dbg !2713
  %12 = load i32, i32* %flag.addr, align 4, !dbg !2714
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %agg.result, %struct.uiLayout* %6, %struct.wmOperatorType* %7, i8* %8, i32 %9, %struct.IDProperty* %10, i32 %11, i32 %12), !dbg !2715
  br label %return, !dbg !2716

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2717
}

declare dso_local %struct.wmOperatorType* @WM_operatortype_find(i8*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_disabled(%struct.uiLayout* %layout, i8* %name) #0 !dbg !2718 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %w = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2721, metadata !DIExpression()), !dbg !2722
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2723, metadata !DIExpression()), !dbg !2724
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !2725, metadata !DIExpression()), !dbg !2726
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2727
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !2728
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !2728
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !2729
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !2729
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !2726
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !2730, metadata !DIExpression()), !dbg !2731
  call void @llvm.dbg.declare(metadata i32* %w, metadata !2732, metadata !DIExpression()), !dbg !2733
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2734
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2735
  call void @uiBlockSetCurLayout(%struct.uiBlock* %3, %struct.uiLayout* %4), !dbg !2736
  %5 = load i8*, i8** %name.addr, align 8, !dbg !2737
  %tobool = icmp ne i8* %5, null, !dbg !2737
  br i1 %tobool, label %if.end, label %if.then, !dbg !2739

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %name.addr, align 8, !dbg !2740
  br label %if.end, !dbg !2741

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2742
  %7 = load i8*, i8** %name.addr, align 8, !dbg !2743
  %call = call i32 @ui_text_icon_width(%struct.uiLayout* %6, i8* %7, i32 0, i8 zeroext 0), !dbg !2744
  store i32 %call, i32* %w, align 4, !dbg !2745
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2746
  %9 = load i8*, i8** %name.addr, align 8, !dbg !2747
  %10 = load i32, i32* %w, align 4, !dbg !2748
  %conv = trunc i32 %10 to i16, !dbg !2748
  %11 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !2749
  %call2 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %8, i32 5120, i32 0, i8* %9, i32 0, i32 0, i16 signext %conv, i16 signext %11, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !2750
  store %struct.uiBut* %call2, %struct.uiBut** %but, align 8, !dbg !2751
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2752
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 2, !dbg !2753
  %13 = load i32, i32* %flag, align 8, !dbg !2754
  %or = or i32 %13, 2048, !dbg !2754
  store i32 %or, i32* %flag, align 8, !dbg !2754
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2755
  %lock = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 45, !dbg !2756
  store i8 1, i8* %lock, align 4, !dbg !2757
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !2758
  %lockstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 43, !dbg !2759
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %lockstr, align 8, !dbg !2760
  ret void, !dbg !2761
}

declare dso_local void @_RNA_warning(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemEnumO_ptr(%struct.uiLayout* %layout, %struct.wmOperatorType* %ot, i8* %name, i32 %icon, i8* %propname, i32 %value) #0 !dbg !2762 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %ptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2765, metadata !DIExpression()), !dbg !2766
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !2767, metadata !DIExpression()), !dbg !2768
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2769, metadata !DIExpression()), !dbg !2770
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !2771, metadata !DIExpression()), !dbg !2772
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !2773, metadata !DIExpression()), !dbg !2774
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !2775, metadata !DIExpression()), !dbg !2776
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !2777, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !2779, metadata !DIExpression()), !dbg !2780
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2781
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %0), !dbg !2782
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !2783
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %ptr, i8* %1), !dbg !2785
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !2786
  %tobool = icmp ne %struct.PropertyRNA* %call, null, !dbg !2786
  br i1 %tobool, label %if.then, label %if.else, !dbg !2787

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !2788

if.else:                                          ; preds = %entry
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 1, !dbg !2790
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !2790
  %call1 = call i8* @RNA_struct_identifier(%struct.StructRNA* %2), !dbg !2790
  %3 = load i8*, i8** %propname.addr, align 8, !dbg !2790
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.uiItemEnumO_ptr, i64 0, i64 0), i8* %call1, i8* %3), !dbg !2790
  br label %return, !dbg !2792

if.end:                                           ; preds = %if.then
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2793
  %5 = load i32, i32* %value.addr, align 4, !dbg !2794
  call void @RNA_property_enum_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %4, i32 %5), !dbg !2795
  %6 = load i8*, i8** %name.addr, align 8, !dbg !2796
  %tobool2 = icmp ne i8* %6, null, !dbg !2796
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !2798

if.then3:                                         ; preds = %if.end
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2799
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2800
  %9 = load i32, i32* %value.addr, align 4, !dbg !2801
  %call4 = call i8* @ui_menu_enumpropname(%struct.uiLayout* %7, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %8, i32 %9), !dbg !2802
  store i8* %call4, i8** %name.addr, align 8, !dbg !2803
  br label %if.end5, !dbg !2804

if.end5:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2805
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2806
  %12 = load i8*, i8** %name.addr, align 8, !dbg !2807
  %13 = load i32, i32* %icon.addr, align 4, !dbg !2808
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !2809
  %14 = load i8*, i8** %data, align 8, !dbg !2809
  %15 = bitcast i8* %14 to %struct.IDProperty*, !dbg !2810
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2811
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 1, !dbg !2812
  %17 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !2812
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %17, i32 0, i32 3, !dbg !2813
  %18 = load i32, i32* %opcontext, align 4, !dbg !2813
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %10, %struct.wmOperatorType* %11, i8* %12, i32 %13, %struct.IDProperty* %15, i32 %18, i32 0), !dbg !2814
  br label %return, !dbg !2815

return:                                           ; preds = %if.end5, %if.else
  ret void, !dbg !2815
}

declare dso_local void @WM_operator_properties_create_ptr(%struct.PointerRNA*, %struct.wmOperatorType*) #2

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #2

declare dso_local i8* @RNA_struct_identifier(%struct.StructRNA*) #2

declare dso_local void @RNA_property_enum_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @ui_menu_enumpropname(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %retval1) #0 !dbg !2816 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %retval.addr = alloca i32, align 4
  %item = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %name = alloca i8*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2819, metadata !DIExpression()), !dbg !2820
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2821, metadata !DIExpression()), !dbg !2822
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !2823, metadata !DIExpression()), !dbg !2824
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !2825, metadata !DIExpression()), !dbg !2826
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !2827, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.declare(metadata i8* %free, metadata !2838, metadata !DIExpression()), !dbg !2839
  call void @llvm.dbg.declare(metadata i8** %name, metadata !2840, metadata !DIExpression()), !dbg !2841
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2842
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !2843
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !2843
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !2844
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !2844
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 48, !dbg !2845
  %3 = load i8*, i8** %evil_C, align 8, !dbg !2845
  %4 = bitcast i8* %3 to %struct.bContext*, !dbg !2842
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2846
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !2847
  call void @RNA_property_enum_items(%struct.bContext* %4, %struct.PointerRNA* %5, %struct.PropertyRNA* %6, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !2848
  %7 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !2849
  %8 = load i32, i32* %retval.addr, align 4, !dbg !2851
  %call = call zeroext i8 @RNA_enum_name(%struct.EnumPropertyItem* %7, i32 %8, i8** %name), !dbg !2852
  %tobool = icmp ne i8 %call, 0, !dbg !2852
  br i1 %tobool, label %if.then, label %if.else, !dbg !2853

if.then:                                          ; preds = %entry
  %9 = load i8*, i8** %name, align 8, !dbg !2854
  store i8* %9, i8** %name, align 8, !dbg !2856
  br label %if.end, !dbg !2857

if.else:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %name, align 8, !dbg !2858
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i8, i8* %free, align 1, !dbg !2860
  %tobool2 = icmp ne i8 %10, 0, !dbg !2860
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !2862

if.then3:                                         ; preds = %if.end
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2863
  %12 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !2865
  %13 = bitcast %struct.EnumPropertyItem* %12 to i8*, !dbg !2865
  call void %11(i8* %13), !dbg !2863
  br label %if.end4, !dbg !2866

if.end4:                                          ; preds = %if.then3, %if.end
  %14 = load i8*, i8** %name, align 8, !dbg !2867
  ret i8* %14, !dbg !2868
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemEnumO(%struct.uiLayout* %layout, i8* %opname, i8* %name, i32 %icon, i8* %propname, i32 %value) #0 !dbg !2869 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %opname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2872, metadata !DIExpression()), !dbg !2873
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !2874, metadata !DIExpression()), !dbg !2875
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2876, metadata !DIExpression()), !dbg !2877
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !2878, metadata !DIExpression()), !dbg !2879
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !2880, metadata !DIExpression()), !dbg !2881
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !2882, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !2884, metadata !DIExpression()), !dbg !2885
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !2886
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !2887
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !2885
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !2888
  %tobool = icmp ne %struct.wmOperatorType* %1, null, !dbg !2888
  br i1 %tobool, label %if.then, label %if.else, !dbg !2890

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2891
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !2893
  %4 = load i8*, i8** %name.addr, align 8, !dbg !2894
  %5 = load i32, i32* %icon.addr, align 4, !dbg !2895
  %6 = load i8*, i8** %propname.addr, align 8, !dbg !2896
  %7 = load i32, i32* %value.addr, align 4, !dbg !2897
  call void @uiItemEnumO_ptr(%struct.uiLayout* %2, %struct.wmOperatorType* %3, i8* %4, i32 %5, i8* %6, i32 %7), !dbg !2898
  br label %if.end, !dbg !2899

if.else:                                          ; preds = %entry
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2900
  %9 = load i8*, i8** %opname.addr, align 8, !dbg !2902
  call void @ui_item_disabled(%struct.uiLayout* %8, i8* %9), !dbg !2903
  %10 = load i8*, i8** %opname.addr, align 8, !dbg !2904
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.uiItemEnumO, i64 0, i64 0), i8* %10), !dbg !2904
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2905
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemsFullEnumO(%struct.uiLayout* %layout, i8* %opname, i8* %propname, %struct.IDProperty* %properties, i32 %context, i32 %flag) #0 !dbg !2906 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  %properties.addr = alloca %struct.IDProperty*, align 8
  %context.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %radial = alloca i8, align 1
  %item16 = alloca %struct.EnumPropertyItem*, align 8
  %item_array = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %split = alloca %struct.uiLayout*, align 8
  %target = alloca %struct.uiLayout*, align 8
  %tptr = alloca %struct.PointerRNA, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !2909, metadata !DIExpression()), !dbg !2910
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !2911, metadata !DIExpression()), !dbg !2912
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !2913, metadata !DIExpression()), !dbg !2914
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !2915, metadata !DIExpression()), !dbg !2916
  store i32 %context, i32* %context.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %context.addr, metadata !2917, metadata !DIExpression()), !dbg !2918
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !2919, metadata !DIExpression()), !dbg !2920
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !2921, metadata !DIExpression()), !dbg !2922
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !2923
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !2924
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !2922
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !2925, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !2927, metadata !DIExpression()), !dbg !2928
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !2929, metadata !DIExpression()), !dbg !2930
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2931
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 1, !dbg !2932
  %2 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !2932
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %2, i32 0, i32 10, !dbg !2933
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !2933
  store %struct.uiBlock* %3, %struct.uiBlock** %block, align 8, !dbg !2930
  call void @llvm.dbg.declare(metadata i8* %radial, metadata !2934, metadata !DIExpression()), !dbg !2936
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2937
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 0, !dbg !2938
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !2939
  %5 = load i32, i32* %type, align 8, !dbg !2939
  %cmp = icmp eq i32 %5, 9, !dbg !2940
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2941

lor.rhs:                                          ; preds = %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2942
  %item2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %6, i32 0, i32 0, !dbg !2943
  %type3 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item2, i32 0, i32 2, !dbg !2944
  %7 = load i32, i32* %type3, align 8, !dbg !2944
  %cmp4 = icmp eq i32 %7, 10, !dbg !2945
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !2946

land.rhs:                                         ; preds = %lor.rhs
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2947
  %root5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 1, !dbg !2948
  %9 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root5, align 8, !dbg !2948
  %type6 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %9, i32 0, i32 2, !dbg !2949
  %10 = load i32, i32* %type6, align 8, !dbg !2949
  %cmp7 = icmp eq i32 %10, 4, !dbg !2950
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %11 = phi i1 [ false, %lor.rhs ], [ %cmp7, %land.rhs ], !dbg !2951
  br label %lor.end, !dbg !2941

lor.end:                                          ; preds = %land.end, %entry
  %12 = phi i1 [ true, %entry ], [ %11, %land.end ]
  %lor.ext = zext i1 %12 to i32, !dbg !2941
  %conv = trunc i32 %lor.ext to i8, !dbg !2952
  store i8 %conv, i8* %radial, align 1, !dbg !2936
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !2953
  %tobool = icmp ne %struct.wmOperatorType* %13, null, !dbg !2953
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2955

lor.lhs.false:                                    ; preds = %lor.end
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !2956
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 11, !dbg !2957
  %15 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2957
  %tobool8 = icmp ne %struct.StructRNA* %15, null, !dbg !2956
  br i1 %tobool8, label %if.end, label %if.then, !dbg !2958

if.then:                                          ; preds = %lor.lhs.false, %lor.end
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2959
  %17 = load i8*, i8** %opname.addr, align 8, !dbg !2961
  call void @ui_item_disabled(%struct.uiLayout* %16, i8* %17), !dbg !2962
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !2963
  %tobool9 = icmp ne %struct.wmOperatorType* %18, null, !dbg !2963
  %19 = zext i1 %tobool9 to i64, !dbg !2963
  %cond = select i1 %tobool9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), !dbg !2963
  %20 = load i8*, i8** %opname.addr, align 8, !dbg !2963
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.uiItemsFullEnumO, i64 0, i64 0), i8* %cond, i8* %20), !dbg !2963
  br label %if.end96, !dbg !2964

if.end:                                           ; preds = %lor.lhs.false
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !2965
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %21), !dbg !2966
  call void @WM_operator_properties_sanitize(%struct.PointerRNA* %ptr, i8 zeroext 0), !dbg !2967
  %22 = load i8*, i8** %propname.addr, align 8, !dbg !2968
  %call10 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %ptr, i8* %22), !dbg !2969
  store %struct.PropertyRNA* %call10, %struct.PropertyRNA** %prop, align 8, !dbg !2970
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2971
  %tobool11 = icmp ne %struct.PropertyRNA* %23, null, !dbg !2971
  br i1 %tobool11, label %land.lhs.true, label %if.else84, !dbg !2973

land.lhs.true:                                    ; preds = %if.end
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2974
  %call12 = call i32 @RNA_property_type(%struct.PropertyRNA* %24), !dbg !2975
  %cmp13 = icmp eq i32 %call12, 4, !dbg !2976
  br i1 %cmp13, label %if.then15, label %if.else84, !dbg !2977

if.then15:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item16, metadata !2978, metadata !DIExpression()), !dbg !2980
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item_array, metadata !2981, metadata !DIExpression()), !dbg !2982
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item_array, align 8, !dbg !2982
  call void @llvm.dbg.declare(metadata i8* %free, metadata !2983, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !2985, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %target, metadata !2987, metadata !DIExpression()), !dbg !2988
  %25 = load i8, i8* %radial, align 1, !dbg !2989
  %tobool17 = icmp ne i8 %25, 0, !dbg !2989
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !2991

if.then18:                                        ; preds = %if.then15
  %26 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2992
  %call19 = call %struct.uiLayout* @uiLayoutRadial(%struct.uiLayout* %26), !dbg !2994
  store %struct.uiLayout* %call19, %struct.uiLayout** %target, align 8, !dbg !2995
  br label %if.end23, !dbg !2996

if.else:                                          ; preds = %if.then15
  %27 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !2997
  %call20 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %27, float 0.000000e+00, i32 0), !dbg !2999
  store %struct.uiLayout* %call20, %struct.uiLayout** %split, align 8, !dbg !3000
  %28 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !3001
  %29 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3002
  %align = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 10, !dbg !3003
  %30 = load i8, i8* %align, align 2, !dbg !3003
  %conv21 = zext i8 %30 to i32, !dbg !3002
  %call22 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %28, i32 %conv21), !dbg !3004
  store %struct.uiLayout* %call22, %struct.uiLayout** %target, align 8, !dbg !3005
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  %31 = load i8, i8* %radial, align 1, !dbg !3006
  %tobool24 = icmp ne i8 %31, 0, !dbg !3006
  br i1 %tobool24, label %if.then25, label %if.else26, !dbg !3008

if.then25:                                        ; preds = %if.end23
  %32 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3009
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %32, i32 0, i32 48, !dbg !3011
  %33 = load i8*, i8** %evil_C, align 8, !dbg !3011
  %34 = bitcast i8* %33 to %struct.bContext*, !dbg !3009
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3012
  call void @RNA_property_enum_items_gettexted_all(%struct.bContext* %34, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %35, %struct.EnumPropertyItem** %item_array, i32* null, i8* %free), !dbg !3013
  br label %if.end28, !dbg !3014

if.else26:                                        ; preds = %if.end23
  %36 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3015
  %evil_C27 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %36, i32 0, i32 48, !dbg !3017
  %37 = load i8*, i8** %evil_C27, align 8, !dbg !3017
  %38 = bitcast i8* %37 to %struct.bContext*, !dbg !3015
  %39 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3018
  call void @RNA_property_enum_items_gettexted(%struct.bContext* %38, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %39, %struct.EnumPropertyItem** %item_array, i32* null, i8* %free), !dbg !3019
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then25
  %40 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !3020
  store %struct.EnumPropertyItem* %40, %struct.EnumPropertyItem** %item16, align 8, !dbg !3022
  br label %for.cond, !dbg !3023

for.cond:                                         ; preds = %for.inc, %if.end28
  %41 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3024
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %41, i32 0, i32 1, !dbg !3026
  %42 = load i8*, i8** %identifier, align 8, !dbg !3026
  %tobool29 = icmp ne i8* %42, null, !dbg !3027
  br i1 %tobool29, label %for.body, label %for.end, !dbg !3027

for.body:                                         ; preds = %for.cond
  %43 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3028
  %identifier30 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %43, i32 0, i32 1, !dbg !3031
  %44 = load i8*, i8** %identifier30, align 8, !dbg !3031
  %arrayidx = getelementptr inbounds i8, i8* %44, i64 0, !dbg !3028
  %45 = load i8, i8* %arrayidx, align 1, !dbg !3028
  %tobool31 = icmp ne i8 %45, 0, !dbg !3028
  br i1 %tobool31, label %if.then32, label %if.else44, !dbg !3032

if.then32:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %tptr, metadata !3033, metadata !DIExpression()), !dbg !3035
  %46 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3036
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %tptr, %struct.wmOperatorType* %46), !dbg !3037
  %47 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !3038
  %tobool33 = icmp ne %struct.IDProperty* %47, null, !dbg !3038
  br i1 %tobool33, label %if.then34, label %if.end42, !dbg !3040

if.then34:                                        ; preds = %if.then32
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tptr, i32 0, i32 2, !dbg !3041
  %48 = load i8*, i8** %data, align 8, !dbg !3041
  %tobool35 = icmp ne i8* %48, null, !dbg !3044
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !3045

if.then36:                                        ; preds = %if.then34
  %data37 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tptr, i32 0, i32 2, !dbg !3046
  %49 = load i8*, i8** %data37, align 8, !dbg !3046
  %50 = bitcast i8* %49 to %struct.IDProperty*, !dbg !3048
  call void @IDP_FreeProperty(%struct.IDProperty* %50), !dbg !3049
  %51 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3050
  %data38 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tptr, i32 0, i32 2, !dbg !3051
  %52 = load i8*, i8** %data38, align 8, !dbg !3051
  call void %51(i8* %52), !dbg !3050
  br label %if.end39, !dbg !3052

if.end39:                                         ; preds = %if.then36, %if.then34
  %53 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !3053
  %call40 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %53), !dbg !3054
  %54 = bitcast %struct.IDProperty* %call40 to i8*, !dbg !3054
  %data41 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tptr, i32 0, i32 2, !dbg !3055
  store i8* %54, i8** %data41, align 8, !dbg !3056
  br label %if.end42, !dbg !3057

if.end42:                                         ; preds = %if.end39, %if.then32
  %55 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3058
  %56 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3059
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %56, i32 0, i32 0, !dbg !3060
  %57 = load i32, i32* %value, align 8, !dbg !3060
  call void @RNA_property_enum_set(%struct.PointerRNA* %tptr, %struct.PropertyRNA* %55, i32 %57), !dbg !3061
  %58 = load %struct.uiLayout*, %struct.uiLayout** %target, align 8, !dbg !3062
  %59 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3063
  %60 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3064
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %60, i32 0, i32 3, !dbg !3065
  %61 = load i8*, i8** %name, align 8, !dbg !3065
  %62 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3066
  %icon = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %62, i32 0, i32 2, !dbg !3067
  %63 = load i32, i32* %icon, align 8, !dbg !3067
  %data43 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %tptr, i32 0, i32 2, !dbg !3068
  %64 = load i8*, i8** %data43, align 8, !dbg !3068
  %65 = bitcast i8* %64 to %struct.IDProperty*, !dbg !3069
  %66 = load i32, i32* %context.addr, align 4, !dbg !3070
  %67 = load i32, i32* %flag.addr, align 4, !dbg !3071
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %58, %struct.wmOperatorType* %59, i8* %61, i32 %63, %struct.IDProperty* %65, i32 %66, i32 %67), !dbg !3072
  %68 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3073
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %68, i32 0, i32 2, !dbg !3074
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 1, !dbg !3075
  %69 = load i8*, i8** %last, align 8, !dbg !3075
  %70 = bitcast i8* %69 to %struct.uiBut*, !dbg !3073
  %71 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3076
  call void @ui_but_tip_from_enum_item(%struct.uiBut* %70, %struct.EnumPropertyItem* %71), !dbg !3077
  br label %if.end80, !dbg !3078

if.else44:                                        ; preds = %for.body
  %72 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3079
  %name45 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %72, i32 0, i32 3, !dbg !3082
  %73 = load i8*, i8** %name45, align 8, !dbg !3082
  %tobool46 = icmp ne i8* %73, null, !dbg !3079
  br i1 %tobool46, label %if.then47, label %if.else74, !dbg !3083

if.then47:                                        ; preds = %if.else44
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !3084, metadata !DIExpression()), !dbg !3086
  %74 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3087
  %75 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !3089
  %cmp48 = icmp ne %struct.EnumPropertyItem* %74, %75, !dbg !3090
  br i1 %cmp48, label %land.lhs.true50, label %if.end57, !dbg !3091

land.lhs.true50:                                  ; preds = %if.then47
  %76 = load i8, i8* %radial, align 1, !dbg !3092
  %tobool51 = icmp ne i8 %76, 0, !dbg !3092
  br i1 %tobool51, label %if.end57, label %if.then52, !dbg !3093

if.then52:                                        ; preds = %land.lhs.true50
  %77 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !3094
  %78 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3096
  %align53 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %78, i32 0, i32 10, !dbg !3097
  %79 = load i8, i8* %align53, align 2, !dbg !3097
  %conv54 = zext i8 %79 to i32, !dbg !3096
  %call55 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %77, i32 %conv54), !dbg !3098
  store %struct.uiLayout* %call55, %struct.uiLayout** %target, align 8, !dbg !3099
  %80 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3100
  %flag56 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %80, i32 0, i32 27, !dbg !3101
  %81 = load i32, i32* %flag56, align 8, !dbg !3102
  %or = or i32 %81, 2048, !dbg !3102
  store i32 %or, i32* %flag56, align 8, !dbg !3102
  br label %if.end57, !dbg !3103

if.end57:                                         ; preds = %if.then52, %land.lhs.true50, %if.then47
  %82 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3104
  %icon58 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %82, i32 0, i32 2, !dbg !3106
  %83 = load i32, i32* %icon58, align 8, !dbg !3106
  %tobool59 = icmp ne i32 %83, 0, !dbg !3104
  br i1 %tobool59, label %if.then63, label %lor.lhs.false60, !dbg !3107

lor.lhs.false60:                                  ; preds = %if.end57
  %84 = load i8, i8* %radial, align 1, !dbg !3108
  %conv61 = zext i8 %84 to i32, !dbg !3108
  %tobool62 = icmp ne i32 %conv61, 0, !dbg !3108
  br i1 %tobool62, label %if.then63, label %if.else68, !dbg !3109

if.then63:                                        ; preds = %lor.lhs.false60, %if.end57
  %85 = load %struct.uiLayout*, %struct.uiLayout** %target, align 8, !dbg !3110
  %86 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3112
  %name64 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %86, i32 0, i32 3, !dbg !3113
  %87 = load i8*, i8** %name64, align 8, !dbg !3113
  %88 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3114
  %icon65 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %88, i32 0, i32 2, !dbg !3115
  %89 = load i32, i32* %icon65, align 8, !dbg !3115
  call void @uiItemL(%struct.uiLayout* %85, i8* %87, i32 %89), !dbg !3116
  %90 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3117
  %buttons66 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %90, i32 0, i32 2, !dbg !3118
  %last67 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons66, i32 0, i32 1, !dbg !3119
  %91 = load i8*, i8** %last67, align 8, !dbg !3119
  %92 = bitcast i8* %91 to %struct.uiBut*, !dbg !3117
  store %struct.uiBut* %92, %struct.uiBut** %but, align 8, !dbg !3120
  br label %if.end73, !dbg !3121

if.else68:                                        ; preds = %lor.lhs.false60
  %93 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3122
  %94 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3124
  %name69 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %94, i32 0, i32 3, !dbg !3125
  %95 = load i8*, i8** %name69, align 8, !dbg !3125
  %96 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3126
  %conv70 = sext i16 %96 to i32, !dbg !3126
  %mul = mul nsw i32 %conv70, 5, !dbg !3127
  %conv71 = trunc i32 %mul to i16, !dbg !3126
  %97 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3128
  %call72 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %93, i32 5120, i32 0, i8* %95, i32 0, i32 0, i16 signext %conv71, i16 signext %97, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !3129
  store %struct.uiBut* %call72, %struct.uiBut** %but, align 8, !dbg !3130
  br label %if.end73

if.end73:                                         ; preds = %if.else68, %if.then63
  %98 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !3131
  %99 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3132
  call void @ui_but_tip_from_enum_item(%struct.uiBut* %98, %struct.EnumPropertyItem* %99), !dbg !3133
  br label %if.end79, !dbg !3134

if.else74:                                        ; preds = %if.else44
  %100 = load i8, i8* %radial, align 1, !dbg !3135
  %tobool75 = icmp ne i8 %100, 0, !dbg !3135
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !3138

if.then76:                                        ; preds = %if.else74
  %101 = load %struct.uiLayout*, %struct.uiLayout** %target, align 8, !dbg !3139
  call void @uiItemS(%struct.uiLayout* %101), !dbg !3141
  br label %if.end78, !dbg !3142

if.else77:                                        ; preds = %if.else74
  %102 = load %struct.uiLayout*, %struct.uiLayout** %target, align 8, !dbg !3143
  call void @uiItemS(%struct.uiLayout* %102), !dbg !3145
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end42
  br label %for.inc, !dbg !3146

for.inc:                                          ; preds = %if.end80
  %103 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item16, align 8, !dbg !3147
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %103, i32 1, !dbg !3147
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item16, align 8, !dbg !3147
  br label %for.cond, !dbg !3148, !llvm.loop !3149

for.end:                                          ; preds = %for.cond
  %104 = load i8, i8* %free, align 1, !dbg !3151
  %tobool81 = icmp ne i8 %104, 0, !dbg !3151
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !3153

if.then82:                                        ; preds = %for.end
  %105 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3154
  %106 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !3156
  %107 = bitcast %struct.EnumPropertyItem* %106 to i8*, !dbg !3156
  call void %105(i8* %107), !dbg !3154
  br label %if.end83, !dbg !3157

if.end83:                                         ; preds = %if.then82, %for.end
  br label %if.end96, !dbg !3158

if.else84:                                        ; preds = %land.lhs.true, %if.end
  %108 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3159
  %tobool85 = icmp ne %struct.PropertyRNA* %108, null, !dbg !3159
  br i1 %tobool85, label %land.lhs.true86, label %if.else93, !dbg !3161

land.lhs.true86:                                  ; preds = %if.else84
  %109 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3162
  %call87 = call i32 @RNA_property_type(%struct.PropertyRNA* %109), !dbg !3163
  %cmp88 = icmp ne i32 %call87, 4, !dbg !3164
  br i1 %cmp88, label %if.then90, label %if.else93, !dbg !3165

if.then90:                                        ; preds = %land.lhs.true86
  %type91 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 1, !dbg !3166
  %110 = load %struct.StructRNA*, %struct.StructRNA** %type91, align 8, !dbg !3166
  %call92 = call i8* @RNA_struct_identifier(%struct.StructRNA* %110), !dbg !3166
  %111 = load i8*, i8** %propname.addr, align 8, !dbg !3166
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.uiItemsFullEnumO, i64 0, i64 0), i8* %call92, i8* %111), !dbg !3166
  br label %if.end96, !dbg !3168

if.else93:                                        ; preds = %land.lhs.true86, %if.else84
  %type94 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 1, !dbg !3169
  %112 = load %struct.StructRNA*, %struct.StructRNA** %type94, align 8, !dbg !3169
  %call95 = call i8* @RNA_struct_identifier(%struct.StructRNA* %112), !dbg !3169
  %113 = load i8*, i8** %propname.addr, align 8, !dbg !3169
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.uiItemsFullEnumO, i64 0, i64 0), i8* %call95, i8* %113), !dbg !3169
  br label %if.end96, !dbg !3171

if.end96:                                         ; preds = %if.then, %if.then90, %if.else93, %if.end83
  ret void, !dbg !3172
}

declare dso_local void @WM_operator_properties_sanitize(%struct.PointerRNA*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutRadial(%struct.uiLayout* %layout) #0 !dbg !3173 {
entry:
  %retval = alloca %struct.uiLayout*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %litem = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3176, metadata !DIExpression()), !dbg !3177
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !3178, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !3180, metadata !DIExpression()), !dbg !3182
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3183
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !3185
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3185
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 2, !dbg !3186
  %2 = load i32, i32* %type, align 8, !dbg !3186
  %cmp = icmp ne i32 %2, 4, !dbg !3187
  br i1 %cmp, label %if.then, label %if.end, !dbg !3188

if.then:                                          ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3189
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3190
  %call = call %struct.uiLayout* @ui_item_local_sublayout(%struct.uiLayout* %3, %struct.uiLayout* %4, i32 0), !dbg !3191
  store %struct.uiLayout* %call, %struct.uiLayout** %retval, align 8, !dbg !3192
  br label %return, !dbg !3192

if.end:                                           ; preds = %entry
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3193
  %root1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 1, !dbg !3195
  %6 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root1, align 8, !dbg !3195
  %layout2 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %6, i32 0, i32 11, !dbg !3196
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout2, align 8, !dbg !3196
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 3, !dbg !3197
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !3198
  %8 = load i8*, i8** %first, align 8, !dbg !3198
  %9 = bitcast i8* %8 to %struct.uiItem*, !dbg !3193
  store %struct.uiItem* %9, %struct.uiItem** %item, align 8, !dbg !3199
  br label %for.cond, !dbg !3200

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !3201
  %tobool = icmp ne %struct.uiItem* %10, null, !dbg !3203
  br i1 %tobool, label %for.body, label %for.end, !dbg !3203

for.body:                                         ; preds = %for.cond
  %11 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !3204
  %12 = bitcast %struct.uiItem* %11 to %struct.uiLayout*, !dbg !3206
  store %struct.uiLayout* %12, %struct.uiLayout** %litem, align 8, !dbg !3207
  %13 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3208
  %item3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 0, !dbg !3210
  %type4 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item3, i32 0, i32 2, !dbg !3211
  %14 = load i32, i32* %type4, align 8, !dbg !3211
  %cmp5 = icmp eq i32 %14, 9, !dbg !3212
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !3213

if.then6:                                         ; preds = %for.body
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3214
  %root7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 1, !dbg !3216
  %16 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root7, align 8, !dbg !3216
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %16, i32 0, i32 10, !dbg !3217
  %17 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3217
  %18 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3218
  call void @uiBlockSetCurLayout(%struct.uiBlock* %17, %struct.uiLayout* %18), !dbg !3219
  %19 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3220
  store %struct.uiLayout* %19, %struct.uiLayout** %retval, align 8, !dbg !3221
  br label %return, !dbg !3221

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !3222

for.inc:                                          ; preds = %if.end8
  %20 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !3223
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %20, i32 0, i32 0, !dbg !3224
  %21 = load i8*, i8** %next, align 8, !dbg !3224
  %22 = bitcast i8* %21 to %struct.uiItem*, !dbg !3223
  store %struct.uiItem* %22, %struct.uiItem** %item, align 8, !dbg !3225
  br label %for.cond, !dbg !3226, !llvm.loop !3227

for.end:                                          ; preds = %for.cond
  %23 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3229
  %call9 = call i8* %23(i64 88, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0)), !dbg !3229
  %24 = bitcast i8* %call9 to %struct.uiLayout*, !dbg !3229
  store %struct.uiLayout* %24, %struct.uiLayout** %litem, align 8, !dbg !3230
  %25 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3231
  %item10 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %25, i32 0, i32 0, !dbg !3232
  %type11 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item10, i32 0, i32 2, !dbg !3233
  store i32 9, i32* %type11, align 8, !dbg !3234
  %26 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3235
  %root12 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %26, i32 0, i32 1, !dbg !3236
  %27 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root12, align 8, !dbg !3236
  %28 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3237
  %root13 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %28, i32 0, i32 1, !dbg !3238
  store %struct.uiLayoutRoot* %27, %struct.uiLayoutRoot** %root13, align 8, !dbg !3239
  %29 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3240
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 11, !dbg !3241
  store i8 1, i8* %active, align 1, !dbg !3242
  %30 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3243
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %30, i32 0, i32 12, !dbg !3244
  store i8 1, i8* %enabled, align 4, !dbg !3245
  %31 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3246
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %31, i32 0, i32 2, !dbg !3247
  %32 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !3247
  %33 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3248
  %context14 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %33, i32 0, i32 2, !dbg !3249
  store %struct.bContextStore* %32, %struct.bContextStore** %context14, align 8, !dbg !3250
  %34 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3251
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %34, i32 0, i32 13, !dbg !3252
  %35 = load i8, i8* %redalert, align 1, !dbg !3252
  %36 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3253
  %redalert15 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %36, i32 0, i32 13, !dbg !3254
  store i8 %35, i8* %redalert15, align 1, !dbg !3255
  %37 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3256
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %37, i32 0, i32 6, !dbg !3257
  %38 = load i32, i32* %w, align 8, !dbg !3257
  %39 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3258
  %w16 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %39, i32 0, i32 6, !dbg !3259
  store i32 %38, i32* %w16, align 8, !dbg !3260
  %40 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3261
  %root17 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %40, i32 0, i32 1, !dbg !3262
  %41 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root17, align 8, !dbg !3262
  %layout18 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %41, i32 0, i32 11, !dbg !3263
  %42 = load %struct.uiLayout*, %struct.uiLayout** %layout18, align 8, !dbg !3263
  %items19 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %42, i32 0, i32 3, !dbg !3264
  %43 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3265
  %44 = bitcast %struct.uiLayout* %43 to i8*, !dbg !3265
  call void @BLI_addtail(%struct.ListBase* %items19, i8* %44), !dbg !3266
  %45 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3267
  %root20 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %45, i32 0, i32 1, !dbg !3268
  %46 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root20, align 8, !dbg !3268
  %block21 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %46, i32 0, i32 10, !dbg !3269
  %47 = load %struct.uiBlock*, %struct.uiBlock** %block21, align 8, !dbg !3269
  %48 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3270
  call void @uiBlockSetCurLayout(%struct.uiBlock* %47, %struct.uiLayout* %48), !dbg !3271
  %49 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3272
  store %struct.uiLayout* %49, %struct.uiLayout** %retval, align 8, !dbg !3273
  br label %return, !dbg !3273

return:                                           ; preds = %for.end, %if.then6, %if.then
  %50 = load %struct.uiLayout*, %struct.uiLayout** %retval, align 8, !dbg !3274
  ret %struct.uiLayout* %50, !dbg !3274
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %layout, float %percentage, i32 %align) #0 !dbg !3275 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %percentage.addr = alloca float, align 4
  %align.addr = alloca i32, align 4
  %split = alloca %struct.uiLayoutItemSplit*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3278, metadata !DIExpression()), !dbg !3279
  store float %percentage, float* %percentage.addr, align 4
  call void @llvm.dbg.declare(metadata float* %percentage.addr, metadata !3280, metadata !DIExpression()), !dbg !3281
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !3282, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemSplit** %split, metadata !3284, metadata !DIExpression()), !dbg !3285
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3286
  %call = call i8* %0(i64 96, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0)), !dbg !3286
  %1 = bitcast i8* %call to %struct.uiLayoutItemSplit*, !dbg !3286
  store %struct.uiLayoutItemSplit* %1, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3287
  %2 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3288
  %litem = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %2, i32 0, i32 0, !dbg !3289
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem, i32 0, i32 0, !dbg !3290
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !3291
  store i32 7, i32* %type, align 8, !dbg !3292
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3293
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !3294
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3294
  %5 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3295
  %litem1 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %5, i32 0, i32 0, !dbg !3296
  %root2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem1, i32 0, i32 1, !dbg !3297
  store %struct.uiLayoutRoot* %4, %struct.uiLayoutRoot** %root2, align 8, !dbg !3298
  %6 = load i32, i32* %align.addr, align 4, !dbg !3299
  %conv = trunc i32 %6 to i8, !dbg !3299
  %7 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3300
  %litem3 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %7, i32 0, i32 0, !dbg !3301
  %align4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem3, i32 0, i32 10, !dbg !3302
  store i8 %conv, i8* %align4, align 2, !dbg !3303
  %8 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3304
  %litem5 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %8, i32 0, i32 0, !dbg !3305
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem5, i32 0, i32 11, !dbg !3306
  store i8 1, i8* %active, align 1, !dbg !3307
  %9 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3308
  %litem6 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %9, i32 0, i32 0, !dbg !3309
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem6, i32 0, i32 12, !dbg !3310
  store i8 1, i8* %enabled, align 4, !dbg !3311
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3312
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 2, !dbg !3313
  %11 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !3313
  %12 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3314
  %litem7 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %12, i32 0, i32 0, !dbg !3315
  %context8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem7, i32 0, i32 2, !dbg !3316
  store %struct.bContextStore* %11, %struct.bContextStore** %context8, align 8, !dbg !3317
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3318
  %root9 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 1, !dbg !3319
  %14 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root9, align 8, !dbg !3319
  %style = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %14, i32 0, i32 9, !dbg !3320
  %15 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !3320
  %columnspace = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %15, i32 0, i32 10, !dbg !3321
  %16 = load i16, i16* %columnspace, align 8, !dbg !3321
  %17 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3322
  %litem10 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %17, i32 0, i32 0, !dbg !3323
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem10, i32 0, i32 9, !dbg !3324
  store i16 %16, i16* %space, align 8, !dbg !3325
  %18 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3326
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 13, !dbg !3327
  %19 = load i8, i8* %redalert, align 1, !dbg !3327
  %20 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3328
  %litem11 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %20, i32 0, i32 0, !dbg !3329
  %redalert12 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem11, i32 0, i32 13, !dbg !3330
  store i8 %19, i8* %redalert12, align 1, !dbg !3331
  %21 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3332
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %21, i32 0, i32 6, !dbg !3333
  %22 = load i32, i32* %w, align 8, !dbg !3333
  %23 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3334
  %litem13 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %23, i32 0, i32 0, !dbg !3335
  %w14 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem13, i32 0, i32 6, !dbg !3336
  store i32 %22, i32* %w14, align 8, !dbg !3337
  %24 = load float, float* %percentage.addr, align 4, !dbg !3338
  %25 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3339
  %percentage15 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %25, i32 0, i32 1, !dbg !3340
  store float %24, float* %percentage15, align 8, !dbg !3341
  %26 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3342
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %26, i32 0, i32 3, !dbg !3343
  %27 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3344
  %28 = bitcast %struct.uiLayoutItemSplit* %27 to i8*, !dbg !3344
  call void @BLI_addtail(%struct.ListBase* %items, i8* %28), !dbg !3345
  %29 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3346
  %root16 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 1, !dbg !3347
  %30 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root16, align 8, !dbg !3347
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %30, i32 0, i32 10, !dbg !3348
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3348
  %32 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3349
  %litem17 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %32, i32 0, i32 0, !dbg !3350
  call void @uiBlockSetCurLayout(%struct.uiBlock* %31, %struct.uiLayout* %litem17), !dbg !3351
  %33 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !3352
  %litem18 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %33, i32 0, i32 0, !dbg !3353
  ret %struct.uiLayout* %litem18, !dbg !3354
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %layout, i32 %align) #0 !dbg !3355 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %align.addr = alloca i32, align 4
  %litem = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3358, metadata !DIExpression()), !dbg !3359
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !3360, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !3362, metadata !DIExpression()), !dbg !3363
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3364
  %call = call i8* %0(i64 88, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)), !dbg !3364
  %1 = bitcast i8* %call to %struct.uiLayout*, !dbg !3364
  store %struct.uiLayout* %1, %struct.uiLayout** %litem, align 8, !dbg !3365
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3366
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 0, !dbg !3367
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !3368
  store i32 2, i32* %type, align 8, !dbg !3369
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3370
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !3371
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3371
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3372
  %root1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 1, !dbg !3373
  store %struct.uiLayoutRoot* %4, %struct.uiLayoutRoot** %root1, align 8, !dbg !3374
  %6 = load i32, i32* %align.addr, align 4, !dbg !3375
  %conv = trunc i32 %6 to i8, !dbg !3375
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3376
  %align2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 10, !dbg !3377
  store i8 %conv, i8* %align2, align 2, !dbg !3378
  %8 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3379
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 11, !dbg !3380
  store i8 1, i8* %active, align 1, !dbg !3381
  %9 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3382
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %9, i32 0, i32 12, !dbg !3383
  store i8 1, i8* %enabled, align 4, !dbg !3384
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3385
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 2, !dbg !3386
  %11 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !3386
  %12 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3387
  %context3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %12, i32 0, i32 2, !dbg !3388
  store %struct.bContextStore* %11, %struct.bContextStore** %context3, align 8, !dbg !3389
  %13 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3390
  %align4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 10, !dbg !3391
  %14 = load i8, i8* %align4, align 2, !dbg !3391
  %conv5 = zext i8 %14 to i32, !dbg !3392
  %tobool = icmp ne i32 %conv5, 0, !dbg !3392
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3392

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3392

cond.false:                                       ; preds = %entry
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3393
  %root6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 1, !dbg !3394
  %16 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root6, align 8, !dbg !3394
  %style = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %16, i32 0, i32 9, !dbg !3395
  %17 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !3395
  %buttonspacey = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %17, i32 0, i32 14, !dbg !3396
  %18 = load i16, i16* %buttonspacey, align 8, !dbg !3396
  %conv7 = sext i16 %18 to i32, !dbg !3393
  br label %cond.end, !dbg !3392

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv7, %cond.false ], !dbg !3392
  %conv8 = trunc i32 %cond to i16, !dbg !3392
  %19 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3397
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 9, !dbg !3398
  store i16 %conv8, i16* %space, align 8, !dbg !3399
  %20 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3400
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %20, i32 0, i32 13, !dbg !3401
  %21 = load i8, i8* %redalert, align 1, !dbg !3401
  %22 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3402
  %redalert9 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %22, i32 0, i32 13, !dbg !3403
  store i8 %21, i8* %redalert9, align 1, !dbg !3404
  %23 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3405
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %23, i32 0, i32 6, !dbg !3406
  %24 = load i32, i32* %w, align 8, !dbg !3406
  %25 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3407
  %w10 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %25, i32 0, i32 6, !dbg !3408
  store i32 %24, i32* %w10, align 8, !dbg !3409
  %26 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3410
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %26, i32 0, i32 3, !dbg !3411
  %27 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3412
  %28 = bitcast %struct.uiLayout* %27 to i8*, !dbg !3412
  call void @BLI_addtail(%struct.ListBase* %items, i8* %28), !dbg !3413
  %29 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3414
  %root11 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 1, !dbg !3415
  %30 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root11, align 8, !dbg !3415
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %30, i32 0, i32 10, !dbg !3416
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3416
  %32 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3417
  call void @uiBlockSetCurLayout(%struct.uiBlock* %31, %struct.uiLayout* %32), !dbg !3418
  %33 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !3419
  ret %struct.uiLayout* %33, !dbg !3420
}

declare dso_local void @RNA_property_enum_items_gettexted_all(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, %struct.EnumPropertyItem**, i32*, i8*) #2

declare dso_local void @RNA_property_enum_items_gettexted(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, %struct.EnumPropertyItem**, i32*, i8*) #2

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #2

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_but_tip_from_enum_item(%struct.uiBut* %but, %struct.EnumPropertyItem* %item) #0 !dbg !3421 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %item.addr = alloca %struct.EnumPropertyItem*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !3424, metadata !DIExpression()), !dbg !3425
  store %struct.EnumPropertyItem* %item, %struct.EnumPropertyItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item.addr, metadata !3426, metadata !DIExpression()), !dbg !3427
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !3428
  %tip = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 42, !dbg !3430
  %1 = load i8*, i8** %tip, align 8, !dbg !3430
  %cmp = icmp eq i8* %1, null, !dbg !3431
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3432

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !3433
  %tip1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 42, !dbg !3434
  %3 = load i8*, i8** %tip1, align 8, !dbg !3434
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3433
  %4 = load i8, i8* %arrayidx, align 1, !dbg !3433
  %conv = zext i8 %4 to i32, !dbg !3433
  %cmp2 = icmp eq i32 %conv, 0, !dbg !3435
  br i1 %cmp2, label %if.then, label %if.end11, !dbg !3436

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !3437
  %description = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %5, i32 0, i32 4, !dbg !3440
  %6 = load i8*, i8** %description, align 8, !dbg !3440
  %tobool = icmp ne i8* %6, null, !dbg !3437
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3441

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !3442
  %description4 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %7, i32 0, i32 4, !dbg !3443
  %8 = load i8*, i8** %description4, align 8, !dbg !3443
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !3442
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !3442
  %conv6 = zext i8 %9 to i32, !dbg !3442
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !3442
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !3444

if.then8:                                         ; preds = %land.lhs.true
  %10 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item.addr, align 8, !dbg !3445
  %description9 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %10, i32 0, i32 4, !dbg !3447
  %11 = load i8*, i8** %description9, align 8, !dbg !3447
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !3448
  %tip10 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 42, !dbg !3449
  store i8* %11, i8** %tip10, align 8, !dbg !3450
  br label %if.end, !dbg !3451

if.end:                                           ; preds = %if.then8, %land.lhs.true, %if.then
  br label %if.end11, !dbg !3452

if.end11:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !3453
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemL(%struct.uiLayout* %layout, i8* %name, i32 %icon) #0 !dbg !3454 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3457, metadata !DIExpression()), !dbg !3458
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3459, metadata !DIExpression()), !dbg !3460
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3461, metadata !DIExpression()), !dbg !3462
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3463
  %1 = load i8*, i8** %name.addr, align 8, !dbg !3464
  %2 = load i32, i32* %icon.addr, align 4, !dbg !3465
  %call = call %struct.uiBut* @uiItemL_(%struct.uiLayout* %0, i8* %1, i32 %2), !dbg !3466
  ret void, !dbg !3467
}

declare dso_local %struct.uiBut* @uiDefBut(%struct.uiBlock*, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i8*, float, float, float, float, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemS(%struct.uiLayout* %layout) #0 !dbg !3468 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %is_menu = alloca i8, align 1
  %space = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3471, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !3473, metadata !DIExpression()), !dbg !3474
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3475
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !3476
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3476
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !3477
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !3477
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !3474
  call void @llvm.dbg.declare(metadata i8* %is_menu, metadata !3478, metadata !DIExpression()), !dbg !3479
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3480
  %call = call zeroext i8 @ui_block_is_menu(%struct.uiBlock* %3), !dbg !3481
  store i8 %call, i8* %is_menu, align 1, !dbg !3479
  call void @llvm.dbg.declare(metadata i32* %space, metadata !3482, metadata !DIExpression()), !dbg !3483
  %4 = load i8, i8* %is_menu, align 1, !dbg !3484
  %conv = zext i8 %4 to i32, !dbg !3485
  %tobool = icmp ne i32 %conv, 0, !dbg !3485
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3485

cond.true:                                        ; preds = %entry
  %5 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3486
  %conv2 = sext i16 %5 to i32, !dbg !3486
  %conv3 = sitofp i32 %conv2 to float, !dbg !3486
  %mul = fmul float 0x3FDCCCCCC0000000, %conv3, !dbg !3487
  br label %cond.end, !dbg !3485

cond.false:                                       ; preds = %entry
  %6 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3488
  %conv4 = sext i16 %6 to i32, !dbg !3488
  %conv5 = sitofp i32 %conv4 to float, !dbg !3488
  %mul6 = fmul float 0x3FD3333340000000, %conv5, !dbg !3489
  br label %cond.end, !dbg !3485

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul, %cond.true ], [ %mul6, %cond.false ], !dbg !3485
  %conv7 = fptosi float %cond to i32, !dbg !3485
  store i32 %conv7, i32* %space, align 4, !dbg !3483
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3490
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3491
  call void @uiBlockSetCurLayout(%struct.uiBlock* %7, %struct.uiLayout* %8), !dbg !3492
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3493
  %10 = load i8, i8* %is_menu, align 1, !dbg !3494
  %conv8 = zext i8 %10 to i32, !dbg !3495
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !3495
  %11 = zext i1 %tobool9 to i64, !dbg !3495
  %cond10 = select i1 %tobool9, i32 27648, i32 10752, !dbg !3495
  %12 = load i32, i32* %space, align 4, !dbg !3496
  %conv11 = trunc i32 %12 to i16, !dbg !3496
  %13 = load i32, i32* %space, align 4, !dbg !3497
  %conv12 = trunc i32 %13 to i16, !dbg !3497
  %call13 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %9, i32 %cond10, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 0, i32 0, i16 signext %conv11, i16 signext %conv12, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !3498
  ret void, !dbg !3499
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemsEnumO(%struct.uiLayout* %layout, i8* %opname, i8* %propname) #0 !dbg !3500 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3503, metadata !DIExpression()), !dbg !3504
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3505, metadata !DIExpression()), !dbg !3506
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3509
  %1 = load i8*, i8** %opname.addr, align 8, !dbg !3510
  %2 = load i8*, i8** %propname.addr, align 8, !dbg !3511
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3512
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !3513
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3513
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %4, i32 0, i32 3, !dbg !3514
  %5 = load i32, i32* %opcontext, align 4, !dbg !3514
  call void @uiItemsFullEnumO(%struct.uiLayout* %0, i8* %1, i8* %2, %struct.IDProperty* null, i32 %5, i32 0), !dbg !3515
  ret void, !dbg !3516
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemEnumO_value(%struct.uiLayout* %layout, i8* %name, i32 %icon, i8* %opname, i8* %propname, i32 %value) #0 !dbg !3517 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3520, metadata !DIExpression()), !dbg !3521
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3522, metadata !DIExpression()), !dbg !3523
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3524, metadata !DIExpression()), !dbg !3525
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3526, metadata !DIExpression()), !dbg !3527
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !3528, metadata !DIExpression()), !dbg !3529
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3530, metadata !DIExpression()), !dbg !3531
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3532, metadata !DIExpression()), !dbg !3533
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !3534
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !3535
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !3533
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !3536, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3538, metadata !DIExpression()), !dbg !3539
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3540
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !3540
  br i1 %cmp, label %if.then, label %if.end, !dbg !3542

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3543
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !3543
  call void @ui_item_disabled(%struct.uiLayout* %2, i8* %3), !dbg !3543
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !3543
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uiItemEnumO_value, i64 0, i64 0), i8* %4), !dbg !3543
  br label %return, !dbg !3543

if.end:                                           ; preds = %entry
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3545
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %5), !dbg !3546
  %6 = load i8*, i8** %propname.addr, align 8, !dbg !3547
  %call1 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %ptr, i8* %6), !dbg !3549
  store %struct.PropertyRNA* %call1, %struct.PropertyRNA** %prop, align 8, !dbg !3550
  %tobool = icmp ne %struct.PropertyRNA* %call1, null, !dbg !3550
  br i1 %tobool, label %if.then2, label %if.else, !dbg !3551

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !3552

if.else:                                          ; preds = %if.end
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 1, !dbg !3554
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3554
  %call3 = call i8* @RNA_struct_identifier(%struct.StructRNA* %7), !dbg !3554
  %8 = load i8*, i8** %propname.addr, align 8, !dbg !3554
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uiItemEnumO_value, i64 0, i64 0), i8* %call3, i8* %8), !dbg !3554
  br label %return, !dbg !3556

if.end4:                                          ; preds = %if.then2
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3557
  %10 = load i32, i32* %value.addr, align 4, !dbg !3558
  call void @RNA_property_enum_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %9, i32 %10), !dbg !3559
  %11 = load i8*, i8** %name.addr, align 8, !dbg !3560
  %tobool5 = icmp ne i8* %11, null, !dbg !3560
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !3562

if.then6:                                         ; preds = %if.end4
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3563
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3564
  %14 = load i32, i32* %value.addr, align 4, !dbg !3565
  %call7 = call i8* @ui_menu_enumpropname(%struct.uiLayout* %12, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %13, i32 %14), !dbg !3566
  store i8* %call7, i8** %name.addr, align 8, !dbg !3567
  br label %if.end8, !dbg !3568

if.end8:                                          ; preds = %if.then6, %if.end4
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3569
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3570
  %17 = load i8*, i8** %name.addr, align 8, !dbg !3571
  %18 = load i32, i32* %icon.addr, align 4, !dbg !3572
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !3573
  %19 = load i8*, i8** %data, align 8, !dbg !3573
  %20 = bitcast i8* %19 to %struct.IDProperty*, !dbg !3574
  %21 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3575
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %21, i32 0, i32 1, !dbg !3576
  %22 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3576
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %22, i32 0, i32 3, !dbg !3577
  %23 = load i32, i32* %opcontext, align 4, !dbg !3577
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %15, %struct.wmOperatorType* %16, i8* %17, i32 %18, %struct.IDProperty* %20, i32 %23, i32 0), !dbg !3578
  br label %return, !dbg !3579

return:                                           ; preds = %if.end8, %if.else, %if.then
  ret void, !dbg !3579
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemEnumO_string(%struct.uiLayout* %layout, i8* %name, i32 %icon, i8* %opname, i8* %propname, i8* %value_str) #0 !dbg !3580 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  %value_str.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %value = alloca i32, align 4
  %free = alloca i8, align 1
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3583, metadata !DIExpression()), !dbg !3584
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3585, metadata !DIExpression()), !dbg !3586
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3587, metadata !DIExpression()), !dbg !3588
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3589, metadata !DIExpression()), !dbg !3590
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !3591, metadata !DIExpression()), !dbg !3592
  store i8* %value_str, i8** %value_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value_str.addr, metadata !3593, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3595, metadata !DIExpression()), !dbg !3596
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !3597
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !3598
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !3596
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !3599, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !3601, metadata !DIExpression()), !dbg !3602
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !3603, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3605, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.declare(metadata i8* %free, metadata !3607, metadata !DIExpression()), !dbg !3608
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3609
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !3609
  br i1 %cmp, label %if.then, label %if.end, !dbg !3611

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3612
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !3612
  call void @ui_item_disabled(%struct.uiLayout* %2, i8* %3), !dbg !3612
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !3612
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uiItemEnumO_string, i64 0, i64 0), i8* %4), !dbg !3612
  br label %return, !dbg !3612

if.end:                                           ; preds = %entry
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3614
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %5), !dbg !3615
  %6 = load i8*, i8** %propname.addr, align 8, !dbg !3616
  %call1 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %ptr, i8* %6), !dbg !3618
  store %struct.PropertyRNA* %call1, %struct.PropertyRNA** %prop, align 8, !dbg !3619
  %tobool = icmp ne %struct.PropertyRNA* %call1, null, !dbg !3619
  br i1 %tobool, label %if.then2, label %if.else, !dbg !3620

if.then2:                                         ; preds = %if.end
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3621
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 1, !dbg !3623
  %8 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3623
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %8, i32 0, i32 10, !dbg !3624
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3624
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 48, !dbg !3625
  %10 = load i8*, i8** %evil_C, align 8, !dbg !3625
  %11 = bitcast i8* %10 to %struct.bContext*, !dbg !3621
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3626
  call void @RNA_property_enum_items(%struct.bContext* %11, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %12, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !3627
  %13 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !3628
  %cmp3 = icmp eq %struct.EnumPropertyItem* %13, null, !dbg !3630
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !3631

lor.lhs.false:                                    ; preds = %if.then2
  %14 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !3632
  %15 = load i8*, i8** %value_str.addr, align 8, !dbg !3633
  %call4 = call zeroext i8 @RNA_enum_value_from_id(%struct.EnumPropertyItem* %14, i8* %15, i32* %value), !dbg !3634
  %conv = zext i8 %call4 to i32, !dbg !3634
  %cmp5 = icmp eq i32 %conv, 0, !dbg !3635
  br i1 %cmp5, label %if.then7, label %if.end12, !dbg !3636

if.then7:                                         ; preds = %lor.lhs.false, %if.then2
  %16 = load i8, i8* %free, align 1, !dbg !3637
  %tobool8 = icmp ne i8 %16, 0, !dbg !3637
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !3640

if.then9:                                         ; preds = %if.then7
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3641
  %18 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !3643
  %19 = bitcast %struct.EnumPropertyItem* %18 to i8*, !dbg !3643
  call void %17(i8* %19), !dbg !3641
  br label %if.end10, !dbg !3644

if.end10:                                         ; preds = %if.then9, %if.then7
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 1, !dbg !3645
  %20 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !3645
  %call11 = call i8* @RNA_struct_identifier(%struct.StructRNA* %20), !dbg !3645
  %21 = load i8*, i8** %propname.addr, align 8, !dbg !3645
  %22 = load i8*, i8** %value_str.addr, align 8, !dbg !3645
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uiItemEnumO_string, i64 0, i64 0), i8* %call11, i8* %21, i8* %22), !dbg !3645
  br label %return, !dbg !3646

if.end12:                                         ; preds = %lor.lhs.false
  %23 = load i8, i8* %free, align 1, !dbg !3647
  %tobool13 = icmp ne i8 %23, 0, !dbg !3647
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !3649

if.then14:                                        ; preds = %if.end12
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3650
  %25 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !3652
  %26 = bitcast %struct.EnumPropertyItem* %25 to i8*, !dbg !3652
  call void %24(i8* %26), !dbg !3650
  br label %if.end15, !dbg !3653

if.end15:                                         ; preds = %if.then14, %if.end12
  br label %if.end18, !dbg !3654

if.else:                                          ; preds = %if.end
  %type16 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 1, !dbg !3655
  %27 = load %struct.StructRNA*, %struct.StructRNA** %type16, align 8, !dbg !3655
  %call17 = call i8* @RNA_struct_identifier(%struct.StructRNA* %27), !dbg !3655
  %28 = load i8*, i8** %propname.addr, align 8, !dbg !3655
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uiItemEnumO_string, i64 0, i64 0), i8* %call17, i8* %28), !dbg !3655
  br label %return, !dbg !3657

if.end18:                                         ; preds = %if.end15
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3658
  %30 = load i32, i32* %value, align 4, !dbg !3659
  call void @RNA_property_enum_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %29, i32 %30), !dbg !3660
  %31 = load i8*, i8** %name.addr, align 8, !dbg !3661
  %tobool19 = icmp ne i8* %31, null, !dbg !3661
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !3663

if.then20:                                        ; preds = %if.end18
  %32 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3664
  %33 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !3665
  %34 = load i32, i32* %value, align 4, !dbg !3666
  %call21 = call i8* @ui_menu_enumpropname(%struct.uiLayout* %32, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %33, i32 %34), !dbg !3667
  store i8* %call21, i8** %name.addr, align 8, !dbg !3668
  br label %if.end22, !dbg !3669

if.end22:                                         ; preds = %if.then20, %if.end18
  %35 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3670
  %36 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3671
  %37 = load i8*, i8** %name.addr, align 8, !dbg !3672
  %38 = load i32, i32* %icon.addr, align 4, !dbg !3673
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !3674
  %39 = load i8*, i8** %data, align 8, !dbg !3674
  %40 = bitcast i8* %39 to %struct.IDProperty*, !dbg !3675
  %41 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3676
  %root23 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %41, i32 0, i32 1, !dbg !3677
  %42 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root23, align 8, !dbg !3677
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %42, i32 0, i32 3, !dbg !3678
  %43 = load i32, i32* %opcontext, align 4, !dbg !3678
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %35, %struct.wmOperatorType* %36, i8* %37, i32 %38, %struct.IDProperty* %40, i32 %43, i32 0), !dbg !3679
  br label %return, !dbg !3680

return:                                           ; preds = %if.end22, %if.else, %if.end10, %if.then
  ret void, !dbg !3680
}

declare dso_local void @RNA_property_enum_items(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, %struct.EnumPropertyItem**, i32*, i8*) #2

declare dso_local zeroext i8 @RNA_enum_value_from_id(%struct.EnumPropertyItem*, i8*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemBooleanO(%struct.uiLayout* %layout, i8* %name, i32 %icon, i8* %opname, i8* %propname, i32 %value) #0 !dbg !3681 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3684, metadata !DIExpression()), !dbg !3685
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3686, metadata !DIExpression()), !dbg !3687
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3688, metadata !DIExpression()), !dbg !3689
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !3690, metadata !DIExpression()), !dbg !3691
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3692, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3694, metadata !DIExpression()), !dbg !3695
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !3696
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !3697
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !3695
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !3698, metadata !DIExpression()), !dbg !3699
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3700
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !3700
  br i1 %cmp, label %if.then, label %if.end, !dbg !3702

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3703
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !3703
  call void @ui_item_disabled(%struct.uiLayout* %2, i8* %3), !dbg !3703
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !3703
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.uiItemBooleanO, i64 0, i64 0), i8* %4), !dbg !3703
  br label %return, !dbg !3703

if.end:                                           ; preds = %entry
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3705
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %5), !dbg !3706
  %6 = load i8*, i8** %propname.addr, align 8, !dbg !3707
  %7 = load i32, i32* %value.addr, align 4, !dbg !3708
  call void @RNA_boolean_set(%struct.PointerRNA* %ptr, i8* %6, i32 %7), !dbg !3709
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3710
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3711
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3712
  %11 = load i32, i32* %icon.addr, align 4, !dbg !3713
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !3714
  %12 = load i8*, i8** %data, align 8, !dbg !3714
  %13 = bitcast i8* %12 to %struct.IDProperty*, !dbg !3715
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3716
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %14, i32 0, i32 1, !dbg !3717
  %15 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3717
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %15, i32 0, i32 3, !dbg !3718
  %16 = load i32, i32* %opcontext, align 4, !dbg !3718
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %8, %struct.wmOperatorType* %9, i8* %10, i32 %11, %struct.IDProperty* %13, i32 %16, i32 0), !dbg !3719
  br label %return, !dbg !3720

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3720
}

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemIntO(%struct.uiLayout* %layout, i8* %name, i32 %icon, i8* %opname, i8* %propname, i32 %value) #0 !dbg !3721 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3722, metadata !DIExpression()), !dbg !3723
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3724, metadata !DIExpression()), !dbg !3725
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3726, metadata !DIExpression()), !dbg !3727
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !3730, metadata !DIExpression()), !dbg !3731
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3732, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3734, metadata !DIExpression()), !dbg !3735
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !3736
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !3737
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !3735
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !3738, metadata !DIExpression()), !dbg !3739
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3740
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !3740
  br i1 %cmp, label %if.then, label %if.end, !dbg !3742

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3743
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !3743
  call void @ui_item_disabled(%struct.uiLayout* %2, i8* %3), !dbg !3743
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !3743
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.uiItemIntO, i64 0, i64 0), i8* %4), !dbg !3743
  br label %return, !dbg !3743

if.end:                                           ; preds = %entry
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3745
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %5), !dbg !3746
  %6 = load i8*, i8** %propname.addr, align 8, !dbg !3747
  %7 = load i32, i32* %value.addr, align 4, !dbg !3748
  call void @RNA_int_set(%struct.PointerRNA* %ptr, i8* %6, i32 %7), !dbg !3749
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3750
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3751
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3752
  %11 = load i32, i32* %icon.addr, align 4, !dbg !3753
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !3754
  %12 = load i8*, i8** %data, align 8, !dbg !3754
  %13 = bitcast i8* %12 to %struct.IDProperty*, !dbg !3755
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3756
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %14, i32 0, i32 1, !dbg !3757
  %15 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3757
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %15, i32 0, i32 3, !dbg !3758
  %16 = load i32, i32* %opcontext, align 4, !dbg !3758
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %8, %struct.wmOperatorType* %9, i8* %10, i32 %11, %struct.IDProperty* %13, i32 %16, i32 0), !dbg !3759
  br label %return, !dbg !3760

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3760
}

declare dso_local void @RNA_int_set(%struct.PointerRNA*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemFloatO(%struct.uiLayout* %layout, i8* %name, i32 %icon, i8* %opname, i8* %propname, float %value) #0 !dbg !3761 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca float, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3764, metadata !DIExpression()), !dbg !3765
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3766, metadata !DIExpression()), !dbg !3767
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3768, metadata !DIExpression()), !dbg !3769
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3770, metadata !DIExpression()), !dbg !3771
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !3772, metadata !DIExpression()), !dbg !3773
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !3774, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3776, metadata !DIExpression()), !dbg !3777
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !3778
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !3779
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !3777
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !3780, metadata !DIExpression()), !dbg !3781
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3782
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !3782
  br i1 %cmp, label %if.then, label %if.end, !dbg !3784

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3785
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !3785
  call void @ui_item_disabled(%struct.uiLayout* %2, i8* %3), !dbg !3785
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !3785
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.uiItemFloatO, i64 0, i64 0), i8* %4), !dbg !3785
  br label %return, !dbg !3785

if.end:                                           ; preds = %entry
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3787
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %5), !dbg !3788
  %6 = load i8*, i8** %propname.addr, align 8, !dbg !3789
  %7 = load float, float* %value.addr, align 4, !dbg !3790
  call void @RNA_float_set(%struct.PointerRNA* %ptr, i8* %6, float %7), !dbg !3791
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3792
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3793
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3794
  %11 = load i32, i32* %icon.addr, align 4, !dbg !3795
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !3796
  %12 = load i8*, i8** %data, align 8, !dbg !3796
  %13 = bitcast i8* %12 to %struct.IDProperty*, !dbg !3797
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3798
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %14, i32 0, i32 1, !dbg !3799
  %15 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3799
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %15, i32 0, i32 3, !dbg !3800
  %16 = load i32, i32* %opcontext, align 4, !dbg !3800
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %8, %struct.wmOperatorType* %9, i8* %10, i32 %11, %struct.IDProperty* %13, i32 %16, i32 0), !dbg !3801
  br label %return, !dbg !3802

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3802
}

declare dso_local void @RNA_float_set(%struct.PointerRNA*, i8*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemStringO(%struct.uiLayout* %layout, i8* %name, i32 %icon, i8* %opname, i8* %propname, i8* %value) #0 !dbg !3803 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3804, metadata !DIExpression()), !dbg !3805
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3808, metadata !DIExpression()), !dbg !3809
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3810, metadata !DIExpression()), !dbg !3811
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !3812, metadata !DIExpression()), !dbg !3813
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !3814, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3816, metadata !DIExpression()), !dbg !3817
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !3818
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !3819
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !3817
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !3820, metadata !DIExpression()), !dbg !3821
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3822
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !3822
  br i1 %cmp, label %if.then, label %if.end, !dbg !3824

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3825
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !3825
  call void @ui_item_disabled(%struct.uiLayout* %2, i8* %3), !dbg !3825
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !3825
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.uiItemStringO, i64 0, i64 0), i8* %4), !dbg !3825
  br label %return, !dbg !3825

if.end:                                           ; preds = %entry
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3827
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %5), !dbg !3828
  %6 = load i8*, i8** %propname.addr, align 8, !dbg !3829
  %7 = load i8*, i8** %value.addr, align 8, !dbg !3830
  call void @RNA_string_set(%struct.PointerRNA* %ptr, i8* %6, i8* %7), !dbg !3831
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3832
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3833
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3834
  %11 = load i32, i32* %icon.addr, align 4, !dbg !3835
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !3836
  %12 = load i8*, i8** %data, align 8, !dbg !3836
  %13 = bitcast i8* %12 to %struct.IDProperty*, !dbg !3837
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3838
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %14, i32 0, i32 1, !dbg !3839
  %15 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3839
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %15, i32 0, i32 3, !dbg !3840
  %16 = load i32, i32* %opcontext, align 4, !dbg !3840
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %8, %struct.wmOperatorType* %9, i8* %10, i32 %11, %struct.IDProperty* %13, i32 %16, i32 0), !dbg !3841
  br label %return, !dbg !3842

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3842
}

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemO(%struct.uiLayout* %layout, i8* %name, i32 %icon, i8* %opname) #0 !dbg !3843 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3846, metadata !DIExpression()), !dbg !3847
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3848, metadata !DIExpression()), !dbg !3849
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3850, metadata !DIExpression()), !dbg !3851
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !3852, metadata !DIExpression()), !dbg !3853
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3854
  %1 = load i8*, i8** %opname.addr, align 8, !dbg !3855
  %2 = load i8*, i8** %name.addr, align 8, !dbg !3856
  %3 = load i32, i32* %icon.addr, align 4, !dbg !3857
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3858
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 1, !dbg !3859
  %5 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3859
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %5, i32 0, i32 3, !dbg !3860
  %6 = load i32, i32* %opcontext, align 4, !dbg !3860
  call void @uiItemFullO(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %0, i8* %1, i8* %2, i32 %3, %struct.IDProperty* null, i32 %6, i32 0), !dbg !3861
  ret void, !dbg !3862
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemFullR(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, i32 %value, i32 %flag, i8* %name, i32 %icon) #0 !dbg !3863 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %type = alloca i32, align 4
  %namestr = alloca [128 x i8], align 16
  %len = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %slider = alloca i32, align 4
  %toggle = alloca i32, align 4
  %expand = alloca i32, align 4
  %icon_only = alloca i32, align 4
  %no_bg = alloca i32, align 4
  %is_array = alloca i8, align 1
  %enum_value = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !3866, metadata !DIExpression()), !dbg !3867
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3868, metadata !DIExpression()), !dbg !3869
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !3870, metadata !DIExpression()), !dbg !3871
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3872, metadata !DIExpression()), !dbg !3873
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3874, metadata !DIExpression()), !dbg !3875
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !3876, metadata !DIExpression()), !dbg !3877
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3878, metadata !DIExpression()), !dbg !3879
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !3880, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !3882, metadata !DIExpression()), !dbg !3883
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3884
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !3885
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !3885
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !3886
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !3886
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !3883
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !3887, metadata !DIExpression()), !dbg !3888
  store %struct.uiBut* null, %struct.uiBut** %but, align 8, !dbg !3888
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3889, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.declare(metadata [128 x i8]* %namestr, metadata !3892, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3894, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata i32* %w, metadata !3896, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.declare(metadata i32* %h, metadata !3898, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.declare(metadata i32* %slider, metadata !3900, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.declare(metadata i32* %toggle, metadata !3902, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.declare(metadata i32* %expand, metadata !3904, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata i32* %icon_only, metadata !3906, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.declare(metadata i32* %no_bg, metadata !3908, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.declare(metadata i8* %is_array, metadata !3910, metadata !DIExpression()), !dbg !3911
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !3912
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3913
  call void @uiBlockSetCurLayout(%struct.uiBlock* %3, %struct.uiLayout* %4), !dbg !3914
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3915
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %5), !dbg !3916
  store i32 %call, i32* %type, align 4, !dbg !3917
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3918
  %call2 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %6), !dbg !3919
  store i8 %call2, i8* %is_array, align 1, !dbg !3920
  %7 = load i8, i8* %is_array, align 1, !dbg !3921
  %conv = zext i8 %7 to i32, !dbg !3922
  %tobool = icmp ne i32 %conv, 0, !dbg !3922
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3922

cond.true:                                        ; preds = %entry
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3923
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3924
  %call3 = call i32 @RNA_property_array_length(%struct.PointerRNA* %8, %struct.PropertyRNA* %9), !dbg !3925
  br label %cond.end, !dbg !3922

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3922

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ 0, %cond.false ], !dbg !3922
  store i32 %cond, i32* %len, align 4, !dbg !3926
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3927
  %tobool4 = icmp ne i8* %10, null, !dbg !3927
  br i1 %tobool4, label %if.end8, label %if.then, !dbg !3929

if.then:                                          ; preds = %cond.end
  %11 = load i32, i32* %flag.addr, align 4, !dbg !3930
  %and = and i32 %11, 16, !dbg !3933
  %cmp = icmp eq i32 %and, 0, !dbg !3934
  br i1 %cmp, label %if.then6, label %if.else, !dbg !3935

if.then6:                                         ; preds = %if.then
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3936
  %call7 = call i8* @RNA_property_ui_name(%struct.PropertyRNA* %12), !dbg !3938
  store i8* %call7, i8** %name.addr, align 8, !dbg !3939
  br label %if.end, !dbg !3940

if.else:                                          ; preds = %if.then
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %name.addr, align 8, !dbg !3941
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end8, !dbg !3943

if.end8:                                          ; preds = %if.end, %cond.end
  %13 = load i32, i32* %icon.addr, align 4, !dbg !3944
  %cmp9 = icmp eq i32 %13, 0, !dbg !3946
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !3947

if.then11:                                        ; preds = %if.end8
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !3948
  %call12 = call i32 @RNA_property_ui_icon(%struct.PropertyRNA* %14), !dbg !3949
  store i32 %call12, i32* %icon.addr, align 4, !dbg !3950
  br label %if.end13, !dbg !3951

if.end13:                                         ; preds = %if.then11, %if.end8
  %15 = load i32, i32* %flag.addr, align 4, !dbg !3952
  %and14 = and i32 %15, 16, !dbg !3954
  %tobool15 = icmp ne i32 %and14, 0, !dbg !3954
  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !3955

if.then16:                                        ; preds = %if.end13
  br label %if.end53, !dbg !3956

if.else17:                                        ; preds = %if.end13
  %16 = load i32, i32* %type, align 4, !dbg !3958
  %cmp18 = icmp eq i32 %16, 1, !dbg !3958
  br i1 %cmp18, label %if.then28, label %lor.lhs.false, !dbg !3958

lor.lhs.false:                                    ; preds = %if.else17
  %17 = load i32, i32* %type, align 4, !dbg !3958
  %cmp20 = icmp eq i32 %17, 2, !dbg !3958
  br i1 %cmp20, label %if.then28, label %lor.lhs.false22, !dbg !3958

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %18 = load i32, i32* %type, align 4, !dbg !3958
  %cmp23 = icmp eq i32 %18, 3, !dbg !3958
  br i1 %cmp23, label %if.then28, label %lor.lhs.false25, !dbg !3958

lor.lhs.false25:                                  ; preds = %lor.lhs.false22
  %19 = load i32, i32* %type, align 4, !dbg !3958
  %cmp26 = icmp eq i32 %19, 5, !dbg !3958
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !3960

if.then28:                                        ; preds = %lor.lhs.false25, %lor.lhs.false22, %lor.lhs.false, %if.else17
  %20 = load i8*, i8** %name.addr, align 8, !dbg !3961
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %namestr, i64 0, i64 0, !dbg !3963
  %call29 = call i8* @ui_item_name_add_colon(i8* %20, i8* %arraydecay), !dbg !3964
  store i8* %call29, i8** %name.addr, align 8, !dbg !3965
  br label %if.end52, !dbg !3966

if.else30:                                        ; preds = %lor.lhs.false25
  %21 = load i32, i32* %type, align 4, !dbg !3967
  %cmp31 = icmp eq i32 %21, 0, !dbg !3969
  br i1 %cmp31, label %land.lhs.true, label %if.else41, !dbg !3970

land.lhs.true:                                    ; preds = %if.else30
  %22 = load i8, i8* %is_array, align 1, !dbg !3971
  %conv33 = zext i8 %22 to i32, !dbg !3971
  %tobool34 = icmp ne i32 %conv33, 0, !dbg !3971
  br i1 %tobool34, label %land.lhs.true35, label %if.else41, !dbg !3972

land.lhs.true35:                                  ; preds = %land.lhs.true
  %23 = load i32, i32* %index.addr, align 4, !dbg !3973
  %cmp36 = icmp eq i32 %23, -1, !dbg !3974
  br i1 %cmp36, label %if.then38, label %if.else41, !dbg !3975

if.then38:                                        ; preds = %land.lhs.true35
  %24 = load i8*, i8** %name.addr, align 8, !dbg !3976
  %arraydecay39 = getelementptr inbounds [128 x i8], [128 x i8]* %namestr, i64 0, i64 0, !dbg !3978
  %call40 = call i8* @ui_item_name_add_colon(i8* %24, i8* %arraydecay39), !dbg !3979
  store i8* %call40, i8** %name.addr, align 8, !dbg !3980
  br label %if.end51, !dbg !3981

if.else41:                                        ; preds = %land.lhs.true35, %land.lhs.true, %if.else30
  %25 = load i32, i32* %type, align 4, !dbg !3982
  %cmp42 = icmp eq i32 %25, 4, !dbg !3984
  br i1 %cmp42, label %land.lhs.true44, label %if.end50, !dbg !3985

land.lhs.true44:                                  ; preds = %if.else41
  %26 = load i32, i32* %index.addr, align 4, !dbg !3986
  %cmp45 = icmp ne i32 %26, -2, !dbg !3987
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !3988

if.then47:                                        ; preds = %land.lhs.true44
  %27 = load i8*, i8** %name.addr, align 8, !dbg !3989
  %arraydecay48 = getelementptr inbounds [128 x i8], [128 x i8]* %namestr, i64 0, i64 0, !dbg !3991
  %call49 = call i8* @ui_item_name_add_colon(i8* %27, i8* %arraydecay48), !dbg !3992
  store i8* %call49, i8** %name.addr, align 8, !dbg !3993
  br label %if.end50, !dbg !3994

if.end50:                                         ; preds = %if.then47, %land.lhs.true44, %if.else41
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then38
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then28
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then16
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !3995
  %root54 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %28, i32 0, i32 1, !dbg !3997
  %29 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root54, align 8, !dbg !3997
  %type55 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %29, i32 0, i32 2, !dbg !3998
  %30 = load i32, i32* %type55, align 8, !dbg !3998
  %cmp56 = icmp eq i32 %30, 2, !dbg !3999
  br i1 %cmp56, label %if.then58, label %if.end101, !dbg !4000

if.then58:                                        ; preds = %if.end53
  %31 = load i32, i32* %type, align 4, !dbg !4001
  %cmp59 = icmp eq i32 %31, 0, !dbg !4004
  br i1 %cmp59, label %land.lhs.true61, label %if.else79, !dbg !4005

land.lhs.true61:                                  ; preds = %if.then58
  %32 = load i8, i8* %is_array, align 1, !dbg !4006
  %conv62 = zext i8 %32 to i32, !dbg !4006
  %cmp63 = icmp eq i32 %conv62, 0, !dbg !4007
  br i1 %cmp63, label %if.then68, label %lor.lhs.false65, !dbg !4008

lor.lhs.false65:                                  ; preds = %land.lhs.true61
  %33 = load i32, i32* %index.addr, align 4, !dbg !4009
  %cmp66 = icmp ne i32 %33, -1, !dbg !4010
  br i1 %cmp66, label %if.then68, label %if.else79, !dbg !4011

if.then68:                                        ; preds = %lor.lhs.false65, %land.lhs.true61
  %34 = load i8, i8* %is_array, align 1, !dbg !4012
  %tobool69 = icmp ne i8 %34, 0, !dbg !4012
  br i1 %tobool69, label %if.then70, label %if.else74, !dbg !4015

if.then70:                                        ; preds = %if.then68
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4016
  %36 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4017
  %37 = load i32, i32* %index.addr, align 4, !dbg !4018
  %call71 = call i32 @RNA_property_boolean_get_index(%struct.PointerRNA* %35, %struct.PropertyRNA* %36, i32 %37), !dbg !4019
  %tobool72 = icmp ne i32 %call71, 0, !dbg !4020
  %38 = zext i1 %tobool72 to i64, !dbg !4020
  %cond73 = select i1 %tobool72, i32 39, i32 38, !dbg !4020
  store i32 %cond73, i32* %icon.addr, align 4, !dbg !4021
  br label %if.end78, !dbg !4022

if.else74:                                        ; preds = %if.then68
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4023
  %40 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4024
  %call75 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %39, %struct.PropertyRNA* %40), !dbg !4025
  %tobool76 = icmp ne i32 %call75, 0, !dbg !4026
  %41 = zext i1 %tobool76 to i64, !dbg !4026
  %cond77 = select i1 %tobool76, i32 39, i32 38, !dbg !4026
  store i32 %cond77, i32* %icon.addr, align 4, !dbg !4027
  br label %if.end78

if.end78:                                         ; preds = %if.else74, %if.then70
  br label %if.end100, !dbg !4028

if.else79:                                        ; preds = %lor.lhs.false65, %if.then58
  %42 = load i32, i32* %type, align 4, !dbg !4029
  %cmp80 = icmp eq i32 %42, 4, !dbg !4031
  br i1 %cmp80, label %land.lhs.true82, label %if.end99, !dbg !4032

land.lhs.true82:                                  ; preds = %if.else79
  %43 = load i32, i32* %index.addr, align 4, !dbg !4033
  %cmp83 = icmp eq i32 %43, -2, !dbg !4034
  br i1 %cmp83, label %if.then85, label %if.end99, !dbg !4035

if.then85:                                        ; preds = %land.lhs.true82
  call void @llvm.dbg.declare(metadata i32* %enum_value, metadata !4036, metadata !DIExpression()), !dbg !4038
  %44 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4039
  %45 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4040
  %call86 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %44, %struct.PropertyRNA* %45), !dbg !4041
  store i32 %call86, i32* %enum_value, align 4, !dbg !4038
  %46 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4042
  %call87 = call i32 @RNA_property_flag(%struct.PropertyRNA* %46), !dbg !4044
  %and88 = and i32 %call87, 2097152, !dbg !4045
  %tobool89 = icmp ne i32 %and88, 0, !dbg !4045
  br i1 %tobool89, label %if.then90, label %if.else94, !dbg !4046

if.then90:                                        ; preds = %if.then85
  %47 = load i32, i32* %enum_value, align 4, !dbg !4047
  %48 = load i32, i32* %value.addr, align 4, !dbg !4049
  %and91 = and i32 %47, %48, !dbg !4050
  %tobool92 = icmp ne i32 %and91, 0, !dbg !4051
  %49 = zext i1 %tobool92 to i64, !dbg !4051
  %cond93 = select i1 %tobool92, i32 39, i32 38, !dbg !4051
  store i32 %cond93, i32* %icon.addr, align 4, !dbg !4052
  br label %if.end98, !dbg !4053

if.else94:                                        ; preds = %if.then85
  %50 = load i32, i32* %enum_value, align 4, !dbg !4054
  %51 = load i32, i32* %value.addr, align 4, !dbg !4056
  %cmp95 = icmp eq i32 %50, %51, !dbg !4057
  %52 = zext i1 %cmp95 to i64, !dbg !4058
  %cond97 = select i1 %cmp95, i32 39, i32 38, !dbg !4058
  store i32 %cond97, i32* %icon.addr, align 4, !dbg !4059
  br label %if.end98

if.end98:                                         ; preds = %if.else94, %if.then90
  br label %if.end99, !dbg !4060

if.end99:                                         ; preds = %if.end98, %land.lhs.true82, %if.else79
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end78
  br label %if.end101, !dbg !4061

if.end101:                                        ; preds = %if.end100, %if.end53
  %53 = load i32, i32* %flag.addr, align 4, !dbg !4062
  %and102 = and i32 %53, 4, !dbg !4063
  store i32 %and102, i32* %slider, align 4, !dbg !4064
  %54 = load i32, i32* %flag.addr, align 4, !dbg !4065
  %and103 = and i32 %54, 8, !dbg !4066
  store i32 %and103, i32* %toggle, align 4, !dbg !4067
  %55 = load i32, i32* %flag.addr, align 4, !dbg !4068
  %and104 = and i32 %55, 2, !dbg !4069
  store i32 %and104, i32* %expand, align 4, !dbg !4070
  %56 = load i32, i32* %flag.addr, align 4, !dbg !4071
  %and105 = and i32 %56, 16, !dbg !4072
  store i32 %and105, i32* %icon_only, align 4, !dbg !4073
  %57 = load i32, i32* %flag.addr, align 4, !dbg !4074
  %and106 = and i32 %57, 128, !dbg !4075
  store i32 %and106, i32* %no_bg, align 4, !dbg !4076
  %58 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4077
  %59 = load i8*, i8** %name.addr, align 8, !dbg !4078
  %60 = load i32, i32* %icon.addr, align 4, !dbg !4079
  %61 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4080
  %62 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4081
  %63 = load i32, i32* %index.addr, align 4, !dbg !4082
  %64 = load i32, i32* %icon_only, align 4, !dbg !4083
  call void @ui_item_rna_size(%struct.uiLayout* %58, i8* %59, i32 %60, %struct.PointerRNA* %61, %struct.PropertyRNA* %62, i32 %63, i32 %64, i32* %w, i32* %h), !dbg !4084
  %65 = load i32, i32* %no_bg, align 4, !dbg !4085
  %tobool107 = icmp ne i32 %65, 0, !dbg !4085
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !4087

if.then108:                                       ; preds = %if.end101
  %66 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4088
  call void @uiBlockSetEmboss(%struct.uiBlock* %66, i8 zeroext 1), !dbg !4089
  br label %if.end109, !dbg !4089

if.end109:                                        ; preds = %if.then108, %if.end101
  %67 = load i32, i32* %index.addr, align 4, !dbg !4090
  %cmp110 = icmp eq i32 %67, -1, !dbg !4092
  br i1 %cmp110, label %land.lhs.true112, label %if.else116, !dbg !4093

land.lhs.true112:                                 ; preds = %if.end109
  %68 = load i8, i8* %is_array, align 1, !dbg !4094
  %conv113 = zext i8 %68 to i32, !dbg !4094
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !4094
  br i1 %tobool114, label %if.then115, label %if.else116, !dbg !4095

if.then115:                                       ; preds = %land.lhs.true112
  %69 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4096
  %70 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4097
  %71 = load i8*, i8** %name.addr, align 8, !dbg !4098
  %72 = load i32, i32* %icon.addr, align 4, !dbg !4099
  %73 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4100
  %74 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4101
  %75 = load i32, i32* %len, align 4, !dbg !4102
  %76 = load i32, i32* %w, align 4, !dbg !4103
  %77 = load i32, i32* %h, align 4, !dbg !4104
  %78 = load i32, i32* %expand, align 4, !dbg !4105
  %79 = load i32, i32* %slider, align 4, !dbg !4106
  %80 = load i32, i32* %toggle, align 4, !dbg !4107
  %81 = load i32, i32* %icon_only, align 4, !dbg !4108
  call void @ui_item_array(%struct.uiLayout* %69, %struct.uiBlock* %70, i8* %71, i32 %72, %struct.PointerRNA* %73, %struct.PropertyRNA* %74, i32 %75, i32 0, i32 0, i32 %76, i32 %77, i32 %78, i32 %79, i32 %80, i32 %81), !dbg !4109
  br label %if.end197, !dbg !4109

if.else116:                                       ; preds = %land.lhs.true112, %if.end109
  %82 = load i32, i32* %type, align 4, !dbg !4110
  %cmp117 = icmp eq i32 %82, 4, !dbg !4112
  br i1 %cmp117, label %land.lhs.true119, label %if.else148, !dbg !4113

land.lhs.true119:                                 ; preds = %if.else116
  %83 = load i32, i32* %index.addr, align 4, !dbg !4114
  %cmp120 = icmp eq i32 %83, -2, !dbg !4115
  br i1 %cmp120, label %if.then122, label %if.else148, !dbg !4116

if.then122:                                       ; preds = %land.lhs.true119
  %84 = load i32, i32* %icon.addr, align 4, !dbg !4117
  %tobool123 = icmp ne i32 %84, 0, !dbg !4117
  br i1 %tobool123, label %land.lhs.true124, label %if.else134, !dbg !4120

land.lhs.true124:                                 ; preds = %if.then122
  %85 = load i8*, i8** %name.addr, align 8, !dbg !4121
  %arrayidx = getelementptr inbounds i8, i8* %85, i64 0, !dbg !4121
  %86 = load i8, i8* %arrayidx, align 1, !dbg !4121
  %conv125 = zext i8 %86 to i32, !dbg !4121
  %tobool126 = icmp ne i32 %conv125, 0, !dbg !4121
  br i1 %tobool126, label %land.lhs.true127, label %if.else134, !dbg !4122

land.lhs.true127:                                 ; preds = %land.lhs.true124
  %87 = load i32, i32* %icon_only, align 4, !dbg !4123
  %tobool128 = icmp ne i32 %87, 0, !dbg !4123
  br i1 %tobool128, label %if.else134, label %if.then129, !dbg !4124

if.then129:                                       ; preds = %land.lhs.true127
  %88 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4125
  %89 = load i32, i32* %icon.addr, align 4, !dbg !4126
  %90 = load i8*, i8** %name.addr, align 8, !dbg !4127
  %91 = load i32, i32* %w, align 4, !dbg !4128
  %conv130 = trunc i32 %91 to i16, !dbg !4128
  %92 = load i32, i32* %h, align 4, !dbg !4129
  %conv131 = trunc i32 %92 to i16, !dbg !4129
  %93 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4130
  %94 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4131
  %95 = load i32, i32* %value.addr, align 4, !dbg !4132
  %conv132 = sitofp i32 %95 to float, !dbg !4132
  %call133 = call %struct.uiBut* @uiDefIconTextButR_prop(%struct.uiBlock* %88, i32 1024, i32 0, i32 %89, i8* %90, i32 0, i32 0, i16 signext %conv130, i16 signext %conv131, %struct.PointerRNA* %93, %struct.PropertyRNA* %94, i32 -1, float 0.000000e+00, float %conv132, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !4133
  br label %if.end147, !dbg !4133

if.else134:                                       ; preds = %land.lhs.true127, %land.lhs.true124, %if.then122
  %96 = load i32, i32* %icon.addr, align 4, !dbg !4134
  %tobool135 = icmp ne i32 %96, 0, !dbg !4134
  br i1 %tobool135, label %if.then136, label %if.else141, !dbg !4136

if.then136:                                       ; preds = %if.else134
  %97 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4137
  %98 = load i32, i32* %icon.addr, align 4, !dbg !4138
  %99 = load i32, i32* %w, align 4, !dbg !4139
  %conv137 = trunc i32 %99 to i16, !dbg !4139
  %100 = load i32, i32* %h, align 4, !dbg !4140
  %conv138 = trunc i32 %100 to i16, !dbg !4140
  %101 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4141
  %102 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4142
  %103 = load i32, i32* %value.addr, align 4, !dbg !4143
  %conv139 = sitofp i32 %103 to float, !dbg !4143
  %call140 = call %struct.uiBut* @uiDefIconButR_prop(%struct.uiBlock* %97, i32 1024, i32 0, i32 %98, i32 0, i32 0, i16 signext %conv137, i16 signext %conv138, %struct.PointerRNA* %101, %struct.PropertyRNA* %102, i32 -1, float 0.000000e+00, float %conv139, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !4144
  br label %if.end146, !dbg !4144

if.else141:                                       ; preds = %if.else134
  %104 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4145
  %105 = load i8*, i8** %name.addr, align 8, !dbg !4146
  %106 = load i32, i32* %w, align 4, !dbg !4147
  %conv142 = trunc i32 %106 to i16, !dbg !4147
  %107 = load i32, i32* %h, align 4, !dbg !4148
  %conv143 = trunc i32 %107 to i16, !dbg !4148
  %108 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4149
  %109 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4150
  %110 = load i32, i32* %value.addr, align 4, !dbg !4151
  %conv144 = sitofp i32 %110 to float, !dbg !4151
  %call145 = call %struct.uiBut* @uiDefButR_prop(%struct.uiBlock* %104, i32 1024, i32 0, i8* %105, i32 0, i32 0, i16 signext %conv142, i16 signext %conv143, %struct.PointerRNA* %108, %struct.PropertyRNA* %109, i32 -1, float 0.000000e+00, float %conv144, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !4152
  br label %if.end146

if.end146:                                        ; preds = %if.else141, %if.then136
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then129
  br label %if.end196, !dbg !4153

if.else148:                                       ; preds = %land.lhs.true119, %if.else116
  %111 = load i32, i32* %type, align 4, !dbg !4154
  %cmp149 = icmp eq i32 %111, 4, !dbg !4156
  br i1 %cmp149, label %land.lhs.true151, label %if.else158, !dbg !4157

land.lhs.true151:                                 ; preds = %if.else148
  %112 = load i32, i32* %expand, align 4, !dbg !4158
  %tobool152 = icmp ne i32 %112, 0, !dbg !4158
  br i1 %tobool152, label %if.then157, label %lor.lhs.false153, !dbg !4159

lor.lhs.false153:                                 ; preds = %land.lhs.true151
  %113 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4160
  %call154 = call i32 @RNA_property_flag(%struct.PropertyRNA* %113), !dbg !4161
  %and155 = and i32 %call154, 2097152, !dbg !4162
  %tobool156 = icmp ne i32 %and155, 0, !dbg !4162
  br i1 %tobool156, label %if.then157, label %if.else158, !dbg !4163

if.then157:                                       ; preds = %lor.lhs.false153, %land.lhs.true151
  %114 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4164
  %115 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4165
  %116 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4166
  %117 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4167
  %118 = load i8*, i8** %name.addr, align 8, !dbg !4168
  %119 = load i32, i32* %h, align 4, !dbg !4169
  %120 = load i32, i32* %icon_only, align 4, !dbg !4170
  call void @ui_item_enum_expand(%struct.uiLayout* %114, %struct.uiBlock* %115, %struct.PointerRNA* %116, %struct.PropertyRNA* %117, i8* %118, i32 %119, i32 %120), !dbg !4171
  br label %if.end195, !dbg !4171

if.else158:                                       ; preds = %lor.lhs.false153, %if.else148
  %121 = load i32, i32* %type, align 4, !dbg !4172
  %cmp159 = icmp eq i32 %121, 4, !dbg !4174
  br i1 %cmp159, label %if.then167, label %lor.lhs.false161, !dbg !4175

lor.lhs.false161:                                 ; preds = %if.else158
  %122 = load i32, i32* %type, align 4, !dbg !4176
  %cmp162 = icmp eq i32 %122, 3, !dbg !4177
  br i1 %cmp162, label %if.then167, label %lor.lhs.false164, !dbg !4178

lor.lhs.false164:                                 ; preds = %lor.lhs.false161
  %123 = load i32, i32* %type, align 4, !dbg !4179
  %cmp165 = icmp eq i32 %123, 5, !dbg !4180
  br i1 %cmp165, label %if.then167, label %if.else172, !dbg !4181

if.then167:                                       ; preds = %lor.lhs.false164, %lor.lhs.false161, %if.else158
  %124 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4182
  %125 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4184
  %126 = load i8*, i8** %name.addr, align 8, !dbg !4185
  %127 = load i32, i32* %icon.addr, align 4, !dbg !4186
  %128 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4187
  %129 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4188
  %130 = load i32, i32* %index.addr, align 4, !dbg !4189
  %131 = load i32, i32* %w, align 4, !dbg !4190
  %132 = load i32, i32* %h, align 4, !dbg !4191
  %133 = load i32, i32* %flag.addr, align 4, !dbg !4192
  %call168 = call %struct.uiBut* @ui_item_with_label(%struct.uiLayout* %124, %struct.uiBlock* %125, i8* %126, i32 %127, %struct.PointerRNA* %128, %struct.PropertyRNA* %129, i32 %130, i32 0, i32 0, i32 %131, i32 %132, i32 %133), !dbg !4193
  store %struct.uiBut* %call168, %struct.uiBut** %but, align 8, !dbg !4194
  %134 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4195
  %135 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4196
  %136 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4197
  call void @ui_but_add_search(%struct.uiBut* %134, %struct.PointerRNA* %135, %struct.PropertyRNA* %136, %struct.PointerRNA* null, %struct.PropertyRNA* null), !dbg !4198
  %137 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4199
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %137, i32 0, i32 13, !dbg !4201
  %138 = load i8, i8* %redalert, align 1, !dbg !4201
  %tobool169 = icmp ne i8 %138, 0, !dbg !4199
  br i1 %tobool169, label %if.then170, label %if.end171, !dbg !4202

if.then170:                                       ; preds = %if.then167
  %139 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4203
  call void @uiButSetFlag(%struct.uiBut* %139, i32 65536), !dbg !4204
  br label %if.end171, !dbg !4204

if.end171:                                        ; preds = %if.then170, %if.then167
  br label %if.end194, !dbg !4205

if.else172:                                       ; preds = %lor.lhs.false164
  %140 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4206
  %141 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4208
  %142 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4209
  %143 = load i32, i32* %index.addr, align 4, !dbg !4210
  %144 = load i8*, i8** %name.addr, align 8, !dbg !4211
  %145 = load i32, i32* %icon.addr, align 4, !dbg !4212
  %146 = load i32, i32* %w, align 4, !dbg !4213
  %147 = load i32, i32* %h, align 4, !dbg !4214
  %call173 = call %struct.uiBut* @uiDefAutoButR(%struct.uiBlock* %140, %struct.PointerRNA* %141, %struct.PropertyRNA* %142, i32 %143, i8* %144, i32 %145, i32 0, i32 0, i32 %146, i32 %147), !dbg !4215
  store %struct.uiBut* %call173, %struct.uiBut** %but, align 8, !dbg !4216
  %148 = load i32, i32* %slider, align 4, !dbg !4217
  %tobool174 = icmp ne i32 %148, 0, !dbg !4217
  br i1 %tobool174, label %land.lhs.true175, label %if.end181, !dbg !4219

land.lhs.true175:                                 ; preds = %if.else172
  %149 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4220
  %type176 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %149, i32 0, i32 4, !dbg !4221
  %150 = load i32, i32* %type176, align 8, !dbg !4221
  %cmp177 = icmp eq i32 %150, 2560, !dbg !4222
  br i1 %cmp177, label %if.then179, label %if.end181, !dbg !4223

if.then179:                                       ; preds = %land.lhs.true175
  %151 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4224
  %type180 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %151, i32 0, i32 4, !dbg !4225
  store i32 7168, i32* %type180, align 8, !dbg !4226
  br label %if.end181, !dbg !4224

if.end181:                                        ; preds = %if.then179, %land.lhs.true175, %if.else172
  %152 = load i32, i32* %toggle, align 4, !dbg !4227
  %tobool182 = icmp ne i32 %152, 0, !dbg !4227
  br i1 %tobool182, label %land.lhs.true183, label %if.end189, !dbg !4229

land.lhs.true183:                                 ; preds = %if.end181
  %153 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4230
  %type184 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %153, i32 0, i32 4, !dbg !4231
  %154 = load i32, i32* %type184, align 8, !dbg !4231
  %cmp185 = icmp eq i32 %154, 19456, !dbg !4232
  br i1 %cmp185, label %if.then187, label %if.end189, !dbg !4233

if.then187:                                       ; preds = %land.lhs.true183
  %155 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4234
  %type188 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %155, i32 0, i32 4, !dbg !4235
  store i32 1536, i32* %type188, align 8, !dbg !4236
  br label %if.end189, !dbg !4234

if.end189:                                        ; preds = %if.then187, %land.lhs.true183, %if.end181
  %156 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4237
  %redalert190 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %156, i32 0, i32 13, !dbg !4239
  %157 = load i8, i8* %redalert190, align 1, !dbg !4239
  %tobool191 = icmp ne i8 %157, 0, !dbg !4237
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !4240

if.then192:                                       ; preds = %if.end189
  %158 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4241
  call void @uiButSetFlag(%struct.uiBut* %158, i32 65536), !dbg !4242
  br label %if.end193, !dbg !4242

if.end193:                                        ; preds = %if.then192, %if.end189
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.end171
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.then157
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.end147
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.then115
  %159 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4243
  %tobool198 = icmp ne %struct.uiBut* %159, null, !dbg !4243
  br i1 %tobool198, label %land.lhs.true199, label %if.end212, !dbg !4245

land.lhs.true199:                                 ; preds = %if.end197
  %160 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4246
  %flag200 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %160, i32 0, i32 27, !dbg !4247
  %161 = load i32, i32* %flag200, align 8, !dbg !4247
  %and201 = and i32 %161, 524288, !dbg !4248
  %tobool202 = icmp ne i32 %and201, 0, !dbg !4248
  br i1 %tobool202, label %land.lhs.true203, label %if.end212, !dbg !4249

land.lhs.true203:                                 ; preds = %land.lhs.true199
  %162 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4250
  %type204 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %162, i32 0, i32 4, !dbg !4251
  %163 = load i32, i32* %type204, align 8, !dbg !4251
  %cmp205 = icmp eq i32 %163, 3072, !dbg !4252
  br i1 %cmp205, label %land.lhs.true207, label %if.end212, !dbg !4253

land.lhs.true207:                                 ; preds = %land.lhs.true203
  %164 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4254
  %dt = getelementptr inbounds %struct.uiBut, %struct.uiBut* %164, i32 0, i32 46, !dbg !4255
  %165 = load i8, i8* %dt, align 1, !dbg !4255
  %conv208 = zext i8 %165 to i32, !dbg !4254
  %and209 = and i32 %conv208, 1, !dbg !4256
  %tobool210 = icmp ne i32 %and209, 0, !dbg !4256
  br i1 %tobool210, label %if.then211, label %if.end212, !dbg !4257

if.then211:                                       ; preds = %land.lhs.true207
  %166 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4258
  call void @uiButSetFlag(%struct.uiBut* %166, i32 16777216), !dbg !4260
  br label %if.end212, !dbg !4261

if.end212:                                        ; preds = %if.then211, %land.lhs.true207, %land.lhs.true203, %land.lhs.true199, %if.end197
  %167 = load i32, i32* %no_bg, align 4, !dbg !4262
  %tobool213 = icmp ne i32 %167, 0, !dbg !4262
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !4264

if.then214:                                       ; preds = %if.end212
  %168 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4265
  call void @uiBlockSetEmboss(%struct.uiBlock* %168, i8 zeroext 0), !dbg !4266
  br label %if.end215, !dbg !4266

if.end215:                                        ; preds = %if.then214, %if.end212
  %169 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4267
  %tobool216 = icmp ne %struct.uiBut* %169, null, !dbg !4267
  br i1 %tobool216, label %land.lhs.true217, label %if.end220, !dbg !4269

land.lhs.true217:                                 ; preds = %if.end215
  %170 = load i32, i32* %icon_only, align 4, !dbg !4270
  %tobool218 = icmp ne i32 %170, 0, !dbg !4270
  br i1 %tobool218, label %if.then219, label %if.end220, !dbg !4271

if.then219:                                       ; preds = %land.lhs.true217
  br label %if.end220, !dbg !4272

if.end220:                                        ; preds = %if.then219, %land.lhs.true217, %if.end215
  ret void, !dbg !4274
}

declare dso_local zeroext i8 @RNA_property_array_check(%struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_array_length(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i8* @RNA_property_ui_name(%struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_ui_icon(%struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @ui_item_name_add_colon(i8* %name, i8* %namestr) #0 !dbg !4275 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %namestr.addr = alloca i8*, align 8
  %len = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4278, metadata !DIExpression()), !dbg !4279
  store i8* %namestr, i8** %namestr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %namestr.addr, metadata !4280, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4282, metadata !DIExpression()), !dbg !4283
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4284
  %call = call i64 @strlen(i8* %0) #6, !dbg !4285
  %conv = trunc i64 %call to i32, !dbg !4285
  store i32 %conv, i32* %len, align 4, !dbg !4283
  %1 = load i32, i32* %len, align 4, !dbg !4286
  %cmp = icmp ne i32 %1, 0, !dbg !4288
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4289

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %len, align 4, !dbg !4290
  %add = add nsw i32 %2, 1, !dbg !4291
  %cmp2 = icmp slt i32 %add, 128, !dbg !4292
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4293

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %namestr.addr, align 8, !dbg !4294
  %4 = load i8*, i8** %name.addr, align 8, !dbg !4296
  %call4 = call i8* @BLI_strncpy(i8* %3, i8* %4, i64 128), !dbg !4297
  %5 = load i8*, i8** %namestr.addr, align 8, !dbg !4298
  %6 = load i32, i32* %len, align 4, !dbg !4299
  %idxprom = sext i32 %6 to i64, !dbg !4298
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom, !dbg !4298
  store i8 58, i8* %arrayidx, align 1, !dbg !4300
  %7 = load i8*, i8** %namestr.addr, align 8, !dbg !4301
  %8 = load i32, i32* %len, align 4, !dbg !4302
  %add5 = add nsw i32 %8, 1, !dbg !4303
  %idxprom6 = sext i32 %add5 to i64, !dbg !4301
  %arrayidx7 = getelementptr inbounds i8, i8* %7, i64 %idxprom6, !dbg !4301
  store i8 0, i8* %arrayidx7, align 1, !dbg !4304
  %9 = load i8*, i8** %namestr.addr, align 8, !dbg !4305
  store i8* %9, i8** %retval, align 8, !dbg !4306
  br label %return, !dbg !4306

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load i8*, i8** %name.addr, align 8, !dbg !4307
  store i8* %10, i8** %retval, align 8, !dbg !4308
  br label %return, !dbg !4308

return:                                           ; preds = %if.end, %if.then
  %11 = load i8*, i8** %retval, align 8, !dbg !4309
  ret i8* %11, !dbg !4309
}

declare dso_local i32 @RNA_property_boolean_get_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local i32 @RNA_property_boolean_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_enum_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_flag(%struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_rna_size(%struct.uiLayout* %layout, i8* %name, i32 %icon, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, i32 %icon_only, i32* %r_w, i32* %r_h) #0 !dbg !4310 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %icon_only.addr = alloca i32, align 4
  %r_w.addr = alloca i32*, align 8
  %r_h.addr = alloca i32*, align 8
  %type = alloca i32, align 4
  %subtype = alloca i32, align 4
  %len = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %item = alloca %struct.EnumPropertyItem*, align 8
  %item_array = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !4314, metadata !DIExpression()), !dbg !4315
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4316, metadata !DIExpression()), !dbg !4317
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !4318, metadata !DIExpression()), !dbg !4319
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4320, metadata !DIExpression()), !dbg !4321
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4322, metadata !DIExpression()), !dbg !4323
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4324, metadata !DIExpression()), !dbg !4325
  store i32 %icon_only, i32* %icon_only.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon_only.addr, metadata !4326, metadata !DIExpression()), !dbg !4327
  store i32* %r_w, i32** %r_w.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_w.addr, metadata !4328, metadata !DIExpression()), !dbg !4329
  store i32* %r_h, i32** %r_h.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_h.addr, metadata !4330, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4332, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.declare(metadata i32* %subtype, metadata !4334, metadata !DIExpression()), !dbg !4336
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4337, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4339, metadata !DIExpression()), !dbg !4340
  store i32 0, i32* %w, align 4, !dbg !4340
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4341, metadata !DIExpression()), !dbg !4342
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4343
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %0), !dbg !4344
  store i32 %call, i32* %type, align 4, !dbg !4345
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4346
  %call1 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %1), !dbg !4347
  store i32 %call1, i32* %subtype, align 4, !dbg !4348
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4349
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4350
  %call2 = call i32 @RNA_property_array_length(%struct.PointerRNA* %2, %struct.PropertyRNA* %3), !dbg !4351
  store i32 %call2, i32* %len, align 4, !dbg !4352
  %4 = load i8*, i8** %name.addr, align 8, !dbg !4353
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !4353
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4353
  %tobool = icmp ne i8 %5, 0, !dbg !4353
  br i1 %tobool, label %if.end26, label %land.lhs.true, !dbg !4355

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %icon_only.addr, align 4, !dbg !4356
  %tobool3 = icmp ne i32 %6, 0, !dbg !4356
  br i1 %tobool3, label %if.end26, label %if.then, !dbg !4357

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %type, align 4, !dbg !4358
  %cmp = icmp eq i32 %7, 3, !dbg !4358
  br i1 %cmp, label %if.then5, label %lor.lhs.false, !dbg !4358

lor.lhs.false:                                    ; preds = %if.then
  %8 = load i32, i32* %type, align 4, !dbg !4358
  %cmp4 = icmp eq i32 %8, 5, !dbg !4358
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !4361

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8** %name.addr, align 8, !dbg !4362
  br label %if.end25, !dbg !4364

if.else:                                          ; preds = %lor.lhs.false
  %9 = load i32, i32* %type, align 4, !dbg !4365
  %cmp6 = icmp eq i32 %9, 0, !dbg !4367
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !4368

if.then7:                                         ; preds = %if.else
  store i32 17, i32* %icon.addr, align 4, !dbg !4369
  br label %if.end24, !dbg !4371

if.else8:                                         ; preds = %if.else
  %10 = load i32, i32* %type, align 4, !dbg !4372
  %cmp9 = icmp eq i32 %10, 4, !dbg !4374
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !4375

if.then10:                                        ; preds = %if.else8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !4376, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item_array, metadata !4379, metadata !DIExpression()), !dbg !4380
  call void @llvm.dbg.declare(metadata i8* %free, metadata !4381, metadata !DIExpression()), !dbg !4382
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4383
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %11, i32 0, i32 1, !dbg !4384
  %12 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !4384
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %12, i32 0, i32 10, !dbg !4385
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4385
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 48, !dbg !4386
  %14 = load i8*, i8** %evil_C, align 8, !dbg !4386
  %15 = bitcast i8* %14 to %struct.bContext*, !dbg !4383
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4387
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4388
  call void @RNA_property_enum_items_gettexted(%struct.bContext* %15, %struct.PointerRNA* %16, %struct.PropertyRNA* %17, %struct.EnumPropertyItem** %item_array, i32* null, i8* %free), !dbg !4389
  %18 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !4390
  store %struct.EnumPropertyItem* %18, %struct.EnumPropertyItem** %item, align 8, !dbg !4392
  br label %for.cond, !dbg !4393

for.cond:                                         ; preds = %for.inc, %if.then10
  %19 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !4394
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %19, i32 0, i32 1, !dbg !4396
  %20 = load i8*, i8** %identifier, align 8, !dbg !4396
  %tobool11 = icmp ne i8* %20, null, !dbg !4397
  br i1 %tobool11, label %for.body, label %for.end, !dbg !4397

for.body:                                         ; preds = %for.cond
  %21 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !4398
  %identifier12 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %21, i32 0, i32 1, !dbg !4401
  %22 = load i8*, i8** %identifier12, align 8, !dbg !4401
  %arrayidx13 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !4398
  %23 = load i8, i8* %arrayidx13, align 1, !dbg !4398
  %tobool14 = icmp ne i8 %23, 0, !dbg !4398
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !4402

if.then15:                                        ; preds = %for.body
  %24 = load i32, i32* %w, align 4, !dbg !4403
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4405
  %26 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !4406
  %name16 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %26, i32 0, i32 3, !dbg !4407
  %27 = load i8*, i8** %name16, align 8, !dbg !4407
  %28 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !4408
  %icon17 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %28, i32 0, i32 2, !dbg !4409
  %29 = load i32, i32* %icon17, align 8, !dbg !4409
  %call18 = call i32 @ui_text_icon_width(%struct.uiLayout* %25, i8* %27, i32 %29, i8 zeroext 0), !dbg !4410
  %call19 = call i32 @max_ii(i32 %24, i32 %call18), !dbg !4411
  store i32 %call19, i32* %w, align 4, !dbg !4412
  br label %if.end, !dbg !4413

if.end:                                           ; preds = %if.then15, %for.body
  br label %for.inc, !dbg !4414

for.inc:                                          ; preds = %if.end
  %30 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !4415
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %30, i32 1, !dbg !4415
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item, align 8, !dbg !4415
  br label %for.cond, !dbg !4416, !llvm.loop !4417

for.end:                                          ; preds = %for.cond
  %31 = load i8, i8* %free, align 1, !dbg !4419
  %tobool20 = icmp ne i8 %31, 0, !dbg !4419
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !4421

if.then21:                                        ; preds = %for.end
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4422
  %33 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !4424
  %34 = bitcast %struct.EnumPropertyItem* %33 to i8*, !dbg !4424
  call void %32(i8* %34), !dbg !4422
  br label %if.end22, !dbg !4425

if.end22:                                         ; preds = %if.then21, %for.end
  br label %if.end23, !dbg !4426

if.end23:                                         ; preds = %if.end22, %if.else8
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then7
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then5
  br label %if.end26, !dbg !4427

if.end26:                                         ; preds = %if.end25, %land.lhs.true, %entry
  %35 = load i32, i32* %w, align 4, !dbg !4428
  %tobool27 = icmp ne i32 %35, 0, !dbg !4428
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4430

if.then28:                                        ; preds = %if.end26
  %36 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4431
  %37 = load i8*, i8** %name.addr, align 8, !dbg !4432
  %38 = load i32, i32* %icon.addr, align 4, !dbg !4433
  %call29 = call i32 @ui_text_icon_width(%struct.uiLayout* %36, i8* %37, i32 %38, i8 zeroext 0), !dbg !4434
  store i32 %call29, i32* %w, align 4, !dbg !4435
  br label %if.end30, !dbg !4436

if.end30:                                         ; preds = %if.then28, %if.end26
  %39 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4437
  %conv = sext i16 %39 to i32, !dbg !4437
  store i32 %conv, i32* %h, align 4, !dbg !4438
  %40 = load i32, i32* %index.addr, align 4, !dbg !4439
  %cmp31 = icmp eq i32 %40, -1, !dbg !4441
  br i1 %cmp31, label %land.lhs.true33, label %if.else69, !dbg !4442

land.lhs.true33:                                  ; preds = %if.end30
  %41 = load i32, i32* %len, align 4, !dbg !4443
  %cmp34 = icmp sgt i32 %41, 0, !dbg !4444
  br i1 %cmp34, label %if.then36, label %if.else69, !dbg !4445

if.then36:                                        ; preds = %land.lhs.true33
  %42 = load i8*, i8** %name.addr, align 8, !dbg !4446
  %arrayidx37 = getelementptr inbounds i8, i8* %42, i64 0, !dbg !4446
  %43 = load i8, i8* %arrayidx37, align 1, !dbg !4446
  %tobool38 = icmp ne i8 %43, 0, !dbg !4446
  br i1 %tobool38, label %if.end43, label %land.lhs.true39, !dbg !4449

land.lhs.true39:                                  ; preds = %if.then36
  %44 = load i32, i32* %icon.addr, align 4, !dbg !4450
  %cmp40 = icmp eq i32 %44, 0, !dbg !4451
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !4452

if.then42:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %h, align 4, !dbg !4453
  br label %if.end43, !dbg !4454

if.end43:                                         ; preds = %if.then42, %land.lhs.true39, %if.then36
  %45 = load i32, i32* %subtype, align 4, !dbg !4455
  %cmp44 = icmp eq i32 %45, 40, !dbg !4455
  br i1 %cmp44, label %if.then49, label %lor.lhs.false46, !dbg !4455

lor.lhs.false46:                                  ; preds = %if.end43
  %46 = load i32, i32* %subtype, align 4, !dbg !4455
  %cmp47 = icmp eq i32 %46, 41, !dbg !4455
  br i1 %cmp47, label %if.then49, label %if.else51, !dbg !4457

if.then49:                                        ; preds = %lor.lhs.false46, %if.end43
  %47 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4458
  %conv50 = sext i16 %47 to i32, !dbg !4458
  %mul = mul nsw i32 2, %conv50, !dbg !4459
  %48 = load i32, i32* %h, align 4, !dbg !4460
  %add = add nsw i32 %48, %mul, !dbg !4460
  store i32 %add, i32* %h, align 4, !dbg !4460
  br label %if.end68, !dbg !4461

if.else51:                                        ; preds = %lor.lhs.false46
  %49 = load i32, i32* %subtype, align 4, !dbg !4462
  %cmp52 = icmp eq i32 %49, 25, !dbg !4464
  br i1 %cmp52, label %if.then54, label %if.else63, !dbg !4465

if.then54:                                        ; preds = %if.else51
  %50 = load i32, i32* %len, align 4, !dbg !4466
  %conv55 = sitofp i32 %50 to float, !dbg !4466
  %call56 = call float @sqrtf(float %conv55) #7, !dbg !4467
  %51 = call float @llvm.ceil.f32(float %call56), !dbg !4468
  %52 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4469
  %conv57 = sext i16 %52 to i32, !dbg !4469
  %conv58 = sitofp i32 %conv57 to float, !dbg !4469
  %mul59 = fmul float %51, %conv58, !dbg !4470
  %53 = load i32, i32* %h, align 4, !dbg !4471
  %conv60 = sitofp i32 %53 to float, !dbg !4471
  %add61 = fadd float %conv60, %mul59, !dbg !4471
  %conv62 = fptosi float %add61 to i32, !dbg !4471
  store i32 %conv62, i32* %h, align 4, !dbg !4471
  br label %if.end67, !dbg !4472

if.else63:                                        ; preds = %if.else51
  %54 = load i32, i32* %len, align 4, !dbg !4473
  %55 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4474
  %conv64 = sext i16 %55 to i32, !dbg !4474
  %mul65 = mul nsw i32 %54, %conv64, !dbg !4475
  %56 = load i32, i32* %h, align 4, !dbg !4476
  %add66 = add nsw i32 %56, %mul65, !dbg !4476
  store i32 %add66, i32* %h, align 4, !dbg !4476
  br label %if.end67

if.end67:                                         ; preds = %if.else63, %if.then54
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then49
  br label %if.end104, !dbg !4477

if.else69:                                        ; preds = %land.lhs.true33, %if.end30
  %57 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4478
  %call70 = call i32 @ui_layout_vary_direction(%struct.uiLayout* %57), !dbg !4480
  %cmp71 = icmp eq i32 %call70, 1, !dbg !4481
  br i1 %cmp71, label %if.then73, label %if.end103, !dbg !4482

if.then73:                                        ; preds = %if.else69
  %58 = load i32, i32* %type, align 4, !dbg !4483
  %cmp74 = icmp eq i32 %58, 0, !dbg !4486
  br i1 %cmp74, label %land.lhs.true76, label %if.else83, !dbg !4487

land.lhs.true76:                                  ; preds = %if.then73
  %59 = load i8*, i8** %name.addr, align 8, !dbg !4488
  %arrayidx77 = getelementptr inbounds i8, i8* %59, i64 0, !dbg !4488
  %60 = load i8, i8* %arrayidx77, align 1, !dbg !4488
  %conv78 = zext i8 %60 to i32, !dbg !4488
  %tobool79 = icmp ne i32 %conv78, 0, !dbg !4488
  br i1 %tobool79, label %if.then80, label %if.else83, !dbg !4489

if.then80:                                        ; preds = %land.lhs.true76
  %61 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4490
  %conv81 = sext i16 %61 to i32, !dbg !4490
  %div = sdiv i32 %conv81, 5, !dbg !4491
  %62 = load i32, i32* %w, align 4, !dbg !4492
  %add82 = add nsw i32 %62, %div, !dbg !4492
  store i32 %add82, i32* %w, align 4, !dbg !4492
  br label %if.end102, !dbg !4493

if.else83:                                        ; preds = %land.lhs.true76, %if.then73
  %63 = load i32, i32* %type, align 4, !dbg !4494
  %cmp84 = icmp eq i32 %63, 4, !dbg !4496
  br i1 %cmp84, label %if.then86, label %if.else90, !dbg !4497

if.then86:                                        ; preds = %if.else83
  %64 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4498
  %conv87 = sext i16 %64 to i32, !dbg !4498
  %div88 = sdiv i32 %conv87, 4, !dbg !4499
  %65 = load i32, i32* %w, align 4, !dbg !4500
  %add89 = add nsw i32 %65, %div88, !dbg !4500
  store i32 %add89, i32* %w, align 4, !dbg !4500
  br label %if.end101, !dbg !4501

if.else90:                                        ; preds = %if.else83
  %66 = load i32, i32* %type, align 4, !dbg !4502
  %cmp91 = icmp eq i32 %66, 2, !dbg !4504
  br i1 %cmp91, label %if.then96, label %lor.lhs.false93, !dbg !4505

lor.lhs.false93:                                  ; preds = %if.else90
  %67 = load i32, i32* %type, align 4, !dbg !4506
  %cmp94 = icmp eq i32 %67, 1, !dbg !4507
  br i1 %cmp94, label %if.then96, label %if.end100, !dbg !4508

if.then96:                                        ; preds = %lor.lhs.false93, %if.else90
  %68 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4509
  %conv97 = sext i16 %68 to i32, !dbg !4509
  %mul98 = mul nsw i32 %conv97, 3, !dbg !4510
  %69 = load i32, i32* %w, align 4, !dbg !4511
  %add99 = add nsw i32 %69, %mul98, !dbg !4511
  store i32 %add99, i32* %w, align 4, !dbg !4511
  br label %if.end100, !dbg !4512

if.end100:                                        ; preds = %if.then96, %lor.lhs.false93
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then86
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then80
  br label %if.end103, !dbg !4513

if.end103:                                        ; preds = %if.end102, %if.else69
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end68
  %70 = load i32, i32* %w, align 4, !dbg !4514
  %71 = load i32*, i32** %r_w.addr, align 8, !dbg !4515
  store i32 %70, i32* %71, align 4, !dbg !4516
  %72 = load i32, i32* %h, align 4, !dbg !4517
  %73 = load i32*, i32** %r_h.addr, align 8, !dbg !4518
  store i32 %72, i32* %73, align 4, !dbg !4519
  ret void, !dbg !4520
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_array(%struct.uiLayout* %layout, %struct.uiBlock* %block, i8* %name, i32 %icon, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %len, i32 %x, i32 %y, i32 %w, i32 %UNUSED_h, i32 %expand, i32 %slider, i32 %toggle, i32 %icon_only) #0 !dbg !4521 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %len.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %UNUSED_h.addr = alloca i32, align 4
  %expand.addr = alloca i32, align 4
  %slider.addr = alloca i32, align 4
  %toggle.addr = alloca i32, align 4
  %icon_only.addr = alloca i32, align 4
  %style = alloca %struct.uiStyle*, align 8
  %but = alloca %struct.uiBut*, align 8
  %type = alloca i32, align 4
  %subtype = alloca i32, align 4
  %sub = alloca %struct.uiLayout*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %butw = alloca i32, align 4
  %buth = alloca i32, align 4
  %unit = alloca i32, align 4
  %cols = alloca i32, align 4
  %colbuts = alloca i32, align 4
  %layer_used = alloca i32, align 4
  %layer_active = alloca i32, align 4
  %arm = alloca %struct.bArmature*, align 8
  %layer_num = alloca i32, align 4
  %layer_flag = alloca i32, align 4
  %layer_num66 = alloca i32, align 4
  %layer_flag71 = alloca i32, align 4
  %totdim = alloca i32, align 4
  %dim_size = alloca [3 x i32], align 4
  %row = alloca i32, align 4
  %col = alloca i32, align 4
  %boolarr = alloca i32*, align 8
  %str = alloca [3 x i8], align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !4526, metadata !DIExpression()), !dbg !4527
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4528, metadata !DIExpression()), !dbg !4529
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !4530, metadata !DIExpression()), !dbg !4531
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4532, metadata !DIExpression()), !dbg !4533
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4534, metadata !DIExpression()), !dbg !4535
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !4536, metadata !DIExpression()), !dbg !4537
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4538, metadata !DIExpression()), !dbg !4539
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !4540, metadata !DIExpression()), !dbg !4541
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !4542, metadata !DIExpression()), !dbg !4543
  store i32 %UNUSED_h, i32* %UNUSED_h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_h.addr, metadata !4544, metadata !DIExpression()), !dbg !4545
  store i32 %expand, i32* %expand.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %expand.addr, metadata !4546, metadata !DIExpression()), !dbg !4547
  store i32 %slider, i32* %slider.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slider.addr, metadata !4548, metadata !DIExpression()), !dbg !4549
  store i32 %toggle, i32* %toggle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %toggle.addr, metadata !4550, metadata !DIExpression()), !dbg !4551
  store i32 %icon_only, i32* %icon_only.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon_only.addr, metadata !4552, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !4554, metadata !DIExpression()), !dbg !4555
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4556
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !4557
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !4557
  %style1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 9, !dbg !4558
  %2 = load %struct.uiStyle*, %struct.uiStyle** %style1, align 8, !dbg !4558
  store %struct.uiStyle* %2, %struct.uiStyle** %style, align 8, !dbg !4555
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !4559, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4561, metadata !DIExpression()), !dbg !4562
  call void @llvm.dbg.declare(metadata i32* %subtype, metadata !4563, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !4565, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4567, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4569, metadata !DIExpression()), !dbg !4570
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4571
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %3), !dbg !4572
  store i32 %call, i32* %type, align 4, !dbg !4573
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4574
  %call2 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %4), !dbg !4575
  store i32 %call2, i32* %subtype, align 4, !dbg !4576
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4577
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4578
  %call3 = call %struct.uiLayout* @ui_item_local_sublayout(%struct.uiLayout* %5, %struct.uiLayout* %6, i32 1), !dbg !4579
  store %struct.uiLayout* %call3, %struct.uiLayout** %sub, align 8, !dbg !4580
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4581
  %8 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !4582
  call void @uiBlockSetCurLayout(%struct.uiBlock* %7, %struct.uiLayout* %8), !dbg !4583
  %9 = load i8*, i8** %name.addr, align 8, !dbg !4584
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0, !dbg !4584
  %10 = load i8, i8* %arrayidx, align 1, !dbg !4584
  %tobool = icmp ne i8 %10, 0, !dbg !4584
  br i1 %tobool, label %if.then, label %if.end, !dbg !4586

if.then:                                          ; preds = %entry
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4587
  %12 = load i8*, i8** %name.addr, align 8, !dbg !4588
  %13 = load i32, i32* %w.addr, align 4, !dbg !4589
  %conv = trunc i32 %13 to i16, !dbg !4589
  %14 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4590
  %call4 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %11, i32 5120, i32 0, i8* %12, i32 0, i32 0, i16 signext %conv, i16 signext %14, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !4591
  br label %if.end, !dbg !4591

if.end:                                           ; preds = %if.then, %entry
  %15 = load i32, i32* %type, align 4, !dbg !4592
  %cmp = icmp eq i32 %15, 0, !dbg !4594
  br i1 %cmp, label %land.lhs.true, label %if.else101, !dbg !4595

land.lhs.true:                                    ; preds = %if.end
  %16 = load i32, i32* %subtype, align 4, !dbg !4596
  %cmp6 = icmp eq i32 %16, 40, !dbg !4596
  br i1 %cmp6, label %if.then10, label %lor.lhs.false, !dbg !4596

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load i32, i32* %subtype, align 4, !dbg !4596
  %cmp8 = icmp eq i32 %17, 41, !dbg !4596
  br i1 %cmp8, label %if.then10, label %if.else101, !dbg !4597

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %butw, metadata !4598, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.declare(metadata i32* %buth, metadata !4601, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.declare(metadata i32* %unit, metadata !4603, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !4605, metadata !DIExpression()), !dbg !4606
  %18 = load i32, i32* %len.addr, align 4, !dbg !4607
  %cmp11 = icmp sge i32 %18, 20, !dbg !4608
  %19 = zext i1 %cmp11 to i64, !dbg !4609
  %cond = select i1 %cmp11, i32 2, i32 1, !dbg !4609
  store i32 %cond, i32* %cols, align 4, !dbg !4606
  call void @llvm.dbg.declare(metadata i32* %colbuts, metadata !4610, metadata !DIExpression()), !dbg !4612
  %20 = load i32, i32* %len.addr, align 4, !dbg !4613
  %21 = load i32, i32* %cols, align 4, !dbg !4614
  %mul = mul nsw i32 2, %21, !dbg !4615
  %div = sdiv i32 %20, %mul, !dbg !4616
  store i32 %div, i32* %colbuts, align 4, !dbg !4612
  call void @llvm.dbg.declare(metadata i32* %layer_used, metadata !4617, metadata !DIExpression()), !dbg !4618
  store i32 0, i32* %layer_used, align 4, !dbg !4618
  call void @llvm.dbg.declare(metadata i32* %layer_active, metadata !4619, metadata !DIExpression()), !dbg !4620
  store i32 0, i32* %layer_active, align 4, !dbg !4620
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4621
  %23 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4622
  %call13 = call %struct.uiLayout* @uiLayoutAbsolute(%struct.uiLayout* %23, i32 0), !dbg !4623
  call void @uiBlockSetCurLayout(%struct.uiBlock* %22, %struct.uiLayout* %call13), !dbg !4624
  %24 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4625
  %conv14 = sext i16 %24 to i32, !dbg !4625
  %conv15 = sitofp i32 %conv14 to double, !dbg !4625
  %mul16 = fmul double %conv15, 7.500000e-01, !dbg !4626
  %conv17 = fptosi double %mul16 to i32, !dbg !4625
  store i32 %conv17, i32* %unit, align 4, !dbg !4627
  %25 = load i32, i32* %unit, align 4, !dbg !4628
  store i32 %25, i32* %butw, align 4, !dbg !4629
  %26 = load i32, i32* %unit, align 4, !dbg !4630
  store i32 %26, i32* %buth, align 4, !dbg !4631
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4632
  %type18 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %27, i32 0, i32 1, !dbg !4634
  %28 = load %struct.StructRNA*, %struct.StructRNA** %type18, align 8, !dbg !4634
  %cmp19 = icmp eq %struct.StructRNA* %28, @RNA_Armature, !dbg !4635
  br i1 %cmp19, label %if.then21, label %if.end36, !dbg !4636

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !4637, metadata !DIExpression()), !dbg !4639
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4640
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %29, i32 0, i32 2, !dbg !4641
  %30 = load i8*, i8** %data, align 8, !dbg !4641
  %31 = bitcast i8* %30 to %struct.bArmature*, !dbg !4642
  store %struct.bArmature* %31, %struct.bArmature** %arm, align 8, !dbg !4639
  %32 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4643
  %layer_used22 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %32, i32 0, i32 14, !dbg !4644
  %33 = load i32, i32* %layer_used22, align 4, !dbg !4644
  store i32 %33, i32* %layer_used, align 4, !dbg !4645
  %34 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4646
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %34, i32 0, i32 4, !dbg !4648
  %35 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !4648
  %tobool23 = icmp ne %struct.ListBase* %35, null, !dbg !4646
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !4649

if.then24:                                        ; preds = %if.then21
  %36 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4650
  %act_edbone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %36, i32 0, i32 6, !dbg !4653
  %37 = load %struct.EditBone*, %struct.EditBone** %act_edbone, align 8, !dbg !4653
  %tobool25 = icmp ne %struct.EditBone* %37, null, !dbg !4650
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !4654

if.then26:                                        ; preds = %if.then24
  %38 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4655
  %act_edbone27 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %38, i32 0, i32 6, !dbg !4657
  %39 = load %struct.EditBone*, %struct.EditBone** %act_edbone27, align 8, !dbg !4657
  %layer = getelementptr inbounds %struct.EditBone, %struct.EditBone* %39, i32 0, i32 10, !dbg !4658
  %40 = load i32, i32* %layer, align 8, !dbg !4658
  %41 = load i32, i32* %layer_active, align 4, !dbg !4659
  %or = or i32 %41, %40, !dbg !4659
  store i32 %or, i32* %layer_active, align 4, !dbg !4659
  br label %if.end28, !dbg !4660

if.end28:                                         ; preds = %if.then26, %if.then24
  br label %if.end35, !dbg !4661

if.else:                                          ; preds = %if.then21
  %42 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4662
  %act_bone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %42, i32 0, i32 5, !dbg !4665
  %43 = load %struct.Bone*, %struct.Bone** %act_bone, align 8, !dbg !4665
  %tobool29 = icmp ne %struct.Bone* %43, null, !dbg !4662
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !4666

if.then30:                                        ; preds = %if.else
  %44 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !4667
  %act_bone31 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %44, i32 0, i32 5, !dbg !4669
  %45 = load %struct.Bone*, %struct.Bone** %act_bone31, align 8, !dbg !4669
  %layer32 = getelementptr inbounds %struct.Bone, %struct.Bone* %45, i32 0, i32 25, !dbg !4670
  %46 = load i32, i32* %layer32, align 8, !dbg !4670
  %47 = load i32, i32* %layer_active, align 4, !dbg !4671
  %or33 = or i32 %47, %46, !dbg !4671
  store i32 %or33, i32* %layer_active, align 4, !dbg !4671
  br label %if.end34, !dbg !4672

if.end34:                                         ; preds = %if.then30, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end28
  br label %if.end36, !dbg !4673

if.end36:                                         ; preds = %if.end35, %if.then10
  store i32 0, i32* %b, align 4, !dbg !4674
  br label %for.cond, !dbg !4676

for.cond:                                         ; preds = %for.inc98, %if.end36
  %48 = load i32, i32* %b, align 4, !dbg !4677
  %49 = load i32, i32* %cols, align 4, !dbg !4679
  %cmp37 = icmp ult i32 %48, %49, !dbg !4680
  br i1 %cmp37, label %for.body, label %for.end100, !dbg !4681

for.body:                                         ; preds = %for.cond
  %50 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4682
  call void @uiBlockBeginAlign(%struct.uiBlock* %50), !dbg !4684
  store i32 0, i32* %a, align 4, !dbg !4685
  br label %for.cond39, !dbg !4687

for.cond39:                                       ; preds = %for.inc, %for.body
  %51 = load i32, i32* %a, align 4, !dbg !4688
  %52 = load i32, i32* %colbuts, align 4, !dbg !4690
  %cmp40 = icmp ult i32 %51, %52, !dbg !4691
  br i1 %cmp40, label %for.body42, label %for.end, !dbg !4692

for.body42:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata i32* %layer_num, metadata !4693, metadata !DIExpression()), !dbg !4696
  %53 = load i32, i32* %a, align 4, !dbg !4697
  %54 = load i32, i32* %b, align 4, !dbg !4698
  %55 = load i32, i32* %colbuts, align 4, !dbg !4699
  %mul43 = mul i32 %54, %55, !dbg !4700
  %add = add i32 %53, %mul43, !dbg !4701
  store i32 %add, i32* %layer_num, align 4, !dbg !4696
  call void @llvm.dbg.declare(metadata i32* %layer_flag, metadata !4702, metadata !DIExpression()), !dbg !4703
  %56 = load i32, i32* %layer_num, align 4, !dbg !4704
  %shl = shl i32 1, %56, !dbg !4705
  store i32 %shl, i32* %layer_flag, align 4, !dbg !4703
  %57 = load i32, i32* %layer_used, align 4, !dbg !4706
  %58 = load i32, i32* %layer_flag, align 4, !dbg !4708
  %and = and i32 %57, %58, !dbg !4709
  %tobool44 = icmp ne i32 %and, 0, !dbg !4709
  br i1 %tobool44, label %if.then45, label %if.else51, !dbg !4710

if.then45:                                        ; preds = %for.body42
  %59 = load i32, i32* %layer_active, align 4, !dbg !4711
  %60 = load i32, i32* %layer_flag, align 4, !dbg !4714
  %and46 = and i32 %59, %60, !dbg !4715
  %tobool47 = icmp ne i32 %and46, 0, !dbg !4715
  br i1 %tobool47, label %if.then48, label %if.else49, !dbg !4716

if.then48:                                        ; preds = %if.then45
  store i32 644, i32* %icon.addr, align 4, !dbg !4717
  br label %if.end50, !dbg !4718

if.else49:                                        ; preds = %if.then45
  store i32 643, i32* %icon.addr, align 4, !dbg !4719
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.then48
  br label %if.end52, !dbg !4720

if.else51:                                        ; preds = %for.body42
  store i32 77, i32* %icon.addr, align 4, !dbg !4721
  br label %if.end52

if.end52:                                         ; preds = %if.else51, %if.end50
  %61 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4723
  %62 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4724
  %63 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4725
  %64 = load i32, i32* %layer_num, align 4, !dbg !4726
  %65 = load i32, i32* %icon.addr, align 4, !dbg !4727
  %66 = load i32, i32* %x.addr, align 4, !dbg !4728
  %67 = load i32, i32* %butw, align 4, !dbg !4729
  %68 = load i32, i32* %a, align 4, !dbg !4730
  %mul53 = mul i32 %67, %68, !dbg !4731
  %add54 = add i32 %66, %mul53, !dbg !4732
  %69 = load i32, i32* %y.addr, align 4, !dbg !4733
  %70 = load i32, i32* %buth, align 4, !dbg !4734
  %add55 = add nsw i32 %69, %70, !dbg !4735
  %71 = load i32, i32* %butw, align 4, !dbg !4736
  %72 = load i32, i32* %buth, align 4, !dbg !4737
  %call56 = call %struct.uiBut* @uiDefAutoButR(%struct.uiBlock* %61, %struct.PointerRNA* %62, %struct.PropertyRNA* %63, i32 %64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 %65, i32 %add54, i32 %add55, i32 %71, i32 %72), !dbg !4738
  store %struct.uiBut* %call56, %struct.uiBut** %but, align 8, !dbg !4739
  %73 = load i32, i32* %subtype, align 4, !dbg !4740
  %cmp57 = icmp eq i32 %73, 41, !dbg !4742
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !4743

if.then59:                                        ; preds = %if.end52
  %74 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4744
  %75 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4745
  %76 = bitcast %struct.uiBut* %75 to i8*, !dbg !4745
  %77 = load i32, i32* %layer_num, align 4, !dbg !4746
  %conv60 = sext i32 %77 to i64, !dbg !4746
  %78 = inttoptr i64 %conv60 to i8*, !dbg !4746
  call void @uiButSetFunc(%struct.uiBut* %74, void (%struct.bContext*, i8*, i8*)* @ui_layer_but_cb, i8* %76, i8* %78), !dbg !4747
  br label %if.end61, !dbg !4747

if.end61:                                         ; preds = %if.then59, %if.end52
  br label %for.inc, !dbg !4748

for.inc:                                          ; preds = %if.end61
  %79 = load i32, i32* %a, align 4, !dbg !4749
  %inc = add i32 %79, 1, !dbg !4749
  store i32 %inc, i32* %a, align 4, !dbg !4749
  br label %for.cond39, !dbg !4750, !llvm.loop !4751

for.end:                                          ; preds = %for.cond39
  store i32 0, i32* %a, align 4, !dbg !4753
  br label %for.cond62, !dbg !4755

for.cond62:                                       ; preds = %for.inc91, %for.end
  %80 = load i32, i32* %a, align 4, !dbg !4756
  %81 = load i32, i32* %colbuts, align 4, !dbg !4758
  %cmp63 = icmp ult i32 %80, %81, !dbg !4759
  br i1 %cmp63, label %for.body65, label %for.end93, !dbg !4760

for.body65:                                       ; preds = %for.cond62
  call void @llvm.dbg.declare(metadata i32* %layer_num66, metadata !4761, metadata !DIExpression()), !dbg !4763
  %82 = load i32, i32* %a, align 4, !dbg !4764
  %83 = load i32, i32* %len.addr, align 4, !dbg !4765
  %div67 = sdiv i32 %83, 2, !dbg !4766
  %add68 = add i32 %82, %div67, !dbg !4767
  %84 = load i32, i32* %b, align 4, !dbg !4768
  %85 = load i32, i32* %colbuts, align 4, !dbg !4769
  %mul69 = mul i32 %84, %85, !dbg !4770
  %add70 = add i32 %add68, %mul69, !dbg !4771
  store i32 %add70, i32* %layer_num66, align 4, !dbg !4763
  call void @llvm.dbg.declare(metadata i32* %layer_flag71, metadata !4772, metadata !DIExpression()), !dbg !4773
  %86 = load i32, i32* %layer_num66, align 4, !dbg !4774
  %shl72 = shl i32 1, %86, !dbg !4775
  store i32 %shl72, i32* %layer_flag71, align 4, !dbg !4773
  %87 = load i32, i32* %layer_used, align 4, !dbg !4776
  %88 = load i32, i32* %layer_flag71, align 4, !dbg !4778
  %and73 = and i32 %87, %88, !dbg !4779
  %tobool74 = icmp ne i32 %and73, 0, !dbg !4779
  br i1 %tobool74, label %if.then75, label %if.else81, !dbg !4780

if.then75:                                        ; preds = %for.body65
  %89 = load i32, i32* %layer_active, align 4, !dbg !4781
  %90 = load i32, i32* %layer_flag71, align 4, !dbg !4784
  %and76 = and i32 %89, %90, !dbg !4785
  %tobool77 = icmp ne i32 %and76, 0, !dbg !4785
  br i1 %tobool77, label %if.then78, label %if.else79, !dbg !4786

if.then78:                                        ; preds = %if.then75
  store i32 644, i32* %icon.addr, align 4, !dbg !4787
  br label %if.end80, !dbg !4788

if.else79:                                        ; preds = %if.then75
  store i32 643, i32* %icon.addr, align 4, !dbg !4789
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.then78
  br label %if.end82, !dbg !4790

if.else81:                                        ; preds = %for.body65
  store i32 77, i32* %icon.addr, align 4, !dbg !4791
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.end80
  %91 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4793
  %92 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4794
  %93 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4795
  %94 = load i32, i32* %layer_num66, align 4, !dbg !4796
  %95 = load i32, i32* %icon.addr, align 4, !dbg !4797
  %96 = load i32, i32* %x.addr, align 4, !dbg !4798
  %97 = load i32, i32* %butw, align 4, !dbg !4799
  %98 = load i32, i32* %a, align 4, !dbg !4800
  %mul83 = mul i32 %97, %98, !dbg !4801
  %add84 = add i32 %96, %mul83, !dbg !4802
  %99 = load i32, i32* %y.addr, align 4, !dbg !4803
  %100 = load i32, i32* %butw, align 4, !dbg !4804
  %101 = load i32, i32* %buth, align 4, !dbg !4805
  %call85 = call %struct.uiBut* @uiDefAutoButR(%struct.uiBlock* %91, %struct.PointerRNA* %92, %struct.PropertyRNA* %93, i32 %94, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 %95, i32 %add84, i32 %99, i32 %100, i32 %101), !dbg !4806
  store %struct.uiBut* %call85, %struct.uiBut** %but, align 8, !dbg !4807
  %102 = load i32, i32* %subtype, align 4, !dbg !4808
  %cmp86 = icmp eq i32 %102, 41, !dbg !4810
  br i1 %cmp86, label %if.then88, label %if.end90, !dbg !4811

if.then88:                                        ; preds = %if.end82
  %103 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4812
  %104 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4813
  %105 = bitcast %struct.uiBut* %104 to i8*, !dbg !4813
  %106 = load i32, i32* %layer_num66, align 4, !dbg !4814
  %conv89 = sext i32 %106 to i64, !dbg !4814
  %107 = inttoptr i64 %conv89 to i8*, !dbg !4814
  call void @uiButSetFunc(%struct.uiBut* %103, void (%struct.bContext*, i8*, i8*)* @ui_layer_but_cb, i8* %105, i8* %107), !dbg !4815
  br label %if.end90, !dbg !4815

if.end90:                                         ; preds = %if.then88, %if.end82
  br label %for.inc91, !dbg !4816

for.inc91:                                        ; preds = %if.end90
  %108 = load i32, i32* %a, align 4, !dbg !4817
  %inc92 = add i32 %108, 1, !dbg !4817
  store i32 %inc92, i32* %a, align 4, !dbg !4817
  br label %for.cond62, !dbg !4818, !llvm.loop !4819

for.end93:                                        ; preds = %for.cond62
  %109 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4821
  call void @uiBlockEndAlign(%struct.uiBlock* %109), !dbg !4822
  %110 = load i32, i32* %colbuts, align 4, !dbg !4823
  %111 = load i32, i32* %butw, align 4, !dbg !4824
  %mul94 = mul i32 %110, %111, !dbg !4825
  %112 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !4826
  %buttonspacex = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %112, i32 0, i32 13, !dbg !4827
  %113 = load i16, i16* %buttonspacex, align 2, !dbg !4827
  %conv95 = sext i16 %113 to i32, !dbg !4826
  %add96 = add i32 %mul94, %conv95, !dbg !4828
  %114 = load i32, i32* %x.addr, align 4, !dbg !4829
  %add97 = add i32 %114, %add96, !dbg !4829
  store i32 %add97, i32* %x.addr, align 4, !dbg !4829
  br label %for.inc98, !dbg !4830

for.inc98:                                        ; preds = %for.end93
  %115 = load i32, i32* %b, align 4, !dbg !4831
  %inc99 = add i32 %115, 1, !dbg !4831
  store i32 %inc99, i32* %b, align 4, !dbg !4831
  br label %for.cond, !dbg !4832, !llvm.loop !4833

for.end100:                                       ; preds = %for.cond
  br label %if.end245, !dbg !4835

if.else101:                                       ; preds = %lor.lhs.false, %if.end
  %116 = load i32, i32* %subtype, align 4, !dbg !4836
  %cmp102 = icmp eq i32 %116, 25, !dbg !4838
  br i1 %cmp102, label %if.then104, label %if.else142, !dbg !4839

if.then104:                                       ; preds = %if.else101
  call void @llvm.dbg.declare(metadata i32* %totdim, metadata !4840, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.declare(metadata [3 x i32]* %dim_size, metadata !4843, metadata !DIExpression()), !dbg !4845
  call void @llvm.dbg.declare(metadata i32* %row, metadata !4846, metadata !DIExpression()), !dbg !4847
  call void @llvm.dbg.declare(metadata i32* %col, metadata !4848, metadata !DIExpression()), !dbg !4849
  %117 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4850
  %118 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4851
  %call105 = call %struct.uiLayout* @uiLayoutAbsolute(%struct.uiLayout* %118, i32 1), !dbg !4852
  call void @uiBlockSetCurLayout(%struct.uiBlock* %117, %struct.uiLayout* %call105), !dbg !4853
  %119 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4854
  %120 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4855
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %dim_size, i64 0, i64 0, !dbg !4856
  %call106 = call i32 @RNA_property_array_dimension(%struct.PointerRNA* %119, %struct.PropertyRNA* %120, i32* %arraydecay), !dbg !4857
  store i32 %call106, i32* %totdim, align 4, !dbg !4858
  %121 = load i32, i32* %totdim, align 4, !dbg !4859
  %cmp107 = icmp ne i32 %121, 2, !dbg !4861
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !4862

if.then109:                                       ; preds = %if.then104
  br label %return, !dbg !4863

if.end110:                                        ; preds = %if.then104
  %arrayidx111 = getelementptr inbounds [3 x i32], [3 x i32]* %dim_size, i64 0, i64 0, !dbg !4864
  %122 = load i32, i32* %arrayidx111, align 4, !dbg !4864
  %123 = load i32, i32* %w.addr, align 4, !dbg !4865
  %div112 = sdiv i32 %123, %122, !dbg !4865
  store i32 %div112, i32* %w.addr, align 4, !dbg !4865
  store i32 0, i32* %a, align 4, !dbg !4866
  br label %for.cond113, !dbg !4868

for.cond113:                                      ; preds = %for.inc139, %if.end110
  %124 = load i32, i32* %a, align 4, !dbg !4869
  %125 = load i32, i32* %len.addr, align 4, !dbg !4871
  %cmp114 = icmp ult i32 %124, %125, !dbg !4872
  br i1 %cmp114, label %for.body116, label %for.end141, !dbg !4873

for.body116:                                      ; preds = %for.cond113
  %126 = load i32, i32* %a, align 4, !dbg !4874
  %arrayidx117 = getelementptr inbounds [3 x i32], [3 x i32]* %dim_size, i64 0, i64 0, !dbg !4876
  %127 = load i32, i32* %arrayidx117, align 4, !dbg !4876
  %rem = urem i32 %126, %127, !dbg !4877
  store i32 %rem, i32* %col, align 4, !dbg !4878
  %128 = load i32, i32* %a, align 4, !dbg !4879
  %arrayidx118 = getelementptr inbounds [3 x i32], [3 x i32]* %dim_size, i64 0, i64 0, !dbg !4880
  %129 = load i32, i32* %arrayidx118, align 4, !dbg !4880
  %div119 = udiv i32 %128, %129, !dbg !4881
  store i32 %div119, i32* %row, align 4, !dbg !4882
  %130 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4883
  %131 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4884
  %132 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4885
  %133 = load i32, i32* %a, align 4, !dbg !4886
  %134 = load i32, i32* %x.addr, align 4, !dbg !4887
  %135 = load i32, i32* %w.addr, align 4, !dbg !4888
  %136 = load i32, i32* %col, align 4, !dbg !4889
  %mul120 = mul nsw i32 %135, %136, !dbg !4890
  %add121 = add nsw i32 %134, %mul120, !dbg !4891
  %137 = load i32, i32* %y.addr, align 4, !dbg !4892
  %arrayidx122 = getelementptr inbounds [3 x i32], [3 x i32]* %dim_size, i64 0, i64 1, !dbg !4893
  %138 = load i32, i32* %arrayidx122, align 4, !dbg !4893
  %139 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4894
  %conv123 = sext i16 %139 to i32, !dbg !4894
  %mul124 = mul nsw i32 %138, %conv123, !dbg !4895
  %add125 = add nsw i32 %137, %mul124, !dbg !4896
  %140 = load i32, i32* %row, align 4, !dbg !4897
  %141 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4898
  %conv126 = sext i16 %141 to i32, !dbg !4898
  %mul127 = mul nsw i32 %140, %conv126, !dbg !4899
  %sub128 = sub nsw i32 %add125, %mul127, !dbg !4900
  %142 = load i32, i32* %w.addr, align 4, !dbg !4901
  %143 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4902
  %conv129 = sext i16 %143 to i32, !dbg !4902
  %call130 = call %struct.uiBut* @uiDefAutoButR(%struct.uiBlock* %130, %struct.PointerRNA* %131, %struct.PropertyRNA* %132, i32 %133, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 0, i32 %add121, i32 %sub128, i32 %142, i32 %conv129), !dbg !4903
  store %struct.uiBut* %call130, %struct.uiBut** %but, align 8, !dbg !4904
  %144 = load i32, i32* %slider.addr, align 4, !dbg !4905
  %tobool131 = icmp ne i32 %144, 0, !dbg !4905
  br i1 %tobool131, label %land.lhs.true132, label %if.end138, !dbg !4907

land.lhs.true132:                                 ; preds = %for.body116
  %145 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4908
  %type133 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %145, i32 0, i32 4, !dbg !4909
  %146 = load i32, i32* %type133, align 8, !dbg !4909
  %cmp134 = icmp eq i32 %146, 2560, !dbg !4910
  br i1 %cmp134, label %if.then136, label %if.end138, !dbg !4911

if.then136:                                       ; preds = %land.lhs.true132
  %147 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !4912
  %type137 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %147, i32 0, i32 4, !dbg !4913
  store i32 7168, i32* %type137, align 8, !dbg !4914
  br label %if.end138, !dbg !4912

if.end138:                                        ; preds = %if.then136, %land.lhs.true132, %for.body116
  br label %for.inc139, !dbg !4915

for.inc139:                                       ; preds = %if.end138
  %148 = load i32, i32* %a, align 4, !dbg !4916
  %inc140 = add i32 %148, 1, !dbg !4916
  store i32 %inc140, i32* %a, align 4, !dbg !4916
  br label %for.cond113, !dbg !4917, !llvm.loop !4918

for.end141:                                       ; preds = %for.cond113
  br label %if.end244, !dbg !4920

if.else142:                                       ; preds = %if.else101
  %149 = load i32, i32* %subtype, align 4, !dbg !4921
  %cmp143 = icmp eq i32 %149, 22, !dbg !4923
  br i1 %cmp143, label %land.lhs.true145, label %if.else155, !dbg !4924

land.lhs.true145:                                 ; preds = %if.else142
  %150 = load i32, i32* %expand.addr, align 4, !dbg !4925
  %tobool146 = icmp ne i32 %150, 0, !dbg !4925
  br i1 %tobool146, label %if.else155, label %if.then147, !dbg !4926

if.then147:                                       ; preds = %land.lhs.true145
  %151 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4927
  %152 = load i8*, i8** %name.addr, align 8, !dbg !4929
  %153 = load i32, i32* %x.addr, align 4, !dbg !4930
  %154 = load i32, i32* %y.addr, align 4, !dbg !4931
  %155 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4932
  %conv148 = sext i16 %155 to i32, !dbg !4932
  %mul149 = mul nsw i32 %conv148, 3, !dbg !4933
  %conv150 = trunc i32 %mul149 to i16, !dbg !4932
  %156 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4934
  %conv151 = sext i16 %156 to i32, !dbg !4934
  %mul152 = mul nsw i32 %conv151, 3, !dbg !4935
  %conv153 = trunc i32 %mul152 to i16, !dbg !4934
  %157 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4936
  %158 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4937
  %call154 = call %struct.uiBut* @uiDefButR_prop(%struct.uiBlock* %151, i32 15872, i32 0, i8* %152, i32 %153, i32 %154, i16 signext %conv150, i16 signext %conv153, %struct.PointerRNA* %157, %struct.PropertyRNA* %158, i32 0, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !4938
  br label %if.end243, !dbg !4939

if.else155:                                       ; preds = %land.lhs.true145, %if.else142
  %159 = load i32, i32* %subtype, align 4, !dbg !4940
  %cmp156 = icmp eq i32 %159, 20, !dbg !4940
  br i1 %cmp156, label %land.lhs.true161, label %lor.lhs.false158, !dbg !4940

lor.lhs.false158:                                 ; preds = %if.else155
  %160 = load i32, i32* %subtype, align 4, !dbg !4940
  %cmp159 = icmp eq i32 %160, 30, !dbg !4940
  br i1 %cmp159, label %land.lhs.true161, label %if.else166, !dbg !4943

land.lhs.true161:                                 ; preds = %lor.lhs.false158, %if.else155
  %161 = load i32, i32* %expand.addr, align 4, !dbg !4944
  %tobool162 = icmp ne i32 %161, 0, !dbg !4944
  br i1 %tobool162, label %if.else166, label %if.then163, !dbg !4945

if.then163:                                       ; preds = %land.lhs.true161
  %162 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4946
  %163 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4948
  %164 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4949
  %165 = load i32, i32* %w.addr, align 4, !dbg !4950
  %166 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4951
  %conv164 = sext i16 %166 to i32, !dbg !4951
  %call165 = call %struct.uiBut* @uiDefAutoButR(%struct.uiBlock* %162, %struct.PointerRNA* %163, %struct.PropertyRNA* %164, i32 -1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 0, i32 0, i32 0, i32 %165, i32 %conv164), !dbg !4952
  br label %if.end242, !dbg !4953

if.else166:                                       ; preds = %land.lhs.true161, %lor.lhs.false158
  call void @llvm.dbg.declare(metadata i32** %boolarr, metadata !4954, metadata !DIExpression()), !dbg !4956
  store i32* null, i32** %boolarr, align 8, !dbg !4956
  call void @llvm.dbg.declare(metadata [3 x i8]* %str, metadata !4957, metadata !DIExpression()), !dbg !4959
  %167 = bitcast [3 x i8]* %str to i8*, !dbg !4959
  call void @llvm.memset.p0i8.i64(i8* align 1 %167, i8 0, i64 3, i1 false), !dbg !4959
  %168 = load i32, i32* %icon_only.addr, align 4, !dbg !4960
  %tobool167 = icmp ne i32 %168, 0, !dbg !4960
  br i1 %tobool167, label %if.end174, label %if.then168, !dbg !4962

if.then168:                                       ; preds = %if.else166
  %169 = load i32, i32* %type, align 4, !dbg !4963
  %cmp169 = icmp ne i32 %169, 0, !dbg !4966
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !4967

if.then171:                                       ; preds = %if.then168
  %arrayidx172 = getelementptr inbounds [3 x i8], [3 x i8]* %str, i64 0, i64 1, !dbg !4968
  store i8 58, i8* %arrayidx172, align 1, !dbg !4970
  br label %if.end173, !dbg !4971

if.end173:                                        ; preds = %if.then171, %if.then168
  br label %if.end174, !dbg !4972

if.end174:                                        ; preds = %if.end173, %if.else166
  %170 = load i32, i32* %type, align 4, !dbg !4973
  %cmp175 = icmp eq i32 %170, 0, !dbg !4975
  br i1 %cmp175, label %land.lhs.true177, label %if.end194, !dbg !4976

land.lhs.true177:                                 ; preds = %if.end174
  %171 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4977
  %root178 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %171, i32 0, i32 1, !dbg !4977
  %172 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root178, align 8, !dbg !4977
  %block179 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %172, i32 0, i32 10, !dbg !4977
  %173 = load %struct.uiBlock*, %struct.uiBlock** %block179, align 8, !dbg !4977
  %dt = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %173, i32 0, i32 30, !dbg !4977
  %174 = load i8, i8* %dt, align 1, !dbg !4977
  %conv180 = zext i8 %174 to i32, !dbg !4977
  %cmp181 = icmp eq i32 %conv180, 1, !dbg !4977
  br i1 %cmp181, label %if.then190, label %lor.lhs.false183, !dbg !4977

lor.lhs.false183:                                 ; preds = %land.lhs.true177
  %175 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !4977
  %root184 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %175, i32 0, i32 1, !dbg !4977
  %176 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root184, align 8, !dbg !4977
  %block185 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %176, i32 0, i32 10, !dbg !4977
  %177 = load %struct.uiBlock*, %struct.uiBlock** %block185, align 8, !dbg !4977
  %dt186 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %177, i32 0, i32 30, !dbg !4977
  %178 = load i8, i8* %dt186, align 1, !dbg !4977
  %conv187 = zext i8 %178 to i32, !dbg !4977
  %cmp188 = icmp eq i32 %conv187, 2, !dbg !4977
  br i1 %cmp188, label %if.then190, label %if.end194, !dbg !4978

if.then190:                                       ; preds = %lor.lhs.false183, %land.lhs.true177
  %179 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4979
  %180 = load i32, i32* %len.addr, align 4, !dbg !4981
  %conv191 = sext i32 %180 to i64, !dbg !4981
  %mul192 = mul i64 4, %conv191, !dbg !4982
  %call193 = call i8* %179(i64 %mul192, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i64 0, i64 0)), !dbg !4979
  %181 = bitcast i8* %call193 to i32*, !dbg !4979
  store i32* %181, i32** %boolarr, align 8, !dbg !4983
  %182 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4984
  %183 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4985
  %184 = load i32*, i32** %boolarr, align 8, !dbg !4986
  call void @RNA_property_boolean_get_array(%struct.PointerRNA* %182, %struct.PropertyRNA* %183, i32* %184), !dbg !4987
  br label %if.end194, !dbg !4988

if.end194:                                        ; preds = %if.then190, %lor.lhs.false183, %if.end174
  store i32 0, i32* %a, align 4, !dbg !4989
  br label %for.cond195, !dbg !4991

for.cond195:                                      ; preds = %for.inc236, %if.end194
  %185 = load i32, i32* %a, align 4, !dbg !4992
  %186 = load i32, i32* %len.addr, align 4, !dbg !4994
  %cmp196 = icmp ult i32 %185, %186, !dbg !4995
  br i1 %cmp196, label %for.body198, label %for.end238, !dbg !4996

for.body198:                                      ; preds = %for.cond195
  %187 = load i32, i32* %icon_only.addr, align 4, !dbg !4997
  %tobool199 = icmp ne i32 %187, 0, !dbg !4997
  br i1 %tobool199, label %if.end203, label %if.then200, !dbg !5000

if.then200:                                       ; preds = %for.body198
  %188 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5001
  %189 = load i32, i32* %a, align 4, !dbg !5002
  %call201 = call zeroext i8 @RNA_property_array_item_char(%struct.PropertyRNA* %188, i32 %189), !dbg !5003
  %arrayidx202 = getelementptr inbounds [3 x i8], [3 x i8]* %str, i64 0, i64 0, !dbg !5004
  store i8 %call201, i8* %arrayidx202, align 1, !dbg !5005
  br label %if.end203, !dbg !5004

if.end203:                                        ; preds = %if.then200, %for.body198
  %190 = load i32*, i32** %boolarr, align 8, !dbg !5006
  %tobool204 = icmp ne i32* %190, null, !dbg !5006
  br i1 %tobool204, label %if.then205, label %if.end209, !dbg !5008

if.then205:                                       ; preds = %if.end203
  %191 = load i32*, i32** %boolarr, align 8, !dbg !5009
  %192 = load i32, i32* %a, align 4, !dbg !5010
  %idxprom = zext i32 %192 to i64, !dbg !5009
  %arrayidx206 = getelementptr inbounds i32, i32* %191, i64 %idxprom, !dbg !5009
  %193 = load i32, i32* %arrayidx206, align 4, !dbg !5009
  %tobool207 = icmp ne i32 %193, 0, !dbg !5009
  %194 = zext i1 %tobool207 to i64, !dbg !5009
  %cond208 = select i1 %tobool207, i32 39, i32 38, !dbg !5009
  store i32 %cond208, i32* %icon.addr, align 4, !dbg !5011
  br label %if.end209, !dbg !5012

if.end209:                                        ; preds = %if.then205, %if.end203
  %195 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5013
  %196 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5014
  %197 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5015
  %198 = load i32, i32* %a, align 4, !dbg !5016
  %arraydecay210 = getelementptr inbounds [3 x i8], [3 x i8]* %str, i64 0, i64 0, !dbg !5017
  %199 = load i32, i32* %icon.addr, align 4, !dbg !5018
  %200 = load i32, i32* %w.addr, align 4, !dbg !5019
  %201 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5020
  %conv211 = sext i16 %201 to i32, !dbg !5020
  %call212 = call %struct.uiBut* @uiDefAutoButR(%struct.uiBlock* %195, %struct.PointerRNA* %196, %struct.PropertyRNA* %197, i32 %198, i8* %arraydecay210, i32 %199, i32 0, i32 0, i32 %200, i32 %conv211), !dbg !5021
  store %struct.uiBut* %call212, %struct.uiBut** %but, align 8, !dbg !5022
  %202 = load i32, i32* %slider.addr, align 4, !dbg !5023
  %tobool213 = icmp ne i32 %202, 0, !dbg !5023
  br i1 %tobool213, label %land.lhs.true214, label %if.end220, !dbg !5025

land.lhs.true214:                                 ; preds = %if.end209
  %203 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5026
  %type215 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %203, i32 0, i32 4, !dbg !5027
  %204 = load i32, i32* %type215, align 8, !dbg !5027
  %cmp216 = icmp eq i32 %204, 2560, !dbg !5028
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !5029

if.then218:                                       ; preds = %land.lhs.true214
  %205 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5030
  %type219 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %205, i32 0, i32 4, !dbg !5031
  store i32 7168, i32* %type219, align 8, !dbg !5032
  br label %if.end220, !dbg !5030

if.end220:                                        ; preds = %if.then218, %land.lhs.true214, %if.end209
  %206 = load i32, i32* %toggle.addr, align 4, !dbg !5033
  %tobool221 = icmp ne i32 %206, 0, !dbg !5033
  br i1 %tobool221, label %land.lhs.true222, label %if.end228, !dbg !5035

land.lhs.true222:                                 ; preds = %if.end220
  %207 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5036
  %type223 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %207, i32 0, i32 4, !dbg !5037
  %208 = load i32, i32* %type223, align 8, !dbg !5037
  %cmp224 = icmp eq i32 %208, 19456, !dbg !5038
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !5039

if.then226:                                       ; preds = %land.lhs.true222
  %209 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5040
  %type227 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %209, i32 0, i32 4, !dbg !5041
  store i32 1536, i32* %type227, align 8, !dbg !5042
  br label %if.end228, !dbg !5040

if.end228:                                        ; preds = %if.then226, %land.lhs.true222, %if.end220
  %210 = load i32, i32* %a, align 4, !dbg !5043
  %cmp229 = icmp eq i32 %210, 0, !dbg !5045
  br i1 %cmp229, label %land.lhs.true231, label %if.end235, !dbg !5046

land.lhs.true231:                                 ; preds = %if.end228
  %211 = load i32, i32* %subtype, align 4, !dbg !5047
  %cmp232 = icmp eq i32 %211, 28, !dbg !5048
  br i1 %cmp232, label %if.then234, label %if.end235, !dbg !5049

if.then234:                                       ; preds = %land.lhs.true231
  %212 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5050
  call void @uiButSetUnitType(%struct.uiBut* %212, i32 327680), !dbg !5051
  br label %if.end235, !dbg !5051

if.end235:                                        ; preds = %if.then234, %land.lhs.true231, %if.end228
  br label %for.inc236, !dbg !5052

for.inc236:                                       ; preds = %if.end235
  %213 = load i32, i32* %a, align 4, !dbg !5053
  %inc237 = add i32 %213, 1, !dbg !5053
  store i32 %inc237, i32* %a, align 4, !dbg !5053
  br label %for.cond195, !dbg !5054, !llvm.loop !5055

for.end238:                                       ; preds = %for.cond195
  %214 = load i32*, i32** %boolarr, align 8, !dbg !5057
  %tobool239 = icmp ne i32* %214, null, !dbg !5057
  br i1 %tobool239, label %if.then240, label %if.end241, !dbg !5059

if.then240:                                       ; preds = %for.end238
  %215 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5060
  %216 = load i32*, i32** %boolarr, align 8, !dbg !5062
  %217 = bitcast i32* %216 to i8*, !dbg !5062
  call void %215(i8* %217), !dbg !5060
  br label %if.end241, !dbg !5063

if.end241:                                        ; preds = %if.then240, %for.end238
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.then163
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then147
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %for.end141
  br label %if.end245

if.end245:                                        ; preds = %if.end244, %for.end100
  %218 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5064
  %219 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5065
  call void @uiBlockSetCurLayout(%struct.uiBlock* %218, %struct.uiLayout* %219), !dbg !5066
  br label %return, !dbg !5067

return:                                           ; preds = %if.end245, %if.then109
  ret void, !dbg !5067
}

declare dso_local %struct.uiBut* @uiDefIconTextButR_prop(%struct.uiBlock*, i32, i32, i32, i8*, i32, i32, i16 signext, i16 signext, %struct.PointerRNA*, %struct.PropertyRNA*, i32, float, float, float, float, i8*) #2

declare dso_local %struct.uiBut* @uiDefIconButR_prop(%struct.uiBlock*, i32, i32, i32, i32, i32, i16 signext, i16 signext, %struct.PointerRNA*, %struct.PropertyRNA*, i32, float, float, float, float, i8*) #2

declare dso_local %struct.uiBut* @uiDefButR_prop(%struct.uiBlock*, i32, i32, i8*, i32, i32, i16 signext, i16 signext, %struct.PointerRNA*, %struct.PropertyRNA*, i32, float, float, float, float, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_enum_expand(%struct.uiLayout* %layout, %struct.uiBlock* %block, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i8* %uiname, i32 %h, i32 %icon_only) #0 !dbg !5068 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %uiname.addr = alloca i8*, align 8
  %h.addr = alloca i32, align 4
  %icon_only.addr = alloca i32, align 4
  %but = alloca %struct.uiBut*, align 8
  %layout_radial = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %item_array = alloca %struct.EnumPropertyItem*, align 8
  %name = alloca i8*, align 8
  %itemw = alloca i32, align 4
  %icon = alloca i32, align 4
  %value = alloca i32, align 4
  %free = alloca i8, align 1
  %radial = alloca i8, align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5071, metadata !DIExpression()), !dbg !5072
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5073, metadata !DIExpression()), !dbg !5074
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5075, metadata !DIExpression()), !dbg !5076
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5077, metadata !DIExpression()), !dbg !5078
  store i8* %uiname, i8** %uiname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uiname.addr, metadata !5079, metadata !DIExpression()), !dbg !5080
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5081, metadata !DIExpression()), !dbg !5082
  store i32 %icon_only, i32* %icon_only.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon_only.addr, metadata !5083, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5085, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout_radial, metadata !5087, metadata !DIExpression()), !dbg !5088
  store %struct.uiLayout* null, %struct.uiLayout** %layout_radial, align 8, !dbg !5088
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !5089, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item_array, metadata !5091, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.declare(metadata i8** %name, metadata !5093, metadata !DIExpression()), !dbg !5094
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !5095, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.declare(metadata i32* %icon, metadata !5097, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.declare(metadata i32* %value, metadata !5099, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.declare(metadata i8* %free, metadata !5101, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.declare(metadata i8* %radial, metadata !5103, metadata !DIExpression()), !dbg !5104
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5105
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !5106
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !5106
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 2, !dbg !5107
  %2 = load i32, i32* %type, align 8, !dbg !5107
  %cmp = icmp eq i32 %2, 4, !dbg !5108
  %conv = zext i1 %cmp to i32, !dbg !5108
  %conv1 = trunc i32 %conv to i8, !dbg !5109
  store i8 %conv1, i8* %radial, align 1, !dbg !5104
  %3 = load i8, i8* %radial, align 1, !dbg !5110
  %tobool = icmp ne i8 %3, 0, !dbg !5110
  br i1 %tobool, label %if.then, label %if.else, !dbg !5112

if.then:                                          ; preds = %entry
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5113
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 48, !dbg !5114
  %5 = load i8*, i8** %evil_C, align 8, !dbg !5114
  %6 = bitcast i8* %5 to %struct.bContext*, !dbg !5113
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5115
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5116
  call void @RNA_property_enum_items_gettexted_all(%struct.bContext* %6, %struct.PointerRNA* %7, %struct.PropertyRNA* %8, %struct.EnumPropertyItem** %item_array, i32* null, i8* %free), !dbg !5117
  br label %if.end, !dbg !5117

if.else:                                          ; preds = %entry
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5118
  %evil_C2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 48, !dbg !5119
  %10 = load i8*, i8** %evil_C2, align 8, !dbg !5119
  %11 = bitcast i8* %10 to %struct.bContext*, !dbg !5118
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5120
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5121
  call void @RNA_property_enum_items_gettexted(%struct.bContext* %11, %struct.PointerRNA* %12, %struct.PropertyRNA* %13, %struct.EnumPropertyItem** %item_array, i32* null, i8* %free), !dbg !5122
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load i8, i8* %radial, align 1, !dbg !5123
  %tobool3 = icmp ne i8 %14, 0, !dbg !5123
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !5125

if.then4:                                         ; preds = %if.end
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5126
  %call = call %struct.uiLayout* @uiLayoutRadial(%struct.uiLayout* %15), !dbg !5128
  store %struct.uiLayout* %call, %struct.uiLayout** %layout_radial, align 8, !dbg !5129
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5130
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout_radial, align 8, !dbg !5131
  call void @uiBlockSetCurLayout(%struct.uiBlock* %16, %struct.uiLayout* %17), !dbg !5132
  br label %if.end14, !dbg !5133

if.else5:                                         ; preds = %if.end
  %18 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5134
  %root6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 1, !dbg !5136
  %19 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root6, align 8, !dbg !5136
  %type7 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %19, i32 0, i32 2, !dbg !5137
  %20 = load i32, i32* %type7, align 8, !dbg !5137
  %cmp8 = icmp ne i32 %20, 2, !dbg !5138
  br i1 %cmp8, label %if.then10, label %if.else12, !dbg !5139

if.then10:                                        ; preds = %if.else5
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5140
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5142
  %23 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5143
  %call11 = call %struct.uiLayout* @ui_item_local_sublayout(%struct.uiLayout* %22, %struct.uiLayout* %23, i32 1), !dbg !5144
  call void @uiBlockSetCurLayout(%struct.uiBlock* %21, %struct.uiLayout* %call11), !dbg !5145
  br label %if.end13, !dbg !5146

if.else12:                                        ; preds = %if.else5
  %24 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5147
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5149
  call void @uiBlockSetCurLayout(%struct.uiBlock* %24, %struct.uiLayout* %25), !dbg !5150
  br label %if.end13

if.end13:                                         ; preds = %if.else12, %if.then10
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then4
  %26 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !5151
  store %struct.EnumPropertyItem* %26, %struct.EnumPropertyItem** %item, align 8, !dbg !5153
  br label %for.cond, !dbg !5154

for.cond:                                         ; preds = %for.inc, %if.end14
  %27 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5155
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %27, i32 0, i32 1, !dbg !5157
  %28 = load i8*, i8** %identifier, align 8, !dbg !5157
  %tobool15 = icmp ne i8* %28, null, !dbg !5158
  br i1 %tobool15, label %for.body, label %for.end, !dbg !5158

for.body:                                         ; preds = %for.cond
  %29 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5159
  %identifier16 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %29, i32 0, i32 1, !dbg !5162
  %30 = load i8*, i8** %identifier16, align 8, !dbg !5162
  %arrayidx = getelementptr inbounds i8, i8* %30, i64 0, !dbg !5159
  %31 = load i8, i8* %arrayidx, align 1, !dbg !5159
  %tobool17 = icmp ne i8 %31, 0, !dbg !5159
  br i1 %tobool17, label %if.end22, label %if.then18, !dbg !5163

if.then18:                                        ; preds = %for.body
  %32 = load i8, i8* %radial, align 1, !dbg !5164
  %tobool19 = icmp ne i8 %32, 0, !dbg !5164
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !5167

if.then20:                                        ; preds = %if.then18
  %33 = load %struct.uiLayout*, %struct.uiLayout** %layout_radial, align 8, !dbg !5168
  call void @uiItemS(%struct.uiLayout* %33), !dbg !5169
  br label %if.end21, !dbg !5169

if.end21:                                         ; preds = %if.then20, %if.then18
  br label %for.inc, !dbg !5170

if.end22:                                         ; preds = %for.body
  %34 = load i8*, i8** %uiname.addr, align 8, !dbg !5171
  %tobool23 = icmp ne i8* %34, null, !dbg !5171
  br i1 %tobool23, label %lor.lhs.false, label %cond.true, !dbg !5172

lor.lhs.false:                                    ; preds = %if.end22
  %35 = load i8*, i8** %uiname.addr, align 8, !dbg !5173
  %arrayidx24 = getelementptr inbounds i8, i8* %35, i64 0, !dbg !5173
  %36 = load i8, i8* %arrayidx24, align 1, !dbg !5173
  %conv25 = zext i8 %36 to i32, !dbg !5173
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !5173
  br i1 %tobool26, label %cond.true, label %cond.false, !dbg !5174

cond.true:                                        ; preds = %lor.lhs.false, %if.end22
  %37 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5175
  %name27 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %37, i32 0, i32 3, !dbg !5176
  %38 = load i8*, i8** %name27, align 8, !dbg !5176
  br label %cond.end, !dbg !5174

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !5174

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %38, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false ], !dbg !5174
  store i8* %cond, i8** %name, align 8, !dbg !5177
  %39 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5178
  %icon28 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %39, i32 0, i32 2, !dbg !5179
  %40 = load i32, i32* %icon28, align 8, !dbg !5179
  store i32 %40, i32* %icon, align 4, !dbg !5180
  %41 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5181
  %value29 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %41, i32 0, i32 0, !dbg !5182
  %42 = load i32, i32* %value29, align 8, !dbg !5182
  store i32 %42, i32* %value, align 4, !dbg !5183
  %43 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5184
  %curlayout = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %43, i32 0, i32 7, !dbg !5185
  %44 = load %struct.uiLayout*, %struct.uiLayout** %curlayout, align 8, !dbg !5185
  %45 = load i32, i32* %icon_only.addr, align 4, !dbg !5186
  %tobool30 = icmp ne i32 %45, 0, !dbg !5186
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5186

cond.true31:                                      ; preds = %cond.end
  br label %cond.end33, !dbg !5186

cond.false32:                                     ; preds = %cond.end
  %46 = load i8*, i8** %name, align 8, !dbg !5187
  br label %cond.end33, !dbg !5186

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond34 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.true31 ], [ %46, %cond.false32 ], !dbg !5186
  %47 = load i32, i32* %icon, align 4, !dbg !5188
  %call35 = call i32 @ui_text_icon_width(%struct.uiLayout* %44, i8* %cond34, i32 %47, i8 zeroext 0), !dbg !5189
  store i32 %call35, i32* %itemw, align 4, !dbg !5190
  %48 = load i32, i32* %icon, align 4, !dbg !5191
  %tobool36 = icmp ne i32 %48, 0, !dbg !5191
  br i1 %tobool36, label %land.lhs.true, label %if.else47, !dbg !5193

land.lhs.true:                                    ; preds = %cond.end33
  %49 = load i8*, i8** %name, align 8, !dbg !5194
  %arrayidx37 = getelementptr inbounds i8, i8* %49, i64 0, !dbg !5194
  %50 = load i8, i8* %arrayidx37, align 1, !dbg !5194
  %conv38 = zext i8 %50 to i32, !dbg !5194
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !5194
  br i1 %tobool39, label %land.lhs.true40, label %if.else47, !dbg !5195

land.lhs.true40:                                  ; preds = %land.lhs.true
  %51 = load i32, i32* %icon_only.addr, align 4, !dbg !5196
  %tobool41 = icmp ne i32 %51, 0, !dbg !5196
  br i1 %tobool41, label %if.else47, label %if.then42, !dbg !5197

if.then42:                                        ; preds = %land.lhs.true40
  %52 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5198
  %53 = load i32, i32* %icon, align 4, !dbg !5199
  %54 = load i8*, i8** %name, align 8, !dbg !5200
  %55 = load i32, i32* %itemw, align 4, !dbg !5201
  %conv43 = trunc i32 %55 to i16, !dbg !5201
  %56 = load i32, i32* %h.addr, align 4, !dbg !5202
  %conv44 = trunc i32 %56 to i16, !dbg !5202
  %57 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5203
  %58 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5204
  %59 = load i32, i32* %value, align 4, !dbg !5205
  %conv45 = sitofp i32 %59 to float, !dbg !5205
  %call46 = call %struct.uiBut* @uiDefIconTextButR_prop(%struct.uiBlock* %52, i32 1024, i32 0, i32 %53, i8* %54, i32 0, i32 0, i16 signext %conv43, i16 signext %conv44, %struct.PointerRNA* %57, %struct.PropertyRNA* %58, i32 -1, float 0.000000e+00, float %conv45, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !5206
  store %struct.uiBut* %call46, %struct.uiBut** %but, align 8, !dbg !5207
  br label %if.end60, !dbg !5208

if.else47:                                        ; preds = %land.lhs.true40, %land.lhs.true, %cond.end33
  %60 = load i32, i32* %icon, align 4, !dbg !5209
  %tobool48 = icmp ne i32 %60, 0, !dbg !5209
  br i1 %tobool48, label %if.then49, label %if.else54, !dbg !5211

if.then49:                                        ; preds = %if.else47
  %61 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5212
  %62 = load i32, i32* %icon, align 4, !dbg !5213
  %63 = load i32, i32* %itemw, align 4, !dbg !5214
  %conv50 = trunc i32 %63 to i16, !dbg !5214
  %64 = load i32, i32* %h.addr, align 4, !dbg !5215
  %conv51 = trunc i32 %64 to i16, !dbg !5215
  %65 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5216
  %66 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5217
  %67 = load i32, i32* %value, align 4, !dbg !5218
  %conv52 = sitofp i32 %67 to float, !dbg !5218
  %call53 = call %struct.uiBut* @uiDefIconButR_prop(%struct.uiBlock* %61, i32 1024, i32 0, i32 %62, i32 0, i32 0, i16 signext %conv50, i16 signext %conv51, %struct.PointerRNA* %65, %struct.PropertyRNA* %66, i32 -1, float 0.000000e+00, float %conv52, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !5219
  store %struct.uiBut* %call53, %struct.uiBut** %but, align 8, !dbg !5220
  br label %if.end59, !dbg !5221

if.else54:                                        ; preds = %if.else47
  %68 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5222
  %69 = load i8*, i8** %name, align 8, !dbg !5223
  %70 = load i32, i32* %itemw, align 4, !dbg !5224
  %conv55 = trunc i32 %70 to i16, !dbg !5224
  %71 = load i32, i32* %h.addr, align 4, !dbg !5225
  %conv56 = trunc i32 %71 to i16, !dbg !5225
  %72 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5226
  %73 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5227
  %74 = load i32, i32* %value, align 4, !dbg !5228
  %conv57 = sitofp i32 %74 to float, !dbg !5228
  %call58 = call %struct.uiBut* @uiDefButR_prop(%struct.uiBlock* %68, i32 1024, i32 0, i8* %69, i32 0, i32 0, i16 signext %conv55, i16 signext %conv56, %struct.PointerRNA* %72, %struct.PropertyRNA* %73, i32 -1, float 0.000000e+00, float %conv57, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !5229
  store %struct.uiBut* %call58, %struct.uiBut** %but, align 8, !dbg !5230
  br label %if.end59

if.end59:                                         ; preds = %if.else54, %if.then49
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then42
  %75 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5231
  %call61 = call i32 @RNA_property_flag(%struct.PropertyRNA* %75), !dbg !5233
  %and = and i32 %call61, 2097152, !dbg !5234
  %tobool62 = icmp ne i32 %and, 0, !dbg !5234
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !5235

if.then63:                                        ; preds = %if.end60
  %76 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5236
  %77 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5238
  %78 = bitcast %struct.uiBut* %77 to i8*, !dbg !5238
  %79 = load i32, i32* %value, align 4, !dbg !5239
  %conv64 = sext i32 %79 to i64, !dbg !5239
  %80 = inttoptr i64 %conv64 to i8*, !dbg !5239
  call void @uiButSetFunc(%struct.uiBut* %76, void (%struct.bContext*, i8*, i8*)* @ui_item_enum_expand_handle, i8* %78, i8* %80), !dbg !5240
  br label %if.end65, !dbg !5241

if.end65:                                         ; preds = %if.then63, %if.end60
  %81 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5242
  %call66 = call i32 @ui_layout_local_dir(%struct.uiLayout* %81), !dbg !5244
  %cmp67 = icmp ne i32 %call66, 0, !dbg !5245
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !5246

if.then69:                                        ; preds = %if.end65
  %82 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5247
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %82, i32 0, i32 3, !dbg !5248
  %83 = load i32, i32* %drawflag, align 4, !dbg !5249
  %or = or i32 %83, 2, !dbg !5249
  store i32 %or, i32* %drawflag, align 4, !dbg !5249
  br label %if.end70, !dbg !5247

if.end70:                                         ; preds = %if.then69, %if.end65
  br label %for.inc, !dbg !5250

for.inc:                                          ; preds = %if.end70, %if.end21
  %84 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5251
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %84, i32 1, !dbg !5251
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item, align 8, !dbg !5251
  br label %for.cond, !dbg !5252, !llvm.loop !5253

for.end:                                          ; preds = %for.cond
  %85 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5255
  %86 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5256
  call void @uiBlockSetCurLayout(%struct.uiBlock* %85, %struct.uiLayout* %86), !dbg !5257
  %87 = load i8, i8* %free, align 1, !dbg !5258
  %tobool71 = icmp ne i8 %87, 0, !dbg !5258
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !5260

if.then72:                                        ; preds = %for.end
  %88 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5261
  %89 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !5263
  %90 = bitcast %struct.EnumPropertyItem* %89 to i8*, !dbg !5263
  call void %88(i8* %90), !dbg !5261
  br label %if.end73, !dbg !5264

if.end73:                                         ; preds = %if.then72, %for.end
  ret void, !dbg !5265
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @ui_item_with_label(%struct.uiLayout* %layout, %struct.uiBlock* %block, i8* %name, i32 %icon, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, i32 %x, i32 %y, i32 %w, i32 %h, i32 %flag) #0 !dbg !5266 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %sub = alloca %struct.uiLayout*, align 8
  %but = alloca %struct.uiBut*, align 8
  %type = alloca i32, align 4
  %subtype = alloca i32, align 4
  %labelw = alloca i32, align 4
  %buf = alloca [128 x i8], align 16
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5271, metadata !DIExpression()), !dbg !5272
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5273, metadata !DIExpression()), !dbg !5274
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !5275, metadata !DIExpression()), !dbg !5276
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5277, metadata !DIExpression()), !dbg !5278
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5281, metadata !DIExpression()), !dbg !5282
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5283, metadata !DIExpression()), !dbg !5284
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5285, metadata !DIExpression()), !dbg !5286
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !5287, metadata !DIExpression()), !dbg !5288
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !5289, metadata !DIExpression()), !dbg !5290
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5291, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !5293, metadata !DIExpression()), !dbg !5294
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5295, metadata !DIExpression()), !dbg !5296
  store %struct.uiBut* null, %struct.uiBut** %but, align 8, !dbg !5296
  call void @llvm.dbg.declare(metadata i32* %type, metadata !5297, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.declare(metadata i32* %subtype, metadata !5299, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.declare(metadata i32* %labelw, metadata !5301, metadata !DIExpression()), !dbg !5302
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5303
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5304
  %align = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 10, !dbg !5305
  %2 = load i8, i8* %align, align 2, !dbg !5305
  %conv = zext i8 %2 to i32, !dbg !5304
  %call = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %0, i32 %conv), !dbg !5306
  store %struct.uiLayout* %call, %struct.uiLayout** %sub, align 8, !dbg !5307
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5308
  %4 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5309
  call void @uiBlockSetCurLayout(%struct.uiBlock* %3, %struct.uiLayout* %4), !dbg !5310
  %5 = load i8*, i8** %name.addr, align 8, !dbg !5311
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !5311
  %6 = load i8, i8* %arrayidx, align 1, !dbg !5311
  %tobool = icmp ne i8 %6, 0, !dbg !5311
  br i1 %tobool, label %if.then, label %if.end, !dbg !5313

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %w.addr, align 4, !dbg !5314
  %div = sdiv i32 %7, 3, !dbg !5316
  store i32 %div, i32* %labelw, align 4, !dbg !5317
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5318
  %9 = load i8*, i8** %name.addr, align 8, !dbg !5319
  %10 = load i32, i32* %x.addr, align 4, !dbg !5320
  %11 = load i32, i32* %y.addr, align 4, !dbg !5321
  %12 = load i32, i32* %labelw, align 4, !dbg !5322
  %conv1 = trunc i32 %12 to i16, !dbg !5322
  %13 = load i32, i32* %h.addr, align 4, !dbg !5323
  %conv2 = trunc i32 %13 to i16, !dbg !5323
  %call3 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %8, i32 5120, i32 0, i8* %9, i32 %10, i32 %11, i16 signext %conv1, i16 signext %conv2, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !5324
  %14 = load i32, i32* %w.addr, align 4, !dbg !5325
  %15 = load i32, i32* %labelw, align 4, !dbg !5326
  %sub4 = sub nsw i32 %14, %15, !dbg !5327
  store i32 %sub4, i32* %w.addr, align 4, !dbg !5328
  br label %if.end, !dbg !5329

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5330
  %call5 = call i32 @RNA_property_type(%struct.PropertyRNA* %16), !dbg !5331
  store i32 %call5, i32* %type, align 4, !dbg !5332
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5333
  %call6 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %17), !dbg !5334
  store i32 %call6, i32* %subtype, align 4, !dbg !5335
  %18 = load i32, i32* %subtype, align 4, !dbg !5336
  %cmp = icmp eq i32 %18, 1, !dbg !5338
  br i1 %cmp, label %if.then10, label %lor.lhs.false, !dbg !5339

lor.lhs.false:                                    ; preds = %if.end
  %19 = load i32, i32* %subtype, align 4, !dbg !5340
  %cmp8 = icmp eq i32 %19, 2, !dbg !5341
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !5342

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  %20 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5343
  %21 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !5345
  %call11 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %21, i32 1), !dbg !5346
  call void @uiBlockSetCurLayout(%struct.uiBlock* %20, %struct.uiLayout* %call11), !dbg !5347
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5348
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5349
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5350
  %25 = load i32, i32* %index.addr, align 4, !dbg !5351
  %26 = load i32, i32* %icon.addr, align 4, !dbg !5352
  %27 = load i32, i32* %x.addr, align 4, !dbg !5353
  %28 = load i32, i32* %y.addr, align 4, !dbg !5354
  %29 = load i32, i32* %w.addr, align 4, !dbg !5355
  %30 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5356
  %conv12 = sext i16 %30 to i32, !dbg !5356
  %sub13 = sub nsw i32 %29, %conv12, !dbg !5357
  %31 = load i32, i32* %h.addr, align 4, !dbg !5358
  %call14 = call %struct.uiBut* @uiDefAutoButR(%struct.uiBlock* %22, %struct.PointerRNA* %23, %struct.PropertyRNA* %24, i32 %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 %26, i32 %27, i32 %28, i32 %sub13, i32 %31), !dbg !5359
  store %struct.uiBut* %call14, %struct.uiBut** %but, align 8, !dbg !5360
  %32 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5361
  %33 = load i32, i32* %subtype, align 4, !dbg !5362
  %cmp15 = icmp eq i32 %33, 2, !dbg !5363
  %34 = zext i1 %cmp15 to i64, !dbg !5362
  %cond = select i1 %cmp15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0), !dbg !5362
  %35 = load i32, i32* %x.addr, align 4, !dbg !5364
  %36 = load i32, i32* %y.addr, align 4, !dbg !5365
  %37 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5366
  %38 = load i32, i32* %h.addr, align 4, !dbg !5367
  %conv17 = trunc i32 %38 to i16, !dbg !5367
  %call18 = call %struct.uiBut* @uiDefIconButO(%struct.uiBlock* %32, i32 512, i8* %cond, i32 0, i32 108, i32 %35, i32 %36, i16 signext %37, i16 signext %conv17, i8* null), !dbg !5368
  br label %if.end51, !dbg !5369

if.else:                                          ; preds = %lor.lhs.false
  %39 = load i32, i32* %flag.addr, align 4, !dbg !5370
  %and = and i32 %39, 32, !dbg !5372
  %tobool19 = icmp ne i32 %and, 0, !dbg !5372
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !5373

if.then20:                                        ; preds = %if.else
  %40 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5374
  %41 = load i8*, i8** %name.addr, align 8, !dbg !5376
  %42 = load i32, i32* %x.addr, align 4, !dbg !5377
  %43 = load i32, i32* %y.addr, align 4, !dbg !5378
  %44 = load i32, i32* %w.addr, align 4, !dbg !5379
  %conv21 = trunc i32 %44 to i16, !dbg !5379
  %45 = load i32, i32* %h.addr, align 4, !dbg !5380
  %conv22 = trunc i32 %45 to i16, !dbg !5380
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5381
  %47 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5382
  %48 = load i32, i32* %index.addr, align 4, !dbg !5383
  %call23 = call %struct.uiBut* @uiDefButR_prop(%struct.uiBlock* %40, i32 12288, i32 0, i8* %41, i32 %42, i32 %43, i16 signext %conv21, i16 signext %conv22, %struct.PointerRNA* %46, %struct.PropertyRNA* %47, i32 %48, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !5384
  br label %if.end50, !dbg !5385

if.else24:                                        ; preds = %if.else
  %49 = load i32, i32* %flag.addr, align 4, !dbg !5386
  %and25 = and i32 %49, 64, !dbg !5388
  %tobool26 = icmp ne i32 %and25, 0, !dbg !5388
  br i1 %tobool26, label %if.then27, label %if.else42, !dbg !5389

if.then27:                                        ; preds = %if.else24
  %50 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5390
  %type28 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %50, i32 0, i32 1, !dbg !5393
  %51 = load %struct.StructRNA*, %struct.StructRNA** %type28, align 8, !dbg !5393
  %call29 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %51, %struct.StructRNA* @RNA_KeyMapItem), !dbg !5394
  %tobool30 = icmp ne i8 %call29, 0, !dbg !5394
  br i1 %tobool30, label %if.then31, label %if.end41, !dbg !5395

if.then31:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !5396, metadata !DIExpression()), !dbg !5398
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5399
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %52, i32 0, i32 2, !dbg !5400
  %53 = load i8*, i8** %data, align 8, !dbg !5400
  %54 = bitcast i8* %53 to %struct.wmKeyMapItem*, !dbg !5399
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5401
  %call32 = call i32 @WM_keymap_item_to_string(%struct.wmKeyMapItem* %54, i8* %arraydecay, i32 128), !dbg !5402
  %55 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5403
  %arraydecay33 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5404
  %56 = load i32, i32* %x.addr, align 4, !dbg !5405
  %57 = load i32, i32* %y.addr, align 4, !dbg !5406
  %58 = load i32, i32* %w.addr, align 4, !dbg !5407
  %conv34 = trunc i32 %58 to i16, !dbg !5407
  %59 = load i32, i32* %h.addr, align 4, !dbg !5408
  %conv35 = trunc i32 %59 to i16, !dbg !5408
  %60 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5409
  %61 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5410
  %call36 = call %struct.uiBut* @uiDefButR_prop(%struct.uiBlock* %55, i32 23552, i32 0, i8* %arraydecay33, i32 %56, i32 %57, i16 signext %conv34, i16 signext %conv35, %struct.PointerRNA* %60, %struct.PropertyRNA* %61, i32 0, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, float -1.000000e+00, i8* null), !dbg !5411
  store %struct.uiBut* %call36, %struct.uiBut** %but, align 8, !dbg !5412
  %62 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5413
  %63 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5414
  %64 = bitcast %struct.uiBut* %63 to i8*, !dbg !5414
  call void @uiButSetFunc(%struct.uiBut* %62, void (%struct.bContext*, i8*, i8*)* @ui_keymap_but_cb, i8* %64, i8* null), !dbg !5415
  %65 = load i32, i32* %flag.addr, align 4, !dbg !5416
  %and37 = and i32 %65, 256, !dbg !5418
  %tobool38 = icmp ne i32 %and37, 0, !dbg !5418
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !5419

if.then39:                                        ; preds = %if.then31
  %66 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5420
  call void @uiButSetFlag(%struct.uiBut* %66, i32 1048576), !dbg !5421
  br label %if.end40, !dbg !5421

if.end40:                                         ; preds = %if.then39, %if.then31
  br label %if.end41, !dbg !5422

if.end41:                                         ; preds = %if.end40, %if.then27
  br label %if.end49, !dbg !5423

if.else42:                                        ; preds = %if.else24
  %67 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5424
  %68 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5425
  %69 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5426
  %70 = load i32, i32* %index.addr, align 4, !dbg !5427
  %71 = load i32, i32* %type, align 4, !dbg !5428
  %cmp43 = icmp eq i32 %71, 4, !dbg !5429
  br i1 %cmp43, label %land.rhs, label %land.end, !dbg !5430

land.rhs:                                         ; preds = %if.else42
  %72 = load i32, i32* %flag.addr, align 4, !dbg !5431
  %and45 = and i32 %72, 16, !dbg !5432
  %tobool46 = icmp ne i32 %and45, 0, !dbg !5433
  %lnot = xor i1 %tobool46, true, !dbg !5433
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else42
  %73 = phi i1 [ false, %if.else42 ], [ %lnot, %land.rhs ], !dbg !5434
  %74 = zext i1 %73 to i64, !dbg !5435
  %cond47 = select i1 %73, i8* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), !dbg !5435
  %75 = load i32, i32* %icon.addr, align 4, !dbg !5436
  %76 = load i32, i32* %x.addr, align 4, !dbg !5437
  %77 = load i32, i32* %y.addr, align 4, !dbg !5438
  %78 = load i32, i32* %w.addr, align 4, !dbg !5439
  %79 = load i32, i32* %h.addr, align 4, !dbg !5440
  %call48 = call %struct.uiBut* @uiDefAutoButR(%struct.uiBlock* %67, %struct.PointerRNA* %68, %struct.PropertyRNA* %69, i32 %70, i8* %cond47, i32 %75, i32 %76, i32 %77, i32 %78, i32 %79), !dbg !5441
  store %struct.uiBut* %call48, %struct.uiBut** %but, align 8, !dbg !5442
  br label %if.end49

if.end49:                                         ; preds = %land.end, %if.end41
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then20
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then10
  %80 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5443
  %81 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5444
  call void @uiBlockSetCurLayout(%struct.uiBlock* %80, %struct.uiLayout* %81), !dbg !5445
  %82 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5446
  ret %struct.uiBut* %82, !dbg !5447
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_but_add_search(%struct.uiBut* %but, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PointerRNA* %searchptr, %struct.PropertyRNA* %searchprop) #0 !dbg !5448 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %searchptr.addr = alloca %struct.PointerRNA*, align 8
  %searchprop.addr = alloca %struct.PropertyRNA*, align 8
  %ptype = alloca %struct.StructRNA*, align 8
  %sptr = alloca %struct.PointerRNA, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5453, metadata !DIExpression()), !dbg !5454
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5455, metadata !DIExpression()), !dbg !5456
  store %struct.PointerRNA* %searchptr, %struct.PointerRNA** %searchptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %searchptr.addr, metadata !5457, metadata !DIExpression()), !dbg !5458
  store %struct.PropertyRNA* %searchprop, %struct.PropertyRNA** %searchprop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %searchprop.addr, metadata !5459, metadata !DIExpression()), !dbg !5460
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %ptype, metadata !5461, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %sptr, metadata !5463, metadata !DIExpression()), !dbg !5464
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %searchprop.addr, align 8, !dbg !5465
  %tobool = icmp ne %struct.PropertyRNA* %0, null, !dbg !5465
  br i1 %tobool, label %if.end3, label %if.then, !dbg !5467

if.then:                                          ; preds = %entry
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5468
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %1), !dbg !5471
  %cmp = icmp eq i32 %call, 5, !dbg !5472
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5473

if.then1:                                         ; preds = %if.then
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5474
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5476
  %call2 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %2, %struct.PropertyRNA* %3), !dbg !5477
  store %struct.StructRNA* %call2, %struct.StructRNA** %ptype, align 8, !dbg !5478
  %4 = load %struct.StructRNA*, %struct.StructRNA** %ptype, align 8, !dbg !5479
  call void @search_id_collection(%struct.StructRNA* %4, %struct.PointerRNA* %sptr, %struct.PropertyRNA** %searchprop.addr), !dbg !5480
  store %struct.PointerRNA* %sptr, %struct.PointerRNA** %searchptr.addr, align 8, !dbg !5481
  br label %if.end, !dbg !5482

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end3, !dbg !5483

if.end3:                                          ; preds = %if.end, %entry
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %searchprop.addr, align 8, !dbg !5484
  %tobool4 = icmp ne %struct.PropertyRNA* %5, null, !dbg !5484
  br i1 %tobool4, label %if.then5, label %if.end18, !dbg !5486

if.then5:                                         ; preds = %if.end3
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5487
  %call6 = call zeroext i8 @RNA_property_is_unlink(%struct.PropertyRNA* %6), !dbg !5489
  %conv = zext i8 %call6 to i32, !dbg !5489
  %tobool7 = icmp ne i32 %conv, 0, !dbg !5489
  %7 = zext i1 %tobool7 to i64, !dbg !5489
  %cond = select i1 %tobool7, i32 26624, i32 20992, !dbg !5489
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5490
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 4, !dbg !5491
  store i32 %cond, i32* %type, align 8, !dbg !5492
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5493
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 21, !dbg !5493
  %10 = load float, float* %hardmax, align 4, !dbg !5493
  %cmp8 = fcmp ogt float %10, 2.560000e+02, !dbg !5493
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !5493

cond.true:                                        ; preds = %if.then5
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5493
  %hardmax10 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 21, !dbg !5493
  %12 = load float, float* %hardmax10, align 4, !dbg !5493
  br label %cond.end, !dbg !5493

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !5493

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11 = phi float [ %12, %cond.true ], [ 2.560000e+02, %cond.false ], !dbg !5493
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5494
  %hardmax12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 21, !dbg !5495
  store float %cond11, float* %hardmax12, align 4, !dbg !5496
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5497
  %rnasearchpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 57, !dbg !5498
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %searchptr.addr, align 8, !dbg !5499
  %16 = bitcast %struct.PointerRNA* %rnasearchpoin to i8*, !dbg !5500
  %17 = bitcast %struct.PointerRNA* %15 to i8*, !dbg !5500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false), !dbg !5500
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %searchprop.addr, align 8, !dbg !5501
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5502
  %rnasearchprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 58, !dbg !5503
  store %struct.PropertyRNA* %18, %struct.PropertyRNA** %rnasearchprop, align 8, !dbg !5504
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5505
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 3, !dbg !5506
  %21 = load i32, i32* %drawflag, align 4, !dbg !5507
  %or = or i32 %21, 6, !dbg !5507
  store i32 %or, i32* %drawflag, align 4, !dbg !5507
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5508
  %call13 = call i32 @RNA_property_type(%struct.PropertyRNA* %22), !dbg !5510
  %cmp14 = icmp eq i32 %call13, 4, !dbg !5511
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5512

if.then16:                                        ; preds = %cond.end
  %23 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5513
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 15, !dbg !5515
  %24 = load i8*, i8** %str, align 8, !dbg !5515
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 0, !dbg !5513
  store i8 0, i8* %arrayidx, align 1, !dbg !5516
  br label %if.end17, !dbg !5517

if.end17:                                         ; preds = %if.then16, %cond.end
  %25 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5518
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !5519
  %27 = bitcast %struct.uiBut* %26 to i8*, !dbg !5519
  call void @uiButSetSearchFunc(%struct.uiBut* %25, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)* @rna_search_cb, i8* %27, void (%struct.bContext*, i8*, i8*)* null, i8* null), !dbg !5520
  br label %if.end18, !dbg !5521

if.end18:                                         ; preds = %if.end17, %if.end3
  ret void, !dbg !5522
}

declare dso_local %struct.uiBut* @uiDefAutoButR(%struct.uiBlock*, %struct.PointerRNA*, %struct.PropertyRNA*, i32, i8*, i32, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemR(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, i8* %propname, i32 %flag, i8* %name, i32 %icon) #0 !dbg !5523 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5526, metadata !DIExpression()), !dbg !5527
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !5530, metadata !DIExpression()), !dbg !5531
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5532, metadata !DIExpression()), !dbg !5533
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5534, metadata !DIExpression()), !dbg !5535
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !5536, metadata !DIExpression()), !dbg !5537
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5538, metadata !DIExpression()), !dbg !5539
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5540
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !5541
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !5542
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5539
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5543
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !5543
  br i1 %tobool, label %if.end, label %if.then, !dbg !5545

if.then:                                          ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5546
  %4 = load i8*, i8** %propname.addr, align 8, !dbg !5548
  call void @ui_item_disabled(%struct.uiLayout* %3, i8* %4), !dbg !5549
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5550
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 1, !dbg !5550
  %6 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5550
  %call1 = call i8* @RNA_struct_identifier(%struct.StructRNA* %6), !dbg !5550
  %7 = load i8*, i8** %propname.addr, align 8, !dbg !5550
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.uiItemR, i64 0, i64 0), i8* %call1, i8* %7), !dbg !5550
  br label %return, !dbg !5551

if.end:                                           ; preds = %entry
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5552
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5553
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5554
  %11 = load i32, i32* %flag.addr, align 4, !dbg !5555
  %12 = load i8*, i8** %name.addr, align 8, !dbg !5556
  %13 = load i32, i32* %icon.addr, align 4, !dbg !5557
  call void @uiItemFullR(%struct.uiLayout* %8, %struct.PointerRNA* %9, %struct.PropertyRNA* %10, i32 -1, i32 0, i32 %11, i8* %12, i32 %13), !dbg !5558
  br label %return, !dbg !5559

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5559
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemEnumR(%struct.uiLayout* %layout, i8* %name, i32 %icon, %struct.PointerRNA* %ptr, i8* %propname, i32 %value) #0 !dbg !5560 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5563, metadata !DIExpression()), !dbg !5564
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5565, metadata !DIExpression()), !dbg !5566
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !5567, metadata !DIExpression()), !dbg !5568
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5569, metadata !DIExpression()), !dbg !5570
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !5571, metadata !DIExpression()), !dbg !5572
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5575, metadata !DIExpression()), !dbg !5576
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5577
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !5578
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !5579
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5576
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5580
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !5580
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5582

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5583
  %call1 = call i32 @RNA_property_type(%struct.PropertyRNA* %3), !dbg !5584
  %cmp = icmp ne i32 %call1, 4, !dbg !5585
  br i1 %cmp, label %if.then, label %if.end, !dbg !5586

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5587
  %5 = load i8*, i8** %propname.addr, align 8, !dbg !5589
  call void @ui_item_disabled(%struct.uiLayout* %4, i8* %5), !dbg !5590
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5591
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 1, !dbg !5591
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5591
  %call2 = call i8* @RNA_struct_identifier(%struct.StructRNA* %7), !dbg !5591
  %8 = load i8*, i8** %propname.addr, align 8, !dbg !5591
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.uiItemEnumR, i64 0, i64 0), i8* %call2, i8* %8), !dbg !5591
  br label %return, !dbg !5592

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5593
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5594
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5595
  %12 = load i32, i32* %value.addr, align 4, !dbg !5596
  %13 = load i8*, i8** %name.addr, align 8, !dbg !5597
  %14 = load i32, i32* %icon.addr, align 4, !dbg !5598
  call void @uiItemFullR(%struct.uiLayout* %9, %struct.PointerRNA* %10, %struct.PropertyRNA* %11, i32 -2, i32 %12, i32 0, i8* %13, i32 %14), !dbg !5599
  br label %return, !dbg !5600

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5600
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemEnumR_string(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, i8* %propname, i8* %value, i8* %name, i32 %icon) #0 !dbg !5601 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %ivalue = alloca i32, align 4
  %a = alloca i32, align 4
  %free = alloca i8, align 1
  %item_name = alloca i8*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !5608, metadata !DIExpression()), !dbg !5609
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !5610, metadata !DIExpression()), !dbg !5611
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5612, metadata !DIExpression()), !dbg !5613
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !5614, metadata !DIExpression()), !dbg !5615
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5616, metadata !DIExpression()), !dbg !5617
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5618
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !5619
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !5620
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5617
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !5621, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.declare(metadata i32* %ivalue, metadata !5623, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5625, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.declare(metadata i8* %free, metadata !5627, metadata !DIExpression()), !dbg !5628
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5629
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !5629
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5631

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5632
  %call1 = call i32 @RNA_property_type(%struct.PropertyRNA* %3), !dbg !5633
  %cmp = icmp ne i32 %call1, 4, !dbg !5634
  br i1 %cmp, label %if.then, label %if.end, !dbg !5635

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5636
  %5 = load i8*, i8** %propname.addr, align 8, !dbg !5638
  call void @ui_item_disabled(%struct.uiLayout* %4, i8* %5), !dbg !5639
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5640
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 1, !dbg !5640
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5640
  %call2 = call i8* @RNA_struct_identifier(%struct.StructRNA* %7), !dbg !5640
  %8 = load i8*, i8** %propname.addr, align 8, !dbg !5640
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uiItemEnumR_string, i64 0, i64 0), i8* %call2, i8* %8), !dbg !5640
  br label %if.end31, !dbg !5641

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5642
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %9, i32 0, i32 1, !dbg !5643
  %10 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !5643
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %10, i32 0, i32 10, !dbg !5644
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5644
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %11, i32 0, i32 48, !dbg !5645
  %12 = load i8*, i8** %evil_C, align 8, !dbg !5645
  %13 = bitcast i8* %12 to %struct.bContext*, !dbg !5642
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5646
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5647
  call void @RNA_property_enum_items(%struct.bContext* %13, %struct.PointerRNA* %14, %struct.PropertyRNA* %15, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !5648
  %16 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5649
  %17 = load i8*, i8** %value.addr, align 8, !dbg !5651
  %call3 = call zeroext i8 @RNA_enum_value_from_id(%struct.EnumPropertyItem* %16, i8* %17, i32* %ivalue), !dbg !5652
  %tobool4 = icmp ne i8 %call3, 0, !dbg !5652
  br i1 %tobool4, label %if.end9, label %if.then5, !dbg !5653

if.then5:                                         ; preds = %if.end
  %18 = load i8, i8* %free, align 1, !dbg !5654
  %tobool6 = icmp ne i8 %18, 0, !dbg !5654
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !5657

if.then7:                                         ; preds = %if.then5
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5658
  %20 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5660
  %21 = bitcast %struct.EnumPropertyItem* %20 to i8*, !dbg !5660
  call void %19(i8* %21), !dbg !5658
  br label %if.end8, !dbg !5661

if.end8:                                          ; preds = %if.then7, %if.then5
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5662
  %23 = load i8*, i8** %propname.addr, align 8, !dbg !5663
  call void @ui_item_disabled(%struct.uiLayout* %22, i8* %23), !dbg !5664
  %24 = load i8*, i8** %value.addr, align 8, !dbg !5665
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uiItemEnumR_string, i64 0, i64 0), i8* %24), !dbg !5665
  br label %if.end31, !dbg !5666

if.end9:                                          ; preds = %if.end
  store i32 0, i32* %a, align 4, !dbg !5667
  br label %for.cond, !dbg !5669

for.cond:                                         ; preds = %for.inc, %if.end9
  %25 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5670
  %26 = load i32, i32* %a, align 4, !dbg !5672
  %idxprom = sext i32 %26 to i64, !dbg !5670
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %25, i64 %idxprom, !dbg !5670
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 1, !dbg !5673
  %27 = load i8*, i8** %identifier, align 8, !dbg !5673
  %tobool10 = icmp ne i8* %27, null, !dbg !5674
  br i1 %tobool10, label %for.body, label %for.end, !dbg !5674

for.body:                                         ; preds = %for.cond
  %28 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5675
  %29 = load i32, i32* %a, align 4, !dbg !5678
  %idxprom11 = sext i32 %29 to i64, !dbg !5675
  %arrayidx12 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %28, i64 %idxprom11, !dbg !5675
  %value13 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx12, i32 0, i32 0, !dbg !5679
  %30 = load i32, i32* %value13, align 8, !dbg !5679
  %31 = load i32, i32* %ivalue, align 4, !dbg !5680
  %cmp14 = icmp eq i32 %30, %31, !dbg !5681
  br i1 %cmp14, label %if.then15, label %if.end28, !dbg !5682

if.then15:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %item_name, metadata !5683, metadata !DIExpression()), !dbg !5685
  %32 = load i8*, i8** %name.addr, align 8, !dbg !5686
  %tobool16 = icmp ne i8* %32, null, !dbg !5686
  br i1 %tobool16, label %cond.true, label %cond.false, !dbg !5686

cond.true:                                        ; preds = %if.then15
  %33 = load i8*, i8** %name.addr, align 8, !dbg !5687
  br label %cond.end, !dbg !5686

cond.false:                                       ; preds = %if.then15
  %34 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5688
  %35 = load i32, i32* %a, align 4, !dbg !5688
  %idxprom17 = sext i32 %35 to i64, !dbg !5688
  %arrayidx18 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %34, i64 %idxprom17, !dbg !5688
  %name19 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx18, i32 0, i32 3, !dbg !5688
  %36 = load i8*, i8** %name19, align 8, !dbg !5688
  br label %cond.end, !dbg !5686

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %33, %cond.true ], [ %36, %cond.false ], !dbg !5686
  store i8* %cond, i8** %item_name, align 8, !dbg !5685
  %37 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5689
  %38 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5690
  %39 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5691
  %40 = load i32, i32* %ivalue, align 4, !dbg !5692
  %41 = load i8*, i8** %item_name, align 8, !dbg !5693
  %42 = load i32, i32* %icon.addr, align 4, !dbg !5694
  %tobool20 = icmp ne i32 %42, 0, !dbg !5694
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5694

cond.true21:                                      ; preds = %cond.end
  %43 = load i32, i32* %icon.addr, align 4, !dbg !5695
  br label %cond.end26, !dbg !5694

cond.false22:                                     ; preds = %cond.end
  %44 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5696
  %45 = load i32, i32* %a, align 4, !dbg !5697
  %idxprom23 = sext i32 %45 to i64, !dbg !5696
  %arrayidx24 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %44, i64 %idxprom23, !dbg !5696
  %icon25 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx24, i32 0, i32 2, !dbg !5698
  %46 = load i32, i32* %icon25, align 8, !dbg !5698
  br label %cond.end26, !dbg !5694

cond.end26:                                       ; preds = %cond.false22, %cond.true21
  %cond27 = phi i32 [ %43, %cond.true21 ], [ %46, %cond.false22 ], !dbg !5694
  call void @uiItemFullR(%struct.uiLayout* %37, %struct.PointerRNA* %38, %struct.PropertyRNA* %39, i32 -2, i32 %40, i32 0, i8* %41, i32 %cond27), !dbg !5699
  br label %for.end, !dbg !5700

if.end28:                                         ; preds = %for.body
  br label %for.inc, !dbg !5701

for.inc:                                          ; preds = %if.end28
  %47 = load i32, i32* %a, align 4, !dbg !5702
  %inc = add nsw i32 %47, 1, !dbg !5702
  store i32 %inc, i32* %a, align 4, !dbg !5702
  br label %for.cond, !dbg !5703, !llvm.loop !5704

for.end:                                          ; preds = %cond.end26, %for.cond
  %48 = load i8, i8* %free, align 1, !dbg !5706
  %tobool29 = icmp ne i8 %48, 0, !dbg !5706
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !5708

if.then30:                                        ; preds = %for.end
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5709
  %50 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5711
  %51 = bitcast %struct.EnumPropertyItem* %50 to i8*, !dbg !5711
  call void %49(i8* %51), !dbg !5709
  br label %if.end31, !dbg !5712

if.end31:                                         ; preds = %if.then, %if.end8, %if.then30, %for.end
  ret void, !dbg !5713
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemsEnumR(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, i8* %propname) #0 !dbg !5714 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %bt = alloca %struct.uiBut*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %totitem = alloca i32, align 4
  %i = alloca i32, align 4
  %free = alloca i8, align 1
  %split = alloca %struct.uiLayout*, align 8
  %column = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !5721, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !5725, metadata !DIExpression()), !dbg !5726
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5727
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !5728
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !5728
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !5729
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !5729
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !5726
  call void @llvm.dbg.declare(metadata %struct.uiBut** %bt, metadata !5730, metadata !DIExpression()), !dbg !5731
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5732
  %4 = load i8*, i8** %propname.addr, align 8, !dbg !5733
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %3, i8* %4), !dbg !5734
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5735
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5736
  %tobool = icmp ne %struct.PropertyRNA* %5, null, !dbg !5736
  br i1 %tobool, label %if.end, label %if.then, !dbg !5738

if.then:                                          ; preds = %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5739
  %7 = load i8*, i8** %propname.addr, align 8, !dbg !5741
  call void @ui_item_disabled(%struct.uiLayout* %6, i8* %7), !dbg !5742
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5743
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %8, i32 0, i32 1, !dbg !5743
  %9 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5743
  %call2 = call i8* @RNA_struct_identifier(%struct.StructRNA* %9), !dbg !5743
  %10 = load i8*, i8** %propname.addr, align 8, !dbg !5743
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.uiItemsEnumR, i64 0, i64 0), i8* %call2, i8* %10), !dbg !5743
  br label %if.end42, !dbg !5744

if.end:                                           ; preds = %entry
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5745
  %call3 = call i32 @RNA_property_type(%struct.PropertyRNA* %11), !dbg !5747
  %cmp = icmp ne i32 %call3, 4, !dbg !5748
  br i1 %cmp, label %if.then4, label %if.else, !dbg !5749

if.then4:                                         ; preds = %if.end
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5750
  %type5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %12, i32 0, i32 1, !dbg !5750
  %13 = load %struct.StructRNA*, %struct.StructRNA** %type5, align 8, !dbg !5750
  %call6 = call i8* @RNA_struct_identifier(%struct.StructRNA* %13), !dbg !5750
  %14 = load i8*, i8** %propname.addr, align 8, !dbg !5750
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.uiItemsEnumR, i64 0, i64 0), i8* %call6, i8* %14), !dbg !5750
  br label %if.end42, !dbg !5752

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !5753, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !5756, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5758, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata i8* %free, metadata !5760, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !5762, metadata !DIExpression()), !dbg !5763
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5764
  %call7 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %15, float 0.000000e+00, i32 0), !dbg !5765
  store %struct.uiLayout* %call7, %struct.uiLayout** %split, align 8, !dbg !5763
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %column, metadata !5766, metadata !DIExpression()), !dbg !5767
  %16 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !5768
  %call8 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %16, i32 0), !dbg !5769
  store %struct.uiLayout* %call8, %struct.uiLayout** %column, align 8, !dbg !5767
  %17 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5770
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %17, i32 0, i32 48, !dbg !5771
  %18 = load i8*, i8** %evil_C, align 8, !dbg !5771
  %19 = bitcast i8* %18 to %struct.bContext*, !dbg !5770
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5772
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5773
  call void @RNA_property_enum_items_gettexted(%struct.bContext* %19, %struct.PointerRNA* %20, %struct.PropertyRNA* %21, %struct.EnumPropertyItem** %item, i32* %totitem, i8* %free), !dbg !5774
  store i32 0, i32* %i, align 4, !dbg !5775
  br label %for.cond, !dbg !5777

for.cond:                                         ; preds = %for.inc, %if.else
  %22 = load i32, i32* %i, align 4, !dbg !5778
  %23 = load i32, i32* %totitem, align 4, !dbg !5780
  %cmp9 = icmp slt i32 %22, %23, !dbg !5781
  br i1 %cmp9, label %for.body, label %for.end, !dbg !5782

for.body:                                         ; preds = %for.cond
  %24 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5783
  %25 = load i32, i32* %i, align 4, !dbg !5786
  %idxprom = sext i32 %25 to i64, !dbg !5783
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %24, i64 %idxprom, !dbg !5783
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 1, !dbg !5787
  %26 = load i8*, i8** %identifier, align 8, !dbg !5787
  %arrayidx10 = getelementptr inbounds i8, i8* %26, i64 0, !dbg !5783
  %27 = load i8, i8* %arrayidx10, align 1, !dbg !5783
  %tobool11 = icmp ne i8 %27, 0, !dbg !5783
  br i1 %tobool11, label %if.then12, label %if.else19, !dbg !5788

if.then12:                                        ; preds = %for.body
  %28 = load %struct.uiLayout*, %struct.uiLayout** %column, align 8, !dbg !5789
  %29 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5791
  %30 = load i32, i32* %i, align 4, !dbg !5792
  %idxprom13 = sext i32 %30 to i64, !dbg !5791
  %arrayidx14 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %29, i64 %idxprom13, !dbg !5791
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx14, i32 0, i32 3, !dbg !5793
  %31 = load i8*, i8** %name, align 8, !dbg !5793
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5794
  %33 = load i8*, i8** %propname.addr, align 8, !dbg !5795
  %34 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5796
  %35 = load i32, i32* %i, align 4, !dbg !5797
  %idxprom15 = sext i32 %35 to i64, !dbg !5796
  %arrayidx16 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %34, i64 %idxprom15, !dbg !5796
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx16, i32 0, i32 0, !dbg !5798
  %36 = load i32, i32* %value, align 8, !dbg !5798
  call void @uiItemEnumR(%struct.uiLayout* %28, i8* %31, i32 0, %struct.PointerRNA* %32, i8* %33, i32 %36), !dbg !5799
  %37 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5800
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %37, i32 0, i32 2, !dbg !5801
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 1, !dbg !5802
  %38 = load i8*, i8** %last, align 8, !dbg !5802
  %39 = bitcast i8* %38 to %struct.uiBut*, !dbg !5800
  %40 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5803
  %41 = load i32, i32* %i, align 4, !dbg !5804
  %idxprom17 = sext i32 %41 to i64, !dbg !5803
  %arrayidx18 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %40, i64 %idxprom17, !dbg !5803
  call void @ui_but_tip_from_enum_item(%struct.uiBut* %39, %struct.EnumPropertyItem* %arrayidx18), !dbg !5805
  br label %if.end38, !dbg !5806

if.else19:                                        ; preds = %for.body
  %42 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5807
  %43 = load i32, i32* %i, align 4, !dbg !5810
  %idxprom20 = sext i32 %43 to i64, !dbg !5807
  %arrayidx21 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %42, i64 %idxprom20, !dbg !5807
  %name22 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx21, i32 0, i32 3, !dbg !5811
  %44 = load i8*, i8** %name22, align 8, !dbg !5811
  %tobool23 = icmp ne i8* %44, null, !dbg !5807
  br i1 %tobool23, label %if.then24, label %if.else36, !dbg !5812

if.then24:                                        ; preds = %if.else19
  %45 = load i32, i32* %i, align 4, !dbg !5813
  %cmp25 = icmp ne i32 %45, 0, !dbg !5816
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !5817

if.then26:                                        ; preds = %if.then24
  %46 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !5818
  %call27 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %46, i32 0), !dbg !5820
  store %struct.uiLayout* %call27, %struct.uiLayout** %column, align 8, !dbg !5821
  %47 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5822
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %47, i32 0, i32 27, !dbg !5823
  %48 = load i32, i32* %flag, align 8, !dbg !5824
  %or = or i32 %48, 2048, !dbg !5824
  store i32 %or, i32* %flag, align 8, !dbg !5824
  br label %if.end28, !dbg !5825

if.end28:                                         ; preds = %if.then26, %if.then24
  %49 = load %struct.uiLayout*, %struct.uiLayout** %column, align 8, !dbg !5826
  %50 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5827
  %51 = load i32, i32* %i, align 4, !dbg !5828
  %idxprom29 = sext i32 %51 to i64, !dbg !5827
  %arrayidx30 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %50, i64 %idxprom29, !dbg !5827
  %name31 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx30, i32 0, i32 3, !dbg !5829
  %52 = load i8*, i8** %name31, align 8, !dbg !5829
  call void @uiItemL(%struct.uiLayout* %49, i8* %52, i32 0), !dbg !5830
  %53 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5831
  %buttons32 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %53, i32 0, i32 2, !dbg !5832
  %last33 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons32, i32 0, i32 1, !dbg !5833
  %54 = load i8*, i8** %last33, align 8, !dbg !5833
  %55 = bitcast i8* %54 to %struct.uiBut*, !dbg !5831
  store %struct.uiBut* %55, %struct.uiBut** %bt, align 8, !dbg !5834
  %56 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5835
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 3, !dbg !5836
  store i32 2, i32* %drawflag, align 4, !dbg !5837
  %57 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5838
  %58 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5839
  %59 = load i32, i32* %i, align 4, !dbg !5840
  %idxprom34 = sext i32 %59 to i64, !dbg !5839
  %arrayidx35 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %58, i64 %idxprom34, !dbg !5839
  call void @ui_but_tip_from_enum_item(%struct.uiBut* %57, %struct.EnumPropertyItem* %arrayidx35), !dbg !5841
  br label %if.end37, !dbg !5842

if.else36:                                        ; preds = %if.else19
  %60 = load %struct.uiLayout*, %struct.uiLayout** %column, align 8, !dbg !5843
  call void @uiItemS(%struct.uiLayout* %60), !dbg !5844
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.end28
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then12
  br label %for.inc, !dbg !5845

for.inc:                                          ; preds = %if.end38
  %61 = load i32, i32* %i, align 4, !dbg !5846
  %inc = add nsw i32 %61, 1, !dbg !5846
  store i32 %inc, i32* %i, align 4, !dbg !5846
  br label %for.cond, !dbg !5847, !llvm.loop !5848

for.end:                                          ; preds = %for.cond
  %62 = load i8, i8* %free, align 1, !dbg !5850
  %tobool39 = icmp ne i8 %62, 0, !dbg !5850
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !5852

if.then40:                                        ; preds = %for.end
  %63 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5853
  %64 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !5855
  %65 = bitcast %struct.EnumPropertyItem* %64 to i8*, !dbg !5855
  call void %63(i8* %65), !dbg !5853
  br label %if.end41, !dbg !5856

if.end41:                                         ; preds = %if.then40, %for.end
  br label %if.end42

if.end42:                                         ; preds = %if.then, %if.then4, %if.end41
  ret void, !dbg !5857
}

declare dso_local %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA*, %struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @search_id_collection(%struct.StructRNA* %ptype, %struct.PointerRNA* %ptr, %struct.PropertyRNA** %prop) #0 !dbg !5858 {
entry:
  %ptype.addr = alloca %struct.StructRNA*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA**, align 8
  %srna = alloca %struct.StructRNA*, align 8
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %iprop = alloca %struct.PropertyRNA*, align 8
  store %struct.StructRNA* %ptype, %struct.StructRNA** %ptype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %ptype.addr, metadata !5861, metadata !DIExpression()), !dbg !5862
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5863, metadata !DIExpression()), !dbg !5864
  store %struct.PropertyRNA** %prop, %struct.PropertyRNA*** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %prop.addr, metadata !5865, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna, metadata !5867, metadata !DIExpression()), !dbg !5868
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !5869
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5870
  call void @RNA_main_pointer_create(%struct.Main* %0, %struct.PointerRNA* %1), !dbg !5871
  %2 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !5872
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %2, align 8, !dbg !5873
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !5874, metadata !DIExpression()), !dbg !5916
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5917
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5917
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 1, !dbg !5917
  %5 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5917
  %call = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %5), !dbg !5917
  call void @RNA_property_collection_begin(%struct.PointerRNA* %3, %struct.PropertyRNA* %call, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5917
  br label %for.cond, !dbg !5917

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !5919
  %6 = load i32, i32* %valid, align 8, !dbg !5919
  %tobool = icmp ne i32 %6, 0, !dbg !5917
  br i1 %tobool, label %for.body, label %for.end, !dbg !5917

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iprop, metadata !5921, metadata !DIExpression()), !dbg !5923
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !5923
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr1, i32 0, i32 2, !dbg !5923
  %7 = load i8*, i8** %data, align 8, !dbg !5923
  %8 = bitcast i8* %7 to %struct.PropertyRNA*, !dbg !5923
  store %struct.PropertyRNA* %8, %struct.PropertyRNA** %iprop, align 8, !dbg !5923
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !5924
  %call2 = call i32 @RNA_property_type(%struct.PropertyRNA* %9), !dbg !5927
  %cmp = icmp eq i32 %call2, 6, !dbg !5928
  br i1 %cmp, label %if.then, label %if.end6, !dbg !5929

if.then:                                          ; preds = %for.body
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5930
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !5932
  %call3 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %10, %struct.PropertyRNA* %11), !dbg !5933
  store %struct.StructRNA* %call3, %struct.StructRNA** %srna, align 8, !dbg !5934
  %12 = load %struct.StructRNA*, %struct.StructRNA** %ptype.addr, align 8, !dbg !5935
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5937
  %cmp4 = icmp eq %struct.StructRNA* %12, %13, !dbg !5938
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !5939

if.then5:                                         ; preds = %if.then
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iprop, align 8, !dbg !5940
  %15 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %prop.addr, align 8, !dbg !5942
  store %struct.PropertyRNA* %14, %struct.PropertyRNA** %15, align 8, !dbg !5943
  br label %for.end, !dbg !5944

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !5945

if.end6:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !5946

for.inc:                                          ; preds = %if.end6
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5919
  br label %for.cond, !dbg !5919, !llvm.loop !5947

for.end:                                          ; preds = %if.then5, %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5949
  ret void, !dbg !5950
}

declare dso_local zeroext i8 @RNA_property_is_unlink(%struct.PropertyRNA*) #2

declare dso_local void @uiButSetSearchFunc(%struct.uiBut*, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @rna_search_cb(%struct.bContext* %C, i8* %arg_but, i8* %str, %struct.uiSearchItems* %items) #0 !dbg !5951 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arg_but.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %items.addr = alloca %struct.uiSearchItems*, align 8
  %but = alloca %struct.uiBut*, align 8
  %name = alloca i8*, align 8
  %i = alloca i32, align 4
  %iconid = alloca i32, align 4
  %flag = alloca i32, align 4
  %items_list = alloca %struct.ListBase*, align 8
  %cis = alloca %struct.CollItemSearch*, align 8
  %skip_filter = alloca i32, align 4
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  %id23 = alloca %struct.ID*, align 8
  %name_ui = alloca [66 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5952, metadata !DIExpression()), !dbg !5953
  store i8* %arg_but, i8** %arg_but.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_but.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5956, metadata !DIExpression()), !dbg !5957
  store %struct.uiSearchItems* %items, %struct.uiSearchItems** %items.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiSearchItems** %items.addr, metadata !5958, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5960, metadata !DIExpression()), !dbg !5961
  %0 = load i8*, i8** %arg_but.addr, align 8, !dbg !5962
  %1 = bitcast i8* %0 to %struct.uiBut*, !dbg !5962
  store %struct.uiBut* %1, %struct.uiBut** %but, align 8, !dbg !5961
  call void @llvm.dbg.declare(metadata i8** %name, metadata !5963, metadata !DIExpression()), !dbg !5964
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5965, metadata !DIExpression()), !dbg !5966
  store i32 0, i32* %i, align 4, !dbg !5966
  call void @llvm.dbg.declare(metadata i32* %iconid, metadata !5967, metadata !DIExpression()), !dbg !5968
  store i32 0, i32* %iconid, align 4, !dbg !5968
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !5969, metadata !DIExpression()), !dbg !5970
  %2 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5971
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 55, !dbg !5972
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !5972
  %call = call i32 @RNA_property_flag(%struct.PropertyRNA* %3), !dbg !5973
  store i32 %call, i32* %flag, align 4, !dbg !5970
  call void @llvm.dbg.declare(metadata %struct.ListBase** %items_list, metadata !5974, metadata !DIExpression()), !dbg !5975
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5976
  %call1 = call i8* %4(i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0)), !dbg !5976
  %5 = bitcast i8* %call1 to %struct.ListBase*, !dbg !5976
  store %struct.ListBase* %5, %struct.ListBase** %items_list, align 8, !dbg !5975
  call void @llvm.dbg.declare(metadata %struct.CollItemSearch** %cis, metadata !5977, metadata !DIExpression()), !dbg !5978
  call void @llvm.dbg.declare(metadata i32* %skip_filter, metadata !5979, metadata !DIExpression()), !dbg !5980
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5981
  %changed = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 48, !dbg !5982
  %7 = load i8, i8* %changed, align 1, !dbg !5982
  %tobool = icmp ne i8 %7, 0, !dbg !5983
  %lnot = xor i1 %tobool, true, !dbg !5983
  %lnot.ext = zext i1 %lnot to i32, !dbg !5983
  store i32 %lnot.ext, i32* %skip_filter, align 4, !dbg !5980
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !5984, metadata !DIExpression()), !dbg !5986
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5987
  %rnasearchpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 57, !dbg !5987
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5987
  %rnasearchprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 58, !dbg !5987
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnasearchprop, align 8, !dbg !5987
  call void @RNA_property_collection_begin(%struct.PointerRNA* %rnasearchpoin, %struct.PropertyRNA* %10, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5987
  br label %for.cond, !dbg !5987

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !5989
  %11 = load i32, i32* %valid, align 8, !dbg !5989
  %tobool2 = icmp ne i32 %11, 0, !dbg !5987
  br i1 %tobool2, label %for.body, label %for.end, !dbg !5987

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !5991, metadata !DIExpression()), !dbg !5993
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !5993
  %12 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !5993
  %13 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !5993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false), !dbg !5993
  %14 = load i32, i32* %flag, align 4, !dbg !5994
  %and = and i32 %14, 1048576, !dbg !5997
  %tobool3 = icmp ne i32 %and, 0, !dbg !5997
  br i1 %tobool3, label %if.then, label %if.end6, !dbg !5998

if.then:                                          ; preds = %for.body
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %itemptr, i32 0, i32 2, !dbg !5999
  %15 = load i8*, i8** %data, align 8, !dbg !5999
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6001
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 54, !dbg !6002
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 0, !dbg !6003
  %data4 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6004
  %17 = load i8*, i8** %data4, align 8, !dbg !6004
  %cmp = icmp eq i8* %15, %17, !dbg !6005
  br i1 %cmp, label %if.then5, label %if.end, !dbg !6006

if.then5:                                         ; preds = %if.then
  br label %for.inc, !dbg !6007

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !6004

if.end6:                                          ; preds = %if.end, %for.body
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6008
  %rnaprop7 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 55, !dbg !6010
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop7, align 8, !dbg !6010
  %call8 = call i32 @RNA_property_type(%struct.PropertyRNA* %19), !dbg !6011
  %cmp9 = icmp eq i32 %call8, 5, !dbg !6012
  br i1 %cmp9, label %if.then10, label %if.end17, !dbg !6013

if.then10:                                        ; preds = %if.end6
  %20 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6014
  %rnapoin11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 54, !dbg !6017
  %21 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6018
  %rnaprop12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 55, !dbg !6019
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop12, align 8, !dbg !6019
  %call13 = call i32 @RNA_property_pointer_poll(%struct.PointerRNA* %rnapoin11, %struct.PropertyRNA* %22, %struct.PointerRNA* %itemptr), !dbg !6020
  %cmp14 = icmp eq i32 %call13, 0, !dbg !6021
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !6022

if.then15:                                        ; preds = %if.then10
  br label %for.inc, !dbg !6023

if.end16:                                         ; preds = %if.then10
  br label %if.end17, !dbg !6024

if.end17:                                         ; preds = %if.end16, %if.end6
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %itemptr, i32 0, i32 1, !dbg !6025
  %23 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !6025
  %tobool18 = icmp ne %struct.StructRNA* %23, null, !dbg !6027
  br i1 %tobool18, label %land.lhs.true, label %if.else, !dbg !6028

land.lhs.true:                                    ; preds = %if.end17
  %type19 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %itemptr, i32 0, i32 1, !dbg !6029
  %24 = load %struct.StructRNA*, %struct.StructRNA** %type19, align 8, !dbg !6029
  %call20 = call zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %24), !dbg !6030
  %conv = zext i8 %call20 to i32, !dbg !6030
  %tobool21 = icmp ne i32 %conv, 0, !dbg !6030
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !6031

if.then22:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ID** %id23, metadata !6032, metadata !DIExpression()), !dbg !6034
  %data24 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %itemptr, i32 0, i32 2, !dbg !6035
  %25 = load i8*, i8** %data24, align 8, !dbg !6035
  %26 = bitcast i8* %25 to %struct.ID*, !dbg !6036
  store %struct.ID* %26, %struct.ID** %id23, align 8, !dbg !6034
  call void @llvm.dbg.declare(metadata [66 x i8]* %name_ui, metadata !6037, metadata !DIExpression()), !dbg !6038
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name_ui, i64 0, i64 0, !dbg !6039
  %27 = load %struct.ID*, %struct.ID** %id23, align 8, !dbg !6040
  %name25 = getelementptr inbounds %struct.ID, %struct.ID* %27, i32 0, i32 4, !dbg !6041
  %arraydecay26 = getelementptr inbounds [66 x i8], [66 x i8]* %name25, i64 0, i64 0, !dbg !6040
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay26, i64 2, !dbg !6042
  %call27 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %add.ptr, i64 66), !dbg !6043
  %arraydecay28 = getelementptr inbounds [66 x i8], [66 x i8]* %name_ui, i64 0, i64 0, !dbg !6044
  %call29 = call i8* @BLI_strdup(i8* %arraydecay28), !dbg !6045
  store i8* %call29, i8** %name, align 8, !dbg !6046
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6047
  %29 = load %struct.ID*, %struct.ID** %id23, align 8, !dbg !6048
  %call30 = call i32 @ui_id_icon_get(%struct.bContext* %28, %struct.ID* %29, i8 zeroext 0), !dbg !6049
  store i32 %call30, i32* %iconid, align 4, !dbg !6050
  br label %if.end32, !dbg !6051

if.else:                                          ; preds = %land.lhs.true, %if.end17
  %call31 = call i8* @RNA_struct_name_get_alloc(%struct.PointerRNA* %itemptr, i8* null, i32 0, i32* null), !dbg !6052
  store i8* %call31, i8** %name, align 8, !dbg !6054
  store i32 0, i32* %iconid, align 4, !dbg !6055
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then22
  %30 = load i8*, i8** %name, align 8, !dbg !6056
  %tobool33 = icmp ne i8* %30, null, !dbg !6056
  br i1 %tobool33, label %if.then34, label %if.end44, !dbg !6058

if.then34:                                        ; preds = %if.end32
  %31 = load i32, i32* %skip_filter, align 4, !dbg !6059
  %tobool35 = icmp ne i32 %31, 0, !dbg !6059
  br i1 %tobool35, label %if.then38, label %lor.lhs.false, !dbg !6062

lor.lhs.false:                                    ; preds = %if.then34
  %32 = load i8*, i8** %name, align 8, !dbg !6063
  %33 = load i8*, i8** %str.addr, align 8, !dbg !6064
  %call36 = call i8* @BLI_strcasestr(i8* %32, i8* %33), !dbg !6065
  %tobool37 = icmp ne i8* %call36, null, !dbg !6065
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !6066

if.then38:                                        ; preds = %lor.lhs.false, %if.then34
  %34 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6067
  %call39 = call i8* %34(i64 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0)), !dbg !6067
  %35 = bitcast i8* %call39 to %struct.CollItemSearch*, !dbg !6067
  store %struct.CollItemSearch* %35, %struct.CollItemSearch** %cis, align 8, !dbg !6069
  %36 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !6070
  %37 = load i8*, i8** %name, align 8, !dbg !6071
  %call40 = call i8* %36(i8* %37), !dbg !6070
  %38 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6072
  %name41 = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %38, i32 0, i32 2, !dbg !6073
  store i8* %call40, i8** %name41, align 8, !dbg !6074
  %39 = load i32, i32* %i, align 4, !dbg !6075
  %40 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6076
  %index = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %40, i32 0, i32 3, !dbg !6077
  store i32 %39, i32* %index, align 8, !dbg !6078
  %41 = load i32, i32* %iconid, align 4, !dbg !6079
  %42 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6080
  %iconid42 = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %42, i32 0, i32 4, !dbg !6081
  store i32 %41, i32* %iconid42, align 4, !dbg !6082
  %43 = load %struct.ListBase*, %struct.ListBase** %items_list, align 8, !dbg !6083
  %44 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6084
  %45 = bitcast %struct.CollItemSearch* %44 to i8*, !dbg !6084
  call void @BLI_addtail(%struct.ListBase* %43, i8* %45), !dbg !6085
  br label %if.end43, !dbg !6086

if.end43:                                         ; preds = %if.then38, %lor.lhs.false
  %46 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6087
  %47 = load i8*, i8** %name, align 8, !dbg !6088
  call void %46(i8* %47), !dbg !6087
  br label %if.end44, !dbg !6089

if.end44:                                         ; preds = %if.end43, %if.end32
  %48 = load i32, i32* %i, align 4, !dbg !6090
  %inc = add nsw i32 %48, 1, !dbg !6090
  store i32 %inc, i32* %i, align 4, !dbg !6090
  br label %for.inc, !dbg !6091

for.inc:                                          ; preds = %if.end44, %if.then15, %if.then5
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5989
  br label %for.cond, !dbg !5989, !llvm.loop !6092

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !6094
  %49 = load %struct.ListBase*, %struct.ListBase** %items_list, align 8, !dbg !6095
  call void @BLI_sortlist(%struct.ListBase* %49, i32 (i8*, i8*)* @sort_search_items_list), !dbg !6096
  %50 = load %struct.ListBase*, %struct.ListBase** %items_list, align 8, !dbg !6097
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %50, i32 0, i32 0, !dbg !6099
  %51 = load i8*, i8** %first, align 8, !dbg !6099
  %52 = bitcast i8* %51 to %struct.CollItemSearch*, !dbg !6097
  store %struct.CollItemSearch* %52, %struct.CollItemSearch** %cis, align 8, !dbg !6100
  br label %for.cond45, !dbg !6101

for.cond45:                                       ; preds = %for.inc58, %for.end
  %53 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6102
  %tobool46 = icmp ne %struct.CollItemSearch* %53, null, !dbg !6104
  br i1 %tobool46, label %for.body47, label %for.end59, !dbg !6104

for.body47:                                       ; preds = %for.cond45
  %54 = load %struct.uiSearchItems*, %struct.uiSearchItems** %items.addr, align 8, !dbg !6105
  %55 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6108
  %name48 = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %55, i32 0, i32 2, !dbg !6109
  %56 = load i8*, i8** %name48, align 8, !dbg !6109
  %57 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6110
  %index49 = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %57, i32 0, i32 3, !dbg !6110
  %58 = load i32, i32* %index49, align 8, !dbg !6110
  %conv50 = sext i32 %58 to i64, !dbg !6110
  %59 = inttoptr i64 %conv50 to i8*, !dbg !6110
  %60 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6111
  %iconid51 = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %60, i32 0, i32 4, !dbg !6112
  %61 = load i32, i32* %iconid51, align 4, !dbg !6112
  %call52 = call zeroext i8 @uiSearchItemAdd(%struct.uiSearchItems* %54, i8* %56, i8* %59, i32 %61), !dbg !6113
  %conv53 = zext i8 %call52 to i32, !dbg !6113
  %cmp54 = icmp eq i32 0, %conv53, !dbg !6114
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !6115

if.then56:                                        ; preds = %for.body47
  br label %for.end59, !dbg !6116

if.end57:                                         ; preds = %for.body47
  br label %for.inc58, !dbg !6118

for.inc58:                                        ; preds = %if.end57
  %62 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6119
  %next = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %62, i32 0, i32 0, !dbg !6120
  %63 = load %struct.CollItemSearch*, %struct.CollItemSearch** %next, align 8, !dbg !6120
  store %struct.CollItemSearch* %63, %struct.CollItemSearch** %cis, align 8, !dbg !6121
  br label %for.cond45, !dbg !6122, !llvm.loop !6123

for.end59:                                        ; preds = %if.then56, %for.cond45
  %64 = load %struct.ListBase*, %struct.ListBase** %items_list, align 8, !dbg !6125
  %first60 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %64, i32 0, i32 0, !dbg !6127
  %65 = load i8*, i8** %first60, align 8, !dbg !6127
  %66 = bitcast i8* %65 to %struct.CollItemSearch*, !dbg !6125
  store %struct.CollItemSearch* %66, %struct.CollItemSearch** %cis, align 8, !dbg !6128
  br label %for.cond61, !dbg !6129

for.cond61:                                       ; preds = %for.inc65, %for.end59
  %67 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6130
  %tobool62 = icmp ne %struct.CollItemSearch* %67, null, !dbg !6132
  br i1 %tobool62, label %for.body63, label %for.end67, !dbg !6132

for.body63:                                       ; preds = %for.cond61
  %68 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6133
  %69 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6135
  %name64 = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %69, i32 0, i32 2, !dbg !6136
  %70 = load i8*, i8** %name64, align 8, !dbg !6136
  call void %68(i8* %70), !dbg !6133
  br label %for.inc65, !dbg !6137

for.inc65:                                        ; preds = %for.body63
  %71 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis, align 8, !dbg !6138
  %next66 = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %71, i32 0, i32 0, !dbg !6139
  %72 = load %struct.CollItemSearch*, %struct.CollItemSearch** %next66, align 8, !dbg !6139
  store %struct.CollItemSearch* %72, %struct.CollItemSearch** %cis, align 8, !dbg !6140
  br label %for.cond61, !dbg !6141, !llvm.loop !6142

for.end67:                                        ; preds = %for.cond61
  %73 = load %struct.ListBase*, %struct.ListBase** %items_list, align 8, !dbg !6144
  call void @BLI_freelistN(%struct.ListBase* %73), !dbg !6145
  %74 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6146
  %75 = load %struct.ListBase*, %struct.ListBase** %items_list, align 8, !dbg !6147
  %76 = bitcast %struct.ListBase* %75 to i8*, !dbg !6147
  call void %74(i8* %76), !dbg !6146
  ret void, !dbg !6148
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemPointerR(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, i8* %propname, %struct.PointerRNA* %searchptr, i8* %searchpropname, i8* %name, i32 %icon) #0 !dbg !6149 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %searchptr.addr = alloca %struct.PointerRNA*, align 8
  %searchpropname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  %searchprop = alloca %struct.PropertyRNA*, align 8
  %type = alloca i32, align 4
  %but = alloca %struct.uiBut*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %icontype = alloca %struct.StructRNA*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %namestr = alloca [128 x i8], align 16
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6152, metadata !DIExpression()), !dbg !6153
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !6156, metadata !DIExpression()), !dbg !6157
  store %struct.PointerRNA* %searchptr, %struct.PointerRNA** %searchptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %searchptr.addr, metadata !6158, metadata !DIExpression()), !dbg !6159
  store i8* %searchpropname, i8** %searchpropname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %searchpropname.addr, metadata !6160, metadata !DIExpression()), !dbg !6161
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6162, metadata !DIExpression()), !dbg !6163
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6164, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %searchprop, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6170, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6172, metadata !DIExpression()), !dbg !6173
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6174, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %icontype, metadata !6176, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata i32* %h, metadata !6180, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.declare(metadata [128 x i8]* %namestr, metadata !6182, metadata !DIExpression()), !dbg !6183
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6184
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !6185
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !6186
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6187
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6188
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !6188
  br i1 %tobool, label %if.end, label %if.then, !dbg !6190

if.then:                                          ; preds = %entry
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6191
  %type1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 1, !dbg !6191
  %4 = load %struct.StructRNA*, %struct.StructRNA** %type1, align 8, !dbg !6191
  %call2 = call i8* @RNA_struct_identifier(%struct.StructRNA* %4), !dbg !6191
  %5 = load i8*, i8** %propname.addr, align 8, !dbg !6191
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.uiItemPointerR, i64 0, i64 0), i8* %call2, i8* %5), !dbg !6191
  br label %return, !dbg !6193

if.end:                                           ; preds = %entry
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6194
  %call3 = call i32 @RNA_property_type(%struct.PropertyRNA* %6), !dbg !6195
  store i32 %call3, i32* %type, align 4, !dbg !6196
  %7 = load i32, i32* %type, align 4, !dbg !6197
  %cmp = icmp eq i32 %7, 5, !dbg !6197
  br i1 %cmp, label %if.end8, label %lor.lhs.false, !dbg !6197

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %type, align 4, !dbg !6197
  %cmp4 = icmp eq i32 %8, 3, !dbg !6197
  br i1 %cmp4, label %if.end8, label %lor.lhs.false5, !dbg !6197

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %type, align 4, !dbg !6197
  %cmp6 = icmp eq i32 %9, 4, !dbg !6197
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !6199

if.then7:                                         ; preds = %lor.lhs.false5
  %10 = load i8*, i8** %propname.addr, align 8, !dbg !6200
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.uiItemPointerR, i64 0, i64 0), i8* %10), !dbg !6200
  br label %return, !dbg !6202

if.end8:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %searchptr.addr, align 8, !dbg !6203
  %12 = load i8*, i8** %searchpropname.addr, align 8, !dbg !6204
  %call9 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %11, i8* %12), !dbg !6205
  store %struct.PropertyRNA* %call9, %struct.PropertyRNA** %searchprop, align 8, !dbg !6206
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %searchprop, align 8, !dbg !6207
  %tobool10 = icmp ne %struct.PropertyRNA* %13, null, !dbg !6207
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !6209

if.then11:                                        ; preds = %if.end8
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %searchptr.addr, align 8, !dbg !6210
  %type12 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %14, i32 0, i32 1, !dbg !6210
  %15 = load %struct.StructRNA*, %struct.StructRNA** %type12, align 8, !dbg !6210
  %call13 = call i8* @RNA_struct_identifier(%struct.StructRNA* %15), !dbg !6210
  %16 = load i8*, i8** %searchpropname.addr, align 8, !dbg !6210
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.uiItemPointerR, i64 0, i64 0), i8* %call13, i8* %16), !dbg !6210
  br label %return, !dbg !6212

if.else:                                          ; preds = %if.end8
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %searchprop, align 8, !dbg !6213
  %call14 = call i32 @RNA_property_type(%struct.PropertyRNA* %17), !dbg !6215
  %cmp15 = icmp ne i32 %call14, 6, !dbg !6216
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !6217

if.then16:                                        ; preds = %if.else
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %searchptr.addr, align 8, !dbg !6218
  %type17 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %18, i32 0, i32 1, !dbg !6218
  %19 = load %struct.StructRNA*, %struct.StructRNA** %type17, align 8, !dbg !6218
  %call18 = call i8* @RNA_struct_identifier(%struct.StructRNA* %19), !dbg !6218
  %20 = load i8*, i8** %searchpropname.addr, align 8, !dbg !6218
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.uiItemPointerR, i64 0, i64 0), i8* %call18, i8* %20), !dbg !6218
  br label %return, !dbg !6220

if.end19:                                         ; preds = %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19
  %21 = load i32, i32* %icon.addr, align 4, !dbg !6221
  %cmp21 = icmp eq i32 %21, 0, !dbg !6223
  br i1 %cmp21, label %if.then22, label %if.end30, !dbg !6224

if.then22:                                        ; preds = %if.end20
  %22 = load i32, i32* %type, align 4, !dbg !6225
  %cmp23 = icmp eq i32 %22, 5, !dbg !6228
  br i1 %cmp23, label %if.then24, label %if.else26, !dbg !6229

if.then24:                                        ; preds = %if.then22
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6230
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6231
  %call25 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %23, %struct.PropertyRNA* %24), !dbg !6232
  store %struct.StructRNA* %call25, %struct.StructRNA** %icontype, align 8, !dbg !6233
  br label %if.end28, !dbg !6234

if.else26:                                        ; preds = %if.then22
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %searchptr.addr, align 8, !dbg !6235
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %searchprop, align 8, !dbg !6236
  %call27 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %25, %struct.PropertyRNA* %26), !dbg !6237
  store %struct.StructRNA* %call27, %struct.StructRNA** %icontype, align 8, !dbg !6238
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  %27 = load %struct.StructRNA*, %struct.StructRNA** %icontype, align 8, !dbg !6239
  %call29 = call i32 @RNA_struct_ui_icon(%struct.StructRNA* %27), !dbg !6240
  store i32 %call29, i32* %icon.addr, align 4, !dbg !6241
  br label %if.end30, !dbg !6242

if.end30:                                         ; preds = %if.end28, %if.end20
  %28 = load i8*, i8** %name.addr, align 8, !dbg !6243
  %tobool31 = icmp ne i8* %28, null, !dbg !6243
  br i1 %tobool31, label %if.end34, label %if.then32, !dbg !6245

if.then32:                                        ; preds = %if.end30
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6246
  %call33 = call i8* @RNA_property_ui_name(%struct.PropertyRNA* %29), !dbg !6247
  store i8* %call33, i8** %name.addr, align 8, !dbg !6248
  br label %if.end34, !dbg !6249

if.end34:                                         ; preds = %if.then32, %if.end30
  %30 = load i8*, i8** %name.addr, align 8, !dbg !6250
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %namestr, i64 0, i64 0, !dbg !6251
  %call35 = call i8* @ui_item_name_add_colon(i8* %30, i8* %arraydecay), !dbg !6252
  store i8* %call35, i8** %name.addr, align 8, !dbg !6253
  %31 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6254
  %call36 = call %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %31), !dbg !6255
  store %struct.uiBlock* %call36, %struct.uiBlock** %block, align 8, !dbg !6256
  %32 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6257
  %33 = load i8*, i8** %name.addr, align 8, !dbg !6258
  %34 = load i32, i32* %icon.addr, align 4, !dbg !6259
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6260
  %36 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6261
  call void @ui_item_rna_size(%struct.uiLayout* %32, i8* %33, i32 %34, %struct.PointerRNA* %35, %struct.PropertyRNA* %36, i32 0, i32 0, i32* %w, i32* %h), !dbg !6262
  %37 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6263
  %conv = sext i16 %37 to i32, !dbg !6263
  %38 = load i32, i32* %w, align 4, !dbg !6264
  %add = add nsw i32 %38, %conv, !dbg !6264
  store i32 %add, i32* %w, align 4, !dbg !6264
  %39 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6265
  %40 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6266
  %41 = load i8*, i8** %name.addr, align 8, !dbg !6267
  %42 = load i32, i32* %icon.addr, align 4, !dbg !6268
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6269
  %44 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6270
  %45 = load i32, i32* %w, align 4, !dbg !6271
  %46 = load i32, i32* %h, align 4, !dbg !6272
  %call37 = call %struct.uiBut* @ui_item_with_label(%struct.uiLayout* %39, %struct.uiBlock* %40, i8* %41, i32 %42, %struct.PointerRNA* %43, %struct.PropertyRNA* %44, i32 0, i32 0, i32 0, i32 %45, i32 %46, i32 0), !dbg !6273
  store %struct.uiBut* %call37, %struct.uiBut** %but, align 8, !dbg !6274
  %47 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6275
  %48 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6276
  %49 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6277
  %50 = load %struct.PointerRNA*, %struct.PointerRNA** %searchptr.addr, align 8, !dbg !6278
  %51 = load %struct.PropertyRNA*, %struct.PropertyRNA** %searchprop, align 8, !dbg !6279
  call void @ui_but_add_search(%struct.uiBut* %47, %struct.PointerRNA* %48, %struct.PropertyRNA* %49, %struct.PointerRNA* %50, %struct.PropertyRNA* %51), !dbg !6280
  br label %return, !dbg !6281

return:                                           ; preds = %if.end34, %if.then16, %if.then11, %if.then7, %if.then
  ret void, !dbg !6281
}

declare dso_local i32 @RNA_struct_ui_icon(%struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %layout) #0 !dbg !6282 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6287
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !6288
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !6288
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !6289
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6289
  ret %struct.uiBlock* %2, !dbg !6290
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemM(%struct.uiLayout* %layout, %struct.bContext* %UNUSED_C, i8* %menuname, i8* %name, i32 %icon) #0 !dbg !6291 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %menuname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %mt = alloca %struct.MenuType*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  store i8* %menuname, i8** %menuname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %menuname.addr, metadata !6298, metadata !DIExpression()), !dbg !6299
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6300, metadata !DIExpression()), !dbg !6301
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6302, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.declare(metadata %struct.MenuType** %mt, metadata !6304, metadata !DIExpression()), !dbg !6305
  %0 = load i8*, i8** %menuname.addr, align 8, !dbg !6306
  %call = call %struct.MenuType* @WM_menutype_find(i8* %0, i8 zeroext 0), !dbg !6307
  store %struct.MenuType* %call, %struct.MenuType** %mt, align 8, !dbg !6308
  %1 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !6309
  %cmp = icmp eq %struct.MenuType* %1, null, !dbg !6311
  br i1 %cmp, label %if.then, label %if.end, !dbg !6312

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %menuname.addr, align 8, !dbg !6313
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.uiItemM, i64 0, i64 0), i8* %2), !dbg !6313
  br label %return, !dbg !6315

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !6316
  %tobool = icmp ne i8* %3, null, !dbg !6316
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !6318

if.then1:                                         ; preds = %if.end
  %4 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !6319
  %label = getelementptr inbounds %struct.MenuType, %struct.MenuType* %4, i32 0, i32 3, !dbg !6319
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %label, i64 0, i64 0, !dbg !6319
  store i8* %arraydecay, i8** %name.addr, align 8, !dbg !6321
  br label %if.end2, !dbg !6322

if.end2:                                          ; preds = %if.then1, %if.end
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6323
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 1, !dbg !6325
  %6 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !6325
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %6, i32 0, i32 2, !dbg !6326
  %7 = load i32, i32* %type, align 8, !dbg !6326
  %cmp3 = icmp eq i32 %7, 2, !dbg !6327
  br i1 %cmp3, label %land.lhs.true, label %if.end6, !dbg !6328

land.lhs.true:                                    ; preds = %if.end2
  %8 = load i32, i32* %icon.addr, align 4, !dbg !6329
  %tobool4 = icmp ne i32 %8, 0, !dbg !6329
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6330

if.then5:                                         ; preds = %land.lhs.true
  store i32 77, i32* %icon.addr, align 4, !dbg !6331
  br label %if.end6, !dbg !6332

if.end6:                                          ; preds = %if.then5, %land.lhs.true, %if.end2
  %9 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6333
  %10 = load i8*, i8** %name.addr, align 8, !dbg !6334
  %11 = load i32, i32* %icon.addr, align 4, !dbg !6335
  %12 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !6336
  %13 = bitcast %struct.MenuType* %12 to i8*, !dbg !6336
  %14 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !6337
  %description = getelementptr inbounds %struct.MenuType, %struct.MenuType* %14, i32 0, i32 5, !dbg !6337
  %15 = load i8*, i8** %description, align 8, !dbg !6337
  %call7 = call %struct.uiBut* @ui_item_menu(%struct.uiLayout* %9, i8* %10, i32 %11, void (%struct.bContext*, %struct.uiLayout*, i8*)* @ui_item_menutype_func, i8* %13, i8* null, i8* %15, i8 zeroext 0), !dbg !6338
  br label %return, !dbg !6339

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !6339
}

declare dso_local %struct.MenuType* @WM_menutype_find(i8*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @ui_item_menu(%struct.uiLayout* %layout, i8* %name, i32 %icon, void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, i8* %arg, i8* %argN, i8* %tip, i8 zeroext %force_menu) #0 !dbg !6340 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %func.addr = alloca void (%struct.bContext*, %struct.uiLayout*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %argN.addr = alloca i8*, align 8
  %tip.addr = alloca i8*, align 8
  %force_menu.addr = alloca i8, align 1
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6343, metadata !DIExpression()), !dbg !6344
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6345, metadata !DIExpression()), !dbg !6346
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6347, metadata !DIExpression()), !dbg !6348
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, metadata !6349, metadata !DIExpression()), !dbg !6350
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6351, metadata !DIExpression()), !dbg !6352
  store i8* %argN, i8** %argN.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argN.addr, metadata !6353, metadata !DIExpression()), !dbg !6354
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !6355, metadata !DIExpression()), !dbg !6356
  store i8 %force_menu, i8* %force_menu.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force_menu.addr, metadata !6357, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6359, metadata !DIExpression()), !dbg !6360
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6361
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !6362
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !6362
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !6363
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !6363
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !6360
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6366, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.declare(metadata i32* %h, metadata !6368, metadata !DIExpression()), !dbg !6369
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6370
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6371
  call void @uiBlockSetCurLayout(%struct.uiBlock* %3, %struct.uiLayout* %4), !dbg !6372
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6373
  %root2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 1, !dbg !6375
  %6 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root2, align 8, !dbg !6375
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %6, i32 0, i32 2, !dbg !6376
  %7 = load i32, i32* %type, align 8, !dbg !6376
  %cmp = icmp eq i32 %7, 1, !dbg !6377
  br i1 %cmp, label %if.then, label %if.end, !dbg !6378

if.then:                                          ; preds = %entry
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6379
  call void @uiBlockSetEmboss(%struct.uiBlock* %8, i8 zeroext 0), !dbg !6380
  br label %if.end, !dbg !6380

if.end:                                           ; preds = %if.then, %entry
  %9 = load i8*, i8** %name.addr, align 8, !dbg !6381
  %tobool = icmp ne i8* %9, null, !dbg !6381
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !6383

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %name.addr, align 8, !dbg !6384
  br label %if.end4, !dbg !6385

if.end4:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6386
  %root5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 1, !dbg !6388
  %11 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root5, align 8, !dbg !6388
  %type6 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %11, i32 0, i32 2, !dbg !6389
  %12 = load i32, i32* %type6, align 8, !dbg !6389
  %cmp7 = icmp eq i32 %12, 2, !dbg !6390
  br i1 %cmp7, label %land.lhs.true, label %if.end10, !dbg !6391

land.lhs.true:                                    ; preds = %if.end4
  %13 = load i32, i32* %icon.addr, align 4, !dbg !6392
  %tobool8 = icmp ne i32 %13, 0, !dbg !6392
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !6393

if.then9:                                         ; preds = %land.lhs.true
  store i32 77, i32* %icon.addr, align 4, !dbg !6394
  br label %if.end10, !dbg !6395

if.end10:                                         ; preds = %if.then9, %land.lhs.true, %if.end4
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6396
  %15 = load i8*, i8** %name.addr, align 8, !dbg !6397
  %16 = load i32, i32* %icon.addr, align 4, !dbg !6398
  %call = call i32 @ui_text_icon_width(%struct.uiLayout* %14, i8* %15, i32 %16, i8 zeroext 1), !dbg !6399
  store i32 %call, i32* %w, align 4, !dbg !6400
  %17 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6401
  %conv = sext i16 %17 to i32, !dbg !6401
  store i32 %conv, i32* %h, align 4, !dbg !6402
  %18 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6403
  %root11 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 1, !dbg !6405
  %19 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root11, align 8, !dbg !6405
  %type12 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %19, i32 0, i32 2, !dbg !6406
  %20 = load i32, i32* %type12, align 8, !dbg !6406
  %cmp13 = icmp eq i32 %20, 1, !dbg !6407
  br i1 %cmp13, label %if.then15, label %if.end24, !dbg !6408

if.then15:                                        ; preds = %if.end10
  %21 = load i8, i8* %force_menu.addr, align 1, !dbg !6409
  %tobool16 = icmp ne i8 %21, 0, !dbg !6409
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !6412

if.then17:                                        ; preds = %if.then15
  %22 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6413
  %conv18 = sext i16 %22 to i32, !dbg !6413
  %23 = load i32, i32* %w, align 4, !dbg !6415
  %add = add nsw i32 %23, %conv18, !dbg !6415
  store i32 %add, i32* %w, align 4, !dbg !6415
  br label %if.end23, !dbg !6416

if.else:                                          ; preds = %if.then15
  %24 = load i8*, i8** %name.addr, align 8, !dbg !6417
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 0, !dbg !6417
  %25 = load i8, i8* %arrayidx, align 1, !dbg !6417
  %tobool19 = icmp ne i8 %25, 0, !dbg !6417
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !6420

if.then20:                                        ; preds = %if.else
  %26 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6421
  %conv21 = sext i16 %26 to i32, !dbg !6421
  %div = sdiv i32 %conv21, 2, !dbg !6423
  %27 = load i32, i32* %w, align 4, !dbg !6424
  %sub = sub nsw i32 %27, %div, !dbg !6424
  store i32 %sub, i32* %w, align 4, !dbg !6424
  br label %if.end22, !dbg !6425

if.end22:                                         ; preds = %if.then20, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24, !dbg !6426

if.end24:                                         ; preds = %if.end23, %if.end10
  %28 = load i8*, i8** %name.addr, align 8, !dbg !6427
  %arrayidx25 = getelementptr inbounds i8, i8* %28, i64 0, !dbg !6427
  %29 = load i8, i8* %arrayidx25, align 1, !dbg !6427
  %conv26 = zext i8 %29 to i32, !dbg !6427
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !6427
  br i1 %tobool27, label %land.lhs.true28, label %if.else34, !dbg !6429

land.lhs.true28:                                  ; preds = %if.end24
  %30 = load i32, i32* %icon.addr, align 4, !dbg !6430
  %tobool29 = icmp ne i32 %30, 0, !dbg !6430
  br i1 %tobool29, label %if.then30, label %if.else34, !dbg !6431

if.then30:                                        ; preds = %land.lhs.true28
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6432
  %32 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8, !dbg !6433
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !6434
  %34 = load i32, i32* %icon.addr, align 4, !dbg !6435
  %35 = load i8*, i8** %name.addr, align 8, !dbg !6436
  %36 = load i32, i32* %w, align 4, !dbg !6437
  %conv31 = trunc i32 %36 to i16, !dbg !6437
  %37 = load i32, i32* %h, align 4, !dbg !6438
  %conv32 = trunc i32 %37 to i16, !dbg !6438
  %38 = load i8*, i8** %tip.addr, align 8, !dbg !6439
  %call33 = call %struct.uiBut* @uiDefIconTextMenuBut(%struct.uiBlock* %31, void (%struct.bContext*, %struct.uiLayout*, i8*)* %32, i8* %33, i32 %34, i8* %35, i32 0, i32 0, i16 signext %conv31, i16 signext %conv32, i8* %38), !dbg !6440
  store %struct.uiBut* %call33, %struct.uiBut** %but, align 8, !dbg !6441
  br label %if.end45, !dbg !6442

if.else34:                                        ; preds = %land.lhs.true28, %if.end24
  %39 = load i32, i32* %icon.addr, align 4, !dbg !6443
  %tobool35 = icmp ne i32 %39, 0, !dbg !6443
  br i1 %tobool35, label %if.then36, label %if.else40, !dbg !6445

if.then36:                                        ; preds = %if.else34
  %40 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6446
  %41 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8, !dbg !6447
  %42 = load i8*, i8** %arg.addr, align 8, !dbg !6448
  %43 = load i32, i32* %icon.addr, align 4, !dbg !6449
  %44 = load i32, i32* %w, align 4, !dbg !6450
  %conv37 = trunc i32 %44 to i16, !dbg !6450
  %45 = load i32, i32* %h, align 4, !dbg !6451
  %conv38 = trunc i32 %45 to i16, !dbg !6451
  %46 = load i8*, i8** %tip.addr, align 8, !dbg !6452
  %call39 = call %struct.uiBut* @uiDefIconMenuBut(%struct.uiBlock* %40, void (%struct.bContext*, %struct.uiLayout*, i8*)* %41, i8* %42, i32 %43, i32 0, i32 0, i16 signext %conv37, i16 signext %conv38, i8* %46), !dbg !6453
  store %struct.uiBut* %call39, %struct.uiBut** %but, align 8, !dbg !6454
  br label %if.end44, !dbg !6455

if.else40:                                        ; preds = %if.else34
  %47 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6456
  %48 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8, !dbg !6457
  %49 = load i8*, i8** %arg.addr, align 8, !dbg !6458
  %50 = load i8*, i8** %name.addr, align 8, !dbg !6459
  %51 = load i32, i32* %w, align 4, !dbg !6460
  %conv41 = trunc i32 %51 to i16, !dbg !6460
  %52 = load i32, i32* %h, align 4, !dbg !6461
  %conv42 = trunc i32 %52 to i16, !dbg !6461
  %53 = load i8*, i8** %tip.addr, align 8, !dbg !6462
  %call43 = call %struct.uiBut* @uiDefMenuBut(%struct.uiBlock* %47, void (%struct.bContext*, %struct.uiLayout*, i8*)* %48, i8* %49, i8* %50, i32 0, i32 0, i16 signext %conv41, i16 signext %conv42, i8* %53), !dbg !6463
  store %struct.uiBut* %call43, %struct.uiBut** %but, align 8, !dbg !6464
  br label %if.end44

if.end44:                                         ; preds = %if.else40, %if.then36
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then30
  %54 = load i8*, i8** %argN.addr, align 8, !dbg !6465
  %tobool46 = icmp ne i8* %54, null, !dbg !6465
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !6467

if.then47:                                        ; preds = %if.end45
  %55 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6468
  %56 = bitcast %struct.uiBut* %55 to i8*, !dbg !6470
  %57 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6471
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %57, i32 0, i32 19, !dbg !6472
  store i8* %56, i8** %poin, align 8, !dbg !6473
  %58 = load i8*, i8** %argN.addr, align 8, !dbg !6474
  %59 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6475
  %func_argN = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 31, !dbg !6476
  store i8* %58, i8** %func_argN, align 8, !dbg !6477
  br label %if.end48, !dbg !6478

if.end48:                                         ; preds = %if.then47, %if.end45
  %60 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6479
  %root49 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %60, i32 0, i32 1, !dbg !6481
  %61 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root49, align 8, !dbg !6481
  %type50 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %61, i32 0, i32 2, !dbg !6482
  %62 = load i32, i32* %type50, align 8, !dbg !6482
  %cmp51 = icmp eq i32 %62, 1, !dbg !6483
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !6484

if.then53:                                        ; preds = %if.end48
  %63 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6485
  call void @uiBlockSetEmboss(%struct.uiBlock* %63, i8 zeroext 0), !dbg !6487
  br label %if.end54, !dbg !6488

if.end54:                                         ; preds = %if.then53, %if.end48
  %64 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6489
  %root55 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %64, i32 0, i32 1, !dbg !6489
  %65 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root55, align 8, !dbg !6489
  %type56 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %65, i32 0, i32 2, !dbg !6489
  %66 = load i32, i32* %type56, align 8, !dbg !6489
  %cmp57 = icmp eq i32 %66, 0, !dbg !6489
  br i1 %cmp57, label %if.then71, label %lor.lhs.false, !dbg !6489

lor.lhs.false:                                    ; preds = %if.end54
  %67 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6489
  %root59 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %67, i32 0, i32 1, !dbg !6489
  %68 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root59, align 8, !dbg !6489
  %type60 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %68, i32 0, i32 2, !dbg !6489
  %69 = load i32, i32* %type60, align 8, !dbg !6489
  %cmp61 = icmp eq i32 %69, 3, !dbg !6489
  br i1 %cmp61, label %if.then71, label %lor.lhs.false63, !dbg !6491

lor.lhs.false63:                                  ; preds = %lor.lhs.false
  %70 = load i8, i8* %force_menu.addr, align 1, !dbg !6492
  %conv64 = zext i8 %70 to i32, !dbg !6492
  %tobool65 = icmp ne i32 %conv64, 0, !dbg !6492
  br i1 %tobool65, label %land.lhs.true66, label %if.end72, !dbg !6493

land.lhs.true66:                                  ; preds = %lor.lhs.false63
  %71 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6494
  %root67 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %71, i32 0, i32 1, !dbg !6495
  %72 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root67, align 8, !dbg !6495
  %type68 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %72, i32 0, i32 2, !dbg !6496
  %73 = load i32, i32* %type68, align 8, !dbg !6496
  %cmp69 = icmp ne i32 %73, 2, !dbg !6497
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !6498

if.then71:                                        ; preds = %land.lhs.true66, %lor.lhs.false, %if.end54
  %74 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6499
  call void @uiButSetMenuFromPulldown(%struct.uiBut* %74), !dbg !6501
  br label %if.end72, !dbg !6502

if.end72:                                         ; preds = %if.then71, %land.lhs.true66, %lor.lhs.false63
  %75 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6503
  ret %struct.uiBut* %75, !dbg !6504
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_menutype_func(%struct.bContext* %C, %struct.uiLayout* %layout, i8* %arg_mt) #0 !dbg !6505 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %arg_mt.addr = alloca i8*, align 8
  %mt = alloca %struct.MenuType*, align 8
  %menu = alloca %struct.Menu, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6510, metadata !DIExpression()), !dbg !6511
  store i8* %arg_mt, i8** %arg_mt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_mt.addr, metadata !6512, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.declare(metadata %struct.MenuType** %mt, metadata !6514, metadata !DIExpression()), !dbg !6515
  %0 = load i8*, i8** %arg_mt.addr, align 8, !dbg !6516
  %1 = bitcast i8* %0 to %struct.MenuType*, !dbg !6517
  store %struct.MenuType* %1, %struct.MenuType** %mt, align 8, !dbg !6515
  call void @llvm.dbg.declare(metadata %struct.Menu* %menu, metadata !6518, metadata !DIExpression()), !dbg !6520
  %2 = bitcast %struct.Menu* %menu to i8*, !dbg !6520
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !6520
  %3 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !6521
  %type = getelementptr inbounds %struct.Menu, %struct.Menu* %menu, i32 0, i32 0, !dbg !6522
  store %struct.MenuType* %3, %struct.MenuType** %type, align 8, !dbg !6523
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6524
  %layout1 = getelementptr inbounds %struct.Menu, %struct.Menu* %menu, i32 0, i32 1, !dbg !6525
  store %struct.uiLayout* %4, %struct.uiLayout** %layout1, align 8, !dbg !6526
  %5 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !6527
  %and = and i32 %5, 32, !dbg !6529
  %tobool = icmp ne i32 %and, 0, !dbg !6529
  br i1 %tobool, label %if.then, label %if.end, !dbg !6530

if.then:                                          ; preds = %entry
  %6 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !6531
  %idname = getelementptr inbounds %struct.MenuType, %struct.MenuType* %6, i32 0, i32 2, !dbg !6533
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !6531
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.ui_item_menutype_func, i64 0, i64 0), i8* %arraydecay), !dbg !6534
  br label %if.end, !dbg !6535

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6536
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 2, !dbg !6538
  %8 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !6538
  %tobool2 = icmp ne %struct.bContextStore* %8, null, !dbg !6536
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !6539

if.then3:                                         ; preds = %if.end
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6540
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6541
  %context4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 2, !dbg !6542
  %11 = load %struct.bContextStore*, %struct.bContextStore** %context4, align 8, !dbg !6542
  call void @CTX_store_set(%struct.bContext* %9, %struct.bContextStore* %11), !dbg !6543
  br label %if.end5, !dbg !6543

if.end5:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !6544
  %draw = getelementptr inbounds %struct.MenuType, %struct.MenuType* %12, i32 0, i32 7, !dbg !6545
  %13 = load void (%struct.bContext*, %struct.Menu*)*, void (%struct.bContext*, %struct.Menu*)** %draw, align 8, !dbg !6545
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6546
  call void %13(%struct.bContext* %14, %struct.Menu* %menu), !dbg !6544
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6547
  %context6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 2, !dbg !6549
  %16 = load %struct.bContextStore*, %struct.bContextStore** %context6, align 8, !dbg !6549
  %tobool7 = icmp ne %struct.bContextStore* %16, null, !dbg !6547
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !6550

if.then8:                                         ; preds = %if.end5
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6551
  call void @CTX_store_set(%struct.bContext* %17, %struct.bContextStore* null), !dbg !6552
  br label %if.end9, !dbg !6552

if.end9:                                          ; preds = %if.then8, %if.end5
  ret void, !dbg !6553
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @uiItemL_(%struct.uiLayout* %layout, i8* %name, i32 %icon) #0 !dbg !6554 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %w = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6563, metadata !DIExpression()), !dbg !6564
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6565
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !6566
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !6566
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !6567
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !6567
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !6564
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6568, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6570, metadata !DIExpression()), !dbg !6571
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6572
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6573
  call void @uiBlockSetCurLayout(%struct.uiBlock* %3, %struct.uiLayout* %4), !dbg !6574
  %5 = load i8*, i8** %name.addr, align 8, !dbg !6575
  %tobool = icmp ne i8* %5, null, !dbg !6575
  br i1 %tobool, label %if.end, label %if.then, !dbg !6577

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %name.addr, align 8, !dbg !6578
  br label %if.end, !dbg !6579

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6580
  %root2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %6, i32 0, i32 1, !dbg !6582
  %7 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root2, align 8, !dbg !6582
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %7, i32 0, i32 2, !dbg !6583
  %8 = load i32, i32* %type, align 8, !dbg !6583
  %cmp = icmp eq i32 %8, 2, !dbg !6584
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !6585

land.lhs.true:                                    ; preds = %if.end
  %9 = load i32, i32* %icon.addr, align 4, !dbg !6586
  %tobool3 = icmp ne i32 %9, 0, !dbg !6586
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6587

if.then4:                                         ; preds = %land.lhs.true
  store i32 77, i32* %icon.addr, align 4, !dbg !6588
  br label %if.end5, !dbg !6589

if.end5:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6590
  %11 = load i8*, i8** %name.addr, align 8, !dbg !6591
  %12 = load i32, i32* %icon.addr, align 4, !dbg !6592
  %call = call i32 @ui_text_icon_width(%struct.uiLayout* %10, i8* %11, i32 %12, i8 zeroext 0), !dbg !6593
  store i32 %call, i32* %w, align 4, !dbg !6594
  %13 = load i32, i32* %icon.addr, align 4, !dbg !6595
  %tobool6 = icmp ne i32 %13, 0, !dbg !6595
  br i1 %tobool6, label %land.lhs.true7, label %if.else, !dbg !6597

land.lhs.true7:                                   ; preds = %if.end5
  %14 = load i8*, i8** %name.addr, align 8, !dbg !6598
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 0, !dbg !6598
  %15 = load i8, i8* %arrayidx, align 1, !dbg !6598
  %conv = zext i8 %15 to i32, !dbg !6598
  %tobool8 = icmp ne i32 %conv, 0, !dbg !6598
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !6599

if.then9:                                         ; preds = %land.lhs.true7
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6600
  %17 = load i32, i32* %icon.addr, align 4, !dbg !6601
  %18 = load i8*, i8** %name.addr, align 8, !dbg !6602
  %19 = load i32, i32* %w, align 4, !dbg !6603
  %conv10 = trunc i32 %19 to i16, !dbg !6603
  %20 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6604
  %call11 = call %struct.uiBut* @uiDefIconTextBut(%struct.uiBlock* %16, i32 5120, i32 0, i32 %17, i8* %18, i32 0, i32 0, i16 signext %conv10, i16 signext %20, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !6605
  store %struct.uiBut* %call11, %struct.uiBut** %but, align 8, !dbg !6606
  br label %if.end20, !dbg !6607

if.else:                                          ; preds = %land.lhs.true7, %if.end5
  %21 = load i32, i32* %icon.addr, align 4, !dbg !6608
  %tobool12 = icmp ne i32 %21, 0, !dbg !6608
  br i1 %tobool12, label %if.then13, label %if.else16, !dbg !6610

if.then13:                                        ; preds = %if.else
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6611
  %23 = load i32, i32* %icon.addr, align 4, !dbg !6612
  %24 = load i32, i32* %w, align 4, !dbg !6613
  %conv14 = trunc i32 %24 to i16, !dbg !6613
  %25 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6614
  %call15 = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %22, i32 5120, i32 0, i32 %23, i32 0, i32 0, i16 signext %conv14, i16 signext %25, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !6615
  store %struct.uiBut* %call15, %struct.uiBut** %but, align 8, !dbg !6616
  br label %if.end19, !dbg !6617

if.else16:                                        ; preds = %if.else
  %26 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6618
  %27 = load i8*, i8** %name.addr, align 8, !dbg !6619
  %28 = load i32, i32* %w, align 4, !dbg !6620
  %conv17 = trunc i32 %28 to i16, !dbg !6620
  %29 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6621
  %call18 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %26, i32 5120, i32 0, i8* %27, i32 0, i32 0, i16 signext %conv17, i16 signext %29, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !6622
  store %struct.uiBut* %call18, %struct.uiBut** %but, align 8, !dbg !6623
  br label %if.end19

if.end19:                                         ; preds = %if.else16, %if.then13
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then9
  %30 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6624
  %call21 = call i32 @uiLayoutGetAlignment(%struct.uiLayout* %30), !dbg !6626
  %cmp22 = icmp eq i32 %call21, 3, !dbg !6627
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !6628

if.then24:                                        ; preds = %if.end20
  %31 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6629
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 3, !dbg !6631
  %32 = load i32, i32* %drawflag, align 4, !dbg !6632
  %and = and i32 %32, -3, !dbg !6632
  store i32 %and, i32* %drawflag, align 4, !dbg !6632
  %33 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6633
  %drawflag25 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %33, i32 0, i32 3, !dbg !6634
  %34 = load i32, i32* %drawflag25, align 4, !dbg !6635
  %or = or i32 %34, 8, !dbg !6635
  store i32 %or, i32* %drawflag25, align 4, !dbg !6635
  br label %if.end26, !dbg !6636

if.end26:                                         ; preds = %if.then24, %if.end20
  %35 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6637
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %35, i32 0, i32 27, !dbg !6639
  %36 = load i32, i32* %flag, align 8, !dbg !6639
  %and27 = and i32 %36, 524288, !dbg !6640
  %tobool28 = icmp ne i32 %and27, 0, !dbg !6640
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !6641

if.then29:                                        ; preds = %if.end26
  %37 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6642
  %flag30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %37, i32 0, i32 2, !dbg !6644
  %38 = load i32, i32* %flag30, align 8, !dbg !6645
  %or31 = or i32 %38, 16777216, !dbg !6645
  store i32 %or31, i32* %flag30, align 8, !dbg !6645
  br label %if.end32, !dbg !6646

if.end32:                                         ; preds = %if.then29, %if.end26
  %39 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6647
  ret %struct.uiBut* %39, !dbg !6648
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemLDrag(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, i8* %name, i32 %icon) #0 !dbg !6649 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6652, metadata !DIExpression()), !dbg !6653
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6654, metadata !DIExpression()), !dbg !6655
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6656, metadata !DIExpression()), !dbg !6657
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6660, metadata !DIExpression()), !dbg !6661
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6662
  %1 = load i8*, i8** %name.addr, align 8, !dbg !6663
  %2 = load i32, i32* %icon.addr, align 4, !dbg !6664
  %call = call %struct.uiBut* @uiItemL_(%struct.uiLayout* %0, i8* %1, i32 %2), !dbg !6665
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !6661
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6666
  %tobool = icmp ne %struct.PointerRNA* %3, null, !dbg !6666
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !6668

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6669
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 1, !dbg !6670
  %5 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !6670
  %tobool1 = icmp ne %struct.StructRNA* %5, null, !dbg !6669
  br i1 %tobool1, label %if.then, label %if.end6, !dbg !6671

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6672
  %type2 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %6, i32 0, i32 1, !dbg !6674
  %7 = load %struct.StructRNA*, %struct.StructRNA** %type2, align 8, !dbg !6674
  %call3 = call zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %7), !dbg !6675
  %tobool4 = icmp ne i8 %call3, 0, !dbg !6675
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6676

if.then5:                                         ; preds = %if.then
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6677
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6678
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %9, i32 0, i32 0, !dbg !6679
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6680
  %10 = load i8*, i8** %data, align 8, !dbg !6680
  %11 = bitcast i8* %10 to %struct.ID*, !dbg !6678
  call void @uiButSetDragID(%struct.uiBut* %8, %struct.ID* %11), !dbg !6681
  br label %if.end, !dbg !6681

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end6, !dbg !6682

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !6683
}

declare dso_local zeroext i8 @RNA_struct_is_ID(%struct.StructRNA*) #2

declare dso_local void @uiButSetDragID(%struct.uiBut*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemV(%struct.uiLayout* %layout, i8* %name, i32 %icon, i32 %argval) #0 !dbg !6684 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %argval.addr = alloca i32, align 4
  %block = alloca %struct.uiBlock*, align 8
  %retvalue = alloca i32*, align 8
  %w = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6687, metadata !DIExpression()), !dbg !6688
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6691, metadata !DIExpression()), !dbg !6692
  store i32 %argval, i32* %argval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argval.addr, metadata !6693, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6695, metadata !DIExpression()), !dbg !6696
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6697
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !6698
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !6698
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !6699
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !6699
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !6696
  call void @llvm.dbg.declare(metadata i32** %retvalue, metadata !6700, metadata !DIExpression()), !dbg !6701
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6702
  %handle = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 46, !dbg !6703
  %4 = load %struct.uiPopupBlockHandle*, %struct.uiPopupBlockHandle** %handle, align 8, !dbg !6703
  %tobool = icmp ne %struct.uiPopupBlockHandle* %4, null, !dbg !6704
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6704

cond.true:                                        ; preds = %entry
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6705
  %handle2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 46, !dbg !6706
  %6 = load %struct.uiPopupBlockHandle*, %struct.uiPopupBlockHandle** %handle2, align 8, !dbg !6706
  %retvalue3 = getelementptr inbounds %struct.uiPopupBlockHandle, %struct.uiPopupBlockHandle* %6, i32 0, i32 17, !dbg !6707
  br label %cond.end, !dbg !6704

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6704

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %retvalue3, %cond.true ], [ null, %cond.false ], !dbg !6704
  store i32* %cond, i32** %retvalue, align 8, !dbg !6701
  call void @llvm.dbg.declare(metadata i32* %w, metadata !6708, metadata !DIExpression()), !dbg !6709
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6710
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6711
  call void @uiBlockSetCurLayout(%struct.uiBlock* %7, %struct.uiLayout* %8), !dbg !6712
  %9 = load i8*, i8** %name.addr, align 8, !dbg !6713
  %tobool4 = icmp ne i8* %9, null, !dbg !6713
  br i1 %tobool4, label %if.end, label %if.then, !dbg !6715

if.then:                                          ; preds = %cond.end
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %name.addr, align 8, !dbg !6716
  br label %if.end, !dbg !6717

if.end:                                           ; preds = %if.then, %cond.end
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6718
  %root5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 1, !dbg !6720
  %11 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root5, align 8, !dbg !6720
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %11, i32 0, i32 2, !dbg !6721
  %12 = load i32, i32* %type, align 8, !dbg !6721
  %cmp = icmp eq i32 %12, 2, !dbg !6722
  br i1 %cmp, label %land.lhs.true, label %if.end8, !dbg !6723

land.lhs.true:                                    ; preds = %if.end
  %13 = load i32, i32* %icon.addr, align 4, !dbg !6724
  %tobool6 = icmp ne i32 %13, 0, !dbg !6724
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !6725

if.then7:                                         ; preds = %land.lhs.true
  store i32 77, i32* %icon.addr, align 4, !dbg !6726
  br label %if.end8, !dbg !6727

if.end8:                                          ; preds = %if.then7, %land.lhs.true, %if.end
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6728
  %15 = load i8*, i8** %name.addr, align 8, !dbg !6729
  %16 = load i32, i32* %icon.addr, align 4, !dbg !6730
  %call = call i32 @ui_text_icon_width(%struct.uiLayout* %14, i8* %15, i32 %16, i8 zeroext 0), !dbg !6731
  store i32 %call, i32* %w, align 4, !dbg !6732
  %17 = load i32, i32* %icon.addr, align 4, !dbg !6733
  %tobool9 = icmp ne i32 %17, 0, !dbg !6733
  br i1 %tobool9, label %land.lhs.true10, label %if.else, !dbg !6735

land.lhs.true10:                                  ; preds = %if.end8
  %18 = load i8*, i8** %name.addr, align 8, !dbg !6736
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 0, !dbg !6736
  %19 = load i8, i8* %arrayidx, align 1, !dbg !6736
  %conv = zext i8 %19 to i32, !dbg !6736
  %tobool11 = icmp ne i32 %conv, 0, !dbg !6736
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !6737

if.then12:                                        ; preds = %land.lhs.true10
  %20 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6738
  %21 = load i32, i32* %argval.addr, align 4, !dbg !6739
  %22 = load i32, i32* %icon.addr, align 4, !dbg !6740
  %23 = load i8*, i8** %name.addr, align 8, !dbg !6741
  %24 = load i32, i32* %w, align 4, !dbg !6742
  %conv13 = trunc i32 %24 to i16, !dbg !6742
  %25 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6743
  %26 = load i32*, i32** %retvalue, align 8, !dbg !6744
  %call14 = call %struct.uiBut* @uiDefIconTextButI(%struct.uiBlock* %20, i32 512, i32 %21, i32 %22, i8* %23, i32 0, i32 0, i16 signext %conv13, i16 signext %25, i32* %26, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !6745
  br label %if.end23, !dbg !6745

if.else:                                          ; preds = %land.lhs.true10, %if.end8
  %27 = load i32, i32* %icon.addr, align 4, !dbg !6746
  %tobool15 = icmp ne i32 %27, 0, !dbg !6746
  br i1 %tobool15, label %if.then16, label %if.else19, !dbg !6748

if.then16:                                        ; preds = %if.else
  %28 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6749
  %29 = load i32, i32* %argval.addr, align 4, !dbg !6750
  %30 = load i32, i32* %icon.addr, align 4, !dbg !6751
  %31 = load i32, i32* %w, align 4, !dbg !6752
  %conv17 = trunc i32 %31 to i16, !dbg !6752
  %32 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6753
  %33 = load i32*, i32** %retvalue, align 8, !dbg !6754
  %call18 = call %struct.uiBut* @uiDefIconButI(%struct.uiBlock* %28, i32 512, i32 %29, i32 %30, i32 0, i32 0, i16 signext %conv17, i16 signext %32, i32* %33, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !6755
  br label %if.end22, !dbg !6755

if.else19:                                        ; preds = %if.else
  %34 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6756
  %35 = load i32, i32* %argval.addr, align 4, !dbg !6757
  %36 = load i8*, i8** %name.addr, align 8, !dbg !6758
  %37 = load i32, i32* %w, align 4, !dbg !6759
  %conv20 = trunc i32 %37 to i16, !dbg !6759
  %38 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6760
  %39 = load i32*, i32** %retvalue, align 8, !dbg !6761
  %call21 = call %struct.uiBut* @uiDefButI(%struct.uiBlock* %34, i32 512, i32 %35, i8* %36, i32 0, i32 0, i16 signext %conv20, i16 signext %38, i32* %39, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !6762
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then16
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then12
  ret void, !dbg !6763
}

declare dso_local %struct.uiBut* @uiDefIconTextButI(%struct.uiBlock*, i32, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i32*, float, float, float, float, i8*) #2

declare dso_local %struct.uiBut* @uiDefIconButI(%struct.uiBlock*, i32, i32, i32, i32, i32, i16 signext, i16 signext, i32*, float, float, float, float, i8*) #2

declare dso_local %struct.uiBut* @uiDefButI(%struct.uiBlock*, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i32*, float, float, float, float, i8*) #2

declare dso_local zeroext i8 @ui_block_is_menu(%struct.uiBlock*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemMenuF(%struct.uiLayout* %layout, i8* %name, i32 %icon, void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, i8* %arg) #0 !dbg !6764 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %func.addr = alloca void (%struct.bContext*, %struct.uiLayout*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6767, metadata !DIExpression()), !dbg !6768
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6769, metadata !DIExpression()), !dbg !6770
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6771, metadata !DIExpression()), !dbg !6772
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, metadata !6773, metadata !DIExpression()), !dbg !6774
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6775, metadata !DIExpression()), !dbg !6776
  %0 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8, !dbg !6777
  %tobool = icmp ne void (%struct.bContext*, %struct.uiLayout*, i8*)* %0, null, !dbg !6777
  br i1 %tobool, label %if.end, label %if.then, !dbg !6779

if.then:                                          ; preds = %entry
  br label %return, !dbg !6780

if.end:                                           ; preds = %entry
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6781
  %2 = load i8*, i8** %name.addr, align 8, !dbg !6782
  %3 = load i32, i32* %icon.addr, align 4, !dbg !6783
  %4 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8, !dbg !6784
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !6785
  %call = call %struct.uiBut* @ui_item_menu(%struct.uiLayout* %1, i8* %2, i32 %3, void (%struct.bContext*, %struct.uiLayout*, i8*)* %4, i8* %5, i8* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8 zeroext 0), !dbg !6786
  br label %return, !dbg !6787

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6787
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemMenuEnumO(%struct.uiLayout* %layout, %struct.bContext* %C, i8* %opname, i8* %propname, i8* %name, i32 %icon) #0 !dbg !6788 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %opname.addr = alloca i8*, align 8
  %propname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  %lvl = alloca %struct.MenuItemLevel*, align 8
  %but = alloca %struct.uiBut*, align 8
  %keybuf = alloca [128 x i8], align 16
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6791, metadata !DIExpression()), !dbg !6792
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6793, metadata !DIExpression()), !dbg !6794
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !6795, metadata !DIExpression()), !dbg !6796
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !6797, metadata !DIExpression()), !dbg !6798
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6799, metadata !DIExpression()), !dbg !6800
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6801, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !6803, metadata !DIExpression()), !dbg !6804
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !6805
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !6806
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !6804
  call void @llvm.dbg.declare(metadata %struct.MenuItemLevel** %lvl, metadata !6807, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6809, metadata !DIExpression()), !dbg !6810
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !6811
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !6811
  br i1 %cmp, label %if.then, label %if.end, !dbg !6813

if.then:                                          ; preds = %entry
  %2 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6814
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !6814
  call void @ui_item_disabled(%struct.uiLayout* %2, i8* %3), !dbg !6814
  %4 = load i8*, i8** %opname.addr, align 8, !dbg !6814
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.uiItemMenuEnumO, i64 0, i64 0), i8* %4), !dbg !6814
  br label %if.end38, !dbg !6814

if.end:                                           ; preds = %entry
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !6816
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !6818
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6818
  %tobool = icmp ne %struct.StructRNA* %6, null, !dbg !6816
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !6819

if.then1:                                         ; preds = %if.end
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6820
  %8 = load i8*, i8** %opname.addr, align 8, !dbg !6822
  call void @ui_item_disabled(%struct.uiLayout* %7, i8* %8), !dbg !6823
  %9 = load i8*, i8** %opname.addr, align 8, !dbg !6824
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.uiItemMenuEnumO, i64 0, i64 0), i8* %9), !dbg !6824
  br label %if.end38, !dbg !6825

if.end2:                                          ; preds = %if.end
  %10 = load i8*, i8** %name.addr, align 8, !dbg !6826
  %cmp3 = icmp eq i8* %10, null, !dbg !6828
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !6829

if.then4:                                         ; preds = %if.end2
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !6830
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !6832
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !6832
  %call6 = call i8* @RNA_struct_ui_name(%struct.StructRNA* %12), !dbg !6833
  store i8* %call6, i8** %name.addr, align 8, !dbg !6834
  br label %if.end7, !dbg !6835

if.end7:                                          ; preds = %if.then4, %if.end2
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6836
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 1, !dbg !6838
  %14 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !6838
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %14, i32 0, i32 2, !dbg !6839
  %15 = load i32, i32* %type, align 8, !dbg !6839
  %cmp8 = icmp eq i32 %15, 2, !dbg !6840
  br i1 %cmp8, label %land.lhs.true, label %if.end11, !dbg !6841

land.lhs.true:                                    ; preds = %if.end7
  %16 = load i32, i32* %icon.addr, align 4, !dbg !6842
  %tobool9 = icmp ne i32 %16, 0, !dbg !6842
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6843

if.then10:                                        ; preds = %land.lhs.true
  store i32 77, i32* %icon.addr, align 4, !dbg !6844
  br label %if.end11, !dbg !6845

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %if.end7
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6846
  %call12 = call i8* %17(i64 160, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0)), !dbg !6846
  %18 = bitcast i8* %call12 to %struct.MenuItemLevel*, !dbg !6846
  store %struct.MenuItemLevel* %18, %struct.MenuItemLevel** %lvl, align 8, !dbg !6847
  %19 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6848
  %opname13 = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %19, i32 0, i32 1, !dbg !6849
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %opname13, i64 0, i64 0, !dbg !6848
  %20 = load i8*, i8** %opname.addr, align 8, !dbg !6850
  %call14 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %20, i64 64), !dbg !6851
  %21 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6852
  %propname15 = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %21, i32 0, i32 2, !dbg !6853
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %propname15, i64 0, i64 0, !dbg !6852
  %22 = load i8*, i8** %propname.addr, align 8, !dbg !6854
  %call17 = call i8* @BLI_strncpy(i8* %arraydecay16, i8* %22, i64 64), !dbg !6855
  %23 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6856
  %root18 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %23, i32 0, i32 1, !dbg !6857
  %24 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root18, align 8, !dbg !6857
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %24, i32 0, i32 3, !dbg !6858
  %25 = load i32, i32* %opcontext, align 4, !dbg !6858
  %26 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6859
  %opcontext19 = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %26, i32 0, i32 0, !dbg !6860
  store i32 %25, i32* %opcontext19, align 8, !dbg !6861
  %27 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6862
  %28 = load i8*, i8** %name.addr, align 8, !dbg !6863
  %29 = load i32, i32* %icon.addr, align 4, !dbg !6864
  %30 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6865
  %31 = bitcast %struct.MenuItemLevel* %30 to i8*, !dbg !6865
  %32 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !6866
  %srna20 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %32, i32 0, i32 11, !dbg !6867
  %33 = load %struct.StructRNA*, %struct.StructRNA** %srna20, align 8, !dbg !6867
  %call21 = call i8* @RNA_struct_ui_description(%struct.StructRNA* %33), !dbg !6868
  %call22 = call %struct.uiBut* @ui_item_menu(%struct.uiLayout* %27, i8* %28, i32 %29, void (%struct.bContext*, %struct.uiLayout*, i8*)* @menu_item_enum_opname_menu, i8* null, i8* %31, i8* %call21, i8 zeroext 1), !dbg !6869
  store %struct.uiBut* %call22, %struct.uiBut** %but, align 8, !dbg !6870
  %34 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6871
  %root23 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %34, i32 0, i32 1, !dbg !6873
  %35 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root23, align 8, !dbg !6873
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %35, i32 0, i32 10, !dbg !6874
  %36 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6874
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %36, i32 0, i32 27, !dbg !6875
  %37 = load i32, i32* %flag, align 8, !dbg !6875
  %and = and i32 %37, 1, !dbg !6876
  %tobool24 = icmp ne i32 %and, 0, !dbg !6876
  br i1 %tobool24, label %land.lhs.true25, label %if.end38, !dbg !6877

land.lhs.true25:                                  ; preds = %if.end11
  %38 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !6878
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %38, i32 0, i32 13, !dbg !6879
  %39 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6879
  %tobool26 = icmp ne %struct.PropertyRNA* %39, null, !dbg !6878
  br i1 %tobool26, label %land.lhs.true27, label %if.end38, !dbg !6880

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %40 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !6881
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %40, i32 0, i32 6, !dbg !6882
  %41 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6882
  %tobool28 = icmp ne i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* %41, null, !dbg !6881
  br i1 %tobool28, label %if.then29, label %if.end38, !dbg !6883

if.then29:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata [128 x i8]* %keybuf, metadata !6884, metadata !DIExpression()), !dbg !6886
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6887
  %43 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !6889
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %43, i32 0, i32 1, !dbg !6890
  %44 = load i8*, i8** %idname, align 8, !dbg !6890
  %45 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6891
  %root30 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %45, i32 0, i32 1, !dbg !6892
  %46 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root30, align 8, !dbg !6892
  %opcontext31 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %46, i32 0, i32 3, !dbg !6893
  %47 = load i32, i32* %opcontext31, align 4, !dbg !6893
  %arraydecay32 = getelementptr inbounds [128 x i8], [128 x i8]* %keybuf, i64 0, i64 0, !dbg !6894
  %call33 = call i8* @WM_key_event_operator_string(%struct.bContext* %42, i8* %44, i32 %47, %struct.IDProperty* null, i8 zeroext 0, i8* %arraydecay32, i32 128), !dbg !6895
  %tobool34 = icmp ne i8* %call33, null, !dbg !6895
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !6896

if.then35:                                        ; preds = %if.then29
  %48 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6897
  %arraydecay36 = getelementptr inbounds [128 x i8], [128 x i8]* %keybuf, i64 0, i64 0, !dbg !6899
  call void @ui_but_add_shortcut(%struct.uiBut* %48, i8* %arraydecay36, i8 zeroext 0), !dbg !6900
  br label %if.end37, !dbg !6901

if.end37:                                         ; preds = %if.then35, %if.then29
  br label %if.end38, !dbg !6902

if.end38:                                         ; preds = %if.then, %if.then1, %if.end37, %land.lhs.true27, %land.lhs.true25, %if.end11
  ret void, !dbg !6903
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @menu_item_enum_opname_menu(%struct.bContext* %UNUSED_C, %struct.uiLayout* %layout, i8* %arg) #0 !dbg !6904 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %arg.addr = alloca i8*, align 8
  %lvl = alloca %struct.MenuItemLevel*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !6905, metadata !DIExpression()), !dbg !6906
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6907, metadata !DIExpression()), !dbg !6908
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6909, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.declare(metadata %struct.MenuItemLevel** %lvl, metadata !6911, metadata !DIExpression()), !dbg !6912
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !6913
  %1 = bitcast i8* %0 to %struct.uiBut*, !dbg !6914
  %func_argN = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 31, !dbg !6915
  %2 = load i8*, i8** %func_argN, align 8, !dbg !6915
  %3 = bitcast i8* %2 to %struct.MenuItemLevel*, !dbg !6916
  store %struct.MenuItemLevel* %3, %struct.MenuItemLevel** %lvl, align 8, !dbg !6912
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6917
  %5 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6918
  %opcontext = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %5, i32 0, i32 0, !dbg !6919
  %6 = load i32, i32* %opcontext, align 8, !dbg !6919
  call void @uiLayoutSetOperatorContext(%struct.uiLayout* %4, i32 %6), !dbg !6920
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6921
  %8 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6922
  %opname = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %8, i32 0, i32 1, !dbg !6923
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %opname, i64 0, i64 0, !dbg !6922
  %9 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6924
  %propname = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %9, i32 0, i32 2, !dbg !6925
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %propname, i64 0, i64 0, !dbg !6924
  call void @uiItemsEnumO(%struct.uiLayout* %7, i8* %arraydecay, i8* %arraydecay1), !dbg !6926
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6927
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 1, !dbg !6928
  %11 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !6928
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %11, i32 0, i32 10, !dbg !6929
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6929
  call void @uiBlockSetDirection(%struct.uiBlock* %12, i8 zeroext 2), !dbg !6930
  ret void, !dbg !6931
}

declare dso_local i8* @RNA_struct_ui_description(%struct.StructRNA*) #2

declare dso_local i8* @WM_key_event_operator_string(%struct.bContext*, i8*, i32, %struct.IDProperty*, i8 zeroext, i8*, i32) #2

declare dso_local void @ui_but_add_shortcut(%struct.uiBut*, i8*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiItemMenuEnumR(%struct.uiLayout* %layout, %struct.PointerRNA* %ptr, i8* %propname, i8* %name, i32 %icon) #0 !dbg !6932 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %lvl = alloca %struct.MenuItemLevel*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !6935, metadata !DIExpression()), !dbg !6936
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !6939, metadata !DIExpression()), !dbg !6940
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6941, metadata !DIExpression()), !dbg !6942
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !6943, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.declare(metadata %struct.MenuItemLevel** %lvl, metadata !6945, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6947, metadata !DIExpression()), !dbg !6948
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6949
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !6950
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !6951
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6952
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6953
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !6953
  br i1 %tobool, label %if.end, label %if.then, !dbg !6955

if.then:                                          ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6956
  %4 = load i8*, i8** %propname.addr, align 8, !dbg !6958
  call void @ui_item_disabled(%struct.uiLayout* %3, i8* %4), !dbg !6959
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6960
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 1, !dbg !6960
  %6 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !6960
  %call1 = call i8* @RNA_struct_identifier(%struct.StructRNA* %6), !dbg !6960
  %7 = load i8*, i8** %propname.addr, align 8, !dbg !6960
  call void (i8*, ...) @_RNA_warning(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.uiItemMenuEnumR, i64 0, i64 0), i8* %call1, i8* %7), !dbg !6960
  br label %return, !dbg !6961

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %name.addr, align 8, !dbg !6962
  %tobool2 = icmp ne i8* %8, null, !dbg !6962
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6964

if.then3:                                         ; preds = %if.end
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6965
  %call4 = call i8* @RNA_property_ui_name(%struct.PropertyRNA* %9), !dbg !6966
  store i8* %call4, i8** %name.addr, align 8, !dbg !6967
  br label %if.end5, !dbg !6968

if.end5:                                          ; preds = %if.then3, %if.end
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6969
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 1, !dbg !6971
  %11 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !6971
  %type6 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %11, i32 0, i32 2, !dbg !6972
  %12 = load i32, i32* %type6, align 8, !dbg !6972
  %cmp = icmp eq i32 %12, 2, !dbg !6973
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !6974

land.lhs.true:                                    ; preds = %if.end5
  %13 = load i32, i32* %icon.addr, align 4, !dbg !6975
  %tobool7 = icmp ne i32 %13, 0, !dbg !6975
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6976

if.then8:                                         ; preds = %land.lhs.true
  store i32 77, i32* %icon.addr, align 4, !dbg !6977
  br label %if.end9, !dbg !6978

if.end9:                                          ; preds = %if.then8, %land.lhs.true, %if.end5
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6979
  %call10 = call i8* %14(i64 160, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0)), !dbg !6979
  %15 = bitcast i8* %call10 to %struct.MenuItemLevel*, !dbg !6979
  store %struct.MenuItemLevel* %15, %struct.MenuItemLevel** %lvl, align 8, !dbg !6980
  %16 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6981
  %rnapoin = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %16, i32 0, i32 3, !dbg !6982
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6983
  %18 = bitcast %struct.PointerRNA* %rnapoin to i8*, !dbg !6984
  %19 = bitcast %struct.PointerRNA* %17 to i8*, !dbg !6984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false), !dbg !6984
  %20 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6985
  %propname11 = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %20, i32 0, i32 2, !dbg !6986
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %propname11, i64 0, i64 0, !dbg !6985
  %21 = load i8*, i8** %propname.addr, align 8, !dbg !6987
  %call12 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %21, i64 64), !dbg !6988
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6989
  %root13 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %22, i32 0, i32 1, !dbg !6990
  %23 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root13, align 8, !dbg !6990
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %23, i32 0, i32 3, !dbg !6991
  %24 = load i32, i32* %opcontext, align 4, !dbg !6991
  %25 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6992
  %opcontext14 = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %25, i32 0, i32 0, !dbg !6993
  store i32 %24, i32* %opcontext14, align 8, !dbg !6994
  %26 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !6995
  %27 = load i8*, i8** %name.addr, align 8, !dbg !6996
  %28 = load i32, i32* %icon.addr, align 4, !dbg !6997
  %29 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !6998
  %30 = bitcast %struct.MenuItemLevel* %29 to i8*, !dbg !6998
  %31 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6999
  %call15 = call i8* @RNA_property_description(%struct.PropertyRNA* %31), !dbg !7000
  %call16 = call %struct.uiBut* @ui_item_menu(%struct.uiLayout* %26, i8* %27, i32 %28, void (%struct.bContext*, %struct.uiLayout*, i8*)* @menu_item_enum_rna_menu, i8* null, i8* %30, i8* %call15, i8 zeroext 0), !dbg !7001
  br label %return, !dbg !7002

return:                                           ; preds = %if.end9, %if.then
  ret void, !dbg !7002
}

; Function Attrs: noinline nounwind uwtable
define internal void @menu_item_enum_rna_menu(%struct.bContext* %UNUSED_C, %struct.uiLayout* %layout, i8* %arg) #0 !dbg !7003 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %arg.addr = alloca i8*, align 8
  %lvl = alloca %struct.MenuItemLevel*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !7004, metadata !DIExpression()), !dbg !7005
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7006, metadata !DIExpression()), !dbg !7007
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.declare(metadata %struct.MenuItemLevel** %lvl, metadata !7010, metadata !DIExpression()), !dbg !7011
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !7012
  %1 = bitcast i8* %0 to %struct.uiBut*, !dbg !7013
  %func_argN = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 31, !dbg !7014
  %2 = load i8*, i8** %func_argN, align 8, !dbg !7014
  %3 = bitcast i8* %2 to %struct.MenuItemLevel*, !dbg !7015
  store %struct.MenuItemLevel* %3, %struct.MenuItemLevel** %lvl, align 8, !dbg !7011
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7016
  %5 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !7017
  %opcontext = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %5, i32 0, i32 0, !dbg !7018
  %6 = load i32, i32* %opcontext, align 8, !dbg !7018
  call void @uiLayoutSetOperatorContext(%struct.uiLayout* %4, i32 %6), !dbg !7019
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7020
  %8 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !7021
  %rnapoin = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %8, i32 0, i32 3, !dbg !7022
  %9 = load %struct.MenuItemLevel*, %struct.MenuItemLevel** %lvl, align 8, !dbg !7023
  %propname = getelementptr inbounds %struct.MenuItemLevel, %struct.MenuItemLevel* %9, i32 0, i32 2, !dbg !7024
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %propname, i64 0, i64 0, !dbg !7023
  call void @uiItemsEnumR(%struct.uiLayout* %7, %struct.PointerRNA* %rnapoin, i8* %arraydecay), !dbg !7025
  ret void, !dbg !7026
}

declare dso_local i8* @RNA_property_description(%struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %layout, i32 %align) #0 !dbg !7027 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %align.addr = alloca i32, align 4
  %litem = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7028, metadata !DIExpression()), !dbg !7029
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !7030, metadata !DIExpression()), !dbg !7031
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !7032, metadata !DIExpression()), !dbg !7033
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7034
  %call = call i8* %0(i64 88, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0)), !dbg !7034
  %1 = bitcast i8* %call to %struct.uiLayout*, !dbg !7034
  store %struct.uiLayout* %1, %struct.uiLayout** %litem, align 8, !dbg !7035
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7036
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 0, !dbg !7037
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !7038
  store i32 1, i32* %type, align 8, !dbg !7039
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7040
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !7041
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7041
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7042
  %root1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 1, !dbg !7043
  store %struct.uiLayoutRoot* %4, %struct.uiLayoutRoot** %root1, align 8, !dbg !7044
  %6 = load i32, i32* %align.addr, align 4, !dbg !7045
  %conv = trunc i32 %6 to i8, !dbg !7045
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7046
  %align2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 10, !dbg !7047
  store i8 %conv, i8* %align2, align 2, !dbg !7048
  %8 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7049
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 11, !dbg !7050
  store i8 1, i8* %active, align 1, !dbg !7051
  %9 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7052
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %9, i32 0, i32 12, !dbg !7053
  store i8 1, i8* %enabled, align 4, !dbg !7054
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7055
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 2, !dbg !7056
  %11 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !7056
  %12 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7057
  %context3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %12, i32 0, i32 2, !dbg !7058
  store %struct.bContextStore* %11, %struct.bContextStore** %context3, align 8, !dbg !7059
  %13 = load i32, i32* %align.addr, align 4, !dbg !7060
  %tobool = icmp ne i32 %13, 0, !dbg !7061
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7061

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7061

cond.false:                                       ; preds = %entry
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7062
  %root4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %14, i32 0, i32 1, !dbg !7063
  %15 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root4, align 8, !dbg !7063
  %style = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %15, i32 0, i32 9, !dbg !7064
  %16 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !7064
  %buttonspacex = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %16, i32 0, i32 13, !dbg !7065
  %17 = load i16, i16* %buttonspacex, align 2, !dbg !7065
  %conv5 = sext i16 %17 to i32, !dbg !7062
  br label %cond.end, !dbg !7061

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv5, %cond.false ], !dbg !7061
  %conv6 = trunc i32 %cond to i16, !dbg !7061
  %18 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7066
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 9, !dbg !7067
  store i16 %conv6, i16* %space, align 8, !dbg !7068
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7069
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 13, !dbg !7070
  %20 = load i8, i8* %redalert, align 1, !dbg !7070
  %21 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7071
  %redalert7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %21, i32 0, i32 13, !dbg !7072
  store i8 %20, i8* %redalert7, align 1, !dbg !7073
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7074
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %22, i32 0, i32 6, !dbg !7075
  %23 = load i32, i32* %w, align 8, !dbg !7075
  %24 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7076
  %w8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %24, i32 0, i32 6, !dbg !7077
  store i32 %23, i32* %w8, align 8, !dbg !7078
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7079
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %25, i32 0, i32 3, !dbg !7080
  %26 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7081
  %27 = bitcast %struct.uiLayout* %26 to i8*, !dbg !7081
  call void @BLI_addtail(%struct.ListBase* %items, i8* %27), !dbg !7082
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7083
  %root9 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %28, i32 0, i32 1, !dbg !7084
  %29 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root9, align 8, !dbg !7084
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %29, i32 0, i32 10, !dbg !7085
  %30 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7085
  %31 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7086
  call void @uiBlockSetCurLayout(%struct.uiBlock* %30, %struct.uiLayout* %31), !dbg !7087
  %32 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7088
  ret %struct.uiLayout* %32, !dbg !7089
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutColumnFlow(%struct.uiLayout* %layout, i32 %number, i32 %align) #0 !dbg !7090 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %number.addr = alloca i32, align 4
  %align.addr = alloca i32, align 4
  %flow = alloca %struct.uiLayoutItemFlow*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7093, metadata !DIExpression()), !dbg !7094
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !7095, metadata !DIExpression()), !dbg !7096
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemFlow** %flow, metadata !7099, metadata !DIExpression()), !dbg !7100
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7101
  %call = call i8* %0(i64 96, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)), !dbg !7101
  %1 = bitcast i8* %call to %struct.uiLayoutItemFlow*, !dbg !7101
  store %struct.uiLayoutItemFlow* %1, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7102
  %2 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7103
  %litem = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %2, i32 0, i32 0, !dbg !7104
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem, i32 0, i32 0, !dbg !7105
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !7106
  store i32 3, i32* %type, align 8, !dbg !7107
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7108
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !7109
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7109
  %5 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7110
  %litem1 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %5, i32 0, i32 0, !dbg !7111
  %root2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem1, i32 0, i32 1, !dbg !7112
  store %struct.uiLayoutRoot* %4, %struct.uiLayoutRoot** %root2, align 8, !dbg !7113
  %6 = load i32, i32* %align.addr, align 4, !dbg !7114
  %conv = trunc i32 %6 to i8, !dbg !7114
  %7 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7115
  %litem3 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %7, i32 0, i32 0, !dbg !7116
  %align4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem3, i32 0, i32 10, !dbg !7117
  store i8 %conv, i8* %align4, align 2, !dbg !7118
  %8 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7119
  %litem5 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %8, i32 0, i32 0, !dbg !7120
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem5, i32 0, i32 11, !dbg !7121
  store i8 1, i8* %active, align 1, !dbg !7122
  %9 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7123
  %litem6 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %9, i32 0, i32 0, !dbg !7124
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem6, i32 0, i32 12, !dbg !7125
  store i8 1, i8* %enabled, align 4, !dbg !7126
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7127
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 2, !dbg !7128
  %11 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !7128
  %12 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7129
  %litem7 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %12, i32 0, i32 0, !dbg !7130
  %context8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem7, i32 0, i32 2, !dbg !7131
  store %struct.bContextStore* %11, %struct.bContextStore** %context8, align 8, !dbg !7132
  %13 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7133
  %litem9 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %13, i32 0, i32 0, !dbg !7134
  %align10 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem9, i32 0, i32 10, !dbg !7135
  %14 = load i8, i8* %align10, align 2, !dbg !7135
  %conv11 = zext i8 %14 to i32, !dbg !7136
  %tobool = icmp ne i32 %conv11, 0, !dbg !7136
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7136

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !7136

cond.false:                                       ; preds = %entry
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7137
  %root12 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 1, !dbg !7138
  %16 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root12, align 8, !dbg !7138
  %style = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %16, i32 0, i32 9, !dbg !7139
  %17 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !7139
  %columnspace = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %17, i32 0, i32 10, !dbg !7140
  %18 = load i16, i16* %columnspace, align 8, !dbg !7140
  %conv13 = sext i16 %18 to i32, !dbg !7137
  br label %cond.end, !dbg !7136

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !7136
  %conv14 = trunc i32 %cond to i16, !dbg !7136
  %19 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7141
  %litem15 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %19, i32 0, i32 0, !dbg !7142
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem15, i32 0, i32 9, !dbg !7143
  store i16 %conv14, i16* %space, align 8, !dbg !7144
  %20 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7145
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %20, i32 0, i32 13, !dbg !7146
  %21 = load i8, i8* %redalert, align 1, !dbg !7146
  %22 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7147
  %litem16 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %22, i32 0, i32 0, !dbg !7148
  %redalert17 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem16, i32 0, i32 13, !dbg !7149
  store i8 %21, i8* %redalert17, align 1, !dbg !7150
  %23 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7151
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %23, i32 0, i32 6, !dbg !7152
  %24 = load i32, i32* %w, align 8, !dbg !7152
  %25 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7153
  %litem18 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %25, i32 0, i32 0, !dbg !7154
  %w19 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem18, i32 0, i32 6, !dbg !7155
  store i32 %24, i32* %w19, align 8, !dbg !7156
  %26 = load i32, i32* %number.addr, align 4, !dbg !7157
  %27 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7158
  %number20 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %27, i32 0, i32 1, !dbg !7159
  store i32 %26, i32* %number20, align 8, !dbg !7160
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7161
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %28, i32 0, i32 3, !dbg !7162
  %29 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7163
  %30 = bitcast %struct.uiLayoutItemFlow* %29 to i8*, !dbg !7163
  call void @BLI_addtail(%struct.ListBase* %items, i8* %30), !dbg !7164
  %31 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7165
  %root21 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %31, i32 0, i32 1, !dbg !7166
  %32 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root21, align 8, !dbg !7166
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %32, i32 0, i32 10, !dbg !7167
  %33 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7167
  %34 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7168
  %litem22 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %34, i32 0, i32 0, !dbg !7169
  call void @uiBlockSetCurLayout(%struct.uiBlock* %33, %struct.uiLayout* %litem22), !dbg !7170
  %35 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !7171
  %litem23 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %35, i32 0, i32 0, !dbg !7172
  ret %struct.uiLayout* %litem23, !dbg !7173
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiLayout* @ui_item_local_sublayout(%struct.uiLayout* %test, %struct.uiLayout* %layout, i32 %align) #0 !dbg !7174 {
entry:
  %test.addr = alloca %struct.uiLayout*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %align.addr = alloca i32, align 4
  %sub = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %test, %struct.uiLayout** %test.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %test.addr, metadata !7177, metadata !DIExpression()), !dbg !7178
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7179, metadata !DIExpression()), !dbg !7180
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !7181, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %sub, metadata !7183, metadata !DIExpression()), !dbg !7184
  %0 = load %struct.uiLayout*, %struct.uiLayout** %test.addr, align 8, !dbg !7185
  %call = call i32 @ui_layout_local_dir(%struct.uiLayout* %0), !dbg !7187
  %cmp = icmp eq i32 %call, 0, !dbg !7188
  br i1 %cmp, label %if.then, label %if.else, !dbg !7189

if.then:                                          ; preds = %entry
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7190
  %2 = load i32, i32* %align.addr, align 4, !dbg !7191
  %call1 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %1, i32 %2), !dbg !7192
  store %struct.uiLayout* %call1, %struct.uiLayout** %sub, align 8, !dbg !7193
  br label %if.end, !dbg !7194

if.else:                                          ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7195
  %4 = load i32, i32* %align.addr, align 4, !dbg !7196
  %call2 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %3, i32 %4), !dbg !7197
  store %struct.uiLayout* %call2, %struct.uiLayout** %sub, align 8, !dbg !7198
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !7199
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 9, !dbg !7200
  store i16 0, i16* %space, align 8, !dbg !7201
  %6 = load %struct.uiLayout*, %struct.uiLayout** %sub, align 8, !dbg !7202
  ret %struct.uiLayout* %6, !dbg !7203
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutBox(%struct.uiLayout* %layout) #0 !dbg !7204 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7205, metadata !DIExpression()), !dbg !7206
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7207
  %call = call %struct.uiLayoutItemBx* @ui_layout_box(%struct.uiLayout* %0, i32 14336), !dbg !7208
  %1 = bitcast %struct.uiLayoutItemBx* %call to %struct.uiLayout*, !dbg !7209
  ret %struct.uiLayout* %1, !dbg !7210
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiLayoutItemBx* @ui_layout_box(%struct.uiLayout* %layout, i32 %type) #0 !dbg !7211 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %type.addr = alloca i32, align 4
  %box = alloca %struct.uiLayoutItemBx*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7214, metadata !DIExpression()), !dbg !7215
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7216, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemBx** %box, metadata !7218, metadata !DIExpression()), !dbg !7219
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7220
  %call = call i8* %0(i64 96, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i64 0, i64 0)), !dbg !7220
  %1 = bitcast i8* %call to %struct.uiLayoutItemBx*, !dbg !7220
  store %struct.uiLayoutItemBx* %1, %struct.uiLayoutItemBx** %box, align 8, !dbg !7221
  %2 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7222
  %litem = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %2, i32 0, i32 0, !dbg !7223
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem, i32 0, i32 0, !dbg !7224
  %type1 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !7225
  store i32 5, i32* %type1, align 8, !dbg !7226
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7227
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !7228
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7228
  %5 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7229
  %litem2 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %5, i32 0, i32 0, !dbg !7230
  %root3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem2, i32 0, i32 1, !dbg !7231
  store %struct.uiLayoutRoot* %4, %struct.uiLayoutRoot** %root3, align 8, !dbg !7232
  %6 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7233
  %litem4 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %6, i32 0, i32 0, !dbg !7234
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem4, i32 0, i32 11, !dbg !7235
  store i8 1, i8* %active, align 1, !dbg !7236
  %7 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7237
  %litem5 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %7, i32 0, i32 0, !dbg !7238
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem5, i32 0, i32 12, !dbg !7239
  store i8 1, i8* %enabled, align 4, !dbg !7240
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7241
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 2, !dbg !7242
  %9 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !7242
  %10 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7243
  %litem6 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %10, i32 0, i32 0, !dbg !7244
  %context7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem6, i32 0, i32 2, !dbg !7245
  store %struct.bContextStore* %9, %struct.bContextStore** %context7, align 8, !dbg !7246
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7247
  %root8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %11, i32 0, i32 1, !dbg !7248
  %12 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root8, align 8, !dbg !7248
  %style = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %12, i32 0, i32 9, !dbg !7249
  %13 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !7249
  %columnspace = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %13, i32 0, i32 10, !dbg !7250
  %14 = load i16, i16* %columnspace, align 8, !dbg !7250
  %15 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7251
  %litem9 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %15, i32 0, i32 0, !dbg !7252
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem9, i32 0, i32 9, !dbg !7253
  store i16 %14, i16* %space, align 8, !dbg !7254
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7255
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 13, !dbg !7256
  %17 = load i8, i8* %redalert, align 1, !dbg !7256
  %18 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7257
  %litem10 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %18, i32 0, i32 0, !dbg !7258
  %redalert11 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem10, i32 0, i32 13, !dbg !7259
  store i8 %17, i8* %redalert11, align 1, !dbg !7260
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7261
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 6, !dbg !7262
  %20 = load i32, i32* %w, align 8, !dbg !7262
  %21 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7263
  %litem12 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %21, i32 0, i32 0, !dbg !7264
  %w13 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %litem12, i32 0, i32 6, !dbg !7265
  store i32 %20, i32* %w13, align 8, !dbg !7266
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7267
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %22, i32 0, i32 3, !dbg !7268
  %23 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7269
  %24 = bitcast %struct.uiLayoutItemBx* %23 to i8*, !dbg !7269
  call void @BLI_addtail(%struct.ListBase* %items, i8* %24), !dbg !7270
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7271
  %root14 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %25, i32 0, i32 1, !dbg !7272
  %26 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root14, align 8, !dbg !7272
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %26, i32 0, i32 10, !dbg !7273
  %27 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7273
  %28 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7274
  %litem15 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %28, i32 0, i32 0, !dbg !7275
  call void @uiBlockSetCurLayout(%struct.uiBlock* %27, %struct.uiLayout* %litem15), !dbg !7276
  %29 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7277
  %root16 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 1, !dbg !7278
  %30 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root16, align 8, !dbg !7278
  %block17 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %30, i32 0, i32 10, !dbg !7279
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block17, align 8, !dbg !7279
  %32 = load i32, i32* %type.addr, align 4, !dbg !7280
  %call18 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %31, i32 %32, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 0, i32 0, i16 signext 0, i16 signext 0, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !7281
  %33 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7282
  %roundbox = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %33, i32 0, i32 1, !dbg !7283
  store %struct.uiBut* %call18, %struct.uiBut** %roundbox, align 8, !dbg !7284
  %34 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7285
  ret %struct.uiLayoutItemBx* %34, !dbg !7286
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_layout_list_set_labels_active(%struct.uiLayout* %layout) #0 !dbg !7287 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %bitem = alloca %struct.uiButtonItem*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7288, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem, metadata !7290, metadata !DIExpression()), !dbg !7291
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7292
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 3, !dbg !7294
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !7295
  %1 = load i8*, i8** %first, align 8, !dbg !7295
  %2 = bitcast i8* %1 to %struct.uiButtonItem*, !dbg !7292
  store %struct.uiButtonItem* %2, %struct.uiButtonItem** %bitem, align 8, !dbg !7296
  br label %for.cond, !dbg !7297

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7298
  %tobool = icmp ne %struct.uiButtonItem* %3, null, !dbg !7300
  br i1 %tobool, label %for.body, label %for.end, !dbg !7300

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7301
  %item = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %4, i32 0, i32 0, !dbg !7304
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !7305
  %5 = load i32, i32* %type, align 8, !dbg !7305
  %cmp = icmp ne i32 %5, 0, !dbg !7306
  br i1 %cmp, label %if.then, label %if.else, !dbg !7307

if.then:                                          ; preds = %for.body
  %6 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7308
  %item1 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %6, i32 0, i32 0, !dbg !7310
  %7 = bitcast %struct.uiItem* %item1 to %struct.uiLayout*, !dbg !7311
  call void @ui_layout_list_set_labels_active(%struct.uiLayout* %7), !dbg !7312
  br label %if.end5, !dbg !7313

if.else:                                          ; preds = %for.body
  %8 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7314
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %8, i32 0, i32 1, !dbg !7316
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7316
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 2, !dbg !7317
  %10 = load i32, i32* %flag, align 8, !dbg !7317
  %and = and i32 %10, 16777216, !dbg !7318
  %tobool2 = icmp ne i32 %and, 0, !dbg !7318
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !7319

if.then3:                                         ; preds = %if.else
  %11 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7320
  %but4 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %11, i32 0, i32 1, !dbg !7322
  %12 = load %struct.uiBut*, %struct.uiBut** %but4, align 8, !dbg !7322
  call void @uiButSetFlag(%struct.uiBut* %12, i32 1), !dbg !7323
  br label %if.end, !dbg !7324

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7325

for.inc:                                          ; preds = %if.end5
  %13 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7326
  %item6 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %13, i32 0, i32 0, !dbg !7327
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item6, i32 0, i32 0, !dbg !7328
  %14 = load i8*, i8** %next, align 8, !dbg !7328
  %15 = bitcast i8* %14 to %struct.uiButtonItem*, !dbg !7326
  store %struct.uiButtonItem* %15, %struct.uiButtonItem** %bitem, align 8, !dbg !7329
  br label %for.cond, !dbg !7330, !llvm.loop !7331

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7333
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutListBox(%struct.uiLayout* %layout, %struct.uiList* %ui_list, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, %struct.PointerRNA* %actptr, %struct.PropertyRNA* %actprop) #0 !dbg !7334 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ui_list.addr = alloca %struct.uiList*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %actptr.addr = alloca %struct.PointerRNA*, align 8
  %actprop.addr = alloca %struct.PropertyRNA*, align 8
  %box = alloca %struct.uiLayoutItemBx*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7392, metadata !DIExpression()), !dbg !7393
  store %struct.uiList* %ui_list, %struct.uiList** %ui_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiList** %ui_list.addr, metadata !7394, metadata !DIExpression()), !dbg !7395
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  store %struct.PointerRNA* %actptr, %struct.PointerRNA** %actptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %actptr.addr, metadata !7400, metadata !DIExpression()), !dbg !7401
  store %struct.PropertyRNA* %actprop, %struct.PropertyRNA** %actprop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %actprop.addr, metadata !7402, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemBx** %box, metadata !7404, metadata !DIExpression()), !dbg !7405
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7406
  %call = call %struct.uiLayoutItemBx* @ui_layout_box(%struct.uiLayout* %0, i32 17920), !dbg !7407
  store %struct.uiLayoutItemBx* %call, %struct.uiLayoutItemBx** %box, align 8, !dbg !7405
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !7408, metadata !DIExpression()), !dbg !7409
  %1 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7410
  %roundbox = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %1, i32 0, i32 1, !dbg !7411
  %2 = load %struct.uiBut*, %struct.uiBut** %roundbox, align 8, !dbg !7411
  store %struct.uiBut* %2, %struct.uiBut** %but, align 8, !dbg !7409
  %3 = load %struct.uiList*, %struct.uiList** %ui_list.addr, align 8, !dbg !7412
  %4 = bitcast %struct.uiList* %3 to i8*, !dbg !7412
  %5 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7413
  %custom_data = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 68, !dbg !7414
  store i8* %4, i8** %custom_data, align 8, !dbg !7415
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7416
  %rnasearchpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 57, !dbg !7417
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !7418
  %8 = bitcast %struct.PointerRNA* %rnasearchpoin to i8*, !dbg !7419
  %9 = bitcast %struct.PointerRNA* %7 to i8*, !dbg !7419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false), !dbg !7419
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !7420
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7421
  %rnasearchprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 58, !dbg !7422
  store %struct.PropertyRNA* %10, %struct.PropertyRNA** %rnasearchprop, align 8, !dbg !7423
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7424
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 54, !dbg !7425
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %actptr.addr, align 8, !dbg !7426
  %14 = bitcast %struct.PointerRNA* %rnapoin to i8*, !dbg !7427
  %15 = bitcast %struct.PointerRNA* %13 to i8*, !dbg !7427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !7427
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %actprop.addr, align 8, !dbg !7428
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7429
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 55, !dbg !7430
  store %struct.PropertyRNA* %16, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7431
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7432
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 2, !dbg !7434
  %19 = load i32, i32* %flag, align 8, !dbg !7434
  %and = and i32 %19, 524288, !dbg !7435
  %tobool = icmp ne i32 %and, 0, !dbg !7435
  br i1 %tobool, label %if.then, label %if.end, !dbg !7436

if.then:                                          ; preds = %entry
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %actprop.addr, align 8, !dbg !7437
  %call1 = call i8* @RNA_property_description(%struct.PropertyRNA* %20), !dbg !7439
  %21 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7440
  %tip = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 42, !dbg !7441
  store i8* %call1, i8** %tip, align 8, !dbg !7442
  br label %if.end, !dbg !7443

if.end:                                           ; preds = %if.then, %entry
  %22 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !7444
  %23 = bitcast %struct.uiLayoutItemBx* %22 to %struct.uiLayout*, !dbg !7445
  ret %struct.uiLayout* %23, !dbg !7446
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutAbsolute(%struct.uiLayout* %layout, i32 %align) #0 !dbg !7447 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %align.addr = alloca i32, align 4
  %litem = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store i32 %align, i32* %align.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %align.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !7452, metadata !DIExpression()), !dbg !7453
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7454
  %call = call i8* %0(i64 88, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)), !dbg !7454
  %1 = bitcast i8* %call to %struct.uiLayout*, !dbg !7454
  store %struct.uiLayout* %1, %struct.uiLayout** %litem, align 8, !dbg !7455
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7456
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 0, !dbg !7457
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !7458
  store i32 6, i32* %type, align 8, !dbg !7459
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7460
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !7461
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7461
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7462
  %root1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 1, !dbg !7463
  store %struct.uiLayoutRoot* %4, %struct.uiLayoutRoot** %root1, align 8, !dbg !7464
  %6 = load i32, i32* %align.addr, align 4, !dbg !7465
  %conv = trunc i32 %6 to i8, !dbg !7465
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7466
  %align2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 10, !dbg !7467
  store i8 %conv, i8* %align2, align 2, !dbg !7468
  %8 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7469
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 11, !dbg !7470
  store i8 1, i8* %active, align 1, !dbg !7471
  %9 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7472
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %9, i32 0, i32 12, !dbg !7473
  store i8 1, i8* %enabled, align 4, !dbg !7474
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7475
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 2, !dbg !7476
  %11 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !7476
  %12 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7477
  %context3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %12, i32 0, i32 2, !dbg !7478
  store %struct.bContextStore* %11, %struct.bContextStore** %context3, align 8, !dbg !7479
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7480
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 13, !dbg !7481
  %14 = load i8, i8* %redalert, align 1, !dbg !7481
  %15 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7482
  %redalert4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 13, !dbg !7483
  store i8 %14, i8* %redalert4, align 1, !dbg !7484
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7485
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 3, !dbg !7486
  %17 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7487
  %18 = bitcast %struct.uiLayout* %17 to i8*, !dbg !7487
  call void @BLI_addtail(%struct.ListBase* %items, i8* %18), !dbg !7488
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7489
  %root5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 1, !dbg !7490
  %20 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root5, align 8, !dbg !7490
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %20, i32 0, i32 10, !dbg !7491
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7491
  %22 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7492
  call void @uiBlockSetCurLayout(%struct.uiBlock* %21, %struct.uiLayout* %22), !dbg !7493
  %23 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7494
  ret %struct.uiLayout* %23, !dbg !7495
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBlock* @uiLayoutAbsoluteBlock(%struct.uiLayout* %layout) #0 !dbg !7496 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %block = alloca %struct.uiBlock*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !7499, metadata !DIExpression()), !dbg !7500
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7501
  %call = call %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %0), !dbg !7502
  store %struct.uiBlock* %call, %struct.uiBlock** %block, align 8, !dbg !7503
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7504
  %call1 = call %struct.uiLayout* @uiLayoutAbsolute(%struct.uiLayout* %1, i32 0), !dbg !7505
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7506
  ret %struct.uiBlock* %2, !dbg !7507
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiLayoutOverlap(%struct.uiLayout* %layout) #0 !dbg !7508 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %litem = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !7511, metadata !DIExpression()), !dbg !7512
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7513
  %call = call i8* %0(i64 88, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0)), !dbg !7513
  %1 = bitcast i8* %call to %struct.uiLayout*, !dbg !7513
  store %struct.uiLayout* %1, %struct.uiLayout** %litem, align 8, !dbg !7514
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7515
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 0, !dbg !7516
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !7517
  store i32 8, i32* %type, align 8, !dbg !7518
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7519
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !7520
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7520
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7521
  %root1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 1, !dbg !7522
  store %struct.uiLayoutRoot* %4, %struct.uiLayoutRoot** %root1, align 8, !dbg !7523
  %6 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7524
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %6, i32 0, i32 11, !dbg !7525
  store i8 1, i8* %active, align 1, !dbg !7526
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7527
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 12, !dbg !7528
  store i8 1, i8* %enabled, align 4, !dbg !7529
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7530
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 2, !dbg !7531
  %9 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !7531
  %10 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7532
  %context2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 2, !dbg !7533
  store %struct.bContextStore* %9, %struct.bContextStore** %context2, align 8, !dbg !7534
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7535
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %11, i32 0, i32 13, !dbg !7536
  %12 = load i8, i8* %redalert, align 1, !dbg !7536
  %13 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7537
  %redalert3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 13, !dbg !7538
  store i8 %12, i8* %redalert3, align 1, !dbg !7539
  %14 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7540
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %14, i32 0, i32 3, !dbg !7541
  %15 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7542
  %16 = bitcast %struct.uiLayout* %15 to i8*, !dbg !7542
  call void @BLI_addtail(%struct.ListBase* %items, i8* %16), !dbg !7543
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7544
  %root4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %17, i32 0, i32 1, !dbg !7545
  %18 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root4, align 8, !dbg !7545
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %18, i32 0, i32 10, !dbg !7546
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7546
  %20 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7547
  call void @uiBlockSetCurLayout(%struct.uiBlock* %19, %struct.uiLayout* %20), !dbg !7548
  %21 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !7549
  ret %struct.uiLayout* %21, !dbg !7550
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetActive(%struct.uiLayout* %layout, i8 zeroext %active) #0 !dbg !7551 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %active.addr = alloca i8, align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7554, metadata !DIExpression()), !dbg !7555
  store i8 %active, i8* %active.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %active.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  %0 = load i8, i8* %active.addr, align 1, !dbg !7558
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7559
  %active1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 11, !dbg !7560
  store i8 %0, i8* %active1, align 1, !dbg !7561
  ret void, !dbg !7562
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetEnabled(%struct.uiLayout* %layout, i8 zeroext %enabled) #0 !dbg !7563 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %enabled.addr = alloca i8, align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7564, metadata !DIExpression()), !dbg !7565
  store i8 %enabled, i8* %enabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enabled.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  %0 = load i8, i8* %enabled.addr, align 1, !dbg !7568
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7569
  %enabled1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 12, !dbg !7570
  store i8 %0, i8* %enabled1, align 4, !dbg !7571
  ret void, !dbg !7572
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetRedAlert(%struct.uiLayout* %layout, i8 zeroext %redalert) #0 !dbg !7573 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %redalert.addr = alloca i8, align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7574, metadata !DIExpression()), !dbg !7575
  store i8 %redalert, i8* %redalert.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %redalert.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  %0 = load i8, i8* %redalert.addr, align 1, !dbg !7578
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7579
  %redalert1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 13, !dbg !7580
  store i8 %0, i8* %redalert1, align 1, !dbg !7581
  ret void, !dbg !7582
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetKeepAspect(%struct.uiLayout* %layout, i8 zeroext %keepaspect) #0 !dbg !7583 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %keepaspect.addr = alloca i8, align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7584, metadata !DIExpression()), !dbg !7585
  store i8 %keepaspect, i8* %keepaspect.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %keepaspect.addr, metadata !7586, metadata !DIExpression()), !dbg !7587
  %0 = load i8, i8* %keepaspect.addr, align 1, !dbg !7588
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7589
  %keepaspect1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 14, !dbg !7590
  store i8 %0, i8* %keepaspect1, align 2, !dbg !7591
  ret void, !dbg !7592
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetAlignment(%struct.uiLayout* %layout, i8 zeroext %alignment) #0 !dbg !7593 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %alignment.addr = alloca i8, align 1
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7596, metadata !DIExpression()), !dbg !7597
  store i8 %alignment, i8* %alignment.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %alignment.addr, metadata !7598, metadata !DIExpression()), !dbg !7599
  %0 = load i8, i8* %alignment.addr, align 1, !dbg !7600
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7601
  %alignment1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 15, !dbg !7602
  store i8 %0, i8* %alignment1, align 1, !dbg !7603
  ret void, !dbg !7604
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetScaleX(%struct.uiLayout* %layout, float %scale) #0 !dbg !7605 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %scale.addr = alloca float, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7608, metadata !DIExpression()), !dbg !7609
  store float %scale, float* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scale.addr, metadata !7610, metadata !DIExpression()), !dbg !7611
  %0 = load float, float* %scale.addr, align 4, !dbg !7612
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7613
  %scale1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 8, !dbg !7614
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %scale1, i64 0, i64 0, !dbg !7613
  store float %0, float* %arrayidx, align 8, !dbg !7615
  ret void, !dbg !7616
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetScaleY(%struct.uiLayout* %layout, float %scale) #0 !dbg !7617 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %scale.addr = alloca float, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7618, metadata !DIExpression()), !dbg !7619
  store float %scale, float* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scale.addr, metadata !7620, metadata !DIExpression()), !dbg !7621
  %0 = load float, float* %scale.addr, align 4, !dbg !7622
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7623
  %scale1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 8, !dbg !7624
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %scale1, i64 0, i64 1, !dbg !7623
  store float %0, float* %arrayidx, align 4, !dbg !7625
  ret void, !dbg !7626
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uiLayoutGetActive(%struct.uiLayout* %layout) #0 !dbg !7627 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7632
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 11, !dbg !7633
  %1 = load i8, i8* %active, align 1, !dbg !7633
  ret i8 %1, !dbg !7634
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uiLayoutGetEnabled(%struct.uiLayout* %layout) #0 !dbg !7635 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7636, metadata !DIExpression()), !dbg !7637
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7638
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 12, !dbg !7639
  %1 = load i8, i8* %enabled, align 4, !dbg !7639
  ret i8 %1, !dbg !7640
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uiLayoutGetRedAlert(%struct.uiLayout* %layout) #0 !dbg !7641 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7644
  %redalert = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 13, !dbg !7645
  %1 = load i8, i8* %redalert, align 1, !dbg !7645
  ret i8 %1, !dbg !7646
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uiLayoutGetKeepAspect(%struct.uiLayout* %layout) #0 !dbg !7647 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7650
  %keepaspect = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 14, !dbg !7651
  %1 = load i8, i8* %keepaspect, align 2, !dbg !7651
  ret i8 %1, !dbg !7652
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @uiLayoutGetAlignment(%struct.uiLayout* %layout) #0 !dbg !7653 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7656, metadata !DIExpression()), !dbg !7657
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7658
  %alignment = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 15, !dbg !7659
  %1 = load i8, i8* %alignment, align 1, !dbg !7659
  %conv = zext i8 %1 to i32, !dbg !7658
  ret i32 %conv, !dbg !7660
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @uiLayoutGetWidth(%struct.uiLayout* %layout) #0 !dbg !7661 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7662, metadata !DIExpression()), !dbg !7663
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7664
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 6, !dbg !7665
  %1 = load i32, i32* %w, align 8, !dbg !7665
  ret i32 %1, !dbg !7666
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @uiLayoutGetScaleX(%struct.uiLayout* %layout) #0 !dbg !7667 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7670, metadata !DIExpression()), !dbg !7671
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7672
  %scale = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 8, !dbg !7673
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %scale, i64 0, i64 0, !dbg !7672
  %1 = load float, float* %arrayidx, align 8, !dbg !7672
  ret float %1, !dbg !7674
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @uiLayoutGetScaleY(%struct.uiLayout* %layout) #0 !dbg !7675 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7678
  %scale = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 8, !dbg !7679
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %scale, i64 0, i64 1, !dbg !7678
  %1 = load float, float* %arrayidx, align 4, !dbg !7678
  ret float %1, !dbg !7680
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiLayout* @uiBlockLayout(%struct.uiBlock* %block, i32 %dir, i32 %type, i32 %x, i32 %y, i32 %size, i32 %em, i32 %padding, %struct.uiStyle* %style) #0 !dbg !7681 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %dir.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %em.addr = alloca i32, align 4
  %padding.addr = alloca i32, align 4
  %style.addr = alloca %struct.uiStyle*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %root = alloca %struct.uiLayoutRoot*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7684, metadata !DIExpression()), !dbg !7685
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !7686, metadata !DIExpression()), !dbg !7687
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7688, metadata !DIExpression()), !dbg !7689
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7690, metadata !DIExpression()), !dbg !7691
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7692, metadata !DIExpression()), !dbg !7693
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  store i32 %em, i32* %em.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %em.addr, metadata !7696, metadata !DIExpression()), !dbg !7697
  store i32 %padding, i32* %padding.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %padding.addr, metadata !7698, metadata !DIExpression()), !dbg !7699
  store %struct.uiStyle* %style, %struct.uiStyle** %style.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style.addr, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !7702, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.declare(metadata %struct.uiLayoutRoot** %root, metadata !7704, metadata !DIExpression()), !dbg !7705
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7706
  %call = call i8* %0(i64 80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0)), !dbg !7706
  %1 = bitcast i8* %call to %struct.uiLayoutRoot*, !dbg !7706
  store %struct.uiLayoutRoot* %1, %struct.uiLayoutRoot** %root, align 8, !dbg !7707
  %2 = load i32, i32* %type.addr, align 4, !dbg !7708
  %3 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7709
  %type1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %3, i32 0, i32 2, !dbg !7710
  store i32 %2, i32* %type1, align 8, !dbg !7711
  %4 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !7712
  %5 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7713
  %style2 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %5, i32 0, i32 9, !dbg !7714
  store %struct.uiStyle* %4, %struct.uiStyle** %style2, align 8, !dbg !7715
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7716
  %7 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7717
  %block3 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %7, i32 0, i32 10, !dbg !7718
  store %struct.uiBlock* %6, %struct.uiBlock** %block3, align 8, !dbg !7719
  %8 = load i32, i32* %padding.addr, align 4, !dbg !7720
  %9 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7721
  %padding4 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %9, i32 0, i32 6, !dbg !7722
  store i32 %8, i32* %padding4, align 8, !dbg !7723
  %10 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7724
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %10, i32 0, i32 3, !dbg !7725
  store i32 1, i32* %opcontext, align 4, !dbg !7726
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7727
  %call5 = call i8* %11(i64 88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)), !dbg !7727
  %12 = bitcast i8* %call5 to %struct.uiLayout*, !dbg !7727
  store %struct.uiLayout* %12, %struct.uiLayout** %layout, align 8, !dbg !7728
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7729
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 0, !dbg !7730
  %type6 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !7731
  store i32 10, i32* %type6, align 8, !dbg !7732
  %14 = load i32, i32* %x.addr, align 4, !dbg !7733
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7734
  %x7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 4, !dbg !7735
  store i32 %14, i32* %x7, align 8, !dbg !7736
  %16 = load i32, i32* %y.addr, align 4, !dbg !7737
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7738
  %y8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %17, i32 0, i32 5, !dbg !7739
  store i32 %16, i32* %y8, align 4, !dbg !7740
  %18 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7741
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7742
  %root9 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 1, !dbg !7743
  store %struct.uiLayoutRoot* %18, %struct.uiLayoutRoot** %root9, align 8, !dbg !7744
  %20 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !7745
  %templatespace = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %20, i32 0, i32 11, !dbg !7746
  %21 = load i16, i16* %templatespace, align 2, !dbg !7746
  %22 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7747
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %22, i32 0, i32 9, !dbg !7748
  store i16 %21, i16* %space, align 8, !dbg !7749
  %23 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7750
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %23, i32 0, i32 11, !dbg !7751
  store i8 1, i8* %active, align 1, !dbg !7752
  %24 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7753
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %24, i32 0, i32 12, !dbg !7754
  store i8 1, i8* %enabled, align 4, !dbg !7755
  %25 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7756
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %25, i32 0, i32 2, !dbg !7757
  store %struct.bContextStore* null, %struct.bContextStore** %context, align 8, !dbg !7758
  %26 = load i32, i32* %type.addr, align 4, !dbg !7759
  %cmp = icmp eq i32 %26, 2, !dbg !7761
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7762

lor.lhs.false:                                    ; preds = %entry
  %27 = load i32, i32* %type.addr, align 4, !dbg !7763
  %cmp10 = icmp eq i32 %27, 4, !dbg !7764
  br i1 %cmp10, label %if.then, label %if.end, !dbg !7765

if.then:                                          ; preds = %lor.lhs.false, %entry
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7766
  %space11 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %28, i32 0, i32 9, !dbg !7767
  store i16 0, i16* %space11, align 8, !dbg !7768
  br label %if.end, !dbg !7766

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %29 = load i32, i32* %dir.addr, align 4, !dbg !7769
  %cmp12 = icmp eq i32 %29, 0, !dbg !7771
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !7772

if.then13:                                        ; preds = %if.end
  %30 = load i32, i32* %size.addr, align 4, !dbg !7773
  %31 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7775
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %31, i32 0, i32 7, !dbg !7776
  store i32 %30, i32* %h, align 4, !dbg !7777
  %32 = load i32, i32* %em.addr, align 4, !dbg !7778
  %33 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7779
  %conv = sext i16 %33 to i32, !dbg !7779
  %mul = mul nsw i32 %32, %conv, !dbg !7780
  %34 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7781
  %root14 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %34, i32 0, i32 1, !dbg !7782
  %35 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root14, align 8, !dbg !7782
  %emh = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %35, i32 0, i32 5, !dbg !7783
  store i32 %mul, i32* %emh, align 4, !dbg !7784
  br label %if.end18, !dbg !7785

if.else:                                          ; preds = %if.end
  %36 = load i32, i32* %size.addr, align 4, !dbg !7786
  %37 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7788
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %37, i32 0, i32 6, !dbg !7789
  store i32 %36, i32* %w, align 8, !dbg !7790
  %38 = load i32, i32* %em.addr, align 4, !dbg !7791
  %39 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7792
  %conv15 = sext i16 %39 to i32, !dbg !7792
  %mul16 = mul nsw i32 %38, %conv15, !dbg !7793
  %40 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7794
  %root17 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %40, i32 0, i32 1, !dbg !7795
  %41 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root17, align 8, !dbg !7795
  %emw = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %41, i32 0, i32 4, !dbg !7796
  store i32 %mul16, i32* %emw, align 8, !dbg !7797
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then13
  %42 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7798
  %43 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7799
  %curlayout = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %43, i32 0, i32 7, !dbg !7800
  store %struct.uiLayout* %42, %struct.uiLayout** %curlayout, align 8, !dbg !7801
  %44 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7802
  %45 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7803
  %layout19 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %45, i32 0, i32 11, !dbg !7804
  store %struct.uiLayout* %44, %struct.uiLayout** %layout19, align 8, !dbg !7805
  %46 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7806
  %layouts = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %46, i32 0, i32 6, !dbg !7807
  %47 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7808
  %48 = bitcast %struct.uiLayoutRoot* %47 to i8*, !dbg !7808
  call void @BLI_addtail(%struct.ListBase* %layouts, i8* %48), !dbg !7809
  %49 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7810
  call void @ui_layout_add_padding_button(%struct.uiLayoutRoot* %49), !dbg !7811
  %50 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7812
  ret %struct.uiLayout* %50, !dbg !7813
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_layout_add_padding_button(%struct.uiLayoutRoot* %root) #0 !dbg !7814 {
entry:
  %root.addr = alloca %struct.uiLayoutRoot*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %prev_layout = alloca %struct.uiLayout*, align 8
  store %struct.uiLayoutRoot* %root, %struct.uiLayoutRoot** %root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayoutRoot** %root.addr, metadata !7817, metadata !DIExpression()), !dbg !7818
  %0 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root.addr, align 8, !dbg !7819
  %padding = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %0, i32 0, i32 6, !dbg !7821
  %1 = load i32, i32* %padding, align 8, !dbg !7821
  %tobool = icmp ne i32 %1, 0, !dbg !7819
  br i1 %tobool, label %if.then, label %if.end, !dbg !7822

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !7823, metadata !DIExpression()), !dbg !7825
  %2 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root.addr, align 8, !dbg !7826
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %2, i32 0, i32 10, !dbg !7827
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !7827
  store %struct.uiBlock* %3, %struct.uiBlock** %block, align 8, !dbg !7825
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %prev_layout, metadata !7828, metadata !DIExpression()), !dbg !7829
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7830
  %curlayout = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 7, !dbg !7831
  %5 = load %struct.uiLayout*, %struct.uiLayout** %curlayout, align 8, !dbg !7831
  store %struct.uiLayout* %5, %struct.uiLayout** %prev_layout, align 8, !dbg !7829
  %6 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root.addr, align 8, !dbg !7832
  %layout = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %6, i32 0, i32 11, !dbg !7833
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7833
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7834
  %curlayout2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 7, !dbg !7835
  store %struct.uiLayout* %7, %struct.uiLayout** %curlayout2, align 8, !dbg !7836
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7837
  %10 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root.addr, align 8, !dbg !7838
  %padding3 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %10, i32 0, i32 6, !dbg !7839
  %11 = load i32, i32* %padding3, align 8, !dbg !7839
  %conv = trunc i32 %11 to i16, !dbg !7838
  %12 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root.addr, align 8, !dbg !7840
  %padding4 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %12, i32 0, i32 6, !dbg !7841
  %13 = load i32, i32* %padding4, align 8, !dbg !7841
  %conv5 = trunc i32 %13 to i16, !dbg !7840
  %call = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %9, i32 10752, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 0, i32 0, i16 signext %conv, i16 signext %conv5, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)), !dbg !7842
  %14 = load %struct.uiLayout*, %struct.uiLayout** %prev_layout, align 8, !dbg !7843
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7844
  %curlayout6 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %15, i32 0, i32 7, !dbg !7845
  store %struct.uiLayout* %14, %struct.uiLayout** %curlayout6, align 8, !dbg !7846
  br label %if.end, !dbg !7847

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7848
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @uiLayoutGetOperatorContext(%struct.uiLayout* %layout) #0 !dbg !7849 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7850, metadata !DIExpression()), !dbg !7851
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7852
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !7853
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7853
  %opcontext = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 3, !dbg !7854
  %2 = load i32, i32* %opcontext, align 4, !dbg !7854
  ret i32 %2, !dbg !7855
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_layout_add_but(%struct.uiLayout* %layout, %struct.uiBut* %but) #0 !dbg !7856 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %bitem = alloca %struct.uiButtonItem*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7859, metadata !DIExpression()), !dbg !7860
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7861, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem, metadata !7863, metadata !DIExpression()), !dbg !7864
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7865
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0)), !dbg !7865
  %1 = bitcast i8* %call to %struct.uiButtonItem*, !dbg !7865
  store %struct.uiButtonItem* %1, %struct.uiButtonItem** %bitem, align 8, !dbg !7866
  %2 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7867
  %item = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %2, i32 0, i32 0, !dbg !7868
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !7869
  store i32 0, i32* %type, align 8, !dbg !7870
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7871
  %4 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7872
  %but1 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %4, i32 0, i32 1, !dbg !7873
  store %struct.uiBut* %3, %struct.uiBut** %but1, align 8, !dbg !7874
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7875
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 3, !dbg !7876
  %6 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !7877
  %7 = bitcast %struct.uiButtonItem* %6 to i8*, !dbg !7877
  call void @BLI_addtail(%struct.ListBase* %items, i8* %7), !dbg !7878
  %8 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7879
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 2, !dbg !7881
  %9 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !7881
  %tobool = icmp ne %struct.bContextStore* %9, null, !dbg !7879
  br i1 %tobool, label %if.then, label %if.end, !dbg !7882

if.then:                                          ; preds = %entry
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7883
  %context2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 2, !dbg !7885
  %11 = load %struct.bContextStore*, %struct.bContextStore** %context2, align 8, !dbg !7885
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7886
  %context3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 32, !dbg !7887
  store %struct.bContextStore* %11, %struct.bContextStore** %context3, align 8, !dbg !7888
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7889
  %context4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 32, !dbg !7890
  %14 = load %struct.bContextStore*, %struct.bContextStore** %context4, align 8, !dbg !7890
  %used = getelementptr inbounds %struct.bContextStore, %struct.bContextStore* %14, i32 0, i32 3, !dbg !7891
  store i8 1, i8* %used, align 8, !dbg !7892
  br label %if.end, !dbg !7893

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7894
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetOperatorContext(%struct.uiLayout* %layout, i32 %opcontext) #0 !dbg !7895 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %opcontext.addr = alloca i32, align 4
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7898, metadata !DIExpression()), !dbg !7899
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !7900, metadata !DIExpression()), !dbg !7901
  %0 = load i32, i32* %opcontext.addr, align 4, !dbg !7902
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7903
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 1, !dbg !7904
  %2 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7904
  %opcontext1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %2, i32 0, i32 3, !dbg !7905
  store i32 %0, i32* %opcontext1, align 4, !dbg !7906
  ret void, !dbg !7907
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetFunc(%struct.uiLayout* %layout, void (%struct.bContext*, i8*, i32)* %handlefunc, i8* %argv) #0 !dbg !7908 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %handlefunc.addr = alloca void (%struct.bContext*, i8*, i32)*, align 8
  %argv.addr = alloca i8*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7911, metadata !DIExpression()), !dbg !7912
  store void (%struct.bContext*, i8*, i32)* %handlefunc, void (%struct.bContext*, i8*, i32)** %handlefunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i32)** %handlefunc.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  store i8* %argv, i8** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argv.addr, metadata !7915, metadata !DIExpression()), !dbg !7916
  %0 = load void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*, i32)** %handlefunc.addr, align 8, !dbg !7917
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7918
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 1, !dbg !7919
  %2 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7919
  %handlefunc1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %2, i32 0, i32 7, !dbg !7920
  store void (%struct.bContext*, i8*, i32)* %0, void (%struct.bContext*, i8*, i32)** %handlefunc1, align 8, !dbg !7921
  %3 = load i8*, i8** %argv.addr, align 8, !dbg !7922
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7923
  %root2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 1, !dbg !7924
  %5 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root2, align 8, !dbg !7924
  %argv3 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %5, i32 0, i32 8, !dbg !7925
  store i8* %3, i8** %argv3, align 8, !dbg !7926
  ret void, !dbg !7927
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockLayoutResolve(%struct.uiBlock* %block, i32* %x, i32* %y) #0 !dbg !7928 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %x.addr = alloca i32*, align 8
  %y.addr = alloca i32*, align 8
  %root = alloca %struct.uiLayoutRoot*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7931, metadata !DIExpression()), !dbg !7932
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !7933, metadata !DIExpression()), !dbg !7934
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !7935, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.declare(metadata %struct.uiLayoutRoot** %root, metadata !7937, metadata !DIExpression()), !dbg !7938
  %0 = load i32*, i32** %x.addr, align 8, !dbg !7939
  %tobool = icmp ne i32* %0, null, !dbg !7939
  br i1 %tobool, label %if.then, label %if.end, !dbg !7941

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %x.addr, align 8, !dbg !7942
  store i32 0, i32* %1, align 4, !dbg !7943
  br label %if.end, !dbg !7944

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32*, i32** %y.addr, align 8, !dbg !7945
  %tobool1 = icmp ne i32* %2, null, !dbg !7945
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7947

if.then2:                                         ; preds = %if.end
  %3 = load i32*, i32** %y.addr, align 8, !dbg !7948
  store i32 0, i32* %3, align 4, !dbg !7949
  br label %if.end3, !dbg !7950

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7951
  %curlayout = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 7, !dbg !7952
  store %struct.uiLayout* null, %struct.uiLayout** %curlayout, align 8, !dbg !7953
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7954
  %layouts = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 6, !dbg !7956
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layouts, i32 0, i32 0, !dbg !7957
  %6 = load i8*, i8** %first, align 8, !dbg !7957
  %7 = bitcast i8* %6 to %struct.uiLayoutRoot*, !dbg !7954
  store %struct.uiLayoutRoot* %7, %struct.uiLayoutRoot** %root, align 8, !dbg !7958
  br label %for.cond, !dbg !7959

for.cond:                                         ; preds = %for.inc, %if.end3
  %8 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7960
  %tobool4 = icmp ne %struct.uiLayoutRoot* %8, null, !dbg !7962
  br i1 %tobool4, label %for.body, label %for.end, !dbg !7962

for.body:                                         ; preds = %for.cond
  %9 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7963
  call void @ui_layout_add_padding_button(%struct.uiLayoutRoot* %9), !dbg !7965
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7966
  %11 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7967
  %layout = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %11, i32 0, i32 11, !dbg !7968
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7968
  %13 = load i32*, i32** %x.addr, align 8, !dbg !7969
  %14 = load i32*, i32** %y.addr, align 8, !dbg !7970
  call void @ui_layout_end(%struct.uiBlock* %10, %struct.uiLayout* %12, i32* %13, i32* %14), !dbg !7971
  %15 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7972
  %layout5 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %15, i32 0, i32 11, !dbg !7973
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout5, align 8, !dbg !7973
  call void @ui_layout_free(%struct.uiLayout* %16), !dbg !7974
  br label %for.inc, !dbg !7975

for.inc:                                          ; preds = %for.body
  %17 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !7976
  %next = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %17, i32 0, i32 0, !dbg !7977
  %18 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %next, align 8, !dbg !7977
  store %struct.uiLayoutRoot* %18, %struct.uiLayoutRoot** %root, align 8, !dbg !7978
  br label %for.cond, !dbg !7979, !llvm.loop !7980

for.end:                                          ; preds = %for.cond
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7982
  %layouts6 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %19, i32 0, i32 6, !dbg !7983
  call void @BLI_freelistN(%struct.ListBase* %layouts6), !dbg !7984
  call void @UI_template_fix_linking(), !dbg !7985
  ret void, !dbg !7987
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_layout_end(%struct.uiBlock* %block, %struct.uiLayout* %layout, i32* %x, i32* %y) #0 !dbg !7988 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %x.addr = alloca i32*, align 8
  %y.addr = alloca i32*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7991, metadata !DIExpression()), !dbg !7992
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !7993, metadata !DIExpression()), !dbg !7994
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !7995, metadata !DIExpression()), !dbg !7996
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !7997, metadata !DIExpression()), !dbg !7998
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !7999
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !8001
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !8001
  %handlefunc = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 7, !dbg !8002
  %2 = load void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*, i32)** %handlefunc, align 8, !dbg !8002
  %tobool = icmp ne void (%struct.bContext*, i8*, i32)* %2, null, !dbg !7999
  br i1 %tobool, label %if.then, label %if.end, !dbg !8003

if.then:                                          ; preds = %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8004
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8005
  %root1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 1, !dbg !8006
  %5 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root1, align 8, !dbg !8006
  %handlefunc2 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %5, i32 0, i32 7, !dbg !8007
  %6 = load void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*, i32)** %handlefunc2, align 8, !dbg !8007
  %7 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8008
  %root3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 1, !dbg !8009
  %8 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root3, align 8, !dbg !8009
  %argv = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %8, i32 0, i32 8, !dbg !8010
  %9 = load i8*, i8** %argv, align 8, !dbg !8010
  call void @uiBlockSetHandleFunc(%struct.uiBlock* %3, void (%struct.bContext*, i8*, i32)* %6, i8* %9), !dbg !8011
  br label %if.end, !dbg !8011

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8012
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 0, !dbg !8013
  call void @ui_item_estimate(%struct.uiItem* %item), !dbg !8014
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8015
  %item4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %11, i32 0, i32 0, !dbg !8016
  call void @ui_item_layout(%struct.uiItem* %item4), !dbg !8017
  %12 = load i32*, i32** %x.addr, align 8, !dbg !8018
  %tobool5 = icmp ne i32* %12, null, !dbg !8018
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !8020

if.then6:                                         ; preds = %if.end
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8021
  %x7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 4, !dbg !8022
  %14 = load i32, i32* %x7, align 8, !dbg !8022
  %15 = load i32*, i32** %x.addr, align 8, !dbg !8023
  store i32 %14, i32* %15, align 4, !dbg !8024
  br label %if.end8, !dbg !8025

if.end8:                                          ; preds = %if.then6, %if.end
  %16 = load i32*, i32** %y.addr, align 8, !dbg !8026
  %tobool9 = icmp ne i32* %16, null, !dbg !8026
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !8028

if.then10:                                        ; preds = %if.end8
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8029
  %y11 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %17, i32 0, i32 5, !dbg !8030
  %18 = load i32, i32* %y11, align 4, !dbg !8030
  %19 = load i32*, i32** %y.addr, align 8, !dbg !8031
  store i32 %18, i32* %19, align 4, !dbg !8032
  br label %if.end12, !dbg !8033

if.end12:                                         ; preds = %if.then10, %if.end8
  ret void, !dbg !8034
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_layout_free(%struct.uiLayout* %layout) #0 !dbg !8035 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %next = alloca %struct.uiItem*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !8038, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.declare(metadata %struct.uiItem** %next, metadata !8040, metadata !DIExpression()), !dbg !8041
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8042
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 3, !dbg !8044
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !8045
  %1 = load i8*, i8** %first, align 8, !dbg !8045
  %2 = bitcast i8* %1 to %struct.uiItem*, !dbg !8042
  store %struct.uiItem* %2, %struct.uiItem** %item, align 8, !dbg !8046
  br label %for.cond, !dbg !8047

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8048
  %tobool = icmp ne %struct.uiItem* %3, null, !dbg !8050
  br i1 %tobool, label %for.body, label %for.end, !dbg !8050

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8051
  %next1 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %4, i32 0, i32 0, !dbg !8053
  %5 = load i8*, i8** %next1, align 8, !dbg !8053
  %6 = bitcast i8* %5 to %struct.uiItem*, !dbg !8051
  store %struct.uiItem* %6, %struct.uiItem** %next, align 8, !dbg !8054
  %7 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8055
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %7, i32 0, i32 2, !dbg !8057
  %8 = load i32, i32* %type, align 8, !dbg !8057
  %cmp = icmp eq i32 %8, 0, !dbg !8058
  br i1 %cmp, label %if.then, label %if.else, !dbg !8059

if.then:                                          ; preds = %for.body
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8060
  %10 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8061
  %11 = bitcast %struct.uiItem* %10 to i8*, !dbg !8061
  call void %9(i8* %11), !dbg !8060
  br label %if.end, !dbg !8060

if.else:                                          ; preds = %for.body
  %12 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8062
  %13 = bitcast %struct.uiItem* %12 to %struct.uiLayout*, !dbg !8063
  call void @ui_layout_free(%struct.uiLayout* %13), !dbg !8064
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !8065

for.inc:                                          ; preds = %if.end
  %14 = load %struct.uiItem*, %struct.uiItem** %next, align 8, !dbg !8066
  store %struct.uiItem* %14, %struct.uiItem** %item, align 8, !dbg !8067
  br label %for.cond, !dbg !8068, !llvm.loop !8069

for.end:                                          ; preds = %for.cond
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8071
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8072
  %17 = bitcast %struct.uiLayout* %16 to i8*, !dbg !8072
  call void %15(i8* %17), !dbg !8071
  ret void, !dbg !8073
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @UI_template_fix_linking() #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutSetContextPointer(%struct.uiLayout* %layout, i8* %name, %struct.PointerRNA* %ptr) #0 !dbg !8074 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %name.addr = alloca i8*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %block = alloca %struct.uiBlock*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8077, metadata !DIExpression()), !dbg !8078
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8079, metadata !DIExpression()), !dbg !8080
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !8081, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !8083, metadata !DIExpression()), !dbg !8084
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8085
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !8086
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !8086
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !8087
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !8087
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !8084
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8088
  %contexts = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 8, !dbg !8089
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8090
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !8091
  %call = call %struct.bContextStore* @CTX_store_add(%struct.ListBase* %contexts, i8* %4, %struct.PointerRNA* %5), !dbg !8092
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8093
  %context = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %6, i32 0, i32 2, !dbg !8094
  store %struct.bContextStore* %call, %struct.bContextStore** %context, align 8, !dbg !8095
  ret void, !dbg !8096
}

declare dso_local %struct.bContextStore* @CTX_store_add(%struct.ListBase*, i8*, %struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutContextCopy(%struct.uiLayout* %layout, %struct.bContextStore* %context) #0 !dbg !8097 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %context.addr = alloca %struct.bContextStore*, align 8
  %block = alloca %struct.uiBlock*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  store %struct.bContextStore* %context, %struct.bContextStore** %context.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContextStore** %context.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !8104, metadata !DIExpression()), !dbg !8105
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8106
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !8107
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !8107
  %block1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 10, !dbg !8108
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block1, align 8, !dbg !8108
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !8105
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8109
  %contexts = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 8, !dbg !8110
  %4 = load %struct.bContextStore*, %struct.bContextStore** %context.addr, align 8, !dbg !8111
  %call = call %struct.bContextStore* @CTX_store_add_all(%struct.ListBase* %contexts, %struct.bContextStore* %4), !dbg !8112
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8113
  %context2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 2, !dbg !8114
  store %struct.bContextStore* %call, %struct.bContextStore** %context2, align 8, !dbg !8115
  ret void, !dbg !8116
}

declare dso_local %struct.bContextStore* @CTX_store_add_all(%struct.ListBase*, %struct.bContextStore*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @uiLayoutIntrospect(%struct.uiLayout* %layout) #0 !dbg !8117 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  %ds = alloca %struct.DynStr*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8120, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.declare(metadata %struct.DynStr** %ds, metadata !8122, metadata !DIExpression()), !dbg !8127
  %call = call %struct.DynStr* @BLI_dynstr_new(), !dbg !8128
  store %struct.DynStr* %call, %struct.DynStr** %ds, align 8, !dbg !8127
  %0 = load i8*, i8** @str, align 8, !dbg !8129
  %tobool = icmp ne i8* %0, null, !dbg !8129
  br i1 %tobool, label %if.then, label %if.end, !dbg !8131

if.then:                                          ; preds = %entry
  %1 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8132
  %2 = load i8*, i8** @str, align 8, !dbg !8134
  call void %1(i8* %2), !dbg !8132
  br label %if.end, !dbg !8135

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !8136
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8137
  call void @ui_intro_uiLayout(%struct.DynStr* %3, %struct.uiLayout* %4), !dbg !8138
  %5 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !8139
  %call1 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %5), !dbg !8140
  store i8* %call1, i8** @str, align 8, !dbg !8141
  %6 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !8142
  call void @BLI_dynstr_free(%struct.DynStr* %6), !dbg !8143
  %7 = load i8*, i8** @str, align 8, !dbg !8144
  ret i8* %7, !dbg !8145
}

declare dso_local %struct.DynStr* @BLI_dynstr_new() #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_intro_uiLayout(%struct.DynStr* %ds, %struct.uiLayout* %layout) #0 !dbg !8146 {
entry:
  %ds.addr = alloca %struct.DynStr*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.DynStr* %ds, %struct.DynStr** %ds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynStr** %ds.addr, metadata !8149, metadata !DIExpression()), !dbg !8150
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8151, metadata !DIExpression()), !dbg !8152
  %0 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !8153
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8154
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 3, !dbg !8155
  call void @ui_intro_items(%struct.DynStr* %0, %struct.ListBase* %items), !dbg !8156
  ret void, !dbg !8157
}

declare dso_local i8* @BLI_dynstr_get_cstring(%struct.DynStr*) #2

declare dso_local void @BLI_dynstr_free(%struct.DynStr*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiLayoutOperatorButs(%struct.bContext* %C, %struct.uiLayout* %layout, %struct.wmOperator* %op, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)* %check_prop, i8 zeroext %label_align, i16 signext %flag) #0 !dbg !8158 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %check_prop.addr = alloca i8 (%struct.PointerRNA*, %struct.PropertyRNA*)*, align 8
  %label_align.addr = alloca i8, align 1
  %flag.addr = alloca i16, align 2
  %val = alloca %union.IDPropertyTemplate, align 8
  %op_ptr = alloca %struct.PointerRNA, align 8
  %row = alloca %struct.uiLayout*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  %tmp23 = alloca %struct.PointerRNA, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %empty = alloca i32, align 4
  %block = alloca %struct.uiBlock*, align 8
  %is_popup = alloca i8, align 1
  %but = alloca %struct.uiBut*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8167, metadata !DIExpression()), !dbg !8168
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8169, metadata !DIExpression()), !dbg !8170
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8171, metadata !DIExpression()), !dbg !8172
  store i8 (%struct.PointerRNA*, %struct.PropertyRNA*)* %check_prop, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)** %check_prop.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (%struct.PointerRNA*, %struct.PropertyRNA*)** %check_prop.addr, metadata !8173, metadata !DIExpression()), !dbg !8174
  store i8 %label_align, i8* %label_align.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %label_align.addr, metadata !8175, metadata !DIExpression()), !dbg !8176
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !8177, metadata !DIExpression()), !dbg !8178
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8179
  %properties = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 3, !dbg !8181
  %1 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !8181
  %tobool = icmp ne %struct.IDProperty* %1, null, !dbg !8179
  br i1 %tobool, label %if.end, label %if.then, !dbg !8182

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !8183, metadata !DIExpression()), !dbg !8185
  %2 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !8185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.uiLayoutOperatorButs.val to i8*), i64 16, i1 false), !dbg !8185
  %call = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)), !dbg !8186
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8187
  %properties1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 3, !dbg !8188
  store %struct.IDProperty* %call, %struct.IDProperty** %properties1, align 8, !dbg !8189
  br label %if.end, !dbg !8190

if.end:                                           ; preds = %if.then, %entry
  %4 = load i16, i16* %flag.addr, align 2, !dbg !8191
  %conv = sext i16 %4 to i32, !dbg !8191
  %and = and i32 %conv, 1, !dbg !8193
  %tobool2 = icmp ne i32 %and, 0, !dbg !8193
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8194

if.then3:                                         ; preds = %if.end
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8195
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8197
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 4, !dbg !8198
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !8198
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8199
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8199
  %call4 = call i8* @RNA_struct_ui_name(%struct.StructRNA* %8), !dbg !8200
  call void @uiItemL(%struct.uiLayout* %5, i8* %call4, i32 0), !dbg !8201
  br label %if.end5, !dbg !8202

if.end5:                                          ; preds = %if.then3, %if.end
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8203
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8205
  %call6 = call zeroext i8 @WM_operator_repeat_check(%struct.bContext* %9, %struct.wmOperator* %10), !dbg !8206
  %tobool7 = icmp ne i8 %call6, 0, !dbg !8206
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8207

if.then8:                                         ; preds = %if.end5
  %11 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8208
  %call9 = call %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %11), !dbg !8210
  call void @uiBlockSetButLock(%struct.uiBlock* %call9, i8 zeroext 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0)), !dbg !8211
  %12 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8212
  call void @uiItemL(%struct.uiLayout* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0), i32 0), !dbg !8213
  br label %if.end10, !dbg !8214

if.end10:                                         ; preds = %if.then8, %if.end5
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8215
  %type11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 4, !dbg !8217
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type11, align 8, !dbg !8217
  %flag12 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 19, !dbg !8218
  %15 = load i16, i16* %flag12, align 8, !dbg !8218
  %conv13 = sext i16 %15 to i32, !dbg !8215
  %and14 = and i32 %conv13, 32, !dbg !8219
  %tobool15 = icmp ne i32 %and14, 0, !dbg !8219
  br i1 %tobool15, label %if.then16, label %if.end24, !dbg !8220

if.then16:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %op_ptr, metadata !8221, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %row, metadata !8224, metadata !DIExpression()), !dbg !8225
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8226
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8227
  %call17 = call %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %17), !dbg !8228
  %ui_operator = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %call17, i32 0, i32 47, !dbg !8229
  store %struct.wmOperator* %16, %struct.wmOperator** %ui_operator, align 8, !dbg !8230
  %18 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8231
  %call18 = call %struct.uiLayout* @uiLayoutRow(%struct.uiLayout* %18, i32 1), !dbg !8232
  store %struct.uiLayout* %call18, %struct.uiLayout** %row, align 8, !dbg !8233
  %19 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8234
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8235
  call void @uiItemM(%struct.uiLayout* %19, %struct.bContext* %20, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), i8* null, i32 0), !dbg !8236
  call void @WM_operator_properties_create(%struct.PointerRNA* %op_ptr, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i64 0, i64 0)), !dbg !8237
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8238
  %type19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 4, !dbg !8239
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type19, align 8, !dbg !8239
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 1, !dbg !8240
  %23 = load i8*, i8** %idname, align 8, !dbg !8240
  call void @RNA_string_set(%struct.PointerRNA* %op_ptr, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), i8* %23), !dbg !8241
  %24 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8242
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %op_ptr, i32 0, i32 2, !dbg !8243
  %25 = load i8*, i8** %data, align 8, !dbg !8243
  %26 = bitcast i8* %25 to %struct.IDProperty*, !dbg !8244
  call void @uiItemFullO(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %24, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 31, %struct.IDProperty* %26, i32 0, i32 0), !dbg !8245
  call void @WM_operator_properties_create(%struct.PointerRNA* %op_ptr, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i64 0, i64 0)), !dbg !8246
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8247
  %type20 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %27, i32 0, i32 4, !dbg !8248
  %28 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type20, align 8, !dbg !8248
  %idname21 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %28, i32 0, i32 1, !dbg !8249
  %29 = load i8*, i8** %idname21, align 8, !dbg !8249
  call void @RNA_string_set(%struct.PointerRNA* %op_ptr, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), i8* %29), !dbg !8250
  call void @RNA_boolean_set(%struct.PointerRNA* %op_ptr, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0), i32 1), !dbg !8251
  %30 = load %struct.uiLayout*, %struct.uiLayout** %row, align 8, !dbg !8252
  %data22 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %op_ptr, i32 0, i32 2, !dbg !8253
  %31 = load i8*, i8** %data22, align 8, !dbg !8253
  %32 = bitcast i8* %31 to %struct.IDProperty*, !dbg !8254
  call void @uiItemFullO(%struct.PointerRNA* sret %tmp23, %struct.uiLayout* %30, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 32, %struct.IDProperty* %32, i32 0, i32 0), !dbg !8255
  br label %if.end24, !dbg !8256

if.end24:                                         ; preds = %if.then16, %if.end10
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8257
  %type25 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 4, !dbg !8259
  %34 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type25, align 8, !dbg !8259
  %ui = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %34, i32 0, i32 10, !dbg !8260
  %35 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %ui, align 8, !dbg !8260
  %tobool26 = icmp ne void (%struct.bContext*, %struct.wmOperator*)* %35, null, !dbg !8257
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !8261

if.then27:                                        ; preds = %if.end24
  %36 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8262
  %37 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8264
  %layout28 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %37, i32 0, i32 11, !dbg !8265
  store %struct.uiLayout* %36, %struct.uiLayout** %layout28, align 8, !dbg !8266
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8267
  %type29 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %38, i32 0, i32 4, !dbg !8268
  %39 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type29, align 8, !dbg !8268
  %ui30 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %39, i32 0, i32 10, !dbg !8269
  %40 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %ui30, align 8, !dbg !8269
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8270
  %42 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8271
  call void %40(%struct.bContext* %41, %struct.wmOperator* %42), !dbg !8267
  %43 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8272
  %layout31 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %43, i32 0, i32 11, !dbg !8273
  store %struct.uiLayout* null, %struct.uiLayout** %layout31, align 8, !dbg !8274
  br label %if.end44, !dbg !8275

if.else:                                          ; preds = %if.end24
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !8276, metadata !DIExpression()), !dbg !8280
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8281
  %call32 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %44), !dbg !8282
  store %struct.wmWindowManager* %call32, %struct.wmWindowManager** %wm, align 8, !dbg !8280
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !8283, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.declare(metadata i32* %empty, metadata !8285, metadata !DIExpression()), !dbg !8286
  %45 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8287
  %id = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %45, i32 0, i32 0, !dbg !8288
  %46 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8289
  %type33 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %46, i32 0, i32 4, !dbg !8290
  %47 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type33, align 8, !dbg !8290
  %srna34 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %47, i32 0, i32 11, !dbg !8291
  %48 = load %struct.StructRNA*, %struct.StructRNA** %srna34, align 8, !dbg !8291
  %49 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8292
  %properties35 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %49, i32 0, i32 3, !dbg !8293
  %50 = load %struct.IDProperty*, %struct.IDProperty** %properties35, align 8, !dbg !8293
  %51 = bitcast %struct.IDProperty* %50 to i8*, !dbg !8292
  call void @RNA_pointer_create(%struct.ID* %id, %struct.StructRNA* %48, i8* %51, %struct.PointerRNA* %ptr), !dbg !8294
  %52 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8295
  %53 = load i8 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)** %check_prop.addr, align 8, !dbg !8296
  %54 = load i8, i8* %label_align.addr, align 1, !dbg !8297
  %call36 = call i32 @uiDefAutoButsRNA(%struct.uiLayout* %52, %struct.PointerRNA* %ptr, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)* %53, i8 zeroext %54), !dbg !8298
  %cmp = icmp eq i32 %call36, 0, !dbg !8299
  %conv37 = zext i1 %cmp to i32, !dbg !8299
  store i32 %conv37, i32* %empty, align 4, !dbg !8300
  %55 = load i32, i32* %empty, align 4, !dbg !8301
  %tobool38 = icmp ne i32 %55, 0, !dbg !8301
  br i1 %tobool38, label %land.lhs.true, label %if.end43, !dbg !8303

land.lhs.true:                                    ; preds = %if.else
  %56 = load i16, i16* %flag.addr, align 2, !dbg !8304
  %conv39 = sext i16 %56 to i32, !dbg !8304
  %and40 = and i32 %conv39, 2, !dbg !8305
  %tobool41 = icmp ne i32 %and40, 0, !dbg !8305
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !8306

if.then42:                                        ; preds = %land.lhs.true
  %57 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8307
  call void @uiItemL(%struct.uiLayout* %57, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0), i32 0), !dbg !8309
  br label %if.end43, !dbg !8310

if.end43:                                         ; preds = %if.then42, %land.lhs.true, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then27
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !8311, metadata !DIExpression()), !dbg !8313
  %58 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8314
  %call45 = call %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %58), !dbg !8315
  store %struct.uiBlock* %call45, %struct.uiBlock** %block, align 8, !dbg !8313
  call void @llvm.dbg.declare(metadata i8* %is_popup, metadata !8316, metadata !DIExpression()), !dbg !8317
  %59 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8318
  %flag46 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %59, i32 0, i32 27, !dbg !8319
  %60 = load i32, i32* %flag46, align 8, !dbg !8319
  %and47 = and i32 %60, 256, !dbg !8320
  %cmp48 = icmp ne i32 %and47, 0, !dbg !8321
  %conv49 = zext i1 %cmp48 to i32, !dbg !8321
  %conv50 = trunc i32 %conv49 to i8, !dbg !8322
  store i8 %conv50, i8* %is_popup, align 1, !dbg !8317
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !8323, metadata !DIExpression()), !dbg !8324
  %61 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8325
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %61, i32 0, i32 2, !dbg !8327
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !8328
  %62 = load i8*, i8** %first, align 8, !dbg !8328
  %63 = bitcast i8* %62 to %struct.uiBut*, !dbg !8325
  store %struct.uiBut* %63, %struct.uiBut** %but, align 8, !dbg !8329
  br label %for.cond, !dbg !8330

for.cond:                                         ; preds = %for.inc, %if.end44
  %64 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8331
  %tobool51 = icmp ne %struct.uiBut* %64, null, !dbg !8333
  br i1 %tobool51, label %for.body, label %for.end, !dbg !8333

for.body:                                         ; preds = %for.cond
  %65 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8334
  call void @uiButClearFlag(%struct.uiBut* %65, i32 524288), !dbg !8336
  %66 = load i8, i8* %is_popup, align 1, !dbg !8337
  %tobool52 = icmp ne i8 %66, 0, !dbg !8337
  br i1 %tobool52, label %if.then53, label %if.end64, !dbg !8339

if.then53:                                        ; preds = %for.body
  %67 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8340
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %67, i32 0, i32 55, !dbg !8343
  %68 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !8343
  %69 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8344
  %type54 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %69, i32 0, i32 4, !dbg !8345
  %70 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type54, align 8, !dbg !8345
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %70, i32 0, i32 13, !dbg !8346
  %71 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8346
  %cmp55 = icmp eq %struct.PropertyRNA* %68, %71, !dbg !8347
  br i1 %cmp55, label %land.lhs.true57, label %if.end63, !dbg !8348

land.lhs.true57:                                  ; preds = %if.then53
  %72 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8349
  %type58 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %72, i32 0, i32 4, !dbg !8350
  %73 = load i32, i32* %type58, align 8, !dbg !8350
  %cmp59 = icmp eq i32 %73, 3072, !dbg !8351
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !8352

if.then61:                                        ; preds = %land.lhs.true57
  %74 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8353
  %call62 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %74), !dbg !8355
  %75 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8356
  call void @uiButSetFocusOnEnter(%struct.wmWindow* %call62, %struct.uiBut* %75), !dbg !8357
  br label %if.end63, !dbg !8358

if.end63:                                         ; preds = %if.then61, %land.lhs.true57, %if.then53
  br label %if.end64, !dbg !8359

if.end64:                                         ; preds = %if.end63, %for.body
  br label %for.inc, !dbg !8360

for.inc:                                          ; preds = %if.end64
  %76 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8361
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %76, i32 0, i32 0, !dbg !8362
  %77 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !8362
  store %struct.uiBut* %77, %struct.uiBut** %but, align 8, !dbg !8363
  br label %for.cond, !dbg !8364, !llvm.loop !8365

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8367
}

declare dso_local zeroext i8 @WM_operator_repeat_check(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @uiBlockSetButLock(%struct.uiBlock*, i8 zeroext, i8*) #2

declare dso_local void @WM_operator_properties_create(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #2

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local i32 @uiDefAutoButsRNA(%struct.uiLayout*, %struct.PointerRNA*, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i8 zeroext) #2

declare dso_local void @uiButClearFlag(%struct.uiBut*, i32) #2

declare dso_local void @uiButSetFocusOnEnter(%struct.wmWindow*, %struct.uiBut*) #2

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MenuType* @uiButGetMenuType(%struct.uiBut* %but) #0 !dbg !8368 {
entry:
  %retval = alloca %struct.MenuType*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8371, metadata !DIExpression()), !dbg !8372
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8373
  %menu_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 53, !dbg !8375
  %1 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %menu_create_func, align 8, !dbg !8375
  %cmp = icmp eq void (%struct.bContext*, %struct.uiLayout*, i8*)* %1, @ui_item_menutype_func, !dbg !8376
  br i1 %cmp, label %if.then, label %if.else, !dbg !8377

if.then:                                          ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8378
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 19, !dbg !8380
  %3 = load i8*, i8** %poin, align 8, !dbg !8380
  %4 = bitcast i8* %3 to %struct.MenuType*, !dbg !8381
  store %struct.MenuType* %4, %struct.MenuType** %retval, align 8, !dbg !8382
  br label %return, !dbg !8382

if.else:                                          ; preds = %entry
  store %struct.MenuType* null, %struct.MenuType** %retval, align 8, !dbg !8383
  br label %return, !dbg !8383

return:                                           ; preds = %if.else, %if.then
  %5 = load %struct.MenuType*, %struct.MenuType** %retval, align 8, !dbg !8385
  ret %struct.MenuType* %5, !dbg !8385
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_layout_vary_direction(%struct.uiLayout* %layout) #0 !dbg !8386 {
entry:
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8389
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !8389
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !8389
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 2, !dbg !8389
  %2 = load i32, i32* %type, align 8, !dbg !8389
  %cmp = icmp eq i32 %2, 1, !dbg !8389
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8389

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8389
  %root1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 1, !dbg !8389
  %4 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root1, align 8, !dbg !8389
  %type2 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %4, i32 0, i32 2, !dbg !8389
  %5 = load i32, i32* %type2, align 8, !dbg !8389
  %cmp3 = icmp eq i32 %5, 4, !dbg !8389
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !8390

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8391
  %alignment = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %6, i32 0, i32 15, !dbg !8392
  %7 = load i8, i8* %alignment, align 1, !dbg !8392
  %conv = zext i8 %7 to i32, !dbg !8391
  %cmp4 = icmp ne i32 %conv, 0, !dbg !8393
  br label %lor.end, !dbg !8390

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %8 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp4, %lor.rhs ]
  %9 = zext i1 %8 to i64, !dbg !8394
  %cond = select i1 %8, i32 1, i32 2, !dbg !8394
  ret i32 %cond, !dbg !8395
}

declare dso_local i32 @UI_GetStringWidth(i8*) #2

declare dso_local zeroext i8 @RNA_enum_name(%struct.EnumPropertyItem*, i32, i8**) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

declare dso_local i32 @RNA_property_subtype(%struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !8396 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8400, metadata !DIExpression()), !dbg !8401
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8402, metadata !DIExpression()), !dbg !8403
  %0 = load i32, i32* %b.addr, align 4, !dbg !8404
  %1 = load i32, i32* %a.addr, align 4, !dbg !8405
  %cmp = icmp slt i32 %0, %1, !dbg !8406
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8407

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !8408
  br label %cond.end, !dbg !8407

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !8409
  br label %cond.end, !dbg !8407

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8407
  ret i32 %cond, !dbg !8410
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.ceil.f32(float) #1

declare dso_local void @uiBlockBeginAlign(%struct.uiBlock*) #2

declare dso_local void @uiButSetFunc(%struct.uiBut*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_layer_but_cb(%struct.bContext* %C, i8* %arg_but, i8* %arg_index) #0 !dbg !8411 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arg_but.addr = alloca i8*, align 8
  %arg_index.addr = alloca i8*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %but = alloca %struct.uiBut*, align 8
  %cbut = alloca %struct.uiBut*, align 8
  %ptr = alloca %struct.PointerRNA*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %shift = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8414, metadata !DIExpression()), !dbg !8415
  store i8* %arg_but, i8** %arg_but.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_but.addr, metadata !8416, metadata !DIExpression()), !dbg !8417
  store i8* %arg_index, i8** %arg_index.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_index.addr, metadata !8418, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !8420, metadata !DIExpression()), !dbg !8423
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8424
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !8425
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !8423
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !8426, metadata !DIExpression()), !dbg !8427
  %1 = load i8*, i8** %arg_but.addr, align 8, !dbg !8428
  %2 = bitcast i8* %1 to %struct.uiBut*, !dbg !8428
  store %struct.uiBut* %2, %struct.uiBut** %but, align 8, !dbg !8427
  call void @llvm.dbg.declare(metadata %struct.uiBut** %cbut, metadata !8429, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr, metadata !8431, metadata !DIExpression()), !dbg !8432
  %3 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8433
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 54, !dbg !8434
  store %struct.PointerRNA* %rnapoin, %struct.PointerRNA** %ptr, align 8, !dbg !8432
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8435, metadata !DIExpression()), !dbg !8436
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8437
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 55, !dbg !8438
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !8438
  store %struct.PropertyRNA* %5, %struct.PropertyRNA** %prop, align 8, !dbg !8436
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8439, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8441, metadata !DIExpression()), !dbg !8442
  %6 = load i8*, i8** %arg_index.addr, align 8, !dbg !8443
  %7 = ptrtoint i8* %6 to i64, !dbg !8443
  %conv = trunc i64 %7 to i32, !dbg !8443
  store i32 %conv, i32* %index, align 4, !dbg !8442
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !8444, metadata !DIExpression()), !dbg !8445
  %8 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8446
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %8, i32 0, i32 21, !dbg !8447
  %9 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !8447
  %shift1 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 17, !dbg !8448
  %10 = load i16, i16* %shift1, align 8, !dbg !8448
  %conv2 = sext i16 %10 to i32, !dbg !8446
  store i32 %conv2, i32* %shift, align 4, !dbg !8445
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8449, metadata !DIExpression()), !dbg !8450
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8451
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8452
  %call3 = call i32 @RNA_property_array_length(%struct.PointerRNA* %11, %struct.PropertyRNA* %12), !dbg !8453
  store i32 %call3, i32* %len, align 4, !dbg !8450
  %13 = load i32, i32* %shift, align 4, !dbg !8454
  %tobool = icmp ne i32 %13, 0, !dbg !8454
  br i1 %tobool, label %if.end13, label %if.then, !dbg !8456

if.then:                                          ; preds = %entry
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8457
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8459
  %16 = load i32, i32* %index, align 4, !dbg !8460
  call void @RNA_property_boolean_set_index(%struct.PointerRNA* %14, %struct.PropertyRNA* %15, i32 %16, i32 1), !dbg !8461
  store i32 0, i32* %i, align 4, !dbg !8462
  br label %for.cond, !dbg !8464

for.cond:                                         ; preds = %for.inc, %if.then
  %17 = load i32, i32* %i, align 4, !dbg !8465
  %18 = load i32, i32* %len, align 4, !dbg !8467
  %cmp = icmp slt i32 %17, %18, !dbg !8468
  br i1 %cmp, label %for.body, label %for.end, !dbg !8469

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !dbg !8470
  %20 = load i32, i32* %index, align 4, !dbg !8472
  %cmp5 = icmp ne i32 %19, %20, !dbg !8473
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8474

if.then7:                                         ; preds = %for.body
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8475
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8476
  %23 = load i32, i32* %i, align 4, !dbg !8477
  call void @RNA_property_boolean_set_index(%struct.PointerRNA* %21, %struct.PropertyRNA* %22, i32 %23, i32 0), !dbg !8478
  br label %if.end, !dbg !8478

if.end:                                           ; preds = %if.then7, %for.body
  br label %for.inc, !dbg !8472

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !8479
  %inc = add nsw i32 %24, 1, !dbg !8479
  store i32 %inc, i32* %i, align 4, !dbg !8479
  br label %for.cond, !dbg !8480, !llvm.loop !8481

for.end:                                          ; preds = %for.cond
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8483
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8484
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8485
  call void @RNA_property_update(%struct.bContext* %25, %struct.PointerRNA* %26, %struct.PropertyRNA* %27), !dbg !8486
  %28 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8487
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 74, !dbg !8489
  %29 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8489
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %29, i32 0, i32 2, !dbg !8490
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !8491
  %30 = load i8*, i8** %first, align 8, !dbg !8491
  %31 = bitcast i8* %30 to %struct.uiBut*, !dbg !8487
  store %struct.uiBut* %31, %struct.uiBut** %cbut, align 8, !dbg !8492
  br label %for.cond8, !dbg !8493

for.cond8:                                        ; preds = %for.inc11, %for.end
  %32 = load %struct.uiBut*, %struct.uiBut** %cbut, align 8, !dbg !8494
  %tobool9 = icmp ne %struct.uiBut* %32, null, !dbg !8496
  br i1 %tobool9, label %for.body10, label %for.end12, !dbg !8496

for.body10:                                       ; preds = %for.cond8
  %33 = load %struct.uiBut*, %struct.uiBut** %cbut, align 8, !dbg !8497
  call void @ui_check_but(%struct.uiBut* %33), !dbg !8498
  br label %for.inc11, !dbg !8498

for.inc11:                                        ; preds = %for.body10
  %34 = load %struct.uiBut*, %struct.uiBut** %cbut, align 8, !dbg !8499
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 0, !dbg !8500
  %35 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !8500
  store %struct.uiBut* %35, %struct.uiBut** %cbut, align 8, !dbg !8501
  br label %for.cond8, !dbg !8502, !llvm.loop !8503

for.end12:                                        ; preds = %for.cond8
  br label %if.end13, !dbg !8505

if.end13:                                         ; preds = %for.end12, %entry
  ret void, !dbg !8506
}

declare dso_local void @uiBlockEndAlign(%struct.uiBlock*) #2

declare dso_local i32 @RNA_property_array_dimension(%struct.PointerRNA*, %struct.PropertyRNA*, i32*) #2

declare dso_local void @RNA_property_boolean_get_array(%struct.PointerRNA*, %struct.PropertyRNA*, i32*) #2

declare dso_local zeroext i8 @RNA_property_array_item_char(%struct.PropertyRNA*, i32) #2

declare dso_local void @uiButSetUnitType(%struct.uiBut*, i32) #2

declare dso_local void @RNA_property_boolean_set_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32, i32) #2

declare dso_local void @RNA_property_update(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @ui_check_but(%struct.uiBut*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_enum_expand_handle(%struct.bContext* %C, i8* %arg1, i8* %arg2) #0 !dbg !8507 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arg1.addr = alloca i8*, align 8
  %arg2.addr = alloca i8*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %but = alloca %struct.uiBut*, align 8
  %enum_value = alloca i32, align 4
  %current_value = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8508, metadata !DIExpression()), !dbg !8509
  store i8* %arg1, i8** %arg1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg1.addr, metadata !8510, metadata !DIExpression()), !dbg !8511
  store i8* %arg2, i8** %arg2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2.addr, metadata !8512, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !8514, metadata !DIExpression()), !dbg !8515
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8516
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !8517
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !8515
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8518
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %1, i32 0, i32 21, !dbg !8520
  %2 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !8520
  %shift = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 17, !dbg !8521
  %3 = load i16, i16* %shift, align 8, !dbg !8521
  %tobool = icmp ne i16 %3, 0, !dbg !8518
  br i1 %tobool, label %if.end7, label %if.then, !dbg !8522

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !8523, metadata !DIExpression()), !dbg !8525
  %4 = load i8*, i8** %arg1.addr, align 8, !dbg !8526
  %5 = bitcast i8* %4 to %struct.uiBut*, !dbg !8527
  store %struct.uiBut* %5, %struct.uiBut** %but, align 8, !dbg !8525
  call void @llvm.dbg.declare(metadata i32* %enum_value, metadata !8528, metadata !DIExpression()), !dbg !8529
  %6 = load i8*, i8** %arg2.addr, align 8, !dbg !8530
  %7 = ptrtoint i8* %6 to i64, !dbg !8530
  %conv = trunc i64 %7 to i32, !dbg !8530
  store i32 %conv, i32* %enum_value, align 4, !dbg !8529
  call void @llvm.dbg.declare(metadata i32* %current_value, metadata !8531, metadata !DIExpression()), !dbg !8532
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8533
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 54, !dbg !8534
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8535
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 55, !dbg !8536
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !8536
  %call1 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %10), !dbg !8537
  store i32 %call1, i32* %current_value, align 4, !dbg !8532
  %11 = load i32, i32* %current_value, align 4, !dbg !8538
  %12 = load i32, i32* %enum_value, align 4, !dbg !8540
  %and = and i32 %11, %12, !dbg !8541
  %tobool2 = icmp ne i32 %and, 0, !dbg !8541
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !8542

if.then3:                                         ; preds = %if.then
  %13 = load i32, i32* %enum_value, align 4, !dbg !8543
  store i32 %13, i32* %current_value, align 4, !dbg !8545
  br label %if.end, !dbg !8546

if.else:                                          ; preds = %if.then
  %14 = load i32, i32* %enum_value, align 4, !dbg !8547
  %15 = load i32, i32* %current_value, align 4, !dbg !8549
  %and4 = and i32 %15, %14, !dbg !8549
  store i32 %and4, i32* %current_value, align 4, !dbg !8549
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8550
  %rnapoin5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 54, !dbg !8551
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8552
  %rnaprop6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 55, !dbg !8553
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop6, align 8, !dbg !8553
  %19 = load i32, i32* %current_value, align 4, !dbg !8554
  call void @RNA_property_enum_set(%struct.PointerRNA* %rnapoin5, %struct.PropertyRNA* %18, i32 %19), !dbg !8555
  br label %if.end7, !dbg !8556

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !8557
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_layout_local_dir(%struct.uiLayout* %layout) #0 !dbg !8558 {
entry:
  %retval = alloca i32, align 4
  %layout.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !8559, metadata !DIExpression()), !dbg !8560
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !8561
  %item = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 0, !dbg !8562
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item, i32 0, i32 2, !dbg !8563
  %1 = load i32, i32* %type, align 8, !dbg !8563
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 10, label %sw.bb
    i32 8, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 7, label %sw.bb1
    i32 6, label %sw.bb1
    i32 5, label %sw.bb1
  ], !dbg !8564

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i32 0, i32* %retval, align 4, !dbg !8565
  br label %return, !dbg !8565

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.default, !dbg !8565

sw.default:                                       ; preds = %entry, %sw.bb1
  store i32 1, i32* %retval, align 4, !dbg !8567
  br label %return, !dbg !8567

return:                                           ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !8568
  ret i32 %2, !dbg !8568
}

declare dso_local %struct.uiBut* @uiDefIconButO(%struct.uiBlock*, i32, i8*, i32, i32, i32, i32, i16 signext, i16 signext, i8*) #2

declare dso_local zeroext i8 @RNA_struct_is_a(%struct.StructRNA*, %struct.StructRNA*) #2

declare dso_local i32 @WM_keymap_item_to_string(%struct.wmKeyMapItem*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_keymap_but_cb(%struct.bContext* %UNUSED_C, i8* %but_v, i8* %UNUSED_key_v) #0 !dbg !8569 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %but_v.addr = alloca i8*, align 8
  %UNUSED_key_v.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  store i8* %but_v, i8** %but_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %but_v.addr, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i8* %UNUSED_key_v, i8** %UNUSED_key_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_key_v.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !8576, metadata !DIExpression()), !dbg !8577
  %0 = load i8*, i8** %but_v.addr, align 8, !dbg !8578
  %1 = bitcast i8* %0 to %struct.uiBut*, !dbg !8578
  store %struct.uiBut* %1, %struct.uiBut** %but, align 8, !dbg !8577
  %2 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8579
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 54, !dbg !8580
  %3 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8581
  %modifier_key = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 50, !dbg !8582
  %4 = load i16, i16* %modifier_key, align 2, !dbg !8582
  %conv = sext i16 %4 to i32, !dbg !8581
  %and = and i32 %conv, 1, !dbg !8583
  %cmp = icmp ne i32 %and, 0, !dbg !8584
  %conv1 = zext i1 %cmp to i32, !dbg !8584
  call void @RNA_boolean_set(%struct.PointerRNA* %rnapoin, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i32 %conv1), !dbg !8585
  %5 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8586
  %rnapoin2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 54, !dbg !8587
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8588
  %modifier_key3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 50, !dbg !8589
  %7 = load i16, i16* %modifier_key3, align 2, !dbg !8589
  %conv4 = sext i16 %7 to i32, !dbg !8588
  %and5 = and i32 %conv4, 2, !dbg !8590
  %cmp6 = icmp ne i32 %and5, 0, !dbg !8591
  %conv7 = zext i1 %cmp6 to i32, !dbg !8591
  call void @RNA_boolean_set(%struct.PointerRNA* %rnapoin2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i32 %conv7), !dbg !8592
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8593
  %rnapoin8 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 54, !dbg !8594
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8595
  %modifier_key9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 50, !dbg !8596
  %10 = load i16, i16* %modifier_key9, align 2, !dbg !8596
  %conv10 = sext i16 %10 to i32, !dbg !8595
  %and11 = and i32 %conv10, 4, !dbg !8597
  %cmp12 = icmp ne i32 %and11, 0, !dbg !8598
  %conv13 = zext i1 %cmp12 to i32, !dbg !8598
  call void @RNA_boolean_set(%struct.PointerRNA* %rnapoin8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %conv13), !dbg !8599
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8600
  %rnapoin14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 54, !dbg !8601
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8602
  %modifier_key15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 50, !dbg !8603
  %13 = load i16, i16* %modifier_key15, align 2, !dbg !8603
  %conv16 = sext i16 %13 to i32, !dbg !8602
  %and17 = and i32 %conv16, 8, !dbg !8604
  %cmp18 = icmp ne i32 %and17, 0, !dbg !8605
  %conv19 = zext i1 %cmp18 to i32, !dbg !8605
  call void @RNA_boolean_set(%struct.PointerRNA* %rnapoin14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i32 %conv19), !dbg !8606
  ret void, !dbg !8607
}

declare dso_local void @RNA_main_pointer_create(%struct.Main*, %struct.PointerRNA*) #2

declare dso_local void @RNA_property_collection_begin(%struct.PointerRNA*, %struct.PropertyRNA*, %struct.CollectionPropertyIterator*) #2

declare dso_local %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA*) #2

declare dso_local void @RNA_property_collection_next(%struct.CollectionPropertyIterator*) #2

declare dso_local void @RNA_property_collection_end(%struct.CollectionPropertyIterator*) #2

declare dso_local i32 @RNA_property_pointer_poll(%struct.PointerRNA*, %struct.PropertyRNA*, %struct.PointerRNA*) #2

declare dso_local i8* @BLI_strdup(i8*) #2

declare dso_local i32 @ui_id_icon_get(%struct.bContext*, %struct.ID*, i8 zeroext) #2

declare dso_local i8* @RNA_struct_name_get_alloc(%struct.PointerRNA*, i8*, i32, i32*) #2

declare dso_local i8* @BLI_strcasestr(i8*, i8*) #2

declare dso_local void @BLI_sortlist(%struct.ListBase*, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @sort_search_items_list(i8* %a, i8* %b) #0 !dbg !8608 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %cis1 = alloca %struct.CollItemSearch*, align 8
  %cis2 = alloca %struct.CollItemSearch*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8613, metadata !DIExpression()), !dbg !8614
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8615, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.declare(metadata %struct.CollItemSearch** %cis1, metadata !8617, metadata !DIExpression()), !dbg !8618
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8619
  %1 = bitcast i8* %0 to %struct.CollItemSearch*, !dbg !8620
  store %struct.CollItemSearch* %1, %struct.CollItemSearch** %cis1, align 8, !dbg !8618
  call void @llvm.dbg.declare(metadata %struct.CollItemSearch** %cis2, metadata !8621, metadata !DIExpression()), !dbg !8622
  %2 = load i8*, i8** %b.addr, align 8, !dbg !8623
  %3 = bitcast i8* %2 to %struct.CollItemSearch*, !dbg !8624
  store %struct.CollItemSearch* %3, %struct.CollItemSearch** %cis2, align 8, !dbg !8622
  %4 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis1, align 8, !dbg !8625
  %name = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %4, i32 0, i32 2, !dbg !8627
  %5 = load i8*, i8** %name, align 8, !dbg !8627
  %6 = load %struct.CollItemSearch*, %struct.CollItemSearch** %cis2, align 8, !dbg !8628
  %name1 = getelementptr inbounds %struct.CollItemSearch, %struct.CollItemSearch* %6, i32 0, i32 2, !dbg !8629
  %7 = load i8*, i8** %name1, align 8, !dbg !8629
  %call = call i32 @BLI_strcasecmp(i8* %5, i8* %7), !dbg !8630
  %cmp = icmp sgt i32 %call, 0, !dbg !8631
  br i1 %cmp, label %if.then, label %if.else, !dbg !8632

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8633
  br label %return, !dbg !8633

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8634
  br label %return, !dbg !8634

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !8635
  ret i32 %8, !dbg !8635
}

declare dso_local zeroext i8 @uiSearchItemAdd(%struct.uiSearchItems*, i8*, i8*, i32) #2

declare dso_local i32 @BLI_strcasecmp(i8*, i8*) #2

declare dso_local %struct.uiBut* @uiDefIconTextMenuBut(%struct.uiBlock*, void (%struct.bContext*, %struct.uiLayout*, i8*)*, i8*, i32, i8*, i32, i32, i16 signext, i16 signext, i8*) #2

declare dso_local %struct.uiBut* @uiDefIconMenuBut(%struct.uiBlock*, void (%struct.bContext*, %struct.uiLayout*, i8*)*, i8*, i32, i32, i32, i16 signext, i16 signext, i8*) #2

declare dso_local %struct.uiBut* @uiDefMenuBut(%struct.uiBlock*, void (%struct.bContext*, %struct.uiLayout*, i8*)*, i8*, i8*, i32, i32, i16 signext, i16 signext, i8*) #2

declare dso_local void @uiButSetMenuFromPulldown(%struct.uiBut*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local void @CTX_store_set(%struct.bContext*, %struct.bContextStore*) #2

declare dso_local %struct.uiBut* @uiDefIconTextBut(%struct.uiBlock*, i32, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i8*, float, float, float, float, i8*) #2

declare dso_local %struct.uiBut* @uiDefIconBut(%struct.uiBlock*, i32, i32, i32, i32, i32, i16 signext, i16 signext, i8*, float, float, float, float, i8*) #2

declare dso_local void @uiBlockSetDirection(%struct.uiBlock*, i8 zeroext) #2

declare dso_local void @uiBlockSetHandleFunc(%struct.uiBlock*, void (%struct.bContext*, i8*, i32)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_estimate(%struct.uiItem* %item) #0 !dbg !8636 {
entry:
  %item.addr = alloca %struct.uiItem*, align 8
  %subitem = alloca %struct.uiItem*, align 8
  %litem = alloca %struct.uiLayout*, align 8
  store %struct.uiItem* %item, %struct.uiItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item.addr, metadata !8639, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.declare(metadata %struct.uiItem** %subitem, metadata !8641, metadata !DIExpression()), !dbg !8642
  %0 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !8643
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %0, i32 0, i32 2, !dbg !8645
  %1 = load i32, i32* %type, align 8, !dbg !8645
  %cmp = icmp ne i32 %1, 0, !dbg !8646
  br i1 %cmp, label %if.then, label %if.end20, !dbg !8647

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !8648, metadata !DIExpression()), !dbg !8650
  %2 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !8651
  %3 = bitcast %struct.uiItem* %2 to %struct.uiLayout*, !dbg !8652
  store %struct.uiLayout* %3, %struct.uiLayout** %litem, align 8, !dbg !8650
  %4 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8653
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 3, !dbg !8655
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !8656
  %5 = load i8*, i8** %first, align 8, !dbg !8656
  %6 = bitcast i8* %5 to %struct.uiItem*, !dbg !8653
  store %struct.uiItem* %6, %struct.uiItem** %subitem, align 8, !dbg !8657
  br label %for.cond, !dbg !8658

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load %struct.uiItem*, %struct.uiItem** %subitem, align 8, !dbg !8659
  %tobool = icmp ne %struct.uiItem* %7, null, !dbg !8661
  br i1 %tobool, label %for.body, label %for.end, !dbg !8661

for.body:                                         ; preds = %for.cond
  %8 = load %struct.uiItem*, %struct.uiItem** %subitem, align 8, !dbg !8662
  call void @ui_item_estimate(%struct.uiItem* %8), !dbg !8663
  br label %for.inc, !dbg !8663

for.inc:                                          ; preds = %for.body
  %9 = load %struct.uiItem*, %struct.uiItem** %subitem, align 8, !dbg !8664
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %9, i32 0, i32 0, !dbg !8665
  %10 = load i8*, i8** %next, align 8, !dbg !8665
  %11 = bitcast i8* %10 to %struct.uiItem*, !dbg !8664
  store %struct.uiItem* %11, %struct.uiItem** %subitem, align 8, !dbg !8666
  br label %for.cond, !dbg !8667, !llvm.loop !8668

for.end:                                          ; preds = %for.cond
  %12 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8670
  %items1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %12, i32 0, i32 3, !dbg !8672
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %items1), !dbg !8673
  %tobool2 = icmp ne i8 %call, 0, !dbg !8673
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8674

if.then3:                                         ; preds = %for.end
  br label %if.end20, !dbg !8675

if.end:                                           ; preds = %for.end
  %13 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8676
  %scale = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 8, !dbg !8678
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %scale, i64 0, i64 0, !dbg !8676
  %14 = load float, float* %arrayidx, align 8, !dbg !8676
  %cmp4 = fcmp une float %14, 0.000000e+00, !dbg !8679
  br i1 %cmp4, label %if.then8, label %lor.lhs.false, !dbg !8680

lor.lhs.false:                                    ; preds = %if.end
  %15 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8681
  %scale5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 8, !dbg !8682
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %scale5, i64 0, i64 1, !dbg !8681
  %16 = load float, float* %arrayidx6, align 4, !dbg !8681
  %cmp7 = fcmp une float %16, 0.000000e+00, !dbg !8683
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !8684

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  %17 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8685
  %18 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8686
  %scale9 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 8, !dbg !8687
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %scale9, i64 0, i64 0, !dbg !8686
  call void @ui_item_scale(%struct.uiLayout* %17, float* %arraydecay), !dbg !8688
  br label %if.end10, !dbg !8688

if.end10:                                         ; preds = %if.then8, %lor.lhs.false
  %19 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8689
  %item11 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 0, !dbg !8690
  %type12 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item11, i32 0, i32 2, !dbg !8691
  %20 = load i32, i32* %type12, align 8, !dbg !8691
  switch i32 %20, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb13
    i32 1, label %sw.bb14
    i32 5, label %sw.bb15
    i32 10, label %sw.bb16
    i32 6, label %sw.bb17
    i32 7, label %sw.bb18
    i32 8, label %sw.bb19
  ], !dbg !8692

sw.bb:                                            ; preds = %if.end10
  %21 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8693
  call void @ui_litem_estimate_column(%struct.uiLayout* %21), !dbg !8695
  br label %sw.epilog, !dbg !8696

sw.bb13:                                          ; preds = %if.end10
  %22 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8697
  call void @ui_litem_estimate_column_flow(%struct.uiLayout* %22), !dbg !8698
  br label %sw.epilog, !dbg !8699

sw.bb14:                                          ; preds = %if.end10
  %23 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8700
  call void @ui_litem_estimate_row(%struct.uiLayout* %23), !dbg !8701
  br label %sw.epilog, !dbg !8702

sw.bb15:                                          ; preds = %if.end10
  %24 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8703
  call void @ui_litem_estimate_box(%struct.uiLayout* %24), !dbg !8704
  br label %sw.epilog, !dbg !8705

sw.bb16:                                          ; preds = %if.end10
  %25 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8706
  call void @ui_litem_estimate_root(%struct.uiLayout* %25), !dbg !8707
  br label %sw.epilog, !dbg !8708

sw.bb17:                                          ; preds = %if.end10
  %26 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8709
  call void @ui_litem_estimate_absolute(%struct.uiLayout* %26), !dbg !8710
  br label %sw.epilog, !dbg !8711

sw.bb18:                                          ; preds = %if.end10
  %27 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8712
  call void @ui_litem_estimate_split(%struct.uiLayout* %27), !dbg !8713
  br label %sw.epilog, !dbg !8714

sw.bb19:                                          ; preds = %if.end10
  %28 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8715
  call void @ui_litem_estimate_overlap(%struct.uiLayout* %28), !dbg !8716
  br label %sw.epilog, !dbg !8717

sw.default:                                       ; preds = %if.end10
  br label %sw.epilog, !dbg !8718

sw.epilog:                                        ; preds = %sw.default, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb
  br label %if.end20, !dbg !8719

if.end20:                                         ; preds = %if.then3, %sw.epilog, %entry
  ret void, !dbg !8720
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_layout(%struct.uiItem* %item) #0 !dbg !8721 {
entry:
  %item.addr = alloca %struct.uiItem*, align 8
  %subitem = alloca %struct.uiItem*, align 8
  %litem = alloca %struct.uiLayout*, align 8
  store %struct.uiItem* %item, %struct.uiItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.declare(metadata %struct.uiItem** %subitem, metadata !8724, metadata !DIExpression()), !dbg !8725
  %0 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !8726
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %0, i32 0, i32 2, !dbg !8728
  %1 = load i32, i32* %type, align 8, !dbg !8728
  %cmp = icmp ne i32 %1, 0, !dbg !8729
  br i1 %cmp, label %if.then, label %if.end23, !dbg !8730

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !8731, metadata !DIExpression()), !dbg !8733
  %2 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !8734
  %3 = bitcast %struct.uiItem* %2 to %struct.uiLayout*, !dbg !8735
  store %struct.uiLayout* %3, %struct.uiLayout** %litem, align 8, !dbg !8733
  %4 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8736
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 3, !dbg !8738
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %items), !dbg !8739
  %tobool = icmp ne i8 %call, 0, !dbg !8739
  br i1 %tobool, label %if.then1, label %if.end, !dbg !8740

if.then1:                                         ; preds = %if.then
  br label %if.end23, !dbg !8741

if.end:                                           ; preds = %if.then
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8742
  %align = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 10, !dbg !8744
  %6 = load i8, i8* %align, align 2, !dbg !8744
  %tobool2 = icmp ne i8 %6, 0, !dbg !8742
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8745

if.then3:                                         ; preds = %if.end
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8746
  %8 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8747
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 1, !dbg !8748
  %9 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !8748
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %9, i32 0, i32 10, !dbg !8749
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8749
  %alignnr = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 28, !dbg !8750
  %11 = load i16, i16* %alignnr, align 4, !dbg !8751
  %inc = add i16 %11, 1, !dbg !8751
  store i16 %inc, i16* %alignnr, align 4, !dbg !8751
  call void @ui_item_align(%struct.uiLayout* %7, i16 signext %inc), !dbg !8752
  br label %if.end4, !dbg !8752

if.end4:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8753
  %active = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %12, i32 0, i32 11, !dbg !8755
  %13 = load i8, i8* %active, align 1, !dbg !8755
  %tobool5 = icmp ne i8 %13, 0, !dbg !8753
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8756

if.then6:                                         ; preds = %if.end4
  %14 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8757
  call void @ui_item_flag(%struct.uiLayout* %14, i32 131072), !dbg !8758
  br label %if.end7, !dbg !8758

if.end7:                                          ; preds = %if.then6, %if.end4
  %15 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8759
  %enabled = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 12, !dbg !8761
  %16 = load i8, i8* %enabled, align 4, !dbg !8761
  %tobool8 = icmp ne i8 %16, 0, !dbg !8759
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !8762

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8763
  call void @ui_item_flag(%struct.uiLayout* %17, i32 2048), !dbg !8764
  br label %if.end10, !dbg !8764

if.end10:                                         ; preds = %if.then9, %if.end7
  %18 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8765
  %item11 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 0, !dbg !8766
  %type12 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %item11, i32 0, i32 2, !dbg !8767
  %19 = load i32, i32* %type12, align 8, !dbg !8767
  switch i32 %19, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb13
    i32 1, label %sw.bb14
    i32 5, label %sw.bb15
    i32 10, label %sw.bb16
    i32 6, label %sw.bb17
    i32 7, label %sw.bb18
    i32 8, label %sw.bb19
    i32 9, label %sw.bb20
  ], !dbg !8768

sw.bb:                                            ; preds = %if.end10
  %20 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8769
  call void @ui_litem_layout_column(%struct.uiLayout* %20), !dbg !8771
  br label %sw.epilog, !dbg !8772

sw.bb13:                                          ; preds = %if.end10
  %21 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8773
  call void @ui_litem_layout_column_flow(%struct.uiLayout* %21), !dbg !8774
  br label %sw.epilog, !dbg !8775

sw.bb14:                                          ; preds = %if.end10
  %22 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8776
  call void @ui_litem_layout_row(%struct.uiLayout* %22), !dbg !8777
  br label %sw.epilog, !dbg !8778

sw.bb15:                                          ; preds = %if.end10
  %23 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8779
  call void @ui_litem_layout_box(%struct.uiLayout* %23), !dbg !8780
  br label %sw.epilog, !dbg !8781

sw.bb16:                                          ; preds = %if.end10
  %24 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8782
  call void @ui_litem_layout_root(%struct.uiLayout* %24), !dbg !8783
  br label %sw.epilog, !dbg !8784

sw.bb17:                                          ; preds = %if.end10
  %25 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8785
  call void @ui_litem_layout_absolute(%struct.uiLayout* %25), !dbg !8786
  br label %sw.epilog, !dbg !8787

sw.bb18:                                          ; preds = %if.end10
  %26 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8788
  call void @ui_litem_layout_split(%struct.uiLayout* %26), !dbg !8789
  br label %sw.epilog, !dbg !8790

sw.bb19:                                          ; preds = %if.end10
  %27 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8791
  call void @ui_litem_layout_overlap(%struct.uiLayout* %27), !dbg !8792
  br label %sw.epilog, !dbg !8793

sw.bb20:                                          ; preds = %if.end10
  %28 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8794
  call void @ui_litem_layout_radial(%struct.uiLayout* %28), !dbg !8795
  br label %sw.epilog, !dbg !8796

sw.default:                                       ; preds = %if.end10
  br label %sw.epilog, !dbg !8797

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb
  %29 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !8798
  %items21 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 3, !dbg !8800
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items21, i32 0, i32 0, !dbg !8801
  %30 = load i8*, i8** %first, align 8, !dbg !8801
  %31 = bitcast i8* %30 to %struct.uiItem*, !dbg !8798
  store %struct.uiItem* %31, %struct.uiItem** %subitem, align 8, !dbg !8802
  br label %for.cond, !dbg !8803

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %32 = load %struct.uiItem*, %struct.uiItem** %subitem, align 8, !dbg !8804
  %tobool22 = icmp ne %struct.uiItem* %32, null, !dbg !8806
  br i1 %tobool22, label %for.body, label %for.end, !dbg !8806

for.body:                                         ; preds = %for.cond
  %33 = load %struct.uiItem*, %struct.uiItem** %subitem, align 8, !dbg !8807
  call void @ui_item_layout(%struct.uiItem* %33), !dbg !8808
  br label %for.inc, !dbg !8808

for.inc:                                          ; preds = %for.body
  %34 = load %struct.uiItem*, %struct.uiItem** %subitem, align 8, !dbg !8809
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %34, i32 0, i32 0, !dbg !8810
  %35 = load i8*, i8** %next, align 8, !dbg !8810
  %36 = bitcast i8* %35 to %struct.uiItem*, !dbg !8809
  store %struct.uiItem* %36, %struct.uiItem** %subitem, align 8, !dbg !8811
  br label %for.cond, !dbg !8812, !llvm.loop !8813

for.end:                                          ; preds = %for.cond
  br label %if.end23, !dbg !8815

if.end23:                                         ; preds = %if.then1, %for.end, %entry
  ret void, !dbg !8816
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !8817 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8823, metadata !DIExpression()), !dbg !8824
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8825
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8826
  %1 = load i8*, i8** %first, align 8, !dbg !8826
  %cmp = icmp eq i8* %1, null, !dbg !8827
  %conv = zext i1 %cmp to i32, !dbg !8827
  %conv1 = trunc i32 %conv to i8, !dbg !8828
  ret i8 %conv1, !dbg !8829
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_scale(%struct.uiLayout* %litem, float* %scale) #0 !dbg !8830 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %scale.addr = alloca float*, align 8
  %item = alloca %struct.uiItem*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !8835, metadata !DIExpression()), !dbg !8836
  store float* %scale, float** %scale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scale.addr, metadata !8837, metadata !DIExpression()), !dbg !8838
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8841, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8843, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.declare(metadata i32* %w, metadata !8845, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.declare(metadata i32* %h, metadata !8847, metadata !DIExpression()), !dbg !8848
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8849
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 3, !dbg !8851
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 1, !dbg !8852
  %1 = load i8*, i8** %last, align 8, !dbg !8852
  %2 = bitcast i8* %1 to %struct.uiItem*, !dbg !8849
  store %struct.uiItem* %2, %struct.uiItem** %item, align 8, !dbg !8853
  br label %for.cond, !dbg !8854

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8855
  %tobool = icmp ne %struct.uiItem* %3, null, !dbg !8857
  br i1 %tobool, label %for.body, label %for.end, !dbg !8857

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8858
  call void @ui_item_size(%struct.uiItem* %4, i32* %w, i32* %h), !dbg !8860
  %5 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8861
  call void @ui_item_offset(%struct.uiItem* %5, i32* %x, i32* %y), !dbg !8862
  %6 = load float*, float** %scale.addr, align 8, !dbg !8863
  %arrayidx = getelementptr inbounds float, float* %6, i64 0, !dbg !8863
  %7 = load float, float* %arrayidx, align 4, !dbg !8863
  %cmp = fcmp une float %7, 0.000000e+00, !dbg !8865
  br i1 %cmp, label %if.then, label %if.end, !dbg !8866

if.then:                                          ; preds = %for.body
  %8 = load float*, float** %scale.addr, align 8, !dbg !8867
  %arrayidx1 = getelementptr inbounds float, float* %8, i64 0, !dbg !8867
  %9 = load float, float* %arrayidx1, align 4, !dbg !8867
  %10 = load i32, i32* %x, align 4, !dbg !8869
  %conv = sitofp i32 %10 to float, !dbg !8869
  %mul = fmul float %conv, %9, !dbg !8869
  %conv2 = fptosi float %mul to i32, !dbg !8869
  store i32 %conv2, i32* %x, align 4, !dbg !8869
  %11 = load float*, float** %scale.addr, align 8, !dbg !8870
  %arrayidx3 = getelementptr inbounds float, float* %11, i64 0, !dbg !8870
  %12 = load float, float* %arrayidx3, align 4, !dbg !8870
  %13 = load i32, i32* %w, align 4, !dbg !8871
  %conv4 = sitofp i32 %13 to float, !dbg !8871
  %mul5 = fmul float %conv4, %12, !dbg !8871
  %conv6 = fptosi float %mul5 to i32, !dbg !8871
  store i32 %conv6, i32* %w, align 4, !dbg !8871
  br label %if.end, !dbg !8872

if.end:                                           ; preds = %if.then, %for.body
  %14 = load float*, float** %scale.addr, align 8, !dbg !8873
  %arrayidx7 = getelementptr inbounds float, float* %14, i64 1, !dbg !8873
  %15 = load float, float* %arrayidx7, align 4, !dbg !8873
  %cmp8 = fcmp une float %15, 0.000000e+00, !dbg !8875
  br i1 %cmp8, label %if.then10, label %if.end19, !dbg !8876

if.then10:                                        ; preds = %if.end
  %16 = load float*, float** %scale.addr, align 8, !dbg !8877
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 1, !dbg !8877
  %17 = load float, float* %arrayidx11, align 4, !dbg !8877
  %18 = load i32, i32* %y, align 4, !dbg !8879
  %conv12 = sitofp i32 %18 to float, !dbg !8879
  %mul13 = fmul float %conv12, %17, !dbg !8879
  %conv14 = fptosi float %mul13 to i32, !dbg !8879
  store i32 %conv14, i32* %y, align 4, !dbg !8879
  %19 = load float*, float** %scale.addr, align 8, !dbg !8880
  %arrayidx15 = getelementptr inbounds float, float* %19, i64 1, !dbg !8880
  %20 = load float, float* %arrayidx15, align 4, !dbg !8880
  %21 = load i32, i32* %h, align 4, !dbg !8881
  %conv16 = sitofp i32 %21 to float, !dbg !8881
  %mul17 = fmul float %conv16, %20, !dbg !8881
  %conv18 = fptosi float %mul17 to i32, !dbg !8881
  store i32 %conv18, i32* %h, align 4, !dbg !8881
  br label %if.end19, !dbg !8882

if.end19:                                         ; preds = %if.then10, %if.end
  %22 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8883
  %23 = load i32, i32* %x, align 4, !dbg !8884
  %24 = load i32, i32* %y, align 4, !dbg !8885
  %25 = load i32, i32* %w, align 4, !dbg !8886
  %26 = load i32, i32* %h, align 4, !dbg !8887
  call void @ui_item_position(%struct.uiItem* %22, i32 %23, i32 %24, i32 %25, i32 %26), !dbg !8888
  br label %for.inc, !dbg !8889

for.inc:                                          ; preds = %if.end19
  %27 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8890
  %prev = getelementptr inbounds %struct.uiItem, %struct.uiItem* %27, i32 0, i32 1, !dbg !8891
  %28 = load i8*, i8** %prev, align 8, !dbg !8891
  %29 = bitcast i8* %28 to %struct.uiItem*, !dbg !8890
  store %struct.uiItem* %29, %struct.uiItem** %item, align 8, !dbg !8892
  br label %for.cond, !dbg !8893, !llvm.loop !8894

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8896
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_estimate_column(%struct.uiLayout* %litem) #0 !dbg !8897 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %itemw = alloca i32, align 4
  %itemh = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !8898, metadata !DIExpression()), !dbg !8899
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !8900, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !8902, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !8904, metadata !DIExpression()), !dbg !8905
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8906
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 6, !dbg !8907
  store i32 0, i32* %w, align 8, !dbg !8908
  %1 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8909
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 7, !dbg !8910
  store i32 0, i32* %h, align 4, !dbg !8911
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8912
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 3, !dbg !8914
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !8915
  %3 = load i8*, i8** %first, align 8, !dbg !8915
  %4 = bitcast i8* %3 to %struct.uiItem*, !dbg !8912
  store %struct.uiItem* %4, %struct.uiItem** %item, align 8, !dbg !8916
  br label %for.cond, !dbg !8917

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8918
  %tobool = icmp ne %struct.uiItem* %5, null, !dbg !8920
  br i1 %tobool, label %for.body, label %for.end, !dbg !8920

for.body:                                         ; preds = %for.cond
  %6 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8921
  call void @ui_item_size(%struct.uiItem* %6, i32* %itemw, i32* %itemh), !dbg !8923
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8924
  %w1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 6, !dbg !8924
  %8 = load i32, i32* %w1, align 8, !dbg !8924
  %9 = load i32, i32* %itemw, align 4, !dbg !8924
  %cmp = icmp sgt i32 %8, %9, !dbg !8924
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8924

cond.true:                                        ; preds = %for.body
  %10 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8924
  %w2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 6, !dbg !8924
  %11 = load i32, i32* %w2, align 8, !dbg !8924
  br label %cond.end, !dbg !8924

cond.false:                                       ; preds = %for.body
  %12 = load i32, i32* %itemw, align 4, !dbg !8924
  br label %cond.end, !dbg !8924

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ %12, %cond.false ], !dbg !8924
  %13 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8925
  %w3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 6, !dbg !8926
  store i32 %cond, i32* %w3, align 8, !dbg !8927
  %14 = load i32, i32* %itemh, align 4, !dbg !8928
  %15 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8929
  %h4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 7, !dbg !8930
  %16 = load i32, i32* %h4, align 4, !dbg !8931
  %add = add nsw i32 %16, %14, !dbg !8931
  store i32 %add, i32* %h4, align 4, !dbg !8931
  %17 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8932
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %17, i32 0, i32 0, !dbg !8934
  %18 = load i8*, i8** %next, align 8, !dbg !8934
  %tobool5 = icmp ne i8* %18, null, !dbg !8932
  br i1 %tobool5, label %if.then, label %if.end, !dbg !8935

if.then:                                          ; preds = %cond.end
  %19 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8936
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 9, !dbg !8937
  %20 = load i16, i16* %space, align 8, !dbg !8937
  %conv = sext i16 %20 to i32, !dbg !8936
  %21 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8938
  %h6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %21, i32 0, i32 7, !dbg !8939
  %22 = load i32, i32* %h6, align 4, !dbg !8940
  %add7 = add nsw i32 %22, %conv, !dbg !8940
  store i32 %add7, i32* %h6, align 4, !dbg !8940
  br label %if.end, !dbg !8938

if.end:                                           ; preds = %if.then, %cond.end
  br label %for.inc, !dbg !8941

for.inc:                                          ; preds = %if.end
  %23 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8942
  %next8 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %23, i32 0, i32 0, !dbg !8943
  %24 = load i8*, i8** %next8, align 8, !dbg !8943
  %25 = bitcast i8* %24 to %struct.uiItem*, !dbg !8942
  store %struct.uiItem* %25, %struct.uiItem** %item, align 8, !dbg !8944
  br label %for.cond, !dbg !8945, !llvm.loop !8946

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8948
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_estimate_column_flow(%struct.uiLayout* %litem) #0 !dbg !8949 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %flow = alloca %struct.uiLayoutItemFlow*, align 8
  %item = alloca %struct.uiItem*, align 8
  %col = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %emh = alloca i32, align 4
  %emy = alloca i32, align 4
  %miny = alloca i32, align 4
  %itemw = alloca i32, align 4
  %itemh = alloca i32, align 4
  %maxw = alloca i32, align 4
  %toth = alloca i32, align 4
  %totitem = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !8952, metadata !DIExpression()), !dbg !8953
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8954
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !8955
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !8955
  %style1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 9, !dbg !8956
  %2 = load %struct.uiStyle*, %struct.uiStyle** %style1, align 8, !dbg !8956
  store %struct.uiStyle* %2, %struct.uiStyle** %style, align 8, !dbg !8953
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemFlow** %flow, metadata !8957, metadata !DIExpression()), !dbg !8958
  %3 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8959
  %4 = bitcast %struct.uiLayout* %3 to %struct.uiLayoutItemFlow*, !dbg !8960
  store %struct.uiLayoutItemFlow* %4, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !8958
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !8961, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.declare(metadata i32* %col, metadata !8963, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8965, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8967, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.declare(metadata i32* %emh, metadata !8969, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.declare(metadata i32* %emy, metadata !8971, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.declare(metadata i32* %miny, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !8975, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !8977, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.declare(metadata i32* %maxw, metadata !8979, metadata !DIExpression()), !dbg !8980
  store i32 0, i32* %maxw, align 4, !dbg !8980
  call void @llvm.dbg.declare(metadata i32* %toth, metadata !8981, metadata !DIExpression()), !dbg !8982
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !8983, metadata !DIExpression()), !dbg !8984
  store i32 0, i32* %toth, align 4, !dbg !8985
  store i32 0, i32* %totitem, align 4, !dbg !8986
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !8987
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 3, !dbg !8989
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !8990
  %6 = load i8*, i8** %first, align 8, !dbg !8990
  %7 = bitcast i8* %6 to %struct.uiItem*, !dbg !8987
  store %struct.uiItem* %7, %struct.uiItem** %item, align 8, !dbg !8991
  br label %for.cond, !dbg !8992

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8993
  %tobool = icmp ne %struct.uiItem* %8, null, !dbg !8995
  br i1 %tobool, label %for.body, label %for.end, !dbg !8995

for.body:                                         ; preds = %for.cond
  %9 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !8996
  call void @ui_item_size(%struct.uiItem* %9, i32* %itemw, i32* %itemh), !dbg !8998
  %10 = load i32, i32* %maxw, align 4, !dbg !8999
  %11 = load i32, i32* %itemw, align 4, !dbg !8999
  %cmp = icmp sgt i32 %10, %11, !dbg !8999
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8999

cond.true:                                        ; preds = %for.body
  %12 = load i32, i32* %maxw, align 4, !dbg !8999
  br label %cond.end, !dbg !8999

cond.false:                                       ; preds = %for.body
  %13 = load i32, i32* %itemw, align 4, !dbg !8999
  br label %cond.end, !dbg !8999

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ %13, %cond.false ], !dbg !8999
  store i32 %cond, i32* %maxw, align 4, !dbg !9000
  %14 = load i32, i32* %itemh, align 4, !dbg !9001
  %15 = load i32, i32* %toth, align 4, !dbg !9002
  %add = add nsw i32 %15, %14, !dbg !9002
  store i32 %add, i32* %toth, align 4, !dbg !9002
  %16 = load i32, i32* %totitem, align 4, !dbg !9003
  %inc = add nsw i32 %16, 1, !dbg !9003
  store i32 %inc, i32* %totitem, align 4, !dbg !9003
  br label %for.inc, !dbg !9004

for.inc:                                          ; preds = %cond.end
  %17 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9005
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %17, i32 0, i32 0, !dbg !9006
  %18 = load i8*, i8** %next, align 8, !dbg !9006
  %19 = bitcast i8* %18 to %struct.uiItem*, !dbg !9005
  store %struct.uiItem* %19, %struct.uiItem** %item, align 8, !dbg !9007
  br label %for.cond, !dbg !9008, !llvm.loop !9009

for.end:                                          ; preds = %for.cond
  %20 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9011
  %number = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %20, i32 0, i32 1, !dbg !9013
  %21 = load i32, i32* %number, align 8, !dbg !9013
  %cmp2 = icmp sle i32 %21, 0, !dbg !9014
  br i1 %cmp2, label %if.then, label %if.else, !dbg !9015

if.then:                                          ; preds = %for.end
  %22 = load i32, i32* %maxw, align 4, !dbg !9016
  %cmp3 = icmp eq i32 %22, 0, !dbg !9019
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !9020

if.then4:                                         ; preds = %if.then
  %23 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9021
  %totcol = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %23, i32 0, i32 2, !dbg !9023
  store i32 1, i32* %totcol, align 4, !dbg !9024
  br label %return, !dbg !9025

if.end:                                           ; preds = %if.then
  %24 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9026
  %root5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %24, i32 0, i32 1, !dbg !9027
  %25 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root5, align 8, !dbg !9027
  %emw = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %25, i32 0, i32 4, !dbg !9028
  %26 = load i32, i32* %emw, align 8, !dbg !9028
  %27 = load i32, i32* %maxw, align 4, !dbg !9029
  %div = sdiv i32 %26, %27, !dbg !9030
  %call = call i32 @max_ii(i32 %div, i32 1), !dbg !9031
  %28 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9032
  %totcol6 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %28, i32 0, i32 2, !dbg !9033
  store i32 %call, i32* %totcol6, align 4, !dbg !9034
  %29 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9035
  %totcol7 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %29, i32 0, i32 2, !dbg !9036
  %30 = load i32, i32* %totcol7, align 4, !dbg !9036
  %31 = load i32, i32* %totitem, align 4, !dbg !9037
  %call8 = call i32 @min_ii(i32 %30, i32 %31), !dbg !9038
  %32 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9039
  %totcol9 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %32, i32 0, i32 2, !dbg !9040
  store i32 %call8, i32* %totcol9, align 4, !dbg !9041
  br label %if.end12, !dbg !9042

if.else:                                          ; preds = %for.end
  %33 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9043
  %number10 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %33, i32 0, i32 1, !dbg !9044
  %34 = load i32, i32* %number10, align 8, !dbg !9044
  %35 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9045
  %totcol11 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %35, i32 0, i32 2, !dbg !9046
  store i32 %34, i32* %totcol11, align 4, !dbg !9047
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.end
  store i32 0, i32* %x, align 4, !dbg !9048
  store i32 0, i32* %y, align 4, !dbg !9049
  store i32 0, i32* %emy, align 4, !dbg !9050
  store i32 0, i32* %miny, align 4, !dbg !9051
  store i32 0, i32* %maxw, align 4, !dbg !9052
  %36 = load i32, i32* %toth, align 4, !dbg !9053
  %37 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9054
  %totcol13 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %37, i32 0, i32 2, !dbg !9055
  %38 = load i32, i32* %totcol13, align 4, !dbg !9055
  %div14 = sdiv i32 %36, %38, !dbg !9056
  store i32 %div14, i32* %emh, align 4, !dbg !9057
  store i32 0, i32* %col, align 4, !dbg !9058
  %39 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9059
  %items15 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %39, i32 0, i32 3, !dbg !9061
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items15, i32 0, i32 0, !dbg !9062
  %40 = load i8*, i8** %first16, align 8, !dbg !9062
  %41 = bitcast i8* %40 to %struct.uiItem*, !dbg !9059
  store %struct.uiItem* %41, %struct.uiItem** %item, align 8, !dbg !9063
  br label %for.cond17, !dbg !9064

for.cond17:                                       ; preds = %for.inc37, %if.end12
  %42 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9065
  %tobool18 = icmp ne %struct.uiItem* %42, null, !dbg !9067
  br i1 %tobool18, label %for.body19, label %for.end39, !dbg !9067

for.body19:                                       ; preds = %for.cond17
  %43 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9068
  call void @ui_item_size(%struct.uiItem* %43, i32* %itemw, i32* %itemh), !dbg !9070
  %44 = load i32, i32* %itemh, align 4, !dbg !9071
  %45 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !9072
  %buttonspacey = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %45, i32 0, i32 14, !dbg !9073
  %46 = load i16, i16* %buttonspacey, align 8, !dbg !9073
  %conv = sext i16 %46 to i32, !dbg !9072
  %add20 = add nsw i32 %44, %conv, !dbg !9074
  %47 = load i32, i32* %y, align 4, !dbg !9075
  %sub = sub nsw i32 %47, %add20, !dbg !9075
  store i32 %sub, i32* %y, align 4, !dbg !9075
  %48 = load i32, i32* %miny, align 4, !dbg !9076
  %49 = load i32, i32* %y, align 4, !dbg !9077
  %call21 = call i32 @min_ii(i32 %48, i32 %49), !dbg !9078
  store i32 %call21, i32* %miny, align 4, !dbg !9079
  %50 = load i32, i32* %itemh, align 4, !dbg !9080
  %51 = load i32, i32* %emy, align 4, !dbg !9081
  %sub22 = sub nsw i32 %51, %50, !dbg !9081
  store i32 %sub22, i32* %emy, align 4, !dbg !9081
  %52 = load i32, i32* %itemw, align 4, !dbg !9082
  %53 = load i32, i32* %maxw, align 4, !dbg !9083
  %call23 = call i32 @max_ii(i32 %52, i32 %53), !dbg !9084
  store i32 %call23, i32* %maxw, align 4, !dbg !9085
  %54 = load i32, i32* %col, align 4, !dbg !9086
  %55 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9088
  %totcol24 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %55, i32 0, i32 2, !dbg !9089
  %56 = load i32, i32* %totcol24, align 4, !dbg !9089
  %sub25 = sub nsw i32 %56, 1, !dbg !9090
  %cmp26 = icmp slt i32 %54, %sub25, !dbg !9091
  br i1 %cmp26, label %land.lhs.true, label %if.end36, !dbg !9092

land.lhs.true:                                    ; preds = %for.body19
  %57 = load i32, i32* %emy, align 4, !dbg !9093
  %58 = load i32, i32* %emh, align 4, !dbg !9094
  %sub28 = sub nsw i32 0, %58, !dbg !9095
  %cmp29 = icmp sle i32 %57, %sub28, !dbg !9096
  br i1 %cmp29, label %if.then31, label %if.end36, !dbg !9097

if.then31:                                        ; preds = %land.lhs.true
  %59 = load i32, i32* %maxw, align 4, !dbg !9098
  %60 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9100
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %60, i32 0, i32 9, !dbg !9101
  %61 = load i16, i16* %space, align 8, !dbg !9101
  %conv32 = sext i16 %61 to i32, !dbg !9100
  %add33 = add nsw i32 %59, %conv32, !dbg !9102
  %62 = load i32, i32* %x, align 4, !dbg !9103
  %add34 = add nsw i32 %62, %add33, !dbg !9103
  store i32 %add34, i32* %x, align 4, !dbg !9103
  store i32 0, i32* %maxw, align 4, !dbg !9104
  store i32 0, i32* %y, align 4, !dbg !9105
  store i32 0, i32* %emy, align 4, !dbg !9106
  %63 = load i32, i32* %col, align 4, !dbg !9107
  %inc35 = add nsw i32 %63, 1, !dbg !9107
  store i32 %inc35, i32* %col, align 4, !dbg !9107
  br label %if.end36, !dbg !9108

if.end36:                                         ; preds = %if.then31, %land.lhs.true, %for.body19
  br label %for.inc37, !dbg !9109

for.inc37:                                        ; preds = %if.end36
  %64 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9110
  %next38 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %64, i32 0, i32 0, !dbg !9111
  %65 = load i8*, i8** %next38, align 8, !dbg !9111
  %66 = bitcast i8* %65 to %struct.uiItem*, !dbg !9110
  store %struct.uiItem* %66, %struct.uiItem** %item, align 8, !dbg !9112
  br label %for.cond17, !dbg !9113, !llvm.loop !9114

for.end39:                                        ; preds = %for.cond17
  %67 = load i32, i32* %x, align 4, !dbg !9116
  %68 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9117
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %68, i32 0, i32 6, !dbg !9118
  store i32 %67, i32* %w, align 8, !dbg !9119
  %69 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9120
  %y40 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %69, i32 0, i32 5, !dbg !9121
  %70 = load i32, i32* %y40, align 4, !dbg !9121
  %71 = load i32, i32* %miny, align 4, !dbg !9122
  %sub41 = sub nsw i32 %70, %71, !dbg !9123
  %72 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9124
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %72, i32 0, i32 7, !dbg !9125
  store i32 %sub41, i32* %h, align 4, !dbg !9126
  br label %return, !dbg !9127

return:                                           ; preds = %for.end39, %if.then4
  ret void, !dbg !9127
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_estimate_row(%struct.uiLayout* %litem) #0 !dbg !9128 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %itemw = alloca i32, align 4
  %itemh = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9129, metadata !DIExpression()), !dbg !9130
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !9131, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !9133, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !9135, metadata !DIExpression()), !dbg !9136
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9137
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 6, !dbg !9138
  store i32 0, i32* %w, align 8, !dbg !9139
  %1 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9140
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 7, !dbg !9141
  store i32 0, i32* %h, align 4, !dbg !9142
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9143
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 3, !dbg !9145
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !9146
  %3 = load i8*, i8** %first, align 8, !dbg !9146
  %4 = bitcast i8* %3 to %struct.uiItem*, !dbg !9143
  store %struct.uiItem* %4, %struct.uiItem** %item, align 8, !dbg !9147
  br label %for.cond, !dbg !9148

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9149
  %tobool = icmp ne %struct.uiItem* %5, null, !dbg !9151
  br i1 %tobool, label %for.body, label %for.end, !dbg !9151

for.body:                                         ; preds = %for.cond
  %6 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9152
  call void @ui_item_size(%struct.uiItem* %6, i32* %itemw, i32* %itemh), !dbg !9154
  %7 = load i32, i32* %itemw, align 4, !dbg !9155
  %8 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9156
  %w1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 6, !dbg !9157
  %9 = load i32, i32* %w1, align 8, !dbg !9158
  %add = add nsw i32 %9, %7, !dbg !9158
  store i32 %add, i32* %w1, align 8, !dbg !9158
  %10 = load i32, i32* %itemh, align 4, !dbg !9159
  %11 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9159
  %h2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %11, i32 0, i32 7, !dbg !9159
  %12 = load i32, i32* %h2, align 4, !dbg !9159
  %cmp = icmp sgt i32 %10, %12, !dbg !9159
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9159

cond.true:                                        ; preds = %for.body
  %13 = load i32, i32* %itemh, align 4, !dbg !9159
  br label %cond.end, !dbg !9159

cond.false:                                       ; preds = %for.body
  %14 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9159
  %h3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %14, i32 0, i32 7, !dbg !9159
  %15 = load i32, i32* %h3, align 4, !dbg !9159
  br label %cond.end, !dbg !9159

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %15, %cond.false ], !dbg !9159
  %16 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9160
  %h4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 7, !dbg !9161
  store i32 %cond, i32* %h4, align 4, !dbg !9162
  %17 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9163
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %17, i32 0, i32 0, !dbg !9165
  %18 = load i8*, i8** %next, align 8, !dbg !9165
  %tobool5 = icmp ne i8* %18, null, !dbg !9163
  br i1 %tobool5, label %if.then, label %if.end, !dbg !9166

if.then:                                          ; preds = %cond.end
  %19 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9167
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 9, !dbg !9168
  %20 = load i16, i16* %space, align 8, !dbg !9168
  %conv = sext i16 %20 to i32, !dbg !9167
  %21 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9169
  %w6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %21, i32 0, i32 6, !dbg !9170
  %22 = load i32, i32* %w6, align 8, !dbg !9171
  %add7 = add nsw i32 %22, %conv, !dbg !9171
  store i32 %add7, i32* %w6, align 8, !dbg !9171
  br label %if.end, !dbg !9169

if.end:                                           ; preds = %if.then, %cond.end
  br label %for.inc, !dbg !9172

for.inc:                                          ; preds = %if.end
  %23 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9173
  %next8 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %23, i32 0, i32 0, !dbg !9174
  %24 = load i8*, i8** %next8, align 8, !dbg !9174
  %25 = bitcast i8* %24 to %struct.uiItem*, !dbg !9173
  store %struct.uiItem* %25, %struct.uiItem** %item, align 8, !dbg !9175
  br label %for.cond, !dbg !9176, !llvm.loop !9177

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9179
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_estimate_box(%struct.uiLayout* %litem) #0 !dbg !9180 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %style = alloca %struct.uiStyle*, align 8
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9181, metadata !DIExpression()), !dbg !9182
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !9183, metadata !DIExpression()), !dbg !9184
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9185
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !9186
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !9186
  %style1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 9, !dbg !9187
  %2 = load %struct.uiStyle*, %struct.uiStyle** %style1, align 8, !dbg !9187
  store %struct.uiStyle* %2, %struct.uiStyle** %style, align 8, !dbg !9184
  %3 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9188
  call void @ui_litem_estimate_column(%struct.uiLayout* %3), !dbg !9189
  %4 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !9190
  %boxspace = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %4, i32 0, i32 12, !dbg !9191
  %5 = load i16, i16* %boxspace, align 4, !dbg !9191
  %conv = sext i16 %5 to i32, !dbg !9190
  %mul = mul nsw i32 2, %conv, !dbg !9192
  %6 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9193
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %6, i32 0, i32 6, !dbg !9194
  %7 = load i32, i32* %w, align 8, !dbg !9195
  %add = add nsw i32 %7, %mul, !dbg !9195
  store i32 %add, i32* %w, align 8, !dbg !9195
  %8 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !9196
  %boxspace2 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %8, i32 0, i32 12, !dbg !9197
  %9 = load i16, i16* %boxspace2, align 4, !dbg !9197
  %conv3 = sext i16 %9 to i32, !dbg !9196
  %10 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9198
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %10, i32 0, i32 7, !dbg !9199
  %11 = load i32, i32* %h, align 4, !dbg !9200
  %add4 = add nsw i32 %11, %conv3, !dbg !9200
  store i32 %add4, i32* %h, align 4, !dbg !9200
  ret void, !dbg !9201
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_estimate_root(%struct.uiLayout* %UNUSED_litem) #0 !dbg !9202 {
entry:
  %UNUSED_litem.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %UNUSED_litem, %struct.uiLayout** %UNUSED_litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %UNUSED_litem.addr, metadata !9203, metadata !DIExpression()), !dbg !9204
  ret void, !dbg !9205
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_estimate_absolute(%struct.uiLayout* %litem) #0 !dbg !9206 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %itemx = alloca i32, align 4
  %itemy = alloca i32, align 4
  %itemw = alloca i32, align 4
  %itemh = alloca i32, align 4
  %minx = alloca i32, align 4
  %miny = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !9209, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.declare(metadata i32* %itemx, metadata !9211, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.declare(metadata i32* %itemy, metadata !9213, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !9215, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !9217, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.declare(metadata i32* %minx, metadata !9219, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.declare(metadata i32* %miny, metadata !9221, metadata !DIExpression()), !dbg !9222
  store i32 1000000, i32* %minx, align 4, !dbg !9223
  store i32 1000000, i32* %miny, align 4, !dbg !9224
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9225
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 6, !dbg !9226
  store i32 0, i32* %w, align 8, !dbg !9227
  %1 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9228
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 7, !dbg !9229
  store i32 0, i32* %h, align 4, !dbg !9230
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9231
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 3, !dbg !9233
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !9234
  %3 = load i8*, i8** %first, align 8, !dbg !9234
  %4 = bitcast i8* %3 to %struct.uiItem*, !dbg !9231
  store %struct.uiItem* %4, %struct.uiItem** %item, align 8, !dbg !9235
  br label %for.cond, !dbg !9236

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9237
  %tobool = icmp ne %struct.uiItem* %5, null, !dbg !9239
  br i1 %tobool, label %for.body, label %for.end, !dbg !9239

for.body:                                         ; preds = %for.cond
  %6 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9240
  call void @ui_item_offset(%struct.uiItem* %6, i32* %itemx, i32* %itemy), !dbg !9242
  %7 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9243
  call void @ui_item_size(%struct.uiItem* %7, i32* %itemw, i32* %itemh), !dbg !9244
  %8 = load i32, i32* %minx, align 4, !dbg !9245
  %9 = load i32, i32* %itemx, align 4, !dbg !9246
  %call = call i32 @min_ii(i32 %8, i32 %9), !dbg !9247
  store i32 %call, i32* %minx, align 4, !dbg !9248
  %10 = load i32, i32* %miny, align 4, !dbg !9249
  %11 = load i32, i32* %itemy, align 4, !dbg !9250
  %call1 = call i32 @min_ii(i32 %10, i32 %11), !dbg !9251
  store i32 %call1, i32* %miny, align 4, !dbg !9252
  %12 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9253
  %w2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %12, i32 0, i32 6, !dbg !9253
  %13 = load i32, i32* %w2, align 8, !dbg !9253
  %14 = load i32, i32* %itemx, align 4, !dbg !9253
  %15 = load i32, i32* %itemw, align 4, !dbg !9253
  %add = add nsw i32 %14, %15, !dbg !9253
  %cmp = icmp sgt i32 %13, %add, !dbg !9253
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9253

cond.true:                                        ; preds = %for.body
  %16 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9253
  %w3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 6, !dbg !9253
  %17 = load i32, i32* %w3, align 8, !dbg !9253
  br label %cond.end, !dbg !9253

cond.false:                                       ; preds = %for.body
  %18 = load i32, i32* %itemx, align 4, !dbg !9253
  %19 = load i32, i32* %itemw, align 4, !dbg !9253
  %add4 = add nsw i32 %18, %19, !dbg !9253
  br label %cond.end, !dbg !9253

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %add4, %cond.false ], !dbg !9253
  %20 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9254
  %w5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %20, i32 0, i32 6, !dbg !9255
  store i32 %cond, i32* %w5, align 8, !dbg !9256
  %21 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9257
  %h6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %21, i32 0, i32 7, !dbg !9257
  %22 = load i32, i32* %h6, align 4, !dbg !9257
  %23 = load i32, i32* %itemy, align 4, !dbg !9257
  %24 = load i32, i32* %itemh, align 4, !dbg !9257
  %add7 = add nsw i32 %23, %24, !dbg !9257
  %cmp8 = icmp sgt i32 %22, %add7, !dbg !9257
  br i1 %cmp8, label %cond.true9, label %cond.false11, !dbg !9257

cond.true9:                                       ; preds = %cond.end
  %25 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9257
  %h10 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %25, i32 0, i32 7, !dbg !9257
  %26 = load i32, i32* %h10, align 4, !dbg !9257
  br label %cond.end13, !dbg !9257

cond.false11:                                     ; preds = %cond.end
  %27 = load i32, i32* %itemy, align 4, !dbg !9257
  %28 = load i32, i32* %itemh, align 4, !dbg !9257
  %add12 = add nsw i32 %27, %28, !dbg !9257
  br label %cond.end13, !dbg !9257

cond.end13:                                       ; preds = %cond.false11, %cond.true9
  %cond14 = phi i32 [ %26, %cond.true9 ], [ %add12, %cond.false11 ], !dbg !9257
  %29 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9258
  %h15 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 7, !dbg !9259
  store i32 %cond14, i32* %h15, align 4, !dbg !9260
  br label %for.inc, !dbg !9261

for.inc:                                          ; preds = %cond.end13
  %30 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9262
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %30, i32 0, i32 0, !dbg !9263
  %31 = load i8*, i8** %next, align 8, !dbg !9263
  %32 = bitcast i8* %31 to %struct.uiItem*, !dbg !9262
  store %struct.uiItem* %32, %struct.uiItem** %item, align 8, !dbg !9264
  br label %for.cond, !dbg !9265, !llvm.loop !9266

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* %minx, align 4, !dbg !9268
  %34 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9269
  %w16 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %34, i32 0, i32 6, !dbg !9270
  %35 = load i32, i32* %w16, align 8, !dbg !9271
  %sub = sub nsw i32 %35, %33, !dbg !9271
  store i32 %sub, i32* %w16, align 8, !dbg !9271
  %36 = load i32, i32* %miny, align 4, !dbg !9272
  %37 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9273
  %h17 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %37, i32 0, i32 7, !dbg !9274
  %38 = load i32, i32* %h17, align 4, !dbg !9275
  %sub18 = sub nsw i32 %38, %36, !dbg !9275
  store i32 %sub18, i32* %h17, align 4, !dbg !9275
  ret void, !dbg !9276
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_estimate_split(%struct.uiLayout* %litem) #0 !dbg !9277 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9278, metadata !DIExpression()), !dbg !9279
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9280
  call void @ui_litem_estimate_row(%struct.uiLayout* %0), !dbg !9281
  ret void, !dbg !9282
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_estimate_overlap(%struct.uiLayout* %litem) #0 !dbg !9283 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %itemw = alloca i32, align 4
  %itemh = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9284, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !9286, metadata !DIExpression()), !dbg !9287
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !9288, metadata !DIExpression()), !dbg !9289
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !9290, metadata !DIExpression()), !dbg !9291
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9292
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 6, !dbg !9293
  store i32 0, i32* %w, align 8, !dbg !9294
  %1 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9295
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %1, i32 0, i32 7, !dbg !9296
  store i32 0, i32* %h, align 4, !dbg !9297
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9298
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 3, !dbg !9300
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !9301
  %3 = load i8*, i8** %first, align 8, !dbg !9301
  %4 = bitcast i8* %3 to %struct.uiItem*, !dbg !9298
  store %struct.uiItem* %4, %struct.uiItem** %item, align 8, !dbg !9302
  br label %for.cond, !dbg !9303

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9304
  %tobool = icmp ne %struct.uiItem* %5, null, !dbg !9306
  br i1 %tobool, label %for.body, label %for.end, !dbg !9306

for.body:                                         ; preds = %for.cond
  %6 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9307
  call void @ui_item_size(%struct.uiItem* %6, i32* %itemw, i32* %itemh), !dbg !9309
  %7 = load i32, i32* %itemw, align 4, !dbg !9310
  %8 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9310
  %w1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %8, i32 0, i32 6, !dbg !9310
  %9 = load i32, i32* %w1, align 8, !dbg !9310
  %cmp = icmp sgt i32 %7, %9, !dbg !9310
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9310

cond.true:                                        ; preds = %for.body
  %10 = load i32, i32* %itemw, align 4, !dbg !9310
  br label %cond.end, !dbg !9310

cond.false:                                       ; preds = %for.body
  %11 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9310
  %w2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %11, i32 0, i32 6, !dbg !9310
  %12 = load i32, i32* %w2, align 8, !dbg !9310
  br label %cond.end, !dbg !9310

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %12, %cond.false ], !dbg !9310
  %13 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9311
  %w3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 6, !dbg !9312
  store i32 %cond, i32* %w3, align 8, !dbg !9313
  %14 = load i32, i32* %itemh, align 4, !dbg !9314
  %15 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9314
  %h4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 7, !dbg !9314
  %16 = load i32, i32* %h4, align 4, !dbg !9314
  %cmp5 = icmp sgt i32 %14, %16, !dbg !9314
  br i1 %cmp5, label %cond.true6, label %cond.false7, !dbg !9314

cond.true6:                                       ; preds = %cond.end
  %17 = load i32, i32* %itemh, align 4, !dbg !9314
  br label %cond.end9, !dbg !9314

cond.false7:                                      ; preds = %cond.end
  %18 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9314
  %h8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 7, !dbg !9314
  %19 = load i32, i32* %h8, align 4, !dbg !9314
  br label %cond.end9, !dbg !9314

cond.end9:                                        ; preds = %cond.false7, %cond.true6
  %cond10 = phi i32 [ %17, %cond.true6 ], [ %19, %cond.false7 ], !dbg !9314
  %20 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9315
  %h11 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %20, i32 0, i32 7, !dbg !9316
  store i32 %cond10, i32* %h11, align 4, !dbg !9317
  br label %for.inc, !dbg !9318

for.inc:                                          ; preds = %cond.end9
  %21 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9319
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %21, i32 0, i32 0, !dbg !9320
  %22 = load i8*, i8** %next, align 8, !dbg !9320
  %23 = bitcast i8* %22 to %struct.uiItem*, !dbg !9319
  store %struct.uiItem* %23, %struct.uiItem** %item, align 8, !dbg !9321
  br label %for.cond, !dbg !9322, !llvm.loop !9323

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9325
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_size(%struct.uiItem* %item, i32* %r_w, i32* %r_h) #0 !dbg !9326 {
entry:
  %item.addr = alloca %struct.uiItem*, align 8
  %r_w.addr = alloca i32*, align 8
  %r_h.addr = alloca i32*, align 8
  %bitem = alloca %struct.uiButtonItem*, align 8
  %litem = alloca %struct.uiLayout*, align 8
  store %struct.uiItem* %item, %struct.uiItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item.addr, metadata !9329, metadata !DIExpression()), !dbg !9330
  store i32* %r_w, i32** %r_w.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_w.addr, metadata !9331, metadata !DIExpression()), !dbg !9332
  store i32* %r_h, i32** %r_h.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_h.addr, metadata !9333, metadata !DIExpression()), !dbg !9334
  %0 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !9335
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %0, i32 0, i32 2, !dbg !9337
  %1 = load i32, i32* %type, align 8, !dbg !9337
  %cmp = icmp eq i32 %1, 0, !dbg !9338
  br i1 %cmp, label %if.then, label %if.else, !dbg !9339

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem, metadata !9340, metadata !DIExpression()), !dbg !9342
  %2 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !9343
  %3 = bitcast %struct.uiItem* %2 to %struct.uiButtonItem*, !dbg !9344
  store %struct.uiButtonItem* %3, %struct.uiButtonItem** %bitem, align 8, !dbg !9342
  %4 = load i32*, i32** %r_w.addr, align 8, !dbg !9345
  %tobool = icmp ne i32* %4, null, !dbg !9345
  br i1 %tobool, label %if.then1, label %if.end, !dbg !9347

if.then1:                                         ; preds = %if.then
  %5 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9348
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %5, i32 0, i32 1, !dbg !9349
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9349
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 18, !dbg !9350
  %call = call float @BLI_rctf_size_x(%struct.rctf* %rect), !dbg !9351
  %conv = fptosi float %call to i32, !dbg !9351
  %7 = load i32*, i32** %r_w.addr, align 8, !dbg !9352
  store i32 %conv, i32* %7, align 4, !dbg !9353
  br label %if.end, !dbg !9354

if.end:                                           ; preds = %if.then1, %if.then
  %8 = load i32*, i32** %r_h.addr, align 8, !dbg !9355
  %tobool2 = icmp ne i32* %8, null, !dbg !9355
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !9357

if.then3:                                         ; preds = %if.end
  %9 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9358
  %but4 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %9, i32 0, i32 1, !dbg !9359
  %10 = load %struct.uiBut*, %struct.uiBut** %but4, align 8, !dbg !9359
  %rect5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 18, !dbg !9360
  %call6 = call float @BLI_rctf_size_y(%struct.rctf* %rect5), !dbg !9361
  %conv7 = fptosi float %call6 to i32, !dbg !9361
  %11 = load i32*, i32** %r_h.addr, align 8, !dbg !9362
  store i32 %conv7, i32* %11, align 4, !dbg !9363
  br label %if.end8, !dbg !9364

if.end8:                                          ; preds = %if.then3, %if.end
  br label %if.end15, !dbg !9365

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !9366, metadata !DIExpression()), !dbg !9368
  %12 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !9369
  %13 = bitcast %struct.uiItem* %12 to %struct.uiLayout*, !dbg !9370
  store %struct.uiLayout* %13, %struct.uiLayout** %litem, align 8, !dbg !9368
  %14 = load i32*, i32** %r_w.addr, align 8, !dbg !9371
  %tobool9 = icmp ne i32* %14, null, !dbg !9371
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9373

if.then10:                                        ; preds = %if.else
  %15 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !9374
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %15, i32 0, i32 6, !dbg !9375
  %16 = load i32, i32* %w, align 8, !dbg !9375
  %17 = load i32*, i32** %r_w.addr, align 8, !dbg !9376
  store i32 %16, i32* %17, align 4, !dbg !9377
  br label %if.end11, !dbg !9378

if.end11:                                         ; preds = %if.then10, %if.else
  %18 = load i32*, i32** %r_h.addr, align 8, !dbg !9379
  %tobool12 = icmp ne i32* %18, null, !dbg !9379
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !9381

if.then13:                                        ; preds = %if.end11
  %19 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !9382
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 7, !dbg !9383
  %20 = load i32, i32* %h, align 4, !dbg !9383
  %21 = load i32*, i32** %r_h.addr, align 8, !dbg !9384
  store i32 %20, i32* %21, align 4, !dbg !9385
  br label %if.end14, !dbg !9386

if.end14:                                         ; preds = %if.then13, %if.end11
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end8
  ret void, !dbg !9387
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_offset(%struct.uiItem* %item, i32* %r_x, i32* %r_y) #0 !dbg !9388 {
entry:
  %item.addr = alloca %struct.uiItem*, align 8
  %r_x.addr = alloca i32*, align 8
  %r_y.addr = alloca i32*, align 8
  %bitem = alloca %struct.uiButtonItem*, align 8
  store %struct.uiItem* %item, %struct.uiItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item.addr, metadata !9389, metadata !DIExpression()), !dbg !9390
  store i32* %r_x, i32** %r_x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_x.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  store i32* %r_y, i32** %r_y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_y.addr, metadata !9393, metadata !DIExpression()), !dbg !9394
  %0 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !9395
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %0, i32 0, i32 2, !dbg !9397
  %1 = load i32, i32* %type, align 8, !dbg !9397
  %cmp = icmp eq i32 %1, 0, !dbg !9398
  br i1 %cmp, label %if.then, label %if.else, !dbg !9399

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem, metadata !9400, metadata !DIExpression()), !dbg !9402
  %2 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !9403
  %3 = bitcast %struct.uiItem* %2 to %struct.uiButtonItem*, !dbg !9404
  store %struct.uiButtonItem* %3, %struct.uiButtonItem** %bitem, align 8, !dbg !9402
  %4 = load i32*, i32** %r_x.addr, align 8, !dbg !9405
  %tobool = icmp ne i32* %4, null, !dbg !9405
  br i1 %tobool, label %if.then1, label %if.end, !dbg !9407

if.then1:                                         ; preds = %if.then
  %5 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9408
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %5, i32 0, i32 1, !dbg !9409
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9409
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 18, !dbg !9410
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !9411
  %7 = load float, float* %xmin, align 8, !dbg !9411
  %conv = fptosi float %7 to i32, !dbg !9408
  %8 = load i32*, i32** %r_x.addr, align 8, !dbg !9412
  store i32 %conv, i32* %8, align 4, !dbg !9413
  br label %if.end, !dbg !9414

if.end:                                           ; preds = %if.then1, %if.then
  %9 = load i32*, i32** %r_y.addr, align 8, !dbg !9415
  %tobool2 = icmp ne i32* %9, null, !dbg !9415
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !9417

if.then3:                                         ; preds = %if.end
  %10 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9418
  %but4 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %10, i32 0, i32 1, !dbg !9419
  %11 = load %struct.uiBut*, %struct.uiBut** %but4, align 8, !dbg !9419
  %rect5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 18, !dbg !9420
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect5, i32 0, i32 2, !dbg !9421
  %12 = load float, float* %ymin, align 8, !dbg !9421
  %conv6 = fptosi float %12 to i32, !dbg !9418
  %13 = load i32*, i32** %r_y.addr, align 8, !dbg !9422
  store i32 %conv6, i32* %13, align 4, !dbg !9423
  br label %if.end7, !dbg !9424

if.end7:                                          ; preds = %if.then3, %if.end
  br label %if.end14, !dbg !9425

if.else:                                          ; preds = %entry
  %14 = load i32*, i32** %r_x.addr, align 8, !dbg !9426
  %tobool8 = icmp ne i32* %14, null, !dbg !9426
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !9429

if.then9:                                         ; preds = %if.else
  %15 = load i32*, i32** %r_x.addr, align 8, !dbg !9430
  store i32 0, i32* %15, align 4, !dbg !9431
  br label %if.end10, !dbg !9432

if.end10:                                         ; preds = %if.then9, %if.else
  %16 = load i32*, i32** %r_y.addr, align 8, !dbg !9433
  %tobool11 = icmp ne i32* %16, null, !dbg !9433
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !9435

if.then12:                                        ; preds = %if.end10
  %17 = load i32*, i32** %r_y.addr, align 8, !dbg !9436
  store i32 0, i32* %17, align 4, !dbg !9437
  br label %if.end13, !dbg !9438

if.end13:                                         ; preds = %if.then12, %if.end10
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end7
  ret void, !dbg !9439
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_position(%struct.uiItem* %item, i32 %x, i32 %y, i32 %w, i32 %h) #0 !dbg !9440 {
entry:
  %item.addr = alloca %struct.uiItem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %bitem = alloca %struct.uiButtonItem*, align 8
  %litem = alloca %struct.uiLayout*, align 8
  store %struct.uiItem* %item, %struct.uiItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item.addr, metadata !9443, metadata !DIExpression()), !dbg !9444
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9445, metadata !DIExpression()), !dbg !9446
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !9447, metadata !DIExpression()), !dbg !9448
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !9449, metadata !DIExpression()), !dbg !9450
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !9451, metadata !DIExpression()), !dbg !9452
  %0 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !9453
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %0, i32 0, i32 2, !dbg !9455
  %1 = load i32, i32* %type, align 8, !dbg !9455
  %cmp = icmp eq i32 %1, 0, !dbg !9456
  br i1 %cmp, label %if.then, label %if.else, !dbg !9457

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem, metadata !9458, metadata !DIExpression()), !dbg !9460
  %2 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !9461
  %3 = bitcast %struct.uiItem* %2 to %struct.uiButtonItem*, !dbg !9462
  store %struct.uiButtonItem* %3, %struct.uiButtonItem** %bitem, align 8, !dbg !9460
  %4 = load i32, i32* %x.addr, align 4, !dbg !9463
  %conv = sitofp i32 %4 to float, !dbg !9463
  %5 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9464
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %5, i32 0, i32 1, !dbg !9465
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9465
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 18, !dbg !9466
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !9467
  store float %conv, float* %xmin, align 8, !dbg !9468
  %7 = load i32, i32* %y.addr, align 4, !dbg !9469
  %conv1 = sitofp i32 %7 to float, !dbg !9469
  %8 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9470
  %but2 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %8, i32 0, i32 1, !dbg !9471
  %9 = load %struct.uiBut*, %struct.uiBut** %but2, align 8, !dbg !9471
  %rect3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 18, !dbg !9472
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect3, i32 0, i32 2, !dbg !9473
  store float %conv1, float* %ymin, align 8, !dbg !9474
  %10 = load i32, i32* %x.addr, align 4, !dbg !9475
  %11 = load i32, i32* %w.addr, align 4, !dbg !9476
  %add = add nsw i32 %10, %11, !dbg !9477
  %conv4 = sitofp i32 %add to float, !dbg !9475
  %12 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9478
  %but5 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %12, i32 0, i32 1, !dbg !9479
  %13 = load %struct.uiBut*, %struct.uiBut** %but5, align 8, !dbg !9479
  %rect6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 18, !dbg !9480
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect6, i32 0, i32 1, !dbg !9481
  store float %conv4, float* %xmax, align 4, !dbg !9482
  %14 = load i32, i32* %y.addr, align 4, !dbg !9483
  %15 = load i32, i32* %h.addr, align 4, !dbg !9484
  %add7 = add nsw i32 %14, %15, !dbg !9485
  %conv8 = sitofp i32 %add7 to float, !dbg !9483
  %16 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9486
  %but9 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %16, i32 0, i32 1, !dbg !9487
  %17 = load %struct.uiBut*, %struct.uiBut** %but9, align 8, !dbg !9487
  %rect10 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 18, !dbg !9488
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect10, i32 0, i32 3, !dbg !9489
  store float %conv8, float* %ymax, align 4, !dbg !9490
  %18 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9491
  %but11 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %18, i32 0, i32 1, !dbg !9492
  %19 = load %struct.uiBut*, %struct.uiBut** %but11, align 8, !dbg !9492
  call void @ui_check_but(%struct.uiBut* %19), !dbg !9493
  br label %if.end, !dbg !9494

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem, metadata !9495, metadata !DIExpression()), !dbg !9497
  %20 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !9498
  %21 = bitcast %struct.uiItem* %20 to %struct.uiLayout*, !dbg !9499
  store %struct.uiLayout* %21, %struct.uiLayout** %litem, align 8, !dbg !9497
  %22 = load i32, i32* %x.addr, align 4, !dbg !9500
  %23 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !9501
  %x12 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %23, i32 0, i32 4, !dbg !9502
  store i32 %22, i32* %x12, align 8, !dbg !9503
  %24 = load i32, i32* %y.addr, align 4, !dbg !9504
  %25 = load i32, i32* %h.addr, align 4, !dbg !9505
  %add13 = add nsw i32 %24, %25, !dbg !9506
  %26 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !9507
  %y14 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %26, i32 0, i32 5, !dbg !9508
  store i32 %add13, i32* %y14, align 4, !dbg !9509
  %27 = load i32, i32* %w.addr, align 4, !dbg !9510
  %28 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !9511
  %w15 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %28, i32 0, i32 6, !dbg !9512
  store i32 %27, i32* %w15, align 8, !dbg !9513
  %29 = load i32, i32* %h.addr, align 4, !dbg !9514
  %30 = load %struct.uiLayout*, %struct.uiLayout** %litem, align 8, !dbg !9515
  %h16 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %30, i32 0, i32 7, !dbg !9516
  store i32 %29, i32* %h16, align 4, !dbg !9517
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9518
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_x(%struct.rctf* %rct) #0 !dbg !9519 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !9525, metadata !DIExpression()), !dbg !9526
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !9527
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !9528
  %1 = load float, float* %xmax, align 4, !dbg !9528
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !9529
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !9530
  %3 = load float, float* %xmin, align 4, !dbg !9530
  %sub = fsub float %1, %3, !dbg !9531
  ret float %sub, !dbg !9532
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_y(%struct.rctf* %rct) #0 !dbg !9533 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !9534, metadata !DIExpression()), !dbg !9535
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !9536
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 3, !dbg !9537
  %1 = load float, float* %ymax, align 4, !dbg !9537
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !9538
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !9539
  %3 = load float, float* %ymin, align 4, !dbg !9539
  %sub = fsub float %1, %3, !dbg !9540
  ret float %sub, !dbg !9541
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !9542 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9543, metadata !DIExpression()), !dbg !9544
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9545, metadata !DIExpression()), !dbg !9546
  %0 = load i32, i32* %a.addr, align 4, !dbg !9547
  %1 = load i32, i32* %b.addr, align 4, !dbg !9548
  %cmp = icmp slt i32 %0, %1, !dbg !9549
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9550

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !9551
  br label %cond.end, !dbg !9550

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !9552
  br label %cond.end, !dbg !9550

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9550
  ret i32 %cond, !dbg !9553
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_align(%struct.uiLayout* %litem, i16 signext %nr) #0 !dbg !9554 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %nr.addr = alloca i16, align 2
  %item = alloca %struct.uiItem*, align 8
  %bitem = alloca %struct.uiButtonItem*, align 8
  %box = alloca %struct.uiLayoutItemBx*, align 8
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9557, metadata !DIExpression()), !dbg !9558
  store i16 %nr, i16* %nr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %nr.addr, metadata !9559, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !9561, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem, metadata !9563, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemBx** %box, metadata !9565, metadata !DIExpression()), !dbg !9566
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9567
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 3, !dbg !9569
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 1, !dbg !9570
  %1 = load i8*, i8** %last, align 8, !dbg !9570
  %2 = bitcast i8* %1 to %struct.uiItem*, !dbg !9567
  store %struct.uiItem* %2, %struct.uiItem** %item, align 8, !dbg !9571
  br label %for.cond, !dbg !9572

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9573
  %tobool = icmp ne %struct.uiItem* %3, null, !dbg !9575
  br i1 %tobool, label %for.body, label %for.end, !dbg !9575

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9576
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %4, i32 0, i32 2, !dbg !9579
  %5 = load i32, i32* %type, align 8, !dbg !9579
  %cmp = icmp eq i32 %5, 0, !dbg !9580
  br i1 %cmp, label %if.then, label %if.else, !dbg !9581

if.then:                                          ; preds = %for.body
  %6 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9582
  %7 = bitcast %struct.uiItem* %6 to %struct.uiButtonItem*, !dbg !9584
  store %struct.uiButtonItem* %7, %struct.uiButtonItem** %bitem, align 8, !dbg !9585
  %8 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9586
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %8, i32 0, i32 1, !dbg !9588
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9588
  %call = call zeroext i8 @ui_but_can_align(%struct.uiBut* %9), !dbg !9589
  %tobool1 = icmp ne i8 %call, 0, !dbg !9589
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !9590

if.then2:                                         ; preds = %if.then
  %10 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9591
  %but3 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %10, i32 0, i32 1, !dbg !9593
  %11 = load %struct.uiBut*, %struct.uiBut** %but3, align 8, !dbg !9593
  %alignnr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 10, !dbg !9594
  %12 = load i16, i16* %alignnr, align 8, !dbg !9594
  %tobool4 = icmp ne i16 %12, 0, !dbg !9591
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !9595

if.then5:                                         ; preds = %if.then2
  %13 = load i16, i16* %nr.addr, align 2, !dbg !9596
  %14 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9597
  %but6 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %14, i32 0, i32 1, !dbg !9598
  %15 = load %struct.uiBut*, %struct.uiBut** %but6, align 8, !dbg !9598
  %alignnr7 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 10, !dbg !9599
  store i16 %13, i16* %alignnr7, align 8, !dbg !9600
  br label %if.end, !dbg !9597

if.end:                                           ; preds = %if.then5, %if.then2
  br label %if.end8, !dbg !9594

if.end8:                                          ; preds = %if.end, %if.then
  br label %if.end33, !dbg !9601

if.else:                                          ; preds = %for.body
  %16 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9602
  %type9 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %16, i32 0, i32 2, !dbg !9604
  %17 = load i32, i32* %type9, align 8, !dbg !9604
  %cmp10 = icmp eq i32 %17, 6, !dbg !9605
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !9606

if.then11:                                        ; preds = %if.else
  br label %if.end32, !dbg !9607

if.else12:                                        ; preds = %if.else
  %18 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9609
  %type13 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %18, i32 0, i32 2, !dbg !9611
  %19 = load i32, i32* %type13, align 8, !dbg !9611
  %cmp14 = icmp eq i32 %19, 8, !dbg !9612
  br i1 %cmp14, label %if.then15, label %if.else16, !dbg !9613

if.then15:                                        ; preds = %if.else12
  br label %if.end31, !dbg !9614

if.else16:                                        ; preds = %if.else12
  %20 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9616
  %type17 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %20, i32 0, i32 2, !dbg !9618
  %21 = load i32, i32* %type17, align 8, !dbg !9618
  %cmp18 = icmp eq i32 %21, 5, !dbg !9619
  br i1 %cmp18, label %if.then19, label %if.else26, !dbg !9620

if.then19:                                        ; preds = %if.else16
  %22 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9621
  %23 = bitcast %struct.uiItem* %22 to %struct.uiLayoutItemBx*, !dbg !9623
  store %struct.uiLayoutItemBx* %23, %struct.uiLayoutItemBx** %box, align 8, !dbg !9624
  %24 = load i16, i16* %nr.addr, align 2, !dbg !9625
  %25 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !9626
  %roundbox = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %25, i32 0, i32 1, !dbg !9627
  %26 = load %struct.uiBut*, %struct.uiBut** %roundbox, align 8, !dbg !9627
  %alignnr20 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 10, !dbg !9628
  store i16 %24, i16* %alignnr20, align 8, !dbg !9629
  %27 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9630
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %27, i32 0, i32 1, !dbg !9631
  %28 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !9631
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %28, i32 0, i32 10, !dbg !9632
  %29 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9632
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %29, i32 0, i32 2, !dbg !9633
  %30 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !9634
  %roundbox21 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %30, i32 0, i32 1, !dbg !9635
  %31 = load %struct.uiBut*, %struct.uiBut** %roundbox21, align 8, !dbg !9635
  %32 = bitcast %struct.uiBut* %31 to i8*, !dbg !9634
  call void @BLI_remlink(%struct.ListBase* %buttons, i8* %32), !dbg !9636
  %33 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9637
  %root22 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %33, i32 0, i32 1, !dbg !9638
  %34 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root22, align 8, !dbg !9638
  %block23 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %34, i32 0, i32 10, !dbg !9639
  %35 = load %struct.uiBlock*, %struct.uiBlock** %block23, align 8, !dbg !9639
  %buttons24 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %35, i32 0, i32 2, !dbg !9640
  %36 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !9641
  %roundbox25 = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %36, i32 0, i32 1, !dbg !9642
  %37 = load %struct.uiBut*, %struct.uiBut** %roundbox25, align 8, !dbg !9642
  %38 = bitcast %struct.uiBut* %37 to i8*, !dbg !9641
  call void @BLI_addhead(%struct.ListBase* %buttons24, i8* %38), !dbg !9643
  br label %if.end30, !dbg !9644

if.else26:                                        ; preds = %if.else16
  %39 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9645
  %40 = bitcast %struct.uiItem* %39 to %struct.uiLayout*, !dbg !9647
  %align = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %40, i32 0, i32 10, !dbg !9647
  %41 = load i8, i8* %align, align 2, !dbg !9647
  %tobool27 = icmp ne i8 %41, 0, !dbg !9648
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !9649

if.then28:                                        ; preds = %if.else26
  %42 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9650
  %43 = bitcast %struct.uiItem* %42 to %struct.uiLayout*, !dbg !9652
  %44 = load i16, i16* %nr.addr, align 2, !dbg !9653
  call void @ui_item_align(%struct.uiLayout* %43, i16 signext %44), !dbg !9654
  br label %if.end29, !dbg !9655

if.end29:                                         ; preds = %if.then28, %if.else26
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then19
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then15
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then11
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end8
  br label %for.inc, !dbg !9656

for.inc:                                          ; preds = %if.end33
  %45 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9657
  %prev = getelementptr inbounds %struct.uiItem, %struct.uiItem* %45, i32 0, i32 1, !dbg !9658
  %46 = load i8*, i8** %prev, align 8, !dbg !9658
  %47 = bitcast i8* %46 to %struct.uiItem*, !dbg !9657
  store %struct.uiItem* %47, %struct.uiItem** %item, align 8, !dbg !9659
  br label %for.cond, !dbg !9660, !llvm.loop !9661

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9663
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_item_flag(%struct.uiLayout* %litem, i32 %flag) #0 !dbg !9664 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %flag.addr = alloca i32, align 4
  %item = alloca %struct.uiItem*, align 8
  %bitem = alloca %struct.uiButtonItem*, align 8
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9665, metadata !DIExpression()), !dbg !9666
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9667, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !9669, metadata !DIExpression()), !dbg !9670
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem, metadata !9671, metadata !DIExpression()), !dbg !9672
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9673
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 3, !dbg !9675
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 1, !dbg !9676
  %1 = load i8*, i8** %last, align 8, !dbg !9676
  %2 = bitcast i8* %1 to %struct.uiItem*, !dbg !9673
  store %struct.uiItem* %2, %struct.uiItem** %item, align 8, !dbg !9677
  br label %for.cond, !dbg !9678

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9679
  %tobool = icmp ne %struct.uiItem* %3, null, !dbg !9681
  br i1 %tobool, label %for.body, label %for.end, !dbg !9681

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9682
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %4, i32 0, i32 2, !dbg !9685
  %5 = load i32, i32* %type, align 8, !dbg !9685
  %cmp = icmp eq i32 %5, 0, !dbg !9686
  br i1 %cmp, label %if.then, label %if.else, !dbg !9687

if.then:                                          ; preds = %for.body
  %6 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9688
  %7 = bitcast %struct.uiItem* %6 to %struct.uiButtonItem*, !dbg !9690
  store %struct.uiButtonItem* %7, %struct.uiButtonItem** %bitem, align 8, !dbg !9691
  %8 = load i32, i32* %flag.addr, align 4, !dbg !9692
  %9 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !9693
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %9, i32 0, i32 1, !dbg !9694
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9694
  %flag1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 2, !dbg !9695
  %11 = load i32, i32* %flag1, align 8, !dbg !9696
  %or = or i32 %11, %8, !dbg !9696
  store i32 %or, i32* %flag1, align 8, !dbg !9696
  br label %if.end, !dbg !9697

if.else:                                          ; preds = %for.body
  %12 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9698
  %13 = bitcast %struct.uiItem* %12 to %struct.uiLayout*, !dbg !9699
  %14 = load i32, i32* %flag.addr, align 4, !dbg !9700
  call void @ui_item_flag(%struct.uiLayout* %13, i32 %14), !dbg !9701
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9702

for.inc:                                          ; preds = %if.end
  %15 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9703
  %prev = getelementptr inbounds %struct.uiItem, %struct.uiItem* %15, i32 0, i32 1, !dbg !9704
  %16 = load i8*, i8** %prev, align 8, !dbg !9704
  %17 = bitcast i8* %16 to %struct.uiItem*, !dbg !9703
  store %struct.uiItem* %17, %struct.uiItem** %item, align 8, !dbg !9705
  br label %for.cond, !dbg !9706, !llvm.loop !9707

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9709
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_column(%struct.uiLayout* %litem) #0 !dbg !9710 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %itemh = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9711, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !9713, metadata !DIExpression()), !dbg !9714
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !9715, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9717, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9719, metadata !DIExpression()), !dbg !9720
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9721
  %x1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 4, !dbg !9722
  %1 = load i32, i32* %x1, align 8, !dbg !9722
  store i32 %1, i32* %x, align 4, !dbg !9723
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9724
  %y2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 5, !dbg !9725
  %3 = load i32, i32* %y2, align 4, !dbg !9725
  store i32 %3, i32* %y, align 4, !dbg !9726
  %4 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9727
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 3, !dbg !9729
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !9730
  %5 = load i8*, i8** %first, align 8, !dbg !9730
  %6 = bitcast i8* %5 to %struct.uiItem*, !dbg !9727
  store %struct.uiItem* %6, %struct.uiItem** %item, align 8, !dbg !9731
  br label %for.cond, !dbg !9732

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9733
  %tobool = icmp ne %struct.uiItem* %7, null, !dbg !9735
  br i1 %tobool, label %for.body, label %for.end, !dbg !9735

for.body:                                         ; preds = %for.cond
  %8 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9736
  call void @ui_item_size(%struct.uiItem* %8, i32* null, i32* %itemh), !dbg !9738
  %9 = load i32, i32* %itemh, align 4, !dbg !9739
  %10 = load i32, i32* %y, align 4, !dbg !9740
  %sub = sub nsw i32 %10, %9, !dbg !9740
  store i32 %sub, i32* %y, align 4, !dbg !9740
  %11 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9741
  %12 = load i32, i32* %x, align 4, !dbg !9742
  %13 = load i32, i32* %y, align 4, !dbg !9743
  %14 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9744
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %14, i32 0, i32 6, !dbg !9745
  %15 = load i32, i32* %w, align 8, !dbg !9745
  %16 = load i32, i32* %itemh, align 4, !dbg !9746
  call void @ui_item_position(%struct.uiItem* %11, i32 %12, i32 %13, i32 %15, i32 %16), !dbg !9747
  %17 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9748
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %17, i32 0, i32 0, !dbg !9750
  %18 = load i8*, i8** %next, align 8, !dbg !9750
  %tobool3 = icmp ne i8* %18, null, !dbg !9748
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9751

if.then:                                          ; preds = %for.body
  %19 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9752
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 9, !dbg !9753
  %20 = load i16, i16* %space, align 8, !dbg !9753
  %conv = sext i16 %20 to i32, !dbg !9752
  %21 = load i32, i32* %y, align 4, !dbg !9754
  %sub4 = sub nsw i32 %21, %conv, !dbg !9754
  store i32 %sub4, i32* %y, align 4, !dbg !9754
  br label %if.end, !dbg !9755

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9756

for.inc:                                          ; preds = %if.end
  %22 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9757
  %next5 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %22, i32 0, i32 0, !dbg !9758
  %23 = load i8*, i8** %next5, align 8, !dbg !9758
  %24 = bitcast i8* %23 to %struct.uiItem*, !dbg !9757
  store %struct.uiItem* %24, %struct.uiItem** %item, align 8, !dbg !9759
  br label %for.cond, !dbg !9760, !llvm.loop !9761

for.end:                                          ; preds = %for.cond
  %25 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9763
  %y6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %25, i32 0, i32 5, !dbg !9764
  %26 = load i32, i32* %y6, align 4, !dbg !9764
  %27 = load i32, i32* %y, align 4, !dbg !9765
  %sub7 = sub nsw i32 %26, %27, !dbg !9766
  %28 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9767
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %28, i32 0, i32 7, !dbg !9768
  store i32 %sub7, i32* %h, align 4, !dbg !9769
  %29 = load i32, i32* %x, align 4, !dbg !9770
  %30 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9771
  %x8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %30, i32 0, i32 4, !dbg !9772
  store i32 %29, i32* %x8, align 8, !dbg !9773
  %31 = load i32, i32* %y, align 4, !dbg !9774
  %32 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9775
  %y9 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %32, i32 0, i32 5, !dbg !9776
  store i32 %31, i32* %y9, align 4, !dbg !9777
  ret void, !dbg !9778
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_column_flow(%struct.uiLayout* %litem) #0 !dbg !9779 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %flow = alloca %struct.uiLayoutItemFlow*, align 8
  %item = alloca %struct.uiItem*, align 8
  %col = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %emh = alloca i32, align 4
  %emy = alloca i32, align 4
  %miny = alloca i32, align 4
  %itemw = alloca i32, align 4
  %itemh = alloca i32, align 4
  %toth = alloca i32, align 4
  %totitem = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !9782, metadata !DIExpression()), !dbg !9783
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9784
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !9785
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !9785
  %style1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 9, !dbg !9786
  %2 = load %struct.uiStyle*, %struct.uiStyle** %style1, align 8, !dbg !9786
  store %struct.uiStyle* %2, %struct.uiStyle** %style, align 8, !dbg !9783
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemFlow** %flow, metadata !9787, metadata !DIExpression()), !dbg !9788
  %3 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9789
  %4 = bitcast %struct.uiLayout* %3 to %struct.uiLayoutItemFlow*, !dbg !9790
  store %struct.uiLayoutItemFlow* %4, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9788
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.declare(metadata i32* %col, metadata !9793, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9795, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9797, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.declare(metadata i32* %w, metadata !9799, metadata !DIExpression()), !dbg !9800
  call void @llvm.dbg.declare(metadata i32* %emh, metadata !9801, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.declare(metadata i32* %emy, metadata !9803, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.declare(metadata i32* %miny, metadata !9805, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !9807, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !9809, metadata !DIExpression()), !dbg !9810
  call void @llvm.dbg.declare(metadata i32* %toth, metadata !9811, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !9813, metadata !DIExpression()), !dbg !9814
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9815, metadata !DIExpression()), !dbg !9816
  store i32 0, i32* %toth, align 4, !dbg !9817
  store i32 0, i32* %totitem, align 4, !dbg !9818
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9819
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 3, !dbg !9821
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !9822
  %6 = load i8*, i8** %first, align 8, !dbg !9822
  %7 = bitcast i8* %6 to %struct.uiItem*, !dbg !9819
  store %struct.uiItem* %7, %struct.uiItem** %item, align 8, !dbg !9823
  br label %for.cond, !dbg !9824

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9825
  %tobool = icmp ne %struct.uiItem* %8, null, !dbg !9827
  br i1 %tobool, label %for.body, label %for.end, !dbg !9827

for.body:                                         ; preds = %for.cond
  %9 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9828
  call void @ui_item_size(%struct.uiItem* %9, i32* %itemw, i32* %itemh), !dbg !9830
  %10 = load i32, i32* %itemh, align 4, !dbg !9831
  %11 = load i32, i32* %toth, align 4, !dbg !9832
  %add = add nsw i32 %11, %10, !dbg !9832
  store i32 %add, i32* %toth, align 4, !dbg !9832
  %12 = load i32, i32* %totitem, align 4, !dbg !9833
  %inc = add nsw i32 %12, 1, !dbg !9833
  store i32 %inc, i32* %totitem, align 4, !dbg !9833
  br label %for.inc, !dbg !9834

for.inc:                                          ; preds = %for.body
  %13 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9835
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %13, i32 0, i32 0, !dbg !9836
  %14 = load i8*, i8** %next, align 8, !dbg !9836
  %15 = bitcast i8* %14 to %struct.uiItem*, !dbg !9835
  store %struct.uiItem* %15, %struct.uiItem** %item, align 8, !dbg !9837
  br label %for.cond, !dbg !9838, !llvm.loop !9839

for.end:                                          ; preds = %for.cond
  %16 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9841
  %x2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 4, !dbg !9842
  %17 = load i32, i32* %x2, align 8, !dbg !9842
  store i32 %17, i32* %x, align 4, !dbg !9843
  %18 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9844
  %y3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 5, !dbg !9845
  %19 = load i32, i32* %y3, align 4, !dbg !9845
  store i32 %19, i32* %y, align 4, !dbg !9846
  store i32 0, i32* %emy, align 4, !dbg !9847
  store i32 0, i32* %miny, align 4, !dbg !9848
  %20 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9849
  %w4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %20, i32 0, i32 6, !dbg !9850
  %21 = load i32, i32* %w4, align 8, !dbg !9850
  %22 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9851
  %totcol = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %22, i32 0, i32 2, !dbg !9852
  %23 = load i32, i32* %totcol, align 4, !dbg !9852
  %sub = sub nsw i32 %23, 1, !dbg !9853
  %24 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !9854
  %columnspace = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %24, i32 0, i32 10, !dbg !9855
  %25 = load i16, i16* %columnspace, align 8, !dbg !9855
  %conv = sext i16 %25 to i32, !dbg !9854
  %mul = mul nsw i32 %sub, %conv, !dbg !9856
  %sub5 = sub nsw i32 %21, %mul, !dbg !9857
  store i32 %sub5, i32* %w, align 4, !dbg !9858
  %26 = load i32, i32* %toth, align 4, !dbg !9859
  %27 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9860
  %totcol6 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %27, i32 0, i32 2, !dbg !9861
  %28 = load i32, i32* %totcol6, align 4, !dbg !9861
  %div = sdiv i32 %26, %28, !dbg !9862
  store i32 %div, i32* %emh, align 4, !dbg !9863
  store i32 0, i32* %col, align 4, !dbg !9864
  %29 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9865
  %items7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 3, !dbg !9867
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items7, i32 0, i32 0, !dbg !9868
  %30 = load i8*, i8** %first8, align 8, !dbg !9868
  %31 = bitcast i8* %30 to %struct.uiItem*, !dbg !9865
  store %struct.uiItem* %31, %struct.uiItem** %item, align 8, !dbg !9869
  br label %for.cond9, !dbg !9870

for.cond9:                                        ; preds = %for.inc38, %for.end
  %32 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9871
  %tobool10 = icmp ne %struct.uiItem* %32, null, !dbg !9873
  br i1 %tobool10, label %for.body11, label %for.end40, !dbg !9873

for.body11:                                       ; preds = %for.cond9
  %33 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9874
  call void @ui_item_size(%struct.uiItem* %33, i32* null, i32* %itemh), !dbg !9876
  %34 = load i32, i32* %x, align 4, !dbg !9877
  %35 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9878
  %x12 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %35, i32 0, i32 4, !dbg !9879
  %36 = load i32, i32* %x12, align 8, !dbg !9879
  %sub13 = sub nsw i32 %34, %36, !dbg !9880
  %37 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9881
  %totcol14 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %37, i32 0, i32 2, !dbg !9882
  %38 = load i32, i32* %totcol14, align 4, !dbg !9882
  %39 = load i32, i32* %w, align 4, !dbg !9883
  %40 = load i32, i32* %col, align 4, !dbg !9884
  %41 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9885
  %totcol15 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %41, i32 0, i32 2, !dbg !9886
  %42 = load i32, i32* %totcol15, align 4, !dbg !9886
  %sub16 = sub nsw i32 %42, 1, !dbg !9887
  %cmp = icmp eq i32 %40, %sub16, !dbg !9888
  %conv17 = zext i1 %cmp to i32, !dbg !9888
  %43 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9889
  %alignment = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %43, i32 0, i32 15, !dbg !9890
  %44 = load i8, i8* %alignment, align 1, !dbg !9890
  %conv18 = zext i8 %44 to i32, !dbg !9889
  %call = call i32 @ui_item_fit(i32 1, i32 %sub13, i32 %38, i32 %39, i32 %conv17, i32 %conv18, i32* %offset), !dbg !9891
  store i32 %call, i32* %itemw, align 4, !dbg !9892
  %45 = load i32, i32* %itemh, align 4, !dbg !9893
  %46 = load i32, i32* %y, align 4, !dbg !9894
  %sub19 = sub nsw i32 %46, %45, !dbg !9894
  store i32 %sub19, i32* %y, align 4, !dbg !9894
  %47 = load i32, i32* %itemh, align 4, !dbg !9895
  %48 = load i32, i32* %emy, align 4, !dbg !9896
  %sub20 = sub nsw i32 %48, %47, !dbg !9896
  store i32 %sub20, i32* %emy, align 4, !dbg !9896
  %49 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9897
  %50 = load i32, i32* %x, align 4, !dbg !9898
  %51 = load i32, i32* %offset, align 4, !dbg !9899
  %add21 = add nsw i32 %50, %51, !dbg !9900
  %52 = load i32, i32* %y, align 4, !dbg !9901
  %53 = load i32, i32* %itemw, align 4, !dbg !9902
  %54 = load i32, i32* %itemh, align 4, !dbg !9903
  call void @ui_item_position(%struct.uiItem* %49, i32 %add21, i32 %52, i32 %53, i32 %54), !dbg !9904
  %55 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !9905
  %buttonspacey = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %55, i32 0, i32 14, !dbg !9906
  %56 = load i16, i16* %buttonspacey, align 8, !dbg !9906
  %conv22 = sext i16 %56 to i32, !dbg !9905
  %57 = load i32, i32* %y, align 4, !dbg !9907
  %sub23 = sub nsw i32 %57, %conv22, !dbg !9907
  store i32 %sub23, i32* %y, align 4, !dbg !9907
  %58 = load i32, i32* %miny, align 4, !dbg !9908
  %59 = load i32, i32* %y, align 4, !dbg !9909
  %call24 = call i32 @min_ii(i32 %58, i32 %59), !dbg !9910
  store i32 %call24, i32* %miny, align 4, !dbg !9911
  %60 = load i32, i32* %col, align 4, !dbg !9912
  %61 = load %struct.uiLayoutItemFlow*, %struct.uiLayoutItemFlow** %flow, align 8, !dbg !9914
  %totcol25 = getelementptr inbounds %struct.uiLayoutItemFlow, %struct.uiLayoutItemFlow* %61, i32 0, i32 2, !dbg !9915
  %62 = load i32, i32* %totcol25, align 4, !dbg !9915
  %sub26 = sub nsw i32 %62, 1, !dbg !9916
  %cmp27 = icmp slt i32 %60, %sub26, !dbg !9917
  br i1 %cmp27, label %land.lhs.true, label %if.end, !dbg !9918

land.lhs.true:                                    ; preds = %for.body11
  %63 = load i32, i32* %emy, align 4, !dbg !9919
  %64 = load i32, i32* %emh, align 4, !dbg !9920
  %sub29 = sub nsw i32 0, %64, !dbg !9921
  %cmp30 = icmp sle i32 %63, %sub29, !dbg !9922
  br i1 %cmp30, label %if.then, label %if.end, !dbg !9923

if.then:                                          ; preds = %land.lhs.true
  %65 = load i32, i32* %itemw, align 4, !dbg !9924
  %66 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !9926
  %columnspace32 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %66, i32 0, i32 10, !dbg !9927
  %67 = load i16, i16* %columnspace32, align 8, !dbg !9927
  %conv33 = sext i16 %67 to i32, !dbg !9926
  %add34 = add nsw i32 %65, %conv33, !dbg !9928
  %68 = load i32, i32* %x, align 4, !dbg !9929
  %add35 = add nsw i32 %68, %add34, !dbg !9929
  store i32 %add35, i32* %x, align 4, !dbg !9929
  %69 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9930
  %y36 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %69, i32 0, i32 5, !dbg !9931
  %70 = load i32, i32* %y36, align 4, !dbg !9931
  store i32 %70, i32* %y, align 4, !dbg !9932
  store i32 0, i32* %emy, align 4, !dbg !9933
  %71 = load i32, i32* %col, align 4, !dbg !9934
  %inc37 = add nsw i32 %71, 1, !dbg !9934
  store i32 %inc37, i32* %col, align 4, !dbg !9934
  br label %if.end, !dbg !9935

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body11
  br label %for.inc38, !dbg !9936

for.inc38:                                        ; preds = %if.end
  %72 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !9937
  %next39 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %72, i32 0, i32 0, !dbg !9938
  %73 = load i8*, i8** %next39, align 8, !dbg !9938
  %74 = bitcast i8* %73 to %struct.uiItem*, !dbg !9937
  store %struct.uiItem* %74, %struct.uiItem** %item, align 8, !dbg !9939
  br label %for.cond9, !dbg !9940, !llvm.loop !9941

for.end40:                                        ; preds = %for.cond9
  %75 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9943
  %y41 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %75, i32 0, i32 5, !dbg !9944
  %76 = load i32, i32* %y41, align 4, !dbg !9944
  %77 = load i32, i32* %miny, align 4, !dbg !9945
  %sub42 = sub nsw i32 %76, %77, !dbg !9946
  %78 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9947
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %78, i32 0, i32 7, !dbg !9948
  store i32 %sub42, i32* %h, align 4, !dbg !9949
  %79 = load i32, i32* %x, align 4, !dbg !9950
  %80 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9951
  %x43 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %80, i32 0, i32 4, !dbg !9952
  store i32 %79, i32* %x43, align 8, !dbg !9953
  %81 = load i32, i32* %miny, align 4, !dbg !9954
  %82 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9955
  %y44 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %82, i32 0, i32 5, !dbg !9956
  store i32 %81, i32* %y44, align 4, !dbg !9957
  ret void, !dbg !9958
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_row(%struct.uiLayout* %litem) #0 !dbg !9959 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %tot = alloca i32, align 4
  %totw = alloca i32, align 4
  %neww = alloca i32, align 4
  %newtotw = alloca i32, align 4
  %itemw = alloca i32, align 4
  %minw = alloca i32, align 4
  %itemh = alloca i32, align 4
  %offset = alloca i32, align 4
  %fixedw = alloca i32, align 4
  %freew = alloca i32, align 4
  %fixedx = alloca i32, align 4
  %freex = alloca i32, align 4
  %flag = alloca i32, align 4
  %lastw = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !9960, metadata !DIExpression()), !dbg !9961
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9964, metadata !DIExpression()), !dbg !9965
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9966, metadata !DIExpression()), !dbg !9967
  call void @llvm.dbg.declare(metadata i32* %w, metadata !9968, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !9970, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.declare(metadata i32* %totw, metadata !9972, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.declare(metadata i32* %neww, metadata !9974, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.declare(metadata i32* %newtotw, metadata !9976, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata i32* %minw, metadata !9980, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !9982, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9984, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.declare(metadata i32* %fixedw, metadata !9986, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.declare(metadata i32* %freew, metadata !9988, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.declare(metadata i32* %fixedx, metadata !9990, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata i32* %freex, metadata !9992, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !9994, metadata !DIExpression()), !dbg !9995
  store i32 0, i32* %flag, align 4, !dbg !9995
  call void @llvm.dbg.declare(metadata i32* %lastw, metadata !9996, metadata !DIExpression()), !dbg !9997
  store i32 0, i32* %lastw, align 4, !dbg !9997
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !9998
  %y1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 5, !dbg !9999
  %1 = load i32, i32* %y1, align 4, !dbg !9999
  store i32 %1, i32* %y, align 4, !dbg !10000
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10001
  %w2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 6, !dbg !10002
  %3 = load i32, i32* %w2, align 8, !dbg !10002
  store i32 %3, i32* %w, align 4, !dbg !10003
  store i32 0, i32* %totw, align 4, !dbg !10004
  store i32 0, i32* %tot, align 4, !dbg !10005
  %4 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10006
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 3, !dbg !10008
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !10009
  %5 = load i8*, i8** %first, align 8, !dbg !10009
  %6 = bitcast i8* %5 to %struct.uiItem*, !dbg !10006
  store %struct.uiItem* %6, %struct.uiItem** %item, align 8, !dbg !10010
  br label %for.cond, !dbg !10011

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10012
  %tobool = icmp ne %struct.uiItem* %7, null, !dbg !10014
  br i1 %tobool, label %for.body, label %for.end, !dbg !10014

for.body:                                         ; preds = %for.cond
  %8 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10015
  call void @ui_item_size(%struct.uiItem* %8, i32* %itemw, i32* %itemh), !dbg !10017
  %9 = load i32, i32* %itemw, align 4, !dbg !10018
  %10 = load i32, i32* %totw, align 4, !dbg !10019
  %add = add nsw i32 %10, %9, !dbg !10019
  store i32 %add, i32* %totw, align 4, !dbg !10019
  %11 = load i32, i32* %tot, align 4, !dbg !10020
  %inc = add nsw i32 %11, 1, !dbg !10020
  store i32 %inc, i32* %tot, align 4, !dbg !10020
  br label %for.inc, !dbg !10021

for.inc:                                          ; preds = %for.body
  %12 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10022
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %12, i32 0, i32 0, !dbg !10023
  %13 = load i8*, i8** %next, align 8, !dbg !10023
  %14 = bitcast i8* %13 to %struct.uiItem*, !dbg !10022
  store %struct.uiItem* %14, %struct.uiItem** %item, align 8, !dbg !10024
  br label %for.cond, !dbg !10025, !llvm.loop !10026

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %totw, align 4, !dbg !10028
  %cmp = icmp eq i32 %15, 0, !dbg !10030
  br i1 %cmp, label %if.then, label %if.end, !dbg !10031

if.then:                                          ; preds = %for.end
  br label %return, !dbg !10032

if.end:                                           ; preds = %for.end
  %16 = load i32, i32* %w, align 4, !dbg !10033
  %cmp3 = icmp ne i32 %16, 0, !dbg !10035
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !10036

if.then4:                                         ; preds = %if.end
  %17 = load i32, i32* %tot, align 4, !dbg !10037
  %sub = sub nsw i32 %17, 1, !dbg !10038
  %18 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10039
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %18, i32 0, i32 9, !dbg !10040
  %19 = load i16, i16* %space, align 8, !dbg !10040
  %conv = sext i16 %19 to i32, !dbg !10039
  %mul = mul nsw i32 %sub, %conv, !dbg !10041
  %20 = load i32, i32* %w, align 4, !dbg !10042
  %sub5 = sub nsw i32 %20, %mul, !dbg !10042
  store i32 %sub5, i32* %w, align 4, !dbg !10042
  br label %if.end6, !dbg !10043

if.end6:                                          ; preds = %if.then4, %if.end
  store i32 0, i32* %fixedw, align 4, !dbg !10044
  br label %do.body, !dbg !10045

do.body:                                          ; preds = %do.cond, %if.end6
  store i32 0, i32* %freew, align 4, !dbg !10046
  store i32 0, i32* %x, align 4, !dbg !10048
  store i32 0, i32* %flag, align 4, !dbg !10049
  %21 = load i32, i32* %totw, align 4, !dbg !10050
  store i32 %21, i32* %newtotw, align 4, !dbg !10051
  %22 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10052
  %items7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %22, i32 0, i32 3, !dbg !10054
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items7, i32 0, i32 0, !dbg !10055
  %23 = load i8*, i8** %first8, align 8, !dbg !10055
  %24 = bitcast i8* %23 to %struct.uiItem*, !dbg !10052
  store %struct.uiItem* %24, %struct.uiItem** %item, align 8, !dbg !10056
  br label %for.cond9, !dbg !10057

for.cond9:                                        ; preds = %for.inc41, %do.body
  %25 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10058
  %tobool10 = icmp ne %struct.uiItem* %25, null, !dbg !10060
  br i1 %tobool10, label %for.body11, label %for.end43, !dbg !10060

for.body11:                                       ; preds = %for.cond9
  %26 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10061
  %flag12 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %26, i32 0, i32 3, !dbg !10064
  %27 = load i32, i32* %flag12, align 4, !dbg !10064
  %tobool13 = icmp ne i32 %27, 0, !dbg !10061
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10065

if.then14:                                        ; preds = %for.body11
  br label %for.inc41, !dbg !10066

if.end15:                                         ; preds = %for.body11
  %28 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10067
  call void @ui_item_size(%struct.uiItem* %28, i32* %itemw, i32* %itemh), !dbg !10068
  %29 = load i32, i32* %itemw, align 4, !dbg !10069
  %call = call i32 @ui_litem_min_width(i32 %29), !dbg !10070
  store i32 %call, i32* %minw, align 4, !dbg !10071
  %30 = load i32, i32* %w, align 4, !dbg !10072
  %31 = load i32, i32* %lastw, align 4, !dbg !10074
  %sub16 = sub nsw i32 %30, %31, !dbg !10075
  %cmp17 = icmp sgt i32 %sub16, 0, !dbg !10076
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !10077

if.then19:                                        ; preds = %if.end15
  %32 = load i32, i32* %itemw, align 4, !dbg !10078
  %33 = load i32, i32* %x, align 4, !dbg !10079
  %34 = load i32, i32* %totw, align 4, !dbg !10080
  %35 = load i32, i32* %w, align 4, !dbg !10081
  %36 = load i32, i32* %lastw, align 4, !dbg !10082
  %sub20 = sub nsw i32 %35, %36, !dbg !10083
  %37 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10084
  %next21 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %37, i32 0, i32 0, !dbg !10085
  %38 = load i8*, i8** %next21, align 8, !dbg !10085
  %tobool22 = icmp ne i8* %38, null, !dbg !10086
  %lnot = xor i1 %tobool22, true, !dbg !10086
  %lnot.ext = zext i1 %lnot to i32, !dbg !10086
  %39 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10087
  %alignment = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %39, i32 0, i32 15, !dbg !10088
  %40 = load i8, i8* %alignment, align 1, !dbg !10088
  %conv23 = zext i8 %40 to i32, !dbg !10087
  %call24 = call i32 @ui_item_fit(i32 %32, i32 %33, i32 %34, i32 %sub20, i32 %lnot.ext, i32 %conv23, i32* null), !dbg !10089
  store i32 %call24, i32* %neww, align 4, !dbg !10090
  br label %if.end25, !dbg !10091

if.else:                                          ; preds = %if.end15
  store i32 0, i32* %neww, align 4, !dbg !10092
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then19
  %41 = load i32, i32* %neww, align 4, !dbg !10093
  %42 = load i32, i32* %x, align 4, !dbg !10094
  %add26 = add nsw i32 %42, %41, !dbg !10094
  store i32 %add26, i32* %x, align 4, !dbg !10094
  %43 = load i32, i32* %neww, align 4, !dbg !10095
  %44 = load i32, i32* %minw, align 4, !dbg !10097
  %cmp27 = icmp slt i32 %43, %44, !dbg !10098
  br i1 %cmp27, label %land.lhs.true, label %lor.lhs.false, !dbg !10099

lor.lhs.false:                                    ; preds = %if.end25
  %45 = load i32, i32* %itemw, align 4, !dbg !10100
  %46 = load i32, i32* %minw, align 4, !dbg !10101
  %cmp29 = icmp eq i32 %45, %46, !dbg !10102
  br i1 %cmp29, label %land.lhs.true, label %if.else37, !dbg !10103

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end25
  %47 = load i32, i32* %w, align 4, !dbg !10104
  %cmp31 = icmp ne i32 %47, 0, !dbg !10105
  br i1 %cmp31, label %if.then33, label %if.else37, !dbg !10106

if.then33:                                        ; preds = %land.lhs.true
  %48 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10107
  %flag34 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %48, i32 0, i32 3, !dbg !10109
  store i32 1, i32* %flag34, align 4, !dbg !10110
  %49 = load i32, i32* %minw, align 4, !dbg !10111
  %50 = load i32, i32* %fixedw, align 4, !dbg !10112
  %add35 = add nsw i32 %50, %49, !dbg !10112
  store i32 %add35, i32* %fixedw, align 4, !dbg !10112
  store i32 1, i32* %flag, align 4, !dbg !10113
  %51 = load i32, i32* %itemw, align 4, !dbg !10114
  %52 = load i32, i32* %newtotw, align 4, !dbg !10115
  %sub36 = sub nsw i32 %52, %51, !dbg !10115
  store i32 %sub36, i32* %newtotw, align 4, !dbg !10115
  br label %if.end40, !dbg !10116

if.else37:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %53 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10117
  %flag38 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %53, i32 0, i32 3, !dbg !10119
  store i32 0, i32* %flag38, align 4, !dbg !10120
  %54 = load i32, i32* %itemw, align 4, !dbg !10121
  %55 = load i32, i32* %freew, align 4, !dbg !10122
  %add39 = add nsw i32 %55, %54, !dbg !10122
  store i32 %add39, i32* %freew, align 4, !dbg !10122
  br label %if.end40

if.end40:                                         ; preds = %if.else37, %if.then33
  br label %for.inc41, !dbg !10123

for.inc41:                                        ; preds = %if.end40, %if.then14
  %56 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10124
  %next42 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %56, i32 0, i32 0, !dbg !10125
  %57 = load i8*, i8** %next42, align 8, !dbg !10125
  %58 = bitcast i8* %57 to %struct.uiItem*, !dbg !10124
  store %struct.uiItem* %58, %struct.uiItem** %item, align 8, !dbg !10126
  br label %for.cond9, !dbg !10127, !llvm.loop !10128

for.end43:                                        ; preds = %for.cond9
  %59 = load i32, i32* %newtotw, align 4, !dbg !10130
  store i32 %59, i32* %totw, align 4, !dbg !10131
  %60 = load i32, i32* %fixedw, align 4, !dbg !10132
  store i32 %60, i32* %lastw, align 4, !dbg !10133
  br label %do.cond, !dbg !10134

do.cond:                                          ; preds = %for.end43
  %61 = load i32, i32* %flag, align 4, !dbg !10135
  %tobool44 = icmp ne i32 %61, 0, !dbg !10134
  br i1 %tobool44, label %do.body, label %do.end, !dbg !10134, !llvm.loop !10136

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %freex, align 4, !dbg !10138
  store i32 0, i32* %fixedx, align 4, !dbg !10139
  %62 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10140
  %x45 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %62, i32 0, i32 4, !dbg !10141
  %63 = load i32, i32* %x45, align 8, !dbg !10141
  store i32 %63, i32* %x, align 4, !dbg !10142
  %64 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10143
  %items46 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %64, i32 0, i32 3, !dbg !10145
  %first47 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items46, i32 0, i32 0, !dbg !10146
  %65 = load i8*, i8** %first47, align 8, !dbg !10146
  %66 = bitcast i8* %65 to %struct.uiItem*, !dbg !10143
  store %struct.uiItem* %66, %struct.uiItem** %item, align 8, !dbg !10147
  br label %for.cond48, !dbg !10148

for.cond48:                                       ; preds = %for.inc120, %do.end
  %67 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10149
  %tobool49 = icmp ne %struct.uiItem* %67, null, !dbg !10151
  br i1 %tobool49, label %for.body50, label %for.end122, !dbg !10151

for.body50:                                       ; preds = %for.cond48
  %68 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10152
  call void @ui_item_size(%struct.uiItem* %68, i32* %itemw, i32* %itemh), !dbg !10154
  %69 = load i32, i32* %itemw, align 4, !dbg !10155
  %call51 = call i32 @ui_litem_min_width(i32 %69), !dbg !10156
  store i32 %call51, i32* %minw, align 4, !dbg !10157
  %70 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10158
  %flag52 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %70, i32 0, i32 3, !dbg !10160
  %71 = load i32, i32* %flag52, align 4, !dbg !10160
  %tobool53 = icmp ne i32 %71, 0, !dbg !10158
  br i1 %tobool53, label %if.then54, label %if.else64, !dbg !10161

if.then54:                                        ; preds = %for.body50
  %72 = load i32, i32* %minw, align 4, !dbg !10162
  %73 = load i32, i32* %fixedx, align 4, !dbg !10164
  %74 = load i32, i32* %fixedw, align 4, !dbg !10165
  %75 = load i32, i32* %w, align 4, !dbg !10166
  %76 = load i32, i32* %fixedw, align 4, !dbg !10167
  %call55 = call i32 @min_ii(i32 %75, i32 %76), !dbg !10168
  %77 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10169
  %next56 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %77, i32 0, i32 0, !dbg !10170
  %78 = load i8*, i8** %next56, align 8, !dbg !10170
  %tobool57 = icmp ne i8* %78, null, !dbg !10171
  %lnot58 = xor i1 %tobool57, true, !dbg !10171
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !10171
  %79 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10172
  %alignment60 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %79, i32 0, i32 15, !dbg !10173
  %80 = load i8, i8* %alignment60, align 1, !dbg !10173
  %conv61 = zext i8 %80 to i32, !dbg !10172
  %call62 = call i32 @ui_item_fit(i32 %72, i32 %73, i32 %74, i32 %call55, i32 %lnot.ext59, i32 %conv61, i32* null), !dbg !10174
  store i32 %call62, i32* %itemw, align 4, !dbg !10175
  %81 = load i32, i32* %itemw, align 4, !dbg !10176
  %82 = load i32, i32* %fixedx, align 4, !dbg !10177
  %add63 = add nsw i32 %82, %81, !dbg !10177
  store i32 %add63, i32* %fixedx, align 4, !dbg !10177
  br label %if.end74, !dbg !10178

if.else64:                                        ; preds = %for.body50
  %83 = load i32, i32* %itemw, align 4, !dbg !10179
  %84 = load i32, i32* %freex, align 4, !dbg !10181
  %85 = load i32, i32* %freew, align 4, !dbg !10182
  %86 = load i32, i32* %w, align 4, !dbg !10183
  %87 = load i32, i32* %fixedw, align 4, !dbg !10184
  %sub65 = sub nsw i32 %86, %87, !dbg !10185
  %88 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10186
  %next66 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %88, i32 0, i32 0, !dbg !10187
  %89 = load i8*, i8** %next66, align 8, !dbg !10187
  %tobool67 = icmp ne i8* %89, null, !dbg !10188
  %lnot68 = xor i1 %tobool67, true, !dbg !10188
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !10188
  %90 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10189
  %alignment70 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %90, i32 0, i32 15, !dbg !10190
  %91 = load i8, i8* %alignment70, align 1, !dbg !10190
  %conv71 = zext i8 %91 to i32, !dbg !10189
  %call72 = call i32 @ui_item_fit(i32 %83, i32 %84, i32 %85, i32 %sub65, i32 %lnot.ext69, i32 %conv71, i32* null), !dbg !10191
  store i32 %call72, i32* %itemw, align 4, !dbg !10192
  %92 = load i32, i32* %itemw, align 4, !dbg !10193
  %93 = load i32, i32* %freex, align 4, !dbg !10194
  %add73 = add nsw i32 %93, %92, !dbg !10194
  store i32 %add73, i32* %freex, align 4, !dbg !10194
  br label %if.end74

if.end74:                                         ; preds = %if.else64, %if.then54
  store i32 0, i32* %offset, align 4, !dbg !10195
  %94 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10196
  %alignment75 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %94, i32 0, i32 15, !dbg !10198
  %95 = load i8, i8* %alignment75, align 1, !dbg !10198
  %conv76 = zext i8 %95 to i32, !dbg !10196
  %cmp77 = icmp eq i32 %conv76, 3, !dbg !10199
  br i1 %cmp77, label %if.then79, label %if.else91, !dbg !10200

if.then79:                                        ; preds = %if.end74
  %96 = load i32, i32* %freew, align 4, !dbg !10201
  %97 = load i32, i32* %fixedw, align 4, !dbg !10204
  %add80 = add nsw i32 %96, %97, !dbg !10205
  %cmp81 = icmp sgt i32 %add80, 0, !dbg !10206
  br i1 %cmp81, label %land.lhs.true83, label %if.end90, !dbg !10207

land.lhs.true83:                                  ; preds = %if.then79
  %98 = load i32, i32* %freew, align 4, !dbg !10208
  %99 = load i32, i32* %fixedw, align 4, !dbg !10209
  %add84 = add nsw i32 %98, %99, !dbg !10210
  %100 = load i32, i32* %w, align 4, !dbg !10211
  %cmp85 = icmp slt i32 %add84, %100, !dbg !10212
  br i1 %cmp85, label %if.then87, label %if.end90, !dbg !10213

if.then87:                                        ; preds = %land.lhs.true83
  %101 = load i32, i32* %w, align 4, !dbg !10214
  %102 = load i32, i32* %fixedw, align 4, !dbg !10215
  %103 = load i32, i32* %freew, align 4, !dbg !10216
  %add88 = add nsw i32 %102, %103, !dbg !10217
  %sub89 = sub nsw i32 %101, %add88, !dbg !10218
  store i32 %sub89, i32* %offset, align 4, !dbg !10219
  br label %if.end90, !dbg !10220

if.end90:                                         ; preds = %if.then87, %land.lhs.true83, %if.then79
  br label %if.end109, !dbg !10221

if.else91:                                        ; preds = %if.end74
  %104 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10222
  %alignment92 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %104, i32 0, i32 15, !dbg !10224
  %105 = load i8, i8* %alignment92, align 1, !dbg !10224
  %conv93 = zext i8 %105 to i32, !dbg !10222
  %cmp94 = icmp eq i32 %conv93, 2, !dbg !10225
  br i1 %cmp94, label %if.then96, label %if.end108, !dbg !10226

if.then96:                                        ; preds = %if.else91
  %106 = load i32, i32* %freew, align 4, !dbg !10227
  %107 = load i32, i32* %fixedw, align 4, !dbg !10230
  %add97 = add nsw i32 %106, %107, !dbg !10231
  %cmp98 = icmp sgt i32 %add97, 0, !dbg !10232
  br i1 %cmp98, label %land.lhs.true100, label %if.end107, !dbg !10233

land.lhs.true100:                                 ; preds = %if.then96
  %108 = load i32, i32* %freew, align 4, !dbg !10234
  %109 = load i32, i32* %fixedw, align 4, !dbg !10235
  %add101 = add nsw i32 %108, %109, !dbg !10236
  %110 = load i32, i32* %w, align 4, !dbg !10237
  %cmp102 = icmp slt i32 %add101, %110, !dbg !10238
  br i1 %cmp102, label %if.then104, label %if.end107, !dbg !10239

if.then104:                                       ; preds = %land.lhs.true100
  %111 = load i32, i32* %w, align 4, !dbg !10240
  %112 = load i32, i32* %fixedw, align 4, !dbg !10241
  %113 = load i32, i32* %freew, align 4, !dbg !10242
  %add105 = add nsw i32 %112, %113, !dbg !10243
  %sub106 = sub nsw i32 %111, %add105, !dbg !10244
  %div = sdiv i32 %sub106, 2, !dbg !10245
  store i32 %div, i32* %offset, align 4, !dbg !10246
  br label %if.end107, !dbg !10247

if.end107:                                        ; preds = %if.then104, %land.lhs.true100, %if.then96
  br label %if.end108, !dbg !10248

if.end108:                                        ; preds = %if.end107, %if.else91
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end90
  %114 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10249
  %115 = load i32, i32* %x, align 4, !dbg !10250
  %116 = load i32, i32* %offset, align 4, !dbg !10251
  %add110 = add nsw i32 %115, %116, !dbg !10252
  %117 = load i32, i32* %y, align 4, !dbg !10253
  %118 = load i32, i32* %itemh, align 4, !dbg !10254
  %sub111 = sub nsw i32 %117, %118, !dbg !10255
  %119 = load i32, i32* %itemw, align 4, !dbg !10256
  %120 = load i32, i32* %itemh, align 4, !dbg !10257
  call void @ui_item_position(%struct.uiItem* %114, i32 %add110, i32 %sub111, i32 %119, i32 %120), !dbg !10258
  %121 = load i32, i32* %itemw, align 4, !dbg !10259
  %122 = load i32, i32* %x, align 4, !dbg !10260
  %add112 = add nsw i32 %122, %121, !dbg !10260
  store i32 %add112, i32* %x, align 4, !dbg !10260
  %123 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10261
  %next113 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %123, i32 0, i32 0, !dbg !10263
  %124 = load i8*, i8** %next113, align 8, !dbg !10263
  %tobool114 = icmp ne i8* %124, null, !dbg !10261
  br i1 %tobool114, label %if.then115, label %if.end119, !dbg !10264

if.then115:                                       ; preds = %if.end109
  %125 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10265
  %space116 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %125, i32 0, i32 9, !dbg !10266
  %126 = load i16, i16* %space116, align 8, !dbg !10266
  %conv117 = sext i16 %126 to i32, !dbg !10265
  %127 = load i32, i32* %x, align 4, !dbg !10267
  %add118 = add nsw i32 %127, %conv117, !dbg !10267
  store i32 %add118, i32* %x, align 4, !dbg !10267
  br label %if.end119, !dbg !10268

if.end119:                                        ; preds = %if.then115, %if.end109
  br label %for.inc120, !dbg !10269

for.inc120:                                       ; preds = %if.end119
  %128 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10270
  %next121 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %128, i32 0, i32 0, !dbg !10271
  %129 = load i8*, i8** %next121, align 8, !dbg !10271
  %130 = bitcast i8* %129 to %struct.uiItem*, !dbg !10270
  store %struct.uiItem* %130, %struct.uiItem** %item, align 8, !dbg !10272
  br label %for.cond48, !dbg !10273, !llvm.loop !10274

for.end122:                                       ; preds = %for.cond48
  %131 = load i32, i32* %x, align 4, !dbg !10276
  %132 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10277
  %x123 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %132, i32 0, i32 4, !dbg !10278
  %133 = load i32, i32* %x123, align 8, !dbg !10278
  %sub124 = sub nsw i32 %131, %133, !dbg !10279
  %134 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10280
  %w125 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %134, i32 0, i32 6, !dbg !10281
  store i32 %sub124, i32* %w125, align 8, !dbg !10282
  %135 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10283
  %y126 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %135, i32 0, i32 5, !dbg !10284
  %136 = load i32, i32* %y126, align 4, !dbg !10284
  %137 = load i32, i32* %y, align 4, !dbg !10285
  %sub127 = sub nsw i32 %136, %137, !dbg !10286
  %138 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10287
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %138, i32 0, i32 7, !dbg !10288
  store i32 %sub127, i32* %h, align 4, !dbg !10289
  %139 = load i32, i32* %x, align 4, !dbg !10290
  %140 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10291
  %x128 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %140, i32 0, i32 4, !dbg !10292
  store i32 %139, i32* %x128, align 8, !dbg !10293
  %141 = load i32, i32* %y, align 4, !dbg !10294
  %142 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10295
  %y129 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %142, i32 0, i32 5, !dbg !10296
  store i32 %141, i32* %y129, align 4, !dbg !10297
  br label %return, !dbg !10298

return:                                           ; preds = %for.end122, %if.then
  ret void, !dbg !10298
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_box(%struct.uiLayout* %litem) #0 !dbg !10299 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %box = alloca %struct.uiLayoutItemBx*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %but = alloca %struct.uiBut*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !10300, metadata !DIExpression()), !dbg !10301
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemBx** %box, metadata !10302, metadata !DIExpression()), !dbg !10303
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10304
  %1 = bitcast %struct.uiLayout* %0 to %struct.uiLayoutItemBx*, !dbg !10305
  store %struct.uiLayoutItemBx* %1, %struct.uiLayoutItemBx** %box, align 8, !dbg !10303
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !10306, metadata !DIExpression()), !dbg !10307
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10308
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 1, !dbg !10309
  %3 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !10309
  %style1 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %3, i32 0, i32 9, !dbg !10310
  %4 = load %struct.uiStyle*, %struct.uiStyle** %style1, align 8, !dbg !10310
  store %struct.uiStyle* %4, %struct.uiStyle** %style, align 8, !dbg !10307
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !10311, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.declare(metadata i32* %w, metadata !10313, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.declare(metadata i32* %h, metadata !10315, metadata !DIExpression()), !dbg !10316
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10317
  %w2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 6, !dbg !10318
  %6 = load i32, i32* %w2, align 8, !dbg !10318
  store i32 %6, i32* %w, align 4, !dbg !10319
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10320
  %h3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 7, !dbg !10321
  %8 = load i32, i32* %h3, align 4, !dbg !10321
  store i32 %8, i32* %h, align 4, !dbg !10322
  %9 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !10323
  %boxspace = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %9, i32 0, i32 12, !dbg !10324
  %10 = load i16, i16* %boxspace, align 4, !dbg !10324
  %conv = sext i16 %10 to i32, !dbg !10323
  %11 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10325
  %x = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %11, i32 0, i32 4, !dbg !10326
  %12 = load i32, i32* %x, align 8, !dbg !10327
  %add = add nsw i32 %12, %conv, !dbg !10327
  store i32 %add, i32* %x, align 8, !dbg !10327
  %13 = load i32, i32* %w, align 4, !dbg !10328
  %cmp = icmp ne i32 %13, 0, !dbg !10330
  br i1 %cmp, label %if.then, label %if.end, !dbg !10331

if.then:                                          ; preds = %entry
  %14 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !10332
  %boxspace5 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %14, i32 0, i32 12, !dbg !10333
  %15 = load i16, i16* %boxspace5, align 4, !dbg !10333
  %conv6 = sext i16 %15 to i32, !dbg !10332
  %mul = mul nsw i32 2, %conv6, !dbg !10334
  %16 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10335
  %w7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 6, !dbg !10336
  %17 = load i32, i32* %w7, align 8, !dbg !10337
  %sub = sub nsw i32 %17, %mul, !dbg !10337
  store i32 %sub, i32* %w7, align 8, !dbg !10337
  br label %if.end, !dbg !10335

if.end:                                           ; preds = %if.then, %entry
  %18 = load i32, i32* %h, align 4, !dbg !10338
  %cmp8 = icmp ne i32 %18, 0, !dbg !10340
  br i1 %cmp8, label %if.then10, label %if.end16, !dbg !10341

if.then10:                                        ; preds = %if.end
  %19 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !10342
  %boxspace11 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %19, i32 0, i32 12, !dbg !10343
  %20 = load i16, i16* %boxspace11, align 4, !dbg !10343
  %conv12 = sext i16 %20 to i32, !dbg !10342
  %mul13 = mul nsw i32 2, %conv12, !dbg !10344
  %21 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10345
  %h14 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %21, i32 0, i32 7, !dbg !10346
  %22 = load i32, i32* %h14, align 4, !dbg !10347
  %sub15 = sub nsw i32 %22, %mul13, !dbg !10347
  store i32 %sub15, i32* %h14, align 4, !dbg !10347
  br label %if.end16, !dbg !10345

if.end16:                                         ; preds = %if.then10, %if.end
  %23 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10348
  call void @ui_litem_layout_column(%struct.uiLayout* %23), !dbg !10349
  %24 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !10350
  %boxspace17 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %24, i32 0, i32 12, !dbg !10351
  %25 = load i16, i16* %boxspace17, align 4, !dbg !10351
  %conv18 = sext i16 %25 to i32, !dbg !10350
  %26 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10352
  %x19 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %26, i32 0, i32 4, !dbg !10353
  %27 = load i32, i32* %x19, align 8, !dbg !10354
  %sub20 = sub nsw i32 %27, %conv18, !dbg !10354
  store i32 %sub20, i32* %x19, align 8, !dbg !10354
  %28 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !10355
  %boxspace21 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %28, i32 0, i32 12, !dbg !10356
  %29 = load i16, i16* %boxspace21, align 4, !dbg !10356
  %conv22 = sext i16 %29 to i32, !dbg !10355
  %30 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10357
  %y = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %30, i32 0, i32 5, !dbg !10358
  %31 = load i32, i32* %y, align 4, !dbg !10359
  %sub23 = sub nsw i32 %31, %conv22, !dbg !10359
  store i32 %sub23, i32* %y, align 4, !dbg !10359
  %32 = load i32, i32* %w, align 4, !dbg !10360
  %cmp24 = icmp ne i32 %32, 0, !dbg !10362
  br i1 %cmp24, label %if.then26, label %if.end32, !dbg !10363

if.then26:                                        ; preds = %if.end16
  %33 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !10364
  %boxspace27 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %33, i32 0, i32 12, !dbg !10365
  %34 = load i16, i16* %boxspace27, align 4, !dbg !10365
  %conv28 = sext i16 %34 to i32, !dbg !10364
  %mul29 = mul nsw i32 2, %conv28, !dbg !10366
  %35 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10367
  %w30 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %35, i32 0, i32 6, !dbg !10368
  %36 = load i32, i32* %w30, align 8, !dbg !10369
  %add31 = add nsw i32 %36, %mul29, !dbg !10369
  store i32 %add31, i32* %w30, align 8, !dbg !10369
  br label %if.end32, !dbg !10367

if.end32:                                         ; preds = %if.then26, %if.end16
  %37 = load i32, i32* %h, align 4, !dbg !10370
  %cmp33 = icmp ne i32 %37, 0, !dbg !10372
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !10373

if.then35:                                        ; preds = %if.end32
  %38 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !10374
  %boxspace36 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %38, i32 0, i32 12, !dbg !10375
  %39 = load i16, i16* %boxspace36, align 4, !dbg !10375
  %conv37 = sext i16 %39 to i32, !dbg !10374
  %40 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10376
  %h38 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %40, i32 0, i32 7, !dbg !10377
  %41 = load i32, i32* %h38, align 4, !dbg !10378
  %add39 = add nsw i32 %41, %conv37, !dbg !10378
  store i32 %add39, i32* %h38, align 4, !dbg !10378
  br label %if.end40, !dbg !10376

if.end40:                                         ; preds = %if.then35, %if.end32
  %42 = load %struct.uiLayoutItemBx*, %struct.uiLayoutItemBx** %box, align 8, !dbg !10379
  %roundbox = getelementptr inbounds %struct.uiLayoutItemBx, %struct.uiLayoutItemBx* %42, i32 0, i32 1, !dbg !10380
  %43 = load %struct.uiBut*, %struct.uiBut** %roundbox, align 8, !dbg !10380
  store %struct.uiBut* %43, %struct.uiBut** %but, align 8, !dbg !10381
  %44 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10382
  %x41 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %44, i32 0, i32 4, !dbg !10383
  %45 = load i32, i32* %x41, align 8, !dbg !10383
  %conv42 = sitofp i32 %45 to float, !dbg !10382
  %46 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10384
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 18, !dbg !10385
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !10386
  store float %conv42, float* %xmin, align 8, !dbg !10387
  %47 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10388
  %y43 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %47, i32 0, i32 5, !dbg !10389
  %48 = load i32, i32* %y43, align 4, !dbg !10389
  %conv44 = sitofp i32 %48 to float, !dbg !10388
  %49 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10390
  %rect45 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %49, i32 0, i32 18, !dbg !10391
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect45, i32 0, i32 2, !dbg !10392
  store float %conv44, float* %ymin, align 8, !dbg !10393
  %50 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10394
  %x46 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %50, i32 0, i32 4, !dbg !10395
  %51 = load i32, i32* %x46, align 8, !dbg !10395
  %52 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10396
  %w47 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %52, i32 0, i32 6, !dbg !10397
  %53 = load i32, i32* %w47, align 8, !dbg !10397
  %add48 = add nsw i32 %51, %53, !dbg !10398
  %conv49 = sitofp i32 %add48 to float, !dbg !10394
  %54 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10399
  %rect50 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %54, i32 0, i32 18, !dbg !10400
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect50, i32 0, i32 1, !dbg !10401
  store float %conv49, float* %xmax, align 4, !dbg !10402
  %55 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10403
  %y51 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %55, i32 0, i32 5, !dbg !10404
  %56 = load i32, i32* %y51, align 4, !dbg !10404
  %57 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10405
  %h52 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %57, i32 0, i32 7, !dbg !10406
  %58 = load i32, i32* %h52, align 4, !dbg !10406
  %add53 = add nsw i32 %56, %58, !dbg !10407
  %conv54 = sitofp i32 %add53 to float, !dbg !10403
  %59 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10408
  %rect55 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 18, !dbg !10409
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect55, i32 0, i32 3, !dbg !10410
  store float %conv54, float* %ymax, align 4, !dbg !10411
  ret void, !dbg !10412
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_root(%struct.uiLayout* %litem) #0 !dbg !10413 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !10414, metadata !DIExpression()), !dbg !10415
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10416
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 1, !dbg !10418
  %1 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !10418
  %type = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %1, i32 0, i32 2, !dbg !10419
  %2 = load i32, i32* %type, align 8, !dbg !10419
  %cmp = icmp eq i32 %2, 1, !dbg !10420
  br i1 %cmp, label %if.then, label %if.else, !dbg !10421

if.then:                                          ; preds = %entry
  %3 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10422
  call void @ui_litem_layout_row(%struct.uiLayout* %3), !dbg !10423
  br label %if.end6, !dbg !10423

if.else:                                          ; preds = %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10424
  %root1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 1, !dbg !10426
  %5 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root1, align 8, !dbg !10426
  %type2 = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %5, i32 0, i32 2, !dbg !10427
  %6 = load i32, i32* %type2, align 8, !dbg !10427
  %cmp3 = icmp eq i32 %6, 4, !dbg !10428
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !10429

if.then4:                                         ; preds = %if.else
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10430
  call void @ui_litem_layout_root_radial(%struct.uiLayout* %7), !dbg !10431
  br label %if.end, !dbg !10431

if.else5:                                         ; preds = %if.else
  %8 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10432
  call void @ui_litem_layout_column(%struct.uiLayout* %8), !dbg !10433
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !10434
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_absolute(%struct.uiLayout* %litem) #0 !dbg !10435 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %scalex = alloca float, align 4
  %scaley = alloca float, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %newx = alloca i32, align 4
  %newy = alloca i32, align 4
  %itemx = alloca i32, align 4
  %itemy = alloca i32, align 4
  %itemh = alloca i32, align 4
  %itemw = alloca i32, align 4
  %minx = alloca i32, align 4
  %miny = alloca i32, align 4
  %totw = alloca i32, align 4
  %toth = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !10436, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !10438, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.declare(metadata float* %scalex, metadata !10440, metadata !DIExpression()), !dbg !10441
  store float 1.000000e+00, float* %scalex, align 4, !dbg !10441
  call void @llvm.dbg.declare(metadata float* %scaley, metadata !10442, metadata !DIExpression()), !dbg !10443
  store float 1.000000e+00, float* %scaley, align 4, !dbg !10443
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10446, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.declare(metadata i32* %newx, metadata !10448, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.declare(metadata i32* %newy, metadata !10450, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.declare(metadata i32* %itemx, metadata !10452, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.declare(metadata i32* %itemy, metadata !10454, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !10456, metadata !DIExpression()), !dbg !10457
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !10458, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.declare(metadata i32* %minx, metadata !10460, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.declare(metadata i32* %miny, metadata !10462, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.declare(metadata i32* %totw, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.declare(metadata i32* %toth, metadata !10466, metadata !DIExpression()), !dbg !10467
  store i32 1000000, i32* %minx, align 4, !dbg !10468
  store i32 1000000, i32* %miny, align 4, !dbg !10469
  store i32 0, i32* %totw, align 4, !dbg !10470
  store i32 0, i32* %toth, align 4, !dbg !10471
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10472
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 3, !dbg !10474
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !10475
  %1 = load i8*, i8** %first, align 8, !dbg !10475
  %2 = bitcast i8* %1 to %struct.uiItem*, !dbg !10472
  store %struct.uiItem* %2, %struct.uiItem** %item, align 8, !dbg !10476
  br label %for.cond, !dbg !10477

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10478
  %tobool = icmp ne %struct.uiItem* %3, null, !dbg !10480
  br i1 %tobool, label %for.body, label %for.end, !dbg !10480

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10481
  call void @ui_item_offset(%struct.uiItem* %4, i32* %itemx, i32* %itemy), !dbg !10483
  %5 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10484
  call void @ui_item_size(%struct.uiItem* %5, i32* %itemw, i32* %itemh), !dbg !10485
  %6 = load i32, i32* %minx, align 4, !dbg !10486
  %7 = load i32, i32* %itemx, align 4, !dbg !10487
  %call = call i32 @min_ii(i32 %6, i32 %7), !dbg !10488
  store i32 %call, i32* %minx, align 4, !dbg !10489
  %8 = load i32, i32* %miny, align 4, !dbg !10490
  %9 = load i32, i32* %itemy, align 4, !dbg !10491
  %call1 = call i32 @min_ii(i32 %8, i32 %9), !dbg !10492
  store i32 %call1, i32* %miny, align 4, !dbg !10493
  %10 = load i32, i32* %totw, align 4, !dbg !10494
  %11 = load i32, i32* %itemx, align 4, !dbg !10495
  %12 = load i32, i32* %itemw, align 4, !dbg !10496
  %add = add nsw i32 %11, %12, !dbg !10497
  %call2 = call i32 @max_ii(i32 %10, i32 %add), !dbg !10498
  store i32 %call2, i32* %totw, align 4, !dbg !10499
  %13 = load i32, i32* %toth, align 4, !dbg !10500
  %14 = load i32, i32* %itemy, align 4, !dbg !10501
  %15 = load i32, i32* %itemh, align 4, !dbg !10502
  %add3 = add nsw i32 %14, %15, !dbg !10503
  %call4 = call i32 @max_ii(i32 %13, i32 %add3), !dbg !10504
  store i32 %call4, i32* %toth, align 4, !dbg !10505
  br label %for.inc, !dbg !10506

for.inc:                                          ; preds = %for.body
  %16 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10507
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %16, i32 0, i32 0, !dbg !10508
  %17 = load i8*, i8** %next, align 8, !dbg !10508
  %18 = bitcast i8* %17 to %struct.uiItem*, !dbg !10507
  store %struct.uiItem* %18, %struct.uiItem** %item, align 8, !dbg !10509
  br label %for.cond, !dbg !10510, !llvm.loop !10511

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %minx, align 4, !dbg !10513
  %20 = load i32, i32* %totw, align 4, !dbg !10514
  %sub = sub nsw i32 %20, %19, !dbg !10514
  store i32 %sub, i32* %totw, align 4, !dbg !10514
  %21 = load i32, i32* %miny, align 4, !dbg !10515
  %22 = load i32, i32* %toth, align 4, !dbg !10516
  %sub5 = sub nsw i32 %22, %21, !dbg !10516
  store i32 %sub5, i32* %toth, align 4, !dbg !10516
  %23 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10517
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %23, i32 0, i32 6, !dbg !10519
  %24 = load i32, i32* %w, align 8, !dbg !10519
  %tobool6 = icmp ne i32 %24, 0, !dbg !10517
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !10520

land.lhs.true:                                    ; preds = %for.end
  %25 = load i32, i32* %totw, align 4, !dbg !10521
  %cmp = icmp sgt i32 %25, 0, !dbg !10522
  br i1 %cmp, label %if.then, label %if.end, !dbg !10523

if.then:                                          ; preds = %land.lhs.true
  %26 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10524
  %w7 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %26, i32 0, i32 6, !dbg !10525
  %27 = load i32, i32* %w7, align 8, !dbg !10525
  %conv = sitofp i32 %27 to float, !dbg !10526
  %28 = load i32, i32* %totw, align 4, !dbg !10527
  %conv8 = sitofp i32 %28 to float, !dbg !10528
  %div = fdiv float %conv, %conv8, !dbg !10529
  store float %div, float* %scalex, align 4, !dbg !10530
  br label %if.end, !dbg !10531

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.end
  %29 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10532
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 7, !dbg !10534
  %30 = load i32, i32* %h, align 4, !dbg !10534
  %tobool9 = icmp ne i32 %30, 0, !dbg !10532
  br i1 %tobool9, label %land.lhs.true10, label %if.end18, !dbg !10535

land.lhs.true10:                                  ; preds = %if.end
  %31 = load i32, i32* %toth, align 4, !dbg !10536
  %cmp11 = icmp sgt i32 %31, 0, !dbg !10537
  br i1 %cmp11, label %if.then13, label %if.end18, !dbg !10538

if.then13:                                        ; preds = %land.lhs.true10
  %32 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10539
  %h14 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %32, i32 0, i32 7, !dbg !10540
  %33 = load i32, i32* %h14, align 4, !dbg !10540
  %conv15 = sitofp i32 %33 to float, !dbg !10541
  %34 = load i32, i32* %toth, align 4, !dbg !10542
  %conv16 = sitofp i32 %34 to float, !dbg !10543
  %div17 = fdiv float %conv15, %conv16, !dbg !10544
  store float %div17, float* %scaley, align 4, !dbg !10545
  br label %if.end18, !dbg !10546

if.end18:                                         ; preds = %if.then13, %land.lhs.true10, %if.end
  %35 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10547
  %x19 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %35, i32 0, i32 4, !dbg !10548
  %36 = load i32, i32* %x19, align 8, !dbg !10548
  store i32 %36, i32* %x, align 4, !dbg !10549
  %37 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10550
  %y20 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %37, i32 0, i32 5, !dbg !10551
  %38 = load i32, i32* %y20, align 4, !dbg !10551
  %conv21 = sitofp i32 %38 to float, !dbg !10550
  %39 = load float, float* %scaley, align 4, !dbg !10552
  %40 = load i32, i32* %toth, align 4, !dbg !10553
  %conv22 = sitofp i32 %40 to float, !dbg !10553
  %mul = fmul float %39, %conv22, !dbg !10554
  %sub23 = fsub float %conv21, %mul, !dbg !10555
  %conv24 = fptosi float %sub23 to i32, !dbg !10550
  store i32 %conv24, i32* %y, align 4, !dbg !10556
  %41 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10557
  %items25 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %41, i32 0, i32 3, !dbg !10559
  %first26 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items25, i32 0, i32 0, !dbg !10560
  %42 = load i8*, i8** %first26, align 8, !dbg !10560
  %43 = bitcast i8* %42 to %struct.uiItem*, !dbg !10557
  store %struct.uiItem* %43, %struct.uiItem** %item, align 8, !dbg !10561
  br label %for.cond27, !dbg !10562

for.cond27:                                       ; preds = %for.inc66, %if.end18
  %44 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10563
  %tobool28 = icmp ne %struct.uiItem* %44, null, !dbg !10565
  br i1 %tobool28, label %for.body29, label %for.end68, !dbg !10565

for.body29:                                       ; preds = %for.cond27
  %45 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10566
  call void @ui_item_offset(%struct.uiItem* %45, i32* %itemx, i32* %itemy), !dbg !10568
  %46 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10569
  call void @ui_item_size(%struct.uiItem* %46, i32* %itemw, i32* %itemh), !dbg !10570
  %47 = load float, float* %scalex, align 4, !dbg !10571
  %cmp30 = fcmp une float %47, 1.000000e+00, !dbg !10573
  br i1 %cmp30, label %if.then32, label %if.end45, !dbg !10574

if.then32:                                        ; preds = %for.body29
  %48 = load i32, i32* %itemx, align 4, !dbg !10575
  %49 = load i32, i32* %minx, align 4, !dbg !10577
  %sub33 = sub nsw i32 %48, %49, !dbg !10578
  %conv34 = sitofp i32 %sub33 to float, !dbg !10579
  %50 = load float, float* %scalex, align 4, !dbg !10580
  %mul35 = fmul float %conv34, %50, !dbg !10581
  %conv36 = fptosi float %mul35 to i32, !dbg !10579
  store i32 %conv36, i32* %newx, align 4, !dbg !10582
  %51 = load i32, i32* %itemx, align 4, !dbg !10583
  %52 = load i32, i32* %minx, align 4, !dbg !10584
  %sub37 = sub nsw i32 %51, %52, !dbg !10585
  %53 = load i32, i32* %itemw, align 4, !dbg !10586
  %add38 = add nsw i32 %sub37, %53, !dbg !10587
  %conv39 = sitofp i32 %add38 to float, !dbg !10588
  %54 = load float, float* %scalex, align 4, !dbg !10589
  %mul40 = fmul float %conv39, %54, !dbg !10590
  %55 = load i32, i32* %newx, align 4, !dbg !10591
  %conv41 = sitofp i32 %55 to float, !dbg !10591
  %sub42 = fsub float %mul40, %conv41, !dbg !10592
  %conv43 = fptosi float %sub42 to i32, !dbg !10588
  store i32 %conv43, i32* %itemw, align 4, !dbg !10593
  %56 = load i32, i32* %minx, align 4, !dbg !10594
  %57 = load i32, i32* %newx, align 4, !dbg !10595
  %add44 = add nsw i32 %56, %57, !dbg !10596
  store i32 %add44, i32* %itemx, align 4, !dbg !10597
  br label %if.end45, !dbg !10598

if.end45:                                         ; preds = %if.then32, %for.body29
  %58 = load float, float* %scaley, align 4, !dbg !10599
  %cmp46 = fcmp une float %58, 1.000000e+00, !dbg !10601
  br i1 %cmp46, label %if.then48, label %if.end61, !dbg !10602

if.then48:                                        ; preds = %if.end45
  %59 = load i32, i32* %itemy, align 4, !dbg !10603
  %60 = load i32, i32* %miny, align 4, !dbg !10605
  %sub49 = sub nsw i32 %59, %60, !dbg !10606
  %conv50 = sitofp i32 %sub49 to float, !dbg !10607
  %61 = load float, float* %scaley, align 4, !dbg !10608
  %mul51 = fmul float %conv50, %61, !dbg !10609
  %conv52 = fptosi float %mul51 to i32, !dbg !10607
  store i32 %conv52, i32* %newy, align 4, !dbg !10610
  %62 = load i32, i32* %itemy, align 4, !dbg !10611
  %63 = load i32, i32* %miny, align 4, !dbg !10612
  %sub53 = sub nsw i32 %62, %63, !dbg !10613
  %64 = load i32, i32* %itemh, align 4, !dbg !10614
  %add54 = add nsw i32 %sub53, %64, !dbg !10615
  %conv55 = sitofp i32 %add54 to float, !dbg !10616
  %65 = load float, float* %scaley, align 4, !dbg !10617
  %mul56 = fmul float %conv55, %65, !dbg !10618
  %66 = load i32, i32* %newy, align 4, !dbg !10619
  %conv57 = sitofp i32 %66 to float, !dbg !10619
  %sub58 = fsub float %mul56, %conv57, !dbg !10620
  %conv59 = fptosi float %sub58 to i32, !dbg !10616
  store i32 %conv59, i32* %itemh, align 4, !dbg !10621
  %67 = load i32, i32* %miny, align 4, !dbg !10622
  %68 = load i32, i32* %newy, align 4, !dbg !10623
  %add60 = add nsw i32 %67, %68, !dbg !10624
  store i32 %add60, i32* %itemy, align 4, !dbg !10625
  br label %if.end61, !dbg !10626

if.end61:                                         ; preds = %if.then48, %if.end45
  %69 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10627
  %70 = load i32, i32* %x, align 4, !dbg !10628
  %71 = load i32, i32* %itemx, align 4, !dbg !10629
  %add62 = add nsw i32 %70, %71, !dbg !10630
  %72 = load i32, i32* %minx, align 4, !dbg !10631
  %sub63 = sub nsw i32 %add62, %72, !dbg !10632
  %73 = load i32, i32* %y, align 4, !dbg !10633
  %74 = load i32, i32* %itemy, align 4, !dbg !10634
  %add64 = add nsw i32 %73, %74, !dbg !10635
  %75 = load i32, i32* %miny, align 4, !dbg !10636
  %sub65 = sub nsw i32 %add64, %75, !dbg !10637
  %76 = load i32, i32* %itemw, align 4, !dbg !10638
  %77 = load i32, i32* %itemh, align 4, !dbg !10639
  call void @ui_item_position(%struct.uiItem* %69, i32 %sub63, i32 %sub65, i32 %76, i32 %77), !dbg !10640
  br label %for.inc66, !dbg !10641

for.inc66:                                        ; preds = %if.end61
  %78 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10642
  %next67 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %78, i32 0, i32 0, !dbg !10643
  %79 = load i8*, i8** %next67, align 8, !dbg !10643
  %80 = bitcast i8* %79 to %struct.uiItem*, !dbg !10642
  store %struct.uiItem* %80, %struct.uiItem** %item, align 8, !dbg !10644
  br label %for.cond27, !dbg !10645, !llvm.loop !10646

for.end68:                                        ; preds = %for.cond27
  %81 = load float, float* %scalex, align 4, !dbg !10648
  %82 = load i32, i32* %totw, align 4, !dbg !10649
  %conv69 = sitofp i32 %82 to float, !dbg !10649
  %mul70 = fmul float %81, %conv69, !dbg !10650
  %conv71 = fptosi float %mul70 to i32, !dbg !10648
  %83 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10651
  %w72 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %83, i32 0, i32 6, !dbg !10652
  store i32 %conv71, i32* %w72, align 8, !dbg !10653
  %84 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10654
  %y73 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %84, i32 0, i32 5, !dbg !10655
  %85 = load i32, i32* %y73, align 4, !dbg !10655
  %86 = load i32, i32* %y, align 4, !dbg !10656
  %sub74 = sub nsw i32 %85, %86, !dbg !10657
  %87 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10658
  %h75 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %87, i32 0, i32 7, !dbg !10659
  store i32 %sub74, i32* %h75, align 4, !dbg !10660
  %88 = load i32, i32* %x, align 4, !dbg !10661
  %89 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10662
  %w76 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %89, i32 0, i32 6, !dbg !10663
  %90 = load i32, i32* %w76, align 8, !dbg !10663
  %add77 = add nsw i32 %88, %90, !dbg !10664
  %91 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10665
  %x78 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %91, i32 0, i32 4, !dbg !10666
  store i32 %add77, i32* %x78, align 8, !dbg !10667
  %92 = load i32, i32* %y, align 4, !dbg !10668
  %93 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10669
  %y79 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %93, i32 0, i32 5, !dbg !10670
  store i32 %92, i32* %y79, align 4, !dbg !10671
  ret void, !dbg !10672
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_split(%struct.uiLayout* %litem) #0 !dbg !10673 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %split = alloca %struct.uiLayoutItemSplit*, align 8
  %item = alloca %struct.uiItem*, align 8
  %percentage = alloca float, align 4
  %tot = alloca i32, align 4
  %itemh = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %colw = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !10674, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.declare(metadata %struct.uiLayoutItemSplit** %split, metadata !10676, metadata !DIExpression()), !dbg !10677
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10678
  %1 = bitcast %struct.uiLayout* %0 to %struct.uiLayoutItemSplit*, !dbg !10679
  store %struct.uiLayoutItemSplit* %1, %struct.uiLayoutItemSplit** %split, align 8, !dbg !10677
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !10680, metadata !DIExpression()), !dbg !10681
  call void @llvm.dbg.declare(metadata float* %percentage, metadata !10682, metadata !DIExpression()), !dbg !10683
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !10684, metadata !DIExpression()), !dbg !10685
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10686
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 3, !dbg !10687
  %call = call i32 @BLI_countlist(%struct.ListBase* %items), !dbg !10688
  store i32 %call, i32* %tot, align 4, !dbg !10685
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !10689, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10691, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10693, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.declare(metadata i32* %w, metadata !10695, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.declare(metadata i32* %colw, metadata !10697, metadata !DIExpression()), !dbg !10698
  store i32 0, i32* %colw, align 4, !dbg !10698
  %3 = load i32, i32* %tot, align 4, !dbg !10699
  %cmp = icmp eq i32 %3, 0, !dbg !10701
  br i1 %cmp, label %if.then, label %if.end, !dbg !10702

if.then:                                          ; preds = %entry
  br label %return, !dbg !10703

if.end:                                           ; preds = %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10704
  %x1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 4, !dbg !10705
  %5 = load i32, i32* %x1, align 8, !dbg !10705
  store i32 %5, i32* %x, align 4, !dbg !10706
  %6 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10707
  %y2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %6, i32 0, i32 5, !dbg !10708
  %7 = load i32, i32* %y2, align 4, !dbg !10708
  store i32 %7, i32* %y, align 4, !dbg !10709
  %8 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !10710
  %percentage3 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %8, i32 0, i32 1, !dbg !10711
  %9 = load float, float* %percentage3, align 8, !dbg !10711
  %cmp4 = fcmp oeq float %9, 0.000000e+00, !dbg !10712
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !10713

cond.true:                                        ; preds = %if.end
  %10 = load i32, i32* %tot, align 4, !dbg !10714
  %conv = sitofp i32 %10 to float, !dbg !10715
  %div = fdiv float 1.000000e+00, %conv, !dbg !10716
  br label %cond.end, !dbg !10713

cond.false:                                       ; preds = %if.end
  %11 = load %struct.uiLayoutItemSplit*, %struct.uiLayoutItemSplit** %split, align 8, !dbg !10717
  %percentage5 = getelementptr inbounds %struct.uiLayoutItemSplit, %struct.uiLayoutItemSplit* %11, i32 0, i32 1, !dbg !10718
  %12 = load float, float* %percentage5, align 8, !dbg !10718
  br label %cond.end, !dbg !10713

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ %12, %cond.false ], !dbg !10713
  store float %cond, float* %percentage, align 4, !dbg !10719
  %13 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10720
  %w6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 6, !dbg !10721
  %14 = load i32, i32* %w6, align 8, !dbg !10721
  %15 = load i32, i32* %tot, align 4, !dbg !10722
  %sub = sub nsw i32 %15, 1, !dbg !10723
  %16 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10724
  %space = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 9, !dbg !10725
  %17 = load i16, i16* %space, align 8, !dbg !10725
  %conv7 = sext i16 %17 to i32, !dbg !10724
  %mul = mul nsw i32 %sub, %conv7, !dbg !10726
  %sub8 = sub nsw i32 %14, %mul, !dbg !10727
  store i32 %sub8, i32* %w, align 4, !dbg !10728
  %18 = load i32, i32* %w, align 4, !dbg !10729
  %conv9 = sitofp i32 %18 to float, !dbg !10729
  %19 = load float, float* %percentage, align 4, !dbg !10730
  %mul10 = fmul float %conv9, %19, !dbg !10731
  %conv11 = fptosi float %mul10 to i32, !dbg !10729
  store i32 %conv11, i32* %colw, align 4, !dbg !10732
  %20 = load i32, i32* %colw, align 4, !dbg !10733
  %cmp12 = icmp sgt i32 %20, 0, !dbg !10733
  br i1 %cmp12, label %cond.true14, label %cond.false15, !dbg !10733

cond.true14:                                      ; preds = %cond.end
  %21 = load i32, i32* %colw, align 4, !dbg !10733
  br label %cond.end16, !dbg !10733

cond.false15:                                     ; preds = %cond.end
  br label %cond.end16, !dbg !10733

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond17 = phi i32 [ %21, %cond.true14 ], [ 0, %cond.false15 ], !dbg !10733
  store i32 %cond17, i32* %colw, align 4, !dbg !10734
  %22 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10735
  %items18 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %22, i32 0, i32 3, !dbg !10737
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items18, i32 0, i32 0, !dbg !10738
  %23 = load i8*, i8** %first, align 8, !dbg !10738
  %24 = bitcast i8* %23 to %struct.uiItem*, !dbg !10735
  store %struct.uiItem* %24, %struct.uiItem** %item, align 8, !dbg !10739
  br label %for.cond, !dbg !10740

for.cond:                                         ; preds = %for.inc, %cond.end16
  %25 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10741
  %tobool = icmp ne %struct.uiItem* %25, null, !dbg !10743
  br i1 %tobool, label %for.body, label %for.end, !dbg !10743

for.body:                                         ; preds = %for.cond
  %26 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10744
  call void @ui_item_size(%struct.uiItem* %26, i32* null, i32* %itemh), !dbg !10746
  %27 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10747
  %28 = load i32, i32* %x, align 4, !dbg !10748
  %29 = load i32, i32* %y, align 4, !dbg !10749
  %30 = load i32, i32* %itemh, align 4, !dbg !10750
  %sub19 = sub nsw i32 %29, %30, !dbg !10751
  %31 = load i32, i32* %colw, align 4, !dbg !10752
  %32 = load i32, i32* %itemh, align 4, !dbg !10753
  call void @ui_item_position(%struct.uiItem* %27, i32 %28, i32 %sub19, i32 %31, i32 %32), !dbg !10754
  %33 = load i32, i32* %colw, align 4, !dbg !10755
  %34 = load i32, i32* %x, align 4, !dbg !10756
  %add = add nsw i32 %34, %33, !dbg !10756
  store i32 %add, i32* %x, align 4, !dbg !10756
  %35 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10757
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %35, i32 0, i32 0, !dbg !10759
  %36 = load i8*, i8** %next, align 8, !dbg !10759
  %tobool20 = icmp ne i8* %36, null, !dbg !10757
  br i1 %tobool20, label %if.then21, label %if.end37, !dbg !10760

if.then21:                                        ; preds = %for.body
  %37 = load i32, i32* %w, align 4, !dbg !10761
  %38 = load i32, i32* %w, align 4, !dbg !10763
  %conv22 = sitofp i32 %38 to float, !dbg !10763
  %39 = load float, float* %percentage, align 4, !dbg !10764
  %mul23 = fmul float %conv22, %39, !dbg !10765
  %conv24 = fptosi float %mul23 to i32, !dbg !10766
  %sub25 = sub nsw i32 %37, %conv24, !dbg !10767
  %40 = load i32, i32* %tot, align 4, !dbg !10768
  %sub26 = sub nsw i32 %40, 1, !dbg !10769
  %div27 = sdiv i32 %sub25, %sub26, !dbg !10770
  store i32 %div27, i32* %colw, align 4, !dbg !10771
  %41 = load i32, i32* %colw, align 4, !dbg !10772
  %cmp28 = icmp sgt i32 %41, 0, !dbg !10772
  br i1 %cmp28, label %cond.true30, label %cond.false31, !dbg !10772

cond.true30:                                      ; preds = %if.then21
  %42 = load i32, i32* %colw, align 4, !dbg !10772
  br label %cond.end32, !dbg !10772

cond.false31:                                     ; preds = %if.then21
  br label %cond.end32, !dbg !10772

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %42, %cond.true30 ], [ 0, %cond.false31 ], !dbg !10772
  store i32 %cond33, i32* %colw, align 4, !dbg !10773
  %43 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10774
  %space34 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %43, i32 0, i32 9, !dbg !10775
  %44 = load i16, i16* %space34, align 8, !dbg !10775
  %conv35 = sext i16 %44 to i32, !dbg !10774
  %45 = load i32, i32* %x, align 4, !dbg !10776
  %add36 = add nsw i32 %45, %conv35, !dbg !10776
  store i32 %add36, i32* %x, align 4, !dbg !10776
  br label %if.end37, !dbg !10777

if.end37:                                         ; preds = %cond.end32, %for.body
  br label %for.inc, !dbg !10778

for.inc:                                          ; preds = %if.end37
  %46 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10779
  %next38 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %46, i32 0, i32 0, !dbg !10780
  %47 = load i8*, i8** %next38, align 8, !dbg !10780
  %48 = bitcast i8* %47 to %struct.uiItem*, !dbg !10779
  store %struct.uiItem* %48, %struct.uiItem** %item, align 8, !dbg !10781
  br label %for.cond, !dbg !10782, !llvm.loop !10783

for.end:                                          ; preds = %for.cond
  %49 = load i32, i32* %x, align 4, !dbg !10785
  %50 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10786
  %x39 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %50, i32 0, i32 4, !dbg !10787
  %51 = load i32, i32* %x39, align 8, !dbg !10787
  %sub40 = sub nsw i32 %49, %51, !dbg !10788
  %52 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10789
  %w41 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %52, i32 0, i32 6, !dbg !10790
  store i32 %sub40, i32* %w41, align 8, !dbg !10791
  %53 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10792
  %y42 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %53, i32 0, i32 5, !dbg !10793
  %54 = load i32, i32* %y42, align 4, !dbg !10793
  %55 = load i32, i32* %y, align 4, !dbg !10794
  %sub43 = sub nsw i32 %54, %55, !dbg !10795
  %56 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10796
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %56, i32 0, i32 7, !dbg !10797
  store i32 %sub43, i32* %h, align 4, !dbg !10798
  %57 = load i32, i32* %x, align 4, !dbg !10799
  %58 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10800
  %x44 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %58, i32 0, i32 4, !dbg !10801
  store i32 %57, i32* %x44, align 8, !dbg !10802
  %59 = load i32, i32* %y, align 4, !dbg !10803
  %60 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10804
  %y45 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %60, i32 0, i32 5, !dbg !10805
  store i32 %59, i32* %y45, align 4, !dbg !10806
  br label %return, !dbg !10807

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !10807
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_overlap(%struct.uiLayout* %litem) #0 !dbg !10808 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %itemw = alloca i32, align 4
  %itemh = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !10809, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !10815, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10817, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10819, metadata !DIExpression()), !dbg !10820
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10821
  %x1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 4, !dbg !10822
  %1 = load i32, i32* %x1, align 8, !dbg !10822
  store i32 %1, i32* %x, align 4, !dbg !10823
  %2 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10824
  %y2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %2, i32 0, i32 5, !dbg !10825
  %3 = load i32, i32* %y2, align 4, !dbg !10825
  store i32 %3, i32* %y, align 4, !dbg !10826
  %4 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10827
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %4, i32 0, i32 3, !dbg !10829
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !10830
  %5 = load i8*, i8** %first, align 8, !dbg !10830
  %6 = bitcast i8* %5 to %struct.uiItem*, !dbg !10827
  store %struct.uiItem* %6, %struct.uiItem** %item, align 8, !dbg !10831
  br label %for.cond, !dbg !10832

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10833
  %tobool = icmp ne %struct.uiItem* %7, null, !dbg !10835
  br i1 %tobool, label %for.body, label %for.end, !dbg !10835

for.body:                                         ; preds = %for.cond
  %8 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10836
  call void @ui_item_size(%struct.uiItem* %8, i32* %itemw, i32* %itemh), !dbg !10838
  %9 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10839
  %10 = load i32, i32* %x, align 4, !dbg !10840
  %11 = load i32, i32* %y, align 4, !dbg !10841
  %12 = load i32, i32* %itemh, align 4, !dbg !10842
  %sub = sub nsw i32 %11, %12, !dbg !10843
  %13 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10844
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %13, i32 0, i32 6, !dbg !10845
  %14 = load i32, i32* %w, align 8, !dbg !10845
  %15 = load i32, i32* %itemh, align 4, !dbg !10846
  call void @ui_item_position(%struct.uiItem* %9, i32 %10, i32 %sub, i32 %14, i32 %15), !dbg !10847
  %16 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10848
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %16, i32 0, i32 7, !dbg !10848
  %17 = load i32, i32* %h, align 4, !dbg !10848
  %18 = load i32, i32* %itemh, align 4, !dbg !10848
  %cmp = icmp sgt i32 %17, %18, !dbg !10848
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10848

cond.true:                                        ; preds = %for.body
  %19 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10848
  %h3 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %19, i32 0, i32 7, !dbg !10848
  %20 = load i32, i32* %h3, align 4, !dbg !10848
  br label %cond.end, !dbg !10848

cond.false:                                       ; preds = %for.body
  %21 = load i32, i32* %itemh, align 4, !dbg !10848
  br label %cond.end, !dbg !10848

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %20, %cond.true ], [ %21, %cond.false ], !dbg !10848
  %22 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10849
  %h4 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %22, i32 0, i32 7, !dbg !10850
  store i32 %cond, i32* %h4, align 4, !dbg !10851
  br label %for.inc, !dbg !10852

for.inc:                                          ; preds = %cond.end
  %23 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10853
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %23, i32 0, i32 0, !dbg !10854
  %24 = load i8*, i8** %next, align 8, !dbg !10854
  %25 = bitcast i8* %24 to %struct.uiItem*, !dbg !10853
  store %struct.uiItem* %25, %struct.uiItem** %item, align 8, !dbg !10855
  br label %for.cond, !dbg !10856, !llvm.loop !10857

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %x, align 4, !dbg !10859
  %27 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10860
  %x5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %27, i32 0, i32 4, !dbg !10861
  store i32 %26, i32* %x5, align 8, !dbg !10862
  %28 = load i32, i32* %y, align 4, !dbg !10863
  %29 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10864
  %h6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %29, i32 0, i32 7, !dbg !10865
  %30 = load i32, i32* %h6, align 4, !dbg !10865
  %sub7 = sub nsw i32 %28, %30, !dbg !10866
  %31 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10867
  %y8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %31, i32 0, i32 5, !dbg !10868
  store i32 %sub7, i32* %y8, align 4, !dbg !10869
  ret void, !dbg !10870
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_radial(%struct.uiLayout* %litem) #0 !dbg !10871 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %itemh = alloca i32, align 4
  %itemw = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %itemnum = alloca i32, align 4
  %totitems = alloca i32, align 4
  %minx = alloca i32, align 4
  %miny = alloca i32, align 4
  %maxx = alloca i32, align 4
  %maxy = alloca i32, align 4
  %pie_radius = alloca i32, align 4
  %dir = alloca i32, align 4
  %vec = alloca [2 x float], align 4
  %factor = alloca [2 x float], align 4
  %bitem = alloca %struct.uiButtonItem*, align 8
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !10872, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !10874, metadata !DIExpression()), !dbg !10875
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !10876, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !10878, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10880, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10882, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.declare(metadata i32* %itemnum, metadata !10884, metadata !DIExpression()), !dbg !10885
  store i32 0, i32* %itemnum, align 4, !dbg !10885
  call void @llvm.dbg.declare(metadata i32* %totitems, metadata !10886, metadata !DIExpression()), !dbg !10887
  store i32 0, i32* %totitems, align 4, !dbg !10887
  call void @llvm.dbg.declare(metadata i32* %minx, metadata !10888, metadata !DIExpression()), !dbg !10889
  call void @llvm.dbg.declare(metadata i32* %miny, metadata !10890, metadata !DIExpression()), !dbg !10891
  call void @llvm.dbg.declare(metadata i32* %maxx, metadata !10892, metadata !DIExpression()), !dbg !10893
  call void @llvm.dbg.declare(metadata i32* %maxy, metadata !10894, metadata !DIExpression()), !dbg !10895
  call void @llvm.dbg.declare(metadata i32* %pie_radius, metadata !10896, metadata !DIExpression()), !dbg !10897
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 112), align 4, !dbg !10898
  %conv = sext i16 %0 to i32, !dbg !10899
  %conv1 = sitofp i32 %conv to float, !dbg !10899
  %1 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !10900
  %2 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !10900
  %conv2 = sitofp i32 %2 to float, !dbg !10900
  %mul = fmul float %1, %conv2, !dbg !10900
  %div = fdiv float %mul, 7.200000e+01, !dbg !10900
  %mul3 = fmul float %conv1, %div, !dbg !10901
  %conv4 = fptosi float %mul3 to i32, !dbg !10899
  store i32 %conv4, i32* %pie_radius, align 4, !dbg !10897
  %3 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10902
  %x5 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %3, i32 0, i32 4, !dbg !10903
  %4 = load i32, i32* %x5, align 8, !dbg !10903
  store i32 %4, i32* %x, align 4, !dbg !10904
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10905
  %y6 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 5, !dbg !10906
  %6 = load i32, i32* %y6, align 4, !dbg !10906
  store i32 %6, i32* %y, align 4, !dbg !10907
  %7 = load i32, i32* %x, align 4, !dbg !10908
  store i32 %7, i32* %minx, align 4, !dbg !10909
  %8 = load i32, i32* %y, align 4, !dbg !10910
  store i32 %8, i32* %miny, align 4, !dbg !10911
  %9 = load i32, i32* %x, align 4, !dbg !10912
  store i32 %9, i32* %maxx, align 4, !dbg !10913
  %10 = load i32, i32* %y, align 4, !dbg !10914
  store i32 %10, i32* %maxy, align 4, !dbg !10915
  %11 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10916
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %11, i32 0, i32 3, !dbg !10918
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !10919
  %12 = load i8*, i8** %first, align 8, !dbg !10919
  %13 = bitcast i8* %12 to %struct.uiItem*, !dbg !10916
  store %struct.uiItem* %13, %struct.uiItem** %item, align 8, !dbg !10920
  br label %for.cond, !dbg !10921

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10922
  %tobool = icmp ne %struct.uiItem* %14, null, !dbg !10924
  br i1 %tobool, label %for.body, label %for.end, !dbg !10924

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %totitems, align 4, !dbg !10925
  %inc = add nsw i32 %15, 1, !dbg !10925
  store i32 %inc, i32* %totitems, align 4, !dbg !10925
  br label %for.inc, !dbg !10926

for.inc:                                          ; preds = %for.body
  %16 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10927
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %16, i32 0, i32 0, !dbg !10928
  %17 = load i8*, i8** %next, align 8, !dbg !10928
  %18 = bitcast i8* %17 to %struct.uiItem*, !dbg !10927
  store %struct.uiItem* %18, %struct.uiItem** %item, align 8, !dbg !10929
  br label %for.cond, !dbg !10930, !llvm.loop !10931

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %totitems, align 4, !dbg !10933
  %cmp = icmp slt i32 %19, 5, !dbg !10935
  br i1 %cmp, label %if.then, label %if.end, !dbg !10936

if.then:                                          ; preds = %for.end
  %20 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10937
  %root = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %20, i32 0, i32 1, !dbg !10938
  %21 = load %struct.uiLayoutRoot*, %struct.uiLayoutRoot** %root, align 8, !dbg !10938
  %block = getelementptr inbounds %struct.uiLayoutRoot, %struct.uiLayoutRoot* %21, i32 0, i32 10, !dbg !10939
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !10939
  %pie_data = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %22, i32 0, i32 53, !dbg !10940
  %flags = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data, i32 0, i32 5, !dbg !10941
  %23 = load i32, i32* %flags, align 8, !dbg !10942
  %or = or i32 %23, 1, !dbg !10942
  store i32 %or, i32* %flags, align 8, !dbg !10942
  br label %if.end, !dbg !10937

if.end:                                           ; preds = %if.then, %for.end
  %24 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !10943
  %items8 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %24, i32 0, i32 3, !dbg !10945
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items8, i32 0, i32 0, !dbg !10946
  %25 = load i8*, i8** %first9, align 8, !dbg !10946
  %26 = bitcast i8* %25 to %struct.uiItem*, !dbg !10943
  store %struct.uiItem* %26, %struct.uiItem** %item, align 8, !dbg !10947
  br label %for.cond10, !dbg !10948

for.cond10:                                       ; preds = %for.inc114, %if.end
  %27 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10949
  %tobool11 = icmp ne %struct.uiItem* %27, null, !dbg !10951
  br i1 %tobool11, label %for.body12, label %for.end116, !dbg !10951

for.body12:                                       ; preds = %for.cond10
  %28 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10952
  %call = call zeroext i8 @ui_item_is_radial_displayable(%struct.uiItem* %28), !dbg !10955
  %tobool13 = icmp ne i8 %call, 0, !dbg !10955
  br i1 %tobool13, label %if.then14, label %if.end113, !dbg !10956

if.then14:                                        ; preds = %for.body12
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !10957, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.declare(metadata [2 x float]* %vec, metadata !10961, metadata !DIExpression()), !dbg !10962
  call void @llvm.dbg.declare(metadata [2 x float]* %factor, metadata !10963, metadata !DIExpression()), !dbg !10964
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !10965
  %29 = load i32, i32* %itemnum, align 4, !dbg !10966
  %conv15 = trunc i32 %29 to i16, !dbg !10966
  %call16 = call i32 @ui_get_radialbut_vec(float* %arraydecay, i16 signext %conv15), !dbg !10967
  store i32 %call16, i32* %dir, align 4, !dbg !10968
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !10969
  %30 = load float, float* %arrayidx, align 4, !dbg !10969
  %cmp17 = fcmp ogt float %30, 0x3F847AE140000000, !dbg !10970
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !10971

cond.true:                                        ; preds = %if.then14
  br label %cond.end, !dbg !10971

cond.false:                                       ; preds = %if.then14
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !10972
  %31 = load float, float* %arrayidx19, align 4, !dbg !10972
  %cmp20 = fcmp olt float %31, 0xBF847AE140000000, !dbg !10973
  %32 = zext i1 %cmp20 to i64, !dbg !10974
  %cond = select i1 %cmp20, float -1.000000e+00, float -5.000000e-01, !dbg !10974
  br label %cond.end, !dbg !10971

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond22 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.false ], !dbg !10971
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %factor, i64 0, i64 0, !dbg !10975
  store float %cond22, float* %arrayidx23, align 4, !dbg !10976
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !10977
  %33 = load float, float* %arrayidx24, align 4, !dbg !10977
  %cmp25 = fcmp ogt float %33, 0x3FEFAE1480000000, !dbg !10978
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !10979

cond.true27:                                      ; preds = %cond.end
  br label %cond.end33, !dbg !10979

cond.false28:                                     ; preds = %cond.end
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !10980
  %34 = load float, float* %arrayidx29, align 4, !dbg !10980
  %cmp30 = fcmp olt float %34, 0xBFEFAE1480000000, !dbg !10981
  %35 = zext i1 %cmp30 to i64, !dbg !10982
  %cond32 = select i1 %cmp30, float -1.000000e+00, float -5.000000e-01, !dbg !10982
  br label %cond.end33, !dbg !10979

cond.end33:                                       ; preds = %cond.false28, %cond.true27
  %cond34 = phi float [ 0.000000e+00, %cond.true27 ], [ %cond32, %cond.false28 ], !dbg !10979
  %arrayidx35 = getelementptr inbounds [2 x float], [2 x float]* %factor, i64 0, i64 1, !dbg !10983
  store float %cond34, float* %arrayidx35, align 4, !dbg !10984
  %36 = load i32, i32* %itemnum, align 4, !dbg !10985
  %inc36 = add nsw i32 %36, 1, !dbg !10985
  store i32 %inc36, i32* %itemnum, align 4, !dbg !10985
  %37 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10986
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %37, i32 0, i32 2, !dbg !10988
  %38 = load i32, i32* %type, align 8, !dbg !10988
  %cmp37 = icmp eq i32 %38, 0, !dbg !10989
  br i1 %cmp37, label %if.then39, label %if.end53, !dbg !10990

if.then39:                                        ; preds = %cond.end33
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem, metadata !10991, metadata !DIExpression()), !dbg !10993
  %39 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !10994
  %40 = bitcast %struct.uiItem* %39 to %struct.uiButtonItem*, !dbg !10995
  store %struct.uiButtonItem* %40, %struct.uiButtonItem** %bitem, align 8, !dbg !10993
  %41 = load i32, i32* %dir, align 4, !dbg !10996
  %conv40 = trunc i32 %41 to i8, !dbg !10996
  %42 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !10997
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %42, i32 0, i32 1, !dbg !10998
  %43 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10998
  %pie_dir = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 47, !dbg !10999
  store i8 %conv40, i8* %pie_dir, align 2, !dbg !11000
  %44 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !11001
  %but41 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %44, i32 0, i32 1, !dbg !11002
  %45 = load %struct.uiBut*, %struct.uiBut** %but41, align 8, !dbg !11002
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %45, i32 0, i32 18, !dbg !11003
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 3, !dbg !11004
  %46 = load float, float* %ymax, align 4, !dbg !11005
  %mul42 = fmul float %46, 1.500000e+00, !dbg !11005
  store float %mul42, float* %ymax, align 4, !dbg !11005
  %47 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11006
  %conv43 = sext i16 %47 to i32, !dbg !11006
  %conv44 = sitofp i32 %conv43 to float, !dbg !11006
  %mul45 = fmul float 1.500000e+00, %conv44, !dbg !11007
  %48 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !11008
  %but46 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %48, i32 0, i32 1, !dbg !11009
  %49 = load %struct.uiBut*, %struct.uiBut** %but46, align 8, !dbg !11009
  %rect47 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %49, i32 0, i32 18, !dbg !11010
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect47, i32 0, i32 1, !dbg !11011
  %50 = load float, float* %xmax, align 4, !dbg !11012
  %add = fadd float %50, %mul45, !dbg !11012
  store float %add, float* %xmax, align 4, !dbg !11012
  %51 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !11013
  %call48 = call zeroext i8 @ui_item_is_radial_drawable(%struct.uiButtonItem* %51), !dbg !11015
  %tobool49 = icmp ne i8 %call48, 0, !dbg !11015
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !11016

if.then50:                                        ; preds = %if.then39
  %52 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem, align 8, !dbg !11017
  %but51 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %52, i32 0, i32 1, !dbg !11018
  %53 = load %struct.uiBut*, %struct.uiBut** %but51, align 8, !dbg !11018
  %dt = getelementptr inbounds %struct.uiBut, %struct.uiBut* %53, i32 0, i32 46, !dbg !11019
  store i8 4, i8* %dt, align 1, !dbg !11020
  br label %if.end52, !dbg !11017

if.end52:                                         ; preds = %if.then50, %if.then39
  br label %if.end53, !dbg !11021

if.end53:                                         ; preds = %if.end52, %cond.end33
  %54 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11022
  call void @ui_item_size(%struct.uiItem* %54, i32* %itemw, i32* %itemh), !dbg !11023
  %55 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11024
  %56 = load i32, i32* %x, align 4, !dbg !11025
  %conv54 = sitofp i32 %56 to float, !dbg !11025
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !11026
  %57 = load float, float* %arrayidx55, align 4, !dbg !11026
  %58 = load i32, i32* %pie_radius, align 4, !dbg !11027
  %conv56 = sitofp i32 %58 to float, !dbg !11027
  %mul57 = fmul float %57, %conv56, !dbg !11028
  %add58 = fadd float %conv54, %mul57, !dbg !11029
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %factor, i64 0, i64 0, !dbg !11030
  %59 = load float, float* %arrayidx59, align 4, !dbg !11030
  %60 = load i32, i32* %itemw, align 4, !dbg !11031
  %conv60 = sitofp i32 %60 to float, !dbg !11031
  %mul61 = fmul float %59, %conv60, !dbg !11032
  %add62 = fadd float %add58, %mul61, !dbg !11033
  %conv63 = fptosi float %add62 to i32, !dbg !11025
  %61 = load i32, i32* %y, align 4, !dbg !11034
  %conv64 = sitofp i32 %61 to float, !dbg !11034
  %arrayidx65 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !11035
  %62 = load float, float* %arrayidx65, align 4, !dbg !11035
  %63 = load i32, i32* %pie_radius, align 4, !dbg !11036
  %conv66 = sitofp i32 %63 to float, !dbg !11036
  %mul67 = fmul float %62, %conv66, !dbg !11037
  %add68 = fadd float %conv64, %mul67, !dbg !11038
  %arrayidx69 = getelementptr inbounds [2 x float], [2 x float]* %factor, i64 0, i64 1, !dbg !11039
  %64 = load float, float* %arrayidx69, align 4, !dbg !11039
  %65 = load i32, i32* %itemh, align 4, !dbg !11040
  %conv70 = sitofp i32 %65 to float, !dbg !11040
  %mul71 = fmul float %64, %conv70, !dbg !11041
  %add72 = fadd float %add68, %mul71, !dbg !11042
  %conv73 = fptosi float %add72 to i32, !dbg !11034
  %66 = load i32, i32* %itemw, align 4, !dbg !11043
  %67 = load i32, i32* %itemh, align 4, !dbg !11044
  call void @ui_item_position(%struct.uiItem* %55, i32 %conv63, i32 %conv73, i32 %66, i32 %67), !dbg !11045
  %68 = load i32, i32* %minx, align 4, !dbg !11046
  %69 = load i32, i32* %x, align 4, !dbg !11047
  %conv74 = sitofp i32 %69 to float, !dbg !11047
  %arrayidx75 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !11048
  %70 = load float, float* %arrayidx75, align 4, !dbg !11048
  %71 = load i32, i32* %pie_radius, align 4, !dbg !11049
  %conv76 = sitofp i32 %71 to float, !dbg !11049
  %mul77 = fmul float %70, %conv76, !dbg !11050
  %add78 = fadd float %conv74, %mul77, !dbg !11051
  %72 = load i32, i32* %itemw, align 4, !dbg !11052
  %div79 = sdiv i32 %72, 2, !dbg !11053
  %conv80 = sitofp i32 %div79 to float, !dbg !11052
  %sub = fsub float %add78, %conv80, !dbg !11054
  %conv81 = fptosi float %sub to i32, !dbg !11047
  %call82 = call i32 @min_ii(i32 %68, i32 %conv81), !dbg !11055
  store i32 %call82, i32* %minx, align 4, !dbg !11056
  %73 = load i32, i32* %maxx, align 4, !dbg !11057
  %74 = load i32, i32* %x, align 4, !dbg !11058
  %conv83 = sitofp i32 %74 to float, !dbg !11058
  %arrayidx84 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !11059
  %75 = load float, float* %arrayidx84, align 4, !dbg !11059
  %76 = load i32, i32* %pie_radius, align 4, !dbg !11060
  %conv85 = sitofp i32 %76 to float, !dbg !11060
  %mul86 = fmul float %75, %conv85, !dbg !11061
  %add87 = fadd float %conv83, %mul86, !dbg !11062
  %77 = load i32, i32* %itemw, align 4, !dbg !11063
  %div88 = sdiv i32 %77, 2, !dbg !11064
  %conv89 = sitofp i32 %div88 to float, !dbg !11063
  %add90 = fadd float %add87, %conv89, !dbg !11065
  %conv91 = fptosi float %add90 to i32, !dbg !11058
  %call92 = call i32 @max_ii(i32 %73, i32 %conv91), !dbg !11066
  store i32 %call92, i32* %maxx, align 4, !dbg !11067
  %78 = load i32, i32* %miny, align 4, !dbg !11068
  %79 = load i32, i32* %y, align 4, !dbg !11069
  %conv93 = sitofp i32 %79 to float, !dbg !11069
  %arrayidx94 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !11070
  %80 = load float, float* %arrayidx94, align 4, !dbg !11070
  %81 = load i32, i32* %pie_radius, align 4, !dbg !11071
  %conv95 = sitofp i32 %81 to float, !dbg !11071
  %mul96 = fmul float %80, %conv95, !dbg !11072
  %add97 = fadd float %conv93, %mul96, !dbg !11073
  %82 = load i32, i32* %itemh, align 4, !dbg !11074
  %div98 = sdiv i32 %82, 2, !dbg !11075
  %conv99 = sitofp i32 %div98 to float, !dbg !11074
  %sub100 = fsub float %add97, %conv99, !dbg !11076
  %conv101 = fptosi float %sub100 to i32, !dbg !11069
  %call102 = call i32 @min_ii(i32 %78, i32 %conv101), !dbg !11077
  store i32 %call102, i32* %miny, align 4, !dbg !11078
  %83 = load i32, i32* %maxy, align 4, !dbg !11079
  %84 = load i32, i32* %y, align 4, !dbg !11080
  %conv103 = sitofp i32 %84 to float, !dbg !11080
  %arrayidx104 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 1, !dbg !11081
  %85 = load float, float* %arrayidx104, align 4, !dbg !11081
  %86 = load i32, i32* %pie_radius, align 4, !dbg !11082
  %conv105 = sitofp i32 %86 to float, !dbg !11082
  %mul106 = fmul float %85, %conv105, !dbg !11083
  %add107 = fadd float %conv103, %mul106, !dbg !11084
  %87 = load i32, i32* %itemh, align 4, !dbg !11085
  %div108 = sdiv i32 %87, 2, !dbg !11086
  %conv109 = sitofp i32 %div108 to float, !dbg !11085
  %add110 = fadd float %add107, %conv109, !dbg !11087
  %conv111 = fptosi float %add110 to i32, !dbg !11080
  %call112 = call i32 @max_ii(i32 %83, i32 %conv111), !dbg !11088
  store i32 %call112, i32* %maxy, align 4, !dbg !11089
  br label %if.end113, !dbg !11090

if.end113:                                        ; preds = %if.end53, %for.body12
  br label %for.inc114, !dbg !11091

for.inc114:                                       ; preds = %if.end113
  %88 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11092
  %next115 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %88, i32 0, i32 0, !dbg !11093
  %89 = load i8*, i8** %next115, align 8, !dbg !11093
  %90 = bitcast i8* %89 to %struct.uiItem*, !dbg !11092
  store %struct.uiItem* %90, %struct.uiItem** %item, align 8, !dbg !11094
  br label %for.cond10, !dbg !11095, !llvm.loop !11096

for.end116:                                       ; preds = %for.cond10
  %91 = load i32, i32* %minx, align 4, !dbg !11098
  %92 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !11099
  %x117 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %92, i32 0, i32 4, !dbg !11100
  store i32 %91, i32* %x117, align 8, !dbg !11101
  %93 = load i32, i32* %miny, align 4, !dbg !11102
  %94 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !11103
  %y118 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %94, i32 0, i32 5, !dbg !11104
  store i32 %93, i32* %y118, align 4, !dbg !11105
  %95 = load i32, i32* %maxx, align 4, !dbg !11106
  %96 = load i32, i32* %minx, align 4, !dbg !11107
  %sub119 = sub nsw i32 %95, %96, !dbg !11108
  %97 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !11109
  %w = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %97, i32 0, i32 6, !dbg !11110
  store i32 %sub119, i32* %w, align 8, !dbg !11111
  %98 = load i32, i32* %maxy, align 4, !dbg !11112
  %99 = load i32, i32* %miny, align 4, !dbg !11113
  %sub120 = sub nsw i32 %98, %99, !dbg !11114
  %100 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !11115
  %h = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %100, i32 0, i32 7, !dbg !11116
  store i32 %sub120, i32* %h, align 4, !dbg !11117
  ret void, !dbg !11118
}

declare dso_local zeroext i8 @ui_but_can_align(%struct.uiBut*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_item_fit(i32 %item, i32 %pos, i32 %all, i32 %available, i32 %last, i32 %alignment, i32* %offset) #0 !dbg !11119 {
entry:
  %retval = alloca i32, align 4
  %item.addr = alloca i32, align 4
  %pos.addr = alloca i32, align 4
  %all.addr = alloca i32, align 4
  %available.addr = alloca i32, align 4
  %last.addr = alloca i32, align 4
  %alignment.addr = alloca i32, align 4
  %offset.addr = alloca i32*, align 8
  store i32 %item, i32* %item.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %item.addr, metadata !11122, metadata !DIExpression()), !dbg !11123
  store i32 %pos, i32* %pos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pos.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  store i32 %all, i32* %all.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %all.addr, metadata !11126, metadata !DIExpression()), !dbg !11127
  store i32 %available, i32* %available.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %available.addr, metadata !11128, metadata !DIExpression()), !dbg !11129
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !11130, metadata !DIExpression()), !dbg !11131
  store i32 %alignment, i32* %alignment.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alignment.addr, metadata !11132, metadata !DIExpression()), !dbg !11133
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !11134, metadata !DIExpression()), !dbg !11135
  %0 = load i32*, i32** %offset.addr, align 8, !dbg !11136
  %tobool = icmp ne i32* %0, null, !dbg !11136
  br i1 %tobool, label %if.then, label %if.end, !dbg !11138

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %offset.addr, align 8, !dbg !11139
  store i32 0, i32* %1, align 4, !dbg !11140
  br label %if.end, !dbg !11141

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %available.addr, align 4, !dbg !11142
  %cmp = icmp eq i32 %2, 0, !dbg !11144
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11145

if.then1:                                         ; preds = %if.end
  %3 = load i32, i32* %item.addr, align 4, !dbg !11146
  store i32 %3, i32* %retval, align 4, !dbg !11147
  br label %return, !dbg !11147

if.end2:                                          ; preds = %if.end
  %4 = load i32, i32* %all.addr, align 4, !dbg !11148
  %5 = load i32, i32* %available.addr, align 4, !dbg !11150
  %cmp3 = icmp sgt i32 %4, %5, !dbg !11151
  br i1 %cmp3, label %if.then4, label %if.else7, !dbg !11152

if.then4:                                         ; preds = %if.end2
  %6 = load i32, i32* %last.addr, align 4, !dbg !11153
  %tobool5 = icmp ne i32 %6, 0, !dbg !11153
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !11156

if.then6:                                         ; preds = %if.then4
  %7 = load i32, i32* %available.addr, align 4, !dbg !11157
  %8 = load i32, i32* %pos.addr, align 4, !dbg !11158
  %sub = sub nsw i32 %7, %8, !dbg !11159
  store i32 %sub, i32* %retval, align 4, !dbg !11160
  br label %return, !dbg !11160

if.else:                                          ; preds = %if.then4
  %9 = load i32, i32* %item.addr, align 4, !dbg !11161
  %10 = load i32, i32* %available.addr, align 4, !dbg !11162
  %mul = mul nsw i32 %9, %10, !dbg !11163
  %11 = load i32, i32* %all.addr, align 4, !dbg !11164
  %div = sdiv i32 %mul, %11, !dbg !11165
  store i32 %div, i32* %retval, align 4, !dbg !11166
  br label %return, !dbg !11166

if.else7:                                         ; preds = %if.end2
  %12 = load i32, i32* %alignment.addr, align 4, !dbg !11167
  %cmp8 = icmp eq i32 %12, 0, !dbg !11170
  br i1 %cmp8, label %if.then9, label %if.else16, !dbg !11171

if.then9:                                         ; preds = %if.else7
  %13 = load i32, i32* %last.addr, align 4, !dbg !11172
  %tobool10 = icmp ne i32 %13, 0, !dbg !11172
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !11175

if.then11:                                        ; preds = %if.then9
  %14 = load i32, i32* %available.addr, align 4, !dbg !11176
  %15 = load i32, i32* %pos.addr, align 4, !dbg !11177
  %sub12 = sub nsw i32 %14, %15, !dbg !11178
  store i32 %sub12, i32* %retval, align 4, !dbg !11179
  br label %return, !dbg !11179

if.else13:                                        ; preds = %if.then9
  %16 = load i32, i32* %item.addr, align 4, !dbg !11180
  %17 = load i32, i32* %available.addr, align 4, !dbg !11181
  %mul14 = mul nsw i32 %16, %17, !dbg !11182
  %18 = load i32, i32* %all.addr, align 4, !dbg !11183
  %div15 = sdiv i32 %mul14, %18, !dbg !11184
  store i32 %div15, i32* %retval, align 4, !dbg !11185
  br label %return, !dbg !11185

if.else16:                                        ; preds = %if.else7
  %19 = load i32, i32* %item.addr, align 4, !dbg !11186
  store i32 %19, i32* %retval, align 4, !dbg !11187
  br label %return, !dbg !11187

return:                                           ; preds = %if.else16, %if.else13, %if.then11, %if.else, %if.then6, %if.then1
  %20 = load i32, i32* %retval, align 4, !dbg !11188
  ret i32 %20, !dbg !11188
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_litem_min_width(i32 %itemw) #0 !dbg !11189 {
entry:
  %itemw.addr = alloca i32, align 4
  store i32 %itemw, i32* %itemw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %itemw.addr, metadata !11192, metadata !DIExpression()), !dbg !11193
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11194
  %conv = sext i16 %0 to i32, !dbg !11194
  %mul = mul nsw i32 2, %conv, !dbg !11194
  %1 = load i32, i32* %itemw.addr, align 4, !dbg !11194
  %cmp = icmp slt i32 %mul, %1, !dbg !11194
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11194

cond.true:                                        ; preds = %entry
  %2 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11194
  %conv2 = sext i16 %2 to i32, !dbg !11194
  %mul3 = mul nsw i32 2, %conv2, !dbg !11194
  br label %cond.end, !dbg !11194

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %itemw.addr, align 4, !dbg !11194
  br label %cond.end, !dbg !11194

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul3, %cond.true ], [ %3, %cond.false ], !dbg !11194
  ret i32 %cond, !dbg !11195
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_litem_layout_root_radial(%struct.uiLayout* %litem) #0 !dbg !11196 {
entry:
  %litem.addr = alloca %struct.uiLayout*, align 8
  %item = alloca %struct.uiItem*, align 8
  %itemh = alloca i32, align 4
  %itemw = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.uiLayout* %litem, %struct.uiLayout** %litem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %litem.addr, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !11199, metadata !DIExpression()), !dbg !11200
  %0 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !11201
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %0, i32 0, i32 3, !dbg !11202
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !11203
  %1 = load i8*, i8** %first, align 8, !dbg !11203
  %2 = bitcast i8* %1 to %struct.uiItem*, !dbg !11201
  store %struct.uiItem* %2, %struct.uiItem** %item, align 8, !dbg !11200
  %3 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11204
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %3, i32 0, i32 2, !dbg !11206
  %4 = load i32, i32* %type, align 8, !dbg !11206
  %cmp = icmp eq i32 %4, 0, !dbg !11207
  br i1 %cmp, label %if.then, label %if.end, !dbg !11208

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %itemh, metadata !11209, metadata !DIExpression()), !dbg !11211
  call void @llvm.dbg.declare(metadata i32* %itemw, metadata !11212, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11214, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11216, metadata !DIExpression()), !dbg !11217
  %5 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !11218
  %x1 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %5, i32 0, i32 4, !dbg !11219
  %6 = load i32, i32* %x1, align 8, !dbg !11219
  store i32 %6, i32* %x, align 4, !dbg !11220
  %7 = load %struct.uiLayout*, %struct.uiLayout** %litem.addr, align 8, !dbg !11221
  %y2 = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %7, i32 0, i32 5, !dbg !11222
  %8 = load i32, i32* %y2, align 4, !dbg !11222
  store i32 %8, i32* %y, align 4, !dbg !11223
  %9 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11224
  call void @ui_item_size(%struct.uiItem* %9, i32* %itemw, i32* %itemh), !dbg !11225
  %10 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11226
  %11 = load i32, i32* %x, align 4, !dbg !11227
  %12 = load i32, i32* %itemw, align 4, !dbg !11228
  %div = sdiv i32 %12, 2, !dbg !11229
  %sub = sub nsw i32 %11, %div, !dbg !11230
  %13 = load i32, i32* %y, align 4, !dbg !11231
  %conv = sitofp i32 %13 to float, !dbg !11231
  %14 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11232
  %15 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 113), align 2, !dbg !11233
  %conv3 = sext i16 %15 to i32, !dbg !11234
  %conv4 = sitofp i32 %conv3 to float, !dbg !11234
  %add = fadd float %conv4, 9.000000e+00, !dbg !11235
  %mul = fmul float %14, %add, !dbg !11236
  %add5 = fadd float %conv, %mul, !dbg !11237
  %conv6 = fptosi float %add5 to i32, !dbg !11231
  %16 = load i32, i32* %itemw, align 4, !dbg !11238
  %17 = load i32, i32* %itemh, align 4, !dbg !11239
  call void @ui_item_position(%struct.uiItem* %10, i32 %sub, i32 %conv6, i32 %16, i32 %17), !dbg !11240
  br label %if.end, !dbg !11241

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11242
}

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_item_is_radial_displayable(%struct.uiItem* %item) #0 !dbg !11243 {
entry:
  %retval = alloca i8, align 1
  %item.addr = alloca %struct.uiItem*, align 8
  store %struct.uiItem* %item, %struct.uiItem** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item.addr, metadata !11246, metadata !DIExpression()), !dbg !11247
  %0 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !11248
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %0, i32 0, i32 2, !dbg !11250
  %1 = load i32, i32* %type, align 8, !dbg !11250
  %cmp = icmp eq i32 %1, 0, !dbg !11251
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11252

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.uiItem*, %struct.uiItem** %item.addr, align 8, !dbg !11253
  %3 = bitcast %struct.uiItem* %2 to %struct.uiButtonItem*, !dbg !11254
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %3, i32 0, i32 1, !dbg !11254
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11254
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !11255
  %5 = load i32, i32* %type1, align 8, !dbg !11255
  %cmp2 = icmp eq i32 %5, 5120, !dbg !11256
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11257

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !11258
  br label %return, !dbg !11258

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8 1, i8* %retval, align 1, !dbg !11259
  br label %return, !dbg !11259

return:                                           ; preds = %if.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !11260
  ret i8 %6, !dbg !11260
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_get_radialbut_vec(float* %vec, i16 signext %itemnum) #0 !dbg !11261 {
entry:
  %vec.addr = alloca float*, align 8
  %itemnum.addr = alloca i16, align 2
  %dir = alloca i32, align 4
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !11264, metadata !DIExpression()), !dbg !11265
  store i16 %itemnum, i16* %itemnum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %itemnum.addr, metadata !11266, metadata !DIExpression()), !dbg !11267
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !11268, metadata !DIExpression()), !dbg !11269
  %0 = load i16, i16* %itemnum.addr, align 2, !dbg !11270
  %idxprom = sext i16 %0 to i64, !dbg !11271
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* @ui_radial_dir_order, i64 0, i64 %idxprom, !dbg !11271
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11271
  %conv = zext i8 %1 to i32, !dbg !11271
  store i32 %conv, i32* %dir, align 4, !dbg !11272
  %2 = load i32, i32* %dir, align 4, !dbg !11273
  %3 = load float*, float** %vec.addr, align 8, !dbg !11274
  call void @ui_but_pie_dir(i32 %2, float* %3), !dbg !11275
  %4 = load i32, i32* %dir, align 4, !dbg !11276
  ret i32 %4, !dbg !11277
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_item_is_radial_drawable(%struct.uiButtonItem* %bitem) #0 !dbg !11278 {
entry:
  %retval = alloca i8, align 1
  %bitem.addr = alloca %struct.uiButtonItem*, align 8
  store %struct.uiButtonItem* %bitem, %struct.uiButtonItem** %bitem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem.addr, metadata !11281, metadata !DIExpression()), !dbg !11282
  %0 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem.addr, align 8, !dbg !11283
  %but = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %0, i32 0, i32 1, !dbg !11283
  %1 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11283
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 4, !dbg !11283
  %2 = load i32, i32* %type, align 8, !dbg !11283
  %cmp = icmp eq i32 %2, 10752, !dbg !11283
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11283

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem.addr, align 8, !dbg !11283
  %but1 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %3, i32 0, i32 1, !dbg !11283
  %4 = load %struct.uiBut*, %struct.uiBut** %but1, align 8, !dbg !11283
  %type2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !11283
  %5 = load i32, i32* %type2, align 8, !dbg !11283
  %cmp3 = icmp eq i32 %5, 27648, !dbg !11283
  br i1 %cmp3, label %if.then, label %if.end, !dbg !11285

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !11286
  br label %return, !dbg !11286

if.end:                                           ; preds = %lor.lhs.false
  store i8 1, i8* %retval, align 1, !dbg !11287
  br label %return, !dbg !11287

return:                                           ; preds = %if.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !11288
  ret i8 %6, !dbg !11288
}

declare dso_local void @ui_but_pie_dir(i32, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_intro_items(%struct.DynStr* %ds, %struct.ListBase* %lb) #0 !dbg !11289 {
entry:
  %ds.addr = alloca %struct.DynStr*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %item = alloca %struct.uiItem*, align 8
  store %struct.DynStr* %ds, %struct.DynStr** %ds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynStr** %ds.addr, metadata !11292, metadata !DIExpression()), !dbg !11293
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !11294, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.declare(metadata %struct.uiItem** %item, metadata !11296, metadata !DIExpression()), !dbg !11297
  %0 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11298
  call void @BLI_dynstr_append(%struct.DynStr* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.49, i64 0, i64 0)), !dbg !11299
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !11300
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !11302
  %2 = load i8*, i8** %first, align 8, !dbg !11302
  %3 = bitcast i8* %2 to %struct.uiItem*, !dbg !11300
  store %struct.uiItem* %3, %struct.uiItem** %item, align 8, !dbg !11303
  br label %for.cond, !dbg !11304

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11305
  %tobool = icmp ne %struct.uiItem* %4, null, !dbg !11307
  br i1 %tobool, label %for.body, label %for.end, !dbg !11307

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11308
  call void @BLI_dynstr_append(%struct.DynStr* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50, i64 0, i64 0)), !dbg !11310
  %6 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11311
  %type = getelementptr inbounds %struct.uiItem, %struct.uiItem* %6, i32 0, i32 2, !dbg !11312
  %7 = load i32, i32* %type, align 8, !dbg !11312
  switch i32 %7, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 10, label %sw.bb9
  ], !dbg !11313

sw.bb:                                            ; preds = %for.body
  %8 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11314
  call void @BLI_dynstr_append(%struct.DynStr* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i64 0, i64 0)), !dbg !11316
  br label %sw.epilog, !dbg !11317

sw.bb1:                                           ; preds = %for.body
  %9 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11318
  call void @BLI_dynstr_append(%struct.DynStr* %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0)), !dbg !11319
  br label %sw.epilog, !dbg !11320

sw.bb2:                                           ; preds = %for.body
  %10 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11321
  call void @BLI_dynstr_append(%struct.DynStr* %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i64 0, i64 0)), !dbg !11322
  br label %sw.epilog, !dbg !11323

sw.bb3:                                           ; preds = %for.body
  %11 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11324
  call void @BLI_dynstr_append(%struct.DynStr* %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i64 0, i64 0)), !dbg !11325
  br label %sw.epilog, !dbg !11326

sw.bb4:                                           ; preds = %for.body
  %12 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11327
  call void @BLI_dynstr_append(%struct.DynStr* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.55, i64 0, i64 0)), !dbg !11328
  br label %sw.epilog, !dbg !11329

sw.bb5:                                           ; preds = %for.body
  %13 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11330
  call void @BLI_dynstr_append(%struct.DynStr* %13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i64 0, i64 0)), !dbg !11331
  br label %sw.epilog, !dbg !11332

sw.bb6:                                           ; preds = %for.body
  %14 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11333
  call void @BLI_dynstr_append(%struct.DynStr* %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.57, i64 0, i64 0)), !dbg !11334
  br label %sw.epilog, !dbg !11335

sw.bb7:                                           ; preds = %for.body
  %15 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11336
  call void @BLI_dynstr_append(%struct.DynStr* %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0)), !dbg !11337
  br label %sw.epilog, !dbg !11338

sw.bb8:                                           ; preds = %for.body
  %16 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11339
  call void @BLI_dynstr_append(%struct.DynStr* %16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i64 0, i64 0)), !dbg !11340
  br label %sw.epilog, !dbg !11341

sw.bb9:                                           ; preds = %for.body
  %17 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11342
  call void @BLI_dynstr_append(%struct.DynStr* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i64 0, i64 0)), !dbg !11343
  br label %sw.epilog, !dbg !11344

sw.default:                                       ; preds = %for.body
  %18 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11345
  call void @BLI_dynstr_append(%struct.DynStr* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i64 0, i64 0)), !dbg !11346
  br label %sw.epilog, !dbg !11347

sw.epilog:                                        ; preds = %sw.default, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %19 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11348
  %type10 = getelementptr inbounds %struct.uiItem, %struct.uiItem* %19, i32 0, i32 2, !dbg !11349
  %20 = load i32, i32* %type10, align 8, !dbg !11349
  switch i32 %20, label %sw.default12 [
    i32 0, label %sw.bb11
  ], !dbg !11350

sw.bb11:                                          ; preds = %sw.epilog
  %21 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11351
  %22 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11353
  %23 = bitcast %struct.uiItem* %22 to %struct.uiButtonItem*, !dbg !11354
  call void @ui_intro_button(%struct.DynStr* %21, %struct.uiButtonItem* %23), !dbg !11355
  br label %sw.epilog13, !dbg !11356

sw.default12:                                     ; preds = %sw.epilog
  %24 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11357
  call void @BLI_dynstr_append(%struct.DynStr* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i64 0, i64 0)), !dbg !11358
  %25 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11359
  %26 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11360
  %27 = bitcast %struct.uiItem* %26 to %struct.uiLayout*, !dbg !11361
  %items = getelementptr inbounds %struct.uiLayout, %struct.uiLayout* %27, i32 0, i32 3, !dbg !11361
  call void @ui_intro_items(%struct.DynStr* %25, %struct.ListBase* %items), !dbg !11362
  br label %sw.epilog13, !dbg !11363

sw.epilog13:                                      ; preds = %sw.default12, %sw.bb11
  %28 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11364
  call void @BLI_dynstr_append(%struct.DynStr* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.63, i64 0, i64 0)), !dbg !11365
  %29 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11366
  %30 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !11368
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %30, i32 0, i32 1, !dbg !11369
  %31 = load i8*, i8** %last, align 8, !dbg !11369
  %32 = bitcast i8* %31 to %struct.uiItem*, !dbg !11368
  %cmp = icmp ne %struct.uiItem* %29, %32, !dbg !11370
  br i1 %cmp, label %if.then, label %if.end, !dbg !11371

if.then:                                          ; preds = %sw.epilog13
  %33 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11372
  call void @BLI_dynstr_append(%struct.DynStr* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0)), !dbg !11373
  br label %if.end, !dbg !11373

if.end:                                           ; preds = %if.then, %sw.epilog13
  br label %for.inc, !dbg !11374

for.inc:                                          ; preds = %if.end
  %34 = load %struct.uiItem*, %struct.uiItem** %item, align 8, !dbg !11375
  %next = getelementptr inbounds %struct.uiItem, %struct.uiItem* %34, i32 0, i32 0, !dbg !11376
  %35 = load i8*, i8** %next, align 8, !dbg !11376
  %36 = bitcast i8* %35 to %struct.uiItem*, !dbg !11375
  store %struct.uiItem* %36, %struct.uiItem** %item, align 8, !dbg !11377
  br label %for.cond, !dbg !11378, !llvm.loop !11379

for.end:                                          ; preds = %for.cond
  %37 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11381
  call void @BLI_dynstr_append(%struct.DynStr* %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0)), !dbg !11382
  ret void, !dbg !11383
}

declare dso_local void @BLI_dynstr_append(%struct.DynStr*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_intro_button(%struct.DynStr* %ds, %struct.uiButtonItem* %bitem) #0 !dbg !11384 {
entry:
  %ds.addr = alloca %struct.DynStr*, align 8
  %bitem.addr = alloca %struct.uiButtonItem*, align 8
  %but = alloca %struct.uiBut*, align 8
  %opstr = alloca i8*, align 8
  store %struct.DynStr* %ds, %struct.DynStr** %ds.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynStr** %ds.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  store %struct.uiButtonItem* %bitem, %struct.uiButtonItem** %bitem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiButtonItem** %bitem.addr, metadata !11389, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11391, metadata !DIExpression()), !dbg !11392
  %0 = load %struct.uiButtonItem*, %struct.uiButtonItem** %bitem.addr, align 8, !dbg !11393
  %but1 = getelementptr inbounds %struct.uiButtonItem, %struct.uiButtonItem* %0, i32 0, i32 1, !dbg !11394
  %1 = load %struct.uiBut*, %struct.uiBut** %but1, align 8, !dbg !11394
  store %struct.uiBut* %1, %struct.uiBut** %but, align 8, !dbg !11392
  %2 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11395
  %3 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11396
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 4, !dbg !11397
  %4 = load i32, i32* %type, align 8, !dbg !11397
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i64 0, i64 0), i32 %4), !dbg !11398
  %5 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11399
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11400
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 17, !dbg !11401
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !11400
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.67, i64 0, i64 0), i8* %arraydecay), !dbg !11402
  %7 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11403
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11404
  %tip = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 42, !dbg !11405
  %9 = load i8*, i8** %tip, align 8, !dbg !11405
  %tobool = icmp ne i8* %9, null, !dbg !11404
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11404

cond.true:                                        ; preds = %entry
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11406
  %tip2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 42, !dbg !11407
  %11 = load i8*, i8** %tip2, align 8, !dbg !11407
  br label %cond.end, !dbg !11404

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !11404

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %11, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false ], !dbg !11404
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.68, i64 0, i64 0), i8* %cond), !dbg !11408
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11409
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 59, !dbg !11411
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype, align 8, !dbg !11411
  %tobool3 = icmp ne %struct.wmOperatorType* %13, null, !dbg !11409
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11412

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8** %opstr, metadata !11413, metadata !DIExpression()), !dbg !11415
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11416
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 74, !dbg !11417
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11417
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %15, i32 0, i32 48, !dbg !11418
  %16 = load i8*, i8** %evil_C, align 8, !dbg !11418
  %17 = bitcast i8* %16 to %struct.bContext*, !dbg !11416
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11419
  %optype4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 59, !dbg !11420
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype4, align 8, !dbg !11420
  %20 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11421
  %opptr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 60, !dbg !11422
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !11422
  %call = call i8* @WM_operator_pystring_ex(%struct.bContext* %17, %struct.wmOperator* null, i8 zeroext 0, i8 zeroext 1, %struct.wmOperatorType* %19, %struct.PointerRNA* %21), !dbg !11423
  store i8* %call, i8** %opstr, align 8, !dbg !11415
  %22 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11424
  %23 = load i8*, i8** %opstr, align 8, !dbg !11425
  %tobool5 = icmp ne i8* %23, null, !dbg !11425
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !11425

cond.true6:                                       ; preds = %if.then
  %24 = load i8*, i8** %opstr, align 8, !dbg !11426
  br label %cond.end8, !dbg !11425

cond.false7:                                      ; preds = %if.then
  br label %cond.end8, !dbg !11425

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi i8* [ %24, %cond.true6 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false7 ], !dbg !11425
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %22, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0), i8* %cond9), !dbg !11427
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11428
  %26 = load i8*, i8** %opstr, align 8, !dbg !11429
  call void %25(i8* %26), !dbg !11428
  br label %if.end, !dbg !11430

if.end:                                           ; preds = %cond.end8, %cond.end
  %27 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11431
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %27, i32 0, i32 55, !dbg !11433
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !11433
  %tobool10 = icmp ne %struct.PropertyRNA* %28, null, !dbg !11431
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !11434

if.then11:                                        ; preds = %if.end
  %29 = load %struct.DynStr*, %struct.DynStr** %ds.addr, align 8, !dbg !11435
  %30 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11437
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 54, !dbg !11438
  %type12 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 1, !dbg !11439
  %31 = load %struct.StructRNA*, %struct.StructRNA** %type12, align 8, !dbg !11439
  %call13 = call i8* @RNA_struct_identifier(%struct.StructRNA* %31), !dbg !11440
  %32 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11441
  %rnaprop14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 55, !dbg !11442
  %33 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop14, align 8, !dbg !11442
  %call15 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %33), !dbg !11443
  %34 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11444
  %rnaindex = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 56, !dbg !11445
  %35 = load i32, i32* %rnaindex, align 8, !dbg !11445
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %29, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i64 0, i64 0), i8* %call13, i8* %call15, i32 %35), !dbg !11446
  br label %if.end16, !dbg !11447

if.end16:                                         ; preds = %if.then11, %if.end
  ret void, !dbg !11448
}

declare dso_local void @BLI_dynstr_appendf(%struct.DynStr*, i8*, ...) #2

declare dso_local i8* @WM_operator_pystring_ex(%struct.bContext*, %struct.wmOperator*, i8 zeroext, i8 zeroext, %struct.wmOperatorType*, %struct.PointerRNA*) #2

declare dso_local i8* @RNA_property_identifier(%struct.PropertyRNA*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2334, !2335, !2336}
!llvm.ident = !{!2337}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "str", scope: !2, file: !3, line: 3290, type: !1855, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1111, globals: !2333, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/interface/interface_layout.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !19, !29, !75, !82, !932, !957, !967, !978, !1011, !1020, !1035, !1066, !1078, !1090, !1099}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uiItemType", file: !3, line: 98, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18}
!8 = !DIEnumerator(name: "ITEM_BUTTON", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "ITEM_LAYOUT_ROW", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "ITEM_LAYOUT_COLUMN", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "ITEM_LAYOUT_COLUMN_FLOW", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "ITEM_LAYOUT_ROW_FLOW", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "ITEM_LAYOUT_BOX", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "ITEM_LAYOUT_ABSOLUTE", value: 6, isUnsigned: true)
!15 = !DIEnumerator(name: "ITEM_LAYOUT_SPLIT", value: 7, isUnsigned: true)
!16 = !DIEnumerator(name: "ITEM_LAYOUT_OVERLAP", value: 8, isUnsigned: true)
!17 = !DIEnumerator(name: "ITEM_LAYOUT_RADIAL", value: 9, isUnsigned: true)
!18 = !DIEnumerator(name: "ITEM_LAYOUT_ROOT", value: 10, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 426, baseType: !6, size: 32, elements: !21)
!20 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!21 = !{!22, !23, !24, !25, !26, !27, !28}
!22 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_NONE", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "UI_BLOCK_BOUNDS", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_TEXT", value: 2, isUnsigned: true)
!25 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MOUSE", value: 3, isUnsigned: true)
!26 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MENU", value: 4, isUnsigned: true)
!27 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_CENTER", value: 5, isUnsigned: true)
!28 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_PIE_CENTER", value: 6, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 236, baseType: !6, size: 32, elements: !30)
!30 = !{!31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74}
!31 = !DIEnumerator(name: "BUT", value: 512, isUnsigned: true)
!32 = !DIEnumerator(name: "ROW", value: 1024, isUnsigned: true)
!33 = !DIEnumerator(name: "TOG", value: 1536, isUnsigned: true)
!34 = !DIEnumerator(name: "NUM", value: 2560, isUnsigned: true)
!35 = !DIEnumerator(name: "TEX", value: 3072, isUnsigned: true)
!36 = !DIEnumerator(name: "TOGN", value: 4608, isUnsigned: true)
!37 = !DIEnumerator(name: "LABEL", value: 5120, isUnsigned: true)
!38 = !DIEnumerator(name: "MENU", value: 5632, isUnsigned: true)
!39 = !DIEnumerator(name: "ICONTOG", value: 6656, isUnsigned: true)
!40 = !DIEnumerator(name: "NUMSLI", value: 7168, isUnsigned: true)
!41 = !DIEnumerator(name: "COLOR", value: 7680, isUnsigned: true)
!42 = !DIEnumerator(name: "SCROLL", value: 9216, isUnsigned: true)
!43 = !DIEnumerator(name: "BLOCK", value: 9728, isUnsigned: true)
!44 = !DIEnumerator(name: "BUTM", value: 10240, isUnsigned: true)
!45 = !DIEnumerator(name: "SEPR", value: 10752, isUnsigned: true)
!46 = !DIEnumerator(name: "LINK", value: 11264, isUnsigned: true)
!47 = !DIEnumerator(name: "INLINK", value: 11776, isUnsigned: true)
!48 = !DIEnumerator(name: "KEYEVT", value: 12288, isUnsigned: true)
!49 = !DIEnumerator(name: "HSVCUBE", value: 13312, isUnsigned: true)
!50 = !DIEnumerator(name: "PULLDOWN", value: 13824, isUnsigned: true)
!51 = !DIEnumerator(name: "ROUNDBOX", value: 14336, isUnsigned: true)
!52 = !DIEnumerator(name: "BUT_COLORBAND", value: 15360, isUnsigned: true)
!53 = !DIEnumerator(name: "BUT_NORMAL", value: 15872, isUnsigned: true)
!54 = !DIEnumerator(name: "BUT_CURVE", value: 16384, isUnsigned: true)
!55 = !DIEnumerator(name: "ICONTOGN", value: 17408, isUnsigned: true)
!56 = !DIEnumerator(name: "LISTBOX", value: 17920, isUnsigned: true)
!57 = !DIEnumerator(name: "LISTROW", value: 18432, isUnsigned: true)
!58 = !DIEnumerator(name: "TOGBUT", value: 18944, isUnsigned: true)
!59 = !DIEnumerator(name: "OPTION", value: 19456, isUnsigned: true)
!60 = !DIEnumerator(name: "OPTIONN", value: 19968, isUnsigned: true)
!61 = !DIEnumerator(name: "TRACKPREVIEW", value: 20480, isUnsigned: true)
!62 = !DIEnumerator(name: "SEARCH_MENU", value: 20992, isUnsigned: true)
!63 = !DIEnumerator(name: "BUT_EXTRA", value: 21504, isUnsigned: true)
!64 = !DIEnumerator(name: "HSVCIRCLE", value: 22016, isUnsigned: true)
!65 = !DIEnumerator(name: "HOTKEYEVT", value: 23552, isUnsigned: true)
!66 = !DIEnumerator(name: "BUT_IMAGE", value: 24064, isUnsigned: true)
!67 = !DIEnumerator(name: "HISTOGRAM", value: 24576, isUnsigned: true)
!68 = !DIEnumerator(name: "WAVEFORM", value: 25088, isUnsigned: true)
!69 = !DIEnumerator(name: "VECTORSCOPE", value: 25600, isUnsigned: true)
!70 = !DIEnumerator(name: "PROGRESSBAR", value: 26112, isUnsigned: true)
!71 = !DIEnumerator(name: "SEARCH_MENU_UNLINK", value: 26624, isUnsigned: true)
!72 = !DIEnumerator(name: "NODESOCKET", value: 27136, isUnsigned: true)
!73 = !DIEnumerator(name: "SEPRLINE", value: 27648, isUnsigned: true)
!74 = !DIEnumerator(name: "GRIP", value: 28160, isUnsigned: true)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 223, baseType: !6, size: 32, elements: !76)
!76 = !{!77, !78, !79, !80, !81}
!77 = !DIEnumerator(name: "UI_BUT_POIN_CHAR", value: 32, isUnsigned: true)
!78 = !DIEnumerator(name: "UI_BUT_POIN_SHORT", value: 64, isUnsigned: true)
!79 = !DIEnumerator(name: "UI_BUT_POIN_INT", value: 96, isUnsigned: true)
!80 = !DIEnumerator(name: "UI_BUT_POIN_FLOAT", value: 128, isUnsigned: true)
!81 = !DIEnumerator(name: "UI_BUT_POIN_BIT", value: 256, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !83, line: 40, baseType: !6, size: 32, elements: !84)
!83 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!84 = !{!85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931}
!85 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!86 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!87 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!88 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!89 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!90 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!91 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!92 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!93 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!94 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!95 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!96 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!97 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!98 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!99 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!100 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!101 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!102 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!103 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!104 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!105 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!107 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!108 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!109 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!110 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!111 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!112 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!113 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!114 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!115 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!116 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!117 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!118 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!119 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!120 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!121 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!122 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!123 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!124 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!125 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!126 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!127 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!128 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!129 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!130 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!131 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!132 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!133 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!134 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!135 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!136 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!137 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!138 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!139 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!140 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!141 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!142 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!143 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!144 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!145 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!146 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!147 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!148 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!149 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!150 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!151 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!152 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!153 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!154 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!155 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!156 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!157 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!158 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!159 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!160 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!161 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!162 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!163 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!164 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!165 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!166 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!167 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!168 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!169 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!170 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!171 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!172 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!173 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!174 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!175 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!176 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!177 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!178 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!179 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!180 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!181 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!182 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!183 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!184 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!185 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!186 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!187 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!188 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!189 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!190 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!191 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!192 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!193 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!194 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!195 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!196 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!197 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!198 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!199 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!200 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!201 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!202 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!203 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!204 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!205 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!206 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!207 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!208 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!209 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!210 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!211 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!212 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!213 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!214 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!215 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!216 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!217 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!218 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!219 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!220 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!221 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!222 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!223 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!224 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!225 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!226 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!227 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!228 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!921 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!922 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!923 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!924 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!925 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!926 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!927 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!928 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!929 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!930 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!931 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!932 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 157, baseType: !6, size: 32, elements: !933)
!933 = !{!934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956}
!934 = !DIEnumerator(name: "UI_ICON_SUBMENU", value: 64, isUnsigned: true)
!935 = !DIEnumerator(name: "UI_ICON_PREVIEW", value: 128, isUnsigned: true)
!936 = !DIEnumerator(name: "UI_BUT_NODE_LINK", value: 256, isUnsigned: true)
!937 = !DIEnumerator(name: "UI_BUT_NODE_ACTIVE", value: 512, isUnsigned: true)
!938 = !DIEnumerator(name: "UI_BUT_DRAG_LOCK", value: 1024, isUnsigned: true)
!939 = !DIEnumerator(name: "UI_BUT_DISABLED", value: 2048, isUnsigned: true)
!940 = !DIEnumerator(name: "UI_BUT_COLOR_LOCK", value: 4096, isUnsigned: true)
!941 = !DIEnumerator(name: "UI_BUT_ANIMATED", value: 8192, isUnsigned: true)
!942 = !DIEnumerator(name: "UI_BUT_ANIMATED_KEY", value: 16384, isUnsigned: true)
!943 = !DIEnumerator(name: "UI_BUT_DRIVEN", value: 32768, isUnsigned: true)
!944 = !DIEnumerator(name: "UI_BUT_REDALERT", value: 65536, isUnsigned: true)
!945 = !DIEnumerator(name: "UI_BUT_INACTIVE", value: 131072, isUnsigned: true)
!946 = !DIEnumerator(name: "UI_BUT_LAST_ACTIVE", value: 262144, isUnsigned: true)
!947 = !DIEnumerator(name: "UI_BUT_UNDO", value: 524288, isUnsigned: true)
!948 = !DIEnumerator(name: "UI_BUT_IMMEDIATE", value: 1048576, isUnsigned: true)
!949 = !DIEnumerator(name: "UI_BUT_NO_UTF8", value: 2097152, isUnsigned: true)
!950 = !DIEnumerator(name: "UI_BUT_VEC_SIZE_LOCK", value: 4194304, isUnsigned: true)
!951 = !DIEnumerator(name: "UI_BUT_COLOR_CUBIC", value: 8388608, isUnsigned: true)
!952 = !DIEnumerator(name: "UI_BUT_LIST_ITEM", value: 16777216, isUnsigned: true)
!953 = !DIEnumerator(name: "UI_BUT_DRAG_MULTI", value: 33554432, isUnsigned: true)
!954 = !DIEnumerator(name: "UI_BUT_SCA_LINK_GREY", value: 67108864, isUnsigned: true)
!955 = !DIEnumerator(name: "UI_BUT_HAS_SEP_CHAR", value: 134217728, isUnsigned: true)
!956 = !DIEnumerator(name: "UI_BUT_TIP_FORCE", value: 268435456, isUnsigned: true)
!957 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyType", file: !958, line: 71, baseType: !6, size: 32, elements: !959)
!958 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!959 = !{!960, !961, !962, !963, !964, !965, !966}
!960 = !DIEnumerator(name: "PROP_BOOLEAN", value: 0, isUnsigned: true)
!961 = !DIEnumerator(name: "PROP_INT", value: 1, isUnsigned: true)
!962 = !DIEnumerator(name: "PROP_FLOAT", value: 2, isUnsigned: true)
!963 = !DIEnumerator(name: "PROP_STRING", value: 3, isUnsigned: true)
!964 = !DIEnumerator(name: "PROP_ENUM", value: 4, isUnsigned: true)
!965 = !DIEnumerator(name: "PROP_POINTER", value: 5, isUnsigned: true)
!966 = !DIEnumerator(name: "PROP_COLLECTION", value: 6, isUnsigned: true)
!967 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 195, baseType: !6, size: 32, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976, !977}
!969 = !DIEnumerator(name: "UI_BUT_TEXT_LEFT", value: 2, isUnsigned: true)
!970 = !DIEnumerator(name: "UI_BUT_ICON_LEFT", value: 4, isUnsigned: true)
!971 = !DIEnumerator(name: "UI_BUT_TEXT_RIGHT", value: 8, isUnsigned: true)
!972 = !DIEnumerator(name: "UI_BUT_NO_TOOLTIP", value: 16, isUnsigned: true)
!973 = !DIEnumerator(name: "UI_BUT_ALIGN_TOP", value: 16384, isUnsigned: true)
!974 = !DIEnumerator(name: "UI_BUT_ALIGN_LEFT", value: 32768, isUnsigned: true)
!975 = !DIEnumerator(name: "UI_BUT_ALIGN_RIGHT", value: 65536, isUnsigned: true)
!976 = !DIEnumerator(name: "UI_BUT_ALIGN_DOWN", value: 131072, isUnsigned: true)
!977 = !DIEnumerator(name: "UI_BUT_ALIGN", value: 245760, isUnsigned: true)
!978 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !958, line: 151, baseType: !6, size: 32, elements: !979)
!979 = !{!980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010}
!980 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!981 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!982 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!983 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!984 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!985 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!986 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!987 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!988 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!989 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!990 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!991 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!992 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!993 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!994 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!995 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!996 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!997 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!998 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!999 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!1000 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!1001 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!1002 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!1003 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!1004 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!1005 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!1006 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!1007 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!1008 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!1009 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!1010 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!1011 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1012, line: 115, baseType: !6, size: 32, elements: !1013)
!1012 = !DIFile(filename: "blender/source/blender/editors/interface/interface_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1013 = !{!1014, !1015, !1016, !1017, !1018, !1019}
!1014 = !DIEnumerator(name: "UI_SELECT", value: 1, isUnsigned: true)
!1015 = !DIEnumerator(name: "UI_SCROLLED", value: 2, isUnsigned: true)
!1016 = !DIEnumerator(name: "UI_ACTIVE", value: 4, isUnsigned: true)
!1017 = !DIEnumerator(name: "UI_HAS_ICON", value: 8, isUnsigned: true)
!1018 = !DIEnumerator(name: "UI_TEXTINPUT", value: 16, isUnsigned: true)
!1019 = !DIEnumerator(name: "UI_HIDDEN", value: 32, isUnsigned: true)
!1020 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1021, line: 141, baseType: !6, size: 32, elements: !1022)
!1021 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034}
!1023 = !DIEnumerator(name: "WM_OP_INVOKE_DEFAULT", value: 0, isUnsigned: true)
!1024 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_WIN", value: 1, isUnsigned: true)
!1025 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_CHANNELS", value: 2, isUnsigned: true)
!1026 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_PREVIEW", value: 3, isUnsigned: true)
!1027 = !DIEnumerator(name: "WM_OP_INVOKE_AREA", value: 4, isUnsigned: true)
!1028 = !DIEnumerator(name: "WM_OP_INVOKE_SCREEN", value: 5, isUnsigned: true)
!1029 = !DIEnumerator(name: "WM_OP_EXEC_DEFAULT", value: 6, isUnsigned: true)
!1030 = !DIEnumerator(name: "WM_OP_EXEC_REGION_WIN", value: 7, isUnsigned: true)
!1031 = !DIEnumerator(name: "WM_OP_EXEC_REGION_CHANNELS", value: 8, isUnsigned: true)
!1032 = !DIEnumerator(name: "WM_OP_EXEC_REGION_PREVIEW", value: 9, isUnsigned: true)
!1033 = !DIEnumerator(name: "WM_OP_EXEC_AREA", value: 10, isUnsigned: true)
!1034 = !DIEnumerator(name: "WM_OP_EXEC_SCREEN", value: 11, isUnsigned: true)
!1035 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !958, line: 107, baseType: !6, size: 32, elements: !1036)
!1036 = !{!1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065}
!1037 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!1038 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!1039 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!1040 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!1041 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!1042 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!1043 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!1044 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!1045 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!1046 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!1047 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!1048 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!1049 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!1050 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!1051 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!1052 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!1053 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!1054 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!1055 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!1056 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!1057 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!1058 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!1059 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!1060 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!1061 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!1062 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!1063 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!1064 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!1065 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!1066 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyUnit", file: !958, line: 82, baseType: !6, size: 32, elements: !1067)
!1067 = !{!1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077}
!1068 = !DIEnumerator(name: "PROP_UNIT_NONE", value: 0, isUnsigned: true)
!1069 = !DIEnumerator(name: "PROP_UNIT_LENGTH", value: 65536, isUnsigned: true)
!1070 = !DIEnumerator(name: "PROP_UNIT_AREA", value: 131072, isUnsigned: true)
!1071 = !DIEnumerator(name: "PROP_UNIT_VOLUME", value: 196608, isUnsigned: true)
!1072 = !DIEnumerator(name: "PROP_UNIT_MASS", value: 262144, isUnsigned: true)
!1073 = !DIEnumerator(name: "PROP_UNIT_ROTATION", value: 327680, isUnsigned: true)
!1074 = !DIEnumerator(name: "PROP_UNIT_TIME", value: 393216, isUnsigned: true)
!1075 = !DIEnumerator(name: "PROP_UNIT_VELOCITY", value: 458752, isUnsigned: true)
!1076 = !DIEnumerator(name: "PROP_UNIT_ACCELERATION", value: 524288, isUnsigned: true)
!1077 = !DIEnumerator(name: "PROP_UNIT_CAMERA", value: 589824, isUnsigned: true)
!1078 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1079, line: 123, baseType: !6, size: 32, elements: !1080)
!1079 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1080 = !{!1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089}
!1081 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!1082 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!1083 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!1084 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!1085 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!1086 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!1087 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!1088 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!1089 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!1090 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1012, line: 166, baseType: !6, size: 32, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1096, !1097, !1098}
!1092 = !DIEnumerator(name: "UI_PIE_DEGREES_RANGE_LARGE", value: 1, isUnsigned: true)
!1093 = !DIEnumerator(name: "UI_PIE_INITIAL_DIRECTION", value: 2, isUnsigned: true)
!1094 = !DIEnumerator(name: "UI_PIE_DRAG_STYLE", value: 4, isUnsigned: true)
!1095 = !DIEnumerator(name: "UI_PIE_INVALID_DIR", value: 8, isUnsigned: true)
!1096 = !DIEnumerator(name: "UI_PIE_CLICK_STYLE", value: 16, isUnsigned: true)
!1097 = !DIEnumerator(name: "UI_PIE_ANIMATION_FINISHED", value: 32, isUnsigned: true)
!1098 = !DIEnumerator(name: "UI_PIE_GESTURE_END_WAIT", value: 64, isUnsigned: true)
!1099 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RadialDirection", file: !1012, line: 126, baseType: !1100, size: 32, elements: !1101)
!1100 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1101 = !{!1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110}
!1102 = !DIEnumerator(name: "UI_RADIAL_NONE", value: -1)
!1103 = !DIEnumerator(name: "UI_RADIAL_N", value: 0)
!1104 = !DIEnumerator(name: "UI_RADIAL_NE", value: 1)
!1105 = !DIEnumerator(name: "UI_RADIAL_E", value: 2)
!1106 = !DIEnumerator(name: "UI_RADIAL_SE", value: 3)
!1107 = !DIEnumerator(name: "UI_RADIAL_S", value: 4)
!1108 = !DIEnumerator(name: "UI_RADIAL_SW", value: 5)
!1109 = !DIEnumerator(name: "UI_RADIAL_W", value: 6)
!1110 = !DIEnumerator(name: "UI_RADIAL_NW", value: 7)
!1111 = !{!1112, !1113, !2030, !2032, !2057, !2156, !1100, !2159, !1946, !2289, !1855, !2299, !2308, !2314, !2321, !1180, !2327}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !20, line: 85, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !3, line: 133, size: 704, elements: !1116)
!1116 = !{!1117, !1126, !2007, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !1115, file: !3, line: 134, baseType: !1118, size: 192)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiItem", file: !3, line: 126, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiItem", file: !3, line: 122, size: 192, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1125}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1119, file: !3, line: 123, baseType: !1112, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1119, file: !3, line: 123, baseType: !1112, size: 64, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1119, file: !3, line: 124, baseType: !1124, size: 32, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiItemType", file: !3, line: 120, baseType: !5)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1119, file: !3, line: 125, baseType: !1100, size: 32, offset: 160)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1115, file: !3, line: 136, baseType: !1127, size: 64, offset: 192)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayoutRoot", file: !3, line: 94, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayoutRoot", file: !3, line: 79, size: 640, elements: !1130)
!1130 = !{!1131, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1146, !1147, !1196, !2006}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1129, file: !3, line: 80, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1129, file: !3, line: 80, baseType: !1132, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1129, file: !3, line: 82, baseType: !1100, size: 32, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !1129, file: !3, line: 83, baseType: !1100, size: 32, offset: 160)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "emw", scope: !1129, file: !3, line: 85, baseType: !1100, size: 32, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "emh", scope: !1129, file: !3, line: 85, baseType: !1100, size: 32, offset: 224)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1129, file: !3, line: 86, baseType: !1100, size: 32, offset: 256)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "handlefunc", scope: !1129, file: !3, line: 88, baseType: !1140, size: 64, offset: 320)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuHandleFunc", file: !20, line: 346, baseType: !1141)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{null, !1144, !1112, !1100}
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !958, line: 44, flags: DIFlagFwdDecl)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1129, file: !3, line: 89, baseType: !1112, size: 64, offset: 384)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1129, file: !3, line: 91, baseType: !1148, size: 64, offset: 448)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiStyle", file: !1150, line: 120, baseType: !1151)
!1150 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiStyle", file: !1150, line: 96, size: 1856, elements: !1152)
!1152 = !{!1153, !1155, !1156, !1161, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1151, file: !1150, line: 97, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1151, file: !1150, line: 97, baseType: !1154, size: 64, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1151, file: !1150, line: 99, baseType: !1157, size: 512, offset: 128)
!1157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 512, elements: !1159)
!1158 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1159 = !{!1160}
!1160 = !DISubrange(count: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "paneltitle", scope: !1151, file: !1150, line: 101, baseType: !1162, size: 256, offset: 640)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiFontStyle", file: !1150, line: 84, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiFontStyle", file: !1150, line: 73, size: 256, elements: !1164)
!1164 = !{!1165, !1167, !1168, !1169, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1181}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "uifont_id", scope: !1163, file: !1150, line: 74, baseType: !1166, size: 16)
!1166 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1163, file: !1150, line: 75, baseType: !1166, size: 16, offset: 16)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !1163, file: !1150, line: 76, baseType: !1166, size: 16, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1163, file: !1150, line: 77, baseType: !1170, size: 48, offset: 48)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 48, elements: !1171)
!1171 = !{!1172}
!1172 = !DISubrange(count: 6)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !1163, file: !1150, line: 78, baseType: !1166, size: 16, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "bold", scope: !1163, file: !1150, line: 78, baseType: !1166, size: 16, offset: 112)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !1163, file: !1150, line: 79, baseType: !1166, size: 16, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "shadx", scope: !1163, file: !1150, line: 80, baseType: !1166, size: 16, offset: 144)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "shady", scope: !1163, file: !1150, line: 80, baseType: !1166, size: 16, offset: 160)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1163, file: !1150, line: 81, baseType: !1166, size: 16, offset: 176)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "shadowalpha", scope: !1163, file: !1150, line: 82, baseType: !1180, size: 32, offset: 192)
!1180 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "shadowcolor", scope: !1163, file: !1150, line: 83, baseType: !1180, size: 32, offset: 224)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "grouplabel", scope: !1151, file: !1150, line: 102, baseType: !1162, size: 256, offset: 896)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "widgetlabel", scope: !1151, file: !1150, line: 103, baseType: !1162, size: 256, offset: 1152)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "widget", scope: !1151, file: !1150, line: 104, baseType: !1162, size: 256, offset: 1408)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "panelzoom", scope: !1151, file: !1150, line: 106, baseType: !1180, size: 32, offset: 1664)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "minlabelchars", scope: !1151, file: !1150, line: 108, baseType: !1166, size: 16, offset: 1696)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "minwidgetchars", scope: !1151, file: !1150, line: 109, baseType: !1166, size: 16, offset: 1712)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "columnspace", scope: !1151, file: !1150, line: 111, baseType: !1166, size: 16, offset: 1728)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "templatespace", scope: !1151, file: !1150, line: 112, baseType: !1166, size: 16, offset: 1744)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "boxspace", scope: !1151, file: !1150, line: 113, baseType: !1166, size: 16, offset: 1760)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacex", scope: !1151, file: !1150, line: 114, baseType: !1166, size: 16, offset: 1776)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacey", scope: !1151, file: !1150, line: 115, baseType: !1166, size: 16, offset: 1792)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "panelspace", scope: !1151, file: !1150, line: 116, baseType: !1166, size: 16, offset: 1808)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "panelouter", scope: !1151, file: !1150, line: 117, baseType: !1166, size: 16, offset: 1824)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1151, file: !1150, line: 119, baseType: !1166, size: 16, offset: 1840)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1129, file: !3, line: 92, baseType: !1197, size: 64, offset: 512)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlock", file: !20, line: 83, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !1012, line: 320, size: 5440, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1210, !1303, !1304, !1305, !1306, !1307, !1308, !1312, !1316, !1325, !1326, !1327, !1332, !1333, !1334, !1336, !1337, !1338, !1339, !1341, !1342, !1394, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1414, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1986, !1987, !1988, !1991, !1993, !1994, !1995}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1199, file: !1012, line: 321, baseType: !1197, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1199, file: !1012, line: 321, baseType: !1197, size: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "buttons", scope: !1199, file: !1012, line: 323, baseType: !1204, size: 128, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1205, line: 71, baseType: !1206)
!1205 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1205, line: 69, size: 128, elements: !1207)
!1207 = !{!1208, !1209}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1206, file: !1205, line: 70, baseType: !1112, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1206, file: !1205, line: 70, baseType: !1112, size: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !1199, file: !1012, line: 324, baseType: !1211, size: 64, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "Panel", file: !1213, line: 113, baseType: !1214)
!1213 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Panel", file: !1213, line: 97, size: 2176, elements: !1215)
!1215 = !{!1216, !1218, !1219, !1285, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1214, file: !1213, line: 98, baseType: !1217, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1214, file: !1213, line: 98, baseType: !1217, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1214, file: !1213, line: 100, baseType: !1220, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PanelType", file: !1222, line: 169, size: 3264, elements: !1223)
!1222 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1240, !1244, !1245}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1221, file: !1222, line: 170, baseType: !1220, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1221, file: !1222, line: 170, baseType: !1220, size: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1221, file: !1222, line: 172, baseType: !1157, size: 512, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1221, file: !1222, line: 173, baseType: !1157, size: 512, offset: 640)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !1221, file: !1222, line: 174, baseType: !1157, size: 512, offset: 1152)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1221, file: !1222, line: 175, baseType: !1157, size: 512, offset: 1664)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1221, file: !1222, line: 176, baseType: !1157, size: 512, offset: 2176)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "space_type", scope: !1221, file: !1222, line: 177, baseType: !1100, size: 32, offset: 2688)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !1221, file: !1222, line: 178, baseType: !1100, size: 32, offset: 2720)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1221, file: !1222, line: 180, baseType: !1100, size: 32, offset: 2752)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1221, file: !1222, line: 183, baseType: !1235, size: 64, offset: 2816)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!1100, !1238, !1220}
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "draw_header", scope: !1221, file: !1222, line: 185, baseType: !1241, size: 64, offset: 2880)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{null, !1238, !1217}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1221, file: !1222, line: 187, baseType: !1241, size: 64, offset: 2944)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1221, file: !1222, line: 190, baseType: !1246, size: 256, offset: 3008)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !958, line: 436, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !958, line: 430, size: 256, elements: !1248)
!1248 = !{!1249, !1250, !1254, !1280}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1247, file: !958, line: 431, baseType: !1112, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1247, file: !958, line: 432, baseType: !1251, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !958, line: 417, baseType: !1253)
!1253 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !958, line: 41, flags: DIFlagFwdDecl)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1247, file: !958, line: 433, baseType: !1255, size: 64, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !958, line: 408, baseType: !1256)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!1100, !1144, !1259, !1269, !1271}
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !958, line: 55, size: 192, elements: !1261)
!1261 = !{!1262, !1266, !1268}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1260, file: !958, line: 58, baseType: !1263, size: 64)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1260, file: !958, line: 56, size: 64, elements: !1264)
!1264 = !{!1265}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1263, file: !958, line: 57, baseType: !1112, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1260, file: !958, line: 60, baseType: !1267, size: 64, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1260, file: !958, line: 61, baseType: !1112, size: 64, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !958, line: 38, flags: DIFlagFwdDecl)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !958, line: 348, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !958, line: 337, size: 256, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278, !1279}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1273, file: !958, line: 339, baseType: !1112, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1273, file: !958, line: 342, baseType: !1269, size: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1273, file: !958, line: 345, baseType: !1100, size: 32, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1273, file: !958, line: 347, baseType: !1100, size: 32, offset: 160)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1273, file: !958, line: 347, baseType: !1100, size: 32, offset: 192)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1247, file: !958, line: 434, baseType: !1281, size: 64, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !958, line: 409, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{null, !1112}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1214, file: !1213, line: 101, baseType: !1286, size: 64, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "panelname", scope: !1214, file: !1213, line: 103, baseType: !1157, size: 512, offset: 256)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "tabname", scope: !1214, file: !1213, line: 103, baseType: !1157, size: 512, offset: 768)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "drawname", scope: !1214, file: !1213, line: 104, baseType: !1157, size: 512, offset: 1280)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "ofsx", scope: !1214, file: !1213, line: 105, baseType: !1100, size: 32, offset: 1792)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "ofsy", scope: !1214, file: !1213, line: 105, baseType: !1100, size: 32, offset: 1824)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1214, file: !1213, line: 105, baseType: !1100, size: 32, offset: 1856)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1214, file: !1213, line: 105, baseType: !1100, size: 32, offset: 1888)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "labelofs", scope: !1214, file: !1213, line: 106, baseType: !1166, size: 16, offset: 1920)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1214, file: !1213, line: 106, baseType: !1166, size: 16, offset: 1936)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1214, file: !1213, line: 107, baseType: !1166, size: 16, offset: 1952)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_flag", scope: !1214, file: !1213, line: 107, baseType: !1166, size: 16, offset: 1968)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1214, file: !1213, line: 108, baseType: !1166, size: 16, offset: 1984)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "snap", scope: !1214, file: !1213, line: 109, baseType: !1166, size: 16, offset: 2000)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "sortorder", scope: !1214, file: !1213, line: 110, baseType: !1100, size: 32, offset: 2016)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "paneltab", scope: !1214, file: !1213, line: 111, baseType: !1217, size: 64, offset: 2048)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "activedata", scope: !1214, file: !1213, line: 112, baseType: !1112, size: 64, offset: 2112)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "oldblock", scope: !1199, file: !1012, line: 325, baseType: !1197, size: 64, offset: 320)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "butstore", scope: !1199, file: !1012, line: 327, baseType: !1204, size: 128, offset: 384)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "layouts", scope: !1199, file: !1012, line: 329, baseType: !1204, size: 128, offset: 512)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "curlayout", scope: !1199, file: !1012, line: 330, baseType: !1286, size: 64, offset: 640)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "contexts", scope: !1199, file: !1012, line: 332, baseType: !1204, size: 128, offset: 704)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1199, file: !1012, line: 334, baseType: !1309, size: 1024, offset: 832)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 1024, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !1199, file: !1012, line: 336, baseType: !1313, size: 512, offset: 1856)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 512, elements: !1314)
!1314 = !{!1315, !1315}
!1315 = !DISubrange(count: 4)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1199, file: !1012, line: 338, baseType: !1317, size: 128, offset: 2368)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1318, line: 95, baseType: !1319)
!1318 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1318, line: 92, size: 128, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1319, file: !1318, line: 93, baseType: !1180, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1319, file: !1318, line: 93, baseType: !1180, size: 32, offset: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1319, file: !1318, line: 94, baseType: !1180, size: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1319, file: !1318, line: 94, baseType: !1180, size: 32, offset: 96)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !1199, file: !1012, line: 339, baseType: !1180, size: 32, offset: 2496)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "puphash", scope: !1199, file: !1012, line: 341, baseType: !6, size: 32, offset: 2528)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1199, file: !1012, line: 343, baseType: !1328, size: 64, offset: 2560)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleFunc", file: !20, line: 336, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{null, !1144, !1112, !1112}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !1199, file: !1012, line: 344, baseType: !1112, size: 64, offset: 2624)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !1199, file: !1012, line: 345, baseType: !1112, size: 64, offset: 2688)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !1199, file: !1012, line: 347, baseType: !1335, size: 64, offset: 2752)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleNFunc", file: !20, line: 338, baseType: !1329)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !1199, file: !1012, line: 348, baseType: !1112, size: 64, offset: 2816)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func", scope: !1199, file: !1012, line: 350, baseType: !1140, size: 64, offset: 2880)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func_arg", scope: !1199, file: !1012, line: 351, baseType: !1112, size: 64, offset: 2944)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func", scope: !1199, file: !1012, line: 353, baseType: !1340, size: 64, offset: 3008)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleFunc", file: !20, line: 341, baseType: !1141)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func_arg", scope: !1199, file: !1012, line: 354, baseType: !1112, size: 64, offset: 3072)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "block_event_func", scope: !1199, file: !1012, line: 357, baseType: !1343, size: 64, offset: 3136)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!1100, !1238, !1346, !1347}
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !1021, line: 421, size: 960, elements: !1350)
!1350 = !{!1351, !1353, !1354, !1355, !1356, !1357, !1358, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1382, !1390, !1391, !1392, !1393}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1349, file: !1021, line: 422, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1349, file: !1021, line: 422, baseType: !1352, size: 64, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1349, file: !1021, line: 424, baseType: !1166, size: 16, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1349, file: !1021, line: 425, baseType: !1166, size: 16, offset: 144)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1349, file: !1021, line: 426, baseType: !1100, size: 32, offset: 160)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1349, file: !1021, line: 426, baseType: !1100, size: 32, offset: 192)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !1349, file: !1021, line: 427, baseType: !1359, size: 64, offset: 224)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 64, elements: !1360)
!1360 = !{!1361}
!1361 = !DISubrange(count: 2)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !1349, file: !1021, line: 428, baseType: !1170, size: 48, offset: 288)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !1349, file: !1021, line: 431, baseType: !1158, size: 8, offset: 336)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1349, file: !1021, line: 432, baseType: !1158, size: 8, offset: 344)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !1349, file: !1021, line: 435, baseType: !1166, size: 16, offset: 352)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !1349, file: !1021, line: 436, baseType: !1166, size: 16, offset: 368)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !1349, file: !1021, line: 437, baseType: !1100, size: 32, offset: 384)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !1349, file: !1021, line: 437, baseType: !1100, size: 32, offset: 416)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !1349, file: !1021, line: 438, baseType: !1370, size: 64, offset: 448)
!1370 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !1349, file: !1021, line: 439, baseType: !1100, size: 32, offset: 512)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !1349, file: !1021, line: 439, baseType: !1100, size: 32, offset: 544)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1349, file: !1021, line: 442, baseType: !1166, size: 16, offset: 576)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1349, file: !1021, line: 442, baseType: !1166, size: 16, offset: 592)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1349, file: !1021, line: 442, baseType: !1166, size: 16, offset: 608)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !1349, file: !1021, line: 442, baseType: !1166, size: 16, offset: 624)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !1349, file: !1021, line: 443, baseType: !1166, size: 16, offset: 640)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !1349, file: !1021, line: 446, baseType: !1166, size: 16, offset: 656)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !1349, file: !1021, line: 449, baseType: !1380, size: 64, offset: 704)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !1349, file: !1021, line: 452, baseType: !1383, size: 64, offset: 768)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !1021, line: 463, size: 128, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !1384, file: !1021, line: 464, baseType: !1100, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !1384, file: !1021, line: 465, baseType: !1180, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !1384, file: !1021, line: 466, baseType: !1180, size: 32, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !1384, file: !1021, line: 467, baseType: !1180, size: 32, offset: 96)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1349, file: !1021, line: 455, baseType: !1166, size: 16, offset: 832)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !1349, file: !1021, line: 456, baseType: !1166, size: 16, offset: 848)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1349, file: !1021, line: 457, baseType: !1100, size: 32, offset: 864)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1349, file: !1021, line: 458, baseType: !1112, size: 64, offset: 896)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra", scope: !1199, file: !1012, line: 360, baseType: !1395, size: 64, offset: 3200)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{null, !1238, !1112, !1112, !1112, !1398}
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1318, line: 89, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1318, line: 86, size: 128, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1400, file: !1318, line: 87, baseType: !1100, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1400, file: !1318, line: 87, baseType: !1100, size: 32, offset: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1400, file: !1318, line: 88, baseType: !1100, size: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1400, file: !1318, line: 88, baseType: !1100, size: 32, offset: 96)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg1", scope: !1199, file: !1012, line: 361, baseType: !1112, size: 64, offset: 3264)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg2", scope: !1199, file: !1012, line: 362, baseType: !1112, size: 64, offset: 3328)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1199, file: !1012, line: 364, baseType: !1100, size: 32, offset: 3392)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !1199, file: !1012, line: 365, baseType: !1166, size: 16, offset: 3424)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1199, file: !1012, line: 367, baseType: !1158, size: 8, offset: 3440)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1199, file: !1012, line: 368, baseType: !1158, size: 8, offset: 3448)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open", scope: !1199, file: !1012, line: 369, baseType: !1413, size: 8, offset: 3456)
!1413 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1199, file: !1012, line: 370, baseType: !1415, size: 56, offset: 3464)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 56, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 7)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open_last", scope: !1199, file: !1012, line: 371, baseType: !1370, size: 64, offset: 3520)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !1199, file: !1012, line: 373, baseType: !1380, size: 64, offset: 3584)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1199, file: !1012, line: 375, baseType: !1158, size: 8, offset: 3648)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1199, file: !1012, line: 376, baseType: !1158, size: 8, offset: 3656)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tooltipdisabled", scope: !1199, file: !1012, line: 377, baseType: !1158, size: 8, offset: 3664)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "endblock", scope: !1199, file: !1012, line: 378, baseType: !1158, size: 8, offset: 3672)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "bounds_type", scope: !1199, file: !1012, line: 380, baseType: !1425, size: 32, offset: 3680)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBlockBoundsCalc", file: !20, line: 434, baseType: !19)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "mx", scope: !1199, file: !1012, line: 381, baseType: !1100, size: 32, offset: 3712)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "my", scope: !1199, file: !1012, line: 381, baseType: !1100, size: 32, offset: 3744)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1199, file: !1012, line: 382, baseType: !1100, size: 32, offset: 3776)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "minbounds", scope: !1199, file: !1012, line: 382, baseType: !1100, size: 32, offset: 3808)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1199, file: !1012, line: 384, baseType: !1317, size: 128, offset: 3840)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "saferct", scope: !1199, file: !1012, line: 385, baseType: !1204, size: 128, offset: 3968)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1199, file: !1012, line: 387, baseType: !1433, size: 64, offset: 4096)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupBlockHandle", file: !20, line: 84, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockHandle", file: !1012, line: 491, size: 1536, elements: !1436)
!1436 = !{!1437, !1857, !1858, !1859, !1860, !1861, !1862, !1866, !1867, !1886, !1887, !1892, !1972, !1975, !1976, !1977, !1978, !1979, !1980, !1983, !1984, !1985}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1435, file: !1012, line: 493, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !1213, line: 230, size: 3072, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1856}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1439, file: !1213, line: 231, baseType: !1438, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1439, file: !1213, line: 231, baseType: !1438, size: 64, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1439, file: !1213, line: 233, baseType: !1444, size: 1280, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !1445, line: 71, baseType: !1446)
!1445 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !1445, line: 40, size: 1280, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451, !1452, !1453, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1472, !1473, !1474, !1477}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1446, file: !1445, line: 41, baseType: !1317, size: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1446, file: !1445, line: 41, baseType: !1317, size: 128, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1446, file: !1445, line: 42, baseType: !1399, size: 128, offset: 256)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !1446, file: !1445, line: 42, baseType: !1399, size: 128, offset: 384)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1446, file: !1445, line: 43, baseType: !1399, size: 128, offset: 512)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1446, file: !1445, line: 45, baseType: !1454, size: 64, offset: 640)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 64, elements: !1360)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1446, file: !1445, line: 45, baseType: !1454, size: 64, offset: 704)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !1446, file: !1445, line: 46, baseType: !1180, size: 32, offset: 768)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !1446, file: !1445, line: 46, baseType: !1180, size: 32, offset: 800)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !1446, file: !1445, line: 48, baseType: !1166, size: 16, offset: 832)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !1446, file: !1445, line: 49, baseType: !1166, size: 16, offset: 848)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !1446, file: !1445, line: 51, baseType: !1166, size: 16, offset: 864)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !1446, file: !1445, line: 52, baseType: !1166, size: 16, offset: 880)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !1446, file: !1445, line: 53, baseType: !1166, size: 16, offset: 896)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1446, file: !1445, line: 55, baseType: !1166, size: 16, offset: 912)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1446, file: !1445, line: 56, baseType: !1166, size: 16, offset: 928)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1446, file: !1445, line: 58, baseType: !1166, size: 16, offset: 944)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1446, file: !1445, line: 58, baseType: !1166, size: 16, offset: 960)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !1446, file: !1445, line: 59, baseType: !1166, size: 16, offset: 976)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !1446, file: !1445, line: 59, baseType: !1166, size: 16, offset: 992)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1446, file: !1445, line: 61, baseType: !1166, size: 16, offset: 1008)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !1446, file: !1445, line: 63, baseType: !1471, size: 64, offset: 1024)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !1446, file: !1445, line: 64, baseType: !1100, size: 32, offset: 1088)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !1446, file: !1445, line: 65, baseType: !1100, size: 32, offset: 1120)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !1446, file: !1445, line: 68, baseType: !1475, size: 64, offset: 1152)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !1445, line: 68, flags: DIFlagFwdDecl)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !1446, file: !1445, line: 69, baseType: !1478, size: 64, offset: 1216)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1021, line: 490, size: 768, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1479, file: !1021, line: 491, baseType: !1478, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1479, file: !1021, line: 491, baseType: !1478, size: 64, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1479, file: !1021, line: 493, baseType: !1484, size: 64, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !1486, line: 169, size: 2048, elements: !1487)
!1486 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1487 = !{!1488, !1489, !1490, !1491, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1599, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1485, file: !1486, line: 170, baseType: !1484, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1485, file: !1486, line: 170, baseType: !1484, size: 64, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !1485, file: !1486, line: 172, baseType: !1112, size: 64, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1485, file: !1486, line: 174, baseType: !1492, size: 64, offset: 192)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !1213, line: 49, size: 1984, elements: !1494)
!1494 = !{!1495, !1554, !1555, !1556, !1557, !1558, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1493, file: !1213, line: 50, baseType: !1496, size: 960)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1497, line: 130, baseType: !1498)
!1497 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1497, line: 117, size: 960, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1504, !1523, !1527, !1528, !1529, !1530, !1531}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1498, file: !1497, line: 118, baseType: !1112, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1498, file: !1497, line: 118, baseType: !1112, size: 64, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1498, file: !1497, line: 119, baseType: !1503, size: 64, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1498, file: !1497, line: 120, baseType: !1505, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1497, line: 136, size: 17600, elements: !1507)
!1507 = !{!1508, !1509, !1511, !1514, !1518, !1519, !1520}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1506, file: !1497, line: 137, baseType: !1496, size: 960)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1506, file: !1497, line: 138, baseType: !1510, size: 64, offset: 960)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1506, file: !1497, line: 139, baseType: !1512, size: 64, offset: 1024)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1497, line: 43, flags: DIFlagFwdDecl)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1506, file: !1497, line: 140, baseType: !1515, size: 8192, offset: 1088)
!1515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 8192, elements: !1516)
!1516 = !{!1517}
!1517 = !DISubrange(count: 1024)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1506, file: !1497, line: 141, baseType: !1515, size: 8192, offset: 9280)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1506, file: !1497, line: 148, baseType: !1505, size: 64, offset: 17472)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1506, file: !1497, line: 150, baseType: !1521, size: 64, offset: 17536)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1497, line: 45, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1498, file: !1497, line: 121, baseType: !1524, size: 528, offset: 256)
!1524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 528, elements: !1525)
!1525 = !{!1526}
!1526 = !DISubrange(count: 66)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1498, file: !1497, line: 126, baseType: !1166, size: 16, offset: 784)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1498, file: !1497, line: 127, baseType: !1100, size: 32, offset: 800)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1498, file: !1497, line: 128, baseType: !1100, size: 32, offset: 832)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1498, file: !1497, line: 128, baseType: !1100, size: 32, offset: 864)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1498, file: !1497, line: 129, baseType: !1532, size: 64, offset: 896)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1497, line: 75, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1497, line: 62, size: 1024, elements: !1535)
!1535 = !{!1536, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1552, !1553}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1534, file: !1497, line: 63, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1534, file: !1497, line: 63, baseType: !1537, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1534, file: !1497, line: 64, baseType: !1158, size: 8, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1534, file: !1497, line: 64, baseType: !1158, size: 8, offset: 136)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1534, file: !1497, line: 65, baseType: !1166, size: 16, offset: 144)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1534, file: !1497, line: 66, baseType: !1157, size: 512, offset: 160)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1534, file: !1497, line: 67, baseType: !1100, size: 32, offset: 672)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1534, file: !1497, line: 69, baseType: !1545, size: 256, offset: 704)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1497, line: 60, baseType: !1546)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1497, line: 48, size: 256, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1546, file: !1497, line: 49, baseType: !1112, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1546, file: !1497, line: 58, baseType: !1204, size: 128, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1546, file: !1497, line: 59, baseType: !1100, size: 32, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1546, file: !1497, line: 59, baseType: !1100, size: 32, offset: 224)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1534, file: !1497, line: 70, baseType: !1100, size: 32, offset: 960)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1534, file: !1497, line: 74, baseType: !1100, size: 32, offset: 992)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !1493, file: !1213, line: 52, baseType: !1204, size: 128, offset: 960)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !1493, file: !1213, line: 53, baseType: !1204, size: 128, offset: 1088)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !1493, file: !1213, line: 54, baseType: !1204, size: 128, offset: 1216)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1493, file: !1213, line: 55, baseType: !1204, size: 128, offset: 1344)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1493, file: !1213, line: 57, baseType: !1559, size: 64, offset: 1472)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1213, line: 45, flags: DIFlagFwdDecl)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !1493, file: !1213, line: 58, baseType: !1559, size: 64, offset: 1536)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !1493, file: !1213, line: 60, baseType: !1100, size: 32, offset: 1600)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1493, file: !1213, line: 61, baseType: !1100, size: 32, offset: 1632)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1493, file: !1213, line: 63, baseType: !1166, size: 16, offset: 1664)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1493, file: !1213, line: 64, baseType: !1166, size: 16, offset: 1680)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1493, file: !1213, line: 65, baseType: !1166, size: 16, offset: 1696)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1493, file: !1213, line: 66, baseType: !1166, size: 16, offset: 1712)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1493, file: !1213, line: 67, baseType: !1166, size: 16, offset: 1728)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !1493, file: !1213, line: 68, baseType: !1166, size: 16, offset: 1744)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !1493, file: !1213, line: 69, baseType: !1166, size: 16, offset: 1760)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !1493, file: !1213, line: 70, baseType: !1166, size: 16, offset: 1776)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1493, file: !1213, line: 71, baseType: !1166, size: 16, offset: 1792)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !1493, file: !1213, line: 73, baseType: !1166, size: 16, offset: 1808)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !1493, file: !1213, line: 74, baseType: !1166, size: 16, offset: 1824)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1493, file: !1213, line: 76, baseType: !1166, size: 16, offset: 1840)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !1493, file: !1213, line: 78, baseType: !1478, size: 64, offset: 1856)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1493, file: !1213, line: 79, baseType: !1112, size: 64, offset: 1920)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !1485, file: !1486, line: 175, baseType: !1492, size: 64, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !1485, file: !1486, line: 176, baseType: !1157, size: 512, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !1485, file: !1486, line: 178, baseType: !1166, size: 16, offset: 832)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !1485, file: !1486, line: 178, baseType: !1166, size: 16, offset: 848)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1485, file: !1486, line: 178, baseType: !1166, size: 16, offset: 864)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1485, file: !1486, line: 178, baseType: !1166, size: 16, offset: 880)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !1485, file: !1486, line: 179, baseType: !1166, size: 16, offset: 896)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !1485, file: !1486, line: 180, baseType: !1166, size: 16, offset: 912)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1485, file: !1486, line: 181, baseType: !1166, size: 16, offset: 928)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1485, file: !1486, line: 182, baseType: !1166, size: 16, offset: 944)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !1485, file: !1486, line: 183, baseType: !1166, size: 16, offset: 960)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !1485, file: !1486, line: 184, baseType: !1166, size: 16, offset: 976)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !1485, file: !1486, line: 185, baseType: !1166, size: 16, offset: 992)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !1485, file: !1486, line: 186, baseType: !1166, size: 16, offset: 1008)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1485, file: !1486, line: 188, baseType: !1100, size: 32, offset: 1024)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !1485, file: !1486, line: 190, baseType: !1166, size: 16, offset: 1056)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !1485, file: !1486, line: 191, baseType: !1166, size: 16, offset: 1072)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !1485, file: !1486, line: 194, baseType: !1352, size: 64, offset: 1088)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !1485, file: !1486, line: 196, baseType: !1597, size: 64, offset: 1152)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !1486, line: 55, flags: DIFlagFwdDecl)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !1485, file: !1486, line: 198, baseType: !1600, size: 64, offset: 1216)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !1021, line: 398, size: 448, elements: !1602)
!1602 = !{!1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1601, file: !1021, line: 399, baseType: !1600, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1601, file: !1021, line: 399, baseType: !1600, size: 64, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1601, file: !1021, line: 400, baseType: !1100, size: 32, offset: 128)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1601, file: !1021, line: 401, baseType: !1100, size: 32, offset: 160)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1601, file: !1021, line: 402, baseType: !1100, size: 32, offset: 192)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1601, file: !1021, line: 403, baseType: !1100, size: 32, offset: 224)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1601, file: !1021, line: 404, baseType: !1100, size: 32, offset: 256)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1601, file: !1021, line: 405, baseType: !1100, size: 32, offset: 288)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1601, file: !1021, line: 407, baseType: !1112, size: 64, offset: 320)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1601, file: !1021, line: 414, baseType: !1112, size: 64, offset: 384)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !1485, file: !1486, line: 200, baseType: !1100, size: 32, offset: 1280)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !1485, file: !1486, line: 200, baseType: !1100, size: 32, offset: 1312)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !1485, file: !1486, line: 201, baseType: !1112, size: 64, offset: 1344)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1485, file: !1486, line: 203, baseType: !1204, size: 128, offset: 1408)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1485, file: !1486, line: 204, baseType: !1204, size: 128, offset: 1536)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !1485, file: !1486, line: 205, baseType: !1204, size: 128, offset: 1664)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !1485, file: !1486, line: 207, baseType: !1204, size: 128, offset: 1792)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !1485, file: !1486, line: 208, baseType: !1204, size: 128, offset: 1920)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !1479, file: !1021, line: 495, baseType: !1370, size: 64, offset: 192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1479, file: !1021, line: 496, baseType: !1100, size: 32, offset: 256)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1479, file: !1021, line: 497, baseType: !1112, size: 64, offset: 320)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1479, file: !1021, line: 499, baseType: !1370, size: 64, offset: 384)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1479, file: !1021, line: 500, baseType: !1370, size: 64, offset: 448)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !1479, file: !1021, line: 502, baseType: !1370, size: 64, offset: 512)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !1479, file: !1021, line: 503, baseType: !1370, size: 64, offset: 576)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1479, file: !1021, line: 504, baseType: !1370, size: 64, offset: 640)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !1479, file: !1021, line: 505, baseType: !1100, size: 32, offset: 704)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !1439, file: !1213, line: 234, baseType: !1399, size: 128, offset: 1408)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !1439, file: !1213, line: 235, baseType: !1399, size: 128, offset: 1536)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1439, file: !1213, line: 236, baseType: !1166, size: 16, offset: 1664)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1439, file: !1213, line: 236, baseType: !1166, size: 16, offset: 1680)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1439, file: !1213, line: 238, baseType: !1166, size: 16, offset: 1696)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !1439, file: !1213, line: 239, baseType: !1166, size: 16, offset: 1712)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1439, file: !1213, line: 240, baseType: !1166, size: 16, offset: 1728)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1439, file: !1213, line: 241, baseType: !1166, size: 16, offset: 1744)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1439, file: !1213, line: 243, baseType: !1180, size: 32, offset: 1760)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1439, file: !1213, line: 244, baseType: !1166, size: 16, offset: 1792)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1439, file: !1213, line: 244, baseType: !1166, size: 16, offset: 1808)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1439, file: !1213, line: 246, baseType: !1166, size: 16, offset: 1824)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !1439, file: !1213, line: 247, baseType: !1166, size: 16, offset: 1840)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1439, file: !1213, line: 248, baseType: !1166, size: 16, offset: 1856)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1439, file: !1213, line: 249, baseType: !1166, size: 16, offset: 1872)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !1439, file: !1213, line: 250, baseType: !1166, size: 16, offset: 1888)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1439, file: !1213, line: 251, baseType: !1166, size: 16, offset: 1904)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1439, file: !1213, line: 253, baseType: !1648, size: 64, offset: 1920)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !1222, line: 116, size: 1472, elements: !1650)
!1650 = !{!1651, !1652, !1653, !1654, !1700, !1701, !1705, !1820, !1824, !1828, !1829, !1830, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1649, file: !1222, line: 117, baseType: !1648, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1649, file: !1222, line: 117, baseType: !1648, size: 64, offset: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !1649, file: !1222, line: 119, baseType: !1100, size: 32, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1649, file: !1222, line: 122, baseType: !1655, size: 64, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{null, !1658, !1438}
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !1486, line: 128, size: 2816, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1679, !1680, !1681, !1682, !1683, !1694, !1695, !1696, !1697, !1698, !1699}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1659, file: !1486, line: 129, baseType: !1496, size: 960)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !1659, file: !1486, line: 131, baseType: !1484, size: 64, offset: 960)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !1659, file: !1486, line: 131, baseType: !1484, size: 64, offset: 1024)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !1659, file: !1486, line: 132, baseType: !1204, size: 128, offset: 1088)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1659, file: !1486, line: 134, baseType: !1100, size: 32, offset: 1216)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !1659, file: !1486, line: 135, baseType: !1166, size: 16, offset: 1248)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !1659, file: !1486, line: 136, baseType: !1166, size: 16, offset: 1264)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !1659, file: !1486, line: 138, baseType: !1204, size: 128, offset: 1280)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1659, file: !1486, line: 140, baseType: !1204, size: 128, offset: 1408)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !1659, file: !1486, line: 142, baseType: !1671, size: 320, offset: 1536)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !1486, line: 106, size: 320, elements: !1672)
!1672 = !{!1673, !1674, !1675, !1676, !1677, !1678}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1671, file: !1486, line: 107, baseType: !1204, size: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !1671, file: !1486, line: 108, baseType: !1100, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !1671, file: !1486, line: 109, baseType: !1100, size: 32, offset: 160)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1671, file: !1486, line: 110, baseType: !1100, size: 32, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1671, file: !1486, line: 110, baseType: !1100, size: 32, offset: 224)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !1671, file: !1486, line: 111, baseType: !1478, size: 64, offset: 256)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !1659, file: !1486, line: 144, baseType: !1204, size: 128, offset: 1856)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !1659, file: !1486, line: 146, baseType: !1204, size: 128, offset: 1984)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !1659, file: !1486, line: 148, baseType: !1204, size: 128, offset: 2112)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !1659, file: !1486, line: 150, baseType: !1204, size: 128, offset: 2240)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !1659, file: !1486, line: 151, baseType: !1684, size: 64, offset: 2368)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !1486, line: 310, size: 1344, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1685, file: !1486, line: 311, baseType: !1684, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1685, file: !1486, line: 311, baseType: !1684, size: 64, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1685, file: !1486, line: 313, baseType: !1157, size: 512, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !1685, file: !1486, line: 314, baseType: !1157, size: 512, offset: 640)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !1685, file: !1486, line: 316, baseType: !1204, size: 128, offset: 1152)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !1685, file: !1486, line: 317, baseType: !1100, size: 32, offset: 1280)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1685, file: !1486, line: 317, baseType: !1100, size: 32, offset: 1312)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !1659, file: !1486, line: 152, baseType: !1684, size: 64, offset: 2432)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !1659, file: !1486, line: 153, baseType: !1684, size: 64, offset: 2496)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !1659, file: !1486, line: 155, baseType: !1204, size: 128, offset: 2560)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !1659, file: !1486, line: 156, baseType: !1478, size: 64, offset: 2688)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !1659, file: !1486, line: 158, baseType: !1158, size: 8, offset: 2752)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1659, file: !1486, line: 159, baseType: !1415, size: 56, offset: 2760)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !1649, file: !1222, line: 124, baseType: !1655, size: 64, offset: 256)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1649, file: !1222, line: 126, baseType: !1702, size: 64, offset: 320)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{null, !1238, !1438}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1649, file: !1222, line: 128, baseType: !1706, size: 64, offset: 384)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{null, !1492, !1709, !1438, !1776}
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !1213, line: 203, size: 1280, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1731, !1732, !1733, !1734, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1816, !1817, !1818, !1819}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1710, file: !1213, line: 204, baseType: !1709, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1710, file: !1213, line: 204, baseType: !1709, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1710, file: !1213, line: 206, baseType: !1715, size: 64, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !1213, line: 87, baseType: !1717)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !1213, line: 82, size: 256, elements: !1718)
!1718 = !{!1719, !1721, !1722, !1723, !1729, !1730}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1717, file: !1213, line: 83, baseType: !1720, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1717, file: !1213, line: 83, baseType: !1720, size: 64, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !1717, file: !1213, line: 83, baseType: !1720, size: 64, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1717, file: !1213, line: 84, baseType: !1724, size: 32, offset: 192)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1318, line: 43, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1318, line: 41, size: 32, elements: !1726)
!1726 = !{!1727, !1728}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1725, file: !1318, line: 42, baseType: !1166, size: 16)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1725, file: !1318, line: 42, baseType: !1166, size: 16, offset: 16)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1717, file: !1213, line: 86, baseType: !1166, size: 16, offset: 224)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1717, file: !1213, line: 86, baseType: !1166, size: 16, offset: 240)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1710, file: !1213, line: 206, baseType: !1715, size: 64, offset: 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1710, file: !1213, line: 206, baseType: !1715, size: 64, offset: 256)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1710, file: !1213, line: 206, baseType: !1715, size: 64, offset: 320)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !1710, file: !1213, line: 207, baseType: !1735, size: 64, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !1213, line: 80, baseType: !1493)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !1710, file: !1213, line: 209, baseType: !1399, size: 128, offset: 448)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1710, file: !1213, line: 211, baseType: !1158, size: 8, offset: 576)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !1710, file: !1213, line: 211, baseType: !1158, size: 8, offset: 584)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1710, file: !1213, line: 212, baseType: !1166, size: 16, offset: 592)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1710, file: !1213, line: 212, baseType: !1166, size: 16, offset: 608)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !1710, file: !1213, line: 214, baseType: !1166, size: 16, offset: 624)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1710, file: !1213, line: 215, baseType: !1166, size: 16, offset: 640)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1710, file: !1213, line: 216, baseType: !1166, size: 16, offset: 656)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !1710, file: !1213, line: 217, baseType: !1166, size: 16, offset: 672)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1710, file: !1213, line: 219, baseType: !1158, size: 8, offset: 688)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1710, file: !1213, line: 219, baseType: !1158, size: 8, offset: 696)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1710, file: !1213, line: 221, baseType: !1749, size: 64, offset: 704)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !1222, line: 66, size: 1728, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756, !1757, !1763, !1767, !1771, !1772, !1789, !1793, !1797, !1801, !1805, !1806, !1813, !1814, !1815}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1750, file: !1222, line: 67, baseType: !1749, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1750, file: !1222, line: 67, baseType: !1749, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1750, file: !1222, line: 69, baseType: !1157, size: 512, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !1750, file: !1222, line: 70, baseType: !1100, size: 32, offset: 640)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !1750, file: !1222, line: 71, baseType: !1100, size: 32, offset: 672)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !1750, file: !1222, line: 74, baseType: !1758, size: 64, offset: 704)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!1761, !1238}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !1213, line: 40, flags: DIFlagFwdDecl)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1750, file: !1222, line: 76, baseType: !1764, size: 64, offset: 768)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{null, !1761}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1750, file: !1222, line: 79, baseType: !1768, size: 64, offset: 832)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{null, !1658, !1709}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !1750, file: !1222, line: 81, baseType: !1768, size: 64, offset: 896)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1750, file: !1222, line: 83, baseType: !1773, size: 64, offset: 960)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{null, !1492, !1709, !1776}
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !1021, line: 195, size: 512, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1777, file: !1021, line: 196, baseType: !1776, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1777, file: !1021, line: 196, baseType: !1776, size: 64, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !1777, file: !1021, line: 198, baseType: !1658, size: 64, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1777, file: !1021, line: 199, baseType: !1484, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1777, file: !1021, line: 201, baseType: !1100, size: 32, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1777, file: !1021, line: 202, baseType: !6, size: 32, offset: 288)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1777, file: !1021, line: 202, baseType: !6, size: 32, offset: 320)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1777, file: !1021, line: 202, baseType: !6, size: 32, offset: 352)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1777, file: !1021, line: 202, baseType: !6, size: 32, offset: 384)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !1777, file: !1021, line: 204, baseType: !1112, size: 64, offset: 448)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !1750, file: !1222, line: 86, baseType: !1790, size: 64, offset: 1024)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{null, !1238, !1709}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !1750, file: !1222, line: 89, baseType: !1794, size: 64, offset: 1088)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!1761, !1761}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !1750, file: !1222, line: 92, baseType: !1798, size: 64, offset: 1152)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{null}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !1750, file: !1222, line: 94, baseType: !1802, size: 64, offset: 1216)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{null, !1684}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !1750, file: !1222, line: 96, baseType: !1798, size: 64, offset: 1280)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1750, file: !1222, line: 99, baseType: !1807, size: 64, offset: 1344)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{!1100, !1238, !1380, !1810}
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !1812, line: 71, flags: DIFlagFwdDecl)
!1812 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !1750, file: !1222, line: 102, baseType: !1204, size: 128, offset: 1408)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !1750, file: !1222, line: 105, baseType: !1204, size: 128, offset: 1536)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !1750, file: !1222, line: 110, baseType: !1100, size: 32, offset: 1664)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !1710, file: !1213, line: 223, baseType: !1204, size: 128, offset: 768)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1710, file: !1213, line: 224, baseType: !1204, size: 128, offset: 896)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1710, file: !1213, line: 225, baseType: !1204, size: 128, offset: 1024)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !1710, file: !1213, line: 227, baseType: !1204, size: 128, offset: 1152)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1649, file: !1222, line: 130, baseType: !1821, size: 64, offset: 448)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1438}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !1649, file: !1222, line: 133, baseType: !1825, size: 64, offset: 512)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1112, !1112}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !1649, file: !1222, line: 137, baseType: !1798, size: 64, offset: 576)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !1649, file: !1222, line: 139, baseType: !1802, size: 64, offset: 640)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1649, file: !1222, line: 141, baseType: !1831, size: 64, offset: 704)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{null, !1484, !1709, !1438}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1649, file: !1222, line: 144, baseType: !1807, size: 64, offset: 768)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !1649, file: !1222, line: 147, baseType: !1204, size: 128, offset: 832)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !1649, file: !1222, line: 150, baseType: !1204, size: 128, offset: 960)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !1649, file: !1222, line: 153, baseType: !1204, size: 128, offset: 1088)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !1649, file: !1222, line: 156, baseType: !1100, size: 32, offset: 1216)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !1649, file: !1222, line: 156, baseType: !1100, size: 32, offset: 1248)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !1649, file: !1222, line: 158, baseType: !1100, size: 32, offset: 1280)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !1649, file: !1222, line: 158, baseType: !1100, size: 32, offset: 1312)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !1649, file: !1222, line: 160, baseType: !1100, size: 32, offset: 1344)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !1649, file: !1222, line: 162, baseType: !1166, size: 16, offset: 1376)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1649, file: !1222, line: 162, baseType: !1166, size: 16, offset: 1392)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !1649, file: !1222, line: 164, baseType: !1166, size: 16, offset: 1408)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !1439, file: !1213, line: 255, baseType: !1204, size: 128, offset: 1984)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !1439, file: !1213, line: 256, baseType: !1204, size: 128, offset: 2112)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !1439, file: !1213, line: 257, baseType: !1204, size: 128, offset: 2240)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !1439, file: !1213, line: 258, baseType: !1204, size: 128, offset: 2368)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !1439, file: !1213, line: 259, baseType: !1204, size: 128, offset: 2496)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1439, file: !1213, line: 260, baseType: !1204, size: 128, offset: 2624)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !1439, file: !1213, line: 261, baseType: !1204, size: 128, offset: 2752)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !1439, file: !1213, line: 263, baseType: !1478, size: 64, offset: 2880)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !1439, file: !1213, line: 265, baseType: !1855, size: 64, offset: 2944)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !1439, file: !1213, line: 266, baseType: !1112, size: 64, offset: 3008)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "towards_xy", scope: !1435, file: !1012, line: 496, baseType: !1454, size: 64, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "towardstime", scope: !1435, file: !1012, line: 497, baseType: !1370, size: 64, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "dotowards", scope: !1435, file: !1012, line: 498, baseType: !1413, size: 8, offset: 192)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "popup", scope: !1435, file: !1012, line: 500, baseType: !1413, size: 8, offset: 200)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "popup_func", scope: !1435, file: !1012, line: 501, baseType: !1141, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_func", scope: !1435, file: !1012, line: 502, baseType: !1863, size: 64, offset: 320)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{null, !1144, !1112}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "popup_arg", scope: !1435, file: !1012, line: 503, baseType: !1112, size: 64, offset: 384)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "popup_create_vars", scope: !1435, file: !1012, line: 506, baseType: !1868, size: 320, offset: 448)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockCreate", file: !1012, line: 480, size: 320, elements: !1869)
!1869 = !{!1870, !1875, !1881, !1882, !1883}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "create_func", scope: !1868, file: !1012, line: 481, baseType: !1871, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockCreateFunc", file: !20, line: 380, baseType: !1872)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!1197, !1144, !1438, !1112}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "handle_create_func", scope: !1868, file: !1012, line: 482, baseType: !1876, size: 64, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleCreateFunc", file: !1012, line: 478, baseType: !1877)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!1197, !1144, !1880, !1112}
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1868, file: !1012, line: 483, baseType: !1112, size: 64, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !1868, file: !1012, line: 485, baseType: !1359, size: 64, offset: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "butregion", scope: !1868, file: !1012, line: 488, baseType: !1884, size: 64, offset: 256)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !1213, line: 267, baseType: !1439)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "scrolltimer", scope: !1435, file: !1012, line: 508, baseType: !1478, size: 64, offset: 768)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "keynav_state", scope: !1435, file: !1012, line: 510, baseType: !1888, size: 96, offset: 832)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiKeyNavLock", file: !1012, line: 471, size: 96, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "is_keynav", scope: !1888, file: !1012, line: 473, baseType: !1413, size: 8)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !1888, file: !1012, line: 475, baseType: !1359, size: 64, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !1435, file: !1012, line: 513, baseType: !1893, size: 64, offset: 960)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !1021, line: 508, size: 1536, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1925, !1929, !1933, !1937, !1938, !1942, !1943, !1944, !1945, !1949, !1950, !1965, !1966, !1970, !1971}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1894, file: !1021, line: 509, baseType: !1380, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1894, file: !1021, line: 510, baseType: !1380, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !1894, file: !1021, line: 511, baseType: !1380, size: 64, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1894, file: !1021, line: 512, baseType: !1380, size: 64, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1894, file: !1021, line: 518, baseType: !1901, size: 64, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DISubroutineType(types: !1903)
!1903 = !{!1100, !1144, !1904}
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !1486, line: 328, size: 1344, elements: !1906)
!1906 = !{!1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1917, !1918, !1919, !1920, !1921}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1905, file: !1486, line: 329, baseType: !1904, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1905, file: !1486, line: 329, baseType: !1904, size: 64, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1905, file: !1486, line: 332, baseType: !1157, size: 512, offset: 128)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1905, file: !1486, line: 333, baseType: !1532, size: 64, offset: 640)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1905, file: !1486, line: 336, baseType: !1893, size: 64, offset: 704)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1905, file: !1486, line: 337, baseType: !1112, size: 64, offset: 768)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !1905, file: !1486, line: 338, baseType: !1112, size: 64, offset: 832)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1905, file: !1486, line: 340, baseType: !1259, size: 64, offset: 896)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !1905, file: !1486, line: 341, baseType: !1916, size: 64, offset: 960)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !1905, file: !1486, line: 343, baseType: !1204, size: 128, offset: 1024)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !1905, file: !1486, line: 344, baseType: !1904, size: 64, offset: 1152)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1905, file: !1486, line: 345, baseType: !1286, size: 64, offset: 1216)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1905, file: !1486, line: 346, baseType: !1166, size: 16, offset: 1280)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1905, file: !1486, line: 346, baseType: !1922, size: 48, offset: 1296)
!1922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1166, size: 48, elements: !1923)
!1923 = !{!1924}
!1924 = !DISubrange(count: 3)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1894, file: !1021, line: 524, baseType: !1926, size: 64, offset: 320)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!1413, !1144, !1904}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !1894, file: !1021, line: 530, baseType: !1930, size: 64, offset: 384)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{!1100, !1144, !1904, !1347}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !1894, file: !1021, line: 531, baseType: !1934, size: 64, offset: 448)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{null, !1144, !1904}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !1894, file: !1021, line: 532, baseType: !1930, size: 64, offset: 512)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1894, file: !1021, line: 536, baseType: !1939, size: 64, offset: 576)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!1100, !1144}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !1894, file: !1021, line: 539, baseType: !1934, size: 64, offset: 640)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1894, file: !1021, line: 542, baseType: !1267, size: 64, offset: 704)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !1894, file: !1021, line: 545, baseType: !1537, size: 64, offset: 768)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1894, file: !1021, line: 549, baseType: !1946, size: 64, offset: 832)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !958, line: 333, baseType: !1948)
!1948 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !958, line: 39, flags: DIFlagFwdDecl)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !1894, file: !1021, line: 552, baseType: !1204, size: 128, offset: 896)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !1894, file: !1021, line: 555, baseType: !1951, size: 64, offset: 1024)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !1486, line: 281, size: 1088, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1952, file: !1486, line: 282, baseType: !1951, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1952, file: !1486, line: 282, baseType: !1951, size: 64, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1952, file: !1486, line: 284, baseType: !1204, size: 128, offset: 128)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !1952, file: !1486, line: 285, baseType: !1204, size: 128, offset: 256)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1952, file: !1486, line: 287, baseType: !1157, size: 512, offset: 384)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !1952, file: !1486, line: 288, baseType: !1166, size: 16, offset: 896)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !1952, file: !1486, line: 289, baseType: !1166, size: 16, offset: 912)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1952, file: !1486, line: 291, baseType: !1166, size: 16, offset: 928)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !1952, file: !1486, line: 292, baseType: !1166, size: 16, offset: 944)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1952, file: !1486, line: 295, baseType: !1939, size: 64, offset: 960)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !1952, file: !1486, line: 296, baseType: !1112, size: 64, offset: 1024)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !1894, file: !1021, line: 559, baseType: !1112, size: 64, offset: 1088)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !1894, file: !1021, line: 560, baseType: !1967, size: 64, offset: 1152)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DISubroutineType(types: !1969)
!1969 = !{!1100, !1144, !1893}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1894, file: !1021, line: 563, baseType: !1246, size: 256, offset: 1216)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1894, file: !1021, line: 566, baseType: !1166, size: 16, offset: 1472)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_area", scope: !1435, file: !1012, line: 514, baseType: !1973, size: 64, offset: 1024)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !1213, line: 228, baseType: !1710)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_region", scope: !1435, file: !1012, line: 515, baseType: !1884, size: 64, offset: 1088)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !1435, file: !1012, line: 516, baseType: !1100, size: 32, offset: 1152)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "butretval", scope: !1435, file: !1012, line: 519, baseType: !1100, size: 32, offset: 1184)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "menuretval", scope: !1435, file: !1012, line: 520, baseType: !1100, size: 32, offset: 1216)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "retvalue", scope: !1435, file: !1012, line: 521, baseType: !1100, size: 32, offset: 1248)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "retvec", scope: !1435, file: !1012, line: 522, baseType: !1981, size: 128, offset: 1280)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 128, elements: !1982)
!1982 = !{!1315}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1435, file: !1012, line: 525, baseType: !1100, size: 32, offset: 1408)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "is_grab", scope: !1435, file: !1012, line: 528, baseType: !1413, size: 8, offset: 1440)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "grab_xy_prev", scope: !1435, file: !1012, line: 529, baseType: !1359, size: 64, offset: 1472)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "ui_operator", scope: !1199, file: !1012, line: 389, baseType: !1904, size: 64, offset: 4160)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "evil_C", scope: !1199, file: !1012, line: 392, baseType: !1112, size: 64, offset: 4224)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1199, file: !1012, line: 394, baseType: !1989, size: 64, offset: 4288)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1012, line: 394, flags: DIFlagFwdDecl)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_hsv", scope: !1199, file: !1012, line: 395, baseType: !1992, size: 96, offset: 4352)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 96, elements: !1923)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !1199, file: !1012, line: 397, baseType: !1413, size: 8, offset: 4448)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1199, file: !1012, line: 399, baseType: !1157, size: 512, offset: 4456)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pie_data", scope: !1199, file: !1012, line: 402, baseType: !1996, size: 448, offset: 4992)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PieMenuData", file: !1012, line: 309, size: 448, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !1996, file: !1012, line: 310, baseType: !1454, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_init", scope: !1996, file: !1012, line: 311, baseType: !1454, size: 64, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_spawned", scope: !1996, file: !1012, line: 312, baseType: !1454, size: 64, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !1996, file: !1012, line: 313, baseType: !1454, size: 64, offset: 192)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gesture", scope: !1996, file: !1012, line: 314, baseType: !1370, size: 64, offset: 256)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1996, file: !1012, line: 315, baseType: !1100, size: 32, offset: 320)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1996, file: !1012, line: 316, baseType: !1100, size: 32, offset: 352)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1996, file: !1012, line: 317, baseType: !1180, size: 32, offset: 384)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1129, file: !3, line: 93, baseType: !1113, size: 64, offset: 576)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1115, file: !3, line: 137, baseType: !2008, size: 64, offset: 256)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContextStore", file: !1812, line: 89, baseType: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bContextStore", file: !1812, line: 84, size: 320, elements: !2011)
!2011 = !{!2012, !2014, !2015, !2016}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2010, file: !1812, line: 85, baseType: !2013, size: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2010, file: !1812, line: 85, baseType: !2013, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2010, file: !1812, line: 87, baseType: !1204, size: 128, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2010, file: !1812, line: 88, baseType: !1413, size: 8, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1115, file: !3, line: 138, baseType: !1204, size: 128, offset: 320)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1115, file: !3, line: 140, baseType: !1100, size: 32, offset: 448)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1115, file: !3, line: 140, baseType: !1100, size: 32, offset: 480)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1115, file: !3, line: 140, baseType: !1100, size: 32, offset: 512)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1115, file: !3, line: 140, baseType: !1100, size: 32, offset: 544)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1115, file: !3, line: 141, baseType: !1454, size: 64, offset: 576)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !1115, file: !3, line: 142, baseType: !1166, size: 16, offset: 640)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1115, file: !3, line: 143, baseType: !1413, size: 8, offset: 656)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1115, file: !3, line: 144, baseType: !1413, size: 8, offset: 664)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1115, file: !3, line: 145, baseType: !1413, size: 8, offset: 672)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "redalert", scope: !1115, file: !3, line: 146, baseType: !1413, size: 8, offset: 680)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "keepaspect", scope: !1115, file: !3, line: 147, baseType: !1413, size: 8, offset: 688)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1115, file: !3, line: 148, baseType: !1158, size: 8, offset: 696)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1812, line: 69, baseType: !1145)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "MenuType", file: !1222, line: 256, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MenuType", file: !1222, line: 241, size: 2112, elements: !2035)
!2035 = !{!2036, !2038, !2039, !2040, !2041, !2042, !2043, !2047, !2056}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2034, file: !1222, line: 242, baseType: !2037, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2034, file: !1222, line: 242, baseType: !2037, size: 64, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2034, file: !1222, line: 244, baseType: !1157, size: 512, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2034, file: !1222, line: 245, baseType: !1157, size: 512, offset: 640)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !2034, file: !1222, line: 246, baseType: !1157, size: 512, offset: 1152)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2034, file: !1222, line: 247, baseType: !1380, size: 64, offset: 1664)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2034, file: !1222, line: 250, baseType: !2044, size: 64, offset: 1728)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!1100, !1238, !2037}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !2034, file: !1222, line: 252, baseType: !2048, size: 64, offset: 1792)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{null, !1238, !2051}
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Menu", file: !1222, line: 258, size: 128, elements: !2053)
!2053 = !{!2054, !2055}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2052, file: !1222, line: 259, baseType: !2037, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !2052, file: !1222, line: 260, baseType: !1286, size: 64, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !2034, file: !1222, line: 255, baseType: !1246, size: 256, offset: 1856)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !2059, line: 114, baseType: !2060)
!2059 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !2059, line: 78, size: 2048, elements: !2061)
!2061 = !{!2062, !2063, !2066, !2067, !2068, !2070, !2109, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2060, file: !2059, line: 79, baseType: !1496, size: 960)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2060, file: !2059, line: 80, baseType: !2064, size: 64, offset: 960)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !2059, line: 37, flags: DIFlagFwdDecl)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !2060, file: !2059, line: 82, baseType: !1204, size: 128, offset: 1024)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !2060, file: !2059, line: 83, baseType: !1204, size: 128, offset: 1152)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !2060, file: !2059, line: 84, baseType: !2069, size: 64, offset: 1280)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !2060, file: !2059, line: 92, baseType: !2071, size: 64, offset: 1344)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !2059, line: 76, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !2059, line: 48, size: 2624, elements: !2074)
!2074 = !{!2075, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2073, file: !2059, line: 49, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2073, file: !2059, line: 49, baseType: !2076, size: 64, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2073, file: !2059, line: 50, baseType: !1532, size: 64, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2073, file: !2059, line: 51, baseType: !2076, size: 64, offset: 192)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !2073, file: !2059, line: 52, baseType: !1204, size: 128, offset: 256)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2073, file: !2059, line: 53, baseType: !1157, size: 512, offset: 384)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !2073, file: !2059, line: 55, baseType: !1180, size: 32, offset: 896)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2073, file: !2059, line: 56, baseType: !1992, size: 96, offset: 928)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2073, file: !2059, line: 57, baseType: !1992, size: 96, offset: 1024)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !2073, file: !2059, line: 58, baseType: !2086, size: 288, offset: 1120)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 288, elements: !2087)
!2087 = !{!1924, !1924}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2073, file: !2059, line: 60, baseType: !1100, size: 32, offset: 1408)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !2073, file: !2059, line: 62, baseType: !1992, size: 96, offset: 1440)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !2073, file: !2059, line: 63, baseType: !1992, size: 96, offset: 1536)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !2073, file: !2059, line: 64, baseType: !1313, size: 512, offset: 1632)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !2073, file: !2059, line: 65, baseType: !1180, size: 32, offset: 2144)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2073, file: !2059, line: 67, baseType: !1180, size: 32, offset: 2176)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2073, file: !2059, line: 67, baseType: !1180, size: 32, offset: 2208)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !2073, file: !2059, line: 68, baseType: !1180, size: 32, offset: 2240)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2073, file: !2059, line: 68, baseType: !1180, size: 32, offset: 2272)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !2073, file: !2059, line: 68, baseType: !1180, size: 32, offset: 2304)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !2073, file: !2059, line: 69, baseType: !1180, size: 32, offset: 2336)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !2073, file: !2059, line: 69, baseType: !1180, size: 32, offset: 2368)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !2073, file: !2059, line: 70, baseType: !1180, size: 32, offset: 2400)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !2073, file: !2059, line: 70, baseType: !1180, size: 32, offset: 2432)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2073, file: !2059, line: 72, baseType: !1992, size: 96, offset: 2464)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2073, file: !2059, line: 73, baseType: !1100, size: 32, offset: 2560)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !2073, file: !2059, line: 74, baseType: !1166, size: 16, offset: 2592)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2073, file: !2059, line: 75, baseType: !2106, size: 16, offset: 2608)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1166, size: 16, elements: !2107)
!2107 = !{!2108}
!2108 = !DISubrange(count: 1)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !2060, file: !2059, line: 93, baseType: !2110, size: 64, offset: 1408)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !2112, line: 56, size: 1472, elements: !2113)
!2112 = !DIFile(filename: "blender/source/blender/editors/include/ED_armature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2113 = !{!2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2111, file: !2112, line: 57, baseType: !2110, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2111, file: !2112, line: 57, baseType: !2110, size: 64, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2111, file: !2112, line: 58, baseType: !1537, size: 64, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2111, file: !2112, line: 59, baseType: !2110, size: 64, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2111, file: !2112, line: 62, baseType: !1112, size: 64, offset: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2111, file: !2112, line: 64, baseType: !1157, size: 512, offset: 320)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !2111, file: !2112, line: 65, baseType: !1180, size: 32, offset: 832)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2111, file: !2112, line: 70, baseType: !1992, size: 96, offset: 864)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2111, file: !2112, line: 71, baseType: !1992, size: 96, offset: 960)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2111, file: !2112, line: 75, baseType: !1100, size: 32, offset: 1056)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2111, file: !2112, line: 76, baseType: !1100, size: 32, offset: 1088)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2111, file: !2112, line: 78, baseType: !1180, size: 32, offset: 1120)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2111, file: !2112, line: 78, baseType: !1180, size: 32, offset: 1152)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !2111, file: !2112, line: 79, baseType: !1180, size: 32, offset: 1184)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2111, file: !2112, line: 79, baseType: !1180, size: 32, offset: 1216)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !2111, file: !2112, line: 79, baseType: !1180, size: 32, offset: 1248)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !2111, file: !2112, line: 80, baseType: !1180, size: 32, offset: 1280)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !2111, file: !2112, line: 80, baseType: !1180, size: 32, offset: 1312)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !2111, file: !2112, line: 81, baseType: !1180, size: 32, offset: 1344)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !2111, file: !2112, line: 81, baseType: !1180, size: 32, offset: 1376)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "oldlength", scope: !2111, file: !2112, line: 83, baseType: !1180, size: 32, offset: 1408)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !2111, file: !2112, line: 85, baseType: !1166, size: 16, offset: 1440)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !2060, file: !2059, line: 95, baseType: !1112, size: 64, offset: 1472)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2060, file: !2059, line: 97, baseType: !1100, size: 32, offset: 1536)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !2060, file: !2059, line: 98, baseType: !1100, size: 32, offset: 1568)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !2060, file: !2059, line: 99, baseType: !1100, size: 32, offset: 1600)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2060, file: !2059, line: 100, baseType: !1100, size: 32, offset: 1632)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !2060, file: !2059, line: 101, baseType: !1166, size: 16, offset: 1664)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !2060, file: !2059, line: 102, baseType: !1166, size: 16, offset: 1680)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !2060, file: !2059, line: 104, baseType: !6, size: 32, offset: 1696)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2060, file: !2059, line: 105, baseType: !6, size: 32, offset: 1728)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !2060, file: !2059, line: 105, baseType: !6, size: 32, offset: 1760)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !2060, file: !2059, line: 108, baseType: !1166, size: 16, offset: 1792)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !2060, file: !2059, line: 108, baseType: !1166, size: 16, offset: 1808)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !2060, file: !2059, line: 109, baseType: !1166, size: 16, offset: 1824)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !2060, file: !2059, line: 109, baseType: !1166, size: 16, offset: 1840)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !2060, file: !2059, line: 110, baseType: !1100, size: 32, offset: 1856)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !2060, file: !2059, line: 110, baseType: !1100, size: 32, offset: 1888)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !2060, file: !2059, line: 111, baseType: !1100, size: 32, offset: 1920)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !2060, file: !2059, line: 111, baseType: !1100, size: 32, offset: 1952)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !2060, file: !2059, line: 112, baseType: !1100, size: 32, offset: 1984)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !2060, file: !2059, line: 112, baseType: !1100, size: 32, offset: 2016)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !2157, line: 87, baseType: !2158)
!2157 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2158 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBut", file: !20, line: 82, baseType: !2161)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBut", file: !1012, line: 195, size: 8000, elements: !2162)
!2162 = !{!2163, !2165, !2166, !2167, !2168, !2170, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2208, !2209, !2217, !2218, !2223, !2224, !2225, !2241, !2243, !2244, !2245, !2247, !2248, !2249, !2251, !2252, !2253, !2254, !2255, !2256, !2261, !2262, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2277, !2278, !2281, !2282, !2283, !2285, !2286, !2287, !2288}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2161, file: !1012, line: 196, baseType: !2164, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2161, file: !1012, line: 196, baseType: !2164, size: 64, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2161, file: !1012, line: 197, baseType: !1100, size: 32, offset: 128)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !2161, file: !1012, line: 197, baseType: !1100, size: 32, offset: 160)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2161, file: !1012, line: 198, baseType: !2169, size: 32, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButType", file: !20, line: 282, baseType: !29)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "pointype", scope: !2161, file: !1012, line: 199, baseType: !2171, size: 32, offset: 224)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButPointerType", file: !20, line: 230, baseType: !75)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2161, file: !1012, line: 200, baseType: !1166, size: 16, offset: 256)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "bitnr", scope: !2161, file: !1012, line: 200, baseType: !1166, size: 16, offset: 272)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !2161, file: !1012, line: 200, baseType: !1166, size: 16, offset: 288)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "strwidth", scope: !2161, file: !1012, line: 200, baseType: !1166, size: 16, offset: 304)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !2161, file: !1012, line: 200, baseType: !1166, size: 16, offset: 320)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2161, file: !1012, line: 201, baseType: !1166, size: 16, offset: 336)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2161, file: !1012, line: 201, baseType: !1166, size: 16, offset: 352)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "selsta", scope: !2161, file: !1012, line: 201, baseType: !1166, size: 16, offset: 368)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !2161, file: !1012, line: 201, baseType: !1166, size: 16, offset: 384)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2161, file: !1012, line: 203, baseType: !1855, size: 64, offset: 448)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "strdata", scope: !2161, file: !1012, line: 204, baseType: !1309, size: 1024, offset: 512)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "drawstr", scope: !2161, file: !1012, line: 205, baseType: !2184, size: 3200, offset: 1536)
!2184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 3200, elements: !2185)
!2185 = !{!2186}
!2186 = !DISubrange(count: 400)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2161, file: !1012, line: 207, baseType: !1317, size: 128, offset: 4736)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !2161, file: !1012, line: 209, baseType: !1855, size: 64, offset: 4864)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !2161, file: !1012, line: 210, baseType: !1180, size: 32, offset: 4928)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !2161, file: !1012, line: 210, baseType: !1180, size: 32, offset: 4960)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !2161, file: !1012, line: 210, baseType: !1180, size: 32, offset: 4992)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !2161, file: !1012, line: 210, baseType: !1180, size: 32, offset: 5024)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2161, file: !1012, line: 222, baseType: !1180, size: 32, offset: 5056)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2161, file: !1012, line: 230, baseType: !1180, size: 32, offset: 5088)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2161, file: !1012, line: 232, baseType: !2196, size: 32, offset: 5120)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1413, size: 32, elements: !1982)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2161, file: !1012, line: 234, baseType: !1328, size: 64, offset: 5184)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !2161, file: !1012, line: 235, baseType: !1112, size: 64, offset: 5248)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !2161, file: !1012, line: 236, baseType: !1112, size: 64, offset: 5312)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !2161, file: !1012, line: 238, baseType: !1335, size: 64, offset: 5376)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !2161, file: !1012, line: 239, baseType: !1112, size: 64, offset: 5440)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2161, file: !1012, line: 241, baseType: !2013, size: 64, offset: 5504)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "autocomplete_func", scope: !2161, file: !1012, line: 243, baseType: !2204, size: 64, offset: 5568)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButCompleteFunc", file: !20, line: 339, baseType: !2205)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!1100, !1144, !1855, !1112}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "autofunc_arg", scope: !2161, file: !1012, line: 244, baseType: !1112, size: 64, offset: 5632)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "search_func", scope: !2161, file: !1012, line: 246, baseType: !2210, size: 64, offset: 5696)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButSearchFunc", file: !20, line: 340, baseType: !2211)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = !DISubroutineType(types: !2213)
!2213 = !{null, !1238, !1112, !1380, !2214}
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiSearchItems", file: !20, line: 334, baseType: !2216)
!2216 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiSearchItems", file: !20, line: 334, flags: DIFlagFwdDecl)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "search_arg", scope: !2161, file: !1012, line: 247, baseType: !1112, size: 64, offset: 5760)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "rename_func", scope: !2161, file: !1012, line: 249, baseType: !2219, size: 64, offset: 5824)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleRenameFunc", file: !20, line: 337, baseType: !2220)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{null, !1144, !1112, !1855}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "rename_arg1", scope: !2161, file: !1012, line: 250, baseType: !1112, size: 64, offset: 5888)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "rename_orig", scope: !2161, file: !1012, line: 251, baseType: !1112, size: 64, offset: 5952)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2161, file: !1012, line: 253, baseType: !2226, size: 64, offset: 6016)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLink", file: !1012, line: 193, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1012, line: 184, size: 384, elements: !2229)
!2229 = !{!2230, !2232, !2234, !2236, !2237, !2238, !2239, !2240}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !2228, file: !1012, line: 185, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ppoin", scope: !2228, file: !1012, line: 186, baseType: !2233, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "totlink", scope: !2228, file: !1012, line: 187, baseType: !2235, size: 64, offset: 128)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "maxlink", scope: !2228, file: !1012, line: 189, baseType: !1166, size: 16, offset: 192)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2228, file: !1012, line: 189, baseType: !1166, size: 16, offset: 208)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fromcode", scope: !2228, file: !1012, line: 190, baseType: !1166, size: 16, offset: 224)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "tocode", scope: !2228, file: !1012, line: 190, baseType: !1166, size: 16, offset: 240)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !2228, file: !1012, line: 192, baseType: !1204, size: 128, offset: 256)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "linkto", scope: !2161, file: !1012, line: 254, baseType: !2242, size: 32, offset: 6080)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1166, size: 32, elements: !1360)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "tip", scope: !2161, file: !1012, line: 256, baseType: !1380, size: 64, offset: 6144)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !2161, file: !1012, line: 256, baseType: !1380, size: 64, offset: 6208)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2161, file: !1012, line: 258, baseType: !2246, size: 32, offset: 6272)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIFIconID", file: !83, line: 44, baseType: !82)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2161, file: !1012, line: 259, baseType: !1413, size: 8, offset: 6304)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !2161, file: !1012, line: 260, baseType: !1158, size: 8, offset: 6312)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !2161, file: !1012, line: 261, baseType: !2250, size: 8, offset: 6320)
!2250 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2161, file: !1012, line: 262, baseType: !1158, size: 8, offset: 6328)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "unit_type", scope: !2161, file: !1012, line: 263, baseType: !1413, size: 8, offset: 6336)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_key", scope: !2161, file: !1012, line: 264, baseType: !1166, size: 16, offset: 6352)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "iconadd", scope: !2161, file: !1012, line: 265, baseType: !1166, size: 16, offset: 6368)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "block_create_func", scope: !2161, file: !1012, line: 268, baseType: !1871, size: 64, offset: 6400)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "menu_create_func", scope: !2161, file: !1012, line: 271, baseType: !2257, size: 64, offset: 6464)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuCreateFunc", file: !20, line: 345, baseType: !2258)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{null, !1144, !1286, !1112}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "rnapoin", scope: !2161, file: !1012, line: 274, baseType: !1260, size: 192, offset: 6528)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "rnaprop", scope: !2161, file: !1012, line: 275, baseType: !2263, size: 64, offset: 6720)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "rnaindex", scope: !2161, file: !1012, line: 276, baseType: !1100, size: 32, offset: 6784)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchpoin", scope: !2161, file: !1012, line: 278, baseType: !1260, size: 192, offset: 6848)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchprop", scope: !2161, file: !1012, line: 279, baseType: !2263, size: 64, offset: 7040)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !2161, file: !1012, line: 282, baseType: !1893, size: 64, offset: 7104)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "opptr", scope: !2161, file: !1012, line: 283, baseType: !1259, size: 64, offset: 7168)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !2161, file: !1012, line: 284, baseType: !1166, size: 16, offset: 7232)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "menu_key", scope: !2161, file: !1012, line: 285, baseType: !1413, size: 8, offset: 7248)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "dragtype", scope: !2161, file: !1012, line: 288, baseType: !1158, size: 8, offset: 7256)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "dragpoin", scope: !2161, file: !1012, line: 289, baseType: !1112, size: 64, offset: 7296)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "imb", scope: !2161, file: !1012, line: 290, baseType: !2274, size: 64, offset: 7360)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !2276, line: 136, flags: DIFlagFwdDecl)
!2276 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "imb_scale", scope: !2161, file: !1012, line: 291, baseType: !1180, size: 32, offset: 7424)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2161, file: !1012, line: 294, baseType: !2279, size: 64, offset: 7488)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiHandleButtonData", file: !1012, line: 43, flags: DIFlagFwdDecl)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !2161, file: !1012, line: 297, baseType: !1112, size: 64, offset: 7552)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "editstr", scope: !2161, file: !1012, line: 299, baseType: !1855, size: 64, offset: 7616)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "editval", scope: !2161, file: !1012, line: 300, baseType: !2284, size: 64, offset: 7680)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "editvec", scope: !2161, file: !1012, line: 301, baseType: !1471, size: 64, offset: 7744)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "editcoba", scope: !2161, file: !1012, line: 302, baseType: !1112, size: 64, offset: 7808)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "editcumap", scope: !2161, file: !1012, line: 303, baseType: !1112, size: 64, offset: 7872)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2161, file: !1012, line: 306, baseType: !1197, size: 64, offset: 7936)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollItemSearch", file: !3, line: 1443, baseType: !2291)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollItemSearch", file: !3, line: 1438, size: 256, elements: !2292)
!2292 = !{!2293, !2295, !2296, !2297, !2298}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2291, file: !3, line: 1439, baseType: !2294, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2291, file: !3, line: 1439, baseType: !2294, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2291, file: !3, line: 1440, baseType: !1855, size: 64, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2291, file: !3, line: 1441, baseType: !1100, size: 32, offset: 192)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !2291, file: !3, line: 1442, baseType: !1100, size: 32, offset: 224)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "MenuItemLevel", file: !3, line: 1850, baseType: !2301)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MenuItemLevel", file: !3, line: 1843, size: 1280, elements: !2302)
!2302 = !{!2303, !2304, !2305, !2306}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !2301, file: !3, line: 1844, baseType: !1100, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "opname", scope: !2301, file: !3, line: 1847, baseType: !1157, size: 512, offset: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "propname", scope: !2301, file: !3, line: 1848, baseType: !1157, size: 512, offset: 544)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rnapoin", scope: !2301, file: !3, line: 1849, baseType: !2307, size: 192, offset: 1088)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !958, line: 62, baseType: !1260)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButtonItem", file: !3, line: 131, baseType: !2310)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiButtonItem", file: !3, line: 128, size: 256, elements: !2311)
!2311 = !{!2312, !2313}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !2310, file: !3, line: 129, baseType: !1118, size: 192)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "but", scope: !2310, file: !3, line: 130, baseType: !2159, size: 64, offset: 192)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayoutItemFlow", file: !3, line: 155, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayoutItemFlow", file: !3, line: 151, size: 768, elements: !2317)
!2317 = !{!2318, !2319, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "litem", scope: !2316, file: !3, line: 152, baseType: !1114, size: 704)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !2316, file: !3, line: 153, baseType: !1100, size: 32, offset: 704)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !2316, file: !3, line: 154, baseType: !1100, size: 32, offset: 736)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayoutItemBx", file: !3, line: 160, baseType: !2323)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayoutItemBx", file: !3, line: 157, size: 768, elements: !2324)
!2324 = !{!2325, !2326}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "litem", scope: !2323, file: !3, line: 158, baseType: !1114, size: 704)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "roundbox", scope: !2323, file: !3, line: 159, baseType: !2159, size: 64, offset: 704)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayoutItemSplit", file: !3, line: 165, baseType: !2329)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayoutItemSplit", file: !3, line: 162, size: 768, elements: !2330)
!2330 = !{!2331, !2332}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "litem", scope: !2329, file: !3, line: 163, baseType: !1114, size: 704)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "percentage", scope: !2329, file: !3, line: 164, baseType: !1180, size: 32, offset: 704)
!2333 = !{!0}
!2334 = !{i32 7, !"Dwarf Version", i32 4}
!2335 = !{i32 2, !"Debug Info Version", i32 3}
!2336 = !{i32 1, !"wchar_size", i32 4}
!2337 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2338 = distinct !DISubprogram(name: "uiFileBrowseContextProperty", scope: !3, file: !3, line: 683, type: !2339, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{null, !2341, !2343, !2344}
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2031)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!2345 = !{}
!2346 = !DILocalVariable(name: "C", arg: 1, scope: !2338, file: !3, line: 683, type: !2341)
!2347 = !DILocation(line: 683, column: 50, scope: !2338)
!2348 = !DILocalVariable(name: "ptr", arg: 2, scope: !2338, file: !3, line: 683, type: !2343)
!2349 = !DILocation(line: 683, column: 65, scope: !2338)
!2350 = !DILocalVariable(name: "prop", arg: 3, scope: !2338, file: !3, line: 683, type: !2344)
!2351 = !DILocation(line: 683, column: 84, scope: !2338)
!2352 = !DILocalVariable(name: "ar", scope: !2338, file: !3, line: 685, type: !1884)
!2353 = !DILocation(line: 685, column: 11, scope: !2338)
!2354 = !DILocation(line: 685, column: 30, scope: !2338)
!2355 = !DILocation(line: 685, column: 16, scope: !2338)
!2356 = !DILocalVariable(name: "block", scope: !2338, file: !3, line: 686, type: !1197)
!2357 = !DILocation(line: 686, column: 11, scope: !2338)
!2358 = !DILocalVariable(name: "but", scope: !2338, file: !3, line: 687, type: !2159)
!2359 = !DILocation(line: 687, column: 9, scope: !2338)
!2360 = !DILocalVariable(name: "prevbut", scope: !2338, file: !3, line: 687, type: !2159)
!2361 = !DILocation(line: 687, column: 15, scope: !2338)
!2362 = !DILocation(line: 689, column: 9, scope: !2338)
!2363 = !DILocation(line: 689, column: 2, scope: !2338)
!2364 = !DILocation(line: 690, column: 3, scope: !2338)
!2365 = !DILocation(line: 690, column: 8, scope: !2338)
!2366 = !DILocation(line: 692, column: 7, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2338, file: !3, line: 692, column: 6)
!2368 = !DILocation(line: 692, column: 6, scope: !2338)
!2369 = !DILocation(line: 693, column: 3, scope: !2367)
!2370 = !DILocation(line: 695, column: 15, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2338, file: !3, line: 695, column: 2)
!2372 = !DILocation(line: 695, column: 19, scope: !2371)
!2373 = !DILocation(line: 695, column: 28, scope: !2371)
!2374 = !DILocation(line: 695, column: 13, scope: !2371)
!2375 = !DILocation(line: 695, column: 7, scope: !2371)
!2376 = !DILocation(line: 695, column: 35, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2371, file: !3, line: 695, column: 2)
!2378 = !DILocation(line: 695, column: 2, scope: !2371)
!2379 = !DILocation(line: 696, column: 14, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 696, column: 3)
!2381 = distinct !DILexicalBlock(scope: !2377, file: !3, line: 695, column: 63)
!2382 = !DILocation(line: 696, column: 21, scope: !2380)
!2383 = !DILocation(line: 696, column: 29, scope: !2380)
!2384 = !DILocation(line: 696, column: 12, scope: !2380)
!2385 = !DILocation(line: 696, column: 8, scope: !2380)
!2386 = !DILocation(line: 696, column: 36, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 696, column: 3)
!2388 = !DILocation(line: 696, column: 3, scope: !2380)
!2389 = !DILocation(line: 697, column: 14, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2387, file: !3, line: 696, column: 58)
!2391 = !DILocation(line: 697, column: 19, scope: !2390)
!2392 = !DILocation(line: 697, column: 12, scope: !2390)
!2393 = !DILocation(line: 700, column: 9, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 700, column: 8)
!2395 = !DILocation(line: 700, column: 14, scope: !2394)
!2396 = !DILocation(line: 700, column: 19, scope: !2394)
!2397 = !DILocation(line: 700, column: 41, scope: !2394)
!2398 = !DILocation(line: 700, column: 44, scope: !2394)
!2399 = !DILocation(line: 700, column: 52, scope: !2394)
!2400 = !DILocation(line: 700, column: 55, scope: !2394)
!2401 = !DILocation(line: 700, column: 64, scope: !2394)
!2402 = !DILocation(line: 700, column: 72, scope: !2394)
!2403 = !DILocation(line: 700, column: 8, scope: !2390)
!2404 = !DILocation(line: 701, column: 27, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2406, file: !3, line: 701, column: 9)
!2406 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 700, column: 78)
!2407 = !DILocation(line: 701, column: 36, scope: !2405)
!2408 = !DILocation(line: 701, column: 9, scope: !2405)
!2409 = !DILocation(line: 701, column: 45, scope: !2405)
!2410 = !DILocation(line: 701, column: 9, scope: !2406)
!2411 = !DILocation(line: 702, column: 7, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2405, file: !3, line: 701, column: 61)
!2413 = !DILocation(line: 702, column: 13, scope: !2412)
!2414 = !DILocation(line: 702, column: 22, scope: !2412)
!2415 = !DILocation(line: 703, column: 14, scope: !2412)
!2416 = !DILocation(line: 703, column: 23, scope: !2412)
!2417 = !DILocation(line: 703, column: 7, scope: !2412)
!2418 = !DILocation(line: 703, column: 12, scope: !2412)
!2419 = !DILocation(line: 704, column: 6, scope: !2412)
!2420 = !DILocation(line: 706, column: 4, scope: !2406)
!2421 = !DILocation(line: 707, column: 3, scope: !2390)
!2422 = !DILocation(line: 696, column: 47, scope: !2387)
!2423 = !DILocation(line: 696, column: 52, scope: !2387)
!2424 = !DILocation(line: 696, column: 45, scope: !2387)
!2425 = !DILocation(line: 696, column: 3, scope: !2387)
!2426 = distinct !{!2426, !2388, !2427}
!2427 = !DILocation(line: 707, column: 3, scope: !2380)
!2428 = !DILocation(line: 708, column: 2, scope: !2381)
!2429 = !DILocation(line: 695, column: 50, scope: !2377)
!2430 = !DILocation(line: 695, column: 57, scope: !2377)
!2431 = !DILocation(line: 695, column: 48, scope: !2377)
!2432 = !DILocation(line: 695, column: 2, scope: !2377)
!2433 = distinct !{!2433, !2378, !2434}
!2434 = !DILocation(line: 708, column: 2, scope: !2371)
!2435 = !DILocation(line: 709, column: 1, scope: !2338)
!2436 = distinct !DISubprogram(name: "uiItemFullO_ptr", scope: !3, file: !3, line: 746, type: !2437, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{!2307, !1113, !2439, !1380, !1100, !1532, !1100, !1100}
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !1021, line: 568, baseType: !1894)
!2441 = !DILocalVariable(name: "layout", arg: 1, scope: !2436, file: !3, line: 746, type: !1113)
!2442 = !DILocation(line: 746, column: 38, scope: !2436)
!2443 = !DILocalVariable(name: "ot", arg: 2, scope: !2436, file: !3, line: 746, type: !2439)
!2444 = !DILocation(line: 746, column: 62, scope: !2436)
!2445 = !DILocalVariable(name: "name", arg: 3, scope: !2436, file: !3, line: 746, type: !1380)
!2446 = !DILocation(line: 746, column: 78, scope: !2436)
!2447 = !DILocalVariable(name: "icon", arg: 4, scope: !2436, file: !3, line: 746, type: !1100)
!2448 = !DILocation(line: 746, column: 88, scope: !2436)
!2449 = !DILocalVariable(name: "properties", arg: 5, scope: !2436, file: !3, line: 746, type: !1532)
!2450 = !DILocation(line: 746, column: 106, scope: !2436)
!2451 = !DILocalVariable(name: "context", arg: 6, scope: !2436, file: !3, line: 746, type: !1100)
!2452 = !DILocation(line: 746, column: 122, scope: !2436)
!2453 = !DILocalVariable(name: "flag", arg: 7, scope: !2436, file: !3, line: 746, type: !1100)
!2454 = !DILocation(line: 746, column: 135, scope: !2436)
!2455 = !DILocalVariable(name: "block", scope: !2436, file: !3, line: 748, type: !1197)
!2456 = !DILocation(line: 748, column: 11, scope: !2436)
!2457 = !DILocation(line: 748, column: 19, scope: !2436)
!2458 = !DILocation(line: 748, column: 27, scope: !2436)
!2459 = !DILocation(line: 748, column: 33, scope: !2436)
!2460 = !DILocalVariable(name: "but", scope: !2436, file: !3, line: 749, type: !2159)
!2461 = !DILocation(line: 749, column: 9, scope: !2436)
!2462 = !DILocalVariable(name: "w", scope: !2436, file: !3, line: 750, type: !1100)
!2463 = !DILocation(line: 750, column: 6, scope: !2436)
!2464 = !DILocation(line: 752, column: 7, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 752, column: 6)
!2466 = !DILocation(line: 752, column: 6, scope: !2436)
!2467 = !DILocation(line: 753, column: 7, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 753, column: 7)
!2469 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 752, column: 13)
!2470 = !DILocation(line: 753, column: 10, scope: !2468)
!2471 = !DILocation(line: 753, column: 13, scope: !2468)
!2472 = !DILocation(line: 753, column: 17, scope: !2468)
!2473 = !DILocation(line: 753, column: 22, scope: !2468)
!2474 = !DILocation(line: 753, column: 26, scope: !2468)
!2475 = !DILocation(line: 753, column: 31, scope: !2468)
!2476 = !DILocation(line: 753, column: 54, scope: !2468)
!2477 = !DILocation(line: 753, column: 7, scope: !2469)
!2478 = !DILocation(line: 754, column: 30, scope: !2468)
!2479 = !DILocation(line: 754, column: 34, scope: !2468)
!2480 = !DILocation(line: 754, column: 11, scope: !2468)
!2481 = !DILocation(line: 754, column: 9, scope: !2468)
!2482 = !DILocation(line: 754, column: 4, scope: !2468)
!2483 = !DILocation(line: 756, column: 9, scope: !2468)
!2484 = !DILocation(line: 757, column: 2, scope: !2469)
!2485 = !DILocation(line: 759, column: 6, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 759, column: 6)
!2487 = !DILocation(line: 759, column: 14, scope: !2486)
!2488 = !DILocation(line: 759, column: 20, scope: !2486)
!2489 = !DILocation(line: 759, column: 25, scope: !2486)
!2490 = !DILocation(line: 759, column: 43, scope: !2486)
!2491 = !DILocation(line: 759, column: 47, scope: !2486)
!2492 = !DILocation(line: 759, column: 6, scope: !2436)
!2493 = !DILocation(line: 760, column: 8, scope: !2486)
!2494 = !DILocation(line: 760, column: 3, scope: !2486)
!2495 = !DILocation(line: 763, column: 22, scope: !2436)
!2496 = !DILocation(line: 763, column: 29, scope: !2436)
!2497 = !DILocation(line: 763, column: 2, scope: !2436)
!2498 = !DILocation(line: 765, column: 25, scope: !2436)
!2499 = !DILocation(line: 765, column: 33, scope: !2436)
!2500 = !DILocation(line: 765, column: 39, scope: !2436)
!2501 = !DILocation(line: 765, column: 6, scope: !2436)
!2502 = !DILocation(line: 765, column: 4, scope: !2436)
!2503 = !DILocation(line: 767, column: 6, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 767, column: 6)
!2505 = !DILocation(line: 767, column: 11, scope: !2504)
!2506 = !DILocation(line: 767, column: 6, scope: !2436)
!2507 = !DILocation(line: 768, column: 20, scope: !2504)
!2508 = !DILocation(line: 768, column: 3, scope: !2504)
!2509 = !DILocation(line: 771, column: 6, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 771, column: 6)
!2511 = !DILocation(line: 771, column: 6, scope: !2436)
!2512 = !DILocation(line: 772, column: 7, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2514, file: !3, line: 772, column: 7)
!2514 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 771, column: 12)
!2515 = !DILocation(line: 772, column: 7, scope: !2514)
!2516 = !DILocation(line: 773, column: 32, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 772, column: 16)
!2518 = !DILocation(line: 773, column: 44, scope: !2517)
!2519 = !DILocation(line: 773, column: 48, scope: !2517)
!2520 = !DILocation(line: 773, column: 57, scope: !2517)
!2521 = !DILocation(line: 773, column: 63, scope: !2517)
!2522 = !DILocation(line: 773, column: 75, scope: !2517)
!2523 = !DILocation(line: 773, column: 78, scope: !2517)
!2524 = !DILocation(line: 773, column: 10, scope: !2517)
!2525 = !DILocation(line: 773, column: 8, scope: !2517)
!2526 = !DILocation(line: 774, column: 3, scope: !2517)
!2527 = !DILocation(line: 776, column: 28, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 775, column: 8)
!2529 = !DILocation(line: 776, column: 40, scope: !2528)
!2530 = !DILocation(line: 776, column: 44, scope: !2528)
!2531 = !DILocation(line: 776, column: 53, scope: !2528)
!2532 = !DILocation(line: 776, column: 65, scope: !2528)
!2533 = !DILocation(line: 776, column: 68, scope: !2528)
!2534 = !DILocation(line: 776, column: 10, scope: !2528)
!2535 = !DILocation(line: 776, column: 8, scope: !2528)
!2536 = !DILocation(line: 778, column: 2, scope: !2514)
!2537 = !DILocation(line: 780, column: 23, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 779, column: 7)
!2539 = !DILocation(line: 780, column: 35, scope: !2538)
!2540 = !DILocation(line: 780, column: 39, scope: !2538)
!2541 = !DILocation(line: 780, column: 48, scope: !2538)
!2542 = !DILocation(line: 780, column: 60, scope: !2538)
!2543 = !DILocation(line: 780, column: 63, scope: !2538)
!2544 = !DILocation(line: 780, column: 9, scope: !2538)
!2545 = !DILocation(line: 780, column: 7, scope: !2538)
!2546 = !DILocation(line: 786, column: 7, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 786, column: 6)
!2548 = !DILocation(line: 786, column: 15, scope: !2547)
!2549 = !DILocation(line: 786, column: 21, scope: !2547)
!2550 = !DILocation(line: 786, column: 26, scope: !2547)
!2551 = !DILocation(line: 786, column: 48, scope: !2547)
!2552 = !DILocation(line: 786, column: 52, scope: !2547)
!2553 = !DILocation(line: 786, column: 6, scope: !2436)
!2554 = !DILocation(line: 787, column: 3, scope: !2547)
!2555 = !DILocation(line: 787, column: 8, scope: !2547)
!2556 = !DILocation(line: 787, column: 17, scope: !2547)
!2557 = !DILocation(line: 789, column: 6, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 789, column: 6)
!2559 = !DILocation(line: 789, column: 11, scope: !2558)
!2560 = !DILocation(line: 789, column: 6, scope: !2436)
!2561 = !DILocation(line: 790, column: 20, scope: !2558)
!2562 = !DILocation(line: 790, column: 3, scope: !2558)
!2563 = !DILocation(line: 792, column: 6, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 792, column: 6)
!2565 = !DILocation(line: 792, column: 14, scope: !2564)
!2566 = !DILocation(line: 792, column: 6, scope: !2436)
!2567 = !DILocation(line: 793, column: 16, scope: !2564)
!2568 = !DILocation(line: 793, column: 3, scope: !2564)
!2569 = !DILocation(line: 796, column: 6, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 796, column: 6)
!2571 = !DILocation(line: 796, column: 17, scope: !2570)
!2572 = !DILocation(line: 796, column: 21, scope: !2570)
!2573 = !DILocation(line: 796, column: 26, scope: !2570)
!2574 = !DILocation(line: 796, column: 6, scope: !2436)
!2575 = !DILocalVariable(name: "opptr", scope: !2576, file: !3, line: 797, type: !2343)
!2576 = distinct !DILexicalBlock(scope: !2570, file: !3, line: 796, column: 53)
!2577 = !DILocation(line: 797, column: 15, scope: !2576)
!2578 = !DILocation(line: 797, column: 46, scope: !2576)
!2579 = !DILocation(line: 797, column: 23, scope: !2576)
!2580 = !DILocation(line: 799, column: 7, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2576, file: !3, line: 799, column: 7)
!2582 = !DILocation(line: 799, column: 7, scope: !2576)
!2583 = !DILocation(line: 800, column: 18, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 799, column: 19)
!2585 = !DILocation(line: 800, column: 4, scope: !2584)
!2586 = !DILocation(line: 800, column: 11, scope: !2584)
!2587 = !DILocation(line: 800, column: 16, scope: !2584)
!2588 = !DILocation(line: 801, column: 3, scope: !2584)
!2589 = !DILocalVariable(name: "val", scope: !2590, file: !3, line: 803, type: !2591)
!2590 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 802, column: 8)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyTemplate", file: !2592, line: 56, baseType: !2593)
!2592 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_idprop.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2593 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "IDPropertyTemplate", file: !2592, line: 38, size: 128, elements: !2594)
!2594 = !{!2595, !2596, !2597, !2598, !2604, !2605, !2610}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2593, file: !2592, line: 39, baseType: !1100, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2593, file: !2592, line: 40, baseType: !1180, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2593, file: !2592, line: 41, baseType: !1370, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2593, file: !2592, line: 46, baseType: !2599, size: 128)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2593, file: !2592, line: 42, size: 128, elements: !2600)
!2600 = !{!2601, !2602, !2603}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2599, file: !2592, line: 43, baseType: !1855, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2599, file: !2592, line: 44, baseType: !1166, size: 16, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !2599, file: !2592, line: 45, baseType: !1158, size: 8, offset: 80)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2593, file: !2592, line: 47, baseType: !1503, size: 64)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !2593, file: !2592, line: 51, baseType: !2606, size: 32)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2593, file: !2592, line: 48, size: 32, elements: !2607)
!2607 = !{!2608, !2609}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2606, file: !2592, line: 49, baseType: !1166, size: 16)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2606, file: !2592, line: 50, baseType: !1166, size: 16, offset: 16)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_or_vector", scope: !2593, file: !2592, line: 55, baseType: !2611, size: 128)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2593, file: !2592, line: 52, size: 128, elements: !2612)
!2612 = !{!2613, !2614}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "matvec_size", scope: !2611, file: !2592, line: 53, baseType: !1100, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "example", scope: !2611, file: !2592, line: 54, baseType: !1471, size: 64, offset: 64)
!2615 = !DILocation(line: 803, column: 23, scope: !2590)
!2616 = !DILocation(line: 804, column: 18, scope: !2590)
!2617 = !DILocation(line: 804, column: 4, scope: !2590)
!2618 = !DILocation(line: 804, column: 11, scope: !2590)
!2619 = !DILocation(line: 804, column: 16, scope: !2590)
!2620 = !DILocation(line: 807, column: 11, scope: !2576)
!2621 = !DILocation(line: 807, column: 10, scope: !2576)
!2622 = !DILocation(line: 807, column: 3, scope: !2576)
!2623 = !DILocation(line: 810, column: 9, scope: !2436)
!2624 = !DILocation(line: 810, column: 2, scope: !2436)
!2625 = !DILocation(line: 811, column: 1, scope: !2436)
!2626 = distinct !DISubprogram(name: "uiBlockSetCurLayout", scope: !3, file: !3, line: 3148, type: !2627, scopeLine: 3149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{null, !1197, !1113}
!2629 = !DILocalVariable(name: "block", arg: 1, scope: !2626, file: !3, line: 3148, type: !1197)
!2630 = !DILocation(line: 3148, column: 35, scope: !2626)
!2631 = !DILocalVariable(name: "layout", arg: 2, scope: !2626, file: !3, line: 3148, type: !1113)
!2632 = !DILocation(line: 3148, column: 52, scope: !2626)
!2633 = !DILocation(line: 3150, column: 21, scope: !2626)
!2634 = !DILocation(line: 3150, column: 2, scope: !2626)
!2635 = !DILocation(line: 3150, column: 9, scope: !2626)
!2636 = !DILocation(line: 3150, column: 19, scope: !2626)
!2637 = !DILocation(line: 3151, column: 1, scope: !2626)
!2638 = distinct !DISubprogram(name: "ui_text_icon_width", scope: !3, file: !3, line: 228, type: !2639, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!1100, !1113, !1380, !1100, !1413}
!2641 = !DILocalVariable(name: "layout", arg: 1, scope: !2638, file: !3, line: 228, type: !1113)
!2642 = !DILocation(line: 228, column: 41, scope: !2638)
!2643 = !DILocalVariable(name: "name", arg: 2, scope: !2638, file: !3, line: 228, type: !1380)
!2644 = !DILocation(line: 228, column: 61, scope: !2638)
!2645 = !DILocalVariable(name: "icon", arg: 3, scope: !2638, file: !3, line: 228, type: !1100)
!2646 = !DILocation(line: 228, column: 71, scope: !2638)
!2647 = !DILocalVariable(name: "compact", arg: 4, scope: !2638, file: !3, line: 228, type: !1413)
!2648 = !DILocation(line: 228, column: 82, scope: !2638)
!2649 = !DILocalVariable(name: "variable", scope: !2638, file: !3, line: 230, type: !1413)
!2650 = !DILocation(line: 230, column: 7, scope: !2638)
!2651 = !DILocation(line: 232, column: 6, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 232, column: 6)
!2653 = !DILocation(line: 232, column: 11, scope: !2652)
!2654 = !DILocation(line: 232, column: 15, scope: !2652)
!2655 = !DILocation(line: 232, column: 6, scope: !2638)
!2656 = !DILocation(line: 233, column: 10, scope: !2652)
!2657 = !DILocation(line: 233, column: 3, scope: !2652)
!2658 = !DILocation(line: 235, column: 39, scope: !2638)
!2659 = !DILocation(line: 235, column: 14, scope: !2638)
!2660 = !DILocation(line: 235, column: 47, scope: !2638)
!2661 = !DILocation(line: 235, column: 13, scope: !2638)
!2662 = !DILocation(line: 235, column: 11, scope: !2638)
!2663 = !DILocation(line: 237, column: 6, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 237, column: 6)
!2665 = !DILocation(line: 237, column: 6, scope: !2638)
!2666 = !DILocation(line: 240, column: 29, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 237, column: 16)
!2668 = !DILocation(line: 240, column: 11, scope: !2667)
!2669 = !DILocation(line: 241, column: 12, scope: !2667)
!2670 = !DILocation(line: 241, column: 26, scope: !2667)
!2671 = !DILocation(line: 242, column: 26, scope: !2667)
!2672 = !DILocation(line: 241, column: 51, scope: !2667)
!2673 = !DILocation(line: 241, column: 22, scope: !2667)
!2674 = !DILocation(line: 240, column: 35, scope: !2667)
!2675 = !DILocation(line: 240, column: 10, scope: !2667)
!2676 = !DILocation(line: 240, column: 3, scope: !2667)
!2677 = !DILocation(line: 245, column: 10, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 244, column: 7)
!2679 = !DILocation(line: 245, column: 20, scope: !2678)
!2680 = !DILocation(line: 245, column: 3, scope: !2678)
!2681 = !DILocation(line: 247, column: 1, scope: !2638)
!2682 = distinct !DISubprogram(name: "uiItemFullO", scope: !3, file: !3, line: 813, type: !2683, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!2307, !1113, !1380, !1380, !1100, !1532, !1100, !1100}
!2685 = !DILocalVariable(name: "layout", arg: 1, scope: !2682, file: !3, line: 813, type: !1113)
!2686 = !DILocation(line: 813, column: 34, scope: !2682)
!2687 = !DILocalVariable(name: "opname", arg: 2, scope: !2682, file: !3, line: 813, type: !1380)
!2688 = !DILocation(line: 813, column: 54, scope: !2682)
!2689 = !DILocalVariable(name: "name", arg: 3, scope: !2682, file: !3, line: 813, type: !1380)
!2690 = !DILocation(line: 813, column: 74, scope: !2682)
!2691 = !DILocalVariable(name: "icon", arg: 4, scope: !2682, file: !3, line: 813, type: !1100)
!2692 = !DILocation(line: 813, column: 84, scope: !2682)
!2693 = !DILocalVariable(name: "properties", arg: 5, scope: !2682, file: !3, line: 813, type: !1532)
!2694 = !DILocation(line: 813, column: 102, scope: !2682)
!2695 = !DILocalVariable(name: "context", arg: 6, scope: !2682, file: !3, line: 813, type: !1100)
!2696 = !DILocation(line: 813, column: 118, scope: !2682)
!2697 = !DILocalVariable(name: "flag", arg: 7, scope: !2682, file: !3, line: 813, type: !1100)
!2698 = !DILocation(line: 813, column: 131, scope: !2682)
!2699 = !DILocalVariable(name: "ot", scope: !2682, file: !3, line: 815, type: !2439)
!2700 = !DILocation(line: 815, column: 18, scope: !2682)
!2701 = !DILocation(line: 815, column: 44, scope: !2682)
!2702 = !DILocation(line: 815, column: 23, scope: !2682)
!2703 = !DILocation(line: 817, column: 2, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2682, file: !3, line: 817, column: 2)
!2705 = !DILocation(line: 817, column: 2, scope: !2682)
!2706 = !DILocation(line: 817, column: 2, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 817, column: 2)
!2708 = !DILocation(line: 819, column: 25, scope: !2682)
!2709 = !DILocation(line: 819, column: 33, scope: !2682)
!2710 = !DILocation(line: 819, column: 37, scope: !2682)
!2711 = !DILocation(line: 819, column: 43, scope: !2682)
!2712 = !DILocation(line: 819, column: 49, scope: !2682)
!2713 = !DILocation(line: 819, column: 61, scope: !2682)
!2714 = !DILocation(line: 819, column: 70, scope: !2682)
!2715 = !DILocation(line: 819, column: 9, scope: !2682)
!2716 = !DILocation(line: 819, column: 2, scope: !2682)
!2717 = !DILocation(line: 820, column: 1, scope: !2682)
!2718 = distinct !DISubprogram(name: "ui_item_disabled", scope: !3, file: !3, line: 726, type: !2719, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{null, !1113, !1380}
!2721 = !DILocalVariable(name: "layout", arg: 1, scope: !2718, file: !3, line: 726, type: !1113)
!2722 = !DILocation(line: 726, column: 40, scope: !2718)
!2723 = !DILocalVariable(name: "name", arg: 2, scope: !2718, file: !3, line: 726, type: !1380)
!2724 = !DILocation(line: 726, column: 60, scope: !2718)
!2725 = !DILocalVariable(name: "block", scope: !2718, file: !3, line: 728, type: !1197)
!2726 = !DILocation(line: 728, column: 11, scope: !2718)
!2727 = !DILocation(line: 728, column: 19, scope: !2718)
!2728 = !DILocation(line: 728, column: 27, scope: !2718)
!2729 = !DILocation(line: 728, column: 33, scope: !2718)
!2730 = !DILocalVariable(name: "but", scope: !2718, file: !3, line: 729, type: !2159)
!2731 = !DILocation(line: 729, column: 9, scope: !2718)
!2732 = !DILocalVariable(name: "w", scope: !2718, file: !3, line: 730, type: !1100)
!2733 = !DILocation(line: 730, column: 6, scope: !2718)
!2734 = !DILocation(line: 732, column: 22, scope: !2718)
!2735 = !DILocation(line: 732, column: 29, scope: !2718)
!2736 = !DILocation(line: 732, column: 2, scope: !2718)
!2737 = !DILocation(line: 734, column: 7, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2718, file: !3, line: 734, column: 6)
!2739 = !DILocation(line: 734, column: 6, scope: !2718)
!2740 = !DILocation(line: 735, column: 8, scope: !2738)
!2741 = !DILocation(line: 735, column: 3, scope: !2738)
!2742 = !DILocation(line: 737, column: 25, scope: !2718)
!2743 = !DILocation(line: 737, column: 33, scope: !2718)
!2744 = !DILocation(line: 737, column: 6, scope: !2718)
!2745 = !DILocation(line: 737, column: 4, scope: !2718)
!2746 = !DILocation(line: 739, column: 17, scope: !2718)
!2747 = !DILocation(line: 739, column: 34, scope: !2718)
!2748 = !DILocation(line: 739, column: 46, scope: !2718)
!2749 = !DILocation(line: 739, column: 49, scope: !2718)
!2750 = !DILocation(line: 739, column: 8, scope: !2718)
!2751 = !DILocation(line: 739, column: 6, scope: !2718)
!2752 = !DILocation(line: 740, column: 2, scope: !2718)
!2753 = !DILocation(line: 740, column: 7, scope: !2718)
!2754 = !DILocation(line: 740, column: 12, scope: !2718)
!2755 = !DILocation(line: 741, column: 2, scope: !2718)
!2756 = !DILocation(line: 741, column: 7, scope: !2718)
!2757 = !DILocation(line: 741, column: 12, scope: !2718)
!2758 = !DILocation(line: 742, column: 2, scope: !2718)
!2759 = !DILocation(line: 742, column: 7, scope: !2718)
!2760 = !DILocation(line: 742, column: 15, scope: !2718)
!2761 = !DILocation(line: 743, column: 1, scope: !2718)
!2762 = distinct !DISubprogram(name: "uiItemEnumO_ptr", scope: !3, file: !3, line: 843, type: !2763, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{null, !1113, !2439, !1380, !1100, !1380, !1100}
!2765 = !DILocalVariable(name: "layout", arg: 1, scope: !2762, file: !3, line: 843, type: !1113)
!2766 = !DILocation(line: 843, column: 32, scope: !2762)
!2767 = !DILocalVariable(name: "ot", arg: 2, scope: !2762, file: !3, line: 843, type: !2439)
!2768 = !DILocation(line: 843, column: 56, scope: !2762)
!2769 = !DILocalVariable(name: "name", arg: 3, scope: !2762, file: !3, line: 843, type: !1380)
!2770 = !DILocation(line: 843, column: 72, scope: !2762)
!2771 = !DILocalVariable(name: "icon", arg: 4, scope: !2762, file: !3, line: 843, type: !1100)
!2772 = !DILocation(line: 843, column: 82, scope: !2762)
!2773 = !DILocalVariable(name: "propname", arg: 5, scope: !2762, file: !3, line: 843, type: !1380)
!2774 = !DILocation(line: 843, column: 100, scope: !2762)
!2775 = !DILocalVariable(name: "value", arg: 6, scope: !2762, file: !3, line: 843, type: !1100)
!2776 = !DILocation(line: 843, column: 114, scope: !2762)
!2777 = !DILocalVariable(name: "ptr", scope: !2762, file: !3, line: 845, type: !2307)
!2778 = !DILocation(line: 845, column: 13, scope: !2762)
!2779 = !DILocalVariable(name: "prop", scope: !2762, file: !3, line: 846, type: !1946)
!2780 = !DILocation(line: 846, column: 15, scope: !2762)
!2781 = !DILocation(line: 848, column: 42, scope: !2762)
!2782 = !DILocation(line: 848, column: 2, scope: !2762)
!2783 = !DILocation(line: 850, column: 45, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 850, column: 6)
!2785 = !DILocation(line: 850, column: 14, scope: !2784)
!2786 = !DILocation(line: 850, column: 12, scope: !2784)
!2787 = !DILocation(line: 850, column: 6, scope: !2762)
!2788 = !DILocation(line: 852, column: 2, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2784, file: !3, line: 850, column: 57)
!2790 = !DILocation(line: 854, column: 3, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2784, file: !3, line: 853, column: 7)
!2792 = !DILocation(line: 855, column: 3, scope: !2791)
!2793 = !DILocation(line: 858, column: 30, scope: !2762)
!2794 = !DILocation(line: 858, column: 36, scope: !2762)
!2795 = !DILocation(line: 858, column: 2, scope: !2762)
!2796 = !DILocation(line: 860, column: 7, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 860, column: 6)
!2798 = !DILocation(line: 860, column: 6, scope: !2762)
!2799 = !DILocation(line: 861, column: 31, scope: !2797)
!2800 = !DILocation(line: 861, column: 45, scope: !2797)
!2801 = !DILocation(line: 861, column: 51, scope: !2797)
!2802 = !DILocation(line: 861, column: 10, scope: !2797)
!2803 = !DILocation(line: 861, column: 8, scope: !2797)
!2804 = !DILocation(line: 861, column: 3, scope: !2797)
!2805 = !DILocation(line: 863, column: 18, scope: !2762)
!2806 = !DILocation(line: 863, column: 26, scope: !2762)
!2807 = !DILocation(line: 863, column: 30, scope: !2762)
!2808 = !DILocation(line: 863, column: 36, scope: !2762)
!2809 = !DILocation(line: 863, column: 46, scope: !2762)
!2810 = !DILocation(line: 863, column: 42, scope: !2762)
!2811 = !DILocation(line: 863, column: 52, scope: !2762)
!2812 = !DILocation(line: 863, column: 60, scope: !2762)
!2813 = !DILocation(line: 863, column: 66, scope: !2762)
!2814 = !DILocation(line: 863, column: 2, scope: !2762)
!2815 = !DILocation(line: 864, column: 1, scope: !2762)
!2816 = distinct !DISubprogram(name: "ui_menu_enumpropname", scope: !3, file: !3, line: 822, type: !2817, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!1380, !1113, !2343, !1946, !1100}
!2819 = !DILocalVariable(name: "layout", arg: 1, scope: !2816, file: !3, line: 822, type: !1113)
!2820 = !DILocation(line: 822, column: 51, scope: !2816)
!2821 = !DILocalVariable(name: "ptr", arg: 2, scope: !2816, file: !3, line: 822, type: !2343)
!2822 = !DILocation(line: 822, column: 71, scope: !2816)
!2823 = !DILocalVariable(name: "prop", arg: 3, scope: !2816, file: !3, line: 822, type: !1946)
!2824 = !DILocation(line: 822, column: 89, scope: !2816)
!2825 = !DILocalVariable(name: "retval", arg: 4, scope: !2816, file: !3, line: 822, type: !1100)
!2826 = !DILocation(line: 822, column: 99, scope: !2816)
!2827 = !DILocalVariable(name: "item", scope: !2816, file: !3, line: 824, type: !2828)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !958, line: 308, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !958, line: 302, size: 320, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2830, file: !958, line: 303, baseType: !1100, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2830, file: !958, line: 304, baseType: !1380, size: 64, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2830, file: !958, line: 305, baseType: !1100, size: 32, offset: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2830, file: !958, line: 306, baseType: !1380, size: 64, offset: 192)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2830, file: !958, line: 307, baseType: !1380, size: 64, offset: 256)
!2837 = !DILocation(line: 824, column: 20, scope: !2816)
!2838 = !DILocalVariable(name: "free", scope: !2816, file: !3, line: 825, type: !1413)
!2839 = !DILocation(line: 825, column: 7, scope: !2816)
!2840 = !DILocalVariable(name: "name", scope: !2816, file: !3, line: 826, type: !1380)
!2841 = !DILocation(line: 826, column: 14, scope: !2816)
!2842 = !DILocation(line: 828, column: 26, scope: !2816)
!2843 = !DILocation(line: 828, column: 34, scope: !2816)
!2844 = !DILocation(line: 828, column: 40, scope: !2816)
!2845 = !DILocation(line: 828, column: 47, scope: !2816)
!2846 = !DILocation(line: 828, column: 55, scope: !2816)
!2847 = !DILocation(line: 828, column: 60, scope: !2816)
!2848 = !DILocation(line: 828, column: 2, scope: !2816)
!2849 = !DILocation(line: 829, column: 20, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 829, column: 6)
!2851 = !DILocation(line: 829, column: 26, scope: !2850)
!2852 = !DILocation(line: 829, column: 6, scope: !2850)
!2853 = !DILocation(line: 829, column: 6, scope: !2816)
!2854 = !DILocation(line: 830, column: 10, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 829, column: 42)
!2856 = !DILocation(line: 830, column: 8, scope: !2855)
!2857 = !DILocation(line: 831, column: 2, scope: !2855)
!2858 = !DILocation(line: 833, column: 8, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 832, column: 7)
!2860 = !DILocation(line: 836, column: 6, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 836, column: 6)
!2862 = !DILocation(line: 836, column: 6, scope: !2816)
!2863 = !DILocation(line: 837, column: 3, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 836, column: 12)
!2865 = !DILocation(line: 837, column: 13, scope: !2864)
!2866 = !DILocation(line: 838, column: 2, scope: !2864)
!2867 = !DILocation(line: 840, column: 9, scope: !2816)
!2868 = !DILocation(line: 840, column: 2, scope: !2816)
!2869 = distinct !DISubprogram(name: "uiItemEnumO", scope: !3, file: !3, line: 865, type: !2870, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{null, !1113, !1380, !1380, !1100, !1380, !1100}
!2872 = !DILocalVariable(name: "layout", arg: 1, scope: !2869, file: !3, line: 865, type: !1113)
!2873 = !DILocation(line: 865, column: 28, scope: !2869)
!2874 = !DILocalVariable(name: "opname", arg: 2, scope: !2869, file: !3, line: 865, type: !1380)
!2875 = !DILocation(line: 865, column: 48, scope: !2869)
!2876 = !DILocalVariable(name: "name", arg: 3, scope: !2869, file: !3, line: 865, type: !1380)
!2877 = !DILocation(line: 865, column: 68, scope: !2869)
!2878 = !DILocalVariable(name: "icon", arg: 4, scope: !2869, file: !3, line: 865, type: !1100)
!2879 = !DILocation(line: 865, column: 78, scope: !2869)
!2880 = !DILocalVariable(name: "propname", arg: 5, scope: !2869, file: !3, line: 865, type: !1380)
!2881 = !DILocation(line: 865, column: 96, scope: !2869)
!2882 = !DILocalVariable(name: "value", arg: 6, scope: !2869, file: !3, line: 865, type: !1100)
!2883 = !DILocation(line: 865, column: 110, scope: !2869)
!2884 = !DILocalVariable(name: "ot", scope: !2869, file: !3, line: 867, type: !2439)
!2885 = !DILocation(line: 867, column: 18, scope: !2869)
!2886 = !DILocation(line: 867, column: 44, scope: !2869)
!2887 = !DILocation(line: 867, column: 23, scope: !2869)
!2888 = !DILocation(line: 869, column: 6, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 869, column: 6)
!2890 = !DILocation(line: 869, column: 6, scope: !2869)
!2891 = !DILocation(line: 870, column: 19, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 869, column: 10)
!2893 = !DILocation(line: 870, column: 27, scope: !2892)
!2894 = !DILocation(line: 870, column: 31, scope: !2892)
!2895 = !DILocation(line: 870, column: 37, scope: !2892)
!2896 = !DILocation(line: 870, column: 43, scope: !2892)
!2897 = !DILocation(line: 870, column: 53, scope: !2892)
!2898 = !DILocation(line: 870, column: 3, scope: !2892)
!2899 = !DILocation(line: 871, column: 2, scope: !2892)
!2900 = !DILocation(line: 873, column: 20, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 872, column: 7)
!2902 = !DILocation(line: 873, column: 28, scope: !2901)
!2903 = !DILocation(line: 873, column: 3, scope: !2901)
!2904 = !DILocation(line: 874, column: 3, scope: !2901)
!2905 = !DILocation(line: 877, column: 1, scope: !2869)
!2906 = distinct !DISubprogram(name: "uiItemsFullEnumO", scope: !3, file: !3, line: 879, type: !2907, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!2907 = !DISubroutineType(types: !2908)
!2908 = !{null, !1113, !1380, !1380, !1532, !1100, !1100}
!2909 = !DILocalVariable(name: "layout", arg: 1, scope: !2906, file: !3, line: 879, type: !1113)
!2910 = !DILocation(line: 879, column: 33, scope: !2906)
!2911 = !DILocalVariable(name: "opname", arg: 2, scope: !2906, file: !3, line: 879, type: !1380)
!2912 = !DILocation(line: 879, column: 53, scope: !2906)
!2913 = !DILocalVariable(name: "propname", arg: 3, scope: !2906, file: !3, line: 879, type: !1380)
!2914 = !DILocation(line: 879, column: 73, scope: !2906)
!2915 = !DILocalVariable(name: "properties", arg: 4, scope: !2906, file: !3, line: 879, type: !1532)
!2916 = !DILocation(line: 879, column: 95, scope: !2906)
!2917 = !DILocalVariable(name: "context", arg: 5, scope: !2906, file: !3, line: 880, type: !1100)
!2918 = !DILocation(line: 880, column: 27, scope: !2906)
!2919 = !DILocalVariable(name: "flag", arg: 6, scope: !2906, file: !3, line: 880, type: !1100)
!2920 = !DILocation(line: 880, column: 40, scope: !2906)
!2921 = !DILocalVariable(name: "ot", scope: !2906, file: !3, line: 882, type: !2439)
!2922 = !DILocation(line: 882, column: 18, scope: !2906)
!2923 = !DILocation(line: 882, column: 44, scope: !2906)
!2924 = !DILocation(line: 882, column: 23, scope: !2906)
!2925 = !DILocalVariable(name: "ptr", scope: !2906, file: !3, line: 884, type: !2307)
!2926 = !DILocation(line: 884, column: 13, scope: !2906)
!2927 = !DILocalVariable(name: "prop", scope: !2906, file: !3, line: 885, type: !1946)
!2928 = !DILocation(line: 885, column: 15, scope: !2906)
!2929 = !DILocalVariable(name: "block", scope: !2906, file: !3, line: 886, type: !1197)
!2930 = !DILocation(line: 886, column: 11, scope: !2906)
!2931 = !DILocation(line: 886, column: 19, scope: !2906)
!2932 = !DILocation(line: 886, column: 27, scope: !2906)
!2933 = !DILocation(line: 886, column: 33, scope: !2906)
!2934 = !DILocalVariable(name: "radial", scope: !2906, file: !3, line: 887, type: !2935)
!2935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1413)
!2936 = !DILocation(line: 887, column: 13, scope: !2906)
!2937 = !DILocation(line: 887, column: 23, scope: !2906)
!2938 = !DILocation(line: 887, column: 31, scope: !2906)
!2939 = !DILocation(line: 887, column: 36, scope: !2906)
!2940 = !DILocation(line: 887, column: 41, scope: !2906)
!2941 = !DILocation(line: 887, column: 64, scope: !2906)
!2942 = !DILocation(line: 888, column: 25, scope: !2906)
!2943 = !DILocation(line: 888, column: 33, scope: !2906)
!2944 = !DILocation(line: 888, column: 38, scope: !2906)
!2945 = !DILocation(line: 888, column: 43, scope: !2906)
!2946 = !DILocation(line: 888, column: 64, scope: !2906)
!2947 = !DILocation(line: 888, column: 68, scope: !2906)
!2948 = !DILocation(line: 888, column: 76, scope: !2906)
!2949 = !DILocation(line: 888, column: 82, scope: !2906)
!2950 = !DILocation(line: 888, column: 87, scope: !2906)
!2951 = !DILocation(line: 0, scope: !2906)
!2952 = !DILocation(line: 887, column: 22, scope: !2906)
!2953 = !DILocation(line: 890, column: 7, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 890, column: 6)
!2955 = !DILocation(line: 890, column: 10, scope: !2954)
!2956 = !DILocation(line: 890, column: 14, scope: !2954)
!2957 = !DILocation(line: 890, column: 18, scope: !2954)
!2958 = !DILocation(line: 890, column: 6, scope: !2906)
!2959 = !DILocation(line: 891, column: 20, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 890, column: 24)
!2961 = !DILocation(line: 891, column: 28, scope: !2960)
!2962 = !DILocation(line: 891, column: 3, scope: !2960)
!2963 = !DILocation(line: 892, column: 3, scope: !2960)
!2964 = !DILocation(line: 893, column: 3, scope: !2960)
!2965 = !DILocation(line: 896, column: 42, scope: !2906)
!2966 = !DILocation(line: 896, column: 2, scope: !2906)
!2967 = !DILocation(line: 898, column: 2, scope: !2906)
!2968 = !DILocation(line: 899, column: 40, scope: !2906)
!2969 = !DILocation(line: 899, column: 9, scope: !2906)
!2970 = !DILocation(line: 899, column: 7, scope: !2906)
!2971 = !DILocation(line: 904, column: 6, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 904, column: 6)
!2973 = !DILocation(line: 904, column: 11, scope: !2972)
!2974 = !DILocation(line: 904, column: 32, scope: !2972)
!2975 = !DILocation(line: 904, column: 14, scope: !2972)
!2976 = !DILocation(line: 904, column: 38, scope: !2972)
!2977 = !DILocation(line: 904, column: 6, scope: !2906)
!2978 = !DILocalVariable(name: "item", scope: !2979, file: !3, line: 905, type: !2828)
!2979 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 904, column: 52)
!2980 = !DILocation(line: 905, column: 21, scope: !2979)
!2981 = !DILocalVariable(name: "item_array", scope: !2979, file: !3, line: 905, type: !2828)
!2982 = !DILocation(line: 905, column: 28, scope: !2979)
!2983 = !DILocalVariable(name: "free", scope: !2979, file: !3, line: 906, type: !1413)
!2984 = !DILocation(line: 906, column: 8, scope: !2979)
!2985 = !DILocalVariable(name: "split", scope: !2979, file: !3, line: 907, type: !1113)
!2986 = !DILocation(line: 907, column: 13, scope: !2979)
!2987 = !DILocalVariable(name: "target", scope: !2979, file: !3, line: 908, type: !1113)
!2988 = !DILocation(line: 908, column: 13, scope: !2979)
!2989 = !DILocation(line: 910, column: 7, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 910, column: 7)
!2991 = !DILocation(line: 910, column: 7, scope: !2979)
!2992 = !DILocation(line: 911, column: 28, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 910, column: 15)
!2994 = !DILocation(line: 911, column: 13, scope: !2993)
!2995 = !DILocation(line: 911, column: 11, scope: !2993)
!2996 = !DILocation(line: 912, column: 3, scope: !2993)
!2997 = !DILocation(line: 914, column: 26, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 913, column: 8)
!2999 = !DILocation(line: 914, column: 12, scope: !2998)
!3000 = !DILocation(line: 914, column: 10, scope: !2998)
!3001 = !DILocation(line: 915, column: 28, scope: !2998)
!3002 = !DILocation(line: 915, column: 35, scope: !2998)
!3003 = !DILocation(line: 915, column: 43, scope: !2998)
!3004 = !DILocation(line: 915, column: 13, scope: !2998)
!3005 = !DILocation(line: 915, column: 11, scope: !2998)
!3006 = !DILocation(line: 918, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 918, column: 7)
!3008 = !DILocation(line: 918, column: 7, scope: !2979)
!3009 = !DILocation(line: 919, column: 42, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 918, column: 15)
!3011 = !DILocation(line: 919, column: 49, scope: !3010)
!3012 = !DILocation(line: 919, column: 63, scope: !3010)
!3013 = !DILocation(line: 919, column: 4, scope: !3010)
!3014 = !DILocation(line: 920, column: 3, scope: !3010)
!3015 = !DILocation(line: 922, column: 38, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 921, column: 8)
!3017 = !DILocation(line: 922, column: 45, scope: !3016)
!3018 = !DILocation(line: 922, column: 59, scope: !3016)
!3019 = !DILocation(line: 922, column: 4, scope: !3016)
!3020 = !DILocation(line: 925, column: 15, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 925, column: 3)
!3022 = !DILocation(line: 925, column: 13, scope: !3021)
!3023 = !DILocation(line: 925, column: 8, scope: !3021)
!3024 = !DILocation(line: 925, column: 27, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 925, column: 3)
!3026 = !DILocation(line: 925, column: 33, scope: !3025)
!3027 = !DILocation(line: 925, column: 3, scope: !3021)
!3028 = !DILocation(line: 926, column: 8, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 926, column: 8)
!3030 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 925, column: 53)
!3031 = !DILocation(line: 926, column: 14, scope: !3029)
!3032 = !DILocation(line: 926, column: 8, scope: !3030)
!3033 = !DILocalVariable(name: "tptr", scope: !3034, file: !3, line: 927, type: !2307)
!3034 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 926, column: 29)
!3035 = !DILocation(line: 927, column: 16, scope: !3034)
!3036 = !DILocation(line: 929, column: 46, scope: !3034)
!3037 = !DILocation(line: 929, column: 5, scope: !3034)
!3038 = !DILocation(line: 930, column: 9, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 930, column: 9)
!3040 = !DILocation(line: 930, column: 9, scope: !3034)
!3041 = !DILocation(line: 931, column: 15, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 931, column: 10)
!3043 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 930, column: 21)
!3044 = !DILocation(line: 931, column: 10, scope: !3042)
!3045 = !DILocation(line: 931, column: 10, scope: !3043)
!3046 = !DILocation(line: 932, column: 29, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 931, column: 21)
!3048 = !DILocation(line: 932, column: 24, scope: !3047)
!3049 = !DILocation(line: 932, column: 7, scope: !3047)
!3050 = !DILocation(line: 933, column: 7, scope: !3047)
!3051 = !DILocation(line: 933, column: 22, scope: !3047)
!3052 = !DILocation(line: 934, column: 6, scope: !3047)
!3053 = !DILocation(line: 935, column: 35, scope: !3043)
!3054 = !DILocation(line: 935, column: 18, scope: !3043)
!3055 = !DILocation(line: 935, column: 11, scope: !3043)
!3056 = !DILocation(line: 935, column: 16, scope: !3043)
!3057 = !DILocation(line: 936, column: 5, scope: !3043)
!3058 = !DILocation(line: 937, column: 34, scope: !3034)
!3059 = !DILocation(line: 937, column: 40, scope: !3034)
!3060 = !DILocation(line: 937, column: 46, scope: !3034)
!3061 = !DILocation(line: 937, column: 5, scope: !3034)
!3062 = !DILocation(line: 939, column: 21, scope: !3034)
!3063 = !DILocation(line: 939, column: 29, scope: !3034)
!3064 = !DILocation(line: 939, column: 33, scope: !3034)
!3065 = !DILocation(line: 939, column: 39, scope: !3034)
!3066 = !DILocation(line: 939, column: 45, scope: !3034)
!3067 = !DILocation(line: 939, column: 51, scope: !3034)
!3068 = !DILocation(line: 939, column: 62, scope: !3034)
!3069 = !DILocation(line: 939, column: 57, scope: !3034)
!3070 = !DILocation(line: 939, column: 68, scope: !3034)
!3071 = !DILocation(line: 939, column: 77, scope: !3034)
!3072 = !DILocation(line: 939, column: 5, scope: !3034)
!3073 = !DILocation(line: 941, column: 31, scope: !3034)
!3074 = !DILocation(line: 941, column: 38, scope: !3034)
!3075 = !DILocation(line: 941, column: 46, scope: !3034)
!3076 = !DILocation(line: 941, column: 52, scope: !3034)
!3077 = !DILocation(line: 941, column: 5, scope: !3034)
!3078 = !DILocation(line: 942, column: 4, scope: !3034)
!3079 = !DILocation(line: 944, column: 9, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 944, column: 9)
!3081 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 943, column: 9)
!3082 = !DILocation(line: 944, column: 15, scope: !3080)
!3083 = !DILocation(line: 944, column: 9, scope: !3081)
!3084 = !DILocalVariable(name: "but", scope: !3085, file: !3, line: 945, type: !2159)
!3085 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 944, column: 21)
!3086 = !DILocation(line: 945, column: 13, scope: !3085)
!3087 = !DILocation(line: 947, column: 10, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3085, file: !3, line: 947, column: 10)
!3089 = !DILocation(line: 947, column: 18, scope: !3088)
!3090 = !DILocation(line: 947, column: 15, scope: !3088)
!3091 = !DILocation(line: 947, column: 29, scope: !3088)
!3092 = !DILocation(line: 947, column: 33, scope: !3088)
!3093 = !DILocation(line: 947, column: 10, scope: !3085)
!3094 = !DILocation(line: 948, column: 31, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3088, file: !3, line: 947, column: 41)
!3096 = !DILocation(line: 948, column: 38, scope: !3095)
!3097 = !DILocation(line: 948, column: 46, scope: !3095)
!3098 = !DILocation(line: 948, column: 16, scope: !3095)
!3099 = !DILocation(line: 948, column: 14, scope: !3095)
!3100 = !DILocation(line: 951, column: 7, scope: !3095)
!3101 = !DILocation(line: 951, column: 14, scope: !3095)
!3102 = !DILocation(line: 951, column: 19, scope: !3095)
!3103 = !DILocation(line: 952, column: 6, scope: !3095)
!3104 = !DILocation(line: 954, column: 10, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3085, file: !3, line: 954, column: 10)
!3106 = !DILocation(line: 954, column: 16, scope: !3105)
!3107 = !DILocation(line: 954, column: 21, scope: !3105)
!3108 = !DILocation(line: 954, column: 24, scope: !3105)
!3109 = !DILocation(line: 954, column: 10, scope: !3085)
!3110 = !DILocation(line: 955, column: 15, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 954, column: 32)
!3112 = !DILocation(line: 955, column: 23, scope: !3111)
!3113 = !DILocation(line: 955, column: 29, scope: !3111)
!3114 = !DILocation(line: 955, column: 35, scope: !3111)
!3115 = !DILocation(line: 955, column: 41, scope: !3111)
!3116 = !DILocation(line: 955, column: 7, scope: !3111)
!3117 = !DILocation(line: 957, column: 13, scope: !3111)
!3118 = !DILocation(line: 957, column: 20, scope: !3111)
!3119 = !DILocation(line: 957, column: 28, scope: !3111)
!3120 = !DILocation(line: 957, column: 11, scope: !3111)
!3121 = !DILocation(line: 958, column: 6, scope: !3111)
!3122 = !DILocation(line: 961, column: 22, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 959, column: 11)
!3124 = !DILocation(line: 961, column: 39, scope: !3123)
!3125 = !DILocation(line: 961, column: 45, scope: !3123)
!3126 = !DILocation(line: 961, column: 57, scope: !3123)
!3127 = !DILocation(line: 961, column: 67, scope: !3123)
!3128 = !DILocation(line: 961, column: 72, scope: !3123)
!3129 = !DILocation(line: 961, column: 13, scope: !3123)
!3130 = !DILocation(line: 961, column: 11, scope: !3123)
!3131 = !DILocation(line: 964, column: 32, scope: !3085)
!3132 = !DILocation(line: 964, column: 37, scope: !3085)
!3133 = !DILocation(line: 964, column: 6, scope: !3085)
!3134 = !DILocation(line: 965, column: 5, scope: !3085)
!3135 = !DILocation(line: 967, column: 10, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 967, column: 10)
!3137 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 966, column: 10)
!3138 = !DILocation(line: 967, column: 10, scope: !3137)
!3139 = !DILocation(line: 968, column: 15, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 967, column: 18)
!3141 = !DILocation(line: 968, column: 7, scope: !3140)
!3142 = !DILocation(line: 969, column: 6, scope: !3140)
!3143 = !DILocation(line: 972, column: 15, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 970, column: 11)
!3145 = !DILocation(line: 972, column: 7, scope: !3144)
!3146 = !DILocation(line: 976, column: 3, scope: !3030)
!3147 = !DILocation(line: 925, column: 49, scope: !3025)
!3148 = !DILocation(line: 925, column: 3, scope: !3025)
!3149 = distinct !{!3149, !3027, !3150}
!3150 = !DILocation(line: 976, column: 3, scope: !3021)
!3151 = !DILocation(line: 977, column: 7, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 977, column: 7)
!3153 = !DILocation(line: 977, column: 7, scope: !2979)
!3154 = !DILocation(line: 978, column: 4, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3152, file: !3, line: 977, column: 13)
!3156 = !DILocation(line: 978, column: 14, scope: !3155)
!3157 = !DILocation(line: 979, column: 3, scope: !3155)
!3158 = !DILocation(line: 980, column: 2, scope: !2979)
!3159 = !DILocation(line: 981, column: 11, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 981, column: 11)
!3161 = !DILocation(line: 981, column: 16, scope: !3160)
!3162 = !DILocation(line: 981, column: 37, scope: !3160)
!3163 = !DILocation(line: 981, column: 19, scope: !3160)
!3164 = !DILocation(line: 981, column: 43, scope: !3160)
!3165 = !DILocation(line: 981, column: 11, scope: !2972)
!3166 = !DILocation(line: 982, column: 3, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 981, column: 57)
!3168 = !DILocation(line: 983, column: 3, scope: !3167)
!3169 = !DILocation(line: 986, column: 3, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 985, column: 7)
!3171 = !DILocation(line: 987, column: 3, scope: !3170)
!3172 = !DILocation(line: 989, column: 1, scope: !2906)
!3173 = distinct !DISubprogram(name: "uiLayoutRadial", scope: !3, file: !3, line: 2660, type: !3174, scopeLine: 2661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!1113, !1113}
!3176 = !DILocalVariable(name: "layout", arg: 1, scope: !3173, file: !3, line: 2660, type: !1113)
!3177 = !DILocation(line: 2660, column: 36, scope: !3173)
!3178 = !DILocalVariable(name: "litem", scope: !3173, file: !3, line: 2662, type: !1113)
!3179 = !DILocation(line: 2662, column: 12, scope: !3173)
!3180 = !DILocalVariable(name: "item", scope: !3173, file: !3, line: 2663, type: !3181)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!3182 = !DILocation(line: 2663, column: 10, scope: !3173)
!3183 = !DILocation(line: 2666, column: 6, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 2666, column: 6)
!3185 = !DILocation(line: 2666, column: 14, scope: !3184)
!3186 = !DILocation(line: 2666, column: 20, scope: !3184)
!3187 = !DILocation(line: 2666, column: 25, scope: !3184)
!3188 = !DILocation(line: 2666, column: 6, scope: !3173)
!3189 = !DILocation(line: 2667, column: 34, scope: !3184)
!3190 = !DILocation(line: 2667, column: 42, scope: !3184)
!3191 = !DILocation(line: 2667, column: 10, scope: !3184)
!3192 = !DILocation(line: 2667, column: 3, scope: !3184)
!3193 = !DILocation(line: 2670, column: 14, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3173, file: !3, line: 2670, column: 2)
!3195 = !DILocation(line: 2670, column: 22, scope: !3194)
!3196 = !DILocation(line: 2670, column: 28, scope: !3194)
!3197 = !DILocation(line: 2670, column: 36, scope: !3194)
!3198 = !DILocation(line: 2670, column: 42, scope: !3194)
!3199 = !DILocation(line: 2670, column: 12, scope: !3194)
!3200 = !DILocation(line: 2670, column: 7, scope: !3194)
!3201 = !DILocation(line: 2670, column: 49, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3194, file: !3, line: 2670, column: 2)
!3203 = !DILocation(line: 2670, column: 2, scope: !3194)
!3204 = !DILocation(line: 2671, column: 23, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3202, file: !3, line: 2670, column: 74)
!3206 = !DILocation(line: 2671, column: 11, scope: !3205)
!3207 = !DILocation(line: 2671, column: 9, scope: !3205)
!3208 = !DILocation(line: 2672, column: 7, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3205, file: !3, line: 2672, column: 7)
!3210 = !DILocation(line: 2672, column: 14, scope: !3209)
!3211 = !DILocation(line: 2672, column: 19, scope: !3209)
!3212 = !DILocation(line: 2672, column: 24, scope: !3209)
!3213 = !DILocation(line: 2672, column: 7, scope: !3205)
!3214 = !DILocation(line: 2673, column: 24, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 2672, column: 47)
!3216 = !DILocation(line: 2673, column: 32, scope: !3215)
!3217 = !DILocation(line: 2673, column: 38, scope: !3215)
!3218 = !DILocation(line: 2673, column: 45, scope: !3215)
!3219 = !DILocation(line: 2673, column: 4, scope: !3215)
!3220 = !DILocation(line: 2674, column: 11, scope: !3215)
!3221 = !DILocation(line: 2674, column: 4, scope: !3215)
!3222 = !DILocation(line: 2676, column: 2, scope: !3205)
!3223 = !DILocation(line: 2670, column: 62, scope: !3202)
!3224 = !DILocation(line: 2670, column: 68, scope: !3202)
!3225 = !DILocation(line: 2670, column: 60, scope: !3202)
!3226 = !DILocation(line: 2670, column: 2, scope: !3202)
!3227 = distinct !{!3227, !3203, !3228}
!3228 = !DILocation(line: 2676, column: 2, scope: !3194)
!3229 = !DILocation(line: 2678, column: 10, scope: !3173)
!3230 = !DILocation(line: 2678, column: 8, scope: !3173)
!3231 = !DILocation(line: 2679, column: 2, scope: !3173)
!3232 = !DILocation(line: 2679, column: 9, scope: !3173)
!3233 = !DILocation(line: 2679, column: 14, scope: !3173)
!3234 = !DILocation(line: 2679, column: 19, scope: !3173)
!3235 = !DILocation(line: 2680, column: 16, scope: !3173)
!3236 = !DILocation(line: 2680, column: 24, scope: !3173)
!3237 = !DILocation(line: 2680, column: 2, scope: !3173)
!3238 = !DILocation(line: 2680, column: 9, scope: !3173)
!3239 = !DILocation(line: 2680, column: 14, scope: !3173)
!3240 = !DILocation(line: 2681, column: 2, scope: !3173)
!3241 = !DILocation(line: 2681, column: 9, scope: !3173)
!3242 = !DILocation(line: 2681, column: 16, scope: !3173)
!3243 = !DILocation(line: 2682, column: 2, scope: !3173)
!3244 = !DILocation(line: 2682, column: 9, scope: !3173)
!3245 = !DILocation(line: 2682, column: 17, scope: !3173)
!3246 = !DILocation(line: 2683, column: 19, scope: !3173)
!3247 = !DILocation(line: 2683, column: 27, scope: !3173)
!3248 = !DILocation(line: 2683, column: 2, scope: !3173)
!3249 = !DILocation(line: 2683, column: 9, scope: !3173)
!3250 = !DILocation(line: 2683, column: 17, scope: !3173)
!3251 = !DILocation(line: 2684, column: 20, scope: !3173)
!3252 = !DILocation(line: 2684, column: 28, scope: !3173)
!3253 = !DILocation(line: 2684, column: 2, scope: !3173)
!3254 = !DILocation(line: 2684, column: 9, scope: !3173)
!3255 = !DILocation(line: 2684, column: 18, scope: !3173)
!3256 = !DILocation(line: 2685, column: 13, scope: !3173)
!3257 = !DILocation(line: 2685, column: 21, scope: !3173)
!3258 = !DILocation(line: 2685, column: 2, scope: !3173)
!3259 = !DILocation(line: 2685, column: 9, scope: !3173)
!3260 = !DILocation(line: 2685, column: 11, scope: !3173)
!3261 = !DILocation(line: 2686, column: 15, scope: !3173)
!3262 = !DILocation(line: 2686, column: 23, scope: !3173)
!3263 = !DILocation(line: 2686, column: 29, scope: !3173)
!3264 = !DILocation(line: 2686, column: 37, scope: !3173)
!3265 = !DILocation(line: 2686, column: 44, scope: !3173)
!3266 = !DILocation(line: 2686, column: 2, scope: !3173)
!3267 = !DILocation(line: 2688, column: 22, scope: !3173)
!3268 = !DILocation(line: 2688, column: 30, scope: !3173)
!3269 = !DILocation(line: 2688, column: 36, scope: !3173)
!3270 = !DILocation(line: 2688, column: 43, scope: !3173)
!3271 = !DILocation(line: 2688, column: 2, scope: !3173)
!3272 = !DILocation(line: 2690, column: 9, scope: !3173)
!3273 = !DILocation(line: 2690, column: 2, scope: !3173)
!3274 = !DILocation(line: 2691, column: 1, scope: !3173)
!3275 = distinct !DISubprogram(name: "uiLayoutSplit", scope: !3, file: !3, line: 2783, type: !3276, scopeLine: 2784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!1113, !1113, !1180, !1100}
!3278 = !DILocalVariable(name: "layout", arg: 1, scope: !3275, file: !3, line: 2783, type: !1113)
!3279 = !DILocation(line: 2783, column: 35, scope: !3275)
!3280 = !DILocalVariable(name: "percentage", arg: 2, scope: !3275, file: !3, line: 2783, type: !1180)
!3281 = !DILocation(line: 2783, column: 49, scope: !3275)
!3282 = !DILocalVariable(name: "align", arg: 3, scope: !3275, file: !3, line: 2783, type: !1100)
!3283 = !DILocation(line: 2783, column: 65, scope: !3275)
!3284 = !DILocalVariable(name: "split", scope: !3275, file: !3, line: 2785, type: !2327)
!3285 = !DILocation(line: 2785, column: 21, scope: !3275)
!3286 = !DILocation(line: 2787, column: 10, scope: !3275)
!3287 = !DILocation(line: 2787, column: 8, scope: !3275)
!3288 = !DILocation(line: 2788, column: 2, scope: !3275)
!3289 = !DILocation(line: 2788, column: 9, scope: !3275)
!3290 = !DILocation(line: 2788, column: 15, scope: !3275)
!3291 = !DILocation(line: 2788, column: 20, scope: !3275)
!3292 = !DILocation(line: 2788, column: 25, scope: !3275)
!3293 = !DILocation(line: 2789, column: 22, scope: !3275)
!3294 = !DILocation(line: 2789, column: 30, scope: !3275)
!3295 = !DILocation(line: 2789, column: 2, scope: !3275)
!3296 = !DILocation(line: 2789, column: 9, scope: !3275)
!3297 = !DILocation(line: 2789, column: 15, scope: !3275)
!3298 = !DILocation(line: 2789, column: 20, scope: !3275)
!3299 = !DILocation(line: 2790, column: 23, scope: !3275)
!3300 = !DILocation(line: 2790, column: 2, scope: !3275)
!3301 = !DILocation(line: 2790, column: 9, scope: !3275)
!3302 = !DILocation(line: 2790, column: 15, scope: !3275)
!3303 = !DILocation(line: 2790, column: 21, scope: !3275)
!3304 = !DILocation(line: 2791, column: 2, scope: !3275)
!3305 = !DILocation(line: 2791, column: 9, scope: !3275)
!3306 = !DILocation(line: 2791, column: 15, scope: !3275)
!3307 = !DILocation(line: 2791, column: 22, scope: !3275)
!3308 = !DILocation(line: 2792, column: 2, scope: !3275)
!3309 = !DILocation(line: 2792, column: 9, scope: !3275)
!3310 = !DILocation(line: 2792, column: 15, scope: !3275)
!3311 = !DILocation(line: 2792, column: 23, scope: !3275)
!3312 = !DILocation(line: 2793, column: 25, scope: !3275)
!3313 = !DILocation(line: 2793, column: 33, scope: !3275)
!3314 = !DILocation(line: 2793, column: 2, scope: !3275)
!3315 = !DILocation(line: 2793, column: 9, scope: !3275)
!3316 = !DILocation(line: 2793, column: 15, scope: !3275)
!3317 = !DILocation(line: 2793, column: 23, scope: !3275)
!3318 = !DILocation(line: 2794, column: 23, scope: !3275)
!3319 = !DILocation(line: 2794, column: 31, scope: !3275)
!3320 = !DILocation(line: 2794, column: 37, scope: !3275)
!3321 = !DILocation(line: 2794, column: 44, scope: !3275)
!3322 = !DILocation(line: 2794, column: 2, scope: !3275)
!3323 = !DILocation(line: 2794, column: 9, scope: !3275)
!3324 = !DILocation(line: 2794, column: 15, scope: !3275)
!3325 = !DILocation(line: 2794, column: 21, scope: !3275)
!3326 = !DILocation(line: 2795, column: 26, scope: !3275)
!3327 = !DILocation(line: 2795, column: 34, scope: !3275)
!3328 = !DILocation(line: 2795, column: 2, scope: !3275)
!3329 = !DILocation(line: 2795, column: 9, scope: !3275)
!3330 = !DILocation(line: 2795, column: 15, scope: !3275)
!3331 = !DILocation(line: 2795, column: 24, scope: !3275)
!3332 = !DILocation(line: 2796, column: 19, scope: !3275)
!3333 = !DILocation(line: 2796, column: 27, scope: !3275)
!3334 = !DILocation(line: 2796, column: 2, scope: !3275)
!3335 = !DILocation(line: 2796, column: 9, scope: !3275)
!3336 = !DILocation(line: 2796, column: 15, scope: !3275)
!3337 = !DILocation(line: 2796, column: 17, scope: !3275)
!3338 = !DILocation(line: 2797, column: 22, scope: !3275)
!3339 = !DILocation(line: 2797, column: 2, scope: !3275)
!3340 = !DILocation(line: 2797, column: 9, scope: !3275)
!3341 = !DILocation(line: 2797, column: 20, scope: !3275)
!3342 = !DILocation(line: 2798, column: 15, scope: !3275)
!3343 = !DILocation(line: 2798, column: 23, scope: !3275)
!3344 = !DILocation(line: 2798, column: 30, scope: !3275)
!3345 = !DILocation(line: 2798, column: 2, scope: !3275)
!3346 = !DILocation(line: 2800, column: 22, scope: !3275)
!3347 = !DILocation(line: 2800, column: 30, scope: !3275)
!3348 = !DILocation(line: 2800, column: 36, scope: !3275)
!3349 = !DILocation(line: 2800, column: 44, scope: !3275)
!3350 = !DILocation(line: 2800, column: 51, scope: !3275)
!3351 = !DILocation(line: 2800, column: 2, scope: !3275)
!3352 = !DILocation(line: 2802, column: 10, scope: !3275)
!3353 = !DILocation(line: 2802, column: 17, scope: !3275)
!3354 = !DILocation(line: 2802, column: 2, scope: !3275)
!3355 = distinct !DISubprogram(name: "uiLayoutColumn", scope: !3, file: !3, line: 2595, type: !3356, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!1113, !1113, !1100}
!3358 = !DILocalVariable(name: "layout", arg: 1, scope: !3355, file: !3, line: 2595, type: !1113)
!3359 = !DILocation(line: 2595, column: 36, scope: !3355)
!3360 = !DILocalVariable(name: "align", arg: 2, scope: !3355, file: !3, line: 2595, type: !1100)
!3361 = !DILocation(line: 2595, column: 48, scope: !3355)
!3362 = !DILocalVariable(name: "litem", scope: !3355, file: !3, line: 2597, type: !1113)
!3363 = !DILocation(line: 2597, column: 12, scope: !3355)
!3364 = !DILocation(line: 2599, column: 10, scope: !3355)
!3365 = !DILocation(line: 2599, column: 8, scope: !3355)
!3366 = !DILocation(line: 2600, column: 2, scope: !3355)
!3367 = !DILocation(line: 2600, column: 9, scope: !3355)
!3368 = !DILocation(line: 2600, column: 14, scope: !3355)
!3369 = !DILocation(line: 2600, column: 19, scope: !3355)
!3370 = !DILocation(line: 2601, column: 16, scope: !3355)
!3371 = !DILocation(line: 2601, column: 24, scope: !3355)
!3372 = !DILocation(line: 2601, column: 2, scope: !3355)
!3373 = !DILocation(line: 2601, column: 9, scope: !3355)
!3374 = !DILocation(line: 2601, column: 14, scope: !3355)
!3375 = !DILocation(line: 2602, column: 17, scope: !3355)
!3376 = !DILocation(line: 2602, column: 2, scope: !3355)
!3377 = !DILocation(line: 2602, column: 9, scope: !3355)
!3378 = !DILocation(line: 2602, column: 15, scope: !3355)
!3379 = !DILocation(line: 2603, column: 2, scope: !3355)
!3380 = !DILocation(line: 2603, column: 9, scope: !3355)
!3381 = !DILocation(line: 2603, column: 16, scope: !3355)
!3382 = !DILocation(line: 2604, column: 2, scope: !3355)
!3383 = !DILocation(line: 2604, column: 9, scope: !3355)
!3384 = !DILocation(line: 2604, column: 17, scope: !3355)
!3385 = !DILocation(line: 2605, column: 19, scope: !3355)
!3386 = !DILocation(line: 2605, column: 27, scope: !3355)
!3387 = !DILocation(line: 2605, column: 2, scope: !3355)
!3388 = !DILocation(line: 2605, column: 9, scope: !3355)
!3389 = !DILocation(line: 2605, column: 17, scope: !3355)
!3390 = !DILocation(line: 2606, column: 18, scope: !3355)
!3391 = !DILocation(line: 2606, column: 25, scope: !3355)
!3392 = !DILocation(line: 2606, column: 17, scope: !3355)
!3393 = !DILocation(line: 2606, column: 38, scope: !3355)
!3394 = !DILocation(line: 2606, column: 46, scope: !3355)
!3395 = !DILocation(line: 2606, column: 52, scope: !3355)
!3396 = !DILocation(line: 2606, column: 59, scope: !3355)
!3397 = !DILocation(line: 2606, column: 2, scope: !3355)
!3398 = !DILocation(line: 2606, column: 9, scope: !3355)
!3399 = !DILocation(line: 2606, column: 15, scope: !3355)
!3400 = !DILocation(line: 2607, column: 20, scope: !3355)
!3401 = !DILocation(line: 2607, column: 28, scope: !3355)
!3402 = !DILocation(line: 2607, column: 2, scope: !3355)
!3403 = !DILocation(line: 2607, column: 9, scope: !3355)
!3404 = !DILocation(line: 2607, column: 18, scope: !3355)
!3405 = !DILocation(line: 2608, column: 13, scope: !3355)
!3406 = !DILocation(line: 2608, column: 21, scope: !3355)
!3407 = !DILocation(line: 2608, column: 2, scope: !3355)
!3408 = !DILocation(line: 2608, column: 9, scope: !3355)
!3409 = !DILocation(line: 2608, column: 11, scope: !3355)
!3410 = !DILocation(line: 2609, column: 15, scope: !3355)
!3411 = !DILocation(line: 2609, column: 23, scope: !3355)
!3412 = !DILocation(line: 2609, column: 30, scope: !3355)
!3413 = !DILocation(line: 2609, column: 2, scope: !3355)
!3414 = !DILocation(line: 2611, column: 22, scope: !3355)
!3415 = !DILocation(line: 2611, column: 30, scope: !3355)
!3416 = !DILocation(line: 2611, column: 36, scope: !3355)
!3417 = !DILocation(line: 2611, column: 43, scope: !3355)
!3418 = !DILocation(line: 2611, column: 2, scope: !3355)
!3419 = !DILocation(line: 2613, column: 9, scope: !3355)
!3420 = !DILocation(line: 2613, column: 2, scope: !3355)
!3421 = distinct !DISubprogram(name: "ui_but_tip_from_enum_item", scope: !3, file: !3, line: 716, type: !3422, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{null, !2159, !2828}
!3424 = !DILocalVariable(name: "but", arg: 1, scope: !3421, file: !3, line: 716, type: !2159)
!3425 = !DILocation(line: 716, column: 46, scope: !3421)
!3426 = !DILocalVariable(name: "item", arg: 2, scope: !3421, file: !3, line: 716, type: !2828)
!3427 = !DILocation(line: 716, column: 69, scope: !3421)
!3428 = !DILocation(line: 718, column: 6, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 718, column: 6)
!3430 = !DILocation(line: 718, column: 11, scope: !3429)
!3431 = !DILocation(line: 718, column: 15, scope: !3429)
!3432 = !DILocation(line: 718, column: 23, scope: !3429)
!3433 = !DILocation(line: 718, column: 26, scope: !3429)
!3434 = !DILocation(line: 718, column: 31, scope: !3429)
!3435 = !DILocation(line: 718, column: 38, scope: !3429)
!3436 = !DILocation(line: 718, column: 6, scope: !3421)
!3437 = !DILocation(line: 719, column: 7, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 719, column: 7)
!3439 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 718, column: 47)
!3440 = !DILocation(line: 719, column: 13, scope: !3438)
!3441 = !DILocation(line: 719, column: 25, scope: !3438)
!3442 = !DILocation(line: 719, column: 28, scope: !3438)
!3443 = !DILocation(line: 719, column: 34, scope: !3438)
!3444 = !DILocation(line: 719, column: 7, scope: !3439)
!3445 = !DILocation(line: 720, column: 15, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 719, column: 50)
!3447 = !DILocation(line: 720, column: 21, scope: !3446)
!3448 = !DILocation(line: 720, column: 4, scope: !3446)
!3449 = !DILocation(line: 720, column: 9, scope: !3446)
!3450 = !DILocation(line: 720, column: 13, scope: !3446)
!3451 = !DILocation(line: 721, column: 3, scope: !3446)
!3452 = !DILocation(line: 722, column: 2, scope: !3439)
!3453 = !DILocation(line: 723, column: 1, scope: !3421)
!3454 = distinct !DISubprogram(name: "uiItemL", scope: !3, file: !3, line: 1783, type: !3455, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3455 = !DISubroutineType(types: !3456)
!3456 = !{null, !1113, !1380, !1100}
!3457 = !DILocalVariable(name: "layout", arg: 1, scope: !3454, file: !3, line: 1783, type: !1113)
!3458 = !DILocation(line: 1783, column: 24, scope: !3454)
!3459 = !DILocalVariable(name: "name", arg: 2, scope: !3454, file: !3, line: 1783, type: !1380)
!3460 = !DILocation(line: 1783, column: 44, scope: !3454)
!3461 = !DILocalVariable(name: "icon", arg: 3, scope: !3454, file: !3, line: 1783, type: !1100)
!3462 = !DILocation(line: 1783, column: 54, scope: !3454)
!3463 = !DILocation(line: 1785, column: 11, scope: !3454)
!3464 = !DILocation(line: 1785, column: 19, scope: !3454)
!3465 = !DILocation(line: 1785, column: 25, scope: !3454)
!3466 = !DILocation(line: 1785, column: 2, scope: !3454)
!3467 = !DILocation(line: 1786, column: 1, scope: !3454)
!3468 = distinct !DISubprogram(name: "uiItemS", scope: !3, file: !3, line: 1824, type: !3469, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{null, !1113}
!3471 = !DILocalVariable(name: "layout", arg: 1, scope: !3468, file: !3, line: 1824, type: !1113)
!3472 = !DILocation(line: 1824, column: 24, scope: !3468)
!3473 = !DILocalVariable(name: "block", scope: !3468, file: !3, line: 1826, type: !1197)
!3474 = !DILocation(line: 1826, column: 11, scope: !3468)
!3475 = !DILocation(line: 1826, column: 19, scope: !3468)
!3476 = !DILocation(line: 1826, column: 27, scope: !3468)
!3477 = !DILocation(line: 1826, column: 33, scope: !3468)
!3478 = !DILocalVariable(name: "is_menu", scope: !3468, file: !3, line: 1827, type: !1413)
!3479 = !DILocation(line: 1827, column: 7, scope: !3468)
!3480 = !DILocation(line: 1827, column: 34, scope: !3468)
!3481 = !DILocation(line: 1827, column: 17, scope: !3468)
!3482 = !DILocalVariable(name: "space", scope: !3468, file: !3, line: 1828, type: !1100)
!3483 = !DILocation(line: 1828, column: 6, scope: !3468)
!3484 = !DILocation(line: 1828, column: 15, scope: !3468)
!3485 = !DILocation(line: 1828, column: 14, scope: !3468)
!3486 = !DILocation(line: 1828, column: 34, scope: !3468)
!3487 = !DILocation(line: 1828, column: 32, scope: !3468)
!3488 = !DILocation(line: 1828, column: 53, scope: !3468)
!3489 = !DILocation(line: 1828, column: 51, scope: !3468)
!3490 = !DILocation(line: 1830, column: 22, scope: !3468)
!3491 = !DILocation(line: 1830, column: 29, scope: !3468)
!3492 = !DILocation(line: 1830, column: 2, scope: !3468)
!3493 = !DILocation(line: 1831, column: 11, scope: !3468)
!3494 = !DILocation(line: 1831, column: 19, scope: !3468)
!3495 = !DILocation(line: 1831, column: 18, scope: !3468)
!3496 = !DILocation(line: 1831, column: 60, scope: !3468)
!3497 = !DILocation(line: 1831, column: 67, scope: !3468)
!3498 = !DILocation(line: 1831, column: 2, scope: !3468)
!3499 = !DILocation(line: 1832, column: 1, scope: !3468)
!3500 = distinct !DISubprogram(name: "uiItemsEnumO", scope: !3, file: !3, line: 991, type: !3501, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{null, !1113, !1380, !1380}
!3503 = !DILocalVariable(name: "layout", arg: 1, scope: !3500, file: !3, line: 991, type: !1113)
!3504 = !DILocation(line: 991, column: 29, scope: !3500)
!3505 = !DILocalVariable(name: "opname", arg: 2, scope: !3500, file: !3, line: 991, type: !1380)
!3506 = !DILocation(line: 991, column: 49, scope: !3500)
!3507 = !DILocalVariable(name: "propname", arg: 3, scope: !3500, file: !3, line: 991, type: !1380)
!3508 = !DILocation(line: 991, column: 69, scope: !3500)
!3509 = !DILocation(line: 993, column: 19, scope: !3500)
!3510 = !DILocation(line: 993, column: 27, scope: !3500)
!3511 = !DILocation(line: 993, column: 35, scope: !3500)
!3512 = !DILocation(line: 993, column: 51, scope: !3500)
!3513 = !DILocation(line: 993, column: 59, scope: !3500)
!3514 = !DILocation(line: 993, column: 65, scope: !3500)
!3515 = !DILocation(line: 993, column: 2, scope: !3500)
!3516 = !DILocation(line: 994, column: 1, scope: !3500)
!3517 = distinct !DISubprogram(name: "uiItemEnumO_value", scope: !3, file: !3, line: 997, type: !3518, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{null, !1113, !1380, !1100, !1380, !1380, !1100}
!3520 = !DILocalVariable(name: "layout", arg: 1, scope: !3517, file: !3, line: 997, type: !1113)
!3521 = !DILocation(line: 997, column: 34, scope: !3517)
!3522 = !DILocalVariable(name: "name", arg: 2, scope: !3517, file: !3, line: 997, type: !1380)
!3523 = !DILocation(line: 997, column: 54, scope: !3517)
!3524 = !DILocalVariable(name: "icon", arg: 3, scope: !3517, file: !3, line: 997, type: !1100)
!3525 = !DILocation(line: 997, column: 64, scope: !3517)
!3526 = !DILocalVariable(name: "opname", arg: 4, scope: !3517, file: !3, line: 997, type: !1380)
!3527 = !DILocation(line: 997, column: 82, scope: !3517)
!3528 = !DILocalVariable(name: "propname", arg: 5, scope: !3517, file: !3, line: 997, type: !1380)
!3529 = !DILocation(line: 997, column: 102, scope: !3517)
!3530 = !DILocalVariable(name: "value", arg: 6, scope: !3517, file: !3, line: 997, type: !1100)
!3531 = !DILocation(line: 997, column: 116, scope: !3517)
!3532 = !DILocalVariable(name: "ot", scope: !3517, file: !3, line: 999, type: !2439)
!3533 = !DILocation(line: 999, column: 18, scope: !3517)
!3534 = !DILocation(line: 999, column: 44, scope: !3517)
!3535 = !DILocation(line: 999, column: 23, scope: !3517)
!3536 = !DILocalVariable(name: "ptr", scope: !3517, file: !3, line: 1000, type: !2307)
!3537 = !DILocation(line: 1000, column: 13, scope: !3517)
!3538 = !DILocalVariable(name: "prop", scope: !3517, file: !3, line: 1001, type: !1946)
!3539 = !DILocation(line: 1001, column: 15, scope: !3517)
!3540 = !DILocation(line: 1003, column: 2, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 1003, column: 2)
!3542 = !DILocation(line: 1003, column: 2, scope: !3517)
!3543 = !DILocation(line: 1003, column: 2, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 1003, column: 2)
!3545 = !DILocation(line: 1005, column: 42, scope: !3517)
!3546 = !DILocation(line: 1005, column: 2, scope: !3517)
!3547 = !DILocation(line: 1008, column: 45, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 1008, column: 6)
!3549 = !DILocation(line: 1008, column: 14, scope: !3548)
!3550 = !DILocation(line: 1008, column: 12, scope: !3548)
!3551 = !DILocation(line: 1008, column: 6, scope: !3517)
!3552 = !DILocation(line: 1010, column: 2, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 1008, column: 57)
!3554 = !DILocation(line: 1012, column: 3, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 1011, column: 7)
!3556 = !DILocation(line: 1013, column: 3, scope: !3555)
!3557 = !DILocation(line: 1016, column: 30, scope: !3517)
!3558 = !DILocation(line: 1016, column: 36, scope: !3517)
!3559 = !DILocation(line: 1016, column: 2, scope: !3517)
!3560 = !DILocation(line: 1019, column: 7, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3517, file: !3, line: 1019, column: 6)
!3562 = !DILocation(line: 1019, column: 6, scope: !3517)
!3563 = !DILocation(line: 1020, column: 31, scope: !3561)
!3564 = !DILocation(line: 1020, column: 45, scope: !3561)
!3565 = !DILocation(line: 1020, column: 51, scope: !3561)
!3566 = !DILocation(line: 1020, column: 10, scope: !3561)
!3567 = !DILocation(line: 1020, column: 8, scope: !3561)
!3568 = !DILocation(line: 1020, column: 3, scope: !3561)
!3569 = !DILocation(line: 1022, column: 18, scope: !3517)
!3570 = !DILocation(line: 1022, column: 26, scope: !3517)
!3571 = !DILocation(line: 1022, column: 30, scope: !3517)
!3572 = !DILocation(line: 1022, column: 36, scope: !3517)
!3573 = !DILocation(line: 1022, column: 46, scope: !3517)
!3574 = !DILocation(line: 1022, column: 42, scope: !3517)
!3575 = !DILocation(line: 1022, column: 52, scope: !3517)
!3576 = !DILocation(line: 1022, column: 60, scope: !3517)
!3577 = !DILocation(line: 1022, column: 66, scope: !3517)
!3578 = !DILocation(line: 1022, column: 2, scope: !3517)
!3579 = !DILocation(line: 1023, column: 1, scope: !3517)
!3580 = distinct !DISubprogram(name: "uiItemEnumO_string", scope: !3, file: !3, line: 1025, type: !3581, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{null, !1113, !1380, !1100, !1380, !1380, !1380}
!3583 = !DILocalVariable(name: "layout", arg: 1, scope: !3580, file: !3, line: 1025, type: !1113)
!3584 = !DILocation(line: 1025, column: 35, scope: !3580)
!3585 = !DILocalVariable(name: "name", arg: 2, scope: !3580, file: !3, line: 1025, type: !1380)
!3586 = !DILocation(line: 1025, column: 55, scope: !3580)
!3587 = !DILocalVariable(name: "icon", arg: 3, scope: !3580, file: !3, line: 1025, type: !1100)
!3588 = !DILocation(line: 1025, column: 65, scope: !3580)
!3589 = !DILocalVariable(name: "opname", arg: 4, scope: !3580, file: !3, line: 1025, type: !1380)
!3590 = !DILocation(line: 1025, column: 83, scope: !3580)
!3591 = !DILocalVariable(name: "propname", arg: 5, scope: !3580, file: !3, line: 1025, type: !1380)
!3592 = !DILocation(line: 1025, column: 103, scope: !3580)
!3593 = !DILocalVariable(name: "value_str", arg: 6, scope: !3580, file: !3, line: 1025, type: !1380)
!3594 = !DILocation(line: 1025, column: 125, scope: !3580)
!3595 = !DILocalVariable(name: "ot", scope: !3580, file: !3, line: 1027, type: !2439)
!3596 = !DILocation(line: 1027, column: 18, scope: !3580)
!3597 = !DILocation(line: 1027, column: 44, scope: !3580)
!3598 = !DILocation(line: 1027, column: 23, scope: !3580)
!3599 = !DILocalVariable(name: "ptr", scope: !3580, file: !3, line: 1028, type: !2307)
!3600 = !DILocation(line: 1028, column: 13, scope: !3580)
!3601 = !DILocalVariable(name: "prop", scope: !3580, file: !3, line: 1029, type: !1946)
!3602 = !DILocation(line: 1029, column: 15, scope: !3580)
!3603 = !DILocalVariable(name: "item", scope: !3580, file: !3, line: 1031, type: !2828)
!3604 = !DILocation(line: 1031, column: 20, scope: !3580)
!3605 = !DILocalVariable(name: "value", scope: !3580, file: !3, line: 1032, type: !1100)
!3606 = !DILocation(line: 1032, column: 6, scope: !3580)
!3607 = !DILocalVariable(name: "free", scope: !3580, file: !3, line: 1033, type: !1413)
!3608 = !DILocation(line: 1033, column: 7, scope: !3580)
!3609 = !DILocation(line: 1035, column: 2, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 1035, column: 2)
!3611 = !DILocation(line: 1035, column: 2, scope: !3580)
!3612 = !DILocation(line: 1035, column: 2, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3610, file: !3, line: 1035, column: 2)
!3614 = !DILocation(line: 1037, column: 42, scope: !3580)
!3615 = !DILocation(line: 1037, column: 2, scope: !3580)
!3616 = !DILocation(line: 1040, column: 45, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 1040, column: 6)
!3618 = !DILocation(line: 1040, column: 14, scope: !3617)
!3619 = !DILocation(line: 1040, column: 12, scope: !3617)
!3620 = !DILocation(line: 1040, column: 6, scope: !3580)
!3621 = !DILocation(line: 1042, column: 27, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 1040, column: 57)
!3623 = !DILocation(line: 1042, column: 35, scope: !3622)
!3624 = !DILocation(line: 1042, column: 41, scope: !3622)
!3625 = !DILocation(line: 1042, column: 48, scope: !3622)
!3626 = !DILocation(line: 1042, column: 62, scope: !3622)
!3627 = !DILocation(line: 1042, column: 3, scope: !3622)
!3628 = !DILocation(line: 1043, column: 7, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1043, column: 7)
!3630 = !DILocation(line: 1043, column: 12, scope: !3629)
!3631 = !DILocation(line: 1043, column: 20, scope: !3629)
!3632 = !DILocation(line: 1043, column: 46, scope: !3629)
!3633 = !DILocation(line: 1043, column: 52, scope: !3629)
!3634 = !DILocation(line: 1043, column: 23, scope: !3629)
!3635 = !DILocation(line: 1043, column: 71, scope: !3629)
!3636 = !DILocation(line: 1043, column: 7, scope: !3622)
!3637 = !DILocation(line: 1044, column: 8, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1044, column: 8)
!3639 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 1043, column: 77)
!3640 = !DILocation(line: 1044, column: 8, scope: !3639)
!3641 = !DILocation(line: 1045, column: 5, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 1044, column: 14)
!3643 = !DILocation(line: 1045, column: 15, scope: !3642)
!3644 = !DILocation(line: 1046, column: 4, scope: !3642)
!3645 = !DILocation(line: 1047, column: 4, scope: !3639)
!3646 = !DILocation(line: 1048, column: 4, scope: !3639)
!3647 = !DILocation(line: 1051, column: 7, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1051, column: 7)
!3649 = !DILocation(line: 1051, column: 7, scope: !3622)
!3650 = !DILocation(line: 1052, column: 4, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3648, file: !3, line: 1051, column: 13)
!3652 = !DILocation(line: 1052, column: 14, scope: !3651)
!3653 = !DILocation(line: 1053, column: 3, scope: !3651)
!3654 = !DILocation(line: 1054, column: 2, scope: !3622)
!3655 = !DILocation(line: 1056, column: 3, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 1055, column: 7)
!3657 = !DILocation(line: 1057, column: 3, scope: !3656)
!3658 = !DILocation(line: 1060, column: 30, scope: !3580)
!3659 = !DILocation(line: 1060, column: 36, scope: !3580)
!3660 = !DILocation(line: 1060, column: 2, scope: !3580)
!3661 = !DILocation(line: 1063, column: 7, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 1063, column: 6)
!3663 = !DILocation(line: 1063, column: 6, scope: !3580)
!3664 = !DILocation(line: 1064, column: 31, scope: !3662)
!3665 = !DILocation(line: 1064, column: 45, scope: !3662)
!3666 = !DILocation(line: 1064, column: 51, scope: !3662)
!3667 = !DILocation(line: 1064, column: 10, scope: !3662)
!3668 = !DILocation(line: 1064, column: 8, scope: !3662)
!3669 = !DILocation(line: 1064, column: 3, scope: !3662)
!3670 = !DILocation(line: 1066, column: 18, scope: !3580)
!3671 = !DILocation(line: 1066, column: 26, scope: !3580)
!3672 = !DILocation(line: 1066, column: 30, scope: !3580)
!3673 = !DILocation(line: 1066, column: 36, scope: !3580)
!3674 = !DILocation(line: 1066, column: 46, scope: !3580)
!3675 = !DILocation(line: 1066, column: 42, scope: !3580)
!3676 = !DILocation(line: 1066, column: 52, scope: !3580)
!3677 = !DILocation(line: 1066, column: 60, scope: !3580)
!3678 = !DILocation(line: 1066, column: 66, scope: !3580)
!3679 = !DILocation(line: 1066, column: 2, scope: !3580)
!3680 = !DILocation(line: 1067, column: 1, scope: !3580)
!3681 = distinct !DISubprogram(name: "uiItemBooleanO", scope: !3, file: !3, line: 1069, type: !3518, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3682 = !DILocalVariable(name: "layout", arg: 1, scope: !3681, file: !3, line: 1069, type: !1113)
!3683 = !DILocation(line: 1069, column: 31, scope: !3681)
!3684 = !DILocalVariable(name: "name", arg: 2, scope: !3681, file: !3, line: 1069, type: !1380)
!3685 = !DILocation(line: 1069, column: 51, scope: !3681)
!3686 = !DILocalVariable(name: "icon", arg: 3, scope: !3681, file: !3, line: 1069, type: !1100)
!3687 = !DILocation(line: 1069, column: 61, scope: !3681)
!3688 = !DILocalVariable(name: "opname", arg: 4, scope: !3681, file: !3, line: 1069, type: !1380)
!3689 = !DILocation(line: 1069, column: 79, scope: !3681)
!3690 = !DILocalVariable(name: "propname", arg: 5, scope: !3681, file: !3, line: 1069, type: !1380)
!3691 = !DILocation(line: 1069, column: 99, scope: !3681)
!3692 = !DILocalVariable(name: "value", arg: 6, scope: !3681, file: !3, line: 1069, type: !1100)
!3693 = !DILocation(line: 1069, column: 113, scope: !3681)
!3694 = !DILocalVariable(name: "ot", scope: !3681, file: !3, line: 1071, type: !2439)
!3695 = !DILocation(line: 1071, column: 18, scope: !3681)
!3696 = !DILocation(line: 1071, column: 44, scope: !3681)
!3697 = !DILocation(line: 1071, column: 23, scope: !3681)
!3698 = !DILocalVariable(name: "ptr", scope: !3681, file: !3, line: 1072, type: !2307)
!3699 = !DILocation(line: 1072, column: 13, scope: !3681)
!3700 = !DILocation(line: 1074, column: 2, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 1074, column: 2)
!3702 = !DILocation(line: 1074, column: 2, scope: !3681)
!3703 = !DILocation(line: 1074, column: 2, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 1074, column: 2)
!3705 = !DILocation(line: 1076, column: 42, scope: !3681)
!3706 = !DILocation(line: 1076, column: 2, scope: !3681)
!3707 = !DILocation(line: 1077, column: 24, scope: !3681)
!3708 = !DILocation(line: 1077, column: 34, scope: !3681)
!3709 = !DILocation(line: 1077, column: 2, scope: !3681)
!3710 = !DILocation(line: 1079, column: 18, scope: !3681)
!3711 = !DILocation(line: 1079, column: 26, scope: !3681)
!3712 = !DILocation(line: 1079, column: 30, scope: !3681)
!3713 = !DILocation(line: 1079, column: 36, scope: !3681)
!3714 = !DILocation(line: 1079, column: 46, scope: !3681)
!3715 = !DILocation(line: 1079, column: 42, scope: !3681)
!3716 = !DILocation(line: 1079, column: 52, scope: !3681)
!3717 = !DILocation(line: 1079, column: 60, scope: !3681)
!3718 = !DILocation(line: 1079, column: 66, scope: !3681)
!3719 = !DILocation(line: 1079, column: 2, scope: !3681)
!3720 = !DILocation(line: 1080, column: 1, scope: !3681)
!3721 = distinct !DISubprogram(name: "uiItemIntO", scope: !3, file: !3, line: 1082, type: !3518, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3722 = !DILocalVariable(name: "layout", arg: 1, scope: !3721, file: !3, line: 1082, type: !1113)
!3723 = !DILocation(line: 1082, column: 27, scope: !3721)
!3724 = !DILocalVariable(name: "name", arg: 2, scope: !3721, file: !3, line: 1082, type: !1380)
!3725 = !DILocation(line: 1082, column: 47, scope: !3721)
!3726 = !DILocalVariable(name: "icon", arg: 3, scope: !3721, file: !3, line: 1082, type: !1100)
!3727 = !DILocation(line: 1082, column: 57, scope: !3721)
!3728 = !DILocalVariable(name: "opname", arg: 4, scope: !3721, file: !3, line: 1082, type: !1380)
!3729 = !DILocation(line: 1082, column: 75, scope: !3721)
!3730 = !DILocalVariable(name: "propname", arg: 5, scope: !3721, file: !3, line: 1082, type: !1380)
!3731 = !DILocation(line: 1082, column: 95, scope: !3721)
!3732 = !DILocalVariable(name: "value", arg: 6, scope: !3721, file: !3, line: 1082, type: !1100)
!3733 = !DILocation(line: 1082, column: 109, scope: !3721)
!3734 = !DILocalVariable(name: "ot", scope: !3721, file: !3, line: 1084, type: !2439)
!3735 = !DILocation(line: 1084, column: 18, scope: !3721)
!3736 = !DILocation(line: 1084, column: 44, scope: !3721)
!3737 = !DILocation(line: 1084, column: 23, scope: !3721)
!3738 = !DILocalVariable(name: "ptr", scope: !3721, file: !3, line: 1085, type: !2307)
!3739 = !DILocation(line: 1085, column: 13, scope: !3721)
!3740 = !DILocation(line: 1087, column: 2, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1087, column: 2)
!3742 = !DILocation(line: 1087, column: 2, scope: !3721)
!3743 = !DILocation(line: 1087, column: 2, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 1087, column: 2)
!3745 = !DILocation(line: 1089, column: 42, scope: !3721)
!3746 = !DILocation(line: 1089, column: 2, scope: !3721)
!3747 = !DILocation(line: 1090, column: 20, scope: !3721)
!3748 = !DILocation(line: 1090, column: 30, scope: !3721)
!3749 = !DILocation(line: 1090, column: 2, scope: !3721)
!3750 = !DILocation(line: 1092, column: 18, scope: !3721)
!3751 = !DILocation(line: 1092, column: 26, scope: !3721)
!3752 = !DILocation(line: 1092, column: 30, scope: !3721)
!3753 = !DILocation(line: 1092, column: 36, scope: !3721)
!3754 = !DILocation(line: 1092, column: 46, scope: !3721)
!3755 = !DILocation(line: 1092, column: 42, scope: !3721)
!3756 = !DILocation(line: 1092, column: 52, scope: !3721)
!3757 = !DILocation(line: 1092, column: 60, scope: !3721)
!3758 = !DILocation(line: 1092, column: 66, scope: !3721)
!3759 = !DILocation(line: 1092, column: 2, scope: !3721)
!3760 = !DILocation(line: 1093, column: 1, scope: !3721)
!3761 = distinct !DISubprogram(name: "uiItemFloatO", scope: !3, file: !3, line: 1095, type: !3762, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{null, !1113, !1380, !1100, !1380, !1380, !1180}
!3764 = !DILocalVariable(name: "layout", arg: 1, scope: !3761, file: !3, line: 1095, type: !1113)
!3765 = !DILocation(line: 1095, column: 29, scope: !3761)
!3766 = !DILocalVariable(name: "name", arg: 2, scope: !3761, file: !3, line: 1095, type: !1380)
!3767 = !DILocation(line: 1095, column: 49, scope: !3761)
!3768 = !DILocalVariable(name: "icon", arg: 3, scope: !3761, file: !3, line: 1095, type: !1100)
!3769 = !DILocation(line: 1095, column: 59, scope: !3761)
!3770 = !DILocalVariable(name: "opname", arg: 4, scope: !3761, file: !3, line: 1095, type: !1380)
!3771 = !DILocation(line: 1095, column: 77, scope: !3761)
!3772 = !DILocalVariable(name: "propname", arg: 5, scope: !3761, file: !3, line: 1095, type: !1380)
!3773 = !DILocation(line: 1095, column: 97, scope: !3761)
!3774 = !DILocalVariable(name: "value", arg: 6, scope: !3761, file: !3, line: 1095, type: !1180)
!3775 = !DILocation(line: 1095, column: 113, scope: !3761)
!3776 = !DILocalVariable(name: "ot", scope: !3761, file: !3, line: 1097, type: !2439)
!3777 = !DILocation(line: 1097, column: 18, scope: !3761)
!3778 = !DILocation(line: 1097, column: 44, scope: !3761)
!3779 = !DILocation(line: 1097, column: 23, scope: !3761)
!3780 = !DILocalVariable(name: "ptr", scope: !3761, file: !3, line: 1098, type: !2307)
!3781 = !DILocation(line: 1098, column: 13, scope: !3761)
!3782 = !DILocation(line: 1100, column: 2, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3761, file: !3, line: 1100, column: 2)
!3784 = !DILocation(line: 1100, column: 2, scope: !3761)
!3785 = !DILocation(line: 1100, column: 2, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 1100, column: 2)
!3787 = !DILocation(line: 1102, column: 42, scope: !3761)
!3788 = !DILocation(line: 1102, column: 2, scope: !3761)
!3789 = !DILocation(line: 1103, column: 22, scope: !3761)
!3790 = !DILocation(line: 1103, column: 32, scope: !3761)
!3791 = !DILocation(line: 1103, column: 2, scope: !3761)
!3792 = !DILocation(line: 1105, column: 18, scope: !3761)
!3793 = !DILocation(line: 1105, column: 26, scope: !3761)
!3794 = !DILocation(line: 1105, column: 30, scope: !3761)
!3795 = !DILocation(line: 1105, column: 36, scope: !3761)
!3796 = !DILocation(line: 1105, column: 46, scope: !3761)
!3797 = !DILocation(line: 1105, column: 42, scope: !3761)
!3798 = !DILocation(line: 1105, column: 52, scope: !3761)
!3799 = !DILocation(line: 1105, column: 60, scope: !3761)
!3800 = !DILocation(line: 1105, column: 66, scope: !3761)
!3801 = !DILocation(line: 1105, column: 2, scope: !3761)
!3802 = !DILocation(line: 1106, column: 1, scope: !3761)
!3803 = distinct !DISubprogram(name: "uiItemStringO", scope: !3, file: !3, line: 1108, type: !3581, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3804 = !DILocalVariable(name: "layout", arg: 1, scope: !3803, file: !3, line: 1108, type: !1113)
!3805 = !DILocation(line: 1108, column: 30, scope: !3803)
!3806 = !DILocalVariable(name: "name", arg: 2, scope: !3803, file: !3, line: 1108, type: !1380)
!3807 = !DILocation(line: 1108, column: 50, scope: !3803)
!3808 = !DILocalVariable(name: "icon", arg: 3, scope: !3803, file: !3, line: 1108, type: !1100)
!3809 = !DILocation(line: 1108, column: 60, scope: !3803)
!3810 = !DILocalVariable(name: "opname", arg: 4, scope: !3803, file: !3, line: 1108, type: !1380)
!3811 = !DILocation(line: 1108, column: 78, scope: !3803)
!3812 = !DILocalVariable(name: "propname", arg: 5, scope: !3803, file: !3, line: 1108, type: !1380)
!3813 = !DILocation(line: 1108, column: 98, scope: !3803)
!3814 = !DILocalVariable(name: "value", arg: 6, scope: !3803, file: !3, line: 1108, type: !1380)
!3815 = !DILocation(line: 1108, column: 120, scope: !3803)
!3816 = !DILocalVariable(name: "ot", scope: !3803, file: !3, line: 1110, type: !2439)
!3817 = !DILocation(line: 1110, column: 18, scope: !3803)
!3818 = !DILocation(line: 1110, column: 44, scope: !3803)
!3819 = !DILocation(line: 1110, column: 23, scope: !3803)
!3820 = !DILocalVariable(name: "ptr", scope: !3803, file: !3, line: 1111, type: !2307)
!3821 = !DILocation(line: 1111, column: 13, scope: !3803)
!3822 = !DILocation(line: 1113, column: 2, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 1113, column: 2)
!3824 = !DILocation(line: 1113, column: 2, scope: !3803)
!3825 = !DILocation(line: 1113, column: 2, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 1113, column: 2)
!3827 = !DILocation(line: 1115, column: 42, scope: !3803)
!3828 = !DILocation(line: 1115, column: 2, scope: !3803)
!3829 = !DILocation(line: 1116, column: 23, scope: !3803)
!3830 = !DILocation(line: 1116, column: 33, scope: !3803)
!3831 = !DILocation(line: 1116, column: 2, scope: !3803)
!3832 = !DILocation(line: 1118, column: 18, scope: !3803)
!3833 = !DILocation(line: 1118, column: 26, scope: !3803)
!3834 = !DILocation(line: 1118, column: 30, scope: !3803)
!3835 = !DILocation(line: 1118, column: 36, scope: !3803)
!3836 = !DILocation(line: 1118, column: 46, scope: !3803)
!3837 = !DILocation(line: 1118, column: 42, scope: !3803)
!3838 = !DILocation(line: 1118, column: 52, scope: !3803)
!3839 = !DILocation(line: 1118, column: 60, scope: !3803)
!3840 = !DILocation(line: 1118, column: 66, scope: !3803)
!3841 = !DILocation(line: 1118, column: 2, scope: !3803)
!3842 = !DILocation(line: 1119, column: 1, scope: !3803)
!3843 = distinct !DISubprogram(name: "uiItemO", scope: !3, file: !3, line: 1121, type: !3844, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{null, !1113, !1380, !1100, !1380}
!3846 = !DILocalVariable(name: "layout", arg: 1, scope: !3843, file: !3, line: 1121, type: !1113)
!3847 = !DILocation(line: 1121, column: 24, scope: !3843)
!3848 = !DILocalVariable(name: "name", arg: 2, scope: !3843, file: !3, line: 1121, type: !1380)
!3849 = !DILocation(line: 1121, column: 44, scope: !3843)
!3850 = !DILocalVariable(name: "icon", arg: 3, scope: !3843, file: !3, line: 1121, type: !1100)
!3851 = !DILocation(line: 1121, column: 54, scope: !3843)
!3852 = !DILocalVariable(name: "opname", arg: 4, scope: !3843, file: !3, line: 1121, type: !1380)
!3853 = !DILocation(line: 1121, column: 72, scope: !3843)
!3854 = !DILocation(line: 1123, column: 14, scope: !3843)
!3855 = !DILocation(line: 1123, column: 22, scope: !3843)
!3856 = !DILocation(line: 1123, column: 30, scope: !3843)
!3857 = !DILocation(line: 1123, column: 36, scope: !3843)
!3858 = !DILocation(line: 1123, column: 48, scope: !3843)
!3859 = !DILocation(line: 1123, column: 56, scope: !3843)
!3860 = !DILocation(line: 1123, column: 62, scope: !3843)
!3861 = !DILocation(line: 1123, column: 2, scope: !3843)
!3862 = !DILocation(line: 1124, column: 1, scope: !3843)
!3863 = distinct !DISubprogram(name: "uiItemFullR", scope: !3, file: !3, line: 1193, type: !3864, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{null, !1113, !2343, !1946, !1100, !1100, !1100, !1380, !1100}
!3866 = !DILocalVariable(name: "layout", arg: 1, scope: !3863, file: !3, line: 1193, type: !1113)
!3867 = !DILocation(line: 1193, column: 28, scope: !3863)
!3868 = !DILocalVariable(name: "ptr", arg: 2, scope: !3863, file: !3, line: 1193, type: !2343)
!3869 = !DILocation(line: 1193, column: 48, scope: !3863)
!3870 = !DILocalVariable(name: "prop", arg: 3, scope: !3863, file: !3, line: 1193, type: !1946)
!3871 = !DILocation(line: 1193, column: 66, scope: !3863)
!3872 = !DILocalVariable(name: "index", arg: 4, scope: !3863, file: !3, line: 1193, type: !1100)
!3873 = !DILocation(line: 1193, column: 76, scope: !3863)
!3874 = !DILocalVariable(name: "value", arg: 5, scope: !3863, file: !3, line: 1193, type: !1100)
!3875 = !DILocation(line: 1193, column: 87, scope: !3863)
!3876 = !DILocalVariable(name: "flag", arg: 6, scope: !3863, file: !3, line: 1193, type: !1100)
!3877 = !DILocation(line: 1193, column: 98, scope: !3863)
!3878 = !DILocalVariable(name: "name", arg: 7, scope: !3863, file: !3, line: 1193, type: !1380)
!3879 = !DILocation(line: 1193, column: 116, scope: !3863)
!3880 = !DILocalVariable(name: "icon", arg: 8, scope: !3863, file: !3, line: 1193, type: !1100)
!3881 = !DILocation(line: 1193, column: 126, scope: !3863)
!3882 = !DILocalVariable(name: "block", scope: !3863, file: !3, line: 1195, type: !1197)
!3883 = !DILocation(line: 1195, column: 11, scope: !3863)
!3884 = !DILocation(line: 1195, column: 19, scope: !3863)
!3885 = !DILocation(line: 1195, column: 27, scope: !3863)
!3886 = !DILocation(line: 1195, column: 33, scope: !3863)
!3887 = !DILocalVariable(name: "but", scope: !3863, file: !3, line: 1196, type: !2159)
!3888 = !DILocation(line: 1196, column: 9, scope: !3863)
!3889 = !DILocalVariable(name: "type", scope: !3863, file: !3, line: 1197, type: !3890)
!3890 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyType", file: !958, line: 79, baseType: !957)
!3891 = !DILocation(line: 1197, column: 15, scope: !3863)
!3892 = !DILocalVariable(name: "namestr", scope: !3863, file: !3, line: 1198, type: !1309)
!3893 = !DILocation(line: 1198, column: 7, scope: !3863)
!3894 = !DILocalVariable(name: "len", scope: !3863, file: !3, line: 1199, type: !1100)
!3895 = !DILocation(line: 1199, column: 6, scope: !3863)
!3896 = !DILocalVariable(name: "w", scope: !3863, file: !3, line: 1199, type: !1100)
!3897 = !DILocation(line: 1199, column: 11, scope: !3863)
!3898 = !DILocalVariable(name: "h", scope: !3863, file: !3, line: 1199, type: !1100)
!3899 = !DILocation(line: 1199, column: 14, scope: !3863)
!3900 = !DILocalVariable(name: "slider", scope: !3863, file: !3, line: 1199, type: !1100)
!3901 = !DILocation(line: 1199, column: 17, scope: !3863)
!3902 = !DILocalVariable(name: "toggle", scope: !3863, file: !3, line: 1199, type: !1100)
!3903 = !DILocation(line: 1199, column: 25, scope: !3863)
!3904 = !DILocalVariable(name: "expand", scope: !3863, file: !3, line: 1199, type: !1100)
!3905 = !DILocation(line: 1199, column: 33, scope: !3863)
!3906 = !DILocalVariable(name: "icon_only", scope: !3863, file: !3, line: 1199, type: !1100)
!3907 = !DILocation(line: 1199, column: 41, scope: !3863)
!3908 = !DILocalVariable(name: "no_bg", scope: !3863, file: !3, line: 1199, type: !1100)
!3909 = !DILocation(line: 1199, column: 52, scope: !3863)
!3910 = !DILocalVariable(name: "is_array", scope: !3863, file: !3, line: 1200, type: !1413)
!3911 = !DILocation(line: 1200, column: 7, scope: !3863)
!3912 = !DILocation(line: 1202, column: 22, scope: !3863)
!3913 = !DILocation(line: 1202, column: 29, scope: !3863)
!3914 = !DILocation(line: 1202, column: 2, scope: !3863)
!3915 = !DILocation(line: 1205, column: 27, scope: !3863)
!3916 = !DILocation(line: 1205, column: 9, scope: !3863)
!3917 = !DILocation(line: 1205, column: 7, scope: !3863)
!3918 = !DILocation(line: 1206, column: 38, scope: !3863)
!3919 = !DILocation(line: 1206, column: 13, scope: !3863)
!3920 = !DILocation(line: 1206, column: 11, scope: !3863)
!3921 = !DILocation(line: 1207, column: 9, scope: !3863)
!3922 = !DILocation(line: 1207, column: 8, scope: !3863)
!3923 = !DILocation(line: 1207, column: 47, scope: !3863)
!3924 = !DILocation(line: 1207, column: 52, scope: !3863)
!3925 = !DILocation(line: 1207, column: 21, scope: !3863)
!3926 = !DILocation(line: 1207, column: 6, scope: !3863)
!3927 = !DILocation(line: 1210, column: 7, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1210, column: 6)
!3929 = !DILocation(line: 1210, column: 6, scope: !3863)
!3930 = !DILocation(line: 1211, column: 8, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 1211, column: 7)
!3932 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 1210, column: 13)
!3933 = !DILocation(line: 1211, column: 13, scope: !3931)
!3934 = !DILocation(line: 1211, column: 36, scope: !3931)
!3935 = !DILocation(line: 1211, column: 7, scope: !3932)
!3936 = !DILocation(line: 1212, column: 32, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1211, column: 42)
!3938 = !DILocation(line: 1212, column: 11, scope: !3937)
!3939 = !DILocation(line: 1212, column: 9, scope: !3937)
!3940 = !DILocation(line: 1213, column: 3, scope: !3937)
!3941 = !DILocation(line: 1215, column: 9, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1214, column: 8)
!3943 = !DILocation(line: 1217, column: 2, scope: !3932)
!3944 = !DILocation(line: 1219, column: 6, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1219, column: 6)
!3946 = !DILocation(line: 1219, column: 11, scope: !3945)
!3947 = !DILocation(line: 1219, column: 6, scope: !3863)
!3948 = !DILocation(line: 1220, column: 31, scope: !3945)
!3949 = !DILocation(line: 1220, column: 10, scope: !3945)
!3950 = !DILocation(line: 1220, column: 8, scope: !3945)
!3951 = !DILocation(line: 1220, column: 3, scope: !3945)
!3952 = !DILocation(line: 1222, column: 6, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1222, column: 6)
!3954 = !DILocation(line: 1222, column: 11, scope: !3953)
!3955 = !DILocation(line: 1222, column: 6, scope: !3863)
!3956 = !DILocation(line: 1224, column: 2, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 1222, column: 34)
!3958 = !DILocation(line: 1225, column: 11, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 1225, column: 11)
!3960 = !DILocation(line: 1225, column: 11, scope: !3953)
!3961 = !DILocation(line: 1226, column: 33, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 1225, column: 72)
!3963 = !DILocation(line: 1226, column: 39, scope: !3962)
!3964 = !DILocation(line: 1226, column: 10, scope: !3962)
!3965 = !DILocation(line: 1226, column: 8, scope: !3962)
!3966 = !DILocation(line: 1227, column: 2, scope: !3962)
!3967 = !DILocation(line: 1228, column: 11, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 1228, column: 11)
!3969 = !DILocation(line: 1228, column: 16, scope: !3968)
!3970 = !DILocation(line: 1228, column: 32, scope: !3968)
!3971 = !DILocation(line: 1228, column: 35, scope: !3968)
!3972 = !DILocation(line: 1228, column: 44, scope: !3968)
!3973 = !DILocation(line: 1228, column: 47, scope: !3968)
!3974 = !DILocation(line: 1228, column: 53, scope: !3968)
!3975 = !DILocation(line: 1228, column: 11, scope: !3959)
!3976 = !DILocation(line: 1229, column: 33, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 1228, column: 70)
!3978 = !DILocation(line: 1229, column: 39, scope: !3977)
!3979 = !DILocation(line: 1229, column: 10, scope: !3977)
!3980 = !DILocation(line: 1229, column: 8, scope: !3977)
!3981 = !DILocation(line: 1230, column: 2, scope: !3977)
!3982 = !DILocation(line: 1231, column: 11, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 1231, column: 11)
!3984 = !DILocation(line: 1231, column: 16, scope: !3983)
!3985 = !DILocation(line: 1231, column: 29, scope: !3983)
!3986 = !DILocation(line: 1231, column: 32, scope: !3983)
!3987 = !DILocation(line: 1231, column: 38, scope: !3983)
!3988 = !DILocation(line: 1231, column: 11, scope: !3968)
!3989 = !DILocation(line: 1232, column: 33, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1231, column: 57)
!3991 = !DILocation(line: 1232, column: 39, scope: !3990)
!3992 = !DILocation(line: 1232, column: 10, scope: !3990)
!3993 = !DILocation(line: 1232, column: 8, scope: !3990)
!3994 = !DILocation(line: 1233, column: 2, scope: !3990)
!3995 = !DILocation(line: 1235, column: 6, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1235, column: 6)
!3997 = !DILocation(line: 1235, column: 14, scope: !3996)
!3998 = !DILocation(line: 1235, column: 20, scope: !3996)
!3999 = !DILocation(line: 1235, column: 25, scope: !3996)
!4000 = !DILocation(line: 1235, column: 6, scope: !3863)
!4001 = !DILocation(line: 1236, column: 7, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 1236, column: 7)
!4003 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 1235, column: 44)
!4004 = !DILocation(line: 1236, column: 12, scope: !4002)
!4005 = !DILocation(line: 1236, column: 28, scope: !4002)
!4006 = !DILocation(line: 1236, column: 33, scope: !4002)
!4007 = !DILocation(line: 1236, column: 42, scope: !4002)
!4008 = !DILocation(line: 1236, column: 52, scope: !4002)
!4009 = !DILocation(line: 1236, column: 56, scope: !4002)
!4010 = !DILocation(line: 1236, column: 62, scope: !4002)
!4011 = !DILocation(line: 1236, column: 7, scope: !4003)
!4012 = !DILocation(line: 1237, column: 8, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1237, column: 8)
!4014 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 1236, column: 81)
!4015 = !DILocation(line: 1237, column: 8, scope: !4014)
!4016 = !DILocation(line: 1237, column: 57, scope: !4013)
!4017 = !DILocation(line: 1237, column: 62, scope: !4013)
!4018 = !DILocation(line: 1237, column: 68, scope: !4013)
!4019 = !DILocation(line: 1237, column: 26, scope: !4013)
!4020 = !DILocation(line: 1237, column: 25, scope: !4013)
!4021 = !DILocation(line: 1237, column: 23, scope: !4013)
!4022 = !DILocation(line: 1237, column: 18, scope: !4013)
!4023 = !DILocation(line: 1238, column: 42, scope: !4013)
!4024 = !DILocation(line: 1238, column: 47, scope: !4013)
!4025 = !DILocation(line: 1238, column: 17, scope: !4013)
!4026 = !DILocation(line: 1238, column: 16, scope: !4013)
!4027 = !DILocation(line: 1238, column: 14, scope: !4013)
!4028 = !DILocation(line: 1239, column: 3, scope: !4014)
!4029 = !DILocation(line: 1240, column: 12, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 1240, column: 12)
!4031 = !DILocation(line: 1240, column: 17, scope: !4030)
!4032 = !DILocation(line: 1240, column: 30, scope: !4030)
!4033 = !DILocation(line: 1240, column: 33, scope: !4030)
!4034 = !DILocation(line: 1240, column: 39, scope: !4030)
!4035 = !DILocation(line: 1240, column: 12, scope: !4002)
!4036 = !DILocalVariable(name: "enum_value", scope: !4037, file: !3, line: 1241, type: !1100)
!4037 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 1240, column: 58)
!4038 = !DILocation(line: 1241, column: 8, scope: !4037)
!4039 = !DILocation(line: 1241, column: 43, scope: !4037)
!4040 = !DILocation(line: 1241, column: 48, scope: !4037)
!4041 = !DILocation(line: 1241, column: 21, scope: !4037)
!4042 = !DILocation(line: 1242, column: 26, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 1242, column: 8)
!4044 = !DILocation(line: 1242, column: 8, scope: !4043)
!4045 = !DILocation(line: 1242, column: 32, scope: !4043)
!4046 = !DILocation(line: 1242, column: 8, scope: !4037)
!4047 = !DILocation(line: 1243, column: 13, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1242, column: 50)
!4049 = !DILocation(line: 1243, column: 26, scope: !4048)
!4050 = !DILocation(line: 1243, column: 24, scope: !4048)
!4051 = !DILocation(line: 1243, column: 12, scope: !4048)
!4052 = !DILocation(line: 1243, column: 10, scope: !4048)
!4053 = !DILocation(line: 1244, column: 4, scope: !4048)
!4054 = !DILocation(line: 1246, column: 13, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1245, column: 9)
!4056 = !DILocation(line: 1246, column: 27, scope: !4055)
!4057 = !DILocation(line: 1246, column: 24, scope: !4055)
!4058 = !DILocation(line: 1246, column: 12, scope: !4055)
!4059 = !DILocation(line: 1246, column: 10, scope: !4055)
!4060 = !DILocation(line: 1248, column: 3, scope: !4037)
!4061 = !DILocation(line: 1249, column: 2, scope: !4003)
!4062 = !DILocation(line: 1251, column: 12, scope: !3863)
!4063 = !DILocation(line: 1251, column: 17, scope: !3863)
!4064 = !DILocation(line: 1251, column: 9, scope: !3863)
!4065 = !DILocation(line: 1252, column: 12, scope: !3863)
!4066 = !DILocation(line: 1252, column: 17, scope: !3863)
!4067 = !DILocation(line: 1252, column: 9, scope: !3863)
!4068 = !DILocation(line: 1253, column: 12, scope: !3863)
!4069 = !DILocation(line: 1253, column: 17, scope: !3863)
!4070 = !DILocation(line: 1253, column: 9, scope: !3863)
!4071 = !DILocation(line: 1254, column: 15, scope: !3863)
!4072 = !DILocation(line: 1254, column: 20, scope: !3863)
!4073 = !DILocation(line: 1254, column: 12, scope: !3863)
!4074 = !DILocation(line: 1255, column: 11, scope: !3863)
!4075 = !DILocation(line: 1255, column: 16, scope: !3863)
!4076 = !DILocation(line: 1255, column: 8, scope: !3863)
!4077 = !DILocation(line: 1258, column: 19, scope: !3863)
!4078 = !DILocation(line: 1258, column: 27, scope: !3863)
!4079 = !DILocation(line: 1258, column: 33, scope: !3863)
!4080 = !DILocation(line: 1258, column: 39, scope: !3863)
!4081 = !DILocation(line: 1258, column: 44, scope: !3863)
!4082 = !DILocation(line: 1258, column: 50, scope: !3863)
!4083 = !DILocation(line: 1258, column: 57, scope: !3863)
!4084 = !DILocation(line: 1258, column: 2, scope: !3863)
!4085 = !DILocation(line: 1260, column: 6, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1260, column: 6)
!4087 = !DILocation(line: 1260, column: 6, scope: !3863)
!4088 = !DILocation(line: 1261, column: 20, scope: !4086)
!4089 = !DILocation(line: 1261, column: 3, scope: !4086)
!4090 = !DILocation(line: 1264, column: 6, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1264, column: 6)
!4092 = !DILocation(line: 1264, column: 12, scope: !4091)
!4093 = !DILocation(line: 1264, column: 28, scope: !4091)
!4094 = !DILocation(line: 1264, column: 31, scope: !4091)
!4095 = !DILocation(line: 1264, column: 6, scope: !3863)
!4096 = !DILocation(line: 1265, column: 17, scope: !4091)
!4097 = !DILocation(line: 1265, column: 25, scope: !4091)
!4098 = !DILocation(line: 1265, column: 32, scope: !4091)
!4099 = !DILocation(line: 1265, column: 38, scope: !4091)
!4100 = !DILocation(line: 1265, column: 44, scope: !4091)
!4101 = !DILocation(line: 1265, column: 49, scope: !4091)
!4102 = !DILocation(line: 1265, column: 55, scope: !4091)
!4103 = !DILocation(line: 1265, column: 66, scope: !4091)
!4104 = !DILocation(line: 1265, column: 69, scope: !4091)
!4105 = !DILocation(line: 1265, column: 72, scope: !4091)
!4106 = !DILocation(line: 1265, column: 80, scope: !4091)
!4107 = !DILocation(line: 1265, column: 88, scope: !4091)
!4108 = !DILocation(line: 1265, column: 96, scope: !4091)
!4109 = !DILocation(line: 1265, column: 3, scope: !4091)
!4110 = !DILocation(line: 1267, column: 11, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 1267, column: 11)
!4112 = !DILocation(line: 1267, column: 16, scope: !4111)
!4113 = !DILocation(line: 1267, column: 29, scope: !4111)
!4114 = !DILocation(line: 1267, column: 32, scope: !4111)
!4115 = !DILocation(line: 1267, column: 38, scope: !4111)
!4116 = !DILocation(line: 1267, column: 11, scope: !4091)
!4117 = !DILocation(line: 1268, column: 7, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 1268, column: 7)
!4119 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 1267, column: 57)
!4120 = !DILocation(line: 1268, column: 12, scope: !4118)
!4121 = !DILocation(line: 1268, column: 15, scope: !4118)
!4122 = !DILocation(line: 1268, column: 23, scope: !4118)
!4123 = !DILocation(line: 1268, column: 27, scope: !4118)
!4124 = !DILocation(line: 1268, column: 7, scope: !4119)
!4125 = !DILocation(line: 1269, column: 27, scope: !4118)
!4126 = !DILocation(line: 1269, column: 42, scope: !4118)
!4127 = !DILocation(line: 1269, column: 48, scope: !4118)
!4128 = !DILocation(line: 1269, column: 60, scope: !4118)
!4129 = !DILocation(line: 1269, column: 63, scope: !4118)
!4130 = !DILocation(line: 1269, column: 66, scope: !4118)
!4131 = !DILocation(line: 1269, column: 71, scope: !4118)
!4132 = !DILocation(line: 1269, column: 84, scope: !4118)
!4133 = !DILocation(line: 1269, column: 4, scope: !4118)
!4134 = !DILocation(line: 1270, column: 12, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 1270, column: 12)
!4136 = !DILocation(line: 1270, column: 12, scope: !4118)
!4137 = !DILocation(line: 1271, column: 23, scope: !4135)
!4138 = !DILocation(line: 1271, column: 38, scope: !4135)
!4139 = !DILocation(line: 1271, column: 50, scope: !4135)
!4140 = !DILocation(line: 1271, column: 53, scope: !4135)
!4141 = !DILocation(line: 1271, column: 56, scope: !4135)
!4142 = !DILocation(line: 1271, column: 61, scope: !4135)
!4143 = !DILocation(line: 1271, column: 74, scope: !4135)
!4144 = !DILocation(line: 1271, column: 4, scope: !4135)
!4145 = !DILocation(line: 1273, column: 19, scope: !4135)
!4146 = !DILocation(line: 1273, column: 34, scope: !4135)
!4147 = !DILocation(line: 1273, column: 46, scope: !4135)
!4148 = !DILocation(line: 1273, column: 49, scope: !4135)
!4149 = !DILocation(line: 1273, column: 52, scope: !4135)
!4150 = !DILocation(line: 1273, column: 57, scope: !4135)
!4151 = !DILocation(line: 1273, column: 70, scope: !4135)
!4152 = !DILocation(line: 1273, column: 4, scope: !4135)
!4153 = !DILocation(line: 1274, column: 2, scope: !4119)
!4154 = !DILocation(line: 1276, column: 11, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 1276, column: 11)
!4156 = !DILocation(line: 1276, column: 16, scope: !4155)
!4157 = !DILocation(line: 1276, column: 29, scope: !4155)
!4158 = !DILocation(line: 1276, column: 33, scope: !4155)
!4159 = !DILocation(line: 1276, column: 40, scope: !4155)
!4160 = !DILocation(line: 1276, column: 61, scope: !4155)
!4161 = !DILocation(line: 1276, column: 43, scope: !4155)
!4162 = !DILocation(line: 1276, column: 67, scope: !4155)
!4163 = !DILocation(line: 1276, column: 11, scope: !4111)
!4164 = !DILocation(line: 1277, column: 23, scope: !4155)
!4165 = !DILocation(line: 1277, column: 31, scope: !4155)
!4166 = !DILocation(line: 1277, column: 38, scope: !4155)
!4167 = !DILocation(line: 1277, column: 43, scope: !4155)
!4168 = !DILocation(line: 1277, column: 49, scope: !4155)
!4169 = !DILocation(line: 1277, column: 55, scope: !4155)
!4170 = !DILocation(line: 1277, column: 58, scope: !4155)
!4171 = !DILocation(line: 1277, column: 3, scope: !4155)
!4172 = !DILocation(line: 1279, column: 11, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 1279, column: 11)
!4174 = !DILocation(line: 1279, column: 16, scope: !4173)
!4175 = !DILocation(line: 1279, column: 29, scope: !4173)
!4176 = !DILocation(line: 1279, column: 32, scope: !4173)
!4177 = !DILocation(line: 1279, column: 37, scope: !4173)
!4178 = !DILocation(line: 1279, column: 52, scope: !4173)
!4179 = !DILocation(line: 1279, column: 55, scope: !4173)
!4180 = !DILocation(line: 1279, column: 60, scope: !4173)
!4181 = !DILocation(line: 1279, column: 11, scope: !4155)
!4182 = !DILocation(line: 1280, column: 28, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1279, column: 77)
!4184 = !DILocation(line: 1280, column: 36, scope: !4183)
!4185 = !DILocation(line: 1280, column: 43, scope: !4183)
!4186 = !DILocation(line: 1280, column: 49, scope: !4183)
!4187 = !DILocation(line: 1280, column: 55, scope: !4183)
!4188 = !DILocation(line: 1280, column: 60, scope: !4183)
!4189 = !DILocation(line: 1280, column: 66, scope: !4183)
!4190 = !DILocation(line: 1280, column: 79, scope: !4183)
!4191 = !DILocation(line: 1280, column: 82, scope: !4183)
!4192 = !DILocation(line: 1280, column: 85, scope: !4183)
!4193 = !DILocation(line: 1280, column: 9, scope: !4183)
!4194 = !DILocation(line: 1280, column: 7, scope: !4183)
!4195 = !DILocation(line: 1281, column: 21, scope: !4183)
!4196 = !DILocation(line: 1281, column: 26, scope: !4183)
!4197 = !DILocation(line: 1281, column: 31, scope: !4183)
!4198 = !DILocation(line: 1281, column: 3, scope: !4183)
!4199 = !DILocation(line: 1283, column: 7, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 1283, column: 7)
!4201 = !DILocation(line: 1283, column: 15, scope: !4200)
!4202 = !DILocation(line: 1283, column: 7, scope: !4183)
!4203 = !DILocation(line: 1284, column: 17, scope: !4200)
!4204 = !DILocation(line: 1284, column: 4, scope: !4200)
!4205 = !DILocation(line: 1285, column: 2, scope: !4183)
!4206 = !DILocation(line: 1288, column: 23, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 1287, column: 7)
!4208 = !DILocation(line: 1288, column: 30, scope: !4207)
!4209 = !DILocation(line: 1288, column: 35, scope: !4207)
!4210 = !DILocation(line: 1288, column: 41, scope: !4207)
!4211 = !DILocation(line: 1288, column: 48, scope: !4207)
!4212 = !DILocation(line: 1288, column: 54, scope: !4207)
!4213 = !DILocation(line: 1288, column: 66, scope: !4207)
!4214 = !DILocation(line: 1288, column: 69, scope: !4207)
!4215 = !DILocation(line: 1288, column: 9, scope: !4207)
!4216 = !DILocation(line: 1288, column: 7, scope: !4207)
!4217 = !DILocation(line: 1290, column: 7, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 1290, column: 7)
!4219 = !DILocation(line: 1290, column: 14, scope: !4218)
!4220 = !DILocation(line: 1290, column: 17, scope: !4218)
!4221 = !DILocation(line: 1290, column: 22, scope: !4218)
!4222 = !DILocation(line: 1290, column: 27, scope: !4218)
!4223 = !DILocation(line: 1290, column: 7, scope: !4207)
!4224 = !DILocation(line: 1291, column: 4, scope: !4218)
!4225 = !DILocation(line: 1291, column: 9, scope: !4218)
!4226 = !DILocation(line: 1291, column: 14, scope: !4218)
!4227 = !DILocation(line: 1293, column: 7, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 1293, column: 7)
!4229 = !DILocation(line: 1293, column: 14, scope: !4228)
!4230 = !DILocation(line: 1293, column: 17, scope: !4228)
!4231 = !DILocation(line: 1293, column: 22, scope: !4228)
!4232 = !DILocation(line: 1293, column: 27, scope: !4228)
!4233 = !DILocation(line: 1293, column: 7, scope: !4207)
!4234 = !DILocation(line: 1294, column: 4, scope: !4228)
!4235 = !DILocation(line: 1294, column: 9, scope: !4228)
!4236 = !DILocation(line: 1294, column: 14, scope: !4228)
!4237 = !DILocation(line: 1296, column: 7, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 1296, column: 7)
!4239 = !DILocation(line: 1296, column: 15, scope: !4238)
!4240 = !DILocation(line: 1296, column: 7, scope: !4207)
!4241 = !DILocation(line: 1297, column: 17, scope: !4238)
!4242 = !DILocation(line: 1297, column: 4, scope: !4238)
!4243 = !DILocation(line: 1301, column: 6, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1301, column: 6)
!4245 = !DILocation(line: 1301, column: 10, scope: !4244)
!4246 = !DILocation(line: 1301, column: 14, scope: !4244)
!4247 = !DILocation(line: 1301, column: 21, scope: !4244)
!4248 = !DILocation(line: 1301, column: 26, scope: !4244)
!4249 = !DILocation(line: 1301, column: 48, scope: !4244)
!4250 = !DILocation(line: 1301, column: 52, scope: !4244)
!4251 = !DILocation(line: 1301, column: 57, scope: !4244)
!4252 = !DILocation(line: 1301, column: 62, scope: !4244)
!4253 = !DILocation(line: 1301, column: 70, scope: !4244)
!4254 = !DILocation(line: 1301, column: 74, scope: !4244)
!4255 = !DILocation(line: 1301, column: 79, scope: !4244)
!4256 = !DILocation(line: 1301, column: 82, scope: !4244)
!4257 = !DILocation(line: 1301, column: 6, scope: !3863)
!4258 = !DILocation(line: 1302, column: 16, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 1301, column: 97)
!4260 = !DILocation(line: 1302, column: 3, scope: !4259)
!4261 = !DILocation(line: 1303, column: 2, scope: !4259)
!4262 = !DILocation(line: 1305, column: 6, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1305, column: 6)
!4264 = !DILocation(line: 1305, column: 6, scope: !3863)
!4265 = !DILocation(line: 1306, column: 20, scope: !4263)
!4266 = !DILocation(line: 1306, column: 3, scope: !4263)
!4267 = !DILocation(line: 1309, column: 6, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 1309, column: 6)
!4269 = !DILocation(line: 1309, column: 10, scope: !4268)
!4270 = !DILocation(line: 1309, column: 13, scope: !4268)
!4271 = !DILocation(line: 1309, column: 6, scope: !3863)
!4272 = !DILocation(line: 1311, column: 2, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 1309, column: 24)
!4274 = !DILocation(line: 1313, column: 1, scope: !3863)
!4275 = distinct !DISubprogram(name: "ui_item_name_add_colon", scope: !3, file: !3, line: 173, type: !4276, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!1380, !1380, !1855}
!4278 = !DILocalVariable(name: "name", arg: 1, scope: !4275, file: !3, line: 173, type: !1380)
!4279 = !DILocation(line: 173, column: 55, scope: !4275)
!4280 = !DILocalVariable(name: "namestr", arg: 2, scope: !4275, file: !3, line: 173, type: !1855)
!4281 = !DILocation(line: 173, column: 66, scope: !4275)
!4282 = !DILocalVariable(name: "len", scope: !4275, file: !3, line: 175, type: !1100)
!4283 = !DILocation(line: 175, column: 6, scope: !4275)
!4284 = !DILocation(line: 175, column: 19, scope: !4275)
!4285 = !DILocation(line: 175, column: 12, scope: !4275)
!4286 = !DILocation(line: 177, column: 6, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4275, file: !3, line: 177, column: 6)
!4288 = !DILocation(line: 177, column: 10, scope: !4287)
!4289 = !DILocation(line: 177, column: 15, scope: !4287)
!4290 = !DILocation(line: 177, column: 18, scope: !4287)
!4291 = !DILocation(line: 177, column: 22, scope: !4287)
!4292 = !DILocation(line: 177, column: 26, scope: !4287)
!4293 = !DILocation(line: 177, column: 6, scope: !4275)
!4294 = !DILocation(line: 178, column: 15, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 177, column: 45)
!4296 = !DILocation(line: 178, column: 24, scope: !4295)
!4297 = !DILocation(line: 178, column: 3, scope: !4295)
!4298 = !DILocation(line: 179, column: 3, scope: !4295)
!4299 = !DILocation(line: 179, column: 11, scope: !4295)
!4300 = !DILocation(line: 179, column: 16, scope: !4295)
!4301 = !DILocation(line: 180, column: 3, scope: !4295)
!4302 = !DILocation(line: 180, column: 11, scope: !4295)
!4303 = !DILocation(line: 180, column: 15, scope: !4295)
!4304 = !DILocation(line: 180, column: 20, scope: !4295)
!4305 = !DILocation(line: 181, column: 10, scope: !4295)
!4306 = !DILocation(line: 181, column: 3, scope: !4295)
!4307 = !DILocation(line: 184, column: 9, scope: !4275)
!4308 = !DILocation(line: 184, column: 2, scope: !4275)
!4309 = !DILocation(line: 185, column: 1, scope: !4275)
!4310 = distinct !DISubprogram(name: "ui_item_rna_size", scope: !3, file: !3, line: 1128, type: !4311, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{null, !1113, !1380, !1100, !2343, !1946, !1100, !1100, !4313, !4313}
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!4314 = !DILocalVariable(name: "layout", arg: 1, scope: !4310, file: !3, line: 1128, type: !1113)
!4315 = !DILocation(line: 1128, column: 40, scope: !4310)
!4316 = !DILocalVariable(name: "name", arg: 2, scope: !4310, file: !3, line: 1128, type: !1380)
!4317 = !DILocation(line: 1128, column: 60, scope: !4310)
!4318 = !DILocalVariable(name: "icon", arg: 3, scope: !4310, file: !3, line: 1128, type: !1100)
!4319 = !DILocation(line: 1128, column: 70, scope: !4310)
!4320 = !DILocalVariable(name: "ptr", arg: 4, scope: !4310, file: !3, line: 1128, type: !2343)
!4321 = !DILocation(line: 1128, column: 88, scope: !4310)
!4322 = !DILocalVariable(name: "prop", arg: 5, scope: !4310, file: !3, line: 1128, type: !1946)
!4323 = !DILocation(line: 1128, column: 106, scope: !4310)
!4324 = !DILocalVariable(name: "index", arg: 6, scope: !4310, file: !3, line: 1129, type: !1100)
!4325 = !DILocation(line: 1129, column: 34, scope: !4310)
!4326 = !DILocalVariable(name: "icon_only", arg: 7, scope: !4310, file: !3, line: 1129, type: !1100)
!4327 = !DILocation(line: 1129, column: 45, scope: !4310)
!4328 = !DILocalVariable(name: "r_w", arg: 8, scope: !4310, file: !3, line: 1129, type: !4313)
!4329 = !DILocation(line: 1129, column: 61, scope: !4310)
!4330 = !DILocalVariable(name: "r_h", arg: 9, scope: !4310, file: !3, line: 1129, type: !4313)
!4331 = !DILocation(line: 1129, column: 71, scope: !4310)
!4332 = !DILocalVariable(name: "type", scope: !4310, file: !3, line: 1131, type: !3890)
!4333 = !DILocation(line: 1131, column: 15, scope: !4310)
!4334 = !DILocalVariable(name: "subtype", scope: !4310, file: !3, line: 1132, type: !4335)
!4335 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertySubType", file: !958, line: 147, baseType: !1035)
!4336 = !DILocation(line: 1132, column: 18, scope: !4310)
!4337 = !DILocalVariable(name: "len", scope: !4310, file: !3, line: 1133, type: !1100)
!4338 = !DILocation(line: 1133, column: 6, scope: !4310)
!4339 = !DILocalVariable(name: "w", scope: !4310, file: !3, line: 1133, type: !1100)
!4340 = !DILocation(line: 1133, column: 11, scope: !4310)
!4341 = !DILocalVariable(name: "h", scope: !4310, file: !3, line: 1133, type: !1100)
!4342 = !DILocation(line: 1133, column: 18, scope: !4310)
!4343 = !DILocation(line: 1136, column: 27, scope: !4310)
!4344 = !DILocation(line: 1136, column: 9, scope: !4310)
!4345 = !DILocation(line: 1136, column: 7, scope: !4310)
!4346 = !DILocation(line: 1137, column: 33, scope: !4310)
!4347 = !DILocation(line: 1137, column: 12, scope: !4310)
!4348 = !DILocation(line: 1137, column: 10, scope: !4310)
!4349 = !DILocation(line: 1138, column: 34, scope: !4310)
!4350 = !DILocation(line: 1138, column: 39, scope: !4310)
!4351 = !DILocation(line: 1138, column: 8, scope: !4310)
!4352 = !DILocation(line: 1138, column: 6, scope: !4310)
!4353 = !DILocation(line: 1140, column: 7, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 1140, column: 6)
!4355 = !DILocation(line: 1140, column: 15, scope: !4354)
!4356 = !DILocation(line: 1140, column: 19, scope: !4354)
!4357 = !DILocation(line: 1140, column: 6, scope: !4310)
!4358 = !DILocation(line: 1141, column: 7, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 1141, column: 7)
!4360 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 1140, column: 30)
!4361 = !DILocation(line: 1141, column: 7, scope: !4360)
!4362 = !DILocation(line: 1142, column: 9, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 1141, column: 46)
!4364 = !DILocation(line: 1143, column: 3, scope: !4363)
!4365 = !DILocation(line: 1144, column: 12, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 1144, column: 12)
!4367 = !DILocation(line: 1144, column: 17, scope: !4366)
!4368 = !DILocation(line: 1144, column: 12, scope: !4359)
!4369 = !DILocation(line: 1145, column: 9, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 1144, column: 34)
!4371 = !DILocation(line: 1146, column: 3, scope: !4370)
!4372 = !DILocation(line: 1147, column: 12, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 1147, column: 12)
!4374 = !DILocation(line: 1147, column: 17, scope: !4373)
!4375 = !DILocation(line: 1147, column: 12, scope: !4366)
!4376 = !DILocalVariable(name: "item", scope: !4377, file: !3, line: 1149, type: !2828)
!4377 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 1147, column: 31)
!4378 = !DILocation(line: 1149, column: 22, scope: !4377)
!4379 = !DILocalVariable(name: "item_array", scope: !4377, file: !3, line: 1149, type: !2828)
!4380 = !DILocation(line: 1149, column: 29, scope: !4377)
!4381 = !DILocalVariable(name: "free", scope: !4377, file: !3, line: 1150, type: !1413)
!4382 = !DILocation(line: 1150, column: 9, scope: !4377)
!4383 = !DILocation(line: 1152, column: 38, scope: !4377)
!4384 = !DILocation(line: 1152, column: 46, scope: !4377)
!4385 = !DILocation(line: 1152, column: 52, scope: !4377)
!4386 = !DILocation(line: 1152, column: 59, scope: !4377)
!4387 = !DILocation(line: 1152, column: 67, scope: !4377)
!4388 = !DILocation(line: 1152, column: 72, scope: !4377)
!4389 = !DILocation(line: 1152, column: 4, scope: !4377)
!4390 = !DILocation(line: 1153, column: 16, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 1153, column: 4)
!4392 = !DILocation(line: 1153, column: 14, scope: !4391)
!4393 = !DILocation(line: 1153, column: 9, scope: !4391)
!4394 = !DILocation(line: 1153, column: 28, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1153, column: 4)
!4396 = !DILocation(line: 1153, column: 34, scope: !4395)
!4397 = !DILocation(line: 1153, column: 4, scope: !4391)
!4398 = !DILocation(line: 1154, column: 9, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 1154, column: 9)
!4400 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 1153, column: 54)
!4401 = !DILocation(line: 1154, column: 15, scope: !4399)
!4402 = !DILocation(line: 1154, column: 9, scope: !4400)
!4403 = !DILocation(line: 1155, column: 17, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 1154, column: 30)
!4405 = !DILocation(line: 1155, column: 39, scope: !4404)
!4406 = !DILocation(line: 1155, column: 47, scope: !4404)
!4407 = !DILocation(line: 1155, column: 53, scope: !4404)
!4408 = !DILocation(line: 1155, column: 59, scope: !4404)
!4409 = !DILocation(line: 1155, column: 65, scope: !4404)
!4410 = !DILocation(line: 1155, column: 20, scope: !4404)
!4411 = !DILocation(line: 1155, column: 10, scope: !4404)
!4412 = !DILocation(line: 1155, column: 8, scope: !4404)
!4413 = !DILocation(line: 1156, column: 5, scope: !4404)
!4414 = !DILocation(line: 1157, column: 4, scope: !4400)
!4415 = !DILocation(line: 1153, column: 50, scope: !4395)
!4416 = !DILocation(line: 1153, column: 4, scope: !4395)
!4417 = distinct !{!4417, !4397, !4418}
!4418 = !DILocation(line: 1157, column: 4, scope: !4391)
!4419 = !DILocation(line: 1158, column: 8, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 1158, column: 8)
!4421 = !DILocation(line: 1158, column: 8, scope: !4377)
!4422 = !DILocation(line: 1159, column: 5, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4420, file: !3, line: 1158, column: 14)
!4424 = !DILocation(line: 1159, column: 15, scope: !4423)
!4425 = !DILocation(line: 1160, column: 4, scope: !4423)
!4426 = !DILocation(line: 1161, column: 3, scope: !4377)
!4427 = !DILocation(line: 1162, column: 2, scope: !4360)
!4428 = !DILocation(line: 1164, column: 7, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 1164, column: 6)
!4430 = !DILocation(line: 1164, column: 6, scope: !4310)
!4431 = !DILocation(line: 1165, column: 26, scope: !4429)
!4432 = !DILocation(line: 1165, column: 34, scope: !4429)
!4433 = !DILocation(line: 1165, column: 40, scope: !4429)
!4434 = !DILocation(line: 1165, column: 7, scope: !4429)
!4435 = !DILocation(line: 1165, column: 5, scope: !4429)
!4436 = !DILocation(line: 1165, column: 3, scope: !4429)
!4437 = !DILocation(line: 1166, column: 6, scope: !4310)
!4438 = !DILocation(line: 1166, column: 4, scope: !4310)
!4439 = !DILocation(line: 1169, column: 6, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 1169, column: 6)
!4441 = !DILocation(line: 1169, column: 12, scope: !4440)
!4442 = !DILocation(line: 1169, column: 28, scope: !4440)
!4443 = !DILocation(line: 1169, column: 31, scope: !4440)
!4444 = !DILocation(line: 1169, column: 35, scope: !4440)
!4445 = !DILocation(line: 1169, column: 6, scope: !4310)
!4446 = !DILocation(line: 1170, column: 8, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 1170, column: 7)
!4448 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1169, column: 40)
!4449 = !DILocation(line: 1170, column: 16, scope: !4447)
!4450 = !DILocation(line: 1170, column: 19, scope: !4447)
!4451 = !DILocation(line: 1170, column: 24, scope: !4447)
!4452 = !DILocation(line: 1170, column: 7, scope: !4448)
!4453 = !DILocation(line: 1171, column: 6, scope: !4447)
!4454 = !DILocation(line: 1171, column: 4, scope: !4447)
!4455 = !DILocation(line: 1173, column: 7, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 1173, column: 7)
!4457 = !DILocation(line: 1173, column: 7, scope: !4448)
!4458 = !DILocation(line: 1174, column: 13, scope: !4456)
!4459 = !DILocation(line: 1174, column: 11, scope: !4456)
!4460 = !DILocation(line: 1174, column: 6, scope: !4456)
!4461 = !DILocation(line: 1174, column: 4, scope: !4456)
!4462 = !DILocation(line: 1175, column: 12, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 1175, column: 12)
!4464 = !DILocation(line: 1175, column: 20, scope: !4463)
!4465 = !DILocation(line: 1175, column: 12, scope: !4456)
!4466 = !DILocation(line: 1176, column: 21, scope: !4463)
!4467 = !DILocation(line: 1176, column: 15, scope: !4463)
!4468 = !DILocation(line: 1176, column: 9, scope: !4463)
!4469 = !DILocation(line: 1176, column: 29, scope: !4463)
!4470 = !DILocation(line: 1176, column: 27, scope: !4463)
!4471 = !DILocation(line: 1176, column: 6, scope: !4463)
!4472 = !DILocation(line: 1176, column: 4, scope: !4463)
!4473 = !DILocation(line: 1178, column: 9, scope: !4463)
!4474 = !DILocation(line: 1178, column: 15, scope: !4463)
!4475 = !DILocation(line: 1178, column: 13, scope: !4463)
!4476 = !DILocation(line: 1178, column: 6, scope: !4463)
!4477 = !DILocation(line: 1179, column: 2, scope: !4448)
!4478 = !DILocation(line: 1180, column: 36, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 1180, column: 11)
!4480 = !DILocation(line: 1180, column: 11, scope: !4479)
!4481 = !DILocation(line: 1180, column: 44, scope: !4479)
!4482 = !DILocation(line: 1180, column: 11, scope: !4440)
!4483 = !DILocation(line: 1181, column: 7, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !3, line: 1181, column: 7)
!4485 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 1180, column: 63)
!4486 = !DILocation(line: 1181, column: 12, scope: !4484)
!4487 = !DILocation(line: 1181, column: 28, scope: !4484)
!4488 = !DILocation(line: 1181, column: 31, scope: !4484)
!4489 = !DILocation(line: 1181, column: 7, scope: !4485)
!4490 = !DILocation(line: 1182, column: 9, scope: !4484)
!4491 = !DILocation(line: 1182, column: 19, scope: !4484)
!4492 = !DILocation(line: 1182, column: 6, scope: !4484)
!4493 = !DILocation(line: 1182, column: 4, scope: !4484)
!4494 = !DILocation(line: 1183, column: 12, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 1183, column: 12)
!4496 = !DILocation(line: 1183, column: 17, scope: !4495)
!4497 = !DILocation(line: 1183, column: 12, scope: !4484)
!4498 = !DILocation(line: 1184, column: 9, scope: !4495)
!4499 = !DILocation(line: 1184, column: 19, scope: !4495)
!4500 = !DILocation(line: 1184, column: 6, scope: !4495)
!4501 = !DILocation(line: 1184, column: 4, scope: !4495)
!4502 = !DILocation(line: 1185, column: 12, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4495, file: !3, line: 1185, column: 12)
!4504 = !DILocation(line: 1185, column: 17, scope: !4503)
!4505 = !DILocation(line: 1185, column: 31, scope: !4503)
!4506 = !DILocation(line: 1185, column: 34, scope: !4503)
!4507 = !DILocation(line: 1185, column: 39, scope: !4503)
!4508 = !DILocation(line: 1185, column: 12, scope: !4495)
!4509 = !DILocation(line: 1186, column: 9, scope: !4503)
!4510 = !DILocation(line: 1186, column: 19, scope: !4503)
!4511 = !DILocation(line: 1186, column: 6, scope: !4503)
!4512 = !DILocation(line: 1186, column: 4, scope: !4503)
!4513 = !DILocation(line: 1187, column: 2, scope: !4485)
!4514 = !DILocation(line: 1189, column: 9, scope: !4310)
!4515 = !DILocation(line: 1189, column: 3, scope: !4310)
!4516 = !DILocation(line: 1189, column: 7, scope: !4310)
!4517 = !DILocation(line: 1190, column: 9, scope: !4310)
!4518 = !DILocation(line: 1190, column: 3, scope: !4310)
!4519 = !DILocation(line: 1190, column: 7, scope: !4310)
!4520 = !DILocation(line: 1191, column: 1, scope: !4310)
!4521 = distinct !DISubprogram(name: "ui_item_array", scope: !3, file: !3, line: 358, type: !4522, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{null, !1113, !1197, !1380, !1100, !2343, !1946, !1100, !1100, !1100, !1100, !1100, !1100, !1100, !1100, !1100}
!4524 = !DILocalVariable(name: "layout", arg: 1, scope: !4521, file: !3, line: 358, type: !1113)
!4525 = !DILocation(line: 358, column: 37, scope: !4521)
!4526 = !DILocalVariable(name: "block", arg: 2, scope: !4521, file: !3, line: 358, type: !1197)
!4527 = !DILocation(line: 358, column: 54, scope: !4521)
!4528 = !DILocalVariable(name: "name", arg: 3, scope: !4521, file: !3, line: 358, type: !1380)
!4529 = !DILocation(line: 358, column: 73, scope: !4521)
!4530 = !DILocalVariable(name: "icon", arg: 4, scope: !4521, file: !3, line: 358, type: !1100)
!4531 = !DILocation(line: 358, column: 83, scope: !4521)
!4532 = !DILocalVariable(name: "ptr", arg: 5, scope: !4521, file: !3, line: 359, type: !2343)
!4533 = !DILocation(line: 359, column: 39, scope: !4521)
!4534 = !DILocalVariable(name: "prop", arg: 6, scope: !4521, file: !3, line: 359, type: !1946)
!4535 = !DILocation(line: 359, column: 57, scope: !4521)
!4536 = !DILocalVariable(name: "len", arg: 7, scope: !4521, file: !3, line: 359, type: !1100)
!4537 = !DILocation(line: 359, column: 67, scope: !4521)
!4538 = !DILocalVariable(name: "x", arg: 8, scope: !4521, file: !3, line: 359, type: !1100)
!4539 = !DILocation(line: 359, column: 76, scope: !4521)
!4540 = !DILocalVariable(name: "y", arg: 9, scope: !4521, file: !3, line: 359, type: !1100)
!4541 = !DILocation(line: 359, column: 83, scope: !4521)
!4542 = !DILocalVariable(name: "w", arg: 10, scope: !4521, file: !3, line: 359, type: !1100)
!4543 = !DILocation(line: 359, column: 90, scope: !4521)
!4544 = !DILocalVariable(name: "UNUSED_h", arg: 11, scope: !4521, file: !3, line: 359, type: !1100)
!4545 = !DILocation(line: 359, column: 97, scope: !4521)
!4546 = !DILocalVariable(name: "expand", arg: 12, scope: !4521, file: !3, line: 360, type: !1100)
!4547 = !DILocation(line: 360, column: 31, scope: !4521)
!4548 = !DILocalVariable(name: "slider", arg: 13, scope: !4521, file: !3, line: 360, type: !1100)
!4549 = !DILocation(line: 360, column: 43, scope: !4521)
!4550 = !DILocalVariable(name: "toggle", arg: 14, scope: !4521, file: !3, line: 360, type: !1100)
!4551 = !DILocation(line: 360, column: 55, scope: !4521)
!4552 = !DILocalVariable(name: "icon_only", arg: 15, scope: !4521, file: !3, line: 360, type: !1100)
!4553 = !DILocation(line: 360, column: 67, scope: !4521)
!4554 = !DILocalVariable(name: "style", scope: !4521, file: !3, line: 362, type: !1148)
!4555 = !DILocation(line: 362, column: 11, scope: !4521)
!4556 = !DILocation(line: 362, column: 19, scope: !4521)
!4557 = !DILocation(line: 362, column: 27, scope: !4521)
!4558 = !DILocation(line: 362, column: 33, scope: !4521)
!4559 = !DILocalVariable(name: "but", scope: !4521, file: !3, line: 363, type: !2159)
!4560 = !DILocation(line: 363, column: 9, scope: !4521)
!4561 = !DILocalVariable(name: "type", scope: !4521, file: !3, line: 364, type: !3890)
!4562 = !DILocation(line: 364, column: 15, scope: !4521)
!4563 = !DILocalVariable(name: "subtype", scope: !4521, file: !3, line: 365, type: !4335)
!4564 = !DILocation(line: 365, column: 18, scope: !4521)
!4565 = !DILocalVariable(name: "sub", scope: !4521, file: !3, line: 366, type: !1113)
!4566 = !DILocation(line: 366, column: 12, scope: !4521)
!4567 = !DILocalVariable(name: "a", scope: !4521, file: !3, line: 367, type: !6)
!4568 = !DILocation(line: 367, column: 15, scope: !4521)
!4569 = !DILocalVariable(name: "b", scope: !4521, file: !3, line: 367, type: !6)
!4570 = !DILocation(line: 367, column: 18, scope: !4521)
!4571 = !DILocation(line: 370, column: 27, scope: !4521)
!4572 = !DILocation(line: 370, column: 9, scope: !4521)
!4573 = !DILocation(line: 370, column: 7, scope: !4521)
!4574 = !DILocation(line: 371, column: 33, scope: !4521)
!4575 = !DILocation(line: 371, column: 12, scope: !4521)
!4576 = !DILocation(line: 371, column: 10, scope: !4521)
!4577 = !DILocation(line: 373, column: 32, scope: !4521)
!4578 = !DILocation(line: 373, column: 40, scope: !4521)
!4579 = !DILocation(line: 373, column: 8, scope: !4521)
!4580 = !DILocation(line: 373, column: 6, scope: !4521)
!4581 = !DILocation(line: 374, column: 22, scope: !4521)
!4582 = !DILocation(line: 374, column: 29, scope: !4521)
!4583 = !DILocation(line: 374, column: 2, scope: !4521)
!4584 = !DILocation(line: 377, column: 6, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 377, column: 6)
!4586 = !DILocation(line: 377, column: 6, scope: !4521)
!4587 = !DILocation(line: 378, column: 12, scope: !4585)
!4588 = !DILocation(line: 378, column: 29, scope: !4585)
!4589 = !DILocation(line: 378, column: 41, scope: !4585)
!4590 = !DILocation(line: 378, column: 44, scope: !4585)
!4591 = !DILocation(line: 378, column: 3, scope: !4585)
!4592 = !DILocation(line: 381, column: 6, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 381, column: 6)
!4594 = !DILocation(line: 381, column: 11, scope: !4593)
!4595 = !DILocation(line: 381, column: 27, scope: !4593)
!4596 = !DILocation(line: 381, column: 30, scope: !4593)
!4597 = !DILocation(line: 381, column: 6, scope: !4521)
!4598 = !DILocalVariable(name: "butw", scope: !4599, file: !3, line: 383, type: !1100)
!4599 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 381, column: 76)
!4600 = !DILocation(line: 383, column: 7, scope: !4599)
!4601 = !DILocalVariable(name: "buth", scope: !4599, file: !3, line: 383, type: !1100)
!4602 = !DILocation(line: 383, column: 13, scope: !4599)
!4603 = !DILocalVariable(name: "unit", scope: !4599, file: !3, line: 383, type: !1100)
!4604 = !DILocation(line: 383, column: 19, scope: !4599)
!4605 = !DILocalVariable(name: "cols", scope: !4599, file: !3, line: 384, type: !1100)
!4606 = !DILocation(line: 384, column: 7, scope: !4599)
!4607 = !DILocation(line: 384, column: 15, scope: !4599)
!4608 = !DILocation(line: 384, column: 19, scope: !4599)
!4609 = !DILocation(line: 384, column: 14, scope: !4599)
!4610 = !DILocalVariable(name: "colbuts", scope: !4599, file: !3, line: 385, type: !4611)
!4611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!4612 = !DILocation(line: 385, column: 22, scope: !4599)
!4613 = !DILocation(line: 385, column: 32, scope: !4599)
!4614 = !DILocation(line: 385, column: 43, scope: !4599)
!4615 = !DILocation(line: 385, column: 41, scope: !4599)
!4616 = !DILocation(line: 385, column: 36, scope: !4599)
!4617 = !DILocalVariable(name: "layer_used", scope: !4599, file: !3, line: 386, type: !6)
!4618 = !DILocation(line: 386, column: 16, scope: !4599)
!4619 = !DILocalVariable(name: "layer_active", scope: !4599, file: !3, line: 387, type: !6)
!4620 = !DILocation(line: 387, column: 16, scope: !4599)
!4621 = !DILocation(line: 389, column: 23, scope: !4599)
!4622 = !DILocation(line: 389, column: 47, scope: !4599)
!4623 = !DILocation(line: 389, column: 30, scope: !4599)
!4624 = !DILocation(line: 389, column: 3, scope: !4599)
!4625 = !DILocation(line: 391, column: 10, scope: !4599)
!4626 = !DILocation(line: 391, column: 20, scope: !4599)
!4627 = !DILocation(line: 391, column: 8, scope: !4599)
!4628 = !DILocation(line: 392, column: 10, scope: !4599)
!4629 = !DILocation(line: 392, column: 8, scope: !4599)
!4630 = !DILocation(line: 393, column: 10, scope: !4599)
!4631 = !DILocation(line: 393, column: 8, scope: !4599)
!4632 = !DILocation(line: 395, column: 7, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 395, column: 7)
!4634 = !DILocation(line: 395, column: 12, scope: !4633)
!4635 = !DILocation(line: 395, column: 17, scope: !4633)
!4636 = !DILocation(line: 395, column: 7, scope: !4599)
!4637 = !DILocalVariable(name: "arm", scope: !4638, file: !3, line: 396, type: !2057)
!4638 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 395, column: 35)
!4639 = !DILocation(line: 396, column: 15, scope: !4638)
!4640 = !DILocation(line: 396, column: 34, scope: !4638)
!4641 = !DILocation(line: 396, column: 39, scope: !4638)
!4642 = !DILocation(line: 396, column: 21, scope: !4638)
!4643 = !DILocation(line: 398, column: 17, scope: !4638)
!4644 = !DILocation(line: 398, column: 22, scope: !4638)
!4645 = !DILocation(line: 398, column: 15, scope: !4638)
!4646 = !DILocation(line: 400, column: 8, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 400, column: 8)
!4648 = !DILocation(line: 400, column: 13, scope: !4647)
!4649 = !DILocation(line: 400, column: 8, scope: !4638)
!4650 = !DILocation(line: 401, column: 9, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 401, column: 9)
!4652 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 400, column: 19)
!4653 = !DILocation(line: 401, column: 14, scope: !4651)
!4654 = !DILocation(line: 401, column: 9, scope: !4652)
!4655 = !DILocation(line: 402, column: 22, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 401, column: 26)
!4657 = !DILocation(line: 402, column: 27, scope: !4656)
!4658 = !DILocation(line: 402, column: 39, scope: !4656)
!4659 = !DILocation(line: 402, column: 19, scope: !4656)
!4660 = !DILocation(line: 403, column: 5, scope: !4656)
!4661 = !DILocation(line: 404, column: 4, scope: !4652)
!4662 = !DILocation(line: 406, column: 9, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 406, column: 9)
!4664 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 405, column: 9)
!4665 = !DILocation(line: 406, column: 14, scope: !4663)
!4666 = !DILocation(line: 406, column: 9, scope: !4664)
!4667 = !DILocation(line: 407, column: 22, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 406, column: 24)
!4669 = !DILocation(line: 407, column: 27, scope: !4668)
!4670 = !DILocation(line: 407, column: 37, scope: !4668)
!4671 = !DILocation(line: 407, column: 19, scope: !4668)
!4672 = !DILocation(line: 408, column: 5, scope: !4668)
!4673 = !DILocation(line: 410, column: 3, scope: !4638)
!4674 = !DILocation(line: 412, column: 10, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 412, column: 3)
!4676 = !DILocation(line: 412, column: 8, scope: !4675)
!4677 = !DILocation(line: 412, column: 15, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 412, column: 3)
!4679 = !DILocation(line: 412, column: 19, scope: !4678)
!4680 = !DILocation(line: 412, column: 17, scope: !4678)
!4681 = !DILocation(line: 412, column: 3, scope: !4675)
!4682 = !DILocation(line: 413, column: 22, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4678, file: !3, line: 412, column: 30)
!4684 = !DILocation(line: 413, column: 4, scope: !4683)
!4685 = !DILocation(line: 415, column: 11, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 415, column: 4)
!4687 = !DILocation(line: 415, column: 9, scope: !4686)
!4688 = !DILocation(line: 415, column: 16, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 415, column: 4)
!4690 = !DILocation(line: 415, column: 20, scope: !4689)
!4691 = !DILocation(line: 415, column: 18, scope: !4689)
!4692 = !DILocation(line: 415, column: 4, scope: !4686)
!4693 = !DILocalVariable(name: "layer_num", scope: !4694, file: !3, line: 416, type: !4695)
!4694 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 415, column: 34)
!4695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!4696 = !DILocation(line: 416, column: 15, scope: !4694)
!4697 = !DILocation(line: 416, column: 28, scope: !4694)
!4698 = !DILocation(line: 416, column: 32, scope: !4694)
!4699 = !DILocation(line: 416, column: 36, scope: !4694)
!4700 = !DILocation(line: 416, column: 34, scope: !4694)
!4701 = !DILocation(line: 416, column: 30, scope: !4694)
!4702 = !DILocalVariable(name: "layer_flag", scope: !4694, file: !3, line: 417, type: !4611)
!4703 = !DILocation(line: 417, column: 24, scope: !4694)
!4704 = !DILocation(line: 417, column: 44, scope: !4694)
!4705 = !DILocation(line: 417, column: 41, scope: !4694)
!4706 = !DILocation(line: 419, column: 9, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 419, column: 9)
!4708 = !DILocation(line: 419, column: 22, scope: !4707)
!4709 = !DILocation(line: 419, column: 20, scope: !4707)
!4710 = !DILocation(line: 419, column: 9, scope: !4694)
!4711 = !DILocation(line: 420, column: 10, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 420, column: 10)
!4713 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 419, column: 34)
!4714 = !DILocation(line: 420, column: 25, scope: !4712)
!4715 = !DILocation(line: 420, column: 23, scope: !4712)
!4716 = !DILocation(line: 420, column: 10, scope: !4713)
!4717 = !DILocation(line: 421, column: 12, scope: !4712)
!4718 = !DILocation(line: 421, column: 7, scope: !4712)
!4719 = !DILocation(line: 423, column: 12, scope: !4712)
!4720 = !DILocation(line: 424, column: 5, scope: !4713)
!4721 = !DILocation(line: 426, column: 11, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 425, column: 10)
!4723 = !DILocation(line: 429, column: 25, scope: !4694)
!4724 = !DILocation(line: 429, column: 32, scope: !4694)
!4725 = !DILocation(line: 429, column: 37, scope: !4694)
!4726 = !DILocation(line: 429, column: 43, scope: !4694)
!4727 = !DILocation(line: 429, column: 58, scope: !4694)
!4728 = !DILocation(line: 429, column: 64, scope: !4694)
!4729 = !DILocation(line: 429, column: 68, scope: !4694)
!4730 = !DILocation(line: 429, column: 75, scope: !4694)
!4731 = !DILocation(line: 429, column: 73, scope: !4694)
!4732 = !DILocation(line: 429, column: 66, scope: !4694)
!4733 = !DILocation(line: 429, column: 78, scope: !4694)
!4734 = !DILocation(line: 429, column: 82, scope: !4694)
!4735 = !DILocation(line: 429, column: 80, scope: !4694)
!4736 = !DILocation(line: 429, column: 88, scope: !4694)
!4737 = !DILocation(line: 429, column: 94, scope: !4694)
!4738 = !DILocation(line: 429, column: 11, scope: !4694)
!4739 = !DILocation(line: 429, column: 9, scope: !4694)
!4740 = !DILocation(line: 430, column: 9, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 430, column: 9)
!4742 = !DILocation(line: 430, column: 17, scope: !4741)
!4743 = !DILocation(line: 430, column: 9, scope: !4694)
!4744 = !DILocation(line: 431, column: 19, scope: !4741)
!4745 = !DILocation(line: 431, column: 41, scope: !4741)
!4746 = !DILocation(line: 431, column: 46, scope: !4741)
!4747 = !DILocation(line: 431, column: 6, scope: !4741)
!4748 = !DILocation(line: 432, column: 4, scope: !4694)
!4749 = !DILocation(line: 415, column: 30, scope: !4689)
!4750 = !DILocation(line: 415, column: 4, scope: !4689)
!4751 = distinct !{!4751, !4692, !4752}
!4752 = !DILocation(line: 432, column: 4, scope: !4686)
!4753 = !DILocation(line: 433, column: 11, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 433, column: 4)
!4755 = !DILocation(line: 433, column: 9, scope: !4754)
!4756 = !DILocation(line: 433, column: 16, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 433, column: 4)
!4758 = !DILocation(line: 433, column: 20, scope: !4757)
!4759 = !DILocation(line: 433, column: 18, scope: !4757)
!4760 = !DILocation(line: 433, column: 4, scope: !4754)
!4761 = !DILocalVariable(name: "layer_num", scope: !4762, file: !3, line: 434, type: !4695)
!4762 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 433, column: 34)
!4763 = !DILocation(line: 434, column: 15, scope: !4762)
!4764 = !DILocation(line: 434, column: 28, scope: !4762)
!4765 = !DILocation(line: 434, column: 32, scope: !4762)
!4766 = !DILocation(line: 434, column: 36, scope: !4762)
!4767 = !DILocation(line: 434, column: 30, scope: !4762)
!4768 = !DILocation(line: 434, column: 42, scope: !4762)
!4769 = !DILocation(line: 434, column: 46, scope: !4762)
!4770 = !DILocation(line: 434, column: 44, scope: !4762)
!4771 = !DILocation(line: 434, column: 40, scope: !4762)
!4772 = !DILocalVariable(name: "layer_flag", scope: !4762, file: !3, line: 435, type: !4611)
!4773 = !DILocation(line: 435, column: 24, scope: !4762)
!4774 = !DILocation(line: 435, column: 44, scope: !4762)
!4775 = !DILocation(line: 435, column: 41, scope: !4762)
!4776 = !DILocation(line: 437, column: 9, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 437, column: 9)
!4778 = !DILocation(line: 437, column: 22, scope: !4777)
!4779 = !DILocation(line: 437, column: 20, scope: !4777)
!4780 = !DILocation(line: 437, column: 9, scope: !4762)
!4781 = !DILocation(line: 438, column: 10, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 438, column: 10)
!4783 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 437, column: 34)
!4784 = !DILocation(line: 438, column: 25, scope: !4782)
!4785 = !DILocation(line: 438, column: 23, scope: !4782)
!4786 = !DILocation(line: 438, column: 10, scope: !4783)
!4787 = !DILocation(line: 439, column: 12, scope: !4782)
!4788 = !DILocation(line: 439, column: 7, scope: !4782)
!4789 = !DILocation(line: 441, column: 12, scope: !4782)
!4790 = !DILocation(line: 442, column: 5, scope: !4783)
!4791 = !DILocation(line: 444, column: 11, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 443, column: 10)
!4793 = !DILocation(line: 447, column: 25, scope: !4762)
!4794 = !DILocation(line: 447, column: 32, scope: !4762)
!4795 = !DILocation(line: 447, column: 37, scope: !4762)
!4796 = !DILocation(line: 447, column: 43, scope: !4762)
!4797 = !DILocation(line: 447, column: 58, scope: !4762)
!4798 = !DILocation(line: 447, column: 64, scope: !4762)
!4799 = !DILocation(line: 447, column: 68, scope: !4762)
!4800 = !DILocation(line: 447, column: 75, scope: !4762)
!4801 = !DILocation(line: 447, column: 73, scope: !4762)
!4802 = !DILocation(line: 447, column: 66, scope: !4762)
!4803 = !DILocation(line: 447, column: 78, scope: !4762)
!4804 = !DILocation(line: 447, column: 81, scope: !4762)
!4805 = !DILocation(line: 447, column: 87, scope: !4762)
!4806 = !DILocation(line: 447, column: 11, scope: !4762)
!4807 = !DILocation(line: 447, column: 9, scope: !4762)
!4808 = !DILocation(line: 448, column: 9, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 448, column: 9)
!4810 = !DILocation(line: 448, column: 17, scope: !4809)
!4811 = !DILocation(line: 448, column: 9, scope: !4762)
!4812 = !DILocation(line: 449, column: 19, scope: !4809)
!4813 = !DILocation(line: 449, column: 41, scope: !4809)
!4814 = !DILocation(line: 449, column: 46, scope: !4809)
!4815 = !DILocation(line: 449, column: 6, scope: !4809)
!4816 = !DILocation(line: 450, column: 4, scope: !4762)
!4817 = !DILocation(line: 433, column: 30, scope: !4757)
!4818 = !DILocation(line: 433, column: 4, scope: !4757)
!4819 = distinct !{!4819, !4760, !4820}
!4820 = !DILocation(line: 450, column: 4, scope: !4754)
!4821 = !DILocation(line: 451, column: 20, scope: !4683)
!4822 = !DILocation(line: 451, column: 4, scope: !4683)
!4823 = !DILocation(line: 453, column: 9, scope: !4683)
!4824 = !DILocation(line: 453, column: 19, scope: !4683)
!4825 = !DILocation(line: 453, column: 17, scope: !4683)
!4826 = !DILocation(line: 453, column: 26, scope: !4683)
!4827 = !DILocation(line: 453, column: 33, scope: !4683)
!4828 = !DILocation(line: 453, column: 24, scope: !4683)
!4829 = !DILocation(line: 453, column: 6, scope: !4683)
!4830 = !DILocation(line: 454, column: 3, scope: !4683)
!4831 = !DILocation(line: 412, column: 26, scope: !4678)
!4832 = !DILocation(line: 412, column: 3, scope: !4678)
!4833 = distinct !{!4833, !4681, !4834}
!4834 = !DILocation(line: 454, column: 3, scope: !4675)
!4835 = !DILocation(line: 455, column: 2, scope: !4599)
!4836 = !DILocation(line: 456, column: 11, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 456, column: 11)
!4838 = !DILocation(line: 456, column: 19, scope: !4837)
!4839 = !DILocation(line: 456, column: 11, scope: !4593)
!4840 = !DILocalVariable(name: "totdim", scope: !4841, file: !3, line: 457, type: !1100)
!4841 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 456, column: 35)
!4842 = !DILocation(line: 457, column: 7, scope: !4841)
!4843 = !DILocalVariable(name: "dim_size", scope: !4841, file: !3, line: 457, type: !4844)
!4844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1100, size: 96, elements: !1923)
!4845 = !DILocation(line: 457, column: 15, scope: !4841)
!4846 = !DILocalVariable(name: "row", scope: !4841, file: !3, line: 458, type: !1100)
!4847 = !DILocation(line: 458, column: 7, scope: !4841)
!4848 = !DILocalVariable(name: "col", scope: !4841, file: !3, line: 458, type: !1100)
!4849 = !DILocation(line: 458, column: 12, scope: !4841)
!4850 = !DILocation(line: 460, column: 23, scope: !4841)
!4851 = !DILocation(line: 460, column: 47, scope: !4841)
!4852 = !DILocation(line: 460, column: 30, scope: !4841)
!4853 = !DILocation(line: 460, column: 3, scope: !4841)
!4854 = !DILocation(line: 462, column: 41, scope: !4841)
!4855 = !DILocation(line: 462, column: 46, scope: !4841)
!4856 = !DILocation(line: 462, column: 52, scope: !4841)
!4857 = !DILocation(line: 462, column: 12, scope: !4841)
!4858 = !DILocation(line: 462, column: 10, scope: !4841)
!4859 = !DILocation(line: 463, column: 7, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 463, column: 7)
!4861 = !DILocation(line: 463, column: 14, scope: !4860)
!4862 = !DILocation(line: 463, column: 7, scope: !4841)
!4863 = !DILocation(line: 463, column: 20, scope: !4860)
!4864 = !DILocation(line: 465, column: 8, scope: !4841)
!4865 = !DILocation(line: 465, column: 5, scope: !4841)
!4866 = !DILocation(line: 468, column: 10, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 468, column: 3)
!4868 = !DILocation(line: 468, column: 8, scope: !4867)
!4869 = !DILocation(line: 468, column: 15, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 468, column: 3)
!4871 = !DILocation(line: 468, column: 19, scope: !4870)
!4872 = !DILocation(line: 468, column: 17, scope: !4870)
!4873 = !DILocation(line: 468, column: 3, scope: !4867)
!4874 = !DILocation(line: 469, column: 10, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 468, column: 29)
!4876 = !DILocation(line: 469, column: 14, scope: !4875)
!4877 = !DILocation(line: 469, column: 12, scope: !4875)
!4878 = !DILocation(line: 469, column: 8, scope: !4875)
!4879 = !DILocation(line: 470, column: 10, scope: !4875)
!4880 = !DILocation(line: 470, column: 14, scope: !4875)
!4881 = !DILocation(line: 470, column: 12, scope: !4875)
!4882 = !DILocation(line: 470, column: 8, scope: !4875)
!4883 = !DILocation(line: 472, column: 24, scope: !4875)
!4884 = !DILocation(line: 472, column: 31, scope: !4875)
!4885 = !DILocation(line: 472, column: 36, scope: !4875)
!4886 = !DILocation(line: 472, column: 42, scope: !4875)
!4887 = !DILocation(line: 472, column: 60, scope: !4875)
!4888 = !DILocation(line: 472, column: 64, scope: !4875)
!4889 = !DILocation(line: 472, column: 68, scope: !4875)
!4890 = !DILocation(line: 472, column: 66, scope: !4875)
!4891 = !DILocation(line: 472, column: 62, scope: !4875)
!4892 = !DILocation(line: 472, column: 73, scope: !4875)
!4893 = !DILocation(line: 472, column: 78, scope: !4875)
!4894 = !DILocation(line: 472, column: 92, scope: !4875)
!4895 = !DILocation(line: 472, column: 90, scope: !4875)
!4896 = !DILocation(line: 472, column: 75, scope: !4875)
!4897 = !DILocation(line: 472, column: 106, scope: !4875)
!4898 = !DILocation(line: 472, column: 112, scope: !4875)
!4899 = !DILocation(line: 472, column: 110, scope: !4875)
!4900 = !DILocation(line: 472, column: 103, scope: !4875)
!4901 = !DILocation(line: 472, column: 124, scope: !4875)
!4902 = !DILocation(line: 472, column: 127, scope: !4875)
!4903 = !DILocation(line: 472, column: 10, scope: !4875)
!4904 = !DILocation(line: 472, column: 8, scope: !4875)
!4905 = !DILocation(line: 473, column: 8, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 473, column: 8)
!4907 = !DILocation(line: 473, column: 15, scope: !4906)
!4908 = !DILocation(line: 473, column: 18, scope: !4906)
!4909 = !DILocation(line: 473, column: 23, scope: !4906)
!4910 = !DILocation(line: 473, column: 28, scope: !4906)
!4911 = !DILocation(line: 473, column: 8, scope: !4875)
!4912 = !DILocation(line: 474, column: 5, scope: !4906)
!4913 = !DILocation(line: 474, column: 10, scope: !4906)
!4914 = !DILocation(line: 474, column: 15, scope: !4906)
!4915 = !DILocation(line: 475, column: 3, scope: !4875)
!4916 = !DILocation(line: 468, column: 25, scope: !4870)
!4917 = !DILocation(line: 468, column: 3, scope: !4870)
!4918 = distinct !{!4918, !4873, !4919}
!4919 = !DILocation(line: 475, column: 3, scope: !4867)
!4920 = !DILocation(line: 476, column: 2, scope: !4841)
!4921 = !DILocation(line: 477, column: 11, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 477, column: 11)
!4923 = !DILocation(line: 477, column: 19, scope: !4922)
!4924 = !DILocation(line: 477, column: 37, scope: !4922)
!4925 = !DILocation(line: 477, column: 41, scope: !4922)
!4926 = !DILocation(line: 477, column: 11, scope: !4837)
!4927 = !DILocation(line: 478, column: 18, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 477, column: 49)
!4929 = !DILocation(line: 478, column: 40, scope: !4928)
!4930 = !DILocation(line: 478, column: 46, scope: !4928)
!4931 = !DILocation(line: 478, column: 49, scope: !4928)
!4932 = !DILocation(line: 478, column: 52, scope: !4928)
!4933 = !DILocation(line: 478, column: 62, scope: !4928)
!4934 = !DILocation(line: 478, column: 67, scope: !4928)
!4935 = !DILocation(line: 478, column: 77, scope: !4928)
!4936 = !DILocation(line: 478, column: 82, scope: !4928)
!4937 = !DILocation(line: 478, column: 87, scope: !4928)
!4938 = !DILocation(line: 478, column: 3, scope: !4928)
!4939 = !DILocation(line: 479, column: 2, scope: !4928)
!4940 = !DILocation(line: 485, column: 7, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 485, column: 7)
!4942 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 480, column: 7)
!4943 = !DILocation(line: 485, column: 51, scope: !4941)
!4944 = !DILocation(line: 485, column: 55, scope: !4941)
!4945 = !DILocation(line: 485, column: 7, scope: !4942)
!4946 = !DILocation(line: 486, column: 18, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 485, column: 63)
!4948 = !DILocation(line: 486, column: 25, scope: !4947)
!4949 = !DILocation(line: 486, column: 30, scope: !4947)
!4950 = !DILocation(line: 486, column: 61, scope: !4947)
!4951 = !DILocation(line: 486, column: 64, scope: !4947)
!4952 = !DILocation(line: 486, column: 4, scope: !4947)
!4953 = !DILocation(line: 487, column: 3, scope: !4947)
!4954 = !DILocalVariable(name: "boolarr", scope: !4955, file: !3, line: 489, type: !4313)
!4955 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 488, column: 8)
!4956 = !DILocation(line: 489, column: 9, scope: !4955)
!4957 = !DILocalVariable(name: "str", scope: !4955, file: !3, line: 494, type: !4958)
!4958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1158, size: 24, elements: !1923)
!4959 = !DILocation(line: 494, column: 9, scope: !4955)
!4960 = !DILocation(line: 496, column: 9, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 496, column: 8)
!4962 = !DILocation(line: 496, column: 8, scope: !4955)
!4963 = !DILocation(line: 497, column: 9, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 497, column: 9)
!4965 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 496, column: 20)
!4966 = !DILocation(line: 497, column: 14, scope: !4964)
!4967 = !DILocation(line: 497, column: 9, scope: !4965)
!4968 = !DILocation(line: 498, column: 6, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 497, column: 31)
!4970 = !DILocation(line: 498, column: 13, scope: !4969)
!4971 = !DILocation(line: 499, column: 5, scope: !4969)
!4972 = !DILocation(line: 500, column: 4, scope: !4965)
!4973 = !DILocation(line: 503, column: 8, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 503, column: 8)
!4975 = !DILocation(line: 503, column: 13, scope: !4974)
!4976 = !DILocation(line: 503, column: 29, scope: !4974)
!4977 = !DILocation(line: 503, column: 32, scope: !4974)
!4978 = !DILocation(line: 503, column: 8, scope: !4955)
!4979 = !DILocation(line: 504, column: 15, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 503, column: 87)
!4981 = !DILocation(line: 504, column: 41, scope: !4980)
!4982 = !DILocation(line: 504, column: 39, scope: !4980)
!4983 = !DILocation(line: 504, column: 13, scope: !4980)
!4984 = !DILocation(line: 505, column: 36, scope: !4980)
!4985 = !DILocation(line: 505, column: 41, scope: !4980)
!4986 = !DILocation(line: 505, column: 47, scope: !4980)
!4987 = !DILocation(line: 505, column: 5, scope: !4980)
!4988 = !DILocation(line: 506, column: 4, scope: !4980)
!4989 = !DILocation(line: 508, column: 11, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 508, column: 4)
!4991 = !DILocation(line: 508, column: 9, scope: !4990)
!4992 = !DILocation(line: 508, column: 16, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 508, column: 4)
!4994 = !DILocation(line: 508, column: 20, scope: !4993)
!4995 = !DILocation(line: 508, column: 18, scope: !4993)
!4996 = !DILocation(line: 508, column: 4, scope: !4990)
!4997 = !DILocation(line: 509, column: 10, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 509, column: 9)
!4999 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 508, column: 30)
!5000 = !DILocation(line: 509, column: 9, scope: !4999)
!5001 = !DILocation(line: 509, column: 59, scope: !4998)
!5002 = !DILocation(line: 509, column: 65, scope: !4998)
!5003 = !DILocation(line: 509, column: 30, scope: !4998)
!5004 = !DILocation(line: 509, column: 21, scope: !4998)
!5005 = !DILocation(line: 509, column: 28, scope: !4998)
!5006 = !DILocation(line: 510, column: 9, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 510, column: 9)
!5008 = !DILocation(line: 510, column: 9, scope: !4999)
!5009 = !DILocation(line: 510, column: 25, scope: !5007)
!5010 = !DILocation(line: 510, column: 33, scope: !5007)
!5011 = !DILocation(line: 510, column: 23, scope: !5007)
!5012 = !DILocation(line: 510, column: 18, scope: !5007)
!5013 = !DILocation(line: 511, column: 25, scope: !4999)
!5014 = !DILocation(line: 511, column: 32, scope: !4999)
!5015 = !DILocation(line: 511, column: 37, scope: !4999)
!5016 = !DILocation(line: 511, column: 43, scope: !4999)
!5017 = !DILocation(line: 511, column: 46, scope: !4999)
!5018 = !DILocation(line: 511, column: 51, scope: !4999)
!5019 = !DILocation(line: 511, column: 63, scope: !4999)
!5020 = !DILocation(line: 511, column: 66, scope: !4999)
!5021 = !DILocation(line: 511, column: 11, scope: !4999)
!5022 = !DILocation(line: 511, column: 9, scope: !4999)
!5023 = !DILocation(line: 512, column: 9, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 512, column: 9)
!5025 = !DILocation(line: 512, column: 16, scope: !5024)
!5026 = !DILocation(line: 512, column: 19, scope: !5024)
!5027 = !DILocation(line: 512, column: 24, scope: !5024)
!5028 = !DILocation(line: 512, column: 29, scope: !5024)
!5029 = !DILocation(line: 512, column: 9, scope: !4999)
!5030 = !DILocation(line: 513, column: 6, scope: !5024)
!5031 = !DILocation(line: 513, column: 11, scope: !5024)
!5032 = !DILocation(line: 513, column: 16, scope: !5024)
!5033 = !DILocation(line: 514, column: 9, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 514, column: 9)
!5035 = !DILocation(line: 514, column: 16, scope: !5034)
!5036 = !DILocation(line: 514, column: 19, scope: !5034)
!5037 = !DILocation(line: 514, column: 24, scope: !5034)
!5038 = !DILocation(line: 514, column: 29, scope: !5034)
!5039 = !DILocation(line: 514, column: 9, scope: !4999)
!5040 = !DILocation(line: 515, column: 6, scope: !5034)
!5041 = !DILocation(line: 515, column: 11, scope: !5034)
!5042 = !DILocation(line: 515, column: 16, scope: !5034)
!5043 = !DILocation(line: 516, column: 10, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 516, column: 9)
!5045 = !DILocation(line: 516, column: 12, scope: !5044)
!5046 = !DILocation(line: 516, column: 18, scope: !5044)
!5047 = !DILocation(line: 516, column: 22, scope: !5044)
!5048 = !DILocation(line: 516, column: 30, scope: !5044)
!5049 = !DILocation(line: 516, column: 9, scope: !4999)
!5050 = !DILocation(line: 517, column: 23, scope: !5044)
!5051 = !DILocation(line: 517, column: 6, scope: !5044)
!5052 = !DILocation(line: 518, column: 4, scope: !4999)
!5053 = !DILocation(line: 508, column: 26, scope: !4993)
!5054 = !DILocation(line: 508, column: 4, scope: !4993)
!5055 = distinct !{!5055, !4996, !5056}
!5056 = !DILocation(line: 518, column: 4, scope: !4990)
!5057 = !DILocation(line: 520, column: 8, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 520, column: 8)
!5059 = !DILocation(line: 520, column: 8, scope: !4955)
!5060 = !DILocation(line: 521, column: 5, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 520, column: 17)
!5062 = !DILocation(line: 521, column: 15, scope: !5061)
!5063 = !DILocation(line: 522, column: 4, scope: !5061)
!5064 = !DILocation(line: 526, column: 22, scope: !4521)
!5065 = !DILocation(line: 526, column: 29, scope: !4521)
!5066 = !DILocation(line: 526, column: 2, scope: !4521)
!5067 = !DILocation(line: 527, column: 1, scope: !4521)
!5068 = distinct !DISubprogram(name: "ui_item_enum_expand", scope: !3, file: !3, line: 547, type: !5069, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{null, !1113, !1197, !2343, !1946, !1380, !1100, !1100}
!5071 = !DILocalVariable(name: "layout", arg: 1, scope: !5068, file: !3, line: 547, type: !1113)
!5072 = !DILocation(line: 547, column: 43, scope: !5068)
!5073 = !DILocalVariable(name: "block", arg: 2, scope: !5068, file: !3, line: 547, type: !1197)
!5074 = !DILocation(line: 547, column: 60, scope: !5068)
!5075 = !DILocalVariable(name: "ptr", arg: 3, scope: !5068, file: !3, line: 547, type: !2343)
!5076 = !DILocation(line: 547, column: 79, scope: !5068)
!5077 = !DILocalVariable(name: "prop", arg: 4, scope: !5068, file: !3, line: 547, type: !1946)
!5078 = !DILocation(line: 547, column: 97, scope: !5068)
!5079 = !DILocalVariable(name: "uiname", arg: 5, scope: !5068, file: !3, line: 548, type: !1380)
!5080 = !DILocation(line: 548, column: 45, scope: !5068)
!5081 = !DILocalVariable(name: "h", arg: 6, scope: !5068, file: !3, line: 548, type: !1100)
!5082 = !DILocation(line: 548, column: 57, scope: !5068)
!5083 = !DILocalVariable(name: "icon_only", arg: 7, scope: !5068, file: !3, line: 548, type: !1100)
!5084 = !DILocation(line: 548, column: 64, scope: !5068)
!5085 = !DILocalVariable(name: "but", scope: !5068, file: !3, line: 558, type: !2159)
!5086 = !DILocation(line: 558, column: 9, scope: !5068)
!5087 = !DILocalVariable(name: "layout_radial", scope: !5068, file: !3, line: 559, type: !1113)
!5088 = !DILocation(line: 559, column: 12, scope: !5068)
!5089 = !DILocalVariable(name: "item", scope: !5068, file: !3, line: 560, type: !2828)
!5090 = !DILocation(line: 560, column: 20, scope: !5068)
!5091 = !DILocalVariable(name: "item_array", scope: !5068, file: !3, line: 560, type: !2828)
!5092 = !DILocation(line: 560, column: 27, scope: !5068)
!5093 = !DILocalVariable(name: "name", scope: !5068, file: !3, line: 561, type: !1380)
!5094 = !DILocation(line: 561, column: 14, scope: !5068)
!5095 = !DILocalVariable(name: "itemw", scope: !5068, file: !3, line: 562, type: !1100)
!5096 = !DILocation(line: 562, column: 6, scope: !5068)
!5097 = !DILocalVariable(name: "icon", scope: !5068, file: !3, line: 562, type: !1100)
!5098 = !DILocation(line: 562, column: 13, scope: !5068)
!5099 = !DILocalVariable(name: "value", scope: !5068, file: !3, line: 562, type: !1100)
!5100 = !DILocation(line: 562, column: 19, scope: !5068)
!5101 = !DILocalVariable(name: "free", scope: !5068, file: !3, line: 563, type: !1413)
!5102 = !DILocation(line: 563, column: 7, scope: !5068)
!5103 = !DILocalVariable(name: "radial", scope: !5068, file: !3, line: 564, type: !1413)
!5104 = !DILocation(line: 564, column: 7, scope: !5068)
!5105 = !DILocation(line: 564, column: 17, scope: !5068)
!5106 = !DILocation(line: 564, column: 25, scope: !5068)
!5107 = !DILocation(line: 564, column: 31, scope: !5068)
!5108 = !DILocation(line: 564, column: 36, scope: !5068)
!5109 = !DILocation(line: 564, column: 16, scope: !5068)
!5110 = !DILocation(line: 566, column: 6, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 566, column: 6)
!5112 = !DILocation(line: 566, column: 6, scope: !5068)
!5113 = !DILocation(line: 567, column: 41, scope: !5111)
!5114 = !DILocation(line: 567, column: 48, scope: !5111)
!5115 = !DILocation(line: 567, column: 56, scope: !5111)
!5116 = !DILocation(line: 567, column: 61, scope: !5111)
!5117 = !DILocation(line: 567, column: 3, scope: !5111)
!5118 = !DILocation(line: 569, column: 37, scope: !5111)
!5119 = !DILocation(line: 569, column: 44, scope: !5111)
!5120 = !DILocation(line: 569, column: 52, scope: !5111)
!5121 = !DILocation(line: 569, column: 57, scope: !5111)
!5122 = !DILocation(line: 569, column: 3, scope: !5111)
!5123 = !DILocation(line: 572, column: 6, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 572, column: 6)
!5125 = !DILocation(line: 572, column: 6, scope: !5068)
!5126 = !DILocation(line: 573, column: 34, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 572, column: 14)
!5128 = !DILocation(line: 573, column: 19, scope: !5127)
!5129 = !DILocation(line: 573, column: 17, scope: !5127)
!5130 = !DILocation(line: 574, column: 23, scope: !5127)
!5131 = !DILocation(line: 574, column: 30, scope: !5127)
!5132 = !DILocation(line: 574, column: 3, scope: !5127)
!5133 = !DILocation(line: 575, column: 2, scope: !5127)
!5134 = !DILocation(line: 576, column: 11, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 576, column: 11)
!5136 = !DILocation(line: 576, column: 19, scope: !5135)
!5137 = !DILocation(line: 576, column: 25, scope: !5135)
!5138 = !DILocation(line: 576, column: 30, scope: !5135)
!5139 = !DILocation(line: 576, column: 11, scope: !5124)
!5140 = !DILocation(line: 577, column: 23, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 576, column: 49)
!5142 = !DILocation(line: 577, column: 54, scope: !5141)
!5143 = !DILocation(line: 577, column: 62, scope: !5141)
!5144 = !DILocation(line: 577, column: 30, scope: !5141)
!5145 = !DILocation(line: 577, column: 3, scope: !5141)
!5146 = !DILocation(line: 578, column: 2, scope: !5141)
!5147 = !DILocation(line: 580, column: 23, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 579, column: 7)
!5149 = !DILocation(line: 580, column: 30, scope: !5148)
!5150 = !DILocation(line: 580, column: 3, scope: !5148)
!5151 = !DILocation(line: 583, column: 14, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 583, column: 2)
!5153 = !DILocation(line: 583, column: 12, scope: !5152)
!5154 = !DILocation(line: 583, column: 7, scope: !5152)
!5155 = !DILocation(line: 583, column: 26, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 583, column: 2)
!5157 = !DILocation(line: 583, column: 32, scope: !5156)
!5158 = !DILocation(line: 583, column: 2, scope: !5152)
!5159 = !DILocation(line: 584, column: 8, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 584, column: 7)
!5161 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 583, column: 52)
!5162 = !DILocation(line: 584, column: 14, scope: !5160)
!5163 = !DILocation(line: 584, column: 7, scope: !5161)
!5164 = !DILocation(line: 585, column: 8, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 585, column: 8)
!5166 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 584, column: 29)
!5167 = !DILocation(line: 585, column: 8, scope: !5166)
!5168 = !DILocation(line: 586, column: 13, scope: !5165)
!5169 = !DILocation(line: 586, column: 5, scope: !5165)
!5170 = !DILocation(line: 587, column: 4, scope: !5166)
!5171 = !DILocation(line: 590, column: 12, scope: !5161)
!5172 = !DILocation(line: 590, column: 19, scope: !5161)
!5173 = !DILocation(line: 590, column: 22, scope: !5161)
!5174 = !DILocation(line: 590, column: 10, scope: !5161)
!5175 = !DILocation(line: 590, column: 35, scope: !5161)
!5176 = !DILocation(line: 590, column: 41, scope: !5161)
!5177 = !DILocation(line: 590, column: 8, scope: !5161)
!5178 = !DILocation(line: 591, column: 10, scope: !5161)
!5179 = !DILocation(line: 591, column: 16, scope: !5161)
!5180 = !DILocation(line: 591, column: 8, scope: !5161)
!5181 = !DILocation(line: 592, column: 11, scope: !5161)
!5182 = !DILocation(line: 592, column: 17, scope: !5161)
!5183 = !DILocation(line: 592, column: 9, scope: !5161)
!5184 = !DILocation(line: 593, column: 30, scope: !5161)
!5185 = !DILocation(line: 593, column: 37, scope: !5161)
!5186 = !DILocation(line: 593, column: 48, scope: !5161)
!5187 = !DILocation(line: 593, column: 65, scope: !5161)
!5188 = !DILocation(line: 593, column: 71, scope: !5161)
!5189 = !DILocation(line: 593, column: 11, scope: !5161)
!5190 = !DILocation(line: 593, column: 9, scope: !5161)
!5191 = !DILocation(line: 595, column: 7, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 595, column: 7)
!5193 = !DILocation(line: 595, column: 12, scope: !5192)
!5194 = !DILocation(line: 595, column: 15, scope: !5192)
!5195 = !DILocation(line: 595, column: 23, scope: !5192)
!5196 = !DILocation(line: 595, column: 27, scope: !5192)
!5197 = !DILocation(line: 595, column: 7, scope: !5161)
!5198 = !DILocation(line: 596, column: 33, scope: !5192)
!5199 = !DILocation(line: 596, column: 48, scope: !5192)
!5200 = !DILocation(line: 596, column: 54, scope: !5192)
!5201 = !DILocation(line: 596, column: 66, scope: !5192)
!5202 = !DILocation(line: 596, column: 73, scope: !5192)
!5203 = !DILocation(line: 596, column: 76, scope: !5192)
!5204 = !DILocation(line: 596, column: 81, scope: !5192)
!5205 = !DILocation(line: 596, column: 94, scope: !5192)
!5206 = !DILocation(line: 596, column: 10, scope: !5192)
!5207 = !DILocation(line: 596, column: 8, scope: !5192)
!5208 = !DILocation(line: 596, column: 4, scope: !5192)
!5209 = !DILocation(line: 597, column: 12, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 597, column: 12)
!5211 = !DILocation(line: 597, column: 12, scope: !5192)
!5212 = !DILocation(line: 598, column: 29, scope: !5210)
!5213 = !DILocation(line: 598, column: 44, scope: !5210)
!5214 = !DILocation(line: 598, column: 56, scope: !5210)
!5215 = !DILocation(line: 598, column: 63, scope: !5210)
!5216 = !DILocation(line: 598, column: 66, scope: !5210)
!5217 = !DILocation(line: 598, column: 71, scope: !5210)
!5218 = !DILocation(line: 598, column: 84, scope: !5210)
!5219 = !DILocation(line: 598, column: 10, scope: !5210)
!5220 = !DILocation(line: 598, column: 8, scope: !5210)
!5221 = !DILocation(line: 598, column: 4, scope: !5210)
!5222 = !DILocation(line: 600, column: 25, scope: !5210)
!5223 = !DILocation(line: 600, column: 40, scope: !5210)
!5224 = !DILocation(line: 600, column: 52, scope: !5210)
!5225 = !DILocation(line: 600, column: 59, scope: !5210)
!5226 = !DILocation(line: 600, column: 62, scope: !5210)
!5227 = !DILocation(line: 600, column: 67, scope: !5210)
!5228 = !DILocation(line: 600, column: 80, scope: !5210)
!5229 = !DILocation(line: 600, column: 10, scope: !5210)
!5230 = !DILocation(line: 600, column: 8, scope: !5210)
!5231 = !DILocation(line: 602, column: 25, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 602, column: 7)
!5233 = !DILocation(line: 602, column: 7, scope: !5232)
!5234 = !DILocation(line: 602, column: 31, scope: !5232)
!5235 = !DILocation(line: 602, column: 7, scope: !5161)
!5236 = !DILocation(line: 603, column: 17, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 602, column: 49)
!5238 = !DILocation(line: 603, column: 50, scope: !5237)
!5239 = !DILocation(line: 603, column: 55, scope: !5237)
!5240 = !DILocation(line: 603, column: 4, scope: !5237)
!5241 = !DILocation(line: 604, column: 3, scope: !5237)
!5242 = !DILocation(line: 606, column: 27, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 606, column: 7)
!5244 = !DILocation(line: 606, column: 7, scope: !5243)
!5245 = !DILocation(line: 606, column: 35, scope: !5243)
!5246 = !DILocation(line: 606, column: 7, scope: !5161)
!5247 = !DILocation(line: 607, column: 4, scope: !5243)
!5248 = !DILocation(line: 607, column: 9, scope: !5243)
!5249 = !DILocation(line: 607, column: 18, scope: !5243)
!5250 = !DILocation(line: 608, column: 2, scope: !5161)
!5251 = !DILocation(line: 583, column: 48, scope: !5156)
!5252 = !DILocation(line: 583, column: 2, scope: !5156)
!5253 = distinct !{!5253, !5158, !5254}
!5254 = !DILocation(line: 608, column: 2, scope: !5152)
!5255 = !DILocation(line: 609, column: 22, scope: !5068)
!5256 = !DILocation(line: 609, column: 29, scope: !5068)
!5257 = !DILocation(line: 609, column: 2, scope: !5068)
!5258 = !DILocation(line: 611, column: 6, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 611, column: 6)
!5260 = !DILocation(line: 611, column: 6, scope: !5068)
!5261 = !DILocation(line: 612, column: 3, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 611, column: 12)
!5263 = !DILocation(line: 612, column: 13, scope: !5262)
!5264 = !DILocation(line: 613, column: 2, scope: !5262)
!5265 = !DILocation(line: 614, column: 1, scope: !5068)
!5266 = distinct !DISubprogram(name: "ui_item_with_label", scope: !3, file: !3, line: 628, type: !5267, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{!2159, !1113, !1197, !1380, !1100, !2343, !1946, !1100, !1100, !1100, !1100, !1100, !1100}
!5269 = !DILocalVariable(name: "layout", arg: 1, scope: !5266, file: !3, line: 628, type: !1113)
!5270 = !DILocation(line: 628, column: 44, scope: !5266)
!5271 = !DILocalVariable(name: "block", arg: 2, scope: !5266, file: !3, line: 628, type: !1197)
!5272 = !DILocation(line: 628, column: 61, scope: !5266)
!5273 = !DILocalVariable(name: "name", arg: 3, scope: !5266, file: !3, line: 628, type: !1380)
!5274 = !DILocation(line: 628, column: 80, scope: !5266)
!5275 = !DILocalVariable(name: "icon", arg: 4, scope: !5266, file: !3, line: 628, type: !1100)
!5276 = !DILocation(line: 628, column: 90, scope: !5266)
!5277 = !DILocalVariable(name: "ptr", arg: 5, scope: !5266, file: !3, line: 628, type: !2343)
!5278 = !DILocation(line: 628, column: 108, scope: !5266)
!5279 = !DILocalVariable(name: "prop", arg: 6, scope: !5266, file: !3, line: 628, type: !1946)
!5280 = !DILocation(line: 628, column: 126, scope: !5266)
!5281 = !DILocalVariable(name: "index", arg: 7, scope: !5266, file: !3, line: 628, type: !1100)
!5282 = !DILocation(line: 628, column: 136, scope: !5266)
!5283 = !DILocalVariable(name: "x", arg: 8, scope: !5266, file: !3, line: 628, type: !1100)
!5284 = !DILocation(line: 628, column: 147, scope: !5266)
!5285 = !DILocalVariable(name: "y", arg: 9, scope: !5266, file: !3, line: 628, type: !1100)
!5286 = !DILocation(line: 628, column: 154, scope: !5266)
!5287 = !DILocalVariable(name: "w", arg: 10, scope: !5266, file: !3, line: 628, type: !1100)
!5288 = !DILocation(line: 628, column: 161, scope: !5266)
!5289 = !DILocalVariable(name: "h", arg: 11, scope: !5266, file: !3, line: 628, type: !1100)
!5290 = !DILocation(line: 628, column: 168, scope: !5266)
!5291 = !DILocalVariable(name: "flag", arg: 12, scope: !5266, file: !3, line: 628, type: !1100)
!5292 = !DILocation(line: 628, column: 175, scope: !5266)
!5293 = !DILocalVariable(name: "sub", scope: !5266, file: !3, line: 630, type: !1113)
!5294 = !DILocation(line: 630, column: 12, scope: !5266)
!5295 = !DILocalVariable(name: "but", scope: !5266, file: !3, line: 631, type: !2159)
!5296 = !DILocation(line: 631, column: 9, scope: !5266)
!5297 = !DILocalVariable(name: "type", scope: !5266, file: !3, line: 632, type: !3890)
!5298 = !DILocation(line: 632, column: 15, scope: !5266)
!5299 = !DILocalVariable(name: "subtype", scope: !5266, file: !3, line: 633, type: !4335)
!5300 = !DILocation(line: 633, column: 18, scope: !5266)
!5301 = !DILocalVariable(name: "labelw", scope: !5266, file: !3, line: 634, type: !1100)
!5302 = !DILocation(line: 634, column: 6, scope: !5266)
!5303 = !DILocation(line: 636, column: 20, scope: !5266)
!5304 = !DILocation(line: 636, column: 28, scope: !5266)
!5305 = !DILocation(line: 636, column: 36, scope: !5266)
!5306 = !DILocation(line: 636, column: 8, scope: !5266)
!5307 = !DILocation(line: 636, column: 6, scope: !5266)
!5308 = !DILocation(line: 637, column: 22, scope: !5266)
!5309 = !DILocation(line: 637, column: 29, scope: !5266)
!5310 = !DILocation(line: 637, column: 2, scope: !5266)
!5311 = !DILocation(line: 639, column: 6, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 639, column: 6)
!5313 = !DILocation(line: 639, column: 6, scope: !5266)
!5314 = !DILocation(line: 645, column: 12, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 639, column: 15)
!5316 = !DILocation(line: 645, column: 14, scope: !5315)
!5317 = !DILocation(line: 645, column: 10, scope: !5315)
!5318 = !DILocation(line: 646, column: 12, scope: !5315)
!5319 = !DILocation(line: 646, column: 29, scope: !5315)
!5320 = !DILocation(line: 646, column: 35, scope: !5315)
!5321 = !DILocation(line: 646, column: 38, scope: !5315)
!5322 = !DILocation(line: 646, column: 41, scope: !5315)
!5323 = !DILocation(line: 646, column: 49, scope: !5315)
!5324 = !DILocation(line: 646, column: 3, scope: !5315)
!5325 = !DILocation(line: 647, column: 7, scope: !5315)
!5326 = !DILocation(line: 647, column: 11, scope: !5315)
!5327 = !DILocation(line: 647, column: 9, scope: !5315)
!5328 = !DILocation(line: 647, column: 5, scope: !5315)
!5329 = !DILocation(line: 648, column: 2, scope: !5315)
!5330 = !DILocation(line: 650, column: 27, scope: !5266)
!5331 = !DILocation(line: 650, column: 9, scope: !5266)
!5332 = !DILocation(line: 650, column: 7, scope: !5266)
!5333 = !DILocation(line: 651, column: 33, scope: !5266)
!5334 = !DILocation(line: 651, column: 12, scope: !5266)
!5335 = !DILocation(line: 651, column: 10, scope: !5266)
!5336 = !DILocation(line: 653, column: 6, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 653, column: 6)
!5338 = !DILocation(line: 653, column: 14, scope: !5337)
!5339 = !DILocation(line: 653, column: 31, scope: !5337)
!5340 = !DILocation(line: 653, column: 34, scope: !5337)
!5341 = !DILocation(line: 653, column: 42, scope: !5337)
!5342 = !DILocation(line: 653, column: 6, scope: !5266)
!5343 = !DILocation(line: 654, column: 23, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 653, column: 59)
!5345 = !DILocation(line: 654, column: 42, scope: !5344)
!5346 = !DILocation(line: 654, column: 30, scope: !5344)
!5347 = !DILocation(line: 654, column: 3, scope: !5344)
!5348 = !DILocation(line: 655, column: 23, scope: !5344)
!5349 = !DILocation(line: 655, column: 30, scope: !5344)
!5350 = !DILocation(line: 655, column: 35, scope: !5344)
!5351 = !DILocation(line: 655, column: 41, scope: !5344)
!5352 = !DILocation(line: 655, column: 52, scope: !5344)
!5353 = !DILocation(line: 655, column: 58, scope: !5344)
!5354 = !DILocation(line: 655, column: 61, scope: !5344)
!5355 = !DILocation(line: 655, column: 64, scope: !5344)
!5356 = !DILocation(line: 655, column: 68, scope: !5344)
!5357 = !DILocation(line: 655, column: 66, scope: !5344)
!5358 = !DILocation(line: 655, column: 79, scope: !5344)
!5359 = !DILocation(line: 655, column: 9, scope: !5344)
!5360 = !DILocation(line: 655, column: 7, scope: !5344)
!5361 = !DILocation(line: 658, column: 17, scope: !5344)
!5362 = !DILocation(line: 658, column: 29, scope: !5344)
!5363 = !DILocation(line: 658, column: 37, scope: !5344)
!5364 = !DILocation(line: 659, column: 53, scope: !5344)
!5365 = !DILocation(line: 659, column: 56, scope: !5344)
!5366 = !DILocation(line: 659, column: 59, scope: !5344)
!5367 = !DILocation(line: 659, column: 70, scope: !5344)
!5368 = !DILocation(line: 658, column: 3, scope: !5344)
!5369 = !DILocation(line: 660, column: 2, scope: !5344)
!5370 = !DILocation(line: 661, column: 11, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 661, column: 11)
!5372 = !DILocation(line: 661, column: 16, scope: !5371)
!5373 = !DILocation(line: 661, column: 11, scope: !5337)
!5374 = !DILocation(line: 662, column: 18, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 661, column: 35)
!5376 = !DILocation(line: 662, column: 36, scope: !5375)
!5377 = !DILocation(line: 662, column: 42, scope: !5375)
!5378 = !DILocation(line: 662, column: 45, scope: !5375)
!5379 = !DILocation(line: 662, column: 48, scope: !5375)
!5380 = !DILocation(line: 662, column: 51, scope: !5375)
!5381 = !DILocation(line: 662, column: 54, scope: !5375)
!5382 = !DILocation(line: 662, column: 59, scope: !5375)
!5383 = !DILocation(line: 662, column: 65, scope: !5375)
!5384 = !DILocation(line: 662, column: 3, scope: !5375)
!5385 = !DILocation(line: 663, column: 2, scope: !5375)
!5386 = !DILocation(line: 664, column: 11, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 664, column: 11)
!5388 = !DILocation(line: 664, column: 16, scope: !5387)
!5389 = !DILocation(line: 664, column: 11, scope: !5371)
!5390 = !DILocation(line: 665, column: 23, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 665, column: 7)
!5392 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 664, column: 40)
!5393 = !DILocation(line: 665, column: 28, scope: !5391)
!5394 = !DILocation(line: 665, column: 7, scope: !5391)
!5395 = !DILocation(line: 665, column: 7, scope: !5392)
!5396 = !DILocalVariable(name: "buf", scope: !5397, file: !3, line: 666, type: !1309)
!5397 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 665, column: 52)
!5398 = !DILocation(line: 666, column: 9, scope: !5397)
!5399 = !DILocation(line: 668, column: 29, scope: !5397)
!5400 = !DILocation(line: 668, column: 34, scope: !5397)
!5401 = !DILocation(line: 668, column: 40, scope: !5397)
!5402 = !DILocation(line: 668, column: 4, scope: !5397)
!5403 = !DILocation(line: 670, column: 25, scope: !5397)
!5404 = !DILocation(line: 670, column: 46, scope: !5397)
!5405 = !DILocation(line: 670, column: 51, scope: !5397)
!5406 = !DILocation(line: 670, column: 54, scope: !5397)
!5407 = !DILocation(line: 670, column: 57, scope: !5397)
!5408 = !DILocation(line: 670, column: 60, scope: !5397)
!5409 = !DILocation(line: 670, column: 63, scope: !5397)
!5410 = !DILocation(line: 670, column: 68, scope: !5397)
!5411 = !DILocation(line: 670, column: 10, scope: !5397)
!5412 = !DILocation(line: 670, column: 8, scope: !5397)
!5413 = !DILocation(line: 671, column: 17, scope: !5397)
!5414 = !DILocation(line: 671, column: 40, scope: !5397)
!5415 = !DILocation(line: 671, column: 4, scope: !5397)
!5416 = !DILocation(line: 672, column: 8, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 672, column: 8)
!5418 = !DILocation(line: 672, column: 13, scope: !5417)
!5419 = !DILocation(line: 672, column: 8, scope: !5397)
!5420 = !DILocation(line: 673, column: 18, scope: !5417)
!5421 = !DILocation(line: 673, column: 5, scope: !5417)
!5422 = !DILocation(line: 674, column: 3, scope: !5397)
!5423 = !DILocation(line: 675, column: 2, scope: !5392)
!5424 = !DILocation(line: 677, column: 23, scope: !5387)
!5425 = !DILocation(line: 677, column: 30, scope: !5387)
!5426 = !DILocation(line: 677, column: 35, scope: !5387)
!5427 = !DILocation(line: 677, column: 41, scope: !5387)
!5428 = !DILocation(line: 677, column: 49, scope: !5387)
!5429 = !DILocation(line: 677, column: 54, scope: !5387)
!5430 = !DILocation(line: 677, column: 67, scope: !5387)
!5431 = !DILocation(line: 677, column: 72, scope: !5387)
!5432 = !DILocation(line: 677, column: 77, scope: !5387)
!5433 = !DILocation(line: 677, column: 70, scope: !5387)
!5434 = !DILocation(line: 0, scope: !5387)
!5435 = !DILocation(line: 677, column: 48, scope: !5387)
!5436 = !DILocation(line: 677, column: 114, scope: !5387)
!5437 = !DILocation(line: 677, column: 120, scope: !5387)
!5438 = !DILocation(line: 677, column: 123, scope: !5387)
!5439 = !DILocation(line: 677, column: 126, scope: !5387)
!5440 = !DILocation(line: 677, column: 129, scope: !5387)
!5441 = !DILocation(line: 677, column: 9, scope: !5387)
!5442 = !DILocation(line: 677, column: 7, scope: !5387)
!5443 = !DILocation(line: 679, column: 22, scope: !5266)
!5444 = !DILocation(line: 679, column: 29, scope: !5266)
!5445 = !DILocation(line: 679, column: 2, scope: !5266)
!5446 = !DILocation(line: 680, column: 9, scope: !5266)
!5447 = !DILocation(line: 680, column: 2, scope: !5266)
!5448 = distinct !DISubprogram(name: "ui_but_add_search", scope: !3, file: !3, line: 1551, type: !5449, scopeLine: 1552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{null, !2159, !2343, !1946, !2343, !1946}
!5451 = !DILocalVariable(name: "but", arg: 1, scope: !5448, file: !3, line: 1551, type: !2159)
!5452 = !DILocation(line: 1551, column: 31, scope: !5448)
!5453 = !DILocalVariable(name: "ptr", arg: 2, scope: !5448, file: !3, line: 1551, type: !2343)
!5454 = !DILocation(line: 1551, column: 48, scope: !5448)
!5455 = !DILocalVariable(name: "prop", arg: 3, scope: !5448, file: !3, line: 1551, type: !1946)
!5456 = !DILocation(line: 1551, column: 66, scope: !5448)
!5457 = !DILocalVariable(name: "searchptr", arg: 4, scope: !5448, file: !3, line: 1551, type: !2343)
!5458 = !DILocation(line: 1551, column: 84, scope: !5448)
!5459 = !DILocalVariable(name: "searchprop", arg: 5, scope: !5448, file: !3, line: 1551, type: !1946)
!5460 = !DILocation(line: 1551, column: 108, scope: !5448)
!5461 = !DILocalVariable(name: "ptype", scope: !5448, file: !3, line: 1553, type: !1251)
!5462 = !DILocation(line: 1553, column: 13, scope: !5448)
!5463 = !DILocalVariable(name: "sptr", scope: !5448, file: !3, line: 1554, type: !2307)
!5464 = !DILocation(line: 1554, column: 13, scope: !5448)
!5465 = !DILocation(line: 1557, column: 7, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1557, column: 6)
!5467 = !DILocation(line: 1557, column: 6, scope: !5448)
!5468 = !DILocation(line: 1558, column: 25, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1558, column: 7)
!5470 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1557, column: 19)
!5471 = !DILocation(line: 1558, column: 7, scope: !5469)
!5472 = !DILocation(line: 1558, column: 31, scope: !5469)
!5473 = !DILocation(line: 1558, column: 7, scope: !5470)
!5474 = !DILocation(line: 1559, column: 38, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 1558, column: 48)
!5476 = !DILocation(line: 1559, column: 43, scope: !5475)
!5477 = !DILocation(line: 1559, column: 12, scope: !5475)
!5478 = !DILocation(line: 1559, column: 10, scope: !5475)
!5479 = !DILocation(line: 1560, column: 25, scope: !5475)
!5480 = !DILocation(line: 1560, column: 4, scope: !5475)
!5481 = !DILocation(line: 1561, column: 14, scope: !5475)
!5482 = !DILocation(line: 1562, column: 3, scope: !5475)
!5483 = !DILocation(line: 1563, column: 2, scope: !5470)
!5484 = !DILocation(line: 1566, column: 6, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1566, column: 6)
!5486 = !DILocation(line: 1566, column: 6, scope: !5448)
!5487 = !DILocation(line: 1567, column: 38, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1566, column: 18)
!5489 = !DILocation(line: 1567, column: 15, scope: !5488)
!5490 = !DILocation(line: 1567, column: 3, scope: !5488)
!5491 = !DILocation(line: 1567, column: 8, scope: !5488)
!5492 = !DILocation(line: 1567, column: 13, scope: !5488)
!5493 = !DILocation(line: 1568, column: 18, scope: !5488)
!5494 = !DILocation(line: 1568, column: 3, scope: !5488)
!5495 = !DILocation(line: 1568, column: 8, scope: !5488)
!5496 = !DILocation(line: 1568, column: 16, scope: !5488)
!5497 = !DILocation(line: 1569, column: 3, scope: !5488)
!5498 = !DILocation(line: 1569, column: 8, scope: !5488)
!5499 = !DILocation(line: 1569, column: 25, scope: !5488)
!5500 = !DILocation(line: 1569, column: 24, scope: !5488)
!5501 = !DILocation(line: 1570, column: 24, scope: !5488)
!5502 = !DILocation(line: 1570, column: 3, scope: !5488)
!5503 = !DILocation(line: 1570, column: 8, scope: !5488)
!5504 = !DILocation(line: 1570, column: 22, scope: !5488)
!5505 = !DILocation(line: 1571, column: 3, scope: !5488)
!5506 = !DILocation(line: 1571, column: 8, scope: !5488)
!5507 = !DILocation(line: 1571, column: 17, scope: !5488)
!5508 = !DILocation(line: 1573, column: 25, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 1573, column: 7)
!5510 = !DILocation(line: 1573, column: 7, scope: !5509)
!5511 = !DILocation(line: 1573, column: 31, scope: !5509)
!5512 = !DILocation(line: 1573, column: 7, scope: !5488)
!5513 = !DILocation(line: 1576, column: 4, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 1573, column: 45)
!5515 = !DILocation(line: 1576, column: 9, scope: !5514)
!5516 = !DILocation(line: 1576, column: 16, scope: !5514)
!5517 = !DILocation(line: 1577, column: 3, scope: !5514)
!5518 = !DILocation(line: 1579, column: 22, scope: !5488)
!5519 = !DILocation(line: 1579, column: 42, scope: !5488)
!5520 = !DILocation(line: 1579, column: 3, scope: !5488)
!5521 = !DILocation(line: 1580, column: 2, scope: !5488)
!5522 = !DILocation(line: 1581, column: 1, scope: !5448)
!5523 = distinct !DISubprogram(name: "uiItemR", scope: !3, file: !3, line: 1315, type: !5524, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{null, !1113, !2343, !1380, !1100, !1380, !1100}
!5526 = !DILocalVariable(name: "layout", arg: 1, scope: !5523, file: !3, line: 1315, type: !1113)
!5527 = !DILocation(line: 1315, column: 24, scope: !5523)
!5528 = !DILocalVariable(name: "ptr", arg: 2, scope: !5523, file: !3, line: 1315, type: !2343)
!5529 = !DILocation(line: 1315, column: 44, scope: !5523)
!5530 = !DILocalVariable(name: "propname", arg: 3, scope: !5523, file: !3, line: 1315, type: !1380)
!5531 = !DILocation(line: 1315, column: 61, scope: !5523)
!5532 = !DILocalVariable(name: "flag", arg: 4, scope: !5523, file: !3, line: 1315, type: !1100)
!5533 = !DILocation(line: 1315, column: 75, scope: !5523)
!5534 = !DILocalVariable(name: "name", arg: 5, scope: !5523, file: !3, line: 1315, type: !1380)
!5535 = !DILocation(line: 1315, column: 93, scope: !5523)
!5536 = !DILocalVariable(name: "icon", arg: 6, scope: !5523, file: !3, line: 1315, type: !1100)
!5537 = !DILocation(line: 1315, column: 103, scope: !5523)
!5538 = !DILocalVariable(name: "prop", scope: !5523, file: !3, line: 1317, type: !1946)
!5539 = !DILocation(line: 1317, column: 15, scope: !5523)
!5540 = !DILocation(line: 1317, column: 47, scope: !5523)
!5541 = !DILocation(line: 1317, column: 52, scope: !5523)
!5542 = !DILocation(line: 1317, column: 22, scope: !5523)
!5543 = !DILocation(line: 1319, column: 7, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1319, column: 6)
!5545 = !DILocation(line: 1319, column: 6, scope: !5523)
!5546 = !DILocation(line: 1320, column: 20, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 1319, column: 13)
!5548 = !DILocation(line: 1320, column: 28, scope: !5547)
!5549 = !DILocation(line: 1320, column: 3, scope: !5547)
!5550 = !DILocation(line: 1321, column: 3, scope: !5547)
!5551 = !DILocation(line: 1322, column: 3, scope: !5547)
!5552 = !DILocation(line: 1325, column: 14, scope: !5523)
!5553 = !DILocation(line: 1325, column: 22, scope: !5523)
!5554 = !DILocation(line: 1325, column: 27, scope: !5523)
!5555 = !DILocation(line: 1325, column: 50, scope: !5523)
!5556 = !DILocation(line: 1325, column: 56, scope: !5523)
!5557 = !DILocation(line: 1325, column: 62, scope: !5523)
!5558 = !DILocation(line: 1325, column: 2, scope: !5523)
!5559 = !DILocation(line: 1326, column: 1, scope: !5523)
!5560 = distinct !DISubprogram(name: "uiItemEnumR", scope: !3, file: !3, line: 1328, type: !5561, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{null, !1113, !1380, !1100, !1259, !1380, !1100}
!5563 = !DILocalVariable(name: "layout", arg: 1, scope: !5560, file: !3, line: 1328, type: !1113)
!5564 = !DILocation(line: 1328, column: 28, scope: !5560)
!5565 = !DILocalVariable(name: "name", arg: 2, scope: !5560, file: !3, line: 1328, type: !1380)
!5566 = !DILocation(line: 1328, column: 48, scope: !5560)
!5567 = !DILocalVariable(name: "icon", arg: 3, scope: !5560, file: !3, line: 1328, type: !1100)
!5568 = !DILocation(line: 1328, column: 58, scope: !5560)
!5569 = !DILocalVariable(name: "ptr", arg: 4, scope: !5560, file: !3, line: 1328, type: !1259)
!5570 = !DILocation(line: 1328, column: 83, scope: !5560)
!5571 = !DILocalVariable(name: "propname", arg: 5, scope: !5560, file: !3, line: 1328, type: !1380)
!5572 = !DILocation(line: 1328, column: 100, scope: !5560)
!5573 = !DILocalVariable(name: "value", arg: 6, scope: !5560, file: !3, line: 1328, type: !1100)
!5574 = !DILocation(line: 1328, column: 114, scope: !5560)
!5575 = !DILocalVariable(name: "prop", scope: !5560, file: !3, line: 1330, type: !1946)
!5576 = !DILocation(line: 1330, column: 15, scope: !5560)
!5577 = !DILocation(line: 1330, column: 47, scope: !5560)
!5578 = !DILocation(line: 1330, column: 52, scope: !5560)
!5579 = !DILocation(line: 1330, column: 22, scope: !5560)
!5580 = !DILocation(line: 1332, column: 7, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 1332, column: 6)
!5582 = !DILocation(line: 1332, column: 12, scope: !5581)
!5583 = !DILocation(line: 1332, column: 33, scope: !5581)
!5584 = !DILocation(line: 1332, column: 15, scope: !5581)
!5585 = !DILocation(line: 1332, column: 39, scope: !5581)
!5586 = !DILocation(line: 1332, column: 6, scope: !5560)
!5587 = !DILocation(line: 1333, column: 20, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 1332, column: 53)
!5589 = !DILocation(line: 1333, column: 28, scope: !5588)
!5590 = !DILocation(line: 1333, column: 3, scope: !5588)
!5591 = !DILocation(line: 1334, column: 3, scope: !5588)
!5592 = !DILocation(line: 1335, column: 3, scope: !5588)
!5593 = !DILocation(line: 1338, column: 14, scope: !5560)
!5594 = !DILocation(line: 1338, column: 22, scope: !5560)
!5595 = !DILocation(line: 1338, column: 27, scope: !5560)
!5596 = !DILocation(line: 1338, column: 49, scope: !5560)
!5597 = !DILocation(line: 1338, column: 59, scope: !5560)
!5598 = !DILocation(line: 1338, column: 65, scope: !5560)
!5599 = !DILocation(line: 1338, column: 2, scope: !5560)
!5600 = !DILocation(line: 1339, column: 1, scope: !5560)
!5601 = distinct !DISubprogram(name: "uiItemEnumR_string", scope: !3, file: !3, line: 1341, type: !5602, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{null, !1113, !1259, !1380, !1380, !1380, !1100}
!5604 = !DILocalVariable(name: "layout", arg: 1, scope: !5601, file: !3, line: 1341, type: !1113)
!5605 = !DILocation(line: 1341, column: 35, scope: !5601)
!5606 = !DILocalVariable(name: "ptr", arg: 2, scope: !5601, file: !3, line: 1341, type: !1259)
!5607 = !DILocation(line: 1341, column: 62, scope: !5601)
!5608 = !DILocalVariable(name: "propname", arg: 3, scope: !5601, file: !3, line: 1341, type: !1380)
!5609 = !DILocation(line: 1341, column: 79, scope: !5601)
!5610 = !DILocalVariable(name: "value", arg: 4, scope: !5601, file: !3, line: 1341, type: !1380)
!5611 = !DILocation(line: 1341, column: 101, scope: !5601)
!5612 = !DILocalVariable(name: "name", arg: 5, scope: !5601, file: !3, line: 1341, type: !1380)
!5613 = !DILocation(line: 1341, column: 120, scope: !5601)
!5614 = !DILocalVariable(name: "icon", arg: 6, scope: !5601, file: !3, line: 1341, type: !1100)
!5615 = !DILocation(line: 1341, column: 130, scope: !5601)
!5616 = !DILocalVariable(name: "prop", scope: !5601, file: !3, line: 1343, type: !1946)
!5617 = !DILocation(line: 1343, column: 15, scope: !5601)
!5618 = !DILocation(line: 1343, column: 47, scope: !5601)
!5619 = !DILocation(line: 1343, column: 52, scope: !5601)
!5620 = !DILocation(line: 1343, column: 22, scope: !5601)
!5621 = !DILocalVariable(name: "item", scope: !5601, file: !3, line: 1344, type: !2828)
!5622 = !DILocation(line: 1344, column: 20, scope: !5601)
!5623 = !DILocalVariable(name: "ivalue", scope: !5601, file: !3, line: 1345, type: !1100)
!5624 = !DILocation(line: 1345, column: 6, scope: !5601)
!5625 = !DILocalVariable(name: "a", scope: !5601, file: !3, line: 1345, type: !1100)
!5626 = !DILocation(line: 1345, column: 14, scope: !5601)
!5627 = !DILocalVariable(name: "free", scope: !5601, file: !3, line: 1346, type: !1413)
!5628 = !DILocation(line: 1346, column: 7, scope: !5601)
!5629 = !DILocation(line: 1348, column: 7, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1348, column: 6)
!5631 = !DILocation(line: 1348, column: 12, scope: !5630)
!5632 = !DILocation(line: 1348, column: 33, scope: !5630)
!5633 = !DILocation(line: 1348, column: 15, scope: !5630)
!5634 = !DILocation(line: 1348, column: 39, scope: !5630)
!5635 = !DILocation(line: 1348, column: 6, scope: !5601)
!5636 = !DILocation(line: 1349, column: 20, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 1348, column: 53)
!5638 = !DILocation(line: 1349, column: 28, scope: !5637)
!5639 = !DILocation(line: 1349, column: 3, scope: !5637)
!5640 = !DILocation(line: 1350, column: 3, scope: !5637)
!5641 = !DILocation(line: 1351, column: 3, scope: !5637)
!5642 = !DILocation(line: 1354, column: 26, scope: !5601)
!5643 = !DILocation(line: 1354, column: 34, scope: !5601)
!5644 = !DILocation(line: 1354, column: 40, scope: !5601)
!5645 = !DILocation(line: 1354, column: 47, scope: !5601)
!5646 = !DILocation(line: 1354, column: 55, scope: !5601)
!5647 = !DILocation(line: 1354, column: 60, scope: !5601)
!5648 = !DILocation(line: 1354, column: 2, scope: !5601)
!5649 = !DILocation(line: 1356, column: 30, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1356, column: 6)
!5651 = !DILocation(line: 1356, column: 36, scope: !5650)
!5652 = !DILocation(line: 1356, column: 7, scope: !5650)
!5653 = !DILocation(line: 1356, column: 6, scope: !5601)
!5654 = !DILocation(line: 1357, column: 7, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 1357, column: 7)
!5656 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1356, column: 53)
!5657 = !DILocation(line: 1357, column: 7, scope: !5656)
!5658 = !DILocation(line: 1358, column: 4, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 1357, column: 13)
!5660 = !DILocation(line: 1358, column: 14, scope: !5659)
!5661 = !DILocation(line: 1359, column: 3, scope: !5659)
!5662 = !DILocation(line: 1360, column: 20, scope: !5656)
!5663 = !DILocation(line: 1360, column: 28, scope: !5656)
!5664 = !DILocation(line: 1360, column: 3, scope: !5656)
!5665 = !DILocation(line: 1361, column: 3, scope: !5656)
!5666 = !DILocation(line: 1362, column: 3, scope: !5656)
!5667 = !DILocation(line: 1365, column: 9, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1365, column: 2)
!5669 = !DILocation(line: 1365, column: 7, scope: !5668)
!5670 = !DILocation(line: 1365, column: 14, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 1365, column: 2)
!5672 = !DILocation(line: 1365, column: 19, scope: !5671)
!5673 = !DILocation(line: 1365, column: 22, scope: !5671)
!5674 = !DILocation(line: 1365, column: 2, scope: !5668)
!5675 = !DILocation(line: 1366, column: 7, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1366, column: 7)
!5677 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1365, column: 39)
!5678 = !DILocation(line: 1366, column: 12, scope: !5676)
!5679 = !DILocation(line: 1366, column: 15, scope: !5676)
!5680 = !DILocation(line: 1366, column: 24, scope: !5676)
!5681 = !DILocation(line: 1366, column: 21, scope: !5676)
!5682 = !DILocation(line: 1366, column: 7, scope: !5677)
!5683 = !DILocalVariable(name: "item_name", scope: !5684, file: !3, line: 1367, type: !1380)
!5684 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 1366, column: 32)
!5685 = !DILocation(line: 1367, column: 16, scope: !5684)
!5686 = !DILocation(line: 1367, column: 28, scope: !5684)
!5687 = !DILocation(line: 1367, column: 35, scope: !5684)
!5688 = !DILocation(line: 1367, column: 42, scope: !5684)
!5689 = !DILocation(line: 1369, column: 16, scope: !5684)
!5690 = !DILocation(line: 1369, column: 24, scope: !5684)
!5691 = !DILocation(line: 1369, column: 29, scope: !5684)
!5692 = !DILocation(line: 1369, column: 51, scope: !5684)
!5693 = !DILocation(line: 1369, column: 62, scope: !5684)
!5694 = !DILocation(line: 1369, column: 73, scope: !5684)
!5695 = !DILocation(line: 1369, column: 80, scope: !5684)
!5696 = !DILocation(line: 1369, column: 87, scope: !5684)
!5697 = !DILocation(line: 1369, column: 92, scope: !5684)
!5698 = !DILocation(line: 1369, column: 95, scope: !5684)
!5699 = !DILocation(line: 1369, column: 4, scope: !5684)
!5700 = !DILocation(line: 1370, column: 4, scope: !5684)
!5701 = !DILocation(line: 1372, column: 2, scope: !5677)
!5702 = !DILocation(line: 1365, column: 35, scope: !5671)
!5703 = !DILocation(line: 1365, column: 2, scope: !5671)
!5704 = distinct !{!5704, !5674, !5705}
!5705 = !DILocation(line: 1372, column: 2, scope: !5668)
!5706 = !DILocation(line: 1374, column: 6, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1374, column: 6)
!5708 = !DILocation(line: 1374, column: 6, scope: !5601)
!5709 = !DILocation(line: 1375, column: 3, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 1374, column: 12)
!5711 = !DILocation(line: 1375, column: 13, scope: !5710)
!5712 = !DILocation(line: 1376, column: 2, scope: !5710)
!5713 = !DILocation(line: 1377, column: 1, scope: !5601)
!5714 = distinct !DISubprogram(name: "uiItemsEnumR", scope: !3, file: !3, line: 1379, type: !5715, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{null, !1113, !1259, !1380}
!5717 = !DILocalVariable(name: "layout", arg: 1, scope: !5714, file: !3, line: 1379, type: !1113)
!5718 = !DILocation(line: 1379, column: 29, scope: !5714)
!5719 = !DILocalVariable(name: "ptr", arg: 2, scope: !5714, file: !3, line: 1379, type: !1259)
!5720 = !DILocation(line: 1379, column: 56, scope: !5714)
!5721 = !DILocalVariable(name: "propname", arg: 3, scope: !5714, file: !3, line: 1379, type: !1380)
!5722 = !DILocation(line: 1379, column: 73, scope: !5714)
!5723 = !DILocalVariable(name: "prop", scope: !5714, file: !3, line: 1381, type: !1946)
!5724 = !DILocation(line: 1381, column: 15, scope: !5714)
!5725 = !DILocalVariable(name: "block", scope: !5714, file: !3, line: 1382, type: !1197)
!5726 = !DILocation(line: 1382, column: 11, scope: !5714)
!5727 = !DILocation(line: 1382, column: 19, scope: !5714)
!5728 = !DILocation(line: 1382, column: 27, scope: !5714)
!5729 = !DILocation(line: 1382, column: 33, scope: !5714)
!5730 = !DILocalVariable(name: "bt", scope: !5714, file: !3, line: 1383, type: !2159)
!5731 = !DILocation(line: 1383, column: 9, scope: !5714)
!5732 = !DILocation(line: 1385, column: 34, scope: !5714)
!5733 = !DILocation(line: 1385, column: 39, scope: !5714)
!5734 = !DILocation(line: 1385, column: 9, scope: !5714)
!5735 = !DILocation(line: 1385, column: 7, scope: !5714)
!5736 = !DILocation(line: 1387, column: 7, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 1387, column: 6)
!5738 = !DILocation(line: 1387, column: 6, scope: !5714)
!5739 = !DILocation(line: 1388, column: 20, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1387, column: 13)
!5741 = !DILocation(line: 1388, column: 28, scope: !5740)
!5742 = !DILocation(line: 1388, column: 3, scope: !5740)
!5743 = !DILocation(line: 1389, column: 3, scope: !5740)
!5744 = !DILocation(line: 1390, column: 3, scope: !5740)
!5745 = !DILocation(line: 1393, column: 24, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 1393, column: 6)
!5747 = !DILocation(line: 1393, column: 6, scope: !5746)
!5748 = !DILocation(line: 1393, column: 30, scope: !5746)
!5749 = !DILocation(line: 1393, column: 6, scope: !5714)
!5750 = !DILocation(line: 1394, column: 3, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 1393, column: 44)
!5752 = !DILocation(line: 1395, column: 3, scope: !5751)
!5753 = !DILocalVariable(name: "item", scope: !5754, file: !3, line: 1398, type: !2828)
!5754 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 1397, column: 7)
!5755 = !DILocation(line: 1398, column: 21, scope: !5754)
!5756 = !DILocalVariable(name: "totitem", scope: !5754, file: !3, line: 1399, type: !1100)
!5757 = !DILocation(line: 1399, column: 7, scope: !5754)
!5758 = !DILocalVariable(name: "i", scope: !5754, file: !3, line: 1399, type: !1100)
!5759 = !DILocation(line: 1399, column: 16, scope: !5754)
!5760 = !DILocalVariable(name: "free", scope: !5754, file: !3, line: 1400, type: !1413)
!5761 = !DILocation(line: 1400, column: 8, scope: !5754)
!5762 = !DILocalVariable(name: "split", scope: !5754, file: !3, line: 1401, type: !1113)
!5763 = !DILocation(line: 1401, column: 13, scope: !5754)
!5764 = !DILocation(line: 1401, column: 35, scope: !5754)
!5765 = !DILocation(line: 1401, column: 21, scope: !5754)
!5766 = !DILocalVariable(name: "column", scope: !5754, file: !3, line: 1402, type: !1113)
!5767 = !DILocation(line: 1402, column: 13, scope: !5754)
!5768 = !DILocation(line: 1402, column: 37, scope: !5754)
!5769 = !DILocation(line: 1402, column: 22, scope: !5754)
!5770 = !DILocation(line: 1404, column: 37, scope: !5754)
!5771 = !DILocation(line: 1404, column: 44, scope: !5754)
!5772 = !DILocation(line: 1404, column: 52, scope: !5754)
!5773 = !DILocation(line: 1404, column: 57, scope: !5754)
!5774 = !DILocation(line: 1404, column: 3, scope: !5754)
!5775 = !DILocation(line: 1406, column: 10, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1406, column: 3)
!5777 = !DILocation(line: 1406, column: 8, scope: !5776)
!5778 = !DILocation(line: 1406, column: 15, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 1406, column: 3)
!5780 = !DILocation(line: 1406, column: 19, scope: !5779)
!5781 = !DILocation(line: 1406, column: 17, scope: !5779)
!5782 = !DILocation(line: 1406, column: 3, scope: !5776)
!5783 = !DILocation(line: 1407, column: 8, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 1407, column: 8)
!5785 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1406, column: 33)
!5786 = !DILocation(line: 1407, column: 13, scope: !5784)
!5787 = !DILocation(line: 1407, column: 16, scope: !5784)
!5788 = !DILocation(line: 1407, column: 8, scope: !5785)
!5789 = !DILocation(line: 1408, column: 17, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 1407, column: 31)
!5791 = !DILocation(line: 1408, column: 25, scope: !5790)
!5792 = !DILocation(line: 1408, column: 30, scope: !5790)
!5793 = !DILocation(line: 1408, column: 33, scope: !5790)
!5794 = !DILocation(line: 1408, column: 50, scope: !5790)
!5795 = !DILocation(line: 1408, column: 55, scope: !5790)
!5796 = !DILocation(line: 1408, column: 65, scope: !5790)
!5797 = !DILocation(line: 1408, column: 70, scope: !5790)
!5798 = !DILocation(line: 1408, column: 73, scope: !5790)
!5799 = !DILocation(line: 1408, column: 5, scope: !5790)
!5800 = !DILocation(line: 1409, column: 31, scope: !5790)
!5801 = !DILocation(line: 1409, column: 38, scope: !5790)
!5802 = !DILocation(line: 1409, column: 46, scope: !5790)
!5803 = !DILocation(line: 1409, column: 53, scope: !5790)
!5804 = !DILocation(line: 1409, column: 58, scope: !5790)
!5805 = !DILocation(line: 1409, column: 5, scope: !5790)
!5806 = !DILocation(line: 1410, column: 4, scope: !5790)
!5807 = !DILocation(line: 1412, column: 9, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 1412, column: 9)
!5809 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 1411, column: 9)
!5810 = !DILocation(line: 1412, column: 14, scope: !5808)
!5811 = !DILocation(line: 1412, column: 17, scope: !5808)
!5812 = !DILocation(line: 1412, column: 9, scope: !5809)
!5813 = !DILocation(line: 1413, column: 10, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1413, column: 10)
!5815 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1412, column: 23)
!5816 = !DILocation(line: 1413, column: 12, scope: !5814)
!5817 = !DILocation(line: 1413, column: 10, scope: !5815)
!5818 = !DILocation(line: 1414, column: 31, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 1413, column: 18)
!5820 = !DILocation(line: 1414, column: 16, scope: !5819)
!5821 = !DILocation(line: 1414, column: 14, scope: !5819)
!5822 = !DILocation(line: 1416, column: 7, scope: !5819)
!5823 = !DILocation(line: 1416, column: 14, scope: !5819)
!5824 = !DILocation(line: 1416, column: 19, scope: !5819)
!5825 = !DILocation(line: 1417, column: 6, scope: !5819)
!5826 = !DILocation(line: 1419, column: 14, scope: !5815)
!5827 = !DILocation(line: 1419, column: 22, scope: !5815)
!5828 = !DILocation(line: 1419, column: 27, scope: !5815)
!5829 = !DILocation(line: 1419, column: 30, scope: !5815)
!5830 = !DILocation(line: 1419, column: 6, scope: !5815)
!5831 = !DILocation(line: 1420, column: 11, scope: !5815)
!5832 = !DILocation(line: 1420, column: 18, scope: !5815)
!5833 = !DILocation(line: 1420, column: 26, scope: !5815)
!5834 = !DILocation(line: 1420, column: 9, scope: !5815)
!5835 = !DILocation(line: 1421, column: 6, scope: !5815)
!5836 = !DILocation(line: 1421, column: 10, scope: !5815)
!5837 = !DILocation(line: 1421, column: 19, scope: !5815)
!5838 = !DILocation(line: 1423, column: 32, scope: !5815)
!5839 = !DILocation(line: 1423, column: 37, scope: !5815)
!5840 = !DILocation(line: 1423, column: 42, scope: !5815)
!5841 = !DILocation(line: 1423, column: 6, scope: !5815)
!5842 = !DILocation(line: 1424, column: 5, scope: !5815)
!5843 = !DILocation(line: 1426, column: 14, scope: !5808)
!5844 = !DILocation(line: 1426, column: 6, scope: !5808)
!5845 = !DILocation(line: 1428, column: 3, scope: !5785)
!5846 = !DILocation(line: 1406, column: 29, scope: !5779)
!5847 = !DILocation(line: 1406, column: 3, scope: !5779)
!5848 = distinct !{!5848, !5782, !5849}
!5849 = !DILocation(line: 1428, column: 3, scope: !5776)
!5850 = !DILocation(line: 1430, column: 7, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1430, column: 7)
!5852 = !DILocation(line: 1430, column: 7, scope: !5754)
!5853 = !DILocation(line: 1431, column: 4, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1430, column: 13)
!5855 = !DILocation(line: 1431, column: 14, scope: !5854)
!5856 = !DILocation(line: 1432, column: 3, scope: !5854)
!5857 = !DILocation(line: 1434, column: 1, scope: !5714)
!5858 = distinct !DISubprogram(name: "search_id_collection", scope: !3, file: !3, line: 1527, type: !5859, scopeLine: 1528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{null, !1251, !2343, !2344}
!5861 = !DILocalVariable(name: "ptype", arg: 1, scope: !5858, file: !3, line: 1527, type: !1251)
!5862 = !DILocation(line: 1527, column: 45, scope: !5858)
!5863 = !DILocalVariable(name: "ptr", arg: 2, scope: !5858, file: !3, line: 1527, type: !2343)
!5864 = !DILocation(line: 1527, column: 64, scope: !5858)
!5865 = !DILocalVariable(name: "prop", arg: 3, scope: !5858, file: !3, line: 1527, type: !2344)
!5866 = !DILocation(line: 1527, column: 83, scope: !5858)
!5867 = !DILocalVariable(name: "srna", scope: !5858, file: !3, line: 1529, type: !1251)
!5868 = !DILocation(line: 1529, column: 13, scope: !5858)
!5869 = !DILocation(line: 1532, column: 28, scope: !5858)
!5870 = !DILocation(line: 1532, column: 34, scope: !5858)
!5871 = !DILocation(line: 1532, column: 2, scope: !5858)
!5872 = !DILocation(line: 1534, column: 3, scope: !5858)
!5873 = !DILocation(line: 1534, column: 8, scope: !5858)
!5874 = !DILocalVariable(name: "rna_macro_iter", scope: !5875, file: !3, line: 1536, type: !5876)
!5875 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1536, column: 2)
!5876 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyIterator", file: !958, line: 279, baseType: !5877)
!5877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyIterator", file: !958, line: 264, size: 1088, elements: !5878)
!5878 = !{!5879, !5880, !5881, !5882, !5912, !5913, !5914, !5915}
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5877, file: !958, line: 266, baseType: !2307, size: 192)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "builtin_parent", scope: !5877, file: !958, line: 267, baseType: !2307, size: 192, offset: 192)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !5877, file: !958, line: 268, baseType: !2263, size: 64, offset: 384)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !5877, file: !958, line: 272, baseType: !5883, size: 320, offset: 448)
!5883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5877, file: !958, line: 269, size: 320, elements: !5884)
!5884 = !{!5885, !5900}
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !5883, file: !958, line: 270, baseType: !5886, size: 320)
!5886 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrayIterator", file: !958, line: 262, baseType: !5887)
!5887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayIterator", file: !958, line: 249, size: 320, elements: !5888)
!5888 = !{!5889, !5890, !5891, !5892, !5893, !5894}
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5887, file: !958, line: 250, baseType: !1855, size: 64)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "endptr", scope: !5887, file: !958, line: 251, baseType: !1855, size: 64, offset: 64)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "free_ptr", scope: !5887, file: !958, line: 252, baseType: !1112, size: 64, offset: 128)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !5887, file: !958, line: 253, baseType: !1100, size: 32, offset: 192)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5887, file: !958, line: 257, baseType: !1100, size: 32, offset: 224)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !5887, file: !958, line: 261, baseType: !5895, size: 64, offset: 256)
!5895 = !DIDerivedType(tag: DW_TAG_typedef, name: "IteratorSkipFunc", file: !958, line: 241, baseType: !5896)
!5896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5897, size: 64)
!5897 = !DISubroutineType(types: !5898)
!5898 = !{!1100, !5899, !1112}
!5899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5877, size: 64)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "listbase", scope: !5883, file: !958, line: 271, baseType: !5901, size: 192)
!5901 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBaseIterator", file: !958, line: 247, baseType: !5902)
!5902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBaseIterator", file: !958, line: 243, size: 192, elements: !5903)
!5903 = !{!5904, !5910, !5911}
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5902, file: !958, line: 244, baseType: !5905, size: 64)
!5905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5906, size: 64)
!5906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !1205, line: 57, size: 128, elements: !5907)
!5907 = !{!5908, !5909}
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5906, file: !1205, line: 58, baseType: !5905, size: 64)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5906, file: !1205, line: 58, baseType: !5905, size: 64, offset: 64)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5902, file: !958, line: 245, baseType: !1100, size: 32, offset: 64)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !5902, file: !958, line: 246, baseType: !5895, size: 64, offset: 128)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "idprop", scope: !5877, file: !958, line: 273, baseType: !1100, size: 32, offset: 768)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5877, file: !958, line: 274, baseType: !1100, size: 32, offset: 800)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5877, file: !958, line: 277, baseType: !2307, size: 192, offset: 832)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !5877, file: !958, line: 278, baseType: !1100, size: 32, offset: 1024)
!5916 = !DILocation(line: 1536, column: 2, scope: !5875)
!5917 = !DILocation(line: 1536, column: 2, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 1536, column: 2)
!5919 = !DILocation(line: 1536, column: 2, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 1536, column: 2)
!5921 = !DILocalVariable(name: "iprop", scope: !5922, file: !3, line: 1536, type: !1946)
!5922 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1536, column: 2)
!5923 = !DILocation(line: 1536, column: 2, scope: !5922)
!5924 = !DILocation(line: 1539, column: 25, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 1539, column: 7)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 1537, column: 2)
!5927 = !DILocation(line: 1539, column: 7, scope: !5925)
!5928 = !DILocation(line: 1539, column: 32, scope: !5925)
!5929 = !DILocation(line: 1539, column: 7, scope: !5926)
!5930 = !DILocation(line: 1540, column: 37, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1539, column: 52)
!5932 = !DILocation(line: 1540, column: 42, scope: !5931)
!5933 = !DILocation(line: 1540, column: 11, scope: !5931)
!5934 = !DILocation(line: 1540, column: 9, scope: !5931)
!5935 = !DILocation(line: 1542, column: 8, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 1542, column: 8)
!5937 = !DILocation(line: 1542, column: 17, scope: !5936)
!5938 = !DILocation(line: 1542, column: 14, scope: !5936)
!5939 = !DILocation(line: 1542, column: 8, scope: !5931)
!5940 = !DILocation(line: 1543, column: 13, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 1542, column: 23)
!5942 = !DILocation(line: 1543, column: 6, scope: !5941)
!5943 = !DILocation(line: 1543, column: 11, scope: !5941)
!5944 = !DILocation(line: 1544, column: 5, scope: !5941)
!5945 = !DILocation(line: 1546, column: 3, scope: !5931)
!5946 = !DILocation(line: 1548, column: 2, scope: !5922)
!5947 = distinct !{!5947, !5917, !5948}
!5948 = !DILocation(line: 1548, column: 2, scope: !5918)
!5949 = !DILocation(line: 1548, column: 2, scope: !5875)
!5950 = !DILocation(line: 1549, column: 1, scope: !5858)
!5951 = distinct !DISubprogram(name: "rna_search_cb", scope: !3, file: !3, line: 1456, type: !2212, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!5952 = !DILocalVariable(name: "C", arg: 1, scope: !5951, file: !3, line: 1456, type: !1238)
!5953 = !DILocation(line: 1456, column: 50, scope: !5951)
!5954 = !DILocalVariable(name: "arg_but", arg: 2, scope: !5951, file: !3, line: 1456, type: !1112)
!5955 = !DILocation(line: 1456, column: 59, scope: !5951)
!5956 = !DILocalVariable(name: "str", arg: 3, scope: !5951, file: !3, line: 1456, type: !1380)
!5957 = !DILocation(line: 1456, column: 80, scope: !5951)
!5958 = !DILocalVariable(name: "items", arg: 4, scope: !5951, file: !3, line: 1456, type: !2214)
!5959 = !DILocation(line: 1456, column: 100, scope: !5951)
!5960 = !DILocalVariable(name: "but", scope: !5951, file: !3, line: 1458, type: !2159)
!5961 = !DILocation(line: 1458, column: 9, scope: !5951)
!5962 = !DILocation(line: 1458, column: 15, scope: !5951)
!5963 = !DILocalVariable(name: "name", scope: !5951, file: !3, line: 1459, type: !1855)
!5964 = !DILocation(line: 1459, column: 8, scope: !5951)
!5965 = !DILocalVariable(name: "i", scope: !5951, file: !3, line: 1460, type: !1100)
!5966 = !DILocation(line: 1460, column: 6, scope: !5951)
!5967 = !DILocalVariable(name: "iconid", scope: !5951, file: !3, line: 1460, type: !1100)
!5968 = !DILocation(line: 1460, column: 13, scope: !5951)
!5969 = !DILocalVariable(name: "flag", scope: !5951, file: !3, line: 1460, type: !1100)
!5970 = !DILocation(line: 1460, column: 25, scope: !5951)
!5971 = !DILocation(line: 1460, column: 50, scope: !5951)
!5972 = !DILocation(line: 1460, column: 55, scope: !5951)
!5973 = !DILocation(line: 1460, column: 32, scope: !5951)
!5974 = !DILocalVariable(name: "items_list", scope: !5951, file: !3, line: 1461, type: !2069)
!5975 = !DILocation(line: 1461, column: 12, scope: !5951)
!5976 = !DILocation(line: 1461, column: 25, scope: !5951)
!5977 = !DILocalVariable(name: "cis", scope: !5951, file: !3, line: 1462, type: !2289)
!5978 = !DILocation(line: 1462, column: 18, scope: !5951)
!5979 = !DILocalVariable(name: "skip_filter", scope: !5951, file: !3, line: 1463, type: !4695)
!5980 = !DILocation(line: 1463, column: 12, scope: !5951)
!5981 = !DILocation(line: 1463, column: 27, scope: !5951)
!5982 = !DILocation(line: 1463, column: 32, scope: !5951)
!5983 = !DILocation(line: 1463, column: 26, scope: !5951)
!5984 = !DILocalVariable(name: "rna_macro_iter", scope: !5985, file: !3, line: 1466, type: !5876)
!5985 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1466, column: 2)
!5986 = !DILocation(line: 1466, column: 2, scope: !5985)
!5987 = !DILocation(line: 1466, column: 2, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 1466, column: 2)
!5989 = !DILocation(line: 1466, column: 2, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 1466, column: 2)
!5991 = !DILocalVariable(name: "itemptr", scope: !5992, file: !3, line: 1466, type: !2307)
!5992 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 1466, column: 2)
!5993 = !DILocation(line: 1466, column: 2, scope: !5992)
!5994 = !DILocation(line: 1468, column: 7, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1468, column: 7)
!5996 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 1467, column: 2)
!5997 = !DILocation(line: 1468, column: 12, scope: !5995)
!5998 = !DILocation(line: 1468, column: 7, scope: !5996)
!5999 = !DILocation(line: 1469, column: 16, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 1469, column: 8)
!6001 = !DILocation(line: 1469, column: 24, scope: !6000)
!6002 = !DILocation(line: 1469, column: 29, scope: !6000)
!6003 = !DILocation(line: 1469, column: 37, scope: !6000)
!6004 = !DILocation(line: 1469, column: 40, scope: !6000)
!6005 = !DILocation(line: 1469, column: 21, scope: !6000)
!6006 = !DILocation(line: 1469, column: 8, scope: !5995)
!6007 = !DILocation(line: 1470, column: 5, scope: !6000)
!6008 = !DILocation(line: 1473, column: 25, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1473, column: 7)
!6010 = !DILocation(line: 1473, column: 30, scope: !6009)
!6011 = !DILocation(line: 1473, column: 7, scope: !6009)
!6012 = !DILocation(line: 1473, column: 39, scope: !6009)
!6013 = !DILocation(line: 1473, column: 7, scope: !5996)
!6014 = !DILocation(line: 1474, column: 35, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 1474, column: 8)
!6016 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 1473, column: 56)
!6017 = !DILocation(line: 1474, column: 40, scope: !6015)
!6018 = !DILocation(line: 1474, column: 49, scope: !6015)
!6019 = !DILocation(line: 1474, column: 54, scope: !6015)
!6020 = !DILocation(line: 1474, column: 8, scope: !6015)
!6021 = !DILocation(line: 1474, column: 73, scope: !6015)
!6022 = !DILocation(line: 1474, column: 8, scope: !6016)
!6023 = !DILocation(line: 1475, column: 5, scope: !6015)
!6024 = !DILocation(line: 1476, column: 3, scope: !6016)
!6025 = !DILocation(line: 1478, column: 15, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1478, column: 7)
!6027 = !DILocation(line: 1478, column: 7, scope: !6026)
!6028 = !DILocation(line: 1478, column: 20, scope: !6026)
!6029 = !DILocation(line: 1478, column: 48, scope: !6026)
!6030 = !DILocation(line: 1478, column: 23, scope: !6026)
!6031 = !DILocation(line: 1478, column: 7, scope: !5996)
!6032 = !DILocalVariable(name: "id", scope: !6033, file: !3, line: 1479, type: !1510)
!6033 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 1478, column: 55)
!6034 = !DILocation(line: 1479, column: 8, scope: !6033)
!6035 = !DILocation(line: 1479, column: 21, scope: !6033)
!6036 = !DILocation(line: 1479, column: 13, scope: !6033)
!6037 = !DILocalVariable(name: "name_ui", scope: !6033, file: !3, line: 1480, type: !1524)
!6038 = !DILocation(line: 1480, column: 9, scope: !6033)
!6039 = !DILocation(line: 1486, column: 16, scope: !6033)
!6040 = !DILocation(line: 1486, column: 25, scope: !6033)
!6041 = !DILocation(line: 1486, column: 29, scope: !6033)
!6042 = !DILocation(line: 1486, column: 34, scope: !6033)
!6043 = !DILocation(line: 1486, column: 4, scope: !6033)
!6044 = !DILocation(line: 1488, column: 22, scope: !6033)
!6045 = !DILocation(line: 1488, column: 11, scope: !6033)
!6046 = !DILocation(line: 1488, column: 9, scope: !6033)
!6047 = !DILocation(line: 1489, column: 40, scope: !6033)
!6048 = !DILocation(line: 1489, column: 43, scope: !6033)
!6049 = !DILocation(line: 1489, column: 13, scope: !6033)
!6050 = !DILocation(line: 1489, column: 11, scope: !6033)
!6051 = !DILocation(line: 1490, column: 3, scope: !6033)
!6052 = !DILocation(line: 1492, column: 11, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 1491, column: 8)
!6054 = !DILocation(line: 1492, column: 9, scope: !6053)
!6055 = !DILocation(line: 1493, column: 11, scope: !6053)
!6056 = !DILocation(line: 1496, column: 7, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 1496, column: 7)
!6058 = !DILocation(line: 1496, column: 7, scope: !5996)
!6059 = !DILocation(line: 1497, column: 8, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1497, column: 8)
!6061 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1496, column: 13)
!6062 = !DILocation(line: 1497, column: 20, scope: !6060)
!6063 = !DILocation(line: 1497, column: 38, scope: !6060)
!6064 = !DILocation(line: 1497, column: 44, scope: !6060)
!6065 = !DILocation(line: 1497, column: 23, scope: !6060)
!6066 = !DILocation(line: 1497, column: 8, scope: !6061)
!6067 = !DILocation(line: 1498, column: 11, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 1497, column: 50)
!6069 = !DILocation(line: 1498, column: 9, scope: !6068)
!6070 = !DILocation(line: 1499, column: 17, scope: !6068)
!6071 = !DILocation(line: 1499, column: 31, scope: !6068)
!6072 = !DILocation(line: 1499, column: 5, scope: !6068)
!6073 = !DILocation(line: 1499, column: 10, scope: !6068)
!6074 = !DILocation(line: 1499, column: 15, scope: !6068)
!6075 = !DILocation(line: 1500, column: 18, scope: !6068)
!6076 = !DILocation(line: 1500, column: 5, scope: !6068)
!6077 = !DILocation(line: 1500, column: 10, scope: !6068)
!6078 = !DILocation(line: 1500, column: 16, scope: !6068)
!6079 = !DILocation(line: 1501, column: 19, scope: !6068)
!6080 = !DILocation(line: 1501, column: 5, scope: !6068)
!6081 = !DILocation(line: 1501, column: 10, scope: !6068)
!6082 = !DILocation(line: 1501, column: 17, scope: !6068)
!6083 = !DILocation(line: 1502, column: 17, scope: !6068)
!6084 = !DILocation(line: 1502, column: 29, scope: !6068)
!6085 = !DILocation(line: 1502, column: 5, scope: !6068)
!6086 = !DILocation(line: 1503, column: 4, scope: !6068)
!6087 = !DILocation(line: 1504, column: 4, scope: !6061)
!6088 = !DILocation(line: 1504, column: 14, scope: !6061)
!6089 = !DILocation(line: 1505, column: 3, scope: !6061)
!6090 = !DILocation(line: 1507, column: 4, scope: !5996)
!6091 = !DILocation(line: 1509, column: 2, scope: !5992)
!6092 = distinct !{!6092, !5987, !6093}
!6093 = !DILocation(line: 1509, column: 2, scope: !5988)
!6094 = !DILocation(line: 1509, column: 2, scope: !5985)
!6095 = !DILocation(line: 1511, column: 15, scope: !5951)
!6096 = !DILocation(line: 1511, column: 2, scope: !5951)
!6097 = !DILocation(line: 1514, column: 13, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1514, column: 2)
!6099 = !DILocation(line: 1514, column: 25, scope: !6098)
!6100 = !DILocation(line: 1514, column: 11, scope: !6098)
!6101 = !DILocation(line: 1514, column: 7, scope: !6098)
!6102 = !DILocation(line: 1514, column: 32, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 1514, column: 2)
!6104 = !DILocation(line: 1514, column: 2, scope: !6098)
!6105 = !DILocation(line: 1515, column: 32, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 1515, column: 7)
!6107 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 1514, column: 54)
!6108 = !DILocation(line: 1515, column: 39, scope: !6106)
!6109 = !DILocation(line: 1515, column: 44, scope: !6106)
!6110 = !DILocation(line: 1515, column: 50, scope: !6106)
!6111 = !DILocation(line: 1515, column: 82, scope: !6106)
!6112 = !DILocation(line: 1515, column: 87, scope: !6106)
!6113 = !DILocation(line: 1515, column: 16, scope: !6106)
!6114 = !DILocation(line: 1515, column: 13, scope: !6106)
!6115 = !DILocation(line: 1515, column: 7, scope: !6107)
!6116 = !DILocation(line: 1516, column: 4, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 1515, column: 96)
!6118 = !DILocation(line: 1518, column: 2, scope: !6107)
!6119 = !DILocation(line: 1514, column: 43, scope: !6103)
!6120 = !DILocation(line: 1514, column: 48, scope: !6103)
!6121 = !DILocation(line: 1514, column: 41, scope: !6103)
!6122 = !DILocation(line: 1514, column: 2, scope: !6103)
!6123 = distinct !{!6123, !6104, !6124}
!6124 = !DILocation(line: 1518, column: 2, scope: !6098)
!6125 = !DILocation(line: 1520, column: 13, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 1520, column: 2)
!6127 = !DILocation(line: 1520, column: 25, scope: !6126)
!6128 = !DILocation(line: 1520, column: 11, scope: !6126)
!6129 = !DILocation(line: 1520, column: 7, scope: !6126)
!6130 = !DILocation(line: 1520, column: 32, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 1520, column: 2)
!6132 = !DILocation(line: 1520, column: 2, scope: !6126)
!6133 = !DILocation(line: 1521, column: 3, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1520, column: 54)
!6135 = !DILocation(line: 1521, column: 13, scope: !6134)
!6136 = !DILocation(line: 1521, column: 18, scope: !6134)
!6137 = !DILocation(line: 1522, column: 2, scope: !6134)
!6138 = !DILocation(line: 1520, column: 43, scope: !6131)
!6139 = !DILocation(line: 1520, column: 48, scope: !6131)
!6140 = !DILocation(line: 1520, column: 41, scope: !6131)
!6141 = !DILocation(line: 1520, column: 2, scope: !6131)
!6142 = distinct !{!6142, !6132, !6143}
!6143 = !DILocation(line: 1522, column: 2, scope: !6126)
!6144 = !DILocation(line: 1523, column: 16, scope: !5951)
!6145 = !DILocation(line: 1523, column: 2, scope: !5951)
!6146 = !DILocation(line: 1524, column: 2, scope: !5951)
!6147 = !DILocation(line: 1524, column: 12, scope: !5951)
!6148 = !DILocation(line: 1525, column: 1, scope: !5951)
!6149 = distinct !DISubprogram(name: "uiItemPointerR", scope: !3, file: !3, line: 1583, type: !6150, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6150 = !DISubroutineType(types: !6151)
!6151 = !{null, !1113, !1259, !1380, !1259, !1380, !1380, !1100}
!6152 = !DILocalVariable(name: "layout", arg: 1, scope: !6149, file: !3, line: 1583, type: !1113)
!6153 = !DILocation(line: 1583, column: 31, scope: !6149)
!6154 = !DILocalVariable(name: "ptr", arg: 2, scope: !6149, file: !3, line: 1583, type: !1259)
!6155 = !DILocation(line: 1583, column: 58, scope: !6149)
!6156 = !DILocalVariable(name: "propname", arg: 3, scope: !6149, file: !3, line: 1583, type: !1380)
!6157 = !DILocation(line: 1583, column: 75, scope: !6149)
!6158 = !DILocalVariable(name: "searchptr", arg: 4, scope: !6149, file: !3, line: 1583, type: !1259)
!6159 = !DILocation(line: 1583, column: 104, scope: !6149)
!6160 = !DILocalVariable(name: "searchpropname", arg: 5, scope: !6149, file: !3, line: 1583, type: !1380)
!6161 = !DILocation(line: 1583, column: 127, scope: !6149)
!6162 = !DILocalVariable(name: "name", arg: 6, scope: !6149, file: !3, line: 1583, type: !1380)
!6163 = !DILocation(line: 1583, column: 155, scope: !6149)
!6164 = !DILocalVariable(name: "icon", arg: 7, scope: !6149, file: !3, line: 1583, type: !1100)
!6165 = !DILocation(line: 1583, column: 165, scope: !6149)
!6166 = !DILocalVariable(name: "prop", scope: !6149, file: !3, line: 1585, type: !1946)
!6167 = !DILocation(line: 1585, column: 15, scope: !6149)
!6168 = !DILocalVariable(name: "searchprop", scope: !6149, file: !3, line: 1585, type: !1946)
!6169 = !DILocation(line: 1585, column: 22, scope: !6149)
!6170 = !DILocalVariable(name: "type", scope: !6149, file: !3, line: 1586, type: !3890)
!6171 = !DILocation(line: 1586, column: 15, scope: !6149)
!6172 = !DILocalVariable(name: "but", scope: !6149, file: !3, line: 1587, type: !2159)
!6173 = !DILocation(line: 1587, column: 9, scope: !6149)
!6174 = !DILocalVariable(name: "block", scope: !6149, file: !3, line: 1588, type: !1197)
!6175 = !DILocation(line: 1588, column: 11, scope: !6149)
!6176 = !DILocalVariable(name: "icontype", scope: !6149, file: !3, line: 1589, type: !1251)
!6177 = !DILocation(line: 1589, column: 13, scope: !6149)
!6178 = !DILocalVariable(name: "w", scope: !6149, file: !3, line: 1590, type: !1100)
!6179 = !DILocation(line: 1590, column: 6, scope: !6149)
!6180 = !DILocalVariable(name: "h", scope: !6149, file: !3, line: 1590, type: !1100)
!6181 = !DILocation(line: 1590, column: 9, scope: !6149)
!6182 = !DILocalVariable(name: "namestr", scope: !6149, file: !3, line: 1591, type: !1309)
!6183 = !DILocation(line: 1591, column: 7, scope: !6149)
!6184 = !DILocation(line: 1594, column: 34, scope: !6149)
!6185 = !DILocation(line: 1594, column: 39, scope: !6149)
!6186 = !DILocation(line: 1594, column: 9, scope: !6149)
!6187 = !DILocation(line: 1594, column: 7, scope: !6149)
!6188 = !DILocation(line: 1596, column: 7, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 1596, column: 6)
!6190 = !DILocation(line: 1596, column: 6, scope: !6149)
!6191 = !DILocation(line: 1597, column: 3, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 1596, column: 13)
!6193 = !DILocation(line: 1599, column: 3, scope: !6192)
!6194 = !DILocation(line: 1602, column: 27, scope: !6149)
!6195 = !DILocation(line: 1602, column: 9, scope: !6149)
!6196 = !DILocation(line: 1602, column: 7, scope: !6149)
!6197 = !DILocation(line: 1603, column: 7, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 1603, column: 6)
!6199 = !DILocation(line: 1603, column: 6, scope: !6149)
!6200 = !DILocation(line: 1604, column: 3, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1603, column: 57)
!6202 = !DILocation(line: 1605, column: 3, scope: !6201)
!6203 = !DILocation(line: 1608, column: 40, scope: !6149)
!6204 = !DILocation(line: 1608, column: 51, scope: !6149)
!6205 = !DILocation(line: 1608, column: 15, scope: !6149)
!6206 = !DILocation(line: 1608, column: 13, scope: !6149)
!6207 = !DILocation(line: 1611, column: 7, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 1611, column: 6)
!6209 = !DILocation(line: 1611, column: 6, scope: !6149)
!6210 = !DILocation(line: 1612, column: 3, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 1611, column: 19)
!6212 = !DILocation(line: 1614, column: 3, scope: !6211)
!6213 = !DILocation(line: 1616, column: 29, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 1616, column: 11)
!6215 = !DILocation(line: 1616, column: 11, scope: !6214)
!6216 = !DILocation(line: 1616, column: 41, scope: !6214)
!6217 = !DILocation(line: 1616, column: 11, scope: !6208)
!6218 = !DILocation(line: 1617, column: 3, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 1616, column: 61)
!6220 = !DILocation(line: 1619, column: 3, scope: !6219)
!6221 = !DILocation(line: 1623, column: 6, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 1623, column: 6)
!6223 = !DILocation(line: 1623, column: 11, scope: !6222)
!6224 = !DILocation(line: 1623, column: 6, scope: !6149)
!6225 = !DILocation(line: 1624, column: 7, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 1624, column: 7)
!6227 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 1623, column: 25)
!6228 = !DILocation(line: 1624, column: 12, scope: !6226)
!6229 = !DILocation(line: 1624, column: 7, scope: !6227)
!6230 = !DILocation(line: 1625, column: 41, scope: !6226)
!6231 = !DILocation(line: 1625, column: 46, scope: !6226)
!6232 = !DILocation(line: 1625, column: 15, scope: !6226)
!6233 = !DILocation(line: 1625, column: 13, scope: !6226)
!6234 = !DILocation(line: 1625, column: 4, scope: !6226)
!6235 = !DILocation(line: 1627, column: 41, scope: !6226)
!6236 = !DILocation(line: 1627, column: 52, scope: !6226)
!6237 = !DILocation(line: 1627, column: 15, scope: !6226)
!6238 = !DILocation(line: 1627, column: 13, scope: !6226)
!6239 = !DILocation(line: 1629, column: 29, scope: !6227)
!6240 = !DILocation(line: 1629, column: 10, scope: !6227)
!6241 = !DILocation(line: 1629, column: 8, scope: !6227)
!6242 = !DILocation(line: 1630, column: 2, scope: !6227)
!6243 = !DILocation(line: 1631, column: 7, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 1631, column: 6)
!6245 = !DILocation(line: 1631, column: 6, scope: !6149)
!6246 = !DILocation(line: 1632, column: 31, scope: !6244)
!6247 = !DILocation(line: 1632, column: 10, scope: !6244)
!6248 = !DILocation(line: 1632, column: 8, scope: !6244)
!6249 = !DILocation(line: 1632, column: 3, scope: !6244)
!6250 = !DILocation(line: 1634, column: 32, scope: !6149)
!6251 = !DILocation(line: 1634, column: 38, scope: !6149)
!6252 = !DILocation(line: 1634, column: 9, scope: !6149)
!6253 = !DILocation(line: 1634, column: 7, scope: !6149)
!6254 = !DILocation(line: 1637, column: 27, scope: !6149)
!6255 = !DILocation(line: 1637, column: 10, scope: !6149)
!6256 = !DILocation(line: 1637, column: 8, scope: !6149)
!6257 = !DILocation(line: 1639, column: 19, scope: !6149)
!6258 = !DILocation(line: 1639, column: 27, scope: !6149)
!6259 = !DILocation(line: 1639, column: 33, scope: !6149)
!6260 = !DILocation(line: 1639, column: 39, scope: !6149)
!6261 = !DILocation(line: 1639, column: 44, scope: !6149)
!6262 = !DILocation(line: 1639, column: 2, scope: !6149)
!6263 = !DILocation(line: 1640, column: 7, scope: !6149)
!6264 = !DILocation(line: 1640, column: 4, scope: !6149)
!6265 = !DILocation(line: 1641, column: 27, scope: !6149)
!6266 = !DILocation(line: 1641, column: 35, scope: !6149)
!6267 = !DILocation(line: 1641, column: 42, scope: !6149)
!6268 = !DILocation(line: 1641, column: 48, scope: !6149)
!6269 = !DILocation(line: 1641, column: 54, scope: !6149)
!6270 = !DILocation(line: 1641, column: 59, scope: !6149)
!6271 = !DILocation(line: 1641, column: 74, scope: !6149)
!6272 = !DILocation(line: 1641, column: 77, scope: !6149)
!6273 = !DILocation(line: 1641, column: 8, scope: !6149)
!6274 = !DILocation(line: 1641, column: 6, scope: !6149)
!6275 = !DILocation(line: 1643, column: 20, scope: !6149)
!6276 = !DILocation(line: 1643, column: 25, scope: !6149)
!6277 = !DILocation(line: 1643, column: 30, scope: !6149)
!6278 = !DILocation(line: 1643, column: 36, scope: !6149)
!6279 = !DILocation(line: 1643, column: 47, scope: !6149)
!6280 = !DILocation(line: 1643, column: 2, scope: !6149)
!6281 = !DILocation(line: 1644, column: 1, scope: !6149)
!6282 = distinct !DISubprogram(name: "uiLayoutGetBlock", scope: !3, file: !3, line: 3137, type: !6283, scopeLine: 3138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6283 = !DISubroutineType(types: !6284)
!6284 = !{!1197, !1113}
!6285 = !DILocalVariable(name: "layout", arg: 1, scope: !6282, file: !3, line: 3137, type: !1113)
!6286 = !DILocation(line: 3137, column: 37, scope: !6282)
!6287 = !DILocation(line: 3139, column: 9, scope: !6282)
!6288 = !DILocation(line: 3139, column: 17, scope: !6282)
!6289 = !DILocation(line: 3139, column: 23, scope: !6282)
!6290 = !DILocation(line: 3139, column: 2, scope: !6282)
!6291 = distinct !DISubprogram(name: "uiItemM", scope: !3, file: !3, line: 1723, type: !6292, scopeLine: 1724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{null, !1113, !2030, !1380, !1380, !1100}
!6294 = !DILocalVariable(name: "layout", arg: 1, scope: !6291, file: !3, line: 1723, type: !1113)
!6295 = !DILocation(line: 1723, column: 24, scope: !6291)
!6296 = !DILocalVariable(name: "UNUSED_C", arg: 2, scope: !6291, file: !3, line: 1723, type: !2030)
!6297 = !DILocation(line: 1723, column: 42, scope: !6291)
!6298 = !DILocalVariable(name: "menuname", arg: 3, scope: !6291, file: !3, line: 1723, type: !1380)
!6299 = !DILocation(line: 1723, column: 65, scope: !6291)
!6300 = !DILocalVariable(name: "name", arg: 4, scope: !6291, file: !3, line: 1723, type: !1380)
!6301 = !DILocation(line: 1723, column: 87, scope: !6291)
!6302 = !DILocalVariable(name: "icon", arg: 5, scope: !6291, file: !3, line: 1723, type: !1100)
!6303 = !DILocation(line: 1723, column: 97, scope: !6291)
!6304 = !DILocalVariable(name: "mt", scope: !6291, file: !3, line: 1725, type: !2032)
!6305 = !DILocation(line: 1725, column: 12, scope: !6291)
!6306 = !DILocation(line: 1727, column: 24, scope: !6291)
!6307 = !DILocation(line: 1727, column: 7, scope: !6291)
!6308 = !DILocation(line: 1727, column: 5, scope: !6291)
!6309 = !DILocation(line: 1729, column: 6, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1729, column: 6)
!6311 = !DILocation(line: 1729, column: 9, scope: !6310)
!6312 = !DILocation(line: 1729, column: 6, scope: !6291)
!6313 = !DILocation(line: 1730, column: 3, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 1729, column: 18)
!6315 = !DILocation(line: 1731, column: 3, scope: !6314)
!6316 = !DILocation(line: 1734, column: 7, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1734, column: 6)
!6318 = !DILocation(line: 1734, column: 6, scope: !6291)
!6319 = !DILocation(line: 1735, column: 10, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 1734, column: 13)
!6321 = !DILocation(line: 1735, column: 8, scope: !6320)
!6322 = !DILocation(line: 1736, column: 2, scope: !6320)
!6323 = !DILocation(line: 1738, column: 6, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1738, column: 6)
!6325 = !DILocation(line: 1738, column: 14, scope: !6324)
!6326 = !DILocation(line: 1738, column: 20, scope: !6324)
!6327 = !DILocation(line: 1738, column: 25, scope: !6324)
!6328 = !DILocation(line: 1738, column: 43, scope: !6324)
!6329 = !DILocation(line: 1738, column: 47, scope: !6324)
!6330 = !DILocation(line: 1738, column: 6, scope: !6291)
!6331 = !DILocation(line: 1739, column: 8, scope: !6324)
!6332 = !DILocation(line: 1739, column: 3, scope: !6324)
!6333 = !DILocation(line: 1741, column: 15, scope: !6291)
!6334 = !DILocation(line: 1741, column: 23, scope: !6291)
!6335 = !DILocation(line: 1741, column: 29, scope: !6291)
!6336 = !DILocation(line: 1741, column: 58, scope: !6291)
!6337 = !DILocation(line: 1741, column: 68, scope: !6291)
!6338 = !DILocation(line: 1741, column: 2, scope: !6291)
!6339 = !DILocation(line: 1742, column: 1, scope: !6291)
!6340 = distinct !DISubprogram(name: "ui_item_menu", scope: !3, file: !3, line: 1668, type: !6341, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!2159, !1113, !1380, !1100, !2257, !1112, !1112, !1380, !1413}
!6343 = !DILocalVariable(name: "layout", arg: 1, scope: !6340, file: !3, line: 1668, type: !1113)
!6344 = !DILocation(line: 1668, column: 38, scope: !6340)
!6345 = !DILocalVariable(name: "name", arg: 2, scope: !6340, file: !3, line: 1668, type: !1380)
!6346 = !DILocation(line: 1668, column: 58, scope: !6340)
!6347 = !DILocalVariable(name: "icon", arg: 3, scope: !6340, file: !3, line: 1668, type: !1100)
!6348 = !DILocation(line: 1668, column: 68, scope: !6340)
!6349 = !DILocalVariable(name: "func", arg: 4, scope: !6340, file: !3, line: 1668, type: !2257)
!6350 = !DILocation(line: 1668, column: 91, scope: !6340)
!6351 = !DILocalVariable(name: "arg", arg: 5, scope: !6340, file: !3, line: 1668, type: !1112)
!6352 = !DILocation(line: 1668, column: 103, scope: !6340)
!6353 = !DILocalVariable(name: "argN", arg: 6, scope: !6340, file: !3, line: 1668, type: !1112)
!6354 = !DILocation(line: 1668, column: 114, scope: !6340)
!6355 = !DILocalVariable(name: "tip", arg: 7, scope: !6340, file: !3, line: 1669, type: !1380)
!6356 = !DILocation(line: 1669, column: 40, scope: !6340)
!6357 = !DILocalVariable(name: "force_menu", arg: 8, scope: !6340, file: !3, line: 1669, type: !1413)
!6358 = !DILocation(line: 1669, column: 50, scope: !6340)
!6359 = !DILocalVariable(name: "block", scope: !6340, file: !3, line: 1671, type: !1197)
!6360 = !DILocation(line: 1671, column: 11, scope: !6340)
!6361 = !DILocation(line: 1671, column: 19, scope: !6340)
!6362 = !DILocation(line: 1671, column: 27, scope: !6340)
!6363 = !DILocation(line: 1671, column: 33, scope: !6340)
!6364 = !DILocalVariable(name: "but", scope: !6340, file: !3, line: 1672, type: !2159)
!6365 = !DILocation(line: 1672, column: 9, scope: !6340)
!6366 = !DILocalVariable(name: "w", scope: !6340, file: !3, line: 1673, type: !1100)
!6367 = !DILocation(line: 1673, column: 6, scope: !6340)
!6368 = !DILocalVariable(name: "h", scope: !6340, file: !3, line: 1673, type: !1100)
!6369 = !DILocation(line: 1673, column: 9, scope: !6340)
!6370 = !DILocation(line: 1675, column: 22, scope: !6340)
!6371 = !DILocation(line: 1675, column: 29, scope: !6340)
!6372 = !DILocation(line: 1675, column: 2, scope: !6340)
!6373 = !DILocation(line: 1677, column: 6, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1677, column: 6)
!6375 = !DILocation(line: 1677, column: 14, scope: !6374)
!6376 = !DILocation(line: 1677, column: 20, scope: !6374)
!6377 = !DILocation(line: 1677, column: 25, scope: !6374)
!6378 = !DILocation(line: 1677, column: 6, scope: !6340)
!6379 = !DILocation(line: 1678, column: 20, scope: !6374)
!6380 = !DILocation(line: 1678, column: 3, scope: !6374)
!6381 = !DILocation(line: 1680, column: 7, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1680, column: 6)
!6383 = !DILocation(line: 1680, column: 6, scope: !6340)
!6384 = !DILocation(line: 1681, column: 8, scope: !6382)
!6385 = !DILocation(line: 1681, column: 3, scope: !6382)
!6386 = !DILocation(line: 1682, column: 6, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1682, column: 6)
!6388 = !DILocation(line: 1682, column: 14, scope: !6387)
!6389 = !DILocation(line: 1682, column: 20, scope: !6387)
!6390 = !DILocation(line: 1682, column: 25, scope: !6387)
!6391 = !DILocation(line: 1682, column: 43, scope: !6387)
!6392 = !DILocation(line: 1682, column: 47, scope: !6387)
!6393 = !DILocation(line: 1682, column: 6, scope: !6340)
!6394 = !DILocation(line: 1683, column: 8, scope: !6387)
!6395 = !DILocation(line: 1683, column: 3, scope: !6387)
!6396 = !DILocation(line: 1685, column: 25, scope: !6340)
!6397 = !DILocation(line: 1685, column: 33, scope: !6340)
!6398 = !DILocation(line: 1685, column: 39, scope: !6340)
!6399 = !DILocation(line: 1685, column: 6, scope: !6340)
!6400 = !DILocation(line: 1685, column: 4, scope: !6340)
!6401 = !DILocation(line: 1686, column: 6, scope: !6340)
!6402 = !DILocation(line: 1686, column: 4, scope: !6340)
!6403 = !DILocation(line: 1688, column: 6, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1688, column: 6)
!6405 = !DILocation(line: 1688, column: 14, scope: !6404)
!6406 = !DILocation(line: 1688, column: 20, scope: !6404)
!6407 = !DILocation(line: 1688, column: 25, scope: !6404)
!6408 = !DILocation(line: 1688, column: 6, scope: !6340)
!6409 = !DILocation(line: 1689, column: 7, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1689, column: 7)
!6411 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 1688, column: 46)
!6412 = !DILocation(line: 1689, column: 7, scope: !6411)
!6413 = !DILocation(line: 1690, column: 9, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1689, column: 19)
!6415 = !DILocation(line: 1690, column: 6, scope: !6414)
!6416 = !DILocation(line: 1691, column: 3, scope: !6414)
!6417 = !DILocation(line: 1693, column: 8, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 1693, column: 8)
!6419 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1692, column: 8)
!6420 = !DILocation(line: 1693, column: 8, scope: !6419)
!6421 = !DILocation(line: 1694, column: 10, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 1693, column: 17)
!6423 = !DILocation(line: 1694, column: 20, scope: !6422)
!6424 = !DILocation(line: 1694, column: 7, scope: !6422)
!6425 = !DILocation(line: 1695, column: 4, scope: !6422)
!6426 = !DILocation(line: 1697, column: 2, scope: !6411)
!6427 = !DILocation(line: 1699, column: 6, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1699, column: 6)
!6429 = !DILocation(line: 1699, column: 14, scope: !6428)
!6430 = !DILocation(line: 1699, column: 17, scope: !6428)
!6431 = !DILocation(line: 1699, column: 6, scope: !6340)
!6432 = !DILocation(line: 1700, column: 30, scope: !6428)
!6433 = !DILocation(line: 1700, column: 37, scope: !6428)
!6434 = !DILocation(line: 1700, column: 43, scope: !6428)
!6435 = !DILocation(line: 1700, column: 48, scope: !6428)
!6436 = !DILocation(line: 1700, column: 54, scope: !6428)
!6437 = !DILocation(line: 1700, column: 66, scope: !6428)
!6438 = !DILocation(line: 1700, column: 69, scope: !6428)
!6439 = !DILocation(line: 1700, column: 72, scope: !6428)
!6440 = !DILocation(line: 1700, column: 9, scope: !6428)
!6441 = !DILocation(line: 1700, column: 7, scope: !6428)
!6442 = !DILocation(line: 1700, column: 3, scope: !6428)
!6443 = !DILocation(line: 1701, column: 11, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 1701, column: 11)
!6445 = !DILocation(line: 1701, column: 11, scope: !6428)
!6446 = !DILocation(line: 1702, column: 26, scope: !6444)
!6447 = !DILocation(line: 1702, column: 33, scope: !6444)
!6448 = !DILocation(line: 1702, column: 39, scope: !6444)
!6449 = !DILocation(line: 1702, column: 44, scope: !6444)
!6450 = !DILocation(line: 1702, column: 56, scope: !6444)
!6451 = !DILocation(line: 1702, column: 59, scope: !6444)
!6452 = !DILocation(line: 1702, column: 62, scope: !6444)
!6453 = !DILocation(line: 1702, column: 9, scope: !6444)
!6454 = !DILocation(line: 1702, column: 7, scope: !6444)
!6455 = !DILocation(line: 1702, column: 3, scope: !6444)
!6456 = !DILocation(line: 1704, column: 22, scope: !6444)
!6457 = !DILocation(line: 1704, column: 29, scope: !6444)
!6458 = !DILocation(line: 1704, column: 35, scope: !6444)
!6459 = !DILocation(line: 1704, column: 40, scope: !6444)
!6460 = !DILocation(line: 1704, column: 52, scope: !6444)
!6461 = !DILocation(line: 1704, column: 55, scope: !6444)
!6462 = !DILocation(line: 1704, column: 58, scope: !6444)
!6463 = !DILocation(line: 1704, column: 9, scope: !6444)
!6464 = !DILocation(line: 1704, column: 7, scope: !6444)
!6465 = !DILocation(line: 1706, column: 6, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1706, column: 6)
!6467 = !DILocation(line: 1706, column: 6, scope: !6340)
!6468 = !DILocation(line: 1707, column: 23, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 1706, column: 12)
!6470 = !DILocation(line: 1707, column: 15, scope: !6469)
!6471 = !DILocation(line: 1707, column: 3, scope: !6469)
!6472 = !DILocation(line: 1707, column: 8, scope: !6469)
!6473 = !DILocation(line: 1707, column: 13, scope: !6469)
!6474 = !DILocation(line: 1708, column: 20, scope: !6469)
!6475 = !DILocation(line: 1708, column: 3, scope: !6469)
!6476 = !DILocation(line: 1708, column: 8, scope: !6469)
!6477 = !DILocation(line: 1708, column: 18, scope: !6469)
!6478 = !DILocation(line: 1709, column: 2, scope: !6469)
!6479 = !DILocation(line: 1711, column: 6, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1711, column: 6)
!6481 = !DILocation(line: 1711, column: 14, scope: !6480)
!6482 = !DILocation(line: 1711, column: 20, scope: !6480)
!6483 = !DILocation(line: 1711, column: 25, scope: !6480)
!6484 = !DILocation(line: 1711, column: 6, scope: !6340)
!6485 = !DILocation(line: 1712, column: 20, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 1711, column: 46)
!6487 = !DILocation(line: 1712, column: 3, scope: !6486)
!6488 = !DILocation(line: 1713, column: 2, scope: !6486)
!6489 = !DILocation(line: 1714, column: 6, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1714, column: 6)
!6491 = !DILocation(line: 1714, column: 67, scope: !6490)
!6492 = !DILocation(line: 1715, column: 7, scope: !6490)
!6493 = !DILocation(line: 1715, column: 18, scope: !6490)
!6494 = !DILocation(line: 1715, column: 21, scope: !6490)
!6495 = !DILocation(line: 1715, column: 29, scope: !6490)
!6496 = !DILocation(line: 1715, column: 35, scope: !6490)
!6497 = !DILocation(line: 1715, column: 40, scope: !6490)
!6498 = !DILocation(line: 1714, column: 6, scope: !6340)
!6499 = !DILocation(line: 1717, column: 28, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 1716, column: 2)
!6501 = !DILocation(line: 1717, column: 3, scope: !6500)
!6502 = !DILocation(line: 1718, column: 2, scope: !6500)
!6503 = !DILocation(line: 1720, column: 9, scope: !6340)
!6504 = !DILocation(line: 1720, column: 2, scope: !6340)
!6505 = distinct !DISubprogram(name: "ui_item_menutype_func", scope: !3, file: !3, line: 1647, type: !6506, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6506 = !DISubroutineType(types: !6507)
!6507 = !{null, !2030, !1113, !1112}
!6508 = !DILocalVariable(name: "C", arg: 1, scope: !6505, file: !3, line: 1647, type: !2030)
!6509 = !DILocation(line: 1647, column: 45, scope: !6505)
!6510 = !DILocalVariable(name: "layout", arg: 2, scope: !6505, file: !3, line: 1647, type: !1113)
!6511 = !DILocation(line: 1647, column: 58, scope: !6505)
!6512 = !DILocalVariable(name: "arg_mt", arg: 3, scope: !6505, file: !3, line: 1647, type: !1112)
!6513 = !DILocation(line: 1647, column: 72, scope: !6505)
!6514 = !DILocalVariable(name: "mt", scope: !6505, file: !3, line: 1649, type: !2032)
!6515 = !DILocation(line: 1649, column: 12, scope: !6505)
!6516 = !DILocation(line: 1649, column: 29, scope: !6505)
!6517 = !DILocation(line: 1649, column: 17, scope: !6505)
!6518 = !DILocalVariable(name: "menu", scope: !6505, file: !3, line: 1650, type: !6519)
!6519 = !DIDerivedType(tag: DW_TAG_typedef, name: "Menu", file: !1222, line: 261, baseType: !2052)
!6520 = !DILocation(line: 1650, column: 7, scope: !6505)
!6521 = !DILocation(line: 1652, column: 14, scope: !6505)
!6522 = !DILocation(line: 1652, column: 7, scope: !6505)
!6523 = !DILocation(line: 1652, column: 12, scope: !6505)
!6524 = !DILocation(line: 1653, column: 16, scope: !6505)
!6525 = !DILocation(line: 1653, column: 7, scope: !6505)
!6526 = !DILocation(line: 1653, column: 14, scope: !6505)
!6527 = !DILocation(line: 1655, column: 8, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 1655, column: 6)
!6529 = !DILocation(line: 1655, column: 14, scope: !6528)
!6530 = !DILocation(line: 1655, column: 6, scope: !6505)
!6531 = !DILocation(line: 1656, column: 49, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1655, column: 28)
!6533 = !DILocation(line: 1656, column: 53, scope: !6532)
!6534 = !DILocation(line: 1656, column: 3, scope: !6532)
!6535 = !DILocation(line: 1657, column: 2, scope: !6532)
!6536 = !DILocation(line: 1659, column: 6, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 1659, column: 6)
!6538 = !DILocation(line: 1659, column: 14, scope: !6537)
!6539 = !DILocation(line: 1659, column: 6, scope: !6505)
!6540 = !DILocation(line: 1660, column: 17, scope: !6537)
!6541 = !DILocation(line: 1660, column: 20, scope: !6537)
!6542 = !DILocation(line: 1660, column: 28, scope: !6537)
!6543 = !DILocation(line: 1660, column: 3, scope: !6537)
!6544 = !DILocation(line: 1662, column: 2, scope: !6505)
!6545 = !DILocation(line: 1662, column: 6, scope: !6505)
!6546 = !DILocation(line: 1662, column: 11, scope: !6505)
!6547 = !DILocation(line: 1664, column: 6, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 1664, column: 6)
!6549 = !DILocation(line: 1664, column: 14, scope: !6548)
!6550 = !DILocation(line: 1664, column: 6, scope: !6505)
!6551 = !DILocation(line: 1665, column: 17, scope: !6548)
!6552 = !DILocation(line: 1665, column: 3, scope: !6548)
!6553 = !DILocation(line: 1666, column: 1, scope: !6505)
!6554 = distinct !DISubprogram(name: "uiItemL_", scope: !3, file: !3, line: 1745, type: !6555, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{!2159, !1113, !1380, !1100}
!6557 = !DILocalVariable(name: "layout", arg: 1, scope: !6554, file: !3, line: 1745, type: !1113)
!6558 = !DILocation(line: 1745, column: 34, scope: !6554)
!6559 = !DILocalVariable(name: "name", arg: 2, scope: !6554, file: !3, line: 1745, type: !1380)
!6560 = !DILocation(line: 1745, column: 54, scope: !6554)
!6561 = !DILocalVariable(name: "icon", arg: 3, scope: !6554, file: !3, line: 1745, type: !1100)
!6562 = !DILocation(line: 1745, column: 64, scope: !6554)
!6563 = !DILocalVariable(name: "block", scope: !6554, file: !3, line: 1747, type: !1197)
!6564 = !DILocation(line: 1747, column: 11, scope: !6554)
!6565 = !DILocation(line: 1747, column: 19, scope: !6554)
!6566 = !DILocation(line: 1747, column: 27, scope: !6554)
!6567 = !DILocation(line: 1747, column: 33, scope: !6554)
!6568 = !DILocalVariable(name: "but", scope: !6554, file: !3, line: 1748, type: !2159)
!6569 = !DILocation(line: 1748, column: 9, scope: !6554)
!6570 = !DILocalVariable(name: "w", scope: !6554, file: !3, line: 1749, type: !1100)
!6571 = !DILocation(line: 1749, column: 6, scope: !6554)
!6572 = !DILocation(line: 1751, column: 22, scope: !6554)
!6573 = !DILocation(line: 1751, column: 29, scope: !6554)
!6574 = !DILocation(line: 1751, column: 2, scope: !6554)
!6575 = !DILocation(line: 1753, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 1753, column: 6)
!6577 = !DILocation(line: 1753, column: 6, scope: !6554)
!6578 = !DILocation(line: 1754, column: 8, scope: !6576)
!6579 = !DILocation(line: 1754, column: 3, scope: !6576)
!6580 = !DILocation(line: 1755, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 1755, column: 6)
!6582 = !DILocation(line: 1755, column: 14, scope: !6581)
!6583 = !DILocation(line: 1755, column: 20, scope: !6581)
!6584 = !DILocation(line: 1755, column: 25, scope: !6581)
!6585 = !DILocation(line: 1755, column: 43, scope: !6581)
!6586 = !DILocation(line: 1755, column: 47, scope: !6581)
!6587 = !DILocation(line: 1755, column: 6, scope: !6554)
!6588 = !DILocation(line: 1756, column: 8, scope: !6581)
!6589 = !DILocation(line: 1756, column: 3, scope: !6581)
!6590 = !DILocation(line: 1758, column: 25, scope: !6554)
!6591 = !DILocation(line: 1758, column: 33, scope: !6554)
!6592 = !DILocation(line: 1758, column: 39, scope: !6554)
!6593 = !DILocation(line: 1758, column: 6, scope: !6554)
!6594 = !DILocation(line: 1758, column: 4, scope: !6554)
!6595 = !DILocation(line: 1760, column: 6, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 1760, column: 6)
!6597 = !DILocation(line: 1760, column: 11, scope: !6596)
!6598 = !DILocation(line: 1760, column: 14, scope: !6596)
!6599 = !DILocation(line: 1760, column: 6, scope: !6554)
!6600 = !DILocation(line: 1761, column: 26, scope: !6596)
!6601 = !DILocation(line: 1761, column: 43, scope: !6596)
!6602 = !DILocation(line: 1761, column: 49, scope: !6596)
!6603 = !DILocation(line: 1761, column: 61, scope: !6596)
!6604 = !DILocation(line: 1761, column: 64, scope: !6596)
!6605 = !DILocation(line: 1761, column: 9, scope: !6596)
!6606 = !DILocation(line: 1761, column: 7, scope: !6596)
!6607 = !DILocation(line: 1761, column: 3, scope: !6596)
!6608 = !DILocation(line: 1762, column: 11, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1762, column: 11)
!6610 = !DILocation(line: 1762, column: 11, scope: !6596)
!6611 = !DILocation(line: 1763, column: 22, scope: !6609)
!6612 = !DILocation(line: 1763, column: 39, scope: !6609)
!6613 = !DILocation(line: 1763, column: 51, scope: !6609)
!6614 = !DILocation(line: 1763, column: 54, scope: !6609)
!6615 = !DILocation(line: 1763, column: 9, scope: !6609)
!6616 = !DILocation(line: 1763, column: 7, scope: !6609)
!6617 = !DILocation(line: 1763, column: 3, scope: !6609)
!6618 = !DILocation(line: 1765, column: 18, scope: !6609)
!6619 = !DILocation(line: 1765, column: 35, scope: !6609)
!6620 = !DILocation(line: 1765, column: 47, scope: !6609)
!6621 = !DILocation(line: 1765, column: 50, scope: !6609)
!6622 = !DILocation(line: 1765, column: 9, scope: !6609)
!6623 = !DILocation(line: 1765, column: 7, scope: !6609)
!6624 = !DILocation(line: 1770, column: 27, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 1770, column: 6)
!6626 = !DILocation(line: 1770, column: 6, scope: !6625)
!6627 = !DILocation(line: 1770, column: 35, scope: !6625)
!6628 = !DILocation(line: 1770, column: 6, scope: !6554)
!6629 = !DILocation(line: 1771, column: 3, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1770, column: 61)
!6631 = !DILocation(line: 1771, column: 8, scope: !6630)
!6632 = !DILocation(line: 1771, column: 17, scope: !6630)
!6633 = !DILocation(line: 1772, column: 3, scope: !6630)
!6634 = !DILocation(line: 1772, column: 8, scope: !6630)
!6635 = !DILocation(line: 1772, column: 17, scope: !6630)
!6636 = !DILocation(line: 1773, column: 2, scope: !6630)
!6637 = !DILocation(line: 1776, column: 6, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 1776, column: 6)
!6639 = !DILocation(line: 1776, column: 13, scope: !6638)
!6640 = !DILocation(line: 1776, column: 18, scope: !6638)
!6641 = !DILocation(line: 1776, column: 6, scope: !6554)
!6642 = !DILocation(line: 1777, column: 3, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1776, column: 40)
!6644 = !DILocation(line: 1777, column: 8, scope: !6643)
!6645 = !DILocation(line: 1777, column: 13, scope: !6643)
!6646 = !DILocation(line: 1778, column: 2, scope: !6643)
!6647 = !DILocation(line: 1780, column: 9, scope: !6554)
!6648 = !DILocation(line: 1780, column: 2, scope: !6554)
!6649 = distinct !DISubprogram(name: "uiItemLDrag", scope: !3, file: !3, line: 1788, type: !6650, scopeLine: 1789, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6650 = !DISubroutineType(types: !6651)
!6651 = !{null, !1113, !2343, !1380, !1100}
!6652 = !DILocalVariable(name: "layout", arg: 1, scope: !6649, file: !3, line: 1788, type: !1113)
!6653 = !DILocation(line: 1788, column: 28, scope: !6649)
!6654 = !DILocalVariable(name: "ptr", arg: 2, scope: !6649, file: !3, line: 1788, type: !2343)
!6655 = !DILocation(line: 1788, column: 48, scope: !6649)
!6656 = !DILocalVariable(name: "name", arg: 3, scope: !6649, file: !3, line: 1788, type: !1380)
!6657 = !DILocation(line: 1788, column: 65, scope: !6649)
!6658 = !DILocalVariable(name: "icon", arg: 4, scope: !6649, file: !3, line: 1788, type: !1100)
!6659 = !DILocation(line: 1788, column: 75, scope: !6649)
!6660 = !DILocalVariable(name: "but", scope: !6649, file: !3, line: 1790, type: !2159)
!6661 = !DILocation(line: 1790, column: 9, scope: !6649)
!6662 = !DILocation(line: 1790, column: 24, scope: !6649)
!6663 = !DILocation(line: 1790, column: 32, scope: !6649)
!6664 = !DILocation(line: 1790, column: 38, scope: !6649)
!6665 = !DILocation(line: 1790, column: 15, scope: !6649)
!6666 = !DILocation(line: 1792, column: 6, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 1792, column: 6)
!6668 = !DILocation(line: 1792, column: 10, scope: !6667)
!6669 = !DILocation(line: 1792, column: 13, scope: !6667)
!6670 = !DILocation(line: 1792, column: 18, scope: !6667)
!6671 = !DILocation(line: 1792, column: 6, scope: !6649)
!6672 = !DILocation(line: 1793, column: 24, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 1793, column: 7)
!6674 = !DILocation(line: 1793, column: 29, scope: !6673)
!6675 = !DILocation(line: 1793, column: 7, scope: !6673)
!6676 = !DILocation(line: 1793, column: 7, scope: !6667)
!6677 = !DILocation(line: 1794, column: 19, scope: !6673)
!6678 = !DILocation(line: 1794, column: 24, scope: !6673)
!6679 = !DILocation(line: 1794, column: 29, scope: !6673)
!6680 = !DILocation(line: 1794, column: 32, scope: !6673)
!6681 = !DILocation(line: 1794, column: 4, scope: !6673)
!6682 = !DILocation(line: 1793, column: 33, scope: !6673)
!6683 = !DILocation(line: 1795, column: 1, scope: !6649)
!6684 = distinct !DISubprogram(name: "uiItemV", scope: !3, file: !3, line: 1799, type: !6685, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6685 = !DISubroutineType(types: !6686)
!6686 = !{null, !1113, !1380, !1100, !1100}
!6687 = !DILocalVariable(name: "layout", arg: 1, scope: !6684, file: !3, line: 1799, type: !1113)
!6688 = !DILocation(line: 1799, column: 24, scope: !6684)
!6689 = !DILocalVariable(name: "name", arg: 2, scope: !6684, file: !3, line: 1799, type: !1380)
!6690 = !DILocation(line: 1799, column: 44, scope: !6684)
!6691 = !DILocalVariable(name: "icon", arg: 3, scope: !6684, file: !3, line: 1799, type: !1100)
!6692 = !DILocation(line: 1799, column: 54, scope: !6684)
!6693 = !DILocalVariable(name: "argval", arg: 4, scope: !6684, file: !3, line: 1799, type: !1100)
!6694 = !DILocation(line: 1799, column: 64, scope: !6684)
!6695 = !DILocalVariable(name: "block", scope: !6684, file: !3, line: 1802, type: !1197)
!6696 = !DILocation(line: 1802, column: 11, scope: !6684)
!6697 = !DILocation(line: 1802, column: 19, scope: !6684)
!6698 = !DILocation(line: 1802, column: 27, scope: !6684)
!6699 = !DILocation(line: 1802, column: 33, scope: !6684)
!6700 = !DILocalVariable(name: "retvalue", scope: !6684, file: !3, line: 1803, type: !4313)
!6701 = !DILocation(line: 1803, column: 7, scope: !6684)
!6702 = !DILocation(line: 1803, column: 19, scope: !6684)
!6703 = !DILocation(line: 1803, column: 26, scope: !6684)
!6704 = !DILocation(line: 1803, column: 18, scope: !6684)
!6705 = !DILocation(line: 1803, column: 37, scope: !6684)
!6706 = !DILocation(line: 1803, column: 44, scope: !6684)
!6707 = !DILocation(line: 1803, column: 52, scope: !6684)
!6708 = !DILocalVariable(name: "w", scope: !6684, file: !3, line: 1804, type: !1100)
!6709 = !DILocation(line: 1804, column: 6, scope: !6684)
!6710 = !DILocation(line: 1806, column: 22, scope: !6684)
!6711 = !DILocation(line: 1806, column: 29, scope: !6684)
!6712 = !DILocation(line: 1806, column: 2, scope: !6684)
!6713 = !DILocation(line: 1808, column: 7, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 1808, column: 6)
!6715 = !DILocation(line: 1808, column: 6, scope: !6684)
!6716 = !DILocation(line: 1809, column: 8, scope: !6714)
!6717 = !DILocation(line: 1809, column: 3, scope: !6714)
!6718 = !DILocation(line: 1810, column: 6, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 1810, column: 6)
!6720 = !DILocation(line: 1810, column: 14, scope: !6719)
!6721 = !DILocation(line: 1810, column: 20, scope: !6719)
!6722 = !DILocation(line: 1810, column: 25, scope: !6719)
!6723 = !DILocation(line: 1810, column: 43, scope: !6719)
!6724 = !DILocation(line: 1810, column: 47, scope: !6719)
!6725 = !DILocation(line: 1810, column: 6, scope: !6684)
!6726 = !DILocation(line: 1811, column: 8, scope: !6719)
!6727 = !DILocation(line: 1811, column: 3, scope: !6719)
!6728 = !DILocation(line: 1813, column: 25, scope: !6684)
!6729 = !DILocation(line: 1813, column: 33, scope: !6684)
!6730 = !DILocation(line: 1813, column: 39, scope: !6684)
!6731 = !DILocation(line: 1813, column: 6, scope: !6684)
!6732 = !DILocation(line: 1813, column: 4, scope: !6684)
!6733 = !DILocation(line: 1815, column: 6, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 1815, column: 6)
!6735 = !DILocation(line: 1815, column: 11, scope: !6734)
!6736 = !DILocation(line: 1815, column: 14, scope: !6734)
!6737 = !DILocation(line: 1815, column: 6, scope: !6684)
!6738 = !DILocation(line: 1816, column: 21, scope: !6734)
!6739 = !DILocation(line: 1816, column: 33, scope: !6734)
!6740 = !DILocation(line: 1816, column: 41, scope: !6734)
!6741 = !DILocation(line: 1816, column: 47, scope: !6734)
!6742 = !DILocation(line: 1816, column: 59, scope: !6734)
!6743 = !DILocation(line: 1816, column: 62, scope: !6734)
!6744 = !DILocation(line: 1816, column: 73, scope: !6734)
!6745 = !DILocation(line: 1816, column: 3, scope: !6734)
!6746 = !DILocation(line: 1817, column: 11, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 1817, column: 11)
!6748 = !DILocation(line: 1817, column: 11, scope: !6734)
!6749 = !DILocation(line: 1818, column: 17, scope: !6747)
!6750 = !DILocation(line: 1818, column: 29, scope: !6747)
!6751 = !DILocation(line: 1818, column: 37, scope: !6747)
!6752 = !DILocation(line: 1818, column: 49, scope: !6747)
!6753 = !DILocation(line: 1818, column: 52, scope: !6747)
!6754 = !DILocation(line: 1818, column: 63, scope: !6747)
!6755 = !DILocation(line: 1818, column: 3, scope: !6747)
!6756 = !DILocation(line: 1820, column: 13, scope: !6747)
!6757 = !DILocation(line: 1820, column: 25, scope: !6747)
!6758 = !DILocation(line: 1820, column: 33, scope: !6747)
!6759 = !DILocation(line: 1820, column: 45, scope: !6747)
!6760 = !DILocation(line: 1820, column: 48, scope: !6747)
!6761 = !DILocation(line: 1820, column: 59, scope: !6747)
!6762 = !DILocation(line: 1820, column: 3, scope: !6747)
!6763 = !DILocation(line: 1821, column: 1, scope: !6684)
!6764 = distinct !DISubprogram(name: "uiItemMenuF", scope: !3, file: !3, line: 1835, type: !6765, scopeLine: 1836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6765 = !DISubroutineType(types: !6766)
!6766 = !{null, !1113, !1380, !1100, !2257, !1112}
!6767 = !DILocalVariable(name: "layout", arg: 1, scope: !6764, file: !3, line: 1835, type: !1113)
!6768 = !DILocation(line: 1835, column: 28, scope: !6764)
!6769 = !DILocalVariable(name: "name", arg: 2, scope: !6764, file: !3, line: 1835, type: !1380)
!6770 = !DILocation(line: 1835, column: 48, scope: !6764)
!6771 = !DILocalVariable(name: "icon", arg: 3, scope: !6764, file: !3, line: 1835, type: !1100)
!6772 = !DILocation(line: 1835, column: 58, scope: !6764)
!6773 = !DILocalVariable(name: "func", arg: 4, scope: !6764, file: !3, line: 1835, type: !2257)
!6774 = !DILocation(line: 1835, column: 81, scope: !6764)
!6775 = !DILocalVariable(name: "arg", arg: 5, scope: !6764, file: !3, line: 1835, type: !1112)
!6776 = !DILocation(line: 1835, column: 93, scope: !6764)
!6777 = !DILocation(line: 1837, column: 7, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 1837, column: 6)
!6779 = !DILocation(line: 1837, column: 6, scope: !6764)
!6780 = !DILocation(line: 1838, column: 3, scope: !6778)
!6781 = !DILocation(line: 1840, column: 15, scope: !6764)
!6782 = !DILocation(line: 1840, column: 23, scope: !6764)
!6783 = !DILocation(line: 1840, column: 29, scope: !6764)
!6784 = !DILocation(line: 1840, column: 35, scope: !6764)
!6785 = !DILocation(line: 1840, column: 41, scope: !6764)
!6786 = !DILocation(line: 1840, column: 2, scope: !6764)
!6787 = !DILocation(line: 1841, column: 1, scope: !6764)
!6788 = distinct !DISubprogram(name: "uiItemMenuEnumO", scope: !3, file: !3, line: 1863, type: !6789, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6789 = !DISubroutineType(types: !6790)
!6790 = !{null, !1113, !2030, !1380, !1380, !1380, !1100}
!6791 = !DILocalVariable(name: "layout", arg: 1, scope: !6788, file: !3, line: 1863, type: !1113)
!6792 = !DILocation(line: 1863, column: 32, scope: !6788)
!6793 = !DILocalVariable(name: "C", arg: 2, scope: !6788, file: !3, line: 1863, type: !2030)
!6794 = !DILocation(line: 1863, column: 50, scope: !6788)
!6795 = !DILocalVariable(name: "opname", arg: 3, scope: !6788, file: !3, line: 1863, type: !1380)
!6796 = !DILocation(line: 1863, column: 65, scope: !6788)
!6797 = !DILocalVariable(name: "propname", arg: 4, scope: !6788, file: !3, line: 1863, type: !1380)
!6798 = !DILocation(line: 1863, column: 85, scope: !6788)
!6799 = !DILocalVariable(name: "name", arg: 5, scope: !6788, file: !3, line: 1863, type: !1380)
!6800 = !DILocation(line: 1863, column: 107, scope: !6788)
!6801 = !DILocalVariable(name: "icon", arg: 6, scope: !6788, file: !3, line: 1863, type: !1100)
!6802 = !DILocation(line: 1863, column: 117, scope: !6788)
!6803 = !DILocalVariable(name: "ot", scope: !6788, file: !3, line: 1865, type: !2439)
!6804 = !DILocation(line: 1865, column: 18, scope: !6788)
!6805 = !DILocation(line: 1865, column: 44, scope: !6788)
!6806 = !DILocation(line: 1865, column: 23, scope: !6788)
!6807 = !DILocalVariable(name: "lvl", scope: !6788, file: !3, line: 1866, type: !2299)
!6808 = !DILocation(line: 1866, column: 17, scope: !6788)
!6809 = !DILocalVariable(name: "but", scope: !6788, file: !3, line: 1867, type: !2159)
!6810 = !DILocation(line: 1867, column: 9, scope: !6788)
!6811 = !DILocation(line: 1869, column: 2, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1869, column: 2)
!6813 = !DILocation(line: 1869, column: 2, scope: !6788)
!6814 = !DILocation(line: 1869, column: 2, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1869, column: 2)
!6816 = !DILocation(line: 1871, column: 7, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1871, column: 6)
!6818 = !DILocation(line: 1871, column: 11, scope: !6817)
!6819 = !DILocation(line: 1871, column: 6, scope: !6788)
!6820 = !DILocation(line: 1872, column: 20, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 1871, column: 17)
!6822 = !DILocation(line: 1872, column: 28, scope: !6821)
!6823 = !DILocation(line: 1872, column: 3, scope: !6821)
!6824 = !DILocation(line: 1873, column: 3, scope: !6821)
!6825 = !DILocation(line: 1874, column: 3, scope: !6821)
!6826 = !DILocation(line: 1877, column: 6, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1877, column: 6)
!6828 = !DILocation(line: 1877, column: 11, scope: !6827)
!6829 = !DILocation(line: 1877, column: 6, scope: !6788)
!6830 = !DILocation(line: 1878, column: 29, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 1877, column: 20)
!6832 = !DILocation(line: 1878, column: 33, scope: !6831)
!6833 = !DILocation(line: 1878, column: 10, scope: !6831)
!6834 = !DILocation(line: 1878, column: 8, scope: !6831)
!6835 = !DILocation(line: 1879, column: 2, scope: !6831)
!6836 = !DILocation(line: 1881, column: 6, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1881, column: 6)
!6838 = !DILocation(line: 1881, column: 14, scope: !6837)
!6839 = !DILocation(line: 1881, column: 20, scope: !6837)
!6840 = !DILocation(line: 1881, column: 25, scope: !6837)
!6841 = !DILocation(line: 1881, column: 43, scope: !6837)
!6842 = !DILocation(line: 1881, column: 47, scope: !6837)
!6843 = !DILocation(line: 1881, column: 6, scope: !6788)
!6844 = !DILocation(line: 1882, column: 8, scope: !6837)
!6845 = !DILocation(line: 1882, column: 3, scope: !6837)
!6846 = !DILocation(line: 1884, column: 8, scope: !6788)
!6847 = !DILocation(line: 1884, column: 6, scope: !6788)
!6848 = !DILocation(line: 1885, column: 14, scope: !6788)
!6849 = !DILocation(line: 1885, column: 19, scope: !6788)
!6850 = !DILocation(line: 1885, column: 27, scope: !6788)
!6851 = !DILocation(line: 1885, column: 2, scope: !6788)
!6852 = !DILocation(line: 1886, column: 14, scope: !6788)
!6853 = !DILocation(line: 1886, column: 19, scope: !6788)
!6854 = !DILocation(line: 1886, column: 29, scope: !6788)
!6855 = !DILocation(line: 1886, column: 2, scope: !6788)
!6856 = !DILocation(line: 1887, column: 19, scope: !6788)
!6857 = !DILocation(line: 1887, column: 27, scope: !6788)
!6858 = !DILocation(line: 1887, column: 33, scope: !6788)
!6859 = !DILocation(line: 1887, column: 2, scope: !6788)
!6860 = !DILocation(line: 1887, column: 7, scope: !6788)
!6861 = !DILocation(line: 1887, column: 17, scope: !6788)
!6862 = !DILocation(line: 1889, column: 21, scope: !6788)
!6863 = !DILocation(line: 1889, column: 29, scope: !6788)
!6864 = !DILocation(line: 1889, column: 35, scope: !6788)
!6865 = !DILocation(line: 1889, column: 75, scope: !6788)
!6866 = !DILocation(line: 1890, column: 47, scope: !6788)
!6867 = !DILocation(line: 1890, column: 51, scope: !6788)
!6868 = !DILocation(line: 1890, column: 21, scope: !6788)
!6869 = !DILocation(line: 1889, column: 8, scope: !6788)
!6870 = !DILocation(line: 1889, column: 6, scope: !6788)
!6871 = !DILocation(line: 1893, column: 7, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1893, column: 6)
!6873 = !DILocation(line: 1893, column: 15, scope: !6872)
!6874 = !DILocation(line: 1893, column: 21, scope: !6872)
!6875 = !DILocation(line: 1893, column: 28, scope: !6872)
!6876 = !DILocation(line: 1893, column: 33, scope: !6872)
!6877 = !DILocation(line: 1893, column: 50, scope: !6872)
!6878 = !DILocation(line: 1894, column: 7, scope: !6872)
!6879 = !DILocation(line: 1894, column: 11, scope: !6872)
!6880 = !DILocation(line: 1894, column: 16, scope: !6872)
!6881 = !DILocation(line: 1894, column: 19, scope: !6872)
!6882 = !DILocation(line: 1894, column: 23, scope: !6872)
!6883 = !DILocation(line: 1893, column: 6, scope: !6788)
!6884 = !DILocalVariable(name: "keybuf", scope: !6885, file: !3, line: 1896, type: !1309)
!6885 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1895, column: 2)
!6886 = !DILocation(line: 1896, column: 8, scope: !6885)
!6887 = !DILocation(line: 1897, column: 36, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 1897, column: 7)
!6889 = !DILocation(line: 1897, column: 39, scope: !6888)
!6890 = !DILocation(line: 1897, column: 43, scope: !6888)
!6891 = !DILocation(line: 1897, column: 51, scope: !6888)
!6892 = !DILocation(line: 1897, column: 59, scope: !6888)
!6893 = !DILocation(line: 1897, column: 65, scope: !6888)
!6894 = !DILocation(line: 1898, column: 36, scope: !6888)
!6895 = !DILocation(line: 1897, column: 7, scope: !6888)
!6896 = !DILocation(line: 1897, column: 7, scope: !6885)
!6897 = !DILocation(line: 1900, column: 24, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 1899, column: 3)
!6899 = !DILocation(line: 1900, column: 29, scope: !6898)
!6900 = !DILocation(line: 1900, column: 4, scope: !6898)
!6901 = !DILocation(line: 1901, column: 3, scope: !6898)
!6902 = !DILocation(line: 1902, column: 2, scope: !6885)
!6903 = !DILocation(line: 1903, column: 1, scope: !6788)
!6904 = distinct !DISubprogram(name: "menu_item_enum_opname_menu", scope: !3, file: !3, line: 1852, type: !6506, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6905 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !6904, file: !3, line: 1852, type: !2030)
!6906 = !DILocation(line: 1852, column: 50, scope: !6904)
!6907 = !DILocalVariable(name: "layout", arg: 2, scope: !6904, file: !3, line: 1852, type: !1113)
!6908 = !DILocation(line: 1852, column: 71, scope: !6904)
!6909 = !DILocalVariable(name: "arg", arg: 3, scope: !6904, file: !3, line: 1852, type: !1112)
!6910 = !DILocation(line: 1852, column: 85, scope: !6904)
!6911 = !DILocalVariable(name: "lvl", scope: !6904, file: !3, line: 1854, type: !2299)
!6912 = !DILocation(line: 1854, column: 17, scope: !6904)
!6913 = !DILocation(line: 1854, column: 51, scope: !6904)
!6914 = !DILocation(line: 1854, column: 42, scope: !6904)
!6915 = !DILocation(line: 1854, column: 57, scope: !6904)
!6916 = !DILocation(line: 1854, column: 23, scope: !6904)
!6917 = !DILocation(line: 1856, column: 29, scope: !6904)
!6918 = !DILocation(line: 1856, column: 37, scope: !6904)
!6919 = !DILocation(line: 1856, column: 42, scope: !6904)
!6920 = !DILocation(line: 1856, column: 2, scope: !6904)
!6921 = !DILocation(line: 1857, column: 15, scope: !6904)
!6922 = !DILocation(line: 1857, column: 23, scope: !6904)
!6923 = !DILocation(line: 1857, column: 28, scope: !6904)
!6924 = !DILocation(line: 1857, column: 36, scope: !6904)
!6925 = !DILocation(line: 1857, column: 41, scope: !6904)
!6926 = !DILocation(line: 1857, column: 2, scope: !6904)
!6927 = !DILocation(line: 1860, column: 22, scope: !6904)
!6928 = !DILocation(line: 1860, column: 30, scope: !6904)
!6929 = !DILocation(line: 1860, column: 36, scope: !6904)
!6930 = !DILocation(line: 1860, column: 2, scope: !6904)
!6931 = !DILocation(line: 1861, column: 1, scope: !6904)
!6932 = distinct !DISubprogram(name: "uiItemMenuEnumR", scope: !3, file: !3, line: 1913, type: !6933, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!6933 = !DISubroutineType(types: !6934)
!6934 = !{null, !1113, !1259, !1380, !1380, !1100}
!6935 = !DILocalVariable(name: "layout", arg: 1, scope: !6932, file: !3, line: 1913, type: !1113)
!6936 = !DILocation(line: 1913, column: 32, scope: !6932)
!6937 = !DILocalVariable(name: "ptr", arg: 2, scope: !6932, file: !3, line: 1913, type: !1259)
!6938 = !DILocation(line: 1913, column: 59, scope: !6932)
!6939 = !DILocalVariable(name: "propname", arg: 3, scope: !6932, file: !3, line: 1913, type: !1380)
!6940 = !DILocation(line: 1913, column: 76, scope: !6932)
!6941 = !DILocalVariable(name: "name", arg: 4, scope: !6932, file: !3, line: 1913, type: !1380)
!6942 = !DILocation(line: 1913, column: 98, scope: !6932)
!6943 = !DILocalVariable(name: "icon", arg: 5, scope: !6932, file: !3, line: 1913, type: !1100)
!6944 = !DILocation(line: 1913, column: 108, scope: !6932)
!6945 = !DILocalVariable(name: "lvl", scope: !6932, file: !3, line: 1915, type: !2299)
!6946 = !DILocation(line: 1915, column: 17, scope: !6932)
!6947 = !DILocalVariable(name: "prop", scope: !6932, file: !3, line: 1916, type: !1946)
!6948 = !DILocation(line: 1916, column: 15, scope: !6932)
!6949 = !DILocation(line: 1918, column: 34, scope: !6932)
!6950 = !DILocation(line: 1918, column: 39, scope: !6932)
!6951 = !DILocation(line: 1918, column: 9, scope: !6932)
!6952 = !DILocation(line: 1918, column: 7, scope: !6932)
!6953 = !DILocation(line: 1919, column: 7, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1919, column: 6)
!6955 = !DILocation(line: 1919, column: 6, scope: !6932)
!6956 = !DILocation(line: 1920, column: 20, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1919, column: 13)
!6958 = !DILocation(line: 1920, column: 28, scope: !6957)
!6959 = !DILocation(line: 1920, column: 3, scope: !6957)
!6960 = !DILocation(line: 1921, column: 3, scope: !6957)
!6961 = !DILocation(line: 1922, column: 3, scope: !6957)
!6962 = !DILocation(line: 1925, column: 7, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1925, column: 6)
!6964 = !DILocation(line: 1925, column: 6, scope: !6932)
!6965 = !DILocation(line: 1926, column: 31, scope: !6963)
!6966 = !DILocation(line: 1926, column: 10, scope: !6963)
!6967 = !DILocation(line: 1926, column: 8, scope: !6963)
!6968 = !DILocation(line: 1926, column: 3, scope: !6963)
!6969 = !DILocation(line: 1927, column: 6, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1927, column: 6)
!6971 = !DILocation(line: 1927, column: 14, scope: !6970)
!6972 = !DILocation(line: 1927, column: 20, scope: !6970)
!6973 = !DILocation(line: 1927, column: 25, scope: !6970)
!6974 = !DILocation(line: 1927, column: 43, scope: !6970)
!6975 = !DILocation(line: 1927, column: 47, scope: !6970)
!6976 = !DILocation(line: 1927, column: 6, scope: !6932)
!6977 = !DILocation(line: 1928, column: 8, scope: !6970)
!6978 = !DILocation(line: 1928, column: 3, scope: !6970)
!6979 = !DILocation(line: 1930, column: 8, scope: !6932)
!6980 = !DILocation(line: 1930, column: 6, scope: !6932)
!6981 = !DILocation(line: 1931, column: 2, scope: !6932)
!6982 = !DILocation(line: 1931, column: 7, scope: !6932)
!6983 = !DILocation(line: 1931, column: 18, scope: !6932)
!6984 = !DILocation(line: 1931, column: 17, scope: !6932)
!6985 = !DILocation(line: 1932, column: 14, scope: !6932)
!6986 = !DILocation(line: 1932, column: 19, scope: !6932)
!6987 = !DILocation(line: 1932, column: 29, scope: !6932)
!6988 = !DILocation(line: 1932, column: 2, scope: !6932)
!6989 = !DILocation(line: 1933, column: 19, scope: !6932)
!6990 = !DILocation(line: 1933, column: 27, scope: !6932)
!6991 = !DILocation(line: 1933, column: 33, scope: !6932)
!6992 = !DILocation(line: 1933, column: 2, scope: !6932)
!6993 = !DILocation(line: 1933, column: 7, scope: !6932)
!6994 = !DILocation(line: 1933, column: 17, scope: !6932)
!6995 = !DILocation(line: 1935, column: 15, scope: !6932)
!6996 = !DILocation(line: 1935, column: 23, scope: !6932)
!6997 = !DILocation(line: 1935, column: 29, scope: !6932)
!6998 = !DILocation(line: 1935, column: 66, scope: !6932)
!6999 = !DILocation(line: 1935, column: 96, scope: !6932)
!7000 = !DILocation(line: 1935, column: 71, scope: !6932)
!7001 = !DILocation(line: 1935, column: 2, scope: !6932)
!7002 = !DILocation(line: 1936, column: 1, scope: !6932)
!7003 = distinct !DISubprogram(name: "menu_item_enum_rna_menu", scope: !3, file: !3, line: 1905, type: !6506, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7004 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !7003, file: !3, line: 1905, type: !2030)
!7005 = !DILocation(line: 1905, column: 47, scope: !7003)
!7006 = !DILocalVariable(name: "layout", arg: 2, scope: !7003, file: !3, line: 1905, type: !1113)
!7007 = !DILocation(line: 1905, column: 68, scope: !7003)
!7008 = !DILocalVariable(name: "arg", arg: 3, scope: !7003, file: !3, line: 1905, type: !1112)
!7009 = !DILocation(line: 1905, column: 82, scope: !7003)
!7010 = !DILocalVariable(name: "lvl", scope: !7003, file: !3, line: 1907, type: !2299)
!7011 = !DILocation(line: 1907, column: 17, scope: !7003)
!7012 = !DILocation(line: 1907, column: 51, scope: !7003)
!7013 = !DILocation(line: 1907, column: 42, scope: !7003)
!7014 = !DILocation(line: 1907, column: 57, scope: !7003)
!7015 = !DILocation(line: 1907, column: 23, scope: !7003)
!7016 = !DILocation(line: 1909, column: 29, scope: !7003)
!7017 = !DILocation(line: 1909, column: 37, scope: !7003)
!7018 = !DILocation(line: 1909, column: 42, scope: !7003)
!7019 = !DILocation(line: 1909, column: 2, scope: !7003)
!7020 = !DILocation(line: 1910, column: 15, scope: !7003)
!7021 = !DILocation(line: 1910, column: 24, scope: !7003)
!7022 = !DILocation(line: 1910, column: 29, scope: !7003)
!7023 = !DILocation(line: 1910, column: 38, scope: !7003)
!7024 = !DILocation(line: 1910, column: 43, scope: !7003)
!7025 = !DILocation(line: 1910, column: 2, scope: !7003)
!7026 = !DILocation(line: 1911, column: 1, scope: !7003)
!7027 = distinct !DISubprogram(name: "uiLayoutRow", scope: !3, file: !3, line: 2574, type: !3356, scopeLine: 2575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7028 = !DILocalVariable(name: "layout", arg: 1, scope: !7027, file: !3, line: 2574, type: !1113)
!7029 = !DILocation(line: 2574, column: 33, scope: !7027)
!7030 = !DILocalVariable(name: "align", arg: 2, scope: !7027, file: !3, line: 2574, type: !1100)
!7031 = !DILocation(line: 2574, column: 45, scope: !7027)
!7032 = !DILocalVariable(name: "litem", scope: !7027, file: !3, line: 2576, type: !1113)
!7033 = !DILocation(line: 2576, column: 12, scope: !7027)
!7034 = !DILocation(line: 2578, column: 10, scope: !7027)
!7035 = !DILocation(line: 2578, column: 8, scope: !7027)
!7036 = !DILocation(line: 2579, column: 2, scope: !7027)
!7037 = !DILocation(line: 2579, column: 9, scope: !7027)
!7038 = !DILocation(line: 2579, column: 14, scope: !7027)
!7039 = !DILocation(line: 2579, column: 19, scope: !7027)
!7040 = !DILocation(line: 2580, column: 16, scope: !7027)
!7041 = !DILocation(line: 2580, column: 24, scope: !7027)
!7042 = !DILocation(line: 2580, column: 2, scope: !7027)
!7043 = !DILocation(line: 2580, column: 9, scope: !7027)
!7044 = !DILocation(line: 2580, column: 14, scope: !7027)
!7045 = !DILocation(line: 2581, column: 17, scope: !7027)
!7046 = !DILocation(line: 2581, column: 2, scope: !7027)
!7047 = !DILocation(line: 2581, column: 9, scope: !7027)
!7048 = !DILocation(line: 2581, column: 15, scope: !7027)
!7049 = !DILocation(line: 2582, column: 2, scope: !7027)
!7050 = !DILocation(line: 2582, column: 9, scope: !7027)
!7051 = !DILocation(line: 2582, column: 16, scope: !7027)
!7052 = !DILocation(line: 2583, column: 2, scope: !7027)
!7053 = !DILocation(line: 2583, column: 9, scope: !7027)
!7054 = !DILocation(line: 2583, column: 17, scope: !7027)
!7055 = !DILocation(line: 2584, column: 19, scope: !7027)
!7056 = !DILocation(line: 2584, column: 27, scope: !7027)
!7057 = !DILocation(line: 2584, column: 2, scope: !7027)
!7058 = !DILocation(line: 2584, column: 9, scope: !7027)
!7059 = !DILocation(line: 2584, column: 17, scope: !7027)
!7060 = !DILocation(line: 2585, column: 18, scope: !7027)
!7061 = !DILocation(line: 2585, column: 17, scope: !7027)
!7062 = !DILocation(line: 2585, column: 31, scope: !7027)
!7063 = !DILocation(line: 2585, column: 39, scope: !7027)
!7064 = !DILocation(line: 2585, column: 45, scope: !7027)
!7065 = !DILocation(line: 2585, column: 52, scope: !7027)
!7066 = !DILocation(line: 2585, column: 2, scope: !7027)
!7067 = !DILocation(line: 2585, column: 9, scope: !7027)
!7068 = !DILocation(line: 2585, column: 15, scope: !7027)
!7069 = !DILocation(line: 2586, column: 20, scope: !7027)
!7070 = !DILocation(line: 2586, column: 28, scope: !7027)
!7071 = !DILocation(line: 2586, column: 2, scope: !7027)
!7072 = !DILocation(line: 2586, column: 9, scope: !7027)
!7073 = !DILocation(line: 2586, column: 18, scope: !7027)
!7074 = !DILocation(line: 2587, column: 13, scope: !7027)
!7075 = !DILocation(line: 2587, column: 21, scope: !7027)
!7076 = !DILocation(line: 2587, column: 2, scope: !7027)
!7077 = !DILocation(line: 2587, column: 9, scope: !7027)
!7078 = !DILocation(line: 2587, column: 11, scope: !7027)
!7079 = !DILocation(line: 2588, column: 15, scope: !7027)
!7080 = !DILocation(line: 2588, column: 23, scope: !7027)
!7081 = !DILocation(line: 2588, column: 30, scope: !7027)
!7082 = !DILocation(line: 2588, column: 2, scope: !7027)
!7083 = !DILocation(line: 2590, column: 22, scope: !7027)
!7084 = !DILocation(line: 2590, column: 30, scope: !7027)
!7085 = !DILocation(line: 2590, column: 36, scope: !7027)
!7086 = !DILocation(line: 2590, column: 43, scope: !7027)
!7087 = !DILocation(line: 2590, column: 2, scope: !7027)
!7088 = !DILocation(line: 2592, column: 9, scope: !7027)
!7089 = !DILocation(line: 2592, column: 2, scope: !7027)
!7090 = distinct !DISubprogram(name: "uiLayoutColumnFlow", scope: !3, file: !3, line: 2616, type: !7091, scopeLine: 2617, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7091 = !DISubroutineType(types: !7092)
!7092 = !{!1113, !1113, !1100, !1100}
!7093 = !DILocalVariable(name: "layout", arg: 1, scope: !7090, file: !3, line: 2616, type: !1113)
!7094 = !DILocation(line: 2616, column: 40, scope: !7090)
!7095 = !DILocalVariable(name: "number", arg: 2, scope: !7090, file: !3, line: 2616, type: !1100)
!7096 = !DILocation(line: 2616, column: 52, scope: !7090)
!7097 = !DILocalVariable(name: "align", arg: 3, scope: !7090, file: !3, line: 2616, type: !1100)
!7098 = !DILocation(line: 2616, column: 64, scope: !7090)
!7099 = !DILocalVariable(name: "flow", scope: !7090, file: !3, line: 2618, type: !2314)
!7100 = !DILocation(line: 2618, column: 20, scope: !7090)
!7101 = !DILocation(line: 2620, column: 9, scope: !7090)
!7102 = !DILocation(line: 2620, column: 7, scope: !7090)
!7103 = !DILocation(line: 2621, column: 2, scope: !7090)
!7104 = !DILocation(line: 2621, column: 8, scope: !7090)
!7105 = !DILocation(line: 2621, column: 14, scope: !7090)
!7106 = !DILocation(line: 2621, column: 19, scope: !7090)
!7107 = !DILocation(line: 2621, column: 24, scope: !7090)
!7108 = !DILocation(line: 2622, column: 21, scope: !7090)
!7109 = !DILocation(line: 2622, column: 29, scope: !7090)
!7110 = !DILocation(line: 2622, column: 2, scope: !7090)
!7111 = !DILocation(line: 2622, column: 8, scope: !7090)
!7112 = !DILocation(line: 2622, column: 14, scope: !7090)
!7113 = !DILocation(line: 2622, column: 19, scope: !7090)
!7114 = !DILocation(line: 2623, column: 22, scope: !7090)
!7115 = !DILocation(line: 2623, column: 2, scope: !7090)
!7116 = !DILocation(line: 2623, column: 8, scope: !7090)
!7117 = !DILocation(line: 2623, column: 14, scope: !7090)
!7118 = !DILocation(line: 2623, column: 20, scope: !7090)
!7119 = !DILocation(line: 2624, column: 2, scope: !7090)
!7120 = !DILocation(line: 2624, column: 8, scope: !7090)
!7121 = !DILocation(line: 2624, column: 14, scope: !7090)
!7122 = !DILocation(line: 2624, column: 21, scope: !7090)
!7123 = !DILocation(line: 2625, column: 2, scope: !7090)
!7124 = !DILocation(line: 2625, column: 8, scope: !7090)
!7125 = !DILocation(line: 2625, column: 14, scope: !7090)
!7126 = !DILocation(line: 2625, column: 22, scope: !7090)
!7127 = !DILocation(line: 2626, column: 24, scope: !7090)
!7128 = !DILocation(line: 2626, column: 32, scope: !7090)
!7129 = !DILocation(line: 2626, column: 2, scope: !7090)
!7130 = !DILocation(line: 2626, column: 8, scope: !7090)
!7131 = !DILocation(line: 2626, column: 14, scope: !7090)
!7132 = !DILocation(line: 2626, column: 22, scope: !7090)
!7133 = !DILocation(line: 2627, column: 23, scope: !7090)
!7134 = !DILocation(line: 2627, column: 29, scope: !7090)
!7135 = !DILocation(line: 2627, column: 35, scope: !7090)
!7136 = !DILocation(line: 2627, column: 22, scope: !7090)
!7137 = !DILocation(line: 2627, column: 48, scope: !7090)
!7138 = !DILocation(line: 2627, column: 56, scope: !7090)
!7139 = !DILocation(line: 2627, column: 62, scope: !7090)
!7140 = !DILocation(line: 2627, column: 69, scope: !7090)
!7141 = !DILocation(line: 2627, column: 2, scope: !7090)
!7142 = !DILocation(line: 2627, column: 8, scope: !7090)
!7143 = !DILocation(line: 2627, column: 14, scope: !7090)
!7144 = !DILocation(line: 2627, column: 20, scope: !7090)
!7145 = !DILocation(line: 2628, column: 25, scope: !7090)
!7146 = !DILocation(line: 2628, column: 33, scope: !7090)
!7147 = !DILocation(line: 2628, column: 2, scope: !7090)
!7148 = !DILocation(line: 2628, column: 8, scope: !7090)
!7149 = !DILocation(line: 2628, column: 14, scope: !7090)
!7150 = !DILocation(line: 2628, column: 23, scope: !7090)
!7151 = !DILocation(line: 2629, column: 18, scope: !7090)
!7152 = !DILocation(line: 2629, column: 26, scope: !7090)
!7153 = !DILocation(line: 2629, column: 2, scope: !7090)
!7154 = !DILocation(line: 2629, column: 8, scope: !7090)
!7155 = !DILocation(line: 2629, column: 14, scope: !7090)
!7156 = !DILocation(line: 2629, column: 16, scope: !7090)
!7157 = !DILocation(line: 2630, column: 17, scope: !7090)
!7158 = !DILocation(line: 2630, column: 2, scope: !7090)
!7159 = !DILocation(line: 2630, column: 8, scope: !7090)
!7160 = !DILocation(line: 2630, column: 15, scope: !7090)
!7161 = !DILocation(line: 2631, column: 15, scope: !7090)
!7162 = !DILocation(line: 2631, column: 23, scope: !7090)
!7163 = !DILocation(line: 2631, column: 30, scope: !7090)
!7164 = !DILocation(line: 2631, column: 2, scope: !7090)
!7165 = !DILocation(line: 2633, column: 22, scope: !7090)
!7166 = !DILocation(line: 2633, column: 30, scope: !7090)
!7167 = !DILocation(line: 2633, column: 36, scope: !7090)
!7168 = !DILocation(line: 2633, column: 44, scope: !7090)
!7169 = !DILocation(line: 2633, column: 50, scope: !7090)
!7170 = !DILocation(line: 2633, column: 2, scope: !7090)
!7171 = !DILocation(line: 2635, column: 10, scope: !7090)
!7172 = !DILocation(line: 2635, column: 16, scope: !7090)
!7173 = !DILocation(line: 2635, column: 2, scope: !7090)
!7174 = distinct !DISubprogram(name: "ui_item_local_sublayout", scope: !3, file: !3, line: 320, type: !7175, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{!1113, !1113, !1113, !1100}
!7177 = !DILocalVariable(name: "test", arg: 1, scope: !7174, file: !3, line: 320, type: !1113)
!7178 = !DILocation(line: 320, column: 52, scope: !7174)
!7179 = !DILocalVariable(name: "layout", arg: 2, scope: !7174, file: !3, line: 320, type: !1113)
!7180 = !DILocation(line: 320, column: 68, scope: !7174)
!7181 = !DILocalVariable(name: "align", arg: 3, scope: !7174, file: !3, line: 320, type: !1100)
!7182 = !DILocation(line: 320, column: 80, scope: !7174)
!7183 = !DILocalVariable(name: "sub", scope: !7174, file: !3, line: 322, type: !1113)
!7184 = !DILocation(line: 322, column: 12, scope: !7174)
!7185 = !DILocation(line: 324, column: 26, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 324, column: 6)
!7187 = !DILocation(line: 324, column: 6, scope: !7186)
!7188 = !DILocation(line: 324, column: 32, scope: !7186)
!7189 = !DILocation(line: 324, column: 6, scope: !7174)
!7190 = !DILocation(line: 325, column: 21, scope: !7186)
!7191 = !DILocation(line: 325, column: 29, scope: !7186)
!7192 = !DILocation(line: 325, column: 9, scope: !7186)
!7193 = !DILocation(line: 325, column: 7, scope: !7186)
!7194 = !DILocation(line: 325, column: 3, scope: !7186)
!7195 = !DILocation(line: 327, column: 24, scope: !7186)
!7196 = !DILocation(line: 327, column: 32, scope: !7186)
!7197 = !DILocation(line: 327, column: 9, scope: !7186)
!7198 = !DILocation(line: 327, column: 7, scope: !7186)
!7199 = !DILocation(line: 329, column: 2, scope: !7174)
!7200 = !DILocation(line: 329, column: 7, scope: !7174)
!7201 = !DILocation(line: 329, column: 13, scope: !7174)
!7202 = !DILocation(line: 330, column: 9, scope: !7174)
!7203 = !DILocation(line: 330, column: 2, scope: !7174)
!7204 = distinct !DISubprogram(name: "uiLayoutBox", scope: !3, file: !3, line: 2694, type: !3174, scopeLine: 2695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7205 = !DILocalVariable(name: "layout", arg: 1, scope: !7204, file: !3, line: 2694, type: !1113)
!7206 = !DILocation(line: 2694, column: 33, scope: !7204)
!7207 = !DILocation(line: 2696, column: 35, scope: !7204)
!7208 = !DILocation(line: 2696, column: 21, scope: !7204)
!7209 = !DILocation(line: 2696, column: 9, scope: !7204)
!7210 = !DILocation(line: 2696, column: 2, scope: !7204)
!7211 = distinct !DISubprogram(name: "ui_layout_box", scope: !3, file: !3, line: 2638, type: !7212, scopeLine: 2639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{!2321, !1113, !1100}
!7214 = !DILocalVariable(name: "layout", arg: 1, scope: !7211, file: !3, line: 2638, type: !1113)
!7215 = !DILocation(line: 2638, column: 48, scope: !7211)
!7216 = !DILocalVariable(name: "type", arg: 2, scope: !7211, file: !3, line: 2638, type: !1100)
!7217 = !DILocation(line: 2638, column: 60, scope: !7211)
!7218 = !DILocalVariable(name: "box", scope: !7211, file: !3, line: 2640, type: !2321)
!7219 = !DILocation(line: 2640, column: 18, scope: !7211)
!7220 = !DILocation(line: 2642, column: 8, scope: !7211)
!7221 = !DILocation(line: 2642, column: 6, scope: !7211)
!7222 = !DILocation(line: 2643, column: 2, scope: !7211)
!7223 = !DILocation(line: 2643, column: 7, scope: !7211)
!7224 = !DILocation(line: 2643, column: 13, scope: !7211)
!7225 = !DILocation(line: 2643, column: 18, scope: !7211)
!7226 = !DILocation(line: 2643, column: 23, scope: !7211)
!7227 = !DILocation(line: 2644, column: 20, scope: !7211)
!7228 = !DILocation(line: 2644, column: 28, scope: !7211)
!7229 = !DILocation(line: 2644, column: 2, scope: !7211)
!7230 = !DILocation(line: 2644, column: 7, scope: !7211)
!7231 = !DILocation(line: 2644, column: 13, scope: !7211)
!7232 = !DILocation(line: 2644, column: 18, scope: !7211)
!7233 = !DILocation(line: 2645, column: 2, scope: !7211)
!7234 = !DILocation(line: 2645, column: 7, scope: !7211)
!7235 = !DILocation(line: 2645, column: 13, scope: !7211)
!7236 = !DILocation(line: 2645, column: 20, scope: !7211)
!7237 = !DILocation(line: 2646, column: 2, scope: !7211)
!7238 = !DILocation(line: 2646, column: 7, scope: !7211)
!7239 = !DILocation(line: 2646, column: 13, scope: !7211)
!7240 = !DILocation(line: 2646, column: 21, scope: !7211)
!7241 = !DILocation(line: 2647, column: 23, scope: !7211)
!7242 = !DILocation(line: 2647, column: 31, scope: !7211)
!7243 = !DILocation(line: 2647, column: 2, scope: !7211)
!7244 = !DILocation(line: 2647, column: 7, scope: !7211)
!7245 = !DILocation(line: 2647, column: 13, scope: !7211)
!7246 = !DILocation(line: 2647, column: 21, scope: !7211)
!7247 = !DILocation(line: 2648, column: 21, scope: !7211)
!7248 = !DILocation(line: 2648, column: 29, scope: !7211)
!7249 = !DILocation(line: 2648, column: 35, scope: !7211)
!7250 = !DILocation(line: 2648, column: 42, scope: !7211)
!7251 = !DILocation(line: 2648, column: 2, scope: !7211)
!7252 = !DILocation(line: 2648, column: 7, scope: !7211)
!7253 = !DILocation(line: 2648, column: 13, scope: !7211)
!7254 = !DILocation(line: 2648, column: 19, scope: !7211)
!7255 = !DILocation(line: 2649, column: 24, scope: !7211)
!7256 = !DILocation(line: 2649, column: 32, scope: !7211)
!7257 = !DILocation(line: 2649, column: 2, scope: !7211)
!7258 = !DILocation(line: 2649, column: 7, scope: !7211)
!7259 = !DILocation(line: 2649, column: 13, scope: !7211)
!7260 = !DILocation(line: 2649, column: 22, scope: !7211)
!7261 = !DILocation(line: 2650, column: 17, scope: !7211)
!7262 = !DILocation(line: 2650, column: 25, scope: !7211)
!7263 = !DILocation(line: 2650, column: 2, scope: !7211)
!7264 = !DILocation(line: 2650, column: 7, scope: !7211)
!7265 = !DILocation(line: 2650, column: 13, scope: !7211)
!7266 = !DILocation(line: 2650, column: 15, scope: !7211)
!7267 = !DILocation(line: 2651, column: 15, scope: !7211)
!7268 = !DILocation(line: 2651, column: 23, scope: !7211)
!7269 = !DILocation(line: 2651, column: 30, scope: !7211)
!7270 = !DILocation(line: 2651, column: 2, scope: !7211)
!7271 = !DILocation(line: 2653, column: 22, scope: !7211)
!7272 = !DILocation(line: 2653, column: 30, scope: !7211)
!7273 = !DILocation(line: 2653, column: 36, scope: !7211)
!7274 = !DILocation(line: 2653, column: 44, scope: !7211)
!7275 = !DILocation(line: 2653, column: 49, scope: !7211)
!7276 = !DILocation(line: 2653, column: 2, scope: !7211)
!7277 = !DILocation(line: 2655, column: 27, scope: !7211)
!7278 = !DILocation(line: 2655, column: 35, scope: !7211)
!7279 = !DILocation(line: 2655, column: 41, scope: !7211)
!7280 = !DILocation(line: 2655, column: 48, scope: !7211)
!7281 = !DILocation(line: 2655, column: 18, scope: !7211)
!7282 = !DILocation(line: 2655, column: 2, scope: !7211)
!7283 = !DILocation(line: 2655, column: 7, scope: !7211)
!7284 = !DILocation(line: 2655, column: 16, scope: !7211)
!7285 = !DILocation(line: 2657, column: 9, scope: !7211)
!7286 = !DILocation(line: 2657, column: 2, scope: !7211)
!7287 = distinct !DISubprogram(name: "ui_layout_list_set_labels_active", scope: !3, file: !3, line: 2702, type: !3469, scopeLine: 2703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7288 = !DILocalVariable(name: "layout", arg: 1, scope: !7287, file: !3, line: 2702, type: !1113)
!7289 = !DILocation(line: 2702, column: 49, scope: !7287)
!7290 = !DILocalVariable(name: "bitem", scope: !7287, file: !3, line: 2704, type: !2308)
!7291 = !DILocation(line: 2704, column: 16, scope: !7287)
!7292 = !DILocation(line: 2705, column: 15, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 2705, column: 2)
!7294 = !DILocation(line: 2705, column: 23, scope: !7293)
!7295 = !DILocation(line: 2705, column: 29, scope: !7293)
!7296 = !DILocation(line: 2705, column: 13, scope: !7293)
!7297 = !DILocation(line: 2705, column: 7, scope: !7293)
!7298 = !DILocation(line: 2705, column: 36, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 2705, column: 2)
!7300 = !DILocation(line: 2705, column: 2, scope: !7293)
!7301 = !DILocation(line: 2706, column: 7, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 2706, column: 7)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2705, column: 69)
!7304 = !DILocation(line: 2706, column: 14, scope: !7302)
!7305 = !DILocation(line: 2706, column: 19, scope: !7302)
!7306 = !DILocation(line: 2706, column: 24, scope: !7302)
!7307 = !DILocation(line: 2706, column: 7, scope: !7303)
!7308 = !DILocation(line: 2707, column: 51, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 2706, column: 40)
!7310 = !DILocation(line: 2707, column: 58, scope: !7309)
!7311 = !DILocation(line: 2707, column: 37, scope: !7309)
!7312 = !DILocation(line: 2707, column: 4, scope: !7309)
!7313 = !DILocation(line: 2708, column: 3, scope: !7309)
!7314 = !DILocation(line: 2709, column: 12, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 2709, column: 12)
!7316 = !DILocation(line: 2709, column: 19, scope: !7315)
!7317 = !DILocation(line: 2709, column: 24, scope: !7315)
!7318 = !DILocation(line: 2709, column: 29, scope: !7315)
!7319 = !DILocation(line: 2709, column: 12, scope: !7302)
!7320 = !DILocation(line: 2710, column: 17, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2709, column: 49)
!7322 = !DILocation(line: 2710, column: 24, scope: !7321)
!7323 = !DILocation(line: 2710, column: 4, scope: !7321)
!7324 = !DILocation(line: 2711, column: 3, scope: !7321)
!7325 = !DILocation(line: 2712, column: 2, scope: !7303)
!7326 = !DILocation(line: 2705, column: 51, scope: !7299)
!7327 = !DILocation(line: 2705, column: 58, scope: !7299)
!7328 = !DILocation(line: 2705, column: 63, scope: !7299)
!7329 = !DILocation(line: 2705, column: 49, scope: !7299)
!7330 = !DILocation(line: 2705, column: 2, scope: !7299)
!7331 = distinct !{!7331, !7300, !7332}
!7332 = !DILocation(line: 2712, column: 2, scope: !7293)
!7333 = !DILocation(line: 2713, column: 1, scope: !7287)
!7334 = distinct !DISubprogram(name: "uiLayoutListBox", scope: !3, file: !3, line: 2715, type: !7335, scopeLine: 2717, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{!1113, !1113, !7337, !2343, !1946, !2343, !1946}
!7337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 64)
!7338 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiList", file: !1213, line: 193, baseType: !7339)
!7339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiList", file: !1213, line: 168, size: 1600, elements: !7340)
!7340 = !{!7341, !7343, !7344, !7367, !7368, !7369, !7370, !7371, !7372, !7373, !7374, !7375, !7376, !7377, !7378}
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7339, file: !1213, line: 169, baseType: !7342, size: 64)
!7342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7339, size: 64)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7339, file: !1213, line: 169, baseType: !7342, size: 64, offset: 64)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7339, file: !1213, line: 171, baseType: !7345, size: 64, offset: 128)
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7346, size: 64)
!7346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiListType", file: !1222, line: 205, size: 1088, elements: !7347)
!7347 = !{!7348, !7349, !7350, !7351, !7356, !7361, !7366}
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7346, file: !1222, line: 206, baseType: !7345, size: 64)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7346, file: !1222, line: 206, baseType: !7345, size: 64, offset: 64)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !7346, file: !1222, line: 208, baseType: !1157, size: 512, offset: 128)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "draw_item", scope: !7346, file: !1222, line: 210, baseType: !7352, size: 64, offset: 640)
!7352 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiListDrawItemFunc", file: !1222, line: 196, baseType: !7353)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 64)
!7354 = !DISubroutineType(types: !7355)
!7355 = !{null, !7342, !1144, !1286, !1259, !1259, !1100, !1259, !1380, !1100, !1100}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "draw_filter", scope: !7346, file: !1222, line: 211, baseType: !7357, size: 64, offset: 704)
!7357 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiListDrawFilterFunc", file: !1222, line: 200, baseType: !7358)
!7358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7359, size: 64)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{null, !7342, !1144, !1286}
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "filter_items", scope: !7346, file: !1222, line: 212, baseType: !7362, size: 64, offset: 768)
!7362 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiListFilterItemsFunc", file: !1222, line: 203, baseType: !7363)
!7363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7364, size: 64)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{null, !7342, !1144, !1259, !1380}
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !7346, file: !1222, line: 215, baseType: !1246, size: 256, offset: 832)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "list_id", scope: !7339, file: !1213, line: 173, baseType: !1157, size: 512, offset: 192)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "layout_type", scope: !7339, file: !1213, line: 175, baseType: !1100, size: 32, offset: 704)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7339, file: !1213, line: 176, baseType: !1100, size: 32, offset: 736)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "list_scroll", scope: !7339, file: !1213, line: 178, baseType: !1100, size: 32, offset: 768)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "list_grip", scope: !7339, file: !1213, line: 179, baseType: !1100, size: 32, offset: 800)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "list_last_len", scope: !7339, file: !1213, line: 180, baseType: !1100, size: 32, offset: 832)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "list_last_activei", scope: !7339, file: !1213, line: 181, baseType: !1100, size: 32, offset: 864)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "filter_byname", scope: !7339, file: !1213, line: 184, baseType: !1157, size: 512, offset: 896)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "filter_flag", scope: !7339, file: !1213, line: 185, baseType: !1100, size: 32, offset: 1408)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "filter_sort_flag", scope: !7339, file: !1213, line: 186, baseType: !1100, size: 32, offset: 1440)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !7339, file: !1213, line: 189, baseType: !1532, size: 64, offset: 1472)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_data", scope: !7339, file: !1213, line: 192, baseType: !7379, size: 64, offset: 1536)
!7379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7380, size: 64)
!7380 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiListDyn", file: !1213, line: 166, baseType: !7381)
!7381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiListDyn", file: !1213, line: 149, size: 384, elements: !7382)
!7382 = !{!7383, !7384, !7385, !7386, !7387, !7388, !7389, !7390, !7391}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !7381, file: !1213, line: 150, baseType: !1100, size: 32)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "visual_height", scope: !7381, file: !1213, line: 151, baseType: !1100, size: 32, offset: 32)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "visual_height_min", scope: !7381, file: !1213, line: 152, baseType: !1100, size: 32, offset: 64)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "items_len", scope: !7381, file: !1213, line: 154, baseType: !1100, size: 32, offset: 96)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "items_shown", scope: !7381, file: !1213, line: 155, baseType: !1100, size: 32, offset: 128)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !7381, file: !1213, line: 160, baseType: !1100, size: 32, offset: 160)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "resize_prev", scope: !7381, file: !1213, line: 161, baseType: !1100, size: 32, offset: 192)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "items_filter_flags", scope: !7381, file: !1213, line: 164, baseType: !4313, size: 64, offset: 256)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "items_filter_neworder", scope: !7381, file: !1213, line: 165, baseType: !4313, size: 64, offset: 320)
!7392 = !DILocalVariable(name: "layout", arg: 1, scope: !7334, file: !3, line: 2715, type: !1113)
!7393 = !DILocation(line: 2715, column: 37, scope: !7334)
!7394 = !DILocalVariable(name: "ui_list", arg: 2, scope: !7334, file: !3, line: 2715, type: !7337)
!7395 = !DILocation(line: 2715, column: 53, scope: !7334)
!7396 = !DILocalVariable(name: "ptr", arg: 3, scope: !7334, file: !3, line: 2715, type: !2343)
!7397 = !DILocation(line: 2715, column: 74, scope: !7334)
!7398 = !DILocalVariable(name: "prop", arg: 4, scope: !7334, file: !3, line: 2715, type: !1946)
!7399 = !DILocation(line: 2715, column: 92, scope: !7334)
!7400 = !DILocalVariable(name: "actptr", arg: 5, scope: !7334, file: !3, line: 2715, type: !2343)
!7401 = !DILocation(line: 2715, column: 110, scope: !7334)
!7402 = !DILocalVariable(name: "actprop", arg: 6, scope: !7334, file: !3, line: 2716, type: !1946)
!7403 = !DILocation(line: 2716, column: 40, scope: !7334)
!7404 = !DILocalVariable(name: "box", scope: !7334, file: !3, line: 2718, type: !2321)
!7405 = !DILocation(line: 2718, column: 18, scope: !7334)
!7406 = !DILocation(line: 2718, column: 38, scope: !7334)
!7407 = !DILocation(line: 2718, column: 24, scope: !7334)
!7408 = !DILocalVariable(name: "but", scope: !7334, file: !3, line: 2719, type: !2159)
!7409 = !DILocation(line: 2719, column: 9, scope: !7334)
!7410 = !DILocation(line: 2719, column: 15, scope: !7334)
!7411 = !DILocation(line: 2719, column: 20, scope: !7334)
!7412 = !DILocation(line: 2721, column: 21, scope: !7334)
!7413 = !DILocation(line: 2721, column: 2, scope: !7334)
!7414 = !DILocation(line: 2721, column: 7, scope: !7334)
!7415 = !DILocation(line: 2721, column: 19, scope: !7334)
!7416 = !DILocation(line: 2723, column: 2, scope: !7334)
!7417 = !DILocation(line: 2723, column: 7, scope: !7334)
!7418 = !DILocation(line: 2723, column: 24, scope: !7334)
!7419 = !DILocation(line: 2723, column: 23, scope: !7334)
!7420 = !DILocation(line: 2724, column: 23, scope: !7334)
!7421 = !DILocation(line: 2724, column: 2, scope: !7334)
!7422 = !DILocation(line: 2724, column: 7, scope: !7334)
!7423 = !DILocation(line: 2724, column: 21, scope: !7334)
!7424 = !DILocation(line: 2725, column: 2, scope: !7334)
!7425 = !DILocation(line: 2725, column: 7, scope: !7334)
!7426 = !DILocation(line: 2725, column: 18, scope: !7334)
!7427 = !DILocation(line: 2725, column: 17, scope: !7334)
!7428 = !DILocation(line: 2726, column: 17, scope: !7334)
!7429 = !DILocation(line: 2726, column: 2, scope: !7334)
!7430 = !DILocation(line: 2726, column: 7, scope: !7334)
!7431 = !DILocation(line: 2726, column: 15, scope: !7334)
!7432 = !DILocation(line: 2729, column: 6, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 2729, column: 6)
!7434 = !DILocation(line: 2729, column: 11, scope: !7433)
!7435 = !DILocation(line: 2729, column: 16, scope: !7433)
!7436 = !DILocation(line: 2729, column: 6, scope: !7334)
!7437 = !DILocation(line: 2730, column: 39, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 2729, column: 31)
!7439 = !DILocation(line: 2730, column: 14, scope: !7438)
!7440 = !DILocation(line: 2730, column: 3, scope: !7438)
!7441 = !DILocation(line: 2730, column: 8, scope: !7438)
!7442 = !DILocation(line: 2730, column: 12, scope: !7438)
!7443 = !DILocation(line: 2731, column: 2, scope: !7438)
!7444 = !DILocation(line: 2733, column: 21, scope: !7334)
!7445 = !DILocation(line: 2733, column: 9, scope: !7334)
!7446 = !DILocation(line: 2733, column: 2, scope: !7334)
!7447 = distinct !DISubprogram(name: "uiLayoutAbsolute", scope: !3, file: !3, line: 2736, type: !3356, scopeLine: 2737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7448 = !DILocalVariable(name: "layout", arg: 1, scope: !7447, file: !3, line: 2736, type: !1113)
!7449 = !DILocation(line: 2736, column: 38, scope: !7447)
!7450 = !DILocalVariable(name: "align", arg: 2, scope: !7447, file: !3, line: 2736, type: !1100)
!7451 = !DILocation(line: 2736, column: 50, scope: !7447)
!7452 = !DILocalVariable(name: "litem", scope: !7447, file: !3, line: 2738, type: !1113)
!7453 = !DILocation(line: 2738, column: 12, scope: !7447)
!7454 = !DILocation(line: 2740, column: 10, scope: !7447)
!7455 = !DILocation(line: 2740, column: 8, scope: !7447)
!7456 = !DILocation(line: 2741, column: 2, scope: !7447)
!7457 = !DILocation(line: 2741, column: 9, scope: !7447)
!7458 = !DILocation(line: 2741, column: 14, scope: !7447)
!7459 = !DILocation(line: 2741, column: 19, scope: !7447)
!7460 = !DILocation(line: 2742, column: 16, scope: !7447)
!7461 = !DILocation(line: 2742, column: 24, scope: !7447)
!7462 = !DILocation(line: 2742, column: 2, scope: !7447)
!7463 = !DILocation(line: 2742, column: 9, scope: !7447)
!7464 = !DILocation(line: 2742, column: 14, scope: !7447)
!7465 = !DILocation(line: 2743, column: 17, scope: !7447)
!7466 = !DILocation(line: 2743, column: 2, scope: !7447)
!7467 = !DILocation(line: 2743, column: 9, scope: !7447)
!7468 = !DILocation(line: 2743, column: 15, scope: !7447)
!7469 = !DILocation(line: 2744, column: 2, scope: !7447)
!7470 = !DILocation(line: 2744, column: 9, scope: !7447)
!7471 = !DILocation(line: 2744, column: 16, scope: !7447)
!7472 = !DILocation(line: 2745, column: 2, scope: !7447)
!7473 = !DILocation(line: 2745, column: 9, scope: !7447)
!7474 = !DILocation(line: 2745, column: 17, scope: !7447)
!7475 = !DILocation(line: 2746, column: 19, scope: !7447)
!7476 = !DILocation(line: 2746, column: 27, scope: !7447)
!7477 = !DILocation(line: 2746, column: 2, scope: !7447)
!7478 = !DILocation(line: 2746, column: 9, scope: !7447)
!7479 = !DILocation(line: 2746, column: 17, scope: !7447)
!7480 = !DILocation(line: 2747, column: 20, scope: !7447)
!7481 = !DILocation(line: 2747, column: 28, scope: !7447)
!7482 = !DILocation(line: 2747, column: 2, scope: !7447)
!7483 = !DILocation(line: 2747, column: 9, scope: !7447)
!7484 = !DILocation(line: 2747, column: 18, scope: !7447)
!7485 = !DILocation(line: 2748, column: 15, scope: !7447)
!7486 = !DILocation(line: 2748, column: 23, scope: !7447)
!7487 = !DILocation(line: 2748, column: 30, scope: !7447)
!7488 = !DILocation(line: 2748, column: 2, scope: !7447)
!7489 = !DILocation(line: 2750, column: 22, scope: !7447)
!7490 = !DILocation(line: 2750, column: 30, scope: !7447)
!7491 = !DILocation(line: 2750, column: 36, scope: !7447)
!7492 = !DILocation(line: 2750, column: 43, scope: !7447)
!7493 = !DILocation(line: 2750, column: 2, scope: !7447)
!7494 = !DILocation(line: 2752, column: 9, scope: !7447)
!7495 = !DILocation(line: 2752, column: 2, scope: !7447)
!7496 = distinct !DISubprogram(name: "uiLayoutAbsoluteBlock", scope: !3, file: !3, line: 2755, type: !6283, scopeLine: 2756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7497 = !DILocalVariable(name: "layout", arg: 1, scope: !7496, file: !3, line: 2755, type: !1113)
!7498 = !DILocation(line: 2755, column: 42, scope: !7496)
!7499 = !DILocalVariable(name: "block", scope: !7496, file: !3, line: 2757, type: !1197)
!7500 = !DILocation(line: 2757, column: 11, scope: !7496)
!7501 = !DILocation(line: 2759, column: 27, scope: !7496)
!7502 = !DILocation(line: 2759, column: 10, scope: !7496)
!7503 = !DILocation(line: 2759, column: 8, scope: !7496)
!7504 = !DILocation(line: 2760, column: 19, scope: !7496)
!7505 = !DILocation(line: 2760, column: 2, scope: !7496)
!7506 = !DILocation(line: 2762, column: 9, scope: !7496)
!7507 = !DILocation(line: 2762, column: 2, scope: !7496)
!7508 = distinct !DISubprogram(name: "uiLayoutOverlap", scope: !3, file: !3, line: 2765, type: !3174, scopeLine: 2766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7509 = !DILocalVariable(name: "layout", arg: 1, scope: !7508, file: !3, line: 2765, type: !1113)
!7510 = !DILocation(line: 2765, column: 37, scope: !7508)
!7511 = !DILocalVariable(name: "litem", scope: !7508, file: !3, line: 2767, type: !1113)
!7512 = !DILocation(line: 2767, column: 12, scope: !7508)
!7513 = !DILocation(line: 2769, column: 10, scope: !7508)
!7514 = !DILocation(line: 2769, column: 8, scope: !7508)
!7515 = !DILocation(line: 2770, column: 2, scope: !7508)
!7516 = !DILocation(line: 2770, column: 9, scope: !7508)
!7517 = !DILocation(line: 2770, column: 14, scope: !7508)
!7518 = !DILocation(line: 2770, column: 19, scope: !7508)
!7519 = !DILocation(line: 2771, column: 16, scope: !7508)
!7520 = !DILocation(line: 2771, column: 24, scope: !7508)
!7521 = !DILocation(line: 2771, column: 2, scope: !7508)
!7522 = !DILocation(line: 2771, column: 9, scope: !7508)
!7523 = !DILocation(line: 2771, column: 14, scope: !7508)
!7524 = !DILocation(line: 2772, column: 2, scope: !7508)
!7525 = !DILocation(line: 2772, column: 9, scope: !7508)
!7526 = !DILocation(line: 2772, column: 16, scope: !7508)
!7527 = !DILocation(line: 2773, column: 2, scope: !7508)
!7528 = !DILocation(line: 2773, column: 9, scope: !7508)
!7529 = !DILocation(line: 2773, column: 17, scope: !7508)
!7530 = !DILocation(line: 2774, column: 19, scope: !7508)
!7531 = !DILocation(line: 2774, column: 27, scope: !7508)
!7532 = !DILocation(line: 2774, column: 2, scope: !7508)
!7533 = !DILocation(line: 2774, column: 9, scope: !7508)
!7534 = !DILocation(line: 2774, column: 17, scope: !7508)
!7535 = !DILocation(line: 2775, column: 20, scope: !7508)
!7536 = !DILocation(line: 2775, column: 28, scope: !7508)
!7537 = !DILocation(line: 2775, column: 2, scope: !7508)
!7538 = !DILocation(line: 2775, column: 9, scope: !7508)
!7539 = !DILocation(line: 2775, column: 18, scope: !7508)
!7540 = !DILocation(line: 2776, column: 15, scope: !7508)
!7541 = !DILocation(line: 2776, column: 23, scope: !7508)
!7542 = !DILocation(line: 2776, column: 30, scope: !7508)
!7543 = !DILocation(line: 2776, column: 2, scope: !7508)
!7544 = !DILocation(line: 2778, column: 22, scope: !7508)
!7545 = !DILocation(line: 2778, column: 30, scope: !7508)
!7546 = !DILocation(line: 2778, column: 36, scope: !7508)
!7547 = !DILocation(line: 2778, column: 43, scope: !7508)
!7548 = !DILocation(line: 2778, column: 2, scope: !7508)
!7549 = !DILocation(line: 2780, column: 9, scope: !7508)
!7550 = !DILocation(line: 2780, column: 2, scope: !7508)
!7551 = distinct !DISubprogram(name: "uiLayoutSetActive", scope: !3, file: !3, line: 2805, type: !7552, scopeLine: 2806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{null, !1113, !1413}
!7554 = !DILocalVariable(name: "layout", arg: 1, scope: !7551, file: !3, line: 2805, type: !1113)
!7555 = !DILocation(line: 2805, column: 34, scope: !7551)
!7556 = !DILocalVariable(name: "active", arg: 2, scope: !7551, file: !3, line: 2805, type: !1413)
!7557 = !DILocation(line: 2805, column: 47, scope: !7551)
!7558 = !DILocation(line: 2807, column: 19, scope: !7551)
!7559 = !DILocation(line: 2807, column: 2, scope: !7551)
!7560 = !DILocation(line: 2807, column: 10, scope: !7551)
!7561 = !DILocation(line: 2807, column: 17, scope: !7551)
!7562 = !DILocation(line: 2808, column: 1, scope: !7551)
!7563 = distinct !DISubprogram(name: "uiLayoutSetEnabled", scope: !3, file: !3, line: 2810, type: !7552, scopeLine: 2811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7564 = !DILocalVariable(name: "layout", arg: 1, scope: !7563, file: !3, line: 2810, type: !1113)
!7565 = !DILocation(line: 2810, column: 35, scope: !7563)
!7566 = !DILocalVariable(name: "enabled", arg: 2, scope: !7563, file: !3, line: 2810, type: !1413)
!7567 = !DILocation(line: 2810, column: 48, scope: !7563)
!7568 = !DILocation(line: 2812, column: 20, scope: !7563)
!7569 = !DILocation(line: 2812, column: 2, scope: !7563)
!7570 = !DILocation(line: 2812, column: 10, scope: !7563)
!7571 = !DILocation(line: 2812, column: 18, scope: !7563)
!7572 = !DILocation(line: 2813, column: 1, scope: !7563)
!7573 = distinct !DISubprogram(name: "uiLayoutSetRedAlert", scope: !3, file: !3, line: 2815, type: !7552, scopeLine: 2816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7574 = !DILocalVariable(name: "layout", arg: 1, scope: !7573, file: !3, line: 2815, type: !1113)
!7575 = !DILocation(line: 2815, column: 36, scope: !7573)
!7576 = !DILocalVariable(name: "redalert", arg: 2, scope: !7573, file: !3, line: 2815, type: !1413)
!7577 = !DILocation(line: 2815, column: 49, scope: !7573)
!7578 = !DILocation(line: 2817, column: 21, scope: !7573)
!7579 = !DILocation(line: 2817, column: 2, scope: !7573)
!7580 = !DILocation(line: 2817, column: 10, scope: !7573)
!7581 = !DILocation(line: 2817, column: 19, scope: !7573)
!7582 = !DILocation(line: 2818, column: 1, scope: !7573)
!7583 = distinct !DISubprogram(name: "uiLayoutSetKeepAspect", scope: !3, file: !3, line: 2820, type: !7552, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7584 = !DILocalVariable(name: "layout", arg: 1, scope: !7583, file: !3, line: 2820, type: !1113)
!7585 = !DILocation(line: 2820, column: 38, scope: !7583)
!7586 = !DILocalVariable(name: "keepaspect", arg: 2, scope: !7583, file: !3, line: 2820, type: !1413)
!7587 = !DILocation(line: 2820, column: 51, scope: !7583)
!7588 = !DILocation(line: 2822, column: 23, scope: !7583)
!7589 = !DILocation(line: 2822, column: 2, scope: !7583)
!7590 = !DILocation(line: 2822, column: 10, scope: !7583)
!7591 = !DILocation(line: 2822, column: 21, scope: !7583)
!7592 = !DILocation(line: 2823, column: 1, scope: !7583)
!7593 = distinct !DISubprogram(name: "uiLayoutSetAlignment", scope: !3, file: !3, line: 2825, type: !7594, scopeLine: 2826, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7594 = !DISubroutineType(types: !7595)
!7595 = !{null, !1113, !1158}
!7596 = !DILocalVariable(name: "layout", arg: 1, scope: !7593, file: !3, line: 2825, type: !1113)
!7597 = !DILocation(line: 2825, column: 37, scope: !7593)
!7598 = !DILocalVariable(name: "alignment", arg: 2, scope: !7593, file: !3, line: 2825, type: !1158)
!7599 = !DILocation(line: 2825, column: 50, scope: !7593)
!7600 = !DILocation(line: 2827, column: 22, scope: !7593)
!7601 = !DILocation(line: 2827, column: 2, scope: !7593)
!7602 = !DILocation(line: 2827, column: 10, scope: !7593)
!7603 = !DILocation(line: 2827, column: 20, scope: !7593)
!7604 = !DILocation(line: 2828, column: 1, scope: !7593)
!7605 = distinct !DISubprogram(name: "uiLayoutSetScaleX", scope: !3, file: !3, line: 2830, type: !7606, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{null, !1113, !1180}
!7608 = !DILocalVariable(name: "layout", arg: 1, scope: !7605, file: !3, line: 2830, type: !1113)
!7609 = !DILocation(line: 2830, column: 34, scope: !7605)
!7610 = !DILocalVariable(name: "scale", arg: 2, scope: !7605, file: !3, line: 2830, type: !1180)
!7611 = !DILocation(line: 2830, column: 48, scope: !7605)
!7612 = !DILocation(line: 2832, column: 21, scope: !7605)
!7613 = !DILocation(line: 2832, column: 2, scope: !7605)
!7614 = !DILocation(line: 2832, column: 10, scope: !7605)
!7615 = !DILocation(line: 2832, column: 19, scope: !7605)
!7616 = !DILocation(line: 2833, column: 1, scope: !7605)
!7617 = distinct !DISubprogram(name: "uiLayoutSetScaleY", scope: !3, file: !3, line: 2835, type: !7606, scopeLine: 2836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7618 = !DILocalVariable(name: "layout", arg: 1, scope: !7617, file: !3, line: 2835, type: !1113)
!7619 = !DILocation(line: 2835, column: 34, scope: !7617)
!7620 = !DILocalVariable(name: "scale", arg: 2, scope: !7617, file: !3, line: 2835, type: !1180)
!7621 = !DILocation(line: 2835, column: 48, scope: !7617)
!7622 = !DILocation(line: 2837, column: 21, scope: !7617)
!7623 = !DILocation(line: 2837, column: 2, scope: !7617)
!7624 = !DILocation(line: 2837, column: 10, scope: !7617)
!7625 = !DILocation(line: 2837, column: 19, scope: !7617)
!7626 = !DILocation(line: 2838, column: 1, scope: !7617)
!7627 = distinct !DISubprogram(name: "uiLayoutGetActive", scope: !3, file: !3, line: 2840, type: !7628, scopeLine: 2841, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7628 = !DISubroutineType(types: !7629)
!7629 = !{!1413, !1113}
!7630 = !DILocalVariable(name: "layout", arg: 1, scope: !7627, file: !3, line: 2840, type: !1113)
!7631 = !DILocation(line: 2840, column: 34, scope: !7627)
!7632 = !DILocation(line: 2842, column: 9, scope: !7627)
!7633 = !DILocation(line: 2842, column: 17, scope: !7627)
!7634 = !DILocation(line: 2842, column: 2, scope: !7627)
!7635 = distinct !DISubprogram(name: "uiLayoutGetEnabled", scope: !3, file: !3, line: 2845, type: !7628, scopeLine: 2846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7636 = !DILocalVariable(name: "layout", arg: 1, scope: !7635, file: !3, line: 2845, type: !1113)
!7637 = !DILocation(line: 2845, column: 35, scope: !7635)
!7638 = !DILocation(line: 2847, column: 9, scope: !7635)
!7639 = !DILocation(line: 2847, column: 17, scope: !7635)
!7640 = !DILocation(line: 2847, column: 2, scope: !7635)
!7641 = distinct !DISubprogram(name: "uiLayoutGetRedAlert", scope: !3, file: !3, line: 2850, type: !7628, scopeLine: 2851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7642 = !DILocalVariable(name: "layout", arg: 1, scope: !7641, file: !3, line: 2850, type: !1113)
!7643 = !DILocation(line: 2850, column: 36, scope: !7641)
!7644 = !DILocation(line: 2852, column: 9, scope: !7641)
!7645 = !DILocation(line: 2852, column: 17, scope: !7641)
!7646 = !DILocation(line: 2852, column: 2, scope: !7641)
!7647 = distinct !DISubprogram(name: "uiLayoutGetKeepAspect", scope: !3, file: !3, line: 2855, type: !7628, scopeLine: 2856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7648 = !DILocalVariable(name: "layout", arg: 1, scope: !7647, file: !3, line: 2855, type: !1113)
!7649 = !DILocation(line: 2855, column: 38, scope: !7647)
!7650 = !DILocation(line: 2857, column: 9, scope: !7647)
!7651 = !DILocation(line: 2857, column: 17, scope: !7647)
!7652 = !DILocation(line: 2857, column: 2, scope: !7647)
!7653 = distinct !DISubprogram(name: "uiLayoutGetAlignment", scope: !3, file: !3, line: 2860, type: !7654, scopeLine: 2861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7654 = !DISubroutineType(types: !7655)
!7655 = !{!1100, !1113}
!7656 = !DILocalVariable(name: "layout", arg: 1, scope: !7653, file: !3, line: 2860, type: !1113)
!7657 = !DILocation(line: 2860, column: 36, scope: !7653)
!7658 = !DILocation(line: 2862, column: 9, scope: !7653)
!7659 = !DILocation(line: 2862, column: 17, scope: !7653)
!7660 = !DILocation(line: 2862, column: 2, scope: !7653)
!7661 = distinct !DISubprogram(name: "uiLayoutGetWidth", scope: !3, file: !3, line: 2865, type: !7654, scopeLine: 2866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7662 = !DILocalVariable(name: "layout", arg: 1, scope: !7661, file: !3, line: 2865, type: !1113)
!7663 = !DILocation(line: 2865, column: 32, scope: !7661)
!7664 = !DILocation(line: 2867, column: 9, scope: !7661)
!7665 = !DILocation(line: 2867, column: 17, scope: !7661)
!7666 = !DILocation(line: 2867, column: 2, scope: !7661)
!7667 = distinct !DISubprogram(name: "uiLayoutGetScaleX", scope: !3, file: !3, line: 2870, type: !7668, scopeLine: 2871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!1180, !1113}
!7670 = !DILocalVariable(name: "layout", arg: 1, scope: !7667, file: !3, line: 2870, type: !1113)
!7671 = !DILocation(line: 2870, column: 35, scope: !7667)
!7672 = !DILocation(line: 2872, column: 9, scope: !7667)
!7673 = !DILocation(line: 2872, column: 17, scope: !7667)
!7674 = !DILocation(line: 2872, column: 2, scope: !7667)
!7675 = distinct !DISubprogram(name: "uiLayoutGetScaleY", scope: !3, file: !3, line: 2875, type: !7668, scopeLine: 2876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7676 = !DILocalVariable(name: "layout", arg: 1, scope: !7675, file: !3, line: 2875, type: !1113)
!7677 = !DILocation(line: 2875, column: 35, scope: !7675)
!7678 = !DILocation(line: 2877, column: 9, scope: !7675)
!7679 = !DILocation(line: 2877, column: 17, scope: !7675)
!7680 = !DILocation(line: 2877, column: 2, scope: !7675)
!7681 = distinct !DISubprogram(name: "uiBlockLayout", scope: !3, file: !3, line: 3093, type: !7682, scopeLine: 3094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{!1113, !1197, !1100, !1100, !1100, !1100, !1100, !1100, !1100, !1148}
!7684 = !DILocalVariable(name: "block", arg: 1, scope: !7681, file: !3, line: 3093, type: !1197)
!7685 = !DILocation(line: 3093, column: 34, scope: !7681)
!7686 = !DILocalVariable(name: "dir", arg: 2, scope: !7681, file: !3, line: 3093, type: !1100)
!7687 = !DILocation(line: 3093, column: 45, scope: !7681)
!7688 = !DILocalVariable(name: "type", arg: 3, scope: !7681, file: !3, line: 3093, type: !1100)
!7689 = !DILocation(line: 3093, column: 54, scope: !7681)
!7690 = !DILocalVariable(name: "x", arg: 4, scope: !7681, file: !3, line: 3093, type: !1100)
!7691 = !DILocation(line: 3093, column: 64, scope: !7681)
!7692 = !DILocalVariable(name: "y", arg: 5, scope: !7681, file: !3, line: 3093, type: !1100)
!7693 = !DILocation(line: 3093, column: 71, scope: !7681)
!7694 = !DILocalVariable(name: "size", arg: 6, scope: !7681, file: !3, line: 3093, type: !1100)
!7695 = !DILocation(line: 3093, column: 78, scope: !7681)
!7696 = !DILocalVariable(name: "em", arg: 7, scope: !7681, file: !3, line: 3093, type: !1100)
!7697 = !DILocation(line: 3093, column: 88, scope: !7681)
!7698 = !DILocalVariable(name: "padding", arg: 8, scope: !7681, file: !3, line: 3093, type: !1100)
!7699 = !DILocation(line: 3093, column: 96, scope: !7681)
!7700 = !DILocalVariable(name: "style", arg: 9, scope: !7681, file: !3, line: 3093, type: !1148)
!7701 = !DILocation(line: 3093, column: 114, scope: !7681)
!7702 = !DILocalVariable(name: "layout", scope: !7681, file: !3, line: 3095, type: !1113)
!7703 = !DILocation(line: 3095, column: 12, scope: !7681)
!7704 = !DILocalVariable(name: "root", scope: !7681, file: !3, line: 3096, type: !1127)
!7705 = !DILocation(line: 3096, column: 16, scope: !7681)
!7706 = !DILocation(line: 3098, column: 9, scope: !7681)
!7707 = !DILocation(line: 3098, column: 7, scope: !7681)
!7708 = !DILocation(line: 3099, column: 15, scope: !7681)
!7709 = !DILocation(line: 3099, column: 2, scope: !7681)
!7710 = !DILocation(line: 3099, column: 8, scope: !7681)
!7711 = !DILocation(line: 3099, column: 13, scope: !7681)
!7712 = !DILocation(line: 3100, column: 16, scope: !7681)
!7713 = !DILocation(line: 3100, column: 2, scope: !7681)
!7714 = !DILocation(line: 3100, column: 8, scope: !7681)
!7715 = !DILocation(line: 3100, column: 14, scope: !7681)
!7716 = !DILocation(line: 3101, column: 16, scope: !7681)
!7717 = !DILocation(line: 3101, column: 2, scope: !7681)
!7718 = !DILocation(line: 3101, column: 8, scope: !7681)
!7719 = !DILocation(line: 3101, column: 14, scope: !7681)
!7720 = !DILocation(line: 3102, column: 18, scope: !7681)
!7721 = !DILocation(line: 3102, column: 2, scope: !7681)
!7722 = !DILocation(line: 3102, column: 8, scope: !7681)
!7723 = !DILocation(line: 3102, column: 16, scope: !7681)
!7724 = !DILocation(line: 3103, column: 2, scope: !7681)
!7725 = !DILocation(line: 3103, column: 8, scope: !7681)
!7726 = !DILocation(line: 3103, column: 18, scope: !7681)
!7727 = !DILocation(line: 3105, column: 11, scope: !7681)
!7728 = !DILocation(line: 3105, column: 9, scope: !7681)
!7729 = !DILocation(line: 3106, column: 2, scope: !7681)
!7730 = !DILocation(line: 3106, column: 10, scope: !7681)
!7731 = !DILocation(line: 3106, column: 15, scope: !7681)
!7732 = !DILocation(line: 3106, column: 20, scope: !7681)
!7733 = !DILocation(line: 3108, column: 14, scope: !7681)
!7734 = !DILocation(line: 3108, column: 2, scope: !7681)
!7735 = !DILocation(line: 3108, column: 10, scope: !7681)
!7736 = !DILocation(line: 3108, column: 12, scope: !7681)
!7737 = !DILocation(line: 3109, column: 14, scope: !7681)
!7738 = !DILocation(line: 3109, column: 2, scope: !7681)
!7739 = !DILocation(line: 3109, column: 10, scope: !7681)
!7740 = !DILocation(line: 3109, column: 12, scope: !7681)
!7741 = !DILocation(line: 3110, column: 17, scope: !7681)
!7742 = !DILocation(line: 3110, column: 2, scope: !7681)
!7743 = !DILocation(line: 3110, column: 10, scope: !7681)
!7744 = !DILocation(line: 3110, column: 15, scope: !7681)
!7745 = !DILocation(line: 3111, column: 18, scope: !7681)
!7746 = !DILocation(line: 3111, column: 25, scope: !7681)
!7747 = !DILocation(line: 3111, column: 2, scope: !7681)
!7748 = !DILocation(line: 3111, column: 10, scope: !7681)
!7749 = !DILocation(line: 3111, column: 16, scope: !7681)
!7750 = !DILocation(line: 3112, column: 2, scope: !7681)
!7751 = !DILocation(line: 3112, column: 10, scope: !7681)
!7752 = !DILocation(line: 3112, column: 17, scope: !7681)
!7753 = !DILocation(line: 3113, column: 2, scope: !7681)
!7754 = !DILocation(line: 3113, column: 10, scope: !7681)
!7755 = !DILocation(line: 3113, column: 18, scope: !7681)
!7756 = !DILocation(line: 3114, column: 2, scope: !7681)
!7757 = !DILocation(line: 3114, column: 10, scope: !7681)
!7758 = !DILocation(line: 3114, column: 18, scope: !7681)
!7759 = !DILocation(line: 3116, column: 6, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 3116, column: 6)
!7761 = !DILocation(line: 3116, column: 11, scope: !7760)
!7762 = !DILocation(line: 3116, column: 29, scope: !7760)
!7763 = !DILocation(line: 3116, column: 32, scope: !7760)
!7764 = !DILocation(line: 3116, column: 37, scope: !7760)
!7765 = !DILocation(line: 3116, column: 6, scope: !7681)
!7766 = !DILocation(line: 3117, column: 3, scope: !7760)
!7767 = !DILocation(line: 3117, column: 11, scope: !7760)
!7768 = !DILocation(line: 3117, column: 17, scope: !7760)
!7769 = !DILocation(line: 3119, column: 6, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 3119, column: 6)
!7771 = !DILocation(line: 3119, column: 10, scope: !7770)
!7772 = !DILocation(line: 3119, column: 6, scope: !7681)
!7773 = !DILocation(line: 3120, column: 15, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 3119, column: 35)
!7775 = !DILocation(line: 3120, column: 3, scope: !7774)
!7776 = !DILocation(line: 3120, column: 11, scope: !7774)
!7777 = !DILocation(line: 3120, column: 13, scope: !7774)
!7778 = !DILocation(line: 3121, column: 23, scope: !7774)
!7779 = !DILocation(line: 3121, column: 28, scope: !7774)
!7780 = !DILocation(line: 3121, column: 26, scope: !7774)
!7781 = !DILocation(line: 3121, column: 3, scope: !7774)
!7782 = !DILocation(line: 3121, column: 11, scope: !7774)
!7783 = !DILocation(line: 3121, column: 17, scope: !7774)
!7784 = !DILocation(line: 3121, column: 21, scope: !7774)
!7785 = !DILocation(line: 3122, column: 2, scope: !7774)
!7786 = !DILocation(line: 3124, column: 15, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 3123, column: 7)
!7788 = !DILocation(line: 3124, column: 3, scope: !7787)
!7789 = !DILocation(line: 3124, column: 11, scope: !7787)
!7790 = !DILocation(line: 3124, column: 13, scope: !7787)
!7791 = !DILocation(line: 3125, column: 23, scope: !7787)
!7792 = !DILocation(line: 3125, column: 28, scope: !7787)
!7793 = !DILocation(line: 3125, column: 26, scope: !7787)
!7794 = !DILocation(line: 3125, column: 3, scope: !7787)
!7795 = !DILocation(line: 3125, column: 11, scope: !7787)
!7796 = !DILocation(line: 3125, column: 17, scope: !7787)
!7797 = !DILocation(line: 3125, column: 21, scope: !7787)
!7798 = !DILocation(line: 3128, column: 21, scope: !7681)
!7799 = !DILocation(line: 3128, column: 2, scope: !7681)
!7800 = !DILocation(line: 3128, column: 9, scope: !7681)
!7801 = !DILocation(line: 3128, column: 19, scope: !7681)
!7802 = !DILocation(line: 3129, column: 17, scope: !7681)
!7803 = !DILocation(line: 3129, column: 2, scope: !7681)
!7804 = !DILocation(line: 3129, column: 8, scope: !7681)
!7805 = !DILocation(line: 3129, column: 15, scope: !7681)
!7806 = !DILocation(line: 3130, column: 15, scope: !7681)
!7807 = !DILocation(line: 3130, column: 22, scope: !7681)
!7808 = !DILocation(line: 3130, column: 31, scope: !7681)
!7809 = !DILocation(line: 3130, column: 2, scope: !7681)
!7810 = !DILocation(line: 3132, column: 31, scope: !7681)
!7811 = !DILocation(line: 3132, column: 2, scope: !7681)
!7812 = !DILocation(line: 3134, column: 9, scope: !7681)
!7813 = !DILocation(line: 3134, column: 2, scope: !7681)
!7814 = distinct !DISubprogram(name: "ui_layout_add_padding_button", scope: !3, file: !3, line: 3080, type: !7815, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7815 = !DISubroutineType(types: !7816)
!7816 = !{null, !1127}
!7817 = !DILocalVariable(name: "root", arg: 1, scope: !7814, file: !3, line: 3080, type: !1127)
!7818 = !DILocation(line: 3080, column: 56, scope: !7814)
!7819 = !DILocation(line: 3082, column: 6, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 3082, column: 6)
!7821 = !DILocation(line: 3082, column: 12, scope: !7820)
!7822 = !DILocation(line: 3082, column: 6, scope: !7814)
!7823 = !DILocalVariable(name: "block", scope: !7824, file: !3, line: 3084, type: !1197)
!7824 = distinct !DILexicalBlock(scope: !7820, file: !3, line: 3082, column: 21)
!7825 = !DILocation(line: 3084, column: 12, scope: !7824)
!7826 = !DILocation(line: 3084, column: 20, scope: !7824)
!7827 = !DILocation(line: 3084, column: 26, scope: !7824)
!7828 = !DILocalVariable(name: "prev_layout", scope: !7824, file: !3, line: 3085, type: !1113)
!7829 = !DILocation(line: 3085, column: 13, scope: !7824)
!7830 = !DILocation(line: 3085, column: 27, scope: !7824)
!7831 = !DILocation(line: 3085, column: 34, scope: !7824)
!7832 = !DILocation(line: 3087, column: 22, scope: !7824)
!7833 = !DILocation(line: 3087, column: 28, scope: !7824)
!7834 = !DILocation(line: 3087, column: 3, scope: !7824)
!7835 = !DILocation(line: 3087, column: 10, scope: !7824)
!7836 = !DILocation(line: 3087, column: 20, scope: !7824)
!7837 = !DILocation(line: 3088, column: 12, scope: !7824)
!7838 = !DILocation(line: 3088, column: 38, scope: !7824)
!7839 = !DILocation(line: 3088, column: 44, scope: !7824)
!7840 = !DILocation(line: 3088, column: 53, scope: !7824)
!7841 = !DILocation(line: 3088, column: 59, scope: !7824)
!7842 = !DILocation(line: 3088, column: 3, scope: !7824)
!7843 = !DILocation(line: 3089, column: 22, scope: !7824)
!7844 = !DILocation(line: 3089, column: 3, scope: !7824)
!7845 = !DILocation(line: 3089, column: 10, scope: !7824)
!7846 = !DILocation(line: 3089, column: 20, scope: !7824)
!7847 = !DILocation(line: 3090, column: 2, scope: !7824)
!7848 = !DILocation(line: 3091, column: 1, scope: !7814)
!7849 = distinct !DISubprogram(name: "uiLayoutGetOperatorContext", scope: !3, file: !3, line: 3142, type: !7654, scopeLine: 3143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7850 = !DILocalVariable(name: "layout", arg: 1, scope: !7849, file: !3, line: 3142, type: !1113)
!7851 = !DILocation(line: 3142, column: 42, scope: !7849)
!7852 = !DILocation(line: 3144, column: 9, scope: !7849)
!7853 = !DILocation(line: 3144, column: 17, scope: !7849)
!7854 = !DILocation(line: 3144, column: 23, scope: !7849)
!7855 = !DILocation(line: 3144, column: 2, scope: !7849)
!7856 = distinct !DISubprogram(name: "ui_layout_add_but", scope: !3, file: !3, line: 3153, type: !7857, scopeLine: 3154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{null, !1113, !2159}
!7859 = !DILocalVariable(name: "layout", arg: 1, scope: !7856, file: !3, line: 3153, type: !1113)
!7860 = !DILocation(line: 3153, column: 34, scope: !7856)
!7861 = !DILocalVariable(name: "but", arg: 2, scope: !7856, file: !3, line: 3153, type: !2159)
!7862 = !DILocation(line: 3153, column: 49, scope: !7856)
!7863 = !DILocalVariable(name: "bitem", scope: !7856, file: !3, line: 3155, type: !2308)
!7864 = !DILocation(line: 3155, column: 16, scope: !7856)
!7865 = !DILocation(line: 3157, column: 10, scope: !7856)
!7866 = !DILocation(line: 3157, column: 8, scope: !7856)
!7867 = !DILocation(line: 3158, column: 2, scope: !7856)
!7868 = !DILocation(line: 3158, column: 9, scope: !7856)
!7869 = !DILocation(line: 3158, column: 14, scope: !7856)
!7870 = !DILocation(line: 3158, column: 19, scope: !7856)
!7871 = !DILocation(line: 3159, column: 15, scope: !7856)
!7872 = !DILocation(line: 3159, column: 2, scope: !7856)
!7873 = !DILocation(line: 3159, column: 9, scope: !7856)
!7874 = !DILocation(line: 3159, column: 13, scope: !7856)
!7875 = !DILocation(line: 3160, column: 15, scope: !7856)
!7876 = !DILocation(line: 3160, column: 23, scope: !7856)
!7877 = !DILocation(line: 3160, column: 30, scope: !7856)
!7878 = !DILocation(line: 3160, column: 2, scope: !7856)
!7879 = !DILocation(line: 3162, column: 6, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 3162, column: 6)
!7881 = !DILocation(line: 3162, column: 14, scope: !7880)
!7882 = !DILocation(line: 3162, column: 6, scope: !7856)
!7883 = !DILocation(line: 3163, column: 18, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 3162, column: 23)
!7885 = !DILocation(line: 3163, column: 26, scope: !7884)
!7886 = !DILocation(line: 3163, column: 3, scope: !7884)
!7887 = !DILocation(line: 3163, column: 8, scope: !7884)
!7888 = !DILocation(line: 3163, column: 16, scope: !7884)
!7889 = !DILocation(line: 3164, column: 3, scope: !7884)
!7890 = !DILocation(line: 3164, column: 8, scope: !7884)
!7891 = !DILocation(line: 3164, column: 17, scope: !7884)
!7892 = !DILocation(line: 3164, column: 22, scope: !7884)
!7893 = !DILocation(line: 3165, column: 2, scope: !7884)
!7894 = !DILocation(line: 3166, column: 1, scope: !7856)
!7895 = distinct !DISubprogram(name: "uiLayoutSetOperatorContext", scope: !3, file: !3, line: 3168, type: !7896, scopeLine: 3169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{null, !1113, !1100}
!7898 = !DILocalVariable(name: "layout", arg: 1, scope: !7895, file: !3, line: 3168, type: !1113)
!7899 = !DILocation(line: 3168, column: 43, scope: !7895)
!7900 = !DILocalVariable(name: "opcontext", arg: 2, scope: !7895, file: !3, line: 3168, type: !1100)
!7901 = !DILocation(line: 3168, column: 55, scope: !7895)
!7902 = !DILocation(line: 3170, column: 28, scope: !7895)
!7903 = !DILocation(line: 3170, column: 2, scope: !7895)
!7904 = !DILocation(line: 3170, column: 10, scope: !7895)
!7905 = !DILocation(line: 3170, column: 16, scope: !7895)
!7906 = !DILocation(line: 3170, column: 26, scope: !7895)
!7907 = !DILocation(line: 3171, column: 1, scope: !7895)
!7908 = distinct !DISubprogram(name: "uiLayoutSetFunc", scope: !3, file: !3, line: 3173, type: !7909, scopeLine: 3174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{null, !1113, !1140, !1112}
!7911 = !DILocalVariable(name: "layout", arg: 1, scope: !7908, file: !3, line: 3173, type: !1113)
!7912 = !DILocation(line: 3173, column: 32, scope: !7908)
!7913 = !DILocalVariable(name: "handlefunc", arg: 2, scope: !7908, file: !3, line: 3173, type: !1140)
!7914 = !DILocation(line: 3173, column: 57, scope: !7908)
!7915 = !DILocalVariable(name: "argv", arg: 3, scope: !7908, file: !3, line: 3173, type: !1112)
!7916 = !DILocation(line: 3173, column: 75, scope: !7908)
!7917 = !DILocation(line: 3175, column: 29, scope: !7908)
!7918 = !DILocation(line: 3175, column: 2, scope: !7908)
!7919 = !DILocation(line: 3175, column: 10, scope: !7908)
!7920 = !DILocation(line: 3175, column: 16, scope: !7908)
!7921 = !DILocation(line: 3175, column: 27, scope: !7908)
!7922 = !DILocation(line: 3176, column: 23, scope: !7908)
!7923 = !DILocation(line: 3176, column: 2, scope: !7908)
!7924 = !DILocation(line: 3176, column: 10, scope: !7908)
!7925 = !DILocation(line: 3176, column: 16, scope: !7908)
!7926 = !DILocation(line: 3176, column: 21, scope: !7908)
!7927 = !DILocation(line: 3177, column: 1, scope: !7908)
!7928 = distinct !DISubprogram(name: "uiBlockLayoutResolve", scope: !3, file: !3, line: 3179, type: !7929, scopeLine: 3180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7929 = !DISubroutineType(types: !7930)
!7930 = !{null, !1197, !4313, !4313}
!7931 = !DILocalVariable(name: "block", arg: 1, scope: !7928, file: !3, line: 3179, type: !1197)
!7932 = !DILocation(line: 3179, column: 36, scope: !7928)
!7933 = !DILocalVariable(name: "x", arg: 2, scope: !7928, file: !3, line: 3179, type: !4313)
!7934 = !DILocation(line: 3179, column: 48, scope: !7928)
!7935 = !DILocalVariable(name: "y", arg: 3, scope: !7928, file: !3, line: 3179, type: !4313)
!7936 = !DILocation(line: 3179, column: 56, scope: !7928)
!7937 = !DILocalVariable(name: "root", scope: !7928, file: !3, line: 3181, type: !1127)
!7938 = !DILocation(line: 3181, column: 16, scope: !7928)
!7939 = !DILocation(line: 3185, column: 6, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 3185, column: 6)
!7941 = !DILocation(line: 3185, column: 6, scope: !7928)
!7942 = !DILocation(line: 3185, column: 10, scope: !7940)
!7943 = !DILocation(line: 3185, column: 12, scope: !7940)
!7944 = !DILocation(line: 3185, column: 9, scope: !7940)
!7945 = !DILocation(line: 3186, column: 6, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 3186, column: 6)
!7947 = !DILocation(line: 3186, column: 6, scope: !7928)
!7948 = !DILocation(line: 3186, column: 10, scope: !7946)
!7949 = !DILocation(line: 3186, column: 12, scope: !7946)
!7950 = !DILocation(line: 3186, column: 9, scope: !7946)
!7951 = !DILocation(line: 3188, column: 2, scope: !7928)
!7952 = !DILocation(line: 3188, column: 9, scope: !7928)
!7953 = !DILocation(line: 3188, column: 19, scope: !7928)
!7954 = !DILocation(line: 3190, column: 14, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 3190, column: 2)
!7956 = !DILocation(line: 3190, column: 21, scope: !7955)
!7957 = !DILocation(line: 3190, column: 29, scope: !7955)
!7958 = !DILocation(line: 3190, column: 12, scope: !7955)
!7959 = !DILocation(line: 3190, column: 7, scope: !7955)
!7960 = !DILocation(line: 3190, column: 36, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 3190, column: 2)
!7962 = !DILocation(line: 3190, column: 2, scope: !7955)
!7963 = !DILocation(line: 3191, column: 32, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 3190, column: 61)
!7965 = !DILocation(line: 3191, column: 3, scope: !7964)
!7966 = !DILocation(line: 3194, column: 17, scope: !7964)
!7967 = !DILocation(line: 3194, column: 24, scope: !7964)
!7968 = !DILocation(line: 3194, column: 30, scope: !7964)
!7969 = !DILocation(line: 3194, column: 38, scope: !7964)
!7970 = !DILocation(line: 3194, column: 41, scope: !7964)
!7971 = !DILocation(line: 3194, column: 3, scope: !7964)
!7972 = !DILocation(line: 3195, column: 18, scope: !7964)
!7973 = !DILocation(line: 3195, column: 24, scope: !7964)
!7974 = !DILocation(line: 3195, column: 3, scope: !7964)
!7975 = !DILocation(line: 3196, column: 2, scope: !7964)
!7976 = !DILocation(line: 3190, column: 49, scope: !7961)
!7977 = !DILocation(line: 3190, column: 55, scope: !7961)
!7978 = !DILocation(line: 3190, column: 47, scope: !7961)
!7979 = !DILocation(line: 3190, column: 2, scope: !7961)
!7980 = distinct !{!7980, !7962, !7981}
!7981 = !DILocation(line: 3196, column: 2, scope: !7955)
!7982 = !DILocation(line: 3198, column: 17, scope: !7928)
!7983 = !DILocation(line: 3198, column: 24, scope: !7928)
!7984 = !DILocation(line: 3198, column: 2, scope: !7928)
!7985 = !DILocation(line: 3203, column: 3, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 3202, column: 2)
!7987 = !DILocation(line: 3205, column: 1, scope: !7928)
!7988 = distinct !DISubprogram(name: "ui_layout_end", scope: !3, file: !3, line: 3052, type: !7989, scopeLine: 3053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{null, !1197, !1113, !4313, !4313}
!7991 = !DILocalVariable(name: "block", arg: 1, scope: !7988, file: !3, line: 3052, type: !1197)
!7992 = !DILocation(line: 3052, column: 36, scope: !7988)
!7993 = !DILocalVariable(name: "layout", arg: 2, scope: !7988, file: !3, line: 3052, type: !1113)
!7994 = !DILocation(line: 3052, column: 53, scope: !7988)
!7995 = !DILocalVariable(name: "x", arg: 3, scope: !7988, file: !3, line: 3052, type: !4313)
!7996 = !DILocation(line: 3052, column: 66, scope: !7988)
!7997 = !DILocalVariable(name: "y", arg: 4, scope: !7988, file: !3, line: 3052, type: !4313)
!7998 = !DILocation(line: 3052, column: 74, scope: !7988)
!7999 = !DILocation(line: 3054, column: 6, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 3054, column: 6)
!8001 = !DILocation(line: 3054, column: 14, scope: !8000)
!8002 = !DILocation(line: 3054, column: 20, scope: !8000)
!8003 = !DILocation(line: 3054, column: 6, scope: !7988)
!8004 = !DILocation(line: 3055, column: 24, scope: !8000)
!8005 = !DILocation(line: 3055, column: 31, scope: !8000)
!8006 = !DILocation(line: 3055, column: 39, scope: !8000)
!8007 = !DILocation(line: 3055, column: 45, scope: !8000)
!8008 = !DILocation(line: 3055, column: 57, scope: !8000)
!8009 = !DILocation(line: 3055, column: 65, scope: !8000)
!8010 = !DILocation(line: 3055, column: 71, scope: !8000)
!8011 = !DILocation(line: 3055, column: 3, scope: !8000)
!8012 = !DILocation(line: 3057, column: 20, scope: !7988)
!8013 = !DILocation(line: 3057, column: 28, scope: !7988)
!8014 = !DILocation(line: 3057, column: 2, scope: !7988)
!8015 = !DILocation(line: 3058, column: 18, scope: !7988)
!8016 = !DILocation(line: 3058, column: 26, scope: !7988)
!8017 = !DILocation(line: 3058, column: 2, scope: !7988)
!8018 = !DILocation(line: 3060, column: 6, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 3060, column: 6)
!8020 = !DILocation(line: 3060, column: 6, scope: !7988)
!8021 = !DILocation(line: 3060, column: 14, scope: !8019)
!8022 = !DILocation(line: 3060, column: 22, scope: !8019)
!8023 = !DILocation(line: 3060, column: 10, scope: !8019)
!8024 = !DILocation(line: 3060, column: 12, scope: !8019)
!8025 = !DILocation(line: 3060, column: 9, scope: !8019)
!8026 = !DILocation(line: 3061, column: 6, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 3061, column: 6)
!8028 = !DILocation(line: 3061, column: 6, scope: !7988)
!8029 = !DILocation(line: 3061, column: 14, scope: !8027)
!8030 = !DILocation(line: 3061, column: 22, scope: !8027)
!8031 = !DILocation(line: 3061, column: 10, scope: !8027)
!8032 = !DILocation(line: 3061, column: 12, scope: !8027)
!8033 = !DILocation(line: 3061, column: 9, scope: !8027)
!8034 = !DILocation(line: 3062, column: 1, scope: !7988)
!8035 = distinct !DISubprogram(name: "ui_layout_free", scope: !3, file: !3, line: 3064, type: !3469, scopeLine: 3065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8036 = !DILocalVariable(name: "layout", arg: 1, scope: !8035, file: !3, line: 3064, type: !1113)
!8037 = !DILocation(line: 3064, column: 38, scope: !8035)
!8038 = !DILocalVariable(name: "item", scope: !8035, file: !3, line: 3066, type: !3181)
!8039 = !DILocation(line: 3066, column: 10, scope: !8035)
!8040 = !DILocalVariable(name: "next", scope: !8035, file: !3, line: 3066, type: !3181)
!8041 = !DILocation(line: 3066, column: 17, scope: !8035)
!8042 = !DILocation(line: 3068, column: 14, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 3068, column: 2)
!8044 = !DILocation(line: 3068, column: 22, scope: !8043)
!8045 = !DILocation(line: 3068, column: 28, scope: !8043)
!8046 = !DILocation(line: 3068, column: 12, scope: !8043)
!8047 = !DILocation(line: 3068, column: 7, scope: !8043)
!8048 = !DILocation(line: 3068, column: 35, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 3068, column: 2)
!8050 = !DILocation(line: 3068, column: 2, scope: !8043)
!8051 = !DILocation(line: 3069, column: 10, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 3068, column: 54)
!8053 = !DILocation(line: 3069, column: 16, scope: !8052)
!8054 = !DILocation(line: 3069, column: 8, scope: !8052)
!8055 = !DILocation(line: 3071, column: 7, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 3071, column: 7)
!8057 = !DILocation(line: 3071, column: 13, scope: !8056)
!8058 = !DILocation(line: 3071, column: 18, scope: !8056)
!8059 = !DILocation(line: 3071, column: 7, scope: !8052)
!8060 = !DILocation(line: 3072, column: 4, scope: !8056)
!8061 = !DILocation(line: 3072, column: 14, scope: !8056)
!8062 = !DILocation(line: 3074, column: 31, scope: !8056)
!8063 = !DILocation(line: 3074, column: 19, scope: !8056)
!8064 = !DILocation(line: 3074, column: 4, scope: !8056)
!8065 = !DILocation(line: 3075, column: 2, scope: !8052)
!8066 = !DILocation(line: 3068, column: 48, scope: !8049)
!8067 = !DILocation(line: 3068, column: 46, scope: !8049)
!8068 = !DILocation(line: 3068, column: 2, scope: !8049)
!8069 = distinct !{!8069, !8050, !8070}
!8070 = !DILocation(line: 3075, column: 2, scope: !8043)
!8071 = !DILocation(line: 3077, column: 2, scope: !8035)
!8072 = !DILocation(line: 3077, column: 12, scope: !8035)
!8073 = !DILocation(line: 3078, column: 1, scope: !8035)
!8074 = distinct !DISubprogram(name: "uiLayoutSetContextPointer", scope: !3, file: !3, line: 3207, type: !8075, scopeLine: 3208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{null, !1113, !1380, !2343}
!8077 = !DILocalVariable(name: "layout", arg: 1, scope: !8074, file: !3, line: 3207, type: !1113)
!8078 = !DILocation(line: 3207, column: 42, scope: !8074)
!8079 = !DILocalVariable(name: "name", arg: 2, scope: !8074, file: !3, line: 3207, type: !1380)
!8080 = !DILocation(line: 3207, column: 62, scope: !8074)
!8081 = !DILocalVariable(name: "ptr", arg: 3, scope: !8074, file: !3, line: 3207, type: !2343)
!8082 = !DILocation(line: 3207, column: 80, scope: !8074)
!8083 = !DILocalVariable(name: "block", scope: !8074, file: !3, line: 3209, type: !1197)
!8084 = !DILocation(line: 3209, column: 11, scope: !8074)
!8085 = !DILocation(line: 3209, column: 19, scope: !8074)
!8086 = !DILocation(line: 3209, column: 27, scope: !8074)
!8087 = !DILocation(line: 3209, column: 33, scope: !8074)
!8088 = !DILocation(line: 3210, column: 35, scope: !8074)
!8089 = !DILocation(line: 3210, column: 42, scope: !8074)
!8090 = !DILocation(line: 3210, column: 52, scope: !8074)
!8091 = !DILocation(line: 3210, column: 58, scope: !8074)
!8092 = !DILocation(line: 3210, column: 20, scope: !8074)
!8093 = !DILocation(line: 3210, column: 2, scope: !8074)
!8094 = !DILocation(line: 3210, column: 10, scope: !8074)
!8095 = !DILocation(line: 3210, column: 18, scope: !8074)
!8096 = !DILocation(line: 3211, column: 1, scope: !8074)
!8097 = distinct !DISubprogram(name: "uiLayoutContextCopy", scope: !3, file: !3, line: 3213, type: !8098, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8098 = !DISubroutineType(types: !8099)
!8099 = !{null, !1113, !2008}
!8100 = !DILocalVariable(name: "layout", arg: 1, scope: !8097, file: !3, line: 3213, type: !1113)
!8101 = !DILocation(line: 3213, column: 36, scope: !8097)
!8102 = !DILocalVariable(name: "context", arg: 2, scope: !8097, file: !3, line: 3213, type: !2008)
!8103 = !DILocation(line: 3213, column: 59, scope: !8097)
!8104 = !DILocalVariable(name: "block", scope: !8097, file: !3, line: 3215, type: !1197)
!8105 = !DILocation(line: 3215, column: 11, scope: !8097)
!8106 = !DILocation(line: 3215, column: 19, scope: !8097)
!8107 = !DILocation(line: 3215, column: 27, scope: !8097)
!8108 = !DILocation(line: 3215, column: 33, scope: !8097)
!8109 = !DILocation(line: 3216, column: 39, scope: !8097)
!8110 = !DILocation(line: 3216, column: 46, scope: !8097)
!8111 = !DILocation(line: 3216, column: 56, scope: !8097)
!8112 = !DILocation(line: 3216, column: 20, scope: !8097)
!8113 = !DILocation(line: 3216, column: 2, scope: !8097)
!8114 = !DILocation(line: 3216, column: 10, scope: !8097)
!8115 = !DILocation(line: 3216, column: 18, scope: !8097)
!8116 = !DILocation(line: 3217, column: 1, scope: !8097)
!8117 = distinct !DISubprogram(name: "uiLayoutIntrospect", scope: !3, file: !3, line: 3291, type: !8118, scopeLine: 3292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!1380, !1113}
!8120 = !DILocalVariable(name: "layout", arg: 1, scope: !8117, file: !3, line: 3291, type: !1113)
!8121 = !DILocation(line: 3291, column: 42, scope: !8117)
!8122 = !DILocalVariable(name: "ds", scope: !8117, file: !3, line: 3293, type: !8123)
!8123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8124, size: 64)
!8124 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynStr", file: !8125, line: 48, baseType: !8126)
!8125 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dynstr.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8126 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynStr", file: !8125, line: 45, flags: DIFlagFwdDecl)
!8127 = !DILocation(line: 3293, column: 10, scope: !8117)
!8128 = !DILocation(line: 3293, column: 15, scope: !8117)
!8129 = !DILocation(line: 3295, column: 6, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 3295, column: 6)
!8131 = !DILocation(line: 3295, column: 6, scope: !8117)
!8132 = !DILocation(line: 3296, column: 3, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 3295, column: 11)
!8134 = !DILocation(line: 3296, column: 13, scope: !8133)
!8135 = !DILocation(line: 3297, column: 2, scope: !8133)
!8136 = !DILocation(line: 3299, column: 20, scope: !8117)
!8137 = !DILocation(line: 3299, column: 24, scope: !8117)
!8138 = !DILocation(line: 3299, column: 2, scope: !8117)
!8139 = !DILocation(line: 3301, column: 31, scope: !8117)
!8140 = !DILocation(line: 3301, column: 8, scope: !8117)
!8141 = !DILocation(line: 3301, column: 6, scope: !8117)
!8142 = !DILocation(line: 3302, column: 18, scope: !8117)
!8143 = !DILocation(line: 3302, column: 2, scope: !8117)
!8144 = !DILocation(line: 3304, column: 9, scope: !8117)
!8145 = !DILocation(line: 3304, column: 2, scope: !8117)
!8146 = distinct !DISubprogram(name: "ui_intro_uiLayout", scope: !3, file: !3, line: 3285, type: !8147, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8147 = !DISubroutineType(types: !8148)
!8148 = !{null, !8123, !1113}
!8149 = !DILocalVariable(name: "ds", arg: 1, scope: !8146, file: !3, line: 3285, type: !8123)
!8150 = !DILocation(line: 3285, column: 39, scope: !8146)
!8151 = !DILocalVariable(name: "layout", arg: 2, scope: !8146, file: !3, line: 3285, type: !1113)
!8152 = !DILocation(line: 3285, column: 53, scope: !8146)
!8153 = !DILocation(line: 3287, column: 17, scope: !8146)
!8154 = !DILocation(line: 3287, column: 22, scope: !8146)
!8155 = !DILocation(line: 3287, column: 30, scope: !8146)
!8156 = !DILocation(line: 3287, column: 2, scope: !8146)
!8157 = !DILocation(line: 3288, column: 1, scope: !8146)
!8158 = distinct !DISubprogram(name: "uiLayoutOperatorButs", scope: !3, file: !3, line: 3315, type: !8159, scopeLine: 3318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8159 = !DISubroutineType(types: !8160)
!8160 = !{null, !2341, !1113, !8161, !8163, !1381, !8166}
!8161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8162, size: 64)
!8162 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !1486, line: 348, baseType: !1905)
!8163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8164, size: 64)
!8164 = !DISubroutineType(types: !8165)
!8165 = !{!1413, !1259, !2263}
!8166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!8167 = !DILocalVariable(name: "C", arg: 1, scope: !8158, file: !3, line: 3315, type: !2341)
!8168 = !DILocation(line: 3315, column: 43, scope: !8158)
!8169 = !DILocalVariable(name: "layout", arg: 2, scope: !8158, file: !3, line: 3315, type: !1113)
!8170 = !DILocation(line: 3315, column: 56, scope: !8158)
!8171 = !DILocalVariable(name: "op", arg: 3, scope: !8158, file: !3, line: 3315, type: !8161)
!8172 = !DILocation(line: 3315, column: 76, scope: !8158)
!8173 = !DILocalVariable(name: "check_prop", arg: 4, scope: !8158, file: !3, line: 3316, type: !8163)
!8174 = !DILocation(line: 3316, column: 34, scope: !8158)
!8175 = !DILocalVariable(name: "label_align", arg: 5, scope: !8158, file: !3, line: 3317, type: !1381)
!8176 = !DILocation(line: 3317, column: 38, scope: !8158)
!8177 = !DILocalVariable(name: "flag", arg: 6, scope: !8158, file: !3, line: 3317, type: !8166)
!8178 = !DILocation(line: 3317, column: 63, scope: !8158)
!8179 = !DILocation(line: 3319, column: 7, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 3319, column: 6)
!8181 = !DILocation(line: 3319, column: 11, scope: !8180)
!8182 = !DILocation(line: 3319, column: 6, scope: !8158)
!8183 = !DILocalVariable(name: "val", scope: !8184, file: !3, line: 3320, type: !2591)
!8184 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 3319, column: 23)
!8185 = !DILocation(line: 3320, column: 22, scope: !8184)
!8186 = !DILocation(line: 3321, column: 20, scope: !8184)
!8187 = !DILocation(line: 3321, column: 3, scope: !8184)
!8188 = !DILocation(line: 3321, column: 7, scope: !8184)
!8189 = !DILocation(line: 3321, column: 18, scope: !8184)
!8190 = !DILocation(line: 3322, column: 2, scope: !8184)
!8191 = !DILocation(line: 3324, column: 6, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 3324, column: 6)
!8193 = !DILocation(line: 3324, column: 11, scope: !8192)
!8194 = !DILocation(line: 3324, column: 6, scope: !8158)
!8195 = !DILocation(line: 3325, column: 11, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 3324, column: 38)
!8197 = !DILocation(line: 3325, column: 38, scope: !8196)
!8198 = !DILocation(line: 3325, column: 42, scope: !8196)
!8199 = !DILocation(line: 3325, column: 48, scope: !8196)
!8200 = !DILocation(line: 3325, column: 19, scope: !8196)
!8201 = !DILocation(line: 3325, column: 3, scope: !8196)
!8202 = !DILocation(line: 3326, column: 2, scope: !8196)
!8203 = !DILocation(line: 3330, column: 32, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 3330, column: 6)
!8205 = !DILocation(line: 3330, column: 35, scope: !8204)
!8206 = !DILocation(line: 3330, column: 7, scope: !8204)
!8207 = !DILocation(line: 3330, column: 6, scope: !8158)
!8208 = !DILocation(line: 3331, column: 38, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 3330, column: 40)
!8210 = !DILocation(line: 3331, column: 21, scope: !8209)
!8211 = !DILocation(line: 3331, column: 3, scope: !8209)
!8212 = !DILocation(line: 3334, column: 11, scope: !8209)
!8213 = !DILocation(line: 3334, column: 3, scope: !8209)
!8214 = !DILocation(line: 3335, column: 2, scope: !8209)
!8215 = !DILocation(line: 3338, column: 6, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 3338, column: 6)
!8217 = !DILocation(line: 3338, column: 10, scope: !8216)
!8218 = !DILocation(line: 3338, column: 16, scope: !8216)
!8219 = !DILocation(line: 3338, column: 21, scope: !8216)
!8220 = !DILocation(line: 3338, column: 6, scope: !8158)
!8221 = !DILocalVariable(name: "op_ptr", scope: !8222, file: !3, line: 3340, type: !2307)
!8222 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 3338, column: 38)
!8223 = !DILocation(line: 3340, column: 14, scope: !8222)
!8224 = !DILocalVariable(name: "row", scope: !8222, file: !3, line: 3341, type: !1113)
!8225 = !DILocation(line: 3341, column: 13, scope: !8222)
!8226 = !DILocation(line: 3343, column: 43, scope: !8222)
!8227 = !DILocation(line: 3343, column: 20, scope: !8222)
!8228 = !DILocation(line: 3343, column: 3, scope: !8222)
!8229 = !DILocation(line: 3343, column: 29, scope: !8222)
!8230 = !DILocation(line: 3343, column: 41, scope: !8222)
!8231 = !DILocation(line: 3345, column: 21, scope: !8222)
!8232 = !DILocation(line: 3345, column: 9, scope: !8222)
!8233 = !DILocation(line: 3345, column: 7, scope: !8222)
!8234 = !DILocation(line: 3346, column: 11, scope: !8222)
!8235 = !DILocation(line: 3346, column: 28, scope: !8222)
!8236 = !DILocation(line: 3346, column: 3, scope: !8222)
!8237 = !DILocation(line: 3348, column: 3, scope: !8222)
!8238 = !DILocation(line: 3349, column: 39, scope: !8222)
!8239 = !DILocation(line: 3349, column: 43, scope: !8222)
!8240 = !DILocation(line: 3349, column: 49, scope: !8222)
!8241 = !DILocation(line: 3349, column: 3, scope: !8222)
!8242 = !DILocation(line: 3350, column: 15, scope: !8222)
!8243 = !DILocation(line: 3350, column: 73, scope: !8222)
!8244 = !DILocation(line: 3350, column: 66, scope: !8222)
!8245 = !DILocation(line: 3350, column: 3, scope: !8222)
!8246 = !DILocation(line: 3352, column: 3, scope: !8222)
!8247 = !DILocation(line: 3353, column: 39, scope: !8222)
!8248 = !DILocation(line: 3353, column: 43, scope: !8222)
!8249 = !DILocation(line: 3353, column: 49, scope: !8222)
!8250 = !DILocation(line: 3353, column: 3, scope: !8222)
!8251 = !DILocation(line: 3354, column: 3, scope: !8222)
!8252 = !DILocation(line: 3355, column: 15, scope: !8222)
!8253 = !DILocation(line: 3355, column: 74, scope: !8222)
!8254 = !DILocation(line: 3355, column: 67, scope: !8222)
!8255 = !DILocation(line: 3355, column: 3, scope: !8222)
!8256 = !DILocation(line: 3356, column: 2, scope: !8222)
!8257 = !DILocation(line: 3358, column: 6, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 3358, column: 6)
!8259 = !DILocation(line: 3358, column: 10, scope: !8258)
!8260 = !DILocation(line: 3358, column: 16, scope: !8258)
!8261 = !DILocation(line: 3358, column: 6, scope: !8158)
!8262 = !DILocation(line: 3359, column: 16, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 3358, column: 20)
!8264 = !DILocation(line: 3359, column: 3, scope: !8263)
!8265 = !DILocation(line: 3359, column: 7, scope: !8263)
!8266 = !DILocation(line: 3359, column: 14, scope: !8263)
!8267 = !DILocation(line: 3360, column: 3, scope: !8263)
!8268 = !DILocation(line: 3360, column: 7, scope: !8263)
!8269 = !DILocation(line: 3360, column: 13, scope: !8263)
!8270 = !DILocation(line: 3360, column: 28, scope: !8263)
!8271 = !DILocation(line: 3360, column: 31, scope: !8263)
!8272 = !DILocation(line: 3361, column: 3, scope: !8263)
!8273 = !DILocation(line: 3361, column: 7, scope: !8263)
!8274 = !DILocation(line: 3361, column: 14, scope: !8263)
!8275 = !DILocation(line: 3364, column: 2, scope: !8263)
!8276 = !DILocalVariable(name: "wm", scope: !8277, file: !3, line: 3366, type: !8278)
!8277 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 3365, column: 7)
!8278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8279, size: 64)
!8279 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !1486, line: 160, baseType: !1659)
!8280 = !DILocation(line: 3366, column: 20, scope: !8277)
!8281 = !DILocation(line: 3366, column: 40, scope: !8277)
!8282 = !DILocation(line: 3366, column: 25, scope: !8277)
!8283 = !DILocalVariable(name: "ptr", scope: !8277, file: !3, line: 3367, type: !2307)
!8284 = !DILocation(line: 3367, column: 14, scope: !8277)
!8285 = !DILocalVariable(name: "empty", scope: !8277, file: !3, line: 3368, type: !1100)
!8286 = !DILocation(line: 3368, column: 7, scope: !8277)
!8287 = !DILocation(line: 3370, column: 23, scope: !8277)
!8288 = !DILocation(line: 3370, column: 27, scope: !8277)
!8289 = !DILocation(line: 3370, column: 31, scope: !8277)
!8290 = !DILocation(line: 3370, column: 35, scope: !8277)
!8291 = !DILocation(line: 3370, column: 41, scope: !8277)
!8292 = !DILocation(line: 3370, column: 47, scope: !8277)
!8293 = !DILocation(line: 3370, column: 51, scope: !8277)
!8294 = !DILocation(line: 3370, column: 3, scope: !8277)
!8295 = !DILocation(line: 3373, column: 28, scope: !8277)
!8296 = !DILocation(line: 3373, column: 42, scope: !8277)
!8297 = !DILocation(line: 3373, column: 54, scope: !8277)
!8298 = !DILocation(line: 3373, column: 11, scope: !8277)
!8299 = !DILocation(line: 3373, column: 67, scope: !8277)
!8300 = !DILocation(line: 3373, column: 9, scope: !8277)
!8301 = !DILocation(line: 3375, column: 7, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 3375, column: 7)
!8303 = !DILocation(line: 3375, column: 13, scope: !8302)
!8304 = !DILocation(line: 3375, column: 17, scope: !8302)
!8305 = !DILocation(line: 3375, column: 22, scope: !8302)
!8306 = !DILocation(line: 3375, column: 7, scope: !8277)
!8307 = !DILocation(line: 3376, column: 12, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3375, column: 50)
!8309 = !DILocation(line: 3376, column: 4, scope: !8308)
!8310 = !DILocation(line: 3377, column: 3, scope: !8308)
!8311 = !DILocalVariable(name: "block", scope: !8312, file: !3, line: 3399, type: !1197)
!8312 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 3398, column: 2)
!8313 = !DILocation(line: 3399, column: 12, scope: !8312)
!8314 = !DILocation(line: 3399, column: 37, scope: !8312)
!8315 = !DILocation(line: 3399, column: 20, scope: !8312)
!8316 = !DILocalVariable(name: "is_popup", scope: !8312, file: !3, line: 3400, type: !2935)
!8317 = !DILocation(line: 3400, column: 14, scope: !8312)
!8318 = !DILocation(line: 3400, column: 26, scope: !8312)
!8319 = !DILocation(line: 3400, column: 33, scope: !8312)
!8320 = !DILocation(line: 3400, column: 38, scope: !8312)
!8321 = !DILocation(line: 3400, column: 60, scope: !8312)
!8322 = !DILocation(line: 3400, column: 25, scope: !8312)
!8323 = !DILocalVariable(name: "but", scope: !8312, file: !3, line: 3401, type: !2159)
!8324 = !DILocation(line: 3401, column: 10, scope: !8312)
!8325 = !DILocation(line: 3404, column: 14, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 3404, column: 3)
!8327 = !DILocation(line: 3404, column: 21, scope: !8326)
!8328 = !DILocation(line: 3404, column: 29, scope: !8326)
!8329 = !DILocation(line: 3404, column: 12, scope: !8326)
!8330 = !DILocation(line: 3404, column: 8, scope: !8326)
!8331 = !DILocation(line: 3404, column: 36, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 3404, column: 3)
!8333 = !DILocation(line: 3404, column: 3, scope: !8326)
!8334 = !DILocation(line: 3406, column: 19, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8332, file: !3, line: 3404, column: 58)
!8336 = !DILocation(line: 3406, column: 4, scope: !8335)
!8337 = !DILocation(line: 3413, column: 8, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 3413, column: 8)
!8339 = !DILocation(line: 3413, column: 8, scope: !8335)
!8340 = !DILocation(line: 3414, column: 10, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 3414, column: 9)
!8342 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 3413, column: 18)
!8343 = !DILocation(line: 3414, column: 15, scope: !8341)
!8344 = !DILocation(line: 3414, column: 26, scope: !8341)
!8345 = !DILocation(line: 3414, column: 30, scope: !8341)
!8346 = !DILocation(line: 3414, column: 36, scope: !8341)
!8347 = !DILocation(line: 3414, column: 23, scope: !8341)
!8348 = !DILocation(line: 3414, column: 42, scope: !8341)
!8349 = !DILocation(line: 3414, column: 46, scope: !8341)
!8350 = !DILocation(line: 3414, column: 51, scope: !8341)
!8351 = !DILocation(line: 3414, column: 56, scope: !8341)
!8352 = !DILocation(line: 3414, column: 9, scope: !8342)
!8353 = !DILocation(line: 3415, column: 41, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 3414, column: 65)
!8355 = !DILocation(line: 3415, column: 27, scope: !8354)
!8356 = !DILocation(line: 3415, column: 45, scope: !8354)
!8357 = !DILocation(line: 3415, column: 6, scope: !8354)
!8358 = !DILocation(line: 3416, column: 5, scope: !8354)
!8359 = !DILocation(line: 3417, column: 4, scope: !8342)
!8360 = !DILocation(line: 3418, column: 3, scope: !8335)
!8361 = !DILocation(line: 3404, column: 47, scope: !8332)
!8362 = !DILocation(line: 3404, column: 52, scope: !8332)
!8363 = !DILocation(line: 3404, column: 45, scope: !8332)
!8364 = !DILocation(line: 3404, column: 3, scope: !8332)
!8365 = distinct !{!8365, !8333, !8366}
!8366 = !DILocation(line: 3418, column: 3, scope: !8326)
!8367 = !DILocation(line: 3420, column: 1, scope: !8158)
!8368 = distinct !DISubprogram(name: "uiButGetMenuType", scope: !3, file: !3, line: 3423, type: !8369, scopeLine: 3424, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8369 = !DISubroutineType(types: !8370)
!8370 = !{!2037, !2159}
!8371 = !DILocalVariable(name: "but", arg: 1, scope: !8368, file: !3, line: 3423, type: !2159)
!8372 = !DILocation(line: 3423, column: 35, scope: !8368)
!8373 = !DILocation(line: 3425, column: 6, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 3425, column: 6)
!8375 = !DILocation(line: 3425, column: 11, scope: !8374)
!8376 = !DILocation(line: 3425, column: 28, scope: !8374)
!8377 = !DILocation(line: 3425, column: 6, scope: !8368)
!8378 = !DILocation(line: 3426, column: 22, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 3425, column: 54)
!8380 = !DILocation(line: 3426, column: 27, scope: !8379)
!8381 = !DILocation(line: 3426, column: 10, scope: !8379)
!8382 = !DILocation(line: 3426, column: 3, scope: !8379)
!8383 = !DILocation(line: 3429, column: 3, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 3428, column: 7)
!8385 = !DILocation(line: 3431, column: 1, scope: !8368)
!8386 = distinct !DISubprogram(name: "ui_layout_vary_direction", scope: !3, file: !3, line: 220, type: !7654, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8387 = !DILocalVariable(name: "layout", arg: 1, scope: !8386, file: !3, line: 220, type: !1113)
!8388 = !DILocation(line: 220, column: 47, scope: !8386)
!8389 = !DILocation(line: 222, column: 11, scope: !8386)
!8390 = !DILocation(line: 222, column: 73, scope: !8386)
!8391 = !DILocation(line: 223, column: 11, scope: !8386)
!8392 = !DILocation(line: 223, column: 19, scope: !8386)
!8393 = !DILocation(line: 223, column: 29, scope: !8386)
!8394 = !DILocation(line: 222, column: 10, scope: !8386)
!8395 = !DILocation(line: 222, column: 2, scope: !8386)
!8396 = distinct !DISubprogram(name: "max_ii", scope: !8397, file: !8397, line: 215, type: !8398, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8397 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!1100, !1100, !1100}
!8400 = !DILocalVariable(name: "a", arg: 1, scope: !8396, file: !8397, line: 215, type: !1100)
!8401 = !DILocation(line: 215, column: 24, scope: !8396)
!8402 = !DILocalVariable(name: "b", arg: 2, scope: !8396, file: !8397, line: 215, type: !1100)
!8403 = !DILocation(line: 215, column: 31, scope: !8396)
!8404 = !DILocation(line: 217, column: 10, scope: !8396)
!8405 = !DILocation(line: 217, column: 14, scope: !8396)
!8406 = !DILocation(line: 217, column: 12, scope: !8396)
!8407 = !DILocation(line: 217, column: 9, scope: !8396)
!8408 = !DILocation(line: 217, column: 19, scope: !8396)
!8409 = !DILocation(line: 217, column: 23, scope: !8396)
!8410 = !DILocation(line: 217, column: 2, scope: !8396)
!8411 = distinct !DISubprogram(name: "ui_layer_but_cb", scope: !3, file: !3, line: 333, type: !8412, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8412 = !DISubroutineType(types: !8413)
!8413 = !{null, !2030, !1112, !1112}
!8414 = !DILocalVariable(name: "C", arg: 1, scope: !8411, file: !3, line: 333, type: !2030)
!8415 = !DILocation(line: 333, column: 39, scope: !8411)
!8416 = !DILocalVariable(name: "arg_but", arg: 2, scope: !8411, file: !3, line: 333, type: !1112)
!8417 = !DILocation(line: 333, column: 48, scope: !8411)
!8418 = !DILocalVariable(name: "arg_index", arg: 3, scope: !8411, file: !3, line: 333, type: !1112)
!8419 = !DILocation(line: 333, column: 63, scope: !8411)
!8420 = !DILocalVariable(name: "win", scope: !8411, file: !3, line: 335, type: !8421)
!8421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8422, size: 64)
!8422 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !1486, line: 209, baseType: !1485)
!8423 = !DILocation(line: 335, column: 12, scope: !8411)
!8424 = !DILocation(line: 335, column: 32, scope: !8411)
!8425 = !DILocation(line: 335, column: 18, scope: !8411)
!8426 = !DILocalVariable(name: "but", scope: !8411, file: !3, line: 336, type: !2159)
!8427 = !DILocation(line: 336, column: 9, scope: !8411)
!8428 = !DILocation(line: 336, column: 15, scope: !8411)
!8429 = !DILocalVariable(name: "cbut", scope: !8411, file: !3, line: 336, type: !2159)
!8430 = !DILocation(line: 336, column: 25, scope: !8411)
!8431 = !DILocalVariable(name: "ptr", scope: !8411, file: !3, line: 337, type: !2343)
!8432 = !DILocation(line: 337, column: 14, scope: !8411)
!8433 = !DILocation(line: 337, column: 21, scope: !8411)
!8434 = !DILocation(line: 337, column: 26, scope: !8411)
!8435 = !DILocalVariable(name: "prop", scope: !8411, file: !3, line: 338, type: !1946)
!8436 = !DILocation(line: 338, column: 15, scope: !8411)
!8437 = !DILocation(line: 338, column: 22, scope: !8411)
!8438 = !DILocation(line: 338, column: 27, scope: !8411)
!8439 = !DILocalVariable(name: "i", scope: !8411, file: !3, line: 339, type: !1100)
!8440 = !DILocation(line: 339, column: 6, scope: !8411)
!8441 = !DILocalVariable(name: "index", scope: !8411, file: !3, line: 339, type: !1100)
!8442 = !DILocation(line: 339, column: 9, scope: !8411)
!8443 = !DILocation(line: 339, column: 17, scope: !8411)
!8444 = !DILocalVariable(name: "shift", scope: !8411, file: !3, line: 340, type: !1100)
!8445 = !DILocation(line: 340, column: 6, scope: !8411)
!8446 = !DILocation(line: 340, column: 14, scope: !8411)
!8447 = !DILocation(line: 340, column: 19, scope: !8411)
!8448 = !DILocation(line: 340, column: 31, scope: !8411)
!8449 = !DILocalVariable(name: "len", scope: !8411, file: !3, line: 341, type: !1100)
!8450 = !DILocation(line: 341, column: 6, scope: !8411)
!8451 = !DILocation(line: 341, column: 38, scope: !8411)
!8452 = !DILocation(line: 341, column: 43, scope: !8411)
!8453 = !DILocation(line: 341, column: 12, scope: !8411)
!8454 = !DILocation(line: 343, column: 7, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 343, column: 6)
!8456 = !DILocation(line: 343, column: 6, scope: !8411)
!8457 = !DILocation(line: 344, column: 34, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 343, column: 14)
!8459 = !DILocation(line: 344, column: 39, scope: !8458)
!8460 = !DILocation(line: 344, column: 45, scope: !8458)
!8461 = !DILocation(line: 344, column: 3, scope: !8458)
!8462 = !DILocation(line: 346, column: 10, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 346, column: 3)
!8464 = !DILocation(line: 346, column: 8, scope: !8463)
!8465 = !DILocation(line: 346, column: 15, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 346, column: 3)
!8467 = !DILocation(line: 346, column: 19, scope: !8466)
!8468 = !DILocation(line: 346, column: 17, scope: !8466)
!8469 = !DILocation(line: 346, column: 3, scope: !8463)
!8470 = !DILocation(line: 347, column: 8, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 347, column: 8)
!8472 = !DILocation(line: 347, column: 13, scope: !8471)
!8473 = !DILocation(line: 347, column: 10, scope: !8471)
!8474 = !DILocation(line: 347, column: 8, scope: !8466)
!8475 = !DILocation(line: 348, column: 36, scope: !8471)
!8476 = !DILocation(line: 348, column: 41, scope: !8471)
!8477 = !DILocation(line: 348, column: 47, scope: !8471)
!8478 = !DILocation(line: 348, column: 5, scope: !8471)
!8479 = !DILocation(line: 346, column: 25, scope: !8466)
!8480 = !DILocation(line: 346, column: 3, scope: !8466)
!8481 = distinct !{!8481, !8469, !8482}
!8482 = !DILocation(line: 348, column: 51, scope: !8463)
!8483 = !DILocation(line: 350, column: 23, scope: !8458)
!8484 = !DILocation(line: 350, column: 26, scope: !8458)
!8485 = !DILocation(line: 350, column: 31, scope: !8458)
!8486 = !DILocation(line: 350, column: 3, scope: !8458)
!8487 = !DILocation(line: 352, column: 15, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 352, column: 3)
!8489 = !DILocation(line: 352, column: 20, scope: !8488)
!8490 = !DILocation(line: 352, column: 27, scope: !8488)
!8491 = !DILocation(line: 352, column: 35, scope: !8488)
!8492 = !DILocation(line: 352, column: 13, scope: !8488)
!8493 = !DILocation(line: 352, column: 8, scope: !8488)
!8494 = !DILocation(line: 352, column: 42, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 352, column: 3)
!8496 = !DILocation(line: 352, column: 3, scope: !8488)
!8497 = !DILocation(line: 353, column: 17, scope: !8495)
!8498 = !DILocation(line: 353, column: 4, scope: !8495)
!8499 = !DILocation(line: 352, column: 55, scope: !8495)
!8500 = !DILocation(line: 352, column: 61, scope: !8495)
!8501 = !DILocation(line: 352, column: 53, scope: !8495)
!8502 = !DILocation(line: 352, column: 3, scope: !8495)
!8503 = distinct !{!8503, !8496, !8504}
!8504 = !DILocation(line: 353, column: 21, scope: !8488)
!8505 = !DILocation(line: 354, column: 2, scope: !8458)
!8506 = !DILocation(line: 355, column: 1, scope: !8411)
!8507 = distinct !DISubprogram(name: "ui_item_enum_expand_handle", scope: !3, file: !3, line: 529, type: !8412, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8508 = !DILocalVariable(name: "C", arg: 1, scope: !8507, file: !3, line: 529, type: !2030)
!8509 = !DILocation(line: 529, column: 50, scope: !8507)
!8510 = !DILocalVariable(name: "arg1", arg: 2, scope: !8507, file: !3, line: 529, type: !1112)
!8511 = !DILocation(line: 529, column: 59, scope: !8507)
!8512 = !DILocalVariable(name: "arg2", arg: 3, scope: !8507, file: !3, line: 529, type: !1112)
!8513 = !DILocation(line: 529, column: 71, scope: !8507)
!8514 = !DILocalVariable(name: "win", scope: !8507, file: !3, line: 531, type: !8421)
!8515 = !DILocation(line: 531, column: 12, scope: !8507)
!8516 = !DILocation(line: 531, column: 32, scope: !8507)
!8517 = !DILocation(line: 531, column: 18, scope: !8507)
!8518 = !DILocation(line: 533, column: 7, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 533, column: 6)
!8520 = !DILocation(line: 533, column: 12, scope: !8519)
!8521 = !DILocation(line: 533, column: 24, scope: !8519)
!8522 = !DILocation(line: 533, column: 6, scope: !8507)
!8523 = !DILocalVariable(name: "but", scope: !8524, file: !3, line: 534, type: !2159)
!8524 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 533, column: 31)
!8525 = !DILocation(line: 534, column: 10, scope: !8524)
!8526 = !DILocation(line: 534, column: 25, scope: !8524)
!8527 = !DILocation(line: 534, column: 16, scope: !8524)
!8528 = !DILocalVariable(name: "enum_value", scope: !8524, file: !3, line: 535, type: !1100)
!8529 = !DILocation(line: 535, column: 7, scope: !8524)
!8530 = !DILocation(line: 535, column: 20, scope: !8524)
!8531 = !DILocalVariable(name: "current_value", scope: !8524, file: !3, line: 537, type: !1100)
!8532 = !DILocation(line: 537, column: 7, scope: !8524)
!8533 = !DILocation(line: 537, column: 46, scope: !8524)
!8534 = !DILocation(line: 537, column: 51, scope: !8524)
!8535 = !DILocation(line: 537, column: 60, scope: !8524)
!8536 = !DILocation(line: 537, column: 65, scope: !8524)
!8537 = !DILocation(line: 537, column: 23, scope: !8524)
!8538 = !DILocation(line: 538, column: 9, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 538, column: 7)
!8540 = !DILocation(line: 538, column: 25, scope: !8539)
!8541 = !DILocation(line: 538, column: 23, scope: !8539)
!8542 = !DILocation(line: 538, column: 7, scope: !8524)
!8543 = !DILocation(line: 539, column: 20, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 538, column: 38)
!8545 = !DILocation(line: 539, column: 18, scope: !8544)
!8546 = !DILocation(line: 540, column: 3, scope: !8544)
!8547 = !DILocation(line: 542, column: 21, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 541, column: 8)
!8549 = !DILocation(line: 542, column: 18, scope: !8548)
!8550 = !DILocation(line: 544, column: 26, scope: !8524)
!8551 = !DILocation(line: 544, column: 31, scope: !8524)
!8552 = !DILocation(line: 544, column: 40, scope: !8524)
!8553 = !DILocation(line: 544, column: 45, scope: !8524)
!8554 = !DILocation(line: 544, column: 54, scope: !8524)
!8555 = !DILocation(line: 544, column: 3, scope: !8524)
!8556 = !DILocation(line: 545, column: 2, scope: !8524)
!8557 = !DILocation(line: 546, column: 1, scope: !8507)
!8558 = distinct !DISubprogram(name: "ui_layout_local_dir", scope: !3, file: !3, line: 303, type: !7654, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8559 = !DILocalVariable(name: "layout", arg: 1, scope: !8558, file: !3, line: 303, type: !1113)
!8560 = !DILocation(line: 303, column: 42, scope: !8558)
!8561 = !DILocation(line: 305, column: 10, scope: !8558)
!8562 = !DILocation(line: 305, column: 18, scope: !8558)
!8563 = !DILocation(line: 305, column: 23, scope: !8558)
!8564 = !DILocation(line: 305, column: 2, scope: !8558)
!8565 = !DILocation(line: 309, column: 4, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 305, column: 29)
!8567 = !DILocation(line: 316, column: 4, scope: !8566)
!8568 = !DILocation(line: 318, column: 1, scope: !8558)
!8569 = distinct !DISubprogram(name: "ui_keymap_but_cb", scope: !3, file: !3, line: 617, type: !8412, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8570 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !8569, file: !3, line: 617, type: !2030)
!8571 = !DILocation(line: 617, column: 40, scope: !8569)
!8572 = !DILocalVariable(name: "but_v", arg: 2, scope: !8569, file: !3, line: 617, type: !1112)
!8573 = !DILocation(line: 617, column: 57, scope: !8569)
!8574 = !DILocalVariable(name: "UNUSED_key_v", arg: 3, scope: !8569, file: !3, line: 617, type: !1112)
!8575 = !DILocation(line: 617, column: 70, scope: !8569)
!8576 = !DILocalVariable(name: "but", scope: !8569, file: !3, line: 619, type: !2159)
!8577 = !DILocation(line: 619, column: 9, scope: !8569)
!8578 = !DILocation(line: 619, column: 15, scope: !8569)
!8579 = !DILocation(line: 621, column: 19, scope: !8569)
!8580 = !DILocation(line: 621, column: 24, scope: !8569)
!8581 = !DILocation(line: 621, column: 43, scope: !8569)
!8582 = !DILocation(line: 621, column: 48, scope: !8569)
!8583 = !DILocation(line: 621, column: 61, scope: !8569)
!8584 = !DILocation(line: 621, column: 73, scope: !8569)
!8585 = !DILocation(line: 621, column: 2, scope: !8569)
!8586 = !DILocation(line: 622, column: 19, scope: !8569)
!8587 = !DILocation(line: 622, column: 24, scope: !8569)
!8588 = !DILocation(line: 622, column: 42, scope: !8569)
!8589 = !DILocation(line: 622, column: 47, scope: !8569)
!8590 = !DILocation(line: 622, column: 60, scope: !8569)
!8591 = !DILocation(line: 622, column: 71, scope: !8569)
!8592 = !DILocation(line: 622, column: 2, scope: !8569)
!8593 = !DILocation(line: 623, column: 19, scope: !8569)
!8594 = !DILocation(line: 623, column: 24, scope: !8569)
!8595 = !DILocation(line: 623, column: 41, scope: !8569)
!8596 = !DILocation(line: 623, column: 46, scope: !8569)
!8597 = !DILocation(line: 623, column: 59, scope: !8569)
!8598 = !DILocation(line: 623, column: 69, scope: !8569)
!8599 = !DILocation(line: 623, column: 2, scope: !8569)
!8600 = !DILocation(line: 624, column: 19, scope: !8569)
!8601 = !DILocation(line: 624, column: 24, scope: !8569)
!8602 = !DILocation(line: 624, column: 43, scope: !8569)
!8603 = !DILocation(line: 624, column: 48, scope: !8569)
!8604 = !DILocation(line: 624, column: 61, scope: !8569)
!8605 = !DILocation(line: 624, column: 73, scope: !8569)
!8606 = !DILocation(line: 624, column: 2, scope: !8569)
!8607 = !DILocation(line: 625, column: 1, scope: !8569)
!8608 = distinct !DISubprogram(name: "sort_search_items_list", scope: !3, file: !3, line: 1445, type: !8609, scopeLine: 1446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8609 = !DISubroutineType(types: !8610)
!8610 = !{!1100, !8611, !8611}
!8611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8612, size: 64)
!8612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!8613 = !DILocalVariable(name: "a", arg: 1, scope: !8608, file: !3, line: 1445, type: !8611)
!8614 = !DILocation(line: 1445, column: 47, scope: !8608)
!8615 = !DILocalVariable(name: "b", arg: 2, scope: !8608, file: !3, line: 1445, type: !8611)
!8616 = !DILocation(line: 1445, column: 62, scope: !8608)
!8617 = !DILocalVariable(name: "cis1", scope: !8608, file: !3, line: 1447, type: !2289)
!8618 = !DILocation(line: 1447, column: 18, scope: !8608)
!8619 = !DILocation(line: 1447, column: 43, scope: !8608)
!8620 = !DILocation(line: 1447, column: 25, scope: !8608)
!8621 = !DILocalVariable(name: "cis2", scope: !8608, file: !3, line: 1448, type: !2289)
!8622 = !DILocation(line: 1448, column: 18, scope: !8608)
!8623 = !DILocation(line: 1448, column: 43, scope: !8608)
!8624 = !DILocation(line: 1448, column: 25, scope: !8608)
!8625 = !DILocation(line: 1450, column: 21, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 1450, column: 6)
!8627 = !DILocation(line: 1450, column: 27, scope: !8626)
!8628 = !DILocation(line: 1450, column: 33, scope: !8626)
!8629 = !DILocation(line: 1450, column: 39, scope: !8626)
!8630 = !DILocation(line: 1450, column: 6, scope: !8626)
!8631 = !DILocation(line: 1450, column: 45, scope: !8626)
!8632 = !DILocation(line: 1450, column: 6, scope: !8608)
!8633 = !DILocation(line: 1451, column: 3, scope: !8626)
!8634 = !DILocation(line: 1453, column: 3, scope: !8626)
!8635 = !DILocation(line: 1454, column: 1, scope: !8608)
!8636 = distinct !DISubprogram(name: "ui_item_estimate", scope: !3, file: !3, line: 2905, type: !8637, scopeLine: 2906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8637 = !DISubroutineType(types: !8638)
!8638 = !{null, !3181}
!8639 = !DILocalVariable(name: "item", arg: 1, scope: !8636, file: !3, line: 2905, type: !3181)
!8640 = !DILocation(line: 2905, column: 38, scope: !8636)
!8641 = !DILocalVariable(name: "subitem", scope: !8636, file: !3, line: 2907, type: !3181)
!8642 = !DILocation(line: 2907, column: 10, scope: !8636)
!8643 = !DILocation(line: 2909, column: 6, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 2909, column: 6)
!8645 = !DILocation(line: 2909, column: 12, scope: !8644)
!8646 = !DILocation(line: 2909, column: 17, scope: !8644)
!8647 = !DILocation(line: 2909, column: 6, scope: !8636)
!8648 = !DILocalVariable(name: "litem", scope: !8649, file: !3, line: 2910, type: !1113)
!8649 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 2909, column: 33)
!8650 = !DILocation(line: 2910, column: 13, scope: !8649)
!8651 = !DILocation(line: 2910, column: 33, scope: !8649)
!8652 = !DILocation(line: 2910, column: 21, scope: !8649)
!8653 = !DILocation(line: 2912, column: 18, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2912, column: 3)
!8655 = !DILocation(line: 2912, column: 25, scope: !8654)
!8656 = !DILocation(line: 2912, column: 31, scope: !8654)
!8657 = !DILocation(line: 2912, column: 16, scope: !8654)
!8658 = !DILocation(line: 2912, column: 8, scope: !8654)
!8659 = !DILocation(line: 2912, column: 38, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8654, file: !3, line: 2912, column: 3)
!8661 = !DILocation(line: 2912, column: 3, scope: !8654)
!8662 = !DILocation(line: 2913, column: 21, scope: !8660)
!8663 = !DILocation(line: 2913, column: 4, scope: !8660)
!8664 = !DILocation(line: 2912, column: 57, scope: !8660)
!8665 = !DILocation(line: 2912, column: 66, scope: !8660)
!8666 = !DILocation(line: 2912, column: 55, scope: !8660)
!8667 = !DILocation(line: 2912, column: 3, scope: !8660)
!8668 = distinct !{!8668, !8661, !8669}
!8669 = !DILocation(line: 2913, column: 28, scope: !8654)
!8670 = !DILocation(line: 2915, column: 30, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2915, column: 7)
!8672 = !DILocation(line: 2915, column: 37, scope: !8671)
!8673 = !DILocation(line: 2915, column: 7, scope: !8671)
!8674 = !DILocation(line: 2915, column: 7, scope: !8649)
!8675 = !DILocation(line: 2916, column: 4, scope: !8671)
!8676 = !DILocation(line: 2918, column: 7, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2918, column: 7)
!8678 = !DILocation(line: 2918, column: 14, scope: !8677)
!8679 = !DILocation(line: 2918, column: 23, scope: !8677)
!8680 = !DILocation(line: 2918, column: 31, scope: !8677)
!8681 = !DILocation(line: 2918, column: 34, scope: !8677)
!8682 = !DILocation(line: 2918, column: 41, scope: !8677)
!8683 = !DILocation(line: 2918, column: 50, scope: !8677)
!8684 = !DILocation(line: 2918, column: 7, scope: !8649)
!8685 = !DILocation(line: 2919, column: 18, scope: !8677)
!8686 = !DILocation(line: 2919, column: 25, scope: !8677)
!8687 = !DILocation(line: 2919, column: 32, scope: !8677)
!8688 = !DILocation(line: 2919, column: 4, scope: !8677)
!8689 = !DILocation(line: 2921, column: 11, scope: !8649)
!8690 = !DILocation(line: 2921, column: 18, scope: !8649)
!8691 = !DILocation(line: 2921, column: 23, scope: !8649)
!8692 = !DILocation(line: 2921, column: 3, scope: !8649)
!8693 = !DILocation(line: 2923, column: 30, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2921, column: 29)
!8695 = !DILocation(line: 2923, column: 5, scope: !8694)
!8696 = !DILocation(line: 2924, column: 5, scope: !8694)
!8697 = !DILocation(line: 2926, column: 35, scope: !8694)
!8698 = !DILocation(line: 2926, column: 5, scope: !8694)
!8699 = !DILocation(line: 2927, column: 5, scope: !8694)
!8700 = !DILocation(line: 2929, column: 27, scope: !8694)
!8701 = !DILocation(line: 2929, column: 5, scope: !8694)
!8702 = !DILocation(line: 2930, column: 5, scope: !8694)
!8703 = !DILocation(line: 2932, column: 27, scope: !8694)
!8704 = !DILocation(line: 2932, column: 5, scope: !8694)
!8705 = !DILocation(line: 2933, column: 5, scope: !8694)
!8706 = !DILocation(line: 2935, column: 28, scope: !8694)
!8707 = !DILocation(line: 2935, column: 5, scope: !8694)
!8708 = !DILocation(line: 2936, column: 5, scope: !8694)
!8709 = !DILocation(line: 2938, column: 32, scope: !8694)
!8710 = !DILocation(line: 2938, column: 5, scope: !8694)
!8711 = !DILocation(line: 2939, column: 5, scope: !8694)
!8712 = !DILocation(line: 2941, column: 29, scope: !8694)
!8713 = !DILocation(line: 2941, column: 5, scope: !8694)
!8714 = !DILocation(line: 2942, column: 5, scope: !8694)
!8715 = !DILocation(line: 2944, column: 31, scope: !8694)
!8716 = !DILocation(line: 2944, column: 5, scope: !8694)
!8717 = !DILocation(line: 2945, column: 5, scope: !8694)
!8718 = !DILocation(line: 2947, column: 5, scope: !8694)
!8719 = !DILocation(line: 2949, column: 2, scope: !8649)
!8720 = !DILocation(line: 2950, column: 1, scope: !8636)
!8721 = distinct !DISubprogram(name: "ui_item_layout", scope: !3, file: !3, line: 2998, type: !8637, scopeLine: 2999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8722 = !DILocalVariable(name: "item", arg: 1, scope: !8721, file: !3, line: 2998, type: !3181)
!8723 = !DILocation(line: 2998, column: 36, scope: !8721)
!8724 = !DILocalVariable(name: "subitem", scope: !8721, file: !3, line: 3000, type: !3181)
!8725 = !DILocation(line: 3000, column: 10, scope: !8721)
!8726 = !DILocation(line: 3002, column: 6, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 3002, column: 6)
!8728 = !DILocation(line: 3002, column: 12, scope: !8727)
!8729 = !DILocation(line: 3002, column: 17, scope: !8727)
!8730 = !DILocation(line: 3002, column: 6, scope: !8721)
!8731 = !DILocalVariable(name: "litem", scope: !8732, file: !3, line: 3003, type: !1113)
!8732 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 3002, column: 33)
!8733 = !DILocation(line: 3003, column: 13, scope: !8732)
!8734 = !DILocation(line: 3003, column: 33, scope: !8732)
!8735 = !DILocation(line: 3003, column: 21, scope: !8732)
!8736 = !DILocation(line: 3005, column: 30, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3005, column: 7)
!8738 = !DILocation(line: 3005, column: 37, scope: !8737)
!8739 = !DILocation(line: 3005, column: 7, scope: !8737)
!8740 = !DILocation(line: 3005, column: 7, scope: !8732)
!8741 = !DILocation(line: 3006, column: 4, scope: !8737)
!8742 = !DILocation(line: 3008, column: 7, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3008, column: 7)
!8744 = !DILocation(line: 3008, column: 14, scope: !8743)
!8745 = !DILocation(line: 3008, column: 7, scope: !8732)
!8746 = !DILocation(line: 3009, column: 18, scope: !8743)
!8747 = !DILocation(line: 3009, column: 27, scope: !8743)
!8748 = !DILocation(line: 3009, column: 34, scope: !8743)
!8749 = !DILocation(line: 3009, column: 40, scope: !8743)
!8750 = !DILocation(line: 3009, column: 47, scope: !8743)
!8751 = !DILocation(line: 3009, column: 25, scope: !8743)
!8752 = !DILocation(line: 3009, column: 4, scope: !8743)
!8753 = !DILocation(line: 3010, column: 8, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3010, column: 7)
!8755 = !DILocation(line: 3010, column: 15, scope: !8754)
!8756 = !DILocation(line: 3010, column: 7, scope: !8732)
!8757 = !DILocation(line: 3011, column: 17, scope: !8754)
!8758 = !DILocation(line: 3011, column: 4, scope: !8754)
!8759 = !DILocation(line: 3012, column: 8, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3012, column: 7)
!8761 = !DILocation(line: 3012, column: 15, scope: !8760)
!8762 = !DILocation(line: 3012, column: 7, scope: !8732)
!8763 = !DILocation(line: 3013, column: 17, scope: !8760)
!8764 = !DILocation(line: 3013, column: 4, scope: !8760)
!8765 = !DILocation(line: 3015, column: 11, scope: !8732)
!8766 = !DILocation(line: 3015, column: 18, scope: !8732)
!8767 = !DILocation(line: 3015, column: 23, scope: !8732)
!8768 = !DILocation(line: 3015, column: 3, scope: !8732)
!8769 = !DILocation(line: 3017, column: 28, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3015, column: 29)
!8771 = !DILocation(line: 3017, column: 5, scope: !8770)
!8772 = !DILocation(line: 3018, column: 5, scope: !8770)
!8773 = !DILocation(line: 3020, column: 33, scope: !8770)
!8774 = !DILocation(line: 3020, column: 5, scope: !8770)
!8775 = !DILocation(line: 3021, column: 5, scope: !8770)
!8776 = !DILocation(line: 3023, column: 25, scope: !8770)
!8777 = !DILocation(line: 3023, column: 5, scope: !8770)
!8778 = !DILocation(line: 3024, column: 5, scope: !8770)
!8779 = !DILocation(line: 3026, column: 25, scope: !8770)
!8780 = !DILocation(line: 3026, column: 5, scope: !8770)
!8781 = !DILocation(line: 3027, column: 5, scope: !8770)
!8782 = !DILocation(line: 3029, column: 26, scope: !8770)
!8783 = !DILocation(line: 3029, column: 5, scope: !8770)
!8784 = !DILocation(line: 3030, column: 5, scope: !8770)
!8785 = !DILocation(line: 3032, column: 30, scope: !8770)
!8786 = !DILocation(line: 3032, column: 5, scope: !8770)
!8787 = !DILocation(line: 3033, column: 5, scope: !8770)
!8788 = !DILocation(line: 3035, column: 27, scope: !8770)
!8789 = !DILocation(line: 3035, column: 5, scope: !8770)
!8790 = !DILocation(line: 3036, column: 5, scope: !8770)
!8791 = !DILocation(line: 3038, column: 29, scope: !8770)
!8792 = !DILocation(line: 3038, column: 5, scope: !8770)
!8793 = !DILocation(line: 3039, column: 5, scope: !8770)
!8794 = !DILocation(line: 3041, column: 28, scope: !8770)
!8795 = !DILocation(line: 3041, column: 5, scope: !8770)
!8796 = !DILocation(line: 3042, column: 5, scope: !8770)
!8797 = !DILocation(line: 3044, column: 5, scope: !8770)
!8798 = !DILocation(line: 3047, column: 18, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 3047, column: 3)
!8800 = !DILocation(line: 3047, column: 25, scope: !8799)
!8801 = !DILocation(line: 3047, column: 31, scope: !8799)
!8802 = !DILocation(line: 3047, column: 16, scope: !8799)
!8803 = !DILocation(line: 3047, column: 8, scope: !8799)
!8804 = !DILocation(line: 3047, column: 38, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 3047, column: 3)
!8806 = !DILocation(line: 3047, column: 3, scope: !8799)
!8807 = !DILocation(line: 3048, column: 19, scope: !8805)
!8808 = !DILocation(line: 3048, column: 4, scope: !8805)
!8809 = !DILocation(line: 3047, column: 57, scope: !8805)
!8810 = !DILocation(line: 3047, column: 66, scope: !8805)
!8811 = !DILocation(line: 3047, column: 55, scope: !8805)
!8812 = !DILocation(line: 3047, column: 3, scope: !8805)
!8813 = distinct !{!8813, !8806, !8814}
!8814 = !DILocation(line: 3048, column: 26, scope: !8799)
!8815 = !DILocation(line: 3049, column: 2, scope: !8732)
!8816 = !DILocation(line: 3050, column: 1, scope: !8721)
!8817 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !8818, file: !8818, line: 88, type: !8819, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8818 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8819 = !DISubroutineType(types: !8820)
!8820 = !{!1413, !8821}
!8821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8822, size: 64)
!8822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!8823 = !DILocalVariable(name: "lb", arg: 1, scope: !8817, file: !8818, line: 88, type: !8821)
!8824 = !DILocation(line: 88, column: 62, scope: !8817)
!8825 = !DILocation(line: 88, column: 76, scope: !8817)
!8826 = !DILocation(line: 88, column: 80, scope: !8817)
!8827 = !DILocation(line: 88, column: 86, scope: !8817)
!8828 = !DILocation(line: 88, column: 75, scope: !8817)
!8829 = !DILocation(line: 88, column: 68, scope: !8817)
!8830 = distinct !DISubprogram(name: "ui_item_scale", scope: !3, file: !3, line: 2882, type: !8831, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8831 = !DISubroutineType(types: !8832)
!8832 = !{null, !1113, !8833}
!8833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8834, size: 64)
!8834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!8835 = !DILocalVariable(name: "litem", arg: 1, scope: !8830, file: !3, line: 2882, type: !1113)
!8836 = !DILocation(line: 2882, column: 37, scope: !8830)
!8837 = !DILocalVariable(name: "scale", arg: 2, scope: !8830, file: !3, line: 2882, type: !8833)
!8838 = !DILocation(line: 2882, column: 56, scope: !8830)
!8839 = !DILocalVariable(name: "item", scope: !8830, file: !3, line: 2884, type: !3181)
!8840 = !DILocation(line: 2884, column: 10, scope: !8830)
!8841 = !DILocalVariable(name: "x", scope: !8830, file: !3, line: 2885, type: !1100)
!8842 = !DILocation(line: 2885, column: 6, scope: !8830)
!8843 = !DILocalVariable(name: "y", scope: !8830, file: !3, line: 2885, type: !1100)
!8844 = !DILocation(line: 2885, column: 9, scope: !8830)
!8845 = !DILocalVariable(name: "w", scope: !8830, file: !3, line: 2885, type: !1100)
!8846 = !DILocation(line: 2885, column: 12, scope: !8830)
!8847 = !DILocalVariable(name: "h", scope: !8830, file: !3, line: 2885, type: !1100)
!8848 = !DILocation(line: 2885, column: 15, scope: !8830)
!8849 = !DILocation(line: 2887, column: 14, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8830, file: !3, line: 2887, column: 2)
!8851 = !DILocation(line: 2887, column: 21, scope: !8850)
!8852 = !DILocation(line: 2887, column: 27, scope: !8850)
!8853 = !DILocation(line: 2887, column: 12, scope: !8850)
!8854 = !DILocation(line: 2887, column: 7, scope: !8850)
!8855 = !DILocation(line: 2887, column: 33, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2887, column: 2)
!8857 = !DILocation(line: 2887, column: 2, scope: !8850)
!8858 = !DILocation(line: 2888, column: 16, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 2887, column: 58)
!8860 = !DILocation(line: 2888, column: 3, scope: !8859)
!8861 = !DILocation(line: 2889, column: 18, scope: !8859)
!8862 = !DILocation(line: 2889, column: 3, scope: !8859)
!8863 = !DILocation(line: 2891, column: 7, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 2891, column: 7)
!8865 = !DILocation(line: 2891, column: 16, scope: !8864)
!8866 = !DILocation(line: 2891, column: 7, scope: !8859)
!8867 = !DILocation(line: 2892, column: 9, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 2891, column: 25)
!8869 = !DILocation(line: 2892, column: 6, scope: !8868)
!8870 = !DILocation(line: 2893, column: 9, scope: !8868)
!8871 = !DILocation(line: 2893, column: 6, scope: !8868)
!8872 = !DILocation(line: 2894, column: 3, scope: !8868)
!8873 = !DILocation(line: 2896, column: 7, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 2896, column: 7)
!8875 = !DILocation(line: 2896, column: 16, scope: !8874)
!8876 = !DILocation(line: 2896, column: 7, scope: !8859)
!8877 = !DILocation(line: 2897, column: 9, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 2896, column: 25)
!8879 = !DILocation(line: 2897, column: 6, scope: !8878)
!8880 = !DILocation(line: 2898, column: 9, scope: !8878)
!8881 = !DILocation(line: 2898, column: 6, scope: !8878)
!8882 = !DILocation(line: 2899, column: 3, scope: !8878)
!8883 = !DILocation(line: 2901, column: 20, scope: !8859)
!8884 = !DILocation(line: 2901, column: 26, scope: !8859)
!8885 = !DILocation(line: 2901, column: 29, scope: !8859)
!8886 = !DILocation(line: 2901, column: 32, scope: !8859)
!8887 = !DILocation(line: 2901, column: 35, scope: !8859)
!8888 = !DILocation(line: 2901, column: 3, scope: !8859)
!8889 = !DILocation(line: 2902, column: 2, scope: !8859)
!8890 = !DILocation(line: 2887, column: 46, scope: !8856)
!8891 = !DILocation(line: 2887, column: 52, scope: !8856)
!8892 = !DILocation(line: 2887, column: 44, scope: !8856)
!8893 = !DILocation(line: 2887, column: 2, scope: !8856)
!8894 = distinct !{!8894, !8857, !8895}
!8895 = !DILocation(line: 2902, column: 2, scope: !8850)
!8896 = !DILocation(line: 2903, column: 1, scope: !8830)
!8897 = distinct !DISubprogram(name: "ui_litem_estimate_column", scope: !3, file: !3, line: 2074, type: !3469, scopeLine: 2075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8898 = !DILocalVariable(name: "litem", arg: 1, scope: !8897, file: !3, line: 2074, type: !1113)
!8899 = !DILocation(line: 2074, column: 48, scope: !8897)
!8900 = !DILocalVariable(name: "item", scope: !8897, file: !3, line: 2076, type: !3181)
!8901 = !DILocation(line: 2076, column: 10, scope: !8897)
!8902 = !DILocalVariable(name: "itemw", scope: !8897, file: !3, line: 2077, type: !1100)
!8903 = !DILocation(line: 2077, column: 6, scope: !8897)
!8904 = !DILocalVariable(name: "itemh", scope: !8897, file: !3, line: 2077, type: !1100)
!8905 = !DILocation(line: 2077, column: 13, scope: !8897)
!8906 = !DILocation(line: 2079, column: 2, scope: !8897)
!8907 = !DILocation(line: 2079, column: 9, scope: !8897)
!8908 = !DILocation(line: 2079, column: 11, scope: !8897)
!8909 = !DILocation(line: 2080, column: 2, scope: !8897)
!8910 = !DILocation(line: 2080, column: 9, scope: !8897)
!8911 = !DILocation(line: 2080, column: 11, scope: !8897)
!8912 = !DILocation(line: 2082, column: 14, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 2082, column: 2)
!8914 = !DILocation(line: 2082, column: 21, scope: !8913)
!8915 = !DILocation(line: 2082, column: 27, scope: !8913)
!8916 = !DILocation(line: 2082, column: 12, scope: !8913)
!8917 = !DILocation(line: 2082, column: 7, scope: !8913)
!8918 = !DILocation(line: 2082, column: 34, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 2082, column: 2)
!8920 = !DILocation(line: 2082, column: 2, scope: !8913)
!8921 = !DILocation(line: 2083, column: 16, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 2082, column: 59)
!8923 = !DILocation(line: 2083, column: 3, scope: !8922)
!8924 = !DILocation(line: 2085, column: 14, scope: !8922)
!8925 = !DILocation(line: 2085, column: 3, scope: !8922)
!8926 = !DILocation(line: 2085, column: 10, scope: !8922)
!8927 = !DILocation(line: 2085, column: 12, scope: !8922)
!8928 = !DILocation(line: 2086, column: 15, scope: !8922)
!8929 = !DILocation(line: 2086, column: 3, scope: !8922)
!8930 = !DILocation(line: 2086, column: 10, scope: !8922)
!8931 = !DILocation(line: 2086, column: 12, scope: !8922)
!8932 = !DILocation(line: 2088, column: 7, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 2088, column: 7)
!8934 = !DILocation(line: 2088, column: 13, scope: !8933)
!8935 = !DILocation(line: 2088, column: 7, scope: !8922)
!8936 = !DILocation(line: 2089, column: 16, scope: !8933)
!8937 = !DILocation(line: 2089, column: 23, scope: !8933)
!8938 = !DILocation(line: 2089, column: 4, scope: !8933)
!8939 = !DILocation(line: 2089, column: 11, scope: !8933)
!8940 = !DILocation(line: 2089, column: 13, scope: !8933)
!8941 = !DILocation(line: 2090, column: 2, scope: !8922)
!8942 = !DILocation(line: 2082, column: 47, scope: !8919)
!8943 = !DILocation(line: 2082, column: 53, scope: !8919)
!8944 = !DILocation(line: 2082, column: 45, scope: !8919)
!8945 = !DILocation(line: 2082, column: 2, scope: !8919)
!8946 = distinct !{!8946, !8920, !8947}
!8947 = !DILocation(line: 2090, column: 2, scope: !8913)
!8948 = !DILocation(line: 2091, column: 1, scope: !8897)
!8949 = distinct !DISubprogram(name: "ui_litem_estimate_column_flow", scope: !3, file: !3, line: 2291, type: !3469, scopeLine: 2292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!8950 = !DILocalVariable(name: "litem", arg: 1, scope: !8949, file: !3, line: 2291, type: !1113)
!8951 = !DILocation(line: 2291, column: 53, scope: !8949)
!8952 = !DILocalVariable(name: "style", scope: !8949, file: !3, line: 2293, type: !1148)
!8953 = !DILocation(line: 2293, column: 11, scope: !8949)
!8954 = !DILocation(line: 2293, column: 19, scope: !8949)
!8955 = !DILocation(line: 2293, column: 26, scope: !8949)
!8956 = !DILocation(line: 2293, column: 32, scope: !8949)
!8957 = !DILocalVariable(name: "flow", scope: !8949, file: !3, line: 2294, type: !2314)
!8958 = !DILocation(line: 2294, column: 20, scope: !8949)
!8959 = !DILocation(line: 2294, column: 47, scope: !8949)
!8960 = !DILocation(line: 2294, column: 27, scope: !8949)
!8961 = !DILocalVariable(name: "item", scope: !8949, file: !3, line: 2295, type: !3181)
!8962 = !DILocation(line: 2295, column: 10, scope: !8949)
!8963 = !DILocalVariable(name: "col", scope: !8949, file: !3, line: 2296, type: !1100)
!8964 = !DILocation(line: 2296, column: 6, scope: !8949)
!8965 = !DILocalVariable(name: "x", scope: !8949, file: !3, line: 2296, type: !1100)
!8966 = !DILocation(line: 2296, column: 11, scope: !8949)
!8967 = !DILocalVariable(name: "y", scope: !8949, file: !3, line: 2296, type: !1100)
!8968 = !DILocation(line: 2296, column: 14, scope: !8949)
!8969 = !DILocalVariable(name: "emh", scope: !8949, file: !3, line: 2296, type: !1100)
!8970 = !DILocation(line: 2296, column: 17, scope: !8949)
!8971 = !DILocalVariable(name: "emy", scope: !8949, file: !3, line: 2296, type: !1100)
!8972 = !DILocation(line: 2296, column: 22, scope: !8949)
!8973 = !DILocalVariable(name: "miny", scope: !8949, file: !3, line: 2296, type: !1100)
!8974 = !DILocation(line: 2296, column: 27, scope: !8949)
!8975 = !DILocalVariable(name: "itemw", scope: !8949, file: !3, line: 2296, type: !1100)
!8976 = !DILocation(line: 2296, column: 33, scope: !8949)
!8977 = !DILocalVariable(name: "itemh", scope: !8949, file: !3, line: 2296, type: !1100)
!8978 = !DILocation(line: 2296, column: 40, scope: !8949)
!8979 = !DILocalVariable(name: "maxw", scope: !8949, file: !3, line: 2296, type: !1100)
!8980 = !DILocation(line: 2296, column: 47, scope: !8949)
!8981 = !DILocalVariable(name: "toth", scope: !8949, file: !3, line: 2297, type: !1100)
!8982 = !DILocation(line: 2297, column: 6, scope: !8949)
!8983 = !DILocalVariable(name: "totitem", scope: !8949, file: !3, line: 2297, type: !1100)
!8984 = !DILocation(line: 2297, column: 12, scope: !8949)
!8985 = !DILocation(line: 2300, column: 7, scope: !8949)
!8986 = !DILocation(line: 2301, column: 10, scope: !8949)
!8987 = !DILocation(line: 2302, column: 14, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2302, column: 2)
!8989 = !DILocation(line: 2302, column: 21, scope: !8988)
!8990 = !DILocation(line: 2302, column: 27, scope: !8988)
!8991 = !DILocation(line: 2302, column: 12, scope: !8988)
!8992 = !DILocation(line: 2302, column: 7, scope: !8988)
!8993 = !DILocation(line: 2302, column: 34, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 2302, column: 2)
!8995 = !DILocation(line: 2302, column: 2, scope: !8988)
!8996 = !DILocation(line: 2303, column: 16, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 2302, column: 59)
!8998 = !DILocation(line: 2303, column: 3, scope: !8997)
!8999 = !DILocation(line: 2304, column: 10, scope: !8997)
!9000 = !DILocation(line: 2304, column: 8, scope: !8997)
!9001 = !DILocation(line: 2305, column: 11, scope: !8997)
!9002 = !DILocation(line: 2305, column: 8, scope: !8997)
!9003 = !DILocation(line: 2306, column: 10, scope: !8997)
!9004 = !DILocation(line: 2307, column: 2, scope: !8997)
!9005 = !DILocation(line: 2302, column: 47, scope: !8994)
!9006 = !DILocation(line: 2302, column: 53, scope: !8994)
!9007 = !DILocation(line: 2302, column: 45, scope: !8994)
!9008 = !DILocation(line: 2302, column: 2, scope: !8994)
!9009 = distinct !{!9009, !8995, !9010}
!9010 = !DILocation(line: 2307, column: 2, scope: !8988)
!9011 = !DILocation(line: 2309, column: 6, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2309, column: 6)
!9013 = !DILocation(line: 2309, column: 12, scope: !9012)
!9014 = !DILocation(line: 2309, column: 19, scope: !9012)
!9015 = !DILocation(line: 2309, column: 6, scope: !8949)
!9016 = !DILocation(line: 2311, column: 7, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 2311, column: 7)
!9018 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 2309, column: 25)
!9019 = !DILocation(line: 2311, column: 12, scope: !9017)
!9020 = !DILocation(line: 2311, column: 7, scope: !9018)
!9021 = !DILocation(line: 2312, column: 4, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 2311, column: 18)
!9023 = !DILocation(line: 2312, column: 10, scope: !9022)
!9024 = !DILocation(line: 2312, column: 17, scope: !9022)
!9025 = !DILocation(line: 2313, column: 4, scope: !9022)
!9026 = !DILocation(line: 2316, column: 25, scope: !9018)
!9027 = !DILocation(line: 2316, column: 32, scope: !9018)
!9028 = !DILocation(line: 2316, column: 38, scope: !9018)
!9029 = !DILocation(line: 2316, column: 44, scope: !9018)
!9030 = !DILocation(line: 2316, column: 42, scope: !9018)
!9031 = !DILocation(line: 2316, column: 18, scope: !9018)
!9032 = !DILocation(line: 2316, column: 3, scope: !9018)
!9033 = !DILocation(line: 2316, column: 9, scope: !9018)
!9034 = !DILocation(line: 2316, column: 16, scope: !9018)
!9035 = !DILocation(line: 2317, column: 25, scope: !9018)
!9036 = !DILocation(line: 2317, column: 31, scope: !9018)
!9037 = !DILocation(line: 2317, column: 39, scope: !9018)
!9038 = !DILocation(line: 2317, column: 18, scope: !9018)
!9039 = !DILocation(line: 2317, column: 3, scope: !9018)
!9040 = !DILocation(line: 2317, column: 9, scope: !9018)
!9041 = !DILocation(line: 2317, column: 16, scope: !9018)
!9042 = !DILocation(line: 2318, column: 2, scope: !9018)
!9043 = !DILocation(line: 2320, column: 18, scope: !9012)
!9044 = !DILocation(line: 2320, column: 24, scope: !9012)
!9045 = !DILocation(line: 2320, column: 3, scope: !9012)
!9046 = !DILocation(line: 2320, column: 9, scope: !9012)
!9047 = !DILocation(line: 2320, column: 16, scope: !9012)
!9048 = !DILocation(line: 2323, column: 4, scope: !8949)
!9049 = !DILocation(line: 2324, column: 4, scope: !8949)
!9050 = !DILocation(line: 2325, column: 6, scope: !8949)
!9051 = !DILocation(line: 2326, column: 7, scope: !8949)
!9052 = !DILocation(line: 2328, column: 7, scope: !8949)
!9053 = !DILocation(line: 2329, column: 8, scope: !8949)
!9054 = !DILocation(line: 2329, column: 15, scope: !8949)
!9055 = !DILocation(line: 2329, column: 21, scope: !8949)
!9056 = !DILocation(line: 2329, column: 13, scope: !8949)
!9057 = !DILocation(line: 2329, column: 6, scope: !8949)
!9058 = !DILocation(line: 2332, column: 6, scope: !8949)
!9059 = !DILocation(line: 2333, column: 14, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2333, column: 2)
!9061 = !DILocation(line: 2333, column: 21, scope: !9060)
!9062 = !DILocation(line: 2333, column: 27, scope: !9060)
!9063 = !DILocation(line: 2333, column: 12, scope: !9060)
!9064 = !DILocation(line: 2333, column: 7, scope: !9060)
!9065 = !DILocation(line: 2333, column: 34, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 2333, column: 2)
!9067 = !DILocation(line: 2333, column: 2, scope: !9060)
!9068 = !DILocation(line: 2334, column: 16, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 2333, column: 59)
!9070 = !DILocation(line: 2334, column: 3, scope: !9069)
!9071 = !DILocation(line: 2336, column: 8, scope: !9069)
!9072 = !DILocation(line: 2336, column: 16, scope: !9069)
!9073 = !DILocation(line: 2336, column: 23, scope: !9069)
!9074 = !DILocation(line: 2336, column: 14, scope: !9069)
!9075 = !DILocation(line: 2336, column: 5, scope: !9069)
!9076 = !DILocation(line: 2337, column: 17, scope: !9069)
!9077 = !DILocation(line: 2337, column: 23, scope: !9069)
!9078 = !DILocation(line: 2337, column: 10, scope: !9069)
!9079 = !DILocation(line: 2337, column: 8, scope: !9069)
!9080 = !DILocation(line: 2338, column: 10, scope: !9069)
!9081 = !DILocation(line: 2338, column: 7, scope: !9069)
!9082 = !DILocation(line: 2339, column: 17, scope: !9069)
!9083 = !DILocation(line: 2339, column: 24, scope: !9069)
!9084 = !DILocation(line: 2339, column: 10, scope: !9069)
!9085 = !DILocation(line: 2339, column: 8, scope: !9069)
!9086 = !DILocation(line: 2342, column: 7, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2342, column: 7)
!9088 = !DILocation(line: 2342, column: 13, scope: !9087)
!9089 = !DILocation(line: 2342, column: 19, scope: !9087)
!9090 = !DILocation(line: 2342, column: 26, scope: !9087)
!9091 = !DILocation(line: 2342, column: 11, scope: !9087)
!9092 = !DILocation(line: 2342, column: 30, scope: !9087)
!9093 = !DILocation(line: 2342, column: 33, scope: !9087)
!9094 = !DILocation(line: 2342, column: 41, scope: !9087)
!9095 = !DILocation(line: 2342, column: 40, scope: !9087)
!9096 = !DILocation(line: 2342, column: 37, scope: !9087)
!9097 = !DILocation(line: 2342, column: 7, scope: !9069)
!9098 = !DILocation(line: 2343, column: 9, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 2342, column: 46)
!9100 = !DILocation(line: 2343, column: 16, scope: !9099)
!9101 = !DILocation(line: 2343, column: 23, scope: !9099)
!9102 = !DILocation(line: 2343, column: 14, scope: !9099)
!9103 = !DILocation(line: 2343, column: 6, scope: !9099)
!9104 = !DILocation(line: 2344, column: 9, scope: !9099)
!9105 = !DILocation(line: 2345, column: 6, scope: !9099)
!9106 = !DILocation(line: 2346, column: 8, scope: !9099)
!9107 = !DILocation(line: 2347, column: 7, scope: !9099)
!9108 = !DILocation(line: 2348, column: 3, scope: !9099)
!9109 = !DILocation(line: 2349, column: 2, scope: !9069)
!9110 = !DILocation(line: 2333, column: 47, scope: !9066)
!9111 = !DILocation(line: 2333, column: 53, scope: !9066)
!9112 = !DILocation(line: 2333, column: 45, scope: !9066)
!9113 = !DILocation(line: 2333, column: 2, scope: !9066)
!9114 = distinct !{!9114, !9067, !9115}
!9115 = !DILocation(line: 2349, column: 2, scope: !9060)
!9116 = !DILocation(line: 2351, column: 13, scope: !8949)
!9117 = !DILocation(line: 2351, column: 2, scope: !8949)
!9118 = !DILocation(line: 2351, column: 9, scope: !8949)
!9119 = !DILocation(line: 2351, column: 11, scope: !8949)
!9120 = !DILocation(line: 2352, column: 13, scope: !8949)
!9121 = !DILocation(line: 2352, column: 20, scope: !8949)
!9122 = !DILocation(line: 2352, column: 24, scope: !8949)
!9123 = !DILocation(line: 2352, column: 22, scope: !8949)
!9124 = !DILocation(line: 2352, column: 2, scope: !8949)
!9125 = !DILocation(line: 2352, column: 9, scope: !8949)
!9126 = !DILocation(line: 2352, column: 11, scope: !8949)
!9127 = !DILocation(line: 2353, column: 1, scope: !8949)
!9128 = distinct !DISubprogram(name: "ui_litem_estimate_row", scope: !3, file: !3, line: 1941, type: !3469, scopeLine: 1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9129 = !DILocalVariable(name: "litem", arg: 1, scope: !9128, file: !3, line: 1941, type: !1113)
!9130 = !DILocation(line: 1941, column: 45, scope: !9128)
!9131 = !DILocalVariable(name: "item", scope: !9128, file: !3, line: 1943, type: !3181)
!9132 = !DILocation(line: 1943, column: 10, scope: !9128)
!9133 = !DILocalVariable(name: "itemw", scope: !9128, file: !3, line: 1944, type: !1100)
!9134 = !DILocation(line: 1944, column: 6, scope: !9128)
!9135 = !DILocalVariable(name: "itemh", scope: !9128, file: !3, line: 1944, type: !1100)
!9136 = !DILocation(line: 1944, column: 13, scope: !9128)
!9137 = !DILocation(line: 1946, column: 2, scope: !9128)
!9138 = !DILocation(line: 1946, column: 9, scope: !9128)
!9139 = !DILocation(line: 1946, column: 11, scope: !9128)
!9140 = !DILocation(line: 1947, column: 2, scope: !9128)
!9141 = !DILocation(line: 1947, column: 9, scope: !9128)
!9142 = !DILocation(line: 1947, column: 11, scope: !9128)
!9143 = !DILocation(line: 1949, column: 14, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 1949, column: 2)
!9145 = !DILocation(line: 1949, column: 21, scope: !9144)
!9146 = !DILocation(line: 1949, column: 27, scope: !9144)
!9147 = !DILocation(line: 1949, column: 12, scope: !9144)
!9148 = !DILocation(line: 1949, column: 7, scope: !9144)
!9149 = !DILocation(line: 1949, column: 34, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 1949, column: 2)
!9151 = !DILocation(line: 1949, column: 2, scope: !9144)
!9152 = !DILocation(line: 1950, column: 16, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 1949, column: 59)
!9154 = !DILocation(line: 1950, column: 3, scope: !9153)
!9155 = !DILocation(line: 1952, column: 15, scope: !9153)
!9156 = !DILocation(line: 1952, column: 3, scope: !9153)
!9157 = !DILocation(line: 1952, column: 10, scope: !9153)
!9158 = !DILocation(line: 1952, column: 12, scope: !9153)
!9159 = !DILocation(line: 1953, column: 14, scope: !9153)
!9160 = !DILocation(line: 1953, column: 3, scope: !9153)
!9161 = !DILocation(line: 1953, column: 10, scope: !9153)
!9162 = !DILocation(line: 1953, column: 12, scope: !9153)
!9163 = !DILocation(line: 1955, column: 7, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 1955, column: 7)
!9165 = !DILocation(line: 1955, column: 13, scope: !9164)
!9166 = !DILocation(line: 1955, column: 7, scope: !9153)
!9167 = !DILocation(line: 1956, column: 16, scope: !9164)
!9168 = !DILocation(line: 1956, column: 23, scope: !9164)
!9169 = !DILocation(line: 1956, column: 4, scope: !9164)
!9170 = !DILocation(line: 1956, column: 11, scope: !9164)
!9171 = !DILocation(line: 1956, column: 13, scope: !9164)
!9172 = !DILocation(line: 1957, column: 2, scope: !9153)
!9173 = !DILocation(line: 1949, column: 47, scope: !9150)
!9174 = !DILocation(line: 1949, column: 53, scope: !9150)
!9175 = !DILocation(line: 1949, column: 45, scope: !9150)
!9176 = !DILocation(line: 1949, column: 2, scope: !9150)
!9177 = distinct !{!9177, !9151, !9178}
!9178 = !DILocation(line: 1957, column: 2, scope: !9144)
!9179 = !DILocation(line: 1958, column: 1, scope: !9128)
!9180 = distinct !DISubprogram(name: "ui_litem_estimate_box", scope: !3, file: !3, line: 2250, type: !3469, scopeLine: 2251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9181 = !DILocalVariable(name: "litem", arg: 1, scope: !9180, file: !3, line: 2250, type: !1113)
!9182 = !DILocation(line: 2250, column: 45, scope: !9180)
!9183 = !DILocalVariable(name: "style", scope: !9180, file: !3, line: 2252, type: !1148)
!9184 = !DILocation(line: 2252, column: 11, scope: !9180)
!9185 = !DILocation(line: 2252, column: 19, scope: !9180)
!9186 = !DILocation(line: 2252, column: 26, scope: !9180)
!9187 = !DILocation(line: 2252, column: 32, scope: !9180)
!9188 = !DILocation(line: 2254, column: 27, scope: !9180)
!9189 = !DILocation(line: 2254, column: 2, scope: !9180)
!9190 = !DILocation(line: 2255, column: 18, scope: !9180)
!9191 = !DILocation(line: 2255, column: 25, scope: !9180)
!9192 = !DILocation(line: 2255, column: 16, scope: !9180)
!9193 = !DILocation(line: 2255, column: 2, scope: !9180)
!9194 = !DILocation(line: 2255, column: 9, scope: !9180)
!9195 = !DILocation(line: 2255, column: 11, scope: !9180)
!9196 = !DILocation(line: 2256, column: 14, scope: !9180)
!9197 = !DILocation(line: 2256, column: 21, scope: !9180)
!9198 = !DILocation(line: 2256, column: 2, scope: !9180)
!9199 = !DILocation(line: 2256, column: 9, scope: !9180)
!9200 = !DILocation(line: 2256, column: 11, scope: !9180)
!9201 = !DILocation(line: 2257, column: 1, scope: !9180)
!9202 = distinct !DISubprogram(name: "ui_litem_estimate_root", scope: !3, file: !3, line: 2218, type: !3469, scopeLine: 2219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9203 = !DILocalVariable(name: "UNUSED_litem", arg: 1, scope: !9202, file: !3, line: 2218, type: !1113)
!9204 = !DILocation(line: 2218, column: 46, scope: !9202)
!9205 = !DILocation(line: 2221, column: 1, scope: !9202)
!9206 = distinct !DISubprogram(name: "ui_litem_estimate_absolute", scope: !3, file: !3, line: 2408, type: !3469, scopeLine: 2409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9207 = !DILocalVariable(name: "litem", arg: 1, scope: !9206, file: !3, line: 2408, type: !1113)
!9208 = !DILocation(line: 2408, column: 50, scope: !9206)
!9209 = !DILocalVariable(name: "item", scope: !9206, file: !3, line: 2410, type: !3181)
!9210 = !DILocation(line: 2410, column: 10, scope: !9206)
!9211 = !DILocalVariable(name: "itemx", scope: !9206, file: !3, line: 2411, type: !1100)
!9212 = !DILocation(line: 2411, column: 6, scope: !9206)
!9213 = !DILocalVariable(name: "itemy", scope: !9206, file: !3, line: 2411, type: !1100)
!9214 = !DILocation(line: 2411, column: 13, scope: !9206)
!9215 = !DILocalVariable(name: "itemw", scope: !9206, file: !3, line: 2411, type: !1100)
!9216 = !DILocation(line: 2411, column: 20, scope: !9206)
!9217 = !DILocalVariable(name: "itemh", scope: !9206, file: !3, line: 2411, type: !1100)
!9218 = !DILocation(line: 2411, column: 27, scope: !9206)
!9219 = !DILocalVariable(name: "minx", scope: !9206, file: !3, line: 2411, type: !1100)
!9220 = !DILocation(line: 2411, column: 34, scope: !9206)
!9221 = !DILocalVariable(name: "miny", scope: !9206, file: !3, line: 2411, type: !1100)
!9222 = !DILocation(line: 2411, column: 40, scope: !9206)
!9223 = !DILocation(line: 2413, column: 7, scope: !9206)
!9224 = !DILocation(line: 2414, column: 7, scope: !9206)
!9225 = !DILocation(line: 2415, column: 2, scope: !9206)
!9226 = !DILocation(line: 2415, column: 9, scope: !9206)
!9227 = !DILocation(line: 2415, column: 11, scope: !9206)
!9228 = !DILocation(line: 2416, column: 2, scope: !9206)
!9229 = !DILocation(line: 2416, column: 9, scope: !9206)
!9230 = !DILocation(line: 2416, column: 11, scope: !9206)
!9231 = !DILocation(line: 2418, column: 14, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 2418, column: 2)
!9233 = !DILocation(line: 2418, column: 21, scope: !9232)
!9234 = !DILocation(line: 2418, column: 27, scope: !9232)
!9235 = !DILocation(line: 2418, column: 12, scope: !9232)
!9236 = !DILocation(line: 2418, column: 7, scope: !9232)
!9237 = !DILocation(line: 2418, column: 34, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 2418, column: 2)
!9239 = !DILocation(line: 2418, column: 2, scope: !9232)
!9240 = !DILocation(line: 2419, column: 18, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 2418, column: 59)
!9242 = !DILocation(line: 2419, column: 3, scope: !9241)
!9243 = !DILocation(line: 2420, column: 16, scope: !9241)
!9244 = !DILocation(line: 2420, column: 3, scope: !9241)
!9245 = !DILocation(line: 2422, column: 17, scope: !9241)
!9246 = !DILocation(line: 2422, column: 23, scope: !9241)
!9247 = !DILocation(line: 2422, column: 10, scope: !9241)
!9248 = !DILocation(line: 2422, column: 8, scope: !9241)
!9249 = !DILocation(line: 2423, column: 17, scope: !9241)
!9250 = !DILocation(line: 2423, column: 23, scope: !9241)
!9251 = !DILocation(line: 2423, column: 10, scope: !9241)
!9252 = !DILocation(line: 2423, column: 8, scope: !9241)
!9253 = !DILocation(line: 2425, column: 14, scope: !9241)
!9254 = !DILocation(line: 2425, column: 3, scope: !9241)
!9255 = !DILocation(line: 2425, column: 10, scope: !9241)
!9256 = !DILocation(line: 2425, column: 12, scope: !9241)
!9257 = !DILocation(line: 2426, column: 14, scope: !9241)
!9258 = !DILocation(line: 2426, column: 3, scope: !9241)
!9259 = !DILocation(line: 2426, column: 10, scope: !9241)
!9260 = !DILocation(line: 2426, column: 12, scope: !9241)
!9261 = !DILocation(line: 2427, column: 2, scope: !9241)
!9262 = !DILocation(line: 2418, column: 47, scope: !9238)
!9263 = !DILocation(line: 2418, column: 53, scope: !9238)
!9264 = !DILocation(line: 2418, column: 45, scope: !9238)
!9265 = !DILocation(line: 2418, column: 2, scope: !9238)
!9266 = distinct !{!9266, !9239, !9267}
!9267 = !DILocation(line: 2427, column: 2, scope: !9232)
!9268 = !DILocation(line: 2429, column: 14, scope: !9206)
!9269 = !DILocation(line: 2429, column: 2, scope: !9206)
!9270 = !DILocation(line: 2429, column: 9, scope: !9206)
!9271 = !DILocation(line: 2429, column: 11, scope: !9206)
!9272 = !DILocation(line: 2430, column: 14, scope: !9206)
!9273 = !DILocation(line: 2430, column: 2, scope: !9206)
!9274 = !DILocation(line: 2430, column: 9, scope: !9206)
!9275 = !DILocation(line: 2430, column: 11, scope: !9206)
!9276 = !DILocation(line: 2431, column: 1, scope: !9206)
!9277 = distinct !DISubprogram(name: "ui_litem_estimate_split", scope: !3, file: !3, line: 2492, type: !3469, scopeLine: 2493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9278 = !DILocalVariable(name: "litem", arg: 1, scope: !9277, file: !3, line: 2492, type: !1113)
!9279 = !DILocation(line: 2492, column: 47, scope: !9277)
!9280 = !DILocation(line: 2494, column: 24, scope: !9277)
!9281 = !DILocation(line: 2494, column: 2, scope: !9277)
!9282 = !DILocation(line: 2495, column: 1, scope: !9277)
!9283 = distinct !DISubprogram(name: "ui_litem_estimate_overlap", scope: !3, file: !3, line: 2538, type: !3469, scopeLine: 2539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9284 = !DILocalVariable(name: "litem", arg: 1, scope: !9283, file: !3, line: 2538, type: !1113)
!9285 = !DILocation(line: 2538, column: 49, scope: !9283)
!9286 = !DILocalVariable(name: "item", scope: !9283, file: !3, line: 2540, type: !3181)
!9287 = !DILocation(line: 2540, column: 10, scope: !9283)
!9288 = !DILocalVariable(name: "itemw", scope: !9283, file: !3, line: 2541, type: !1100)
!9289 = !DILocation(line: 2541, column: 6, scope: !9283)
!9290 = !DILocalVariable(name: "itemh", scope: !9283, file: !3, line: 2541, type: !1100)
!9291 = !DILocation(line: 2541, column: 13, scope: !9283)
!9292 = !DILocation(line: 2543, column: 2, scope: !9283)
!9293 = !DILocation(line: 2543, column: 9, scope: !9283)
!9294 = !DILocation(line: 2543, column: 11, scope: !9283)
!9295 = !DILocation(line: 2544, column: 2, scope: !9283)
!9296 = !DILocation(line: 2544, column: 9, scope: !9283)
!9297 = !DILocation(line: 2544, column: 11, scope: !9283)
!9298 = !DILocation(line: 2546, column: 14, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 2546, column: 2)
!9300 = !DILocation(line: 2546, column: 21, scope: !9299)
!9301 = !DILocation(line: 2546, column: 27, scope: !9299)
!9302 = !DILocation(line: 2546, column: 12, scope: !9299)
!9303 = !DILocation(line: 2546, column: 7, scope: !9299)
!9304 = !DILocation(line: 2546, column: 34, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 2546, column: 2)
!9306 = !DILocation(line: 2546, column: 2, scope: !9299)
!9307 = !DILocation(line: 2547, column: 16, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 2546, column: 59)
!9309 = !DILocation(line: 2547, column: 3, scope: !9308)
!9310 = !DILocation(line: 2549, column: 14, scope: !9308)
!9311 = !DILocation(line: 2549, column: 3, scope: !9308)
!9312 = !DILocation(line: 2549, column: 10, scope: !9308)
!9313 = !DILocation(line: 2549, column: 12, scope: !9308)
!9314 = !DILocation(line: 2550, column: 14, scope: !9308)
!9315 = !DILocation(line: 2550, column: 3, scope: !9308)
!9316 = !DILocation(line: 2550, column: 10, scope: !9308)
!9317 = !DILocation(line: 2550, column: 12, scope: !9308)
!9318 = !DILocation(line: 2551, column: 2, scope: !9308)
!9319 = !DILocation(line: 2546, column: 47, scope: !9305)
!9320 = !DILocation(line: 2546, column: 53, scope: !9305)
!9321 = !DILocation(line: 2546, column: 45, scope: !9305)
!9322 = !DILocation(line: 2546, column: 2, scope: !9305)
!9323 = distinct !{!9323, !9306, !9324}
!9324 = !DILocation(line: 2551, column: 2, scope: !9299)
!9325 = !DILocation(line: 2552, column: 1, scope: !9283)
!9326 = distinct !DISubprogram(name: "ui_item_size", scope: !3, file: !3, line: 249, type: !9327, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9327 = !DISubroutineType(types: !9328)
!9328 = !{null, !3181, !4313, !4313}
!9329 = !DILocalVariable(name: "item", arg: 1, scope: !9326, file: !3, line: 249, type: !3181)
!9330 = !DILocation(line: 249, column: 34, scope: !9326)
!9331 = !DILocalVariable(name: "r_w", arg: 2, scope: !9326, file: !3, line: 249, type: !4313)
!9332 = !DILocation(line: 249, column: 45, scope: !9326)
!9333 = !DILocalVariable(name: "r_h", arg: 3, scope: !9326, file: !3, line: 249, type: !4313)
!9334 = !DILocation(line: 249, column: 55, scope: !9326)
!9335 = !DILocation(line: 251, column: 6, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 251, column: 6)
!9337 = !DILocation(line: 251, column: 12, scope: !9336)
!9338 = !DILocation(line: 251, column: 17, scope: !9336)
!9339 = !DILocation(line: 251, column: 6, scope: !9326)
!9340 = !DILocalVariable(name: "bitem", scope: !9341, file: !3, line: 252, type: !2308)
!9341 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 251, column: 33)
!9342 = !DILocation(line: 252, column: 17, scope: !9341)
!9343 = !DILocation(line: 252, column: 41, scope: !9341)
!9344 = !DILocation(line: 252, column: 25, scope: !9341)
!9345 = !DILocation(line: 254, column: 7, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 254, column: 7)
!9347 = !DILocation(line: 254, column: 7, scope: !9341)
!9348 = !DILocation(line: 254, column: 36, scope: !9346)
!9349 = !DILocation(line: 254, column: 43, scope: !9346)
!9350 = !DILocation(line: 254, column: 48, scope: !9346)
!9351 = !DILocation(line: 254, column: 19, scope: !9346)
!9352 = !DILocation(line: 254, column: 13, scope: !9346)
!9353 = !DILocation(line: 254, column: 17, scope: !9346)
!9354 = !DILocation(line: 254, column: 12, scope: !9346)
!9355 = !DILocation(line: 255, column: 7, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 255, column: 7)
!9357 = !DILocation(line: 255, column: 7, scope: !9341)
!9358 = !DILocation(line: 255, column: 36, scope: !9356)
!9359 = !DILocation(line: 255, column: 43, scope: !9356)
!9360 = !DILocation(line: 255, column: 48, scope: !9356)
!9361 = !DILocation(line: 255, column: 19, scope: !9356)
!9362 = !DILocation(line: 255, column: 13, scope: !9356)
!9363 = !DILocation(line: 255, column: 17, scope: !9356)
!9364 = !DILocation(line: 255, column: 12, scope: !9356)
!9365 = !DILocation(line: 256, column: 2, scope: !9341)
!9366 = !DILocalVariable(name: "litem", scope: !9367, file: !3, line: 258, type: !1113)
!9367 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 257, column: 7)
!9368 = !DILocation(line: 258, column: 13, scope: !9367)
!9369 = !DILocation(line: 258, column: 33, scope: !9367)
!9370 = !DILocation(line: 258, column: 21, scope: !9367)
!9371 = !DILocation(line: 260, column: 7, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 260, column: 7)
!9373 = !DILocation(line: 260, column: 7, scope: !9367)
!9374 = !DILocation(line: 260, column: 19, scope: !9372)
!9375 = !DILocation(line: 260, column: 26, scope: !9372)
!9376 = !DILocation(line: 260, column: 13, scope: !9372)
!9377 = !DILocation(line: 260, column: 17, scope: !9372)
!9378 = !DILocation(line: 260, column: 12, scope: !9372)
!9379 = !DILocation(line: 261, column: 7, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 261, column: 7)
!9381 = !DILocation(line: 261, column: 7, scope: !9367)
!9382 = !DILocation(line: 261, column: 19, scope: !9380)
!9383 = !DILocation(line: 261, column: 26, scope: !9380)
!9384 = !DILocation(line: 261, column: 13, scope: !9380)
!9385 = !DILocation(line: 261, column: 17, scope: !9380)
!9386 = !DILocation(line: 261, column: 12, scope: !9380)
!9387 = !DILocation(line: 263, column: 1, scope: !9326)
!9388 = distinct !DISubprogram(name: "ui_item_offset", scope: !3, file: !3, line: 265, type: !9327, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9389 = !DILocalVariable(name: "item", arg: 1, scope: !9388, file: !3, line: 265, type: !3181)
!9390 = !DILocation(line: 265, column: 36, scope: !9388)
!9391 = !DILocalVariable(name: "r_x", arg: 2, scope: !9388, file: !3, line: 265, type: !4313)
!9392 = !DILocation(line: 265, column: 47, scope: !9388)
!9393 = !DILocalVariable(name: "r_y", arg: 3, scope: !9388, file: !3, line: 265, type: !4313)
!9394 = !DILocation(line: 265, column: 57, scope: !9388)
!9395 = !DILocation(line: 267, column: 6, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9388, file: !3, line: 267, column: 6)
!9397 = !DILocation(line: 267, column: 12, scope: !9396)
!9398 = !DILocation(line: 267, column: 17, scope: !9396)
!9399 = !DILocation(line: 267, column: 6, scope: !9388)
!9400 = !DILocalVariable(name: "bitem", scope: !9401, file: !3, line: 268, type: !2308)
!9401 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 267, column: 33)
!9402 = !DILocation(line: 268, column: 17, scope: !9401)
!9403 = !DILocation(line: 268, column: 41, scope: !9401)
!9404 = !DILocation(line: 268, column: 25, scope: !9401)
!9405 = !DILocation(line: 270, column: 7, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 270, column: 7)
!9407 = !DILocation(line: 270, column: 7, scope: !9401)
!9408 = !DILocation(line: 270, column: 19, scope: !9406)
!9409 = !DILocation(line: 270, column: 26, scope: !9406)
!9410 = !DILocation(line: 270, column: 31, scope: !9406)
!9411 = !DILocation(line: 270, column: 36, scope: !9406)
!9412 = !DILocation(line: 270, column: 13, scope: !9406)
!9413 = !DILocation(line: 270, column: 17, scope: !9406)
!9414 = !DILocation(line: 270, column: 12, scope: !9406)
!9415 = !DILocation(line: 271, column: 7, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 271, column: 7)
!9417 = !DILocation(line: 271, column: 7, scope: !9401)
!9418 = !DILocation(line: 271, column: 19, scope: !9416)
!9419 = !DILocation(line: 271, column: 26, scope: !9416)
!9420 = !DILocation(line: 271, column: 31, scope: !9416)
!9421 = !DILocation(line: 271, column: 36, scope: !9416)
!9422 = !DILocation(line: 271, column: 13, scope: !9416)
!9423 = !DILocation(line: 271, column: 17, scope: !9416)
!9424 = !DILocation(line: 271, column: 12, scope: !9416)
!9425 = !DILocation(line: 272, column: 2, scope: !9401)
!9426 = !DILocation(line: 274, column: 7, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 274, column: 7)
!9428 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 273, column: 7)
!9429 = !DILocation(line: 274, column: 7, scope: !9428)
!9430 = !DILocation(line: 274, column: 13, scope: !9427)
!9431 = !DILocation(line: 274, column: 17, scope: !9427)
!9432 = !DILocation(line: 274, column: 12, scope: !9427)
!9433 = !DILocation(line: 275, column: 7, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 275, column: 7)
!9435 = !DILocation(line: 275, column: 7, scope: !9428)
!9436 = !DILocation(line: 275, column: 13, scope: !9434)
!9437 = !DILocation(line: 275, column: 17, scope: !9434)
!9438 = !DILocation(line: 275, column: 12, scope: !9434)
!9439 = !DILocation(line: 277, column: 1, scope: !9388)
!9440 = distinct !DISubprogram(name: "ui_item_position", scope: !3, file: !3, line: 279, type: !9441, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{null, !3181, !1100, !1100, !1100, !1100}
!9443 = !DILocalVariable(name: "item", arg: 1, scope: !9440, file: !3, line: 279, type: !3181)
!9444 = !DILocation(line: 279, column: 38, scope: !9440)
!9445 = !DILocalVariable(name: "x", arg: 2, scope: !9440, file: !3, line: 279, type: !1100)
!9446 = !DILocation(line: 279, column: 48, scope: !9440)
!9447 = !DILocalVariable(name: "y", arg: 3, scope: !9440, file: !3, line: 279, type: !1100)
!9448 = !DILocation(line: 279, column: 55, scope: !9440)
!9449 = !DILocalVariable(name: "w", arg: 4, scope: !9440, file: !3, line: 279, type: !1100)
!9450 = !DILocation(line: 279, column: 62, scope: !9440)
!9451 = !DILocalVariable(name: "h", arg: 5, scope: !9440, file: !3, line: 279, type: !1100)
!9452 = !DILocation(line: 279, column: 69, scope: !9440)
!9453 = !DILocation(line: 281, column: 6, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 281, column: 6)
!9455 = !DILocation(line: 281, column: 12, scope: !9454)
!9456 = !DILocation(line: 281, column: 17, scope: !9454)
!9457 = !DILocation(line: 281, column: 6, scope: !9440)
!9458 = !DILocalVariable(name: "bitem", scope: !9459, file: !3, line: 282, type: !2308)
!9459 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 281, column: 33)
!9460 = !DILocation(line: 282, column: 17, scope: !9459)
!9461 = !DILocation(line: 282, column: 41, scope: !9459)
!9462 = !DILocation(line: 282, column: 25, scope: !9459)
!9463 = !DILocation(line: 284, column: 27, scope: !9459)
!9464 = !DILocation(line: 284, column: 3, scope: !9459)
!9465 = !DILocation(line: 284, column: 10, scope: !9459)
!9466 = !DILocation(line: 284, column: 15, scope: !9459)
!9467 = !DILocation(line: 284, column: 20, scope: !9459)
!9468 = !DILocation(line: 284, column: 25, scope: !9459)
!9469 = !DILocation(line: 285, column: 27, scope: !9459)
!9470 = !DILocation(line: 285, column: 3, scope: !9459)
!9471 = !DILocation(line: 285, column: 10, scope: !9459)
!9472 = !DILocation(line: 285, column: 15, scope: !9459)
!9473 = !DILocation(line: 285, column: 20, scope: !9459)
!9474 = !DILocation(line: 285, column: 25, scope: !9459)
!9475 = !DILocation(line: 286, column: 27, scope: !9459)
!9476 = !DILocation(line: 286, column: 31, scope: !9459)
!9477 = !DILocation(line: 286, column: 29, scope: !9459)
!9478 = !DILocation(line: 286, column: 3, scope: !9459)
!9479 = !DILocation(line: 286, column: 10, scope: !9459)
!9480 = !DILocation(line: 286, column: 15, scope: !9459)
!9481 = !DILocation(line: 286, column: 20, scope: !9459)
!9482 = !DILocation(line: 286, column: 25, scope: !9459)
!9483 = !DILocation(line: 287, column: 27, scope: !9459)
!9484 = !DILocation(line: 287, column: 31, scope: !9459)
!9485 = !DILocation(line: 287, column: 29, scope: !9459)
!9486 = !DILocation(line: 287, column: 3, scope: !9459)
!9487 = !DILocation(line: 287, column: 10, scope: !9459)
!9488 = !DILocation(line: 287, column: 15, scope: !9459)
!9489 = !DILocation(line: 287, column: 20, scope: !9459)
!9490 = !DILocation(line: 287, column: 25, scope: !9459)
!9491 = !DILocation(line: 289, column: 16, scope: !9459)
!9492 = !DILocation(line: 289, column: 23, scope: !9459)
!9493 = !DILocation(line: 289, column: 3, scope: !9459)
!9494 = !DILocation(line: 290, column: 2, scope: !9459)
!9495 = !DILocalVariable(name: "litem", scope: !9496, file: !3, line: 292, type: !1113)
!9496 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 291, column: 7)
!9497 = !DILocation(line: 292, column: 13, scope: !9496)
!9498 = !DILocation(line: 292, column: 33, scope: !9496)
!9499 = !DILocation(line: 292, column: 21, scope: !9496)
!9500 = !DILocation(line: 294, column: 14, scope: !9496)
!9501 = !DILocation(line: 294, column: 3, scope: !9496)
!9502 = !DILocation(line: 294, column: 10, scope: !9496)
!9503 = !DILocation(line: 294, column: 12, scope: !9496)
!9504 = !DILocation(line: 295, column: 14, scope: !9496)
!9505 = !DILocation(line: 295, column: 18, scope: !9496)
!9506 = !DILocation(line: 295, column: 16, scope: !9496)
!9507 = !DILocation(line: 295, column: 3, scope: !9496)
!9508 = !DILocation(line: 295, column: 10, scope: !9496)
!9509 = !DILocation(line: 295, column: 12, scope: !9496)
!9510 = !DILocation(line: 296, column: 14, scope: !9496)
!9511 = !DILocation(line: 296, column: 3, scope: !9496)
!9512 = !DILocation(line: 296, column: 10, scope: !9496)
!9513 = !DILocation(line: 296, column: 12, scope: !9496)
!9514 = !DILocation(line: 297, column: 14, scope: !9496)
!9515 = !DILocation(line: 297, column: 3, scope: !9496)
!9516 = !DILocation(line: 297, column: 10, scope: !9496)
!9517 = !DILocation(line: 297, column: 12, scope: !9496)
!9518 = !DILocation(line: 299, column: 1, scope: !9440)
!9519 = distinct !DISubprogram(name: "BLI_rctf_size_x", scope: !9520, file: !9520, line: 107, type: !9521, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9520 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9521 = !DISubroutineType(types: !9522)
!9522 = !{!1180, !9523}
!9523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9524, size: 64)
!9524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!9525 = !DILocalVariable(name: "rct", arg: 1, scope: !9519, file: !9520, line: 107, type: !9523)
!9526 = !DILocation(line: 107, column: 53, scope: !9519)
!9527 = !DILocation(line: 107, column: 68, scope: !9519)
!9528 = !DILocation(line: 107, column: 73, scope: !9519)
!9529 = !DILocation(line: 107, column: 80, scope: !9519)
!9530 = !DILocation(line: 107, column: 85, scope: !9519)
!9531 = !DILocation(line: 107, column: 78, scope: !9519)
!9532 = !DILocation(line: 107, column: 60, scope: !9519)
!9533 = distinct !DISubprogram(name: "BLI_rctf_size_y", scope: !9520, file: !9520, line: 108, type: !9521, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9534 = !DILocalVariable(name: "rct", arg: 1, scope: !9533, file: !9520, line: 108, type: !9523)
!9535 = !DILocation(line: 108, column: 53, scope: !9533)
!9536 = !DILocation(line: 108, column: 68, scope: !9533)
!9537 = !DILocation(line: 108, column: 73, scope: !9533)
!9538 = !DILocation(line: 108, column: 80, scope: !9533)
!9539 = !DILocation(line: 108, column: 85, scope: !9533)
!9540 = !DILocation(line: 108, column: 78, scope: !9533)
!9541 = !DILocation(line: 108, column: 60, scope: !9533)
!9542 = distinct !DISubprogram(name: "min_ii", scope: !8397, file: !8397, line: 211, type: !8398, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9543 = !DILocalVariable(name: "a", arg: 1, scope: !9542, file: !8397, line: 211, type: !1100)
!9544 = !DILocation(line: 211, column: 24, scope: !9542)
!9545 = !DILocalVariable(name: "b", arg: 2, scope: !9542, file: !8397, line: 211, type: !1100)
!9546 = !DILocation(line: 211, column: 31, scope: !9542)
!9547 = !DILocation(line: 213, column: 10, scope: !9542)
!9548 = !DILocation(line: 213, column: 14, scope: !9542)
!9549 = !DILocation(line: 213, column: 12, scope: !9542)
!9550 = !DILocation(line: 213, column: 9, scope: !9542)
!9551 = !DILocation(line: 213, column: 19, scope: !9542)
!9552 = !DILocation(line: 213, column: 23, scope: !9542)
!9553 = !DILocation(line: 213, column: 2, scope: !9542)
!9554 = distinct !DISubprogram(name: "ui_item_align", scope: !3, file: !3, line: 2952, type: !9555, scopeLine: 2953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9555 = !DISubroutineType(types: !9556)
!9556 = !{null, !1113, !1166}
!9557 = !DILocalVariable(name: "litem", arg: 1, scope: !9554, file: !3, line: 2952, type: !1113)
!9558 = !DILocation(line: 2952, column: 37, scope: !9554)
!9559 = !DILocalVariable(name: "nr", arg: 2, scope: !9554, file: !3, line: 2952, type: !1166)
!9560 = !DILocation(line: 2952, column: 50, scope: !9554)
!9561 = !DILocalVariable(name: "item", scope: !9554, file: !3, line: 2954, type: !3181)
!9562 = !DILocation(line: 2954, column: 10, scope: !9554)
!9563 = !DILocalVariable(name: "bitem", scope: !9554, file: !3, line: 2955, type: !2308)
!9564 = !DILocation(line: 2955, column: 16, scope: !9554)
!9565 = !DILocalVariable(name: "box", scope: !9554, file: !3, line: 2956, type: !2321)
!9566 = !DILocation(line: 2956, column: 18, scope: !9554)
!9567 = !DILocation(line: 2958, column: 14, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 2958, column: 2)
!9569 = !DILocation(line: 2958, column: 21, scope: !9568)
!9570 = !DILocation(line: 2958, column: 27, scope: !9568)
!9571 = !DILocation(line: 2958, column: 12, scope: !9568)
!9572 = !DILocation(line: 2958, column: 7, scope: !9568)
!9573 = !DILocation(line: 2958, column: 33, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2958, column: 2)
!9575 = !DILocation(line: 2958, column: 2, scope: !9568)
!9576 = !DILocation(line: 2959, column: 7, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9578, file: !3, line: 2959, column: 7)
!9578 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 2958, column: 58)
!9579 = !DILocation(line: 2959, column: 13, scope: !9577)
!9580 = !DILocation(line: 2959, column: 18, scope: !9577)
!9581 = !DILocation(line: 2959, column: 7, scope: !9578)
!9582 = !DILocation(line: 2960, column: 28, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 2959, column: 34)
!9584 = !DILocation(line: 2960, column: 12, scope: !9583)
!9585 = !DILocation(line: 2960, column: 10, scope: !9583)
!9586 = !DILocation(line: 2961, column: 25, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 2961, column: 8)
!9588 = !DILocation(line: 2961, column: 32, scope: !9587)
!9589 = !DILocation(line: 2961, column: 8, scope: !9587)
!9590 = !DILocation(line: 2961, column: 8, scope: !9583)
!9591 = !DILocation(line: 2962, column: 10, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 2962, column: 9)
!9593 = !DILocation(line: 2962, column: 17, scope: !9592)
!9594 = !DILocation(line: 2962, column: 22, scope: !9592)
!9595 = !DILocation(line: 2962, column: 9, scope: !9587)
!9596 = !DILocation(line: 2963, column: 28, scope: !9592)
!9597 = !DILocation(line: 2963, column: 6, scope: !9592)
!9598 = !DILocation(line: 2963, column: 13, scope: !9592)
!9599 = !DILocation(line: 2963, column: 18, scope: !9592)
!9600 = !DILocation(line: 2963, column: 26, scope: !9592)
!9601 = !DILocation(line: 2964, column: 3, scope: !9583)
!9602 = !DILocation(line: 2965, column: 12, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 2965, column: 12)
!9604 = !DILocation(line: 2965, column: 18, scope: !9603)
!9605 = !DILocation(line: 2965, column: 23, scope: !9603)
!9606 = !DILocation(line: 2965, column: 12, scope: !9577)
!9607 = !DILocation(line: 2967, column: 3, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 2965, column: 48)
!9609 = !DILocation(line: 2968, column: 12, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 2968, column: 12)
!9611 = !DILocation(line: 2968, column: 18, scope: !9610)
!9612 = !DILocation(line: 2968, column: 23, scope: !9610)
!9613 = !DILocation(line: 2968, column: 12, scope: !9603)
!9614 = !DILocation(line: 2970, column: 3, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 2968, column: 47)
!9616 = !DILocation(line: 2971, column: 12, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 2971, column: 12)
!9618 = !DILocation(line: 2971, column: 18, scope: !9617)
!9619 = !DILocation(line: 2971, column: 23, scope: !9617)
!9620 = !DILocation(line: 2971, column: 12, scope: !9610)
!9621 = !DILocation(line: 2972, column: 28, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 2971, column: 43)
!9623 = !DILocation(line: 2972, column: 10, scope: !9622)
!9624 = !DILocation(line: 2972, column: 8, scope: !9622)
!9625 = !DILocation(line: 2973, column: 29, scope: !9622)
!9626 = !DILocation(line: 2973, column: 4, scope: !9622)
!9627 = !DILocation(line: 2973, column: 9, scope: !9622)
!9628 = !DILocation(line: 2973, column: 19, scope: !9622)
!9629 = !DILocation(line: 2973, column: 27, scope: !9622)
!9630 = !DILocation(line: 2974, column: 17, scope: !9622)
!9631 = !DILocation(line: 2974, column: 24, scope: !9622)
!9632 = !DILocation(line: 2974, column: 30, scope: !9622)
!9633 = !DILocation(line: 2974, column: 37, scope: !9622)
!9634 = !DILocation(line: 2974, column: 46, scope: !9622)
!9635 = !DILocation(line: 2974, column: 51, scope: !9622)
!9636 = !DILocation(line: 2974, column: 4, scope: !9622)
!9637 = !DILocation(line: 2975, column: 17, scope: !9622)
!9638 = !DILocation(line: 2975, column: 24, scope: !9622)
!9639 = !DILocation(line: 2975, column: 30, scope: !9622)
!9640 = !DILocation(line: 2975, column: 37, scope: !9622)
!9641 = !DILocation(line: 2975, column: 46, scope: !9622)
!9642 = !DILocation(line: 2975, column: 51, scope: !9622)
!9643 = !DILocation(line: 2975, column: 4, scope: !9622)
!9644 = !DILocation(line: 2976, column: 3, scope: !9622)
!9645 = !DILocation(line: 2977, column: 25, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 2977, column: 12)
!9647 = !DILocation(line: 2977, column: 32, scope: !9646)
!9648 = !DILocation(line: 2977, column: 12, scope: !9646)
!9649 = !DILocation(line: 2977, column: 12, scope: !9617)
!9650 = !DILocation(line: 2978, column: 30, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 2977, column: 39)
!9652 = !DILocation(line: 2978, column: 18, scope: !9651)
!9653 = !DILocation(line: 2978, column: 36, scope: !9651)
!9654 = !DILocation(line: 2978, column: 4, scope: !9651)
!9655 = !DILocation(line: 2979, column: 3, scope: !9651)
!9656 = !DILocation(line: 2980, column: 2, scope: !9578)
!9657 = !DILocation(line: 2958, column: 46, scope: !9574)
!9658 = !DILocation(line: 2958, column: 52, scope: !9574)
!9659 = !DILocation(line: 2958, column: 44, scope: !9574)
!9660 = !DILocation(line: 2958, column: 2, scope: !9574)
!9661 = distinct !{!9661, !9575, !9662}
!9662 = !DILocation(line: 2980, column: 2, scope: !9568)
!9663 = !DILocation(line: 2981, column: 1, scope: !9554)
!9664 = distinct !DISubprogram(name: "ui_item_flag", scope: !3, file: !3, line: 2983, type: !7896, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9665 = !DILocalVariable(name: "litem", arg: 1, scope: !9664, file: !3, line: 2983, type: !1113)
!9666 = !DILocation(line: 2983, column: 36, scope: !9664)
!9667 = !DILocalVariable(name: "flag", arg: 2, scope: !9664, file: !3, line: 2983, type: !1100)
!9668 = !DILocation(line: 2983, column: 47, scope: !9664)
!9669 = !DILocalVariable(name: "item", scope: !9664, file: !3, line: 2985, type: !3181)
!9670 = !DILocation(line: 2985, column: 10, scope: !9664)
!9671 = !DILocalVariable(name: "bitem", scope: !9664, file: !3, line: 2986, type: !2308)
!9672 = !DILocation(line: 2986, column: 16, scope: !9664)
!9673 = !DILocation(line: 2988, column: 14, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 2988, column: 2)
!9675 = !DILocation(line: 2988, column: 21, scope: !9674)
!9676 = !DILocation(line: 2988, column: 27, scope: !9674)
!9677 = !DILocation(line: 2988, column: 12, scope: !9674)
!9678 = !DILocation(line: 2988, column: 7, scope: !9674)
!9679 = !DILocation(line: 2988, column: 33, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 2988, column: 2)
!9681 = !DILocation(line: 2988, column: 2, scope: !9674)
!9682 = !DILocation(line: 2989, column: 7, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 2989, column: 7)
!9684 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 2988, column: 58)
!9685 = !DILocation(line: 2989, column: 13, scope: !9683)
!9686 = !DILocation(line: 2989, column: 18, scope: !9683)
!9687 = !DILocation(line: 2989, column: 7, scope: !9684)
!9688 = !DILocation(line: 2990, column: 28, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 2989, column: 34)
!9690 = !DILocation(line: 2990, column: 12, scope: !9689)
!9691 = !DILocation(line: 2990, column: 10, scope: !9689)
!9692 = !DILocation(line: 2991, column: 24, scope: !9689)
!9693 = !DILocation(line: 2991, column: 4, scope: !9689)
!9694 = !DILocation(line: 2991, column: 11, scope: !9689)
!9695 = !DILocation(line: 2991, column: 16, scope: !9689)
!9696 = !DILocation(line: 2991, column: 21, scope: !9689)
!9697 = !DILocation(line: 2992, column: 3, scope: !9689)
!9698 = !DILocation(line: 2994, column: 29, scope: !9683)
!9699 = !DILocation(line: 2994, column: 17, scope: !9683)
!9700 = !DILocation(line: 2994, column: 35, scope: !9683)
!9701 = !DILocation(line: 2994, column: 4, scope: !9683)
!9702 = !DILocation(line: 2995, column: 2, scope: !9684)
!9703 = !DILocation(line: 2988, column: 46, scope: !9680)
!9704 = !DILocation(line: 2988, column: 52, scope: !9680)
!9705 = !DILocation(line: 2988, column: 44, scope: !9680)
!9706 = !DILocation(line: 2988, column: 2, scope: !9680)
!9707 = distinct !{!9707, !9681, !9708}
!9708 = !DILocation(line: 2995, column: 2, scope: !9674)
!9709 = !DILocation(line: 2996, column: 1, scope: !9664)
!9710 = distinct !DISubprogram(name: "ui_litem_layout_column", scope: !3, file: !3, line: 2093, type: !3469, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9711 = !DILocalVariable(name: "litem", arg: 1, scope: !9710, file: !3, line: 2093, type: !1113)
!9712 = !DILocation(line: 2093, column: 46, scope: !9710)
!9713 = !DILocalVariable(name: "item", scope: !9710, file: !3, line: 2095, type: !3181)
!9714 = !DILocation(line: 2095, column: 10, scope: !9710)
!9715 = !DILocalVariable(name: "itemh", scope: !9710, file: !3, line: 2096, type: !1100)
!9716 = !DILocation(line: 2096, column: 6, scope: !9710)
!9717 = !DILocalVariable(name: "x", scope: !9710, file: !3, line: 2096, type: !1100)
!9718 = !DILocation(line: 2096, column: 13, scope: !9710)
!9719 = !DILocalVariable(name: "y", scope: !9710, file: !3, line: 2096, type: !1100)
!9720 = !DILocation(line: 2096, column: 16, scope: !9710)
!9721 = !DILocation(line: 2098, column: 6, scope: !9710)
!9722 = !DILocation(line: 2098, column: 13, scope: !9710)
!9723 = !DILocation(line: 2098, column: 4, scope: !9710)
!9724 = !DILocation(line: 2099, column: 6, scope: !9710)
!9725 = !DILocation(line: 2099, column: 13, scope: !9710)
!9726 = !DILocation(line: 2099, column: 4, scope: !9710)
!9727 = !DILocation(line: 2101, column: 14, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 2101, column: 2)
!9729 = !DILocation(line: 2101, column: 21, scope: !9728)
!9730 = !DILocation(line: 2101, column: 27, scope: !9728)
!9731 = !DILocation(line: 2101, column: 12, scope: !9728)
!9732 = !DILocation(line: 2101, column: 7, scope: !9728)
!9733 = !DILocation(line: 2101, column: 34, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 2101, column: 2)
!9735 = !DILocation(line: 2101, column: 2, scope: !9728)
!9736 = !DILocation(line: 2102, column: 16, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9734, file: !3, line: 2101, column: 59)
!9738 = !DILocation(line: 2102, column: 3, scope: !9737)
!9739 = !DILocation(line: 2104, column: 8, scope: !9737)
!9740 = !DILocation(line: 2104, column: 5, scope: !9737)
!9741 = !DILocation(line: 2105, column: 20, scope: !9737)
!9742 = !DILocation(line: 2105, column: 26, scope: !9737)
!9743 = !DILocation(line: 2105, column: 29, scope: !9737)
!9744 = !DILocation(line: 2105, column: 32, scope: !9737)
!9745 = !DILocation(line: 2105, column: 39, scope: !9737)
!9746 = !DILocation(line: 2105, column: 42, scope: !9737)
!9747 = !DILocation(line: 2105, column: 3, scope: !9737)
!9748 = !DILocation(line: 2107, column: 7, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 2107, column: 7)
!9750 = !DILocation(line: 2107, column: 13, scope: !9749)
!9751 = !DILocation(line: 2107, column: 7, scope: !9737)
!9752 = !DILocation(line: 2108, column: 9, scope: !9749)
!9753 = !DILocation(line: 2108, column: 16, scope: !9749)
!9754 = !DILocation(line: 2108, column: 6, scope: !9749)
!9755 = !DILocation(line: 2108, column: 4, scope: !9749)
!9756 = !DILocation(line: 2109, column: 2, scope: !9737)
!9757 = !DILocation(line: 2101, column: 47, scope: !9734)
!9758 = !DILocation(line: 2101, column: 53, scope: !9734)
!9759 = !DILocation(line: 2101, column: 45, scope: !9734)
!9760 = !DILocation(line: 2101, column: 2, scope: !9734)
!9761 = distinct !{!9761, !9735, !9762}
!9762 = !DILocation(line: 2109, column: 2, scope: !9728)
!9763 = !DILocation(line: 2111, column: 13, scope: !9710)
!9764 = !DILocation(line: 2111, column: 20, scope: !9710)
!9765 = !DILocation(line: 2111, column: 24, scope: !9710)
!9766 = !DILocation(line: 2111, column: 22, scope: !9710)
!9767 = !DILocation(line: 2111, column: 2, scope: !9710)
!9768 = !DILocation(line: 2111, column: 9, scope: !9710)
!9769 = !DILocation(line: 2111, column: 11, scope: !9710)
!9770 = !DILocation(line: 2112, column: 13, scope: !9710)
!9771 = !DILocation(line: 2112, column: 2, scope: !9710)
!9772 = !DILocation(line: 2112, column: 9, scope: !9710)
!9773 = !DILocation(line: 2112, column: 11, scope: !9710)
!9774 = !DILocation(line: 2113, column: 13, scope: !9710)
!9775 = !DILocation(line: 2113, column: 2, scope: !9710)
!9776 = !DILocation(line: 2113, column: 9, scope: !9710)
!9777 = !DILocation(line: 2113, column: 11, scope: !9710)
!9778 = !DILocation(line: 2114, column: 1, scope: !9710)
!9779 = distinct !DISubprogram(name: "ui_litem_layout_column_flow", scope: !3, file: !3, line: 2355, type: !3469, scopeLine: 2356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9780 = !DILocalVariable(name: "litem", arg: 1, scope: !9779, file: !3, line: 2355, type: !1113)
!9781 = !DILocation(line: 2355, column: 51, scope: !9779)
!9782 = !DILocalVariable(name: "style", scope: !9779, file: !3, line: 2357, type: !1148)
!9783 = !DILocation(line: 2357, column: 11, scope: !9779)
!9784 = !DILocation(line: 2357, column: 19, scope: !9779)
!9785 = !DILocation(line: 2357, column: 26, scope: !9779)
!9786 = !DILocation(line: 2357, column: 32, scope: !9779)
!9787 = !DILocalVariable(name: "flow", scope: !9779, file: !3, line: 2358, type: !2314)
!9788 = !DILocation(line: 2358, column: 20, scope: !9779)
!9789 = !DILocation(line: 2358, column: 47, scope: !9779)
!9790 = !DILocation(line: 2358, column: 27, scope: !9779)
!9791 = !DILocalVariable(name: "item", scope: !9779, file: !3, line: 2359, type: !3181)
!9792 = !DILocation(line: 2359, column: 10, scope: !9779)
!9793 = !DILocalVariable(name: "col", scope: !9779, file: !3, line: 2360, type: !1100)
!9794 = !DILocation(line: 2360, column: 6, scope: !9779)
!9795 = !DILocalVariable(name: "x", scope: !9779, file: !3, line: 2360, type: !1100)
!9796 = !DILocation(line: 2360, column: 11, scope: !9779)
!9797 = !DILocalVariable(name: "y", scope: !9779, file: !3, line: 2360, type: !1100)
!9798 = !DILocation(line: 2360, column: 14, scope: !9779)
!9799 = !DILocalVariable(name: "w", scope: !9779, file: !3, line: 2360, type: !1100)
!9800 = !DILocation(line: 2360, column: 17, scope: !9779)
!9801 = !DILocalVariable(name: "emh", scope: !9779, file: !3, line: 2360, type: !1100)
!9802 = !DILocation(line: 2360, column: 20, scope: !9779)
!9803 = !DILocalVariable(name: "emy", scope: !9779, file: !3, line: 2360, type: !1100)
!9804 = !DILocation(line: 2360, column: 25, scope: !9779)
!9805 = !DILocalVariable(name: "miny", scope: !9779, file: !3, line: 2360, type: !1100)
!9806 = !DILocation(line: 2360, column: 30, scope: !9779)
!9807 = !DILocalVariable(name: "itemw", scope: !9779, file: !3, line: 2360, type: !1100)
!9808 = !DILocation(line: 2360, column: 36, scope: !9779)
!9809 = !DILocalVariable(name: "itemh", scope: !9779, file: !3, line: 2360, type: !1100)
!9810 = !DILocation(line: 2360, column: 43, scope: !9779)
!9811 = !DILocalVariable(name: "toth", scope: !9779, file: !3, line: 2361, type: !1100)
!9812 = !DILocation(line: 2361, column: 6, scope: !9779)
!9813 = !DILocalVariable(name: "totitem", scope: !9779, file: !3, line: 2361, type: !1100)
!9814 = !DILocation(line: 2361, column: 12, scope: !9779)
!9815 = !DILocalVariable(name: "offset", scope: !9779, file: !3, line: 2361, type: !1100)
!9816 = !DILocation(line: 2361, column: 21, scope: !9779)
!9817 = !DILocation(line: 2364, column: 7, scope: !9779)
!9818 = !DILocation(line: 2365, column: 10, scope: !9779)
!9819 = !DILocation(line: 2366, column: 14, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 2366, column: 2)
!9821 = !DILocation(line: 2366, column: 21, scope: !9820)
!9822 = !DILocation(line: 2366, column: 27, scope: !9820)
!9823 = !DILocation(line: 2366, column: 12, scope: !9820)
!9824 = !DILocation(line: 2366, column: 7, scope: !9820)
!9825 = !DILocation(line: 2366, column: 34, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 2366, column: 2)
!9827 = !DILocation(line: 2366, column: 2, scope: !9820)
!9828 = !DILocation(line: 2367, column: 16, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9826, file: !3, line: 2366, column: 59)
!9830 = !DILocation(line: 2367, column: 3, scope: !9829)
!9831 = !DILocation(line: 2368, column: 11, scope: !9829)
!9832 = !DILocation(line: 2368, column: 8, scope: !9829)
!9833 = !DILocation(line: 2369, column: 10, scope: !9829)
!9834 = !DILocation(line: 2370, column: 2, scope: !9829)
!9835 = !DILocation(line: 2366, column: 47, scope: !9826)
!9836 = !DILocation(line: 2366, column: 53, scope: !9826)
!9837 = !DILocation(line: 2366, column: 45, scope: !9826)
!9838 = !DILocation(line: 2366, column: 2, scope: !9826)
!9839 = distinct !{!9839, !9827, !9840}
!9840 = !DILocation(line: 2370, column: 2, scope: !9820)
!9841 = !DILocation(line: 2373, column: 6, scope: !9779)
!9842 = !DILocation(line: 2373, column: 13, scope: !9779)
!9843 = !DILocation(line: 2373, column: 4, scope: !9779)
!9844 = !DILocation(line: 2374, column: 6, scope: !9779)
!9845 = !DILocation(line: 2374, column: 13, scope: !9779)
!9846 = !DILocation(line: 2374, column: 4, scope: !9779)
!9847 = !DILocation(line: 2375, column: 6, scope: !9779)
!9848 = !DILocation(line: 2376, column: 7, scope: !9779)
!9849 = !DILocation(line: 2378, column: 6, scope: !9779)
!9850 = !DILocation(line: 2378, column: 13, scope: !9779)
!9851 = !DILocation(line: 2378, column: 18, scope: !9779)
!9852 = !DILocation(line: 2378, column: 24, scope: !9779)
!9853 = !DILocation(line: 2378, column: 31, scope: !9779)
!9854 = !DILocation(line: 2378, column: 38, scope: !9779)
!9855 = !DILocation(line: 2378, column: 45, scope: !9779)
!9856 = !DILocation(line: 2378, column: 36, scope: !9779)
!9857 = !DILocation(line: 2378, column: 15, scope: !9779)
!9858 = !DILocation(line: 2378, column: 4, scope: !9779)
!9859 = !DILocation(line: 2379, column: 8, scope: !9779)
!9860 = !DILocation(line: 2379, column: 15, scope: !9779)
!9861 = !DILocation(line: 2379, column: 21, scope: !9779)
!9862 = !DILocation(line: 2379, column: 13, scope: !9779)
!9863 = !DILocation(line: 2379, column: 6, scope: !9779)
!9864 = !DILocation(line: 2382, column: 6, scope: !9779)
!9865 = !DILocation(line: 2383, column: 14, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 2383, column: 2)
!9867 = !DILocation(line: 2383, column: 21, scope: !9866)
!9868 = !DILocation(line: 2383, column: 27, scope: !9866)
!9869 = !DILocation(line: 2383, column: 12, scope: !9866)
!9870 = !DILocation(line: 2383, column: 7, scope: !9866)
!9871 = !DILocation(line: 2383, column: 34, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 2383, column: 2)
!9873 = !DILocation(line: 2383, column: 2, scope: !9866)
!9874 = !DILocation(line: 2384, column: 16, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9872, file: !3, line: 2383, column: 59)
!9876 = !DILocation(line: 2384, column: 3, scope: !9875)
!9877 = !DILocation(line: 2385, column: 26, scope: !9875)
!9878 = !DILocation(line: 2385, column: 30, scope: !9875)
!9879 = !DILocation(line: 2385, column: 37, scope: !9875)
!9880 = !DILocation(line: 2385, column: 28, scope: !9875)
!9881 = !DILocation(line: 2385, column: 40, scope: !9875)
!9882 = !DILocation(line: 2385, column: 46, scope: !9875)
!9883 = !DILocation(line: 2385, column: 54, scope: !9875)
!9884 = !DILocation(line: 2385, column: 57, scope: !9875)
!9885 = !DILocation(line: 2385, column: 64, scope: !9875)
!9886 = !DILocation(line: 2385, column: 70, scope: !9875)
!9887 = !DILocation(line: 2385, column: 77, scope: !9875)
!9888 = !DILocation(line: 2385, column: 61, scope: !9875)
!9889 = !DILocation(line: 2385, column: 82, scope: !9875)
!9890 = !DILocation(line: 2385, column: 89, scope: !9875)
!9891 = !DILocation(line: 2385, column: 11, scope: !9875)
!9892 = !DILocation(line: 2385, column: 9, scope: !9875)
!9893 = !DILocation(line: 2387, column: 8, scope: !9875)
!9894 = !DILocation(line: 2387, column: 5, scope: !9875)
!9895 = !DILocation(line: 2388, column: 10, scope: !9875)
!9896 = !DILocation(line: 2388, column: 7, scope: !9875)
!9897 = !DILocation(line: 2389, column: 20, scope: !9875)
!9898 = !DILocation(line: 2389, column: 26, scope: !9875)
!9899 = !DILocation(line: 2389, column: 30, scope: !9875)
!9900 = !DILocation(line: 2389, column: 28, scope: !9875)
!9901 = !DILocation(line: 2389, column: 38, scope: !9875)
!9902 = !DILocation(line: 2389, column: 41, scope: !9875)
!9903 = !DILocation(line: 2389, column: 48, scope: !9875)
!9904 = !DILocation(line: 2389, column: 3, scope: !9875)
!9905 = !DILocation(line: 2390, column: 8, scope: !9875)
!9906 = !DILocation(line: 2390, column: 15, scope: !9875)
!9907 = !DILocation(line: 2390, column: 5, scope: !9875)
!9908 = !DILocation(line: 2391, column: 17, scope: !9875)
!9909 = !DILocation(line: 2391, column: 23, scope: !9875)
!9910 = !DILocation(line: 2391, column: 10, scope: !9875)
!9911 = !DILocation(line: 2391, column: 8, scope: !9875)
!9912 = !DILocation(line: 2394, column: 7, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 2394, column: 7)
!9914 = !DILocation(line: 2394, column: 13, scope: !9913)
!9915 = !DILocation(line: 2394, column: 19, scope: !9913)
!9916 = !DILocation(line: 2394, column: 26, scope: !9913)
!9917 = !DILocation(line: 2394, column: 11, scope: !9913)
!9918 = !DILocation(line: 2394, column: 30, scope: !9913)
!9919 = !DILocation(line: 2394, column: 33, scope: !9913)
!9920 = !DILocation(line: 2394, column: 41, scope: !9913)
!9921 = !DILocation(line: 2394, column: 40, scope: !9913)
!9922 = !DILocation(line: 2394, column: 37, scope: !9913)
!9923 = !DILocation(line: 2394, column: 7, scope: !9875)
!9924 = !DILocation(line: 2395, column: 9, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9913, file: !3, line: 2394, column: 46)
!9926 = !DILocation(line: 2395, column: 17, scope: !9925)
!9927 = !DILocation(line: 2395, column: 24, scope: !9925)
!9928 = !DILocation(line: 2395, column: 15, scope: !9925)
!9929 = !DILocation(line: 2395, column: 6, scope: !9925)
!9930 = !DILocation(line: 2396, column: 8, scope: !9925)
!9931 = !DILocation(line: 2396, column: 15, scope: !9925)
!9932 = !DILocation(line: 2396, column: 6, scope: !9925)
!9933 = !DILocation(line: 2397, column: 8, scope: !9925)
!9934 = !DILocation(line: 2398, column: 7, scope: !9925)
!9935 = !DILocation(line: 2399, column: 3, scope: !9925)
!9936 = !DILocation(line: 2400, column: 2, scope: !9875)
!9937 = !DILocation(line: 2383, column: 47, scope: !9872)
!9938 = !DILocation(line: 2383, column: 53, scope: !9872)
!9939 = !DILocation(line: 2383, column: 45, scope: !9872)
!9940 = !DILocation(line: 2383, column: 2, scope: !9872)
!9941 = distinct !{!9941, !9873, !9942}
!9942 = !DILocation(line: 2400, column: 2, scope: !9866)
!9943 = !DILocation(line: 2402, column: 13, scope: !9779)
!9944 = !DILocation(line: 2402, column: 20, scope: !9779)
!9945 = !DILocation(line: 2402, column: 24, scope: !9779)
!9946 = !DILocation(line: 2402, column: 22, scope: !9779)
!9947 = !DILocation(line: 2402, column: 2, scope: !9779)
!9948 = !DILocation(line: 2402, column: 9, scope: !9779)
!9949 = !DILocation(line: 2402, column: 11, scope: !9779)
!9950 = !DILocation(line: 2403, column: 13, scope: !9779)
!9951 = !DILocation(line: 2403, column: 2, scope: !9779)
!9952 = !DILocation(line: 2403, column: 9, scope: !9779)
!9953 = !DILocation(line: 2403, column: 11, scope: !9779)
!9954 = !DILocation(line: 2404, column: 13, scope: !9779)
!9955 = !DILocation(line: 2404, column: 2, scope: !9779)
!9956 = !DILocation(line: 2404, column: 9, scope: !9779)
!9957 = !DILocation(line: 2404, column: 11, scope: !9779)
!9958 = !DILocation(line: 2405, column: 1, scope: !9779)
!9959 = distinct !DISubprogram(name: "ui_litem_layout_row", scope: !3, file: !3, line: 1965, type: !3469, scopeLine: 1966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!9960 = !DILocalVariable(name: "litem", arg: 1, scope: !9959, file: !3, line: 1965, type: !1113)
!9961 = !DILocation(line: 1965, column: 43, scope: !9959)
!9962 = !DILocalVariable(name: "item", scope: !9959, file: !3, line: 1967, type: !3181)
!9963 = !DILocation(line: 1967, column: 10, scope: !9959)
!9964 = !DILocalVariable(name: "x", scope: !9959, file: !3, line: 1968, type: !1100)
!9965 = !DILocation(line: 1968, column: 6, scope: !9959)
!9966 = !DILocalVariable(name: "y", scope: !9959, file: !3, line: 1968, type: !1100)
!9967 = !DILocation(line: 1968, column: 9, scope: !9959)
!9968 = !DILocalVariable(name: "w", scope: !9959, file: !3, line: 1968, type: !1100)
!9969 = !DILocation(line: 1968, column: 12, scope: !9959)
!9970 = !DILocalVariable(name: "tot", scope: !9959, file: !3, line: 1968, type: !1100)
!9971 = !DILocation(line: 1968, column: 15, scope: !9959)
!9972 = !DILocalVariable(name: "totw", scope: !9959, file: !3, line: 1968, type: !1100)
!9973 = !DILocation(line: 1968, column: 20, scope: !9959)
!9974 = !DILocalVariable(name: "neww", scope: !9959, file: !3, line: 1968, type: !1100)
!9975 = !DILocation(line: 1968, column: 26, scope: !9959)
!9976 = !DILocalVariable(name: "newtotw", scope: !9959, file: !3, line: 1968, type: !1100)
!9977 = !DILocation(line: 1968, column: 32, scope: !9959)
!9978 = !DILocalVariable(name: "itemw", scope: !9959, file: !3, line: 1968, type: !1100)
!9979 = !DILocation(line: 1968, column: 41, scope: !9959)
!9980 = !DILocalVariable(name: "minw", scope: !9959, file: !3, line: 1968, type: !1100)
!9981 = !DILocation(line: 1968, column: 48, scope: !9959)
!9982 = !DILocalVariable(name: "itemh", scope: !9959, file: !3, line: 1968, type: !1100)
!9983 = !DILocation(line: 1968, column: 54, scope: !9959)
!9984 = !DILocalVariable(name: "offset", scope: !9959, file: !3, line: 1968, type: !1100)
!9985 = !DILocation(line: 1968, column: 61, scope: !9959)
!9986 = !DILocalVariable(name: "fixedw", scope: !9959, file: !3, line: 1969, type: !1100)
!9987 = !DILocation(line: 1969, column: 6, scope: !9959)
!9988 = !DILocalVariable(name: "freew", scope: !9959, file: !3, line: 1969, type: !1100)
!9989 = !DILocation(line: 1969, column: 14, scope: !9959)
!9990 = !DILocalVariable(name: "fixedx", scope: !9959, file: !3, line: 1969, type: !1100)
!9991 = !DILocation(line: 1969, column: 21, scope: !9959)
!9992 = !DILocalVariable(name: "freex", scope: !9959, file: !3, line: 1969, type: !1100)
!9993 = !DILocation(line: 1969, column: 29, scope: !9959)
!9994 = !DILocalVariable(name: "flag", scope: !9959, file: !3, line: 1969, type: !1100)
!9995 = !DILocation(line: 1969, column: 36, scope: !9959)
!9996 = !DILocalVariable(name: "lastw", scope: !9959, file: !3, line: 1969, type: !1100)
!9997 = !DILocation(line: 1969, column: 46, scope: !9959)
!9998 = !DILocation(line: 1972, column: 6, scope: !9959)
!9999 = !DILocation(line: 1972, column: 13, scope: !9959)
!10000 = !DILocation(line: 1972, column: 4, scope: !9959)
!10001 = !DILocation(line: 1973, column: 6, scope: !9959)
!10002 = !DILocation(line: 1973, column: 13, scope: !9959)
!10003 = !DILocation(line: 1973, column: 4, scope: !9959)
!10004 = !DILocation(line: 1974, column: 7, scope: !9959)
!10005 = !DILocation(line: 1975, column: 6, scope: !9959)
!10006 = !DILocation(line: 1977, column: 14, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1977, column: 2)
!10008 = !DILocation(line: 1977, column: 21, scope: !10007)
!10009 = !DILocation(line: 1977, column: 27, scope: !10007)
!10010 = !DILocation(line: 1977, column: 12, scope: !10007)
!10011 = !DILocation(line: 1977, column: 7, scope: !10007)
!10012 = !DILocation(line: 1977, column: 34, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10007, file: !3, line: 1977, column: 2)
!10014 = !DILocation(line: 1977, column: 2, scope: !10007)
!10015 = !DILocation(line: 1978, column: 16, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10013, file: !3, line: 1977, column: 59)
!10017 = !DILocation(line: 1978, column: 3, scope: !10016)
!10018 = !DILocation(line: 1979, column: 11, scope: !10016)
!10019 = !DILocation(line: 1979, column: 8, scope: !10016)
!10020 = !DILocation(line: 1980, column: 6, scope: !10016)
!10021 = !DILocation(line: 1981, column: 2, scope: !10016)
!10022 = !DILocation(line: 1977, column: 47, scope: !10013)
!10023 = !DILocation(line: 1977, column: 53, scope: !10013)
!10024 = !DILocation(line: 1977, column: 45, scope: !10013)
!10025 = !DILocation(line: 1977, column: 2, scope: !10013)
!10026 = distinct !{!10026, !10014, !10027}
!10027 = !DILocation(line: 1981, column: 2, scope: !10007)
!10028 = !DILocation(line: 1983, column: 6, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1983, column: 6)
!10030 = !DILocation(line: 1983, column: 11, scope: !10029)
!10031 = !DILocation(line: 1983, column: 6, scope: !9959)
!10032 = !DILocation(line: 1984, column: 3, scope: !10029)
!10033 = !DILocation(line: 1986, column: 6, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1986, column: 6)
!10035 = !DILocation(line: 1986, column: 8, scope: !10034)
!10036 = !DILocation(line: 1986, column: 6, scope: !9959)
!10037 = !DILocation(line: 1987, column: 9, scope: !10034)
!10038 = !DILocation(line: 1987, column: 13, scope: !10034)
!10039 = !DILocation(line: 1987, column: 20, scope: !10034)
!10040 = !DILocation(line: 1987, column: 27, scope: !10034)
!10041 = !DILocation(line: 1987, column: 18, scope: !10034)
!10042 = !DILocation(line: 1987, column: 5, scope: !10034)
!10043 = !DILocation(line: 1987, column: 3, scope: !10034)
!10044 = !DILocation(line: 1988, column: 9, scope: !9959)
!10045 = !DILocation(line: 1991, column: 2, scope: !9959)
!10046 = !DILocation(line: 1992, column: 9, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1991, column: 5)
!10048 = !DILocation(line: 1993, column: 5, scope: !10047)
!10049 = !DILocation(line: 1994, column: 8, scope: !10047)
!10050 = !DILocation(line: 1995, column: 13, scope: !10047)
!10051 = !DILocation(line: 1995, column: 11, scope: !10047)
!10052 = !DILocation(line: 1997, column: 15, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 1997, column: 3)
!10054 = !DILocation(line: 1997, column: 22, scope: !10053)
!10055 = !DILocation(line: 1997, column: 28, scope: !10053)
!10056 = !DILocation(line: 1997, column: 13, scope: !10053)
!10057 = !DILocation(line: 1997, column: 8, scope: !10053)
!10058 = !DILocation(line: 1997, column: 35, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 1997, column: 3)
!10060 = !DILocation(line: 1997, column: 3, scope: !10053)
!10061 = !DILocation(line: 1998, column: 8, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 1998, column: 8)
!10063 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 1997, column: 60)
!10064 = !DILocation(line: 1998, column: 14, scope: !10062)
!10065 = !DILocation(line: 1998, column: 8, scope: !10063)
!10066 = !DILocation(line: 1999, column: 5, scope: !10062)
!10067 = !DILocation(line: 2001, column: 17, scope: !10063)
!10068 = !DILocation(line: 2001, column: 4, scope: !10063)
!10069 = !DILocation(line: 2002, column: 30, scope: !10063)
!10070 = !DILocation(line: 2002, column: 11, scope: !10063)
!10071 = !DILocation(line: 2002, column: 9, scope: !10063)
!10072 = !DILocation(line: 2004, column: 8, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 2004, column: 8)
!10074 = !DILocation(line: 2004, column: 12, scope: !10073)
!10075 = !DILocation(line: 2004, column: 10, scope: !10073)
!10076 = !DILocation(line: 2004, column: 18, scope: !10073)
!10077 = !DILocation(line: 2004, column: 8, scope: !10063)
!10078 = !DILocation(line: 2005, column: 24, scope: !10073)
!10079 = !DILocation(line: 2005, column: 31, scope: !10073)
!10080 = !DILocation(line: 2005, column: 34, scope: !10073)
!10081 = !DILocation(line: 2005, column: 40, scope: !10073)
!10082 = !DILocation(line: 2005, column: 44, scope: !10073)
!10083 = !DILocation(line: 2005, column: 42, scope: !10073)
!10084 = !DILocation(line: 2005, column: 52, scope: !10073)
!10085 = !DILocation(line: 2005, column: 58, scope: !10073)
!10086 = !DILocation(line: 2005, column: 51, scope: !10073)
!10087 = !DILocation(line: 2005, column: 64, scope: !10073)
!10088 = !DILocation(line: 2005, column: 71, scope: !10073)
!10089 = !DILocation(line: 2005, column: 12, scope: !10073)
!10090 = !DILocation(line: 2005, column: 10, scope: !10073)
!10091 = !DILocation(line: 2005, column: 5, scope: !10073)
!10092 = !DILocation(line: 2007, column: 10, scope: !10073)
!10093 = !DILocation(line: 2009, column: 9, scope: !10063)
!10094 = !DILocation(line: 2009, column: 6, scope: !10063)
!10095 = !DILocation(line: 2011, column: 9, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 2011, column: 8)
!10097 = !DILocation(line: 2011, column: 16, scope: !10096)
!10098 = !DILocation(line: 2011, column: 14, scope: !10096)
!10099 = !DILocation(line: 2011, column: 21, scope: !10096)
!10100 = !DILocation(line: 2011, column: 24, scope: !10096)
!10101 = !DILocation(line: 2011, column: 33, scope: !10096)
!10102 = !DILocation(line: 2011, column: 30, scope: !10096)
!10103 = !DILocation(line: 2011, column: 39, scope: !10096)
!10104 = !DILocation(line: 2011, column: 42, scope: !10096)
!10105 = !DILocation(line: 2011, column: 44, scope: !10096)
!10106 = !DILocation(line: 2011, column: 8, scope: !10063)
!10107 = !DILocation(line: 2013, column: 5, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 2011, column: 50)
!10109 = !DILocation(line: 2013, column: 11, scope: !10108)
!10110 = !DILocation(line: 2013, column: 16, scope: !10108)
!10111 = !DILocation(line: 2014, column: 15, scope: !10108)
!10112 = !DILocation(line: 2014, column: 12, scope: !10108)
!10113 = !DILocation(line: 2015, column: 10, scope: !10108)
!10114 = !DILocation(line: 2016, column: 16, scope: !10108)
!10115 = !DILocation(line: 2016, column: 13, scope: !10108)
!10116 = !DILocation(line: 2017, column: 4, scope: !10108)
!10117 = !DILocation(line: 2020, column: 5, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 2018, column: 9)
!10119 = !DILocation(line: 2020, column: 11, scope: !10118)
!10120 = !DILocation(line: 2020, column: 16, scope: !10118)
!10121 = !DILocation(line: 2021, column: 14, scope: !10118)
!10122 = !DILocation(line: 2021, column: 11, scope: !10118)
!10123 = !DILocation(line: 2023, column: 3, scope: !10063)
!10124 = !DILocation(line: 1997, column: 48, scope: !10059)
!10125 = !DILocation(line: 1997, column: 54, scope: !10059)
!10126 = !DILocation(line: 1997, column: 46, scope: !10059)
!10127 = !DILocation(line: 1997, column: 3, scope: !10059)
!10128 = distinct !{!10128, !10060, !10129}
!10129 = !DILocation(line: 2023, column: 3, scope: !10053)
!10130 = !DILocation(line: 2025, column: 10, scope: !10047)
!10131 = !DILocation(line: 2025, column: 8, scope: !10047)
!10132 = !DILocation(line: 2026, column: 11, scope: !10047)
!10133 = !DILocation(line: 2026, column: 9, scope: !10047)
!10134 = !DILocation(line: 2027, column: 2, scope: !10047)
!10135 = !DILocation(line: 2027, column: 11, scope: !9959)
!10136 = distinct !{!10136, !10045, !10137}
!10137 = !DILocation(line: 2027, column: 15, scope: !9959)
!10138 = !DILocation(line: 2029, column: 8, scope: !9959)
!10139 = !DILocation(line: 2030, column: 9, scope: !9959)
!10140 = !DILocation(line: 2031, column: 6, scope: !9959)
!10141 = !DILocation(line: 2031, column: 13, scope: !9959)
!10142 = !DILocation(line: 2031, column: 4, scope: !9959)
!10143 = !DILocation(line: 2033, column: 14, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 2033, column: 2)
!10145 = !DILocation(line: 2033, column: 21, scope: !10144)
!10146 = !DILocation(line: 2033, column: 27, scope: !10144)
!10147 = !DILocation(line: 2033, column: 12, scope: !10144)
!10148 = !DILocation(line: 2033, column: 7, scope: !10144)
!10149 = !DILocation(line: 2033, column: 34, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 2033, column: 2)
!10151 = !DILocation(line: 2033, column: 2, scope: !10144)
!10152 = !DILocation(line: 2034, column: 16, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 2033, column: 59)
!10154 = !DILocation(line: 2034, column: 3, scope: !10153)
!10155 = !DILocation(line: 2035, column: 29, scope: !10153)
!10156 = !DILocation(line: 2035, column: 10, scope: !10153)
!10157 = !DILocation(line: 2035, column: 8, scope: !10153)
!10158 = !DILocation(line: 2037, column: 7, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 2037, column: 7)
!10160 = !DILocation(line: 2037, column: 13, scope: !10159)
!10161 = !DILocation(line: 2037, column: 7, scope: !10153)
!10162 = !DILocation(line: 2039, column: 24, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 2037, column: 19)
!10164 = !DILocation(line: 2039, column: 30, scope: !10163)
!10165 = !DILocation(line: 2039, column: 38, scope: !10163)
!10166 = !DILocation(line: 2039, column: 53, scope: !10163)
!10167 = !DILocation(line: 2039, column: 56, scope: !10163)
!10168 = !DILocation(line: 2039, column: 46, scope: !10163)
!10169 = !DILocation(line: 2039, column: 66, scope: !10163)
!10170 = !DILocation(line: 2039, column: 72, scope: !10163)
!10171 = !DILocation(line: 2039, column: 65, scope: !10163)
!10172 = !DILocation(line: 2039, column: 78, scope: !10163)
!10173 = !DILocation(line: 2039, column: 85, scope: !10163)
!10174 = !DILocation(line: 2039, column: 12, scope: !10163)
!10175 = !DILocation(line: 2039, column: 10, scope: !10163)
!10176 = !DILocation(line: 2040, column: 14, scope: !10163)
!10177 = !DILocation(line: 2040, column: 11, scope: !10163)
!10178 = !DILocation(line: 2041, column: 3, scope: !10163)
!10179 = !DILocation(line: 2044, column: 24, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 2042, column: 8)
!10181 = !DILocation(line: 2044, column: 31, scope: !10180)
!10182 = !DILocation(line: 2044, column: 38, scope: !10180)
!10183 = !DILocation(line: 2044, column: 45, scope: !10180)
!10184 = !DILocation(line: 2044, column: 49, scope: !10180)
!10185 = !DILocation(line: 2044, column: 47, scope: !10180)
!10186 = !DILocation(line: 2044, column: 58, scope: !10180)
!10187 = !DILocation(line: 2044, column: 64, scope: !10180)
!10188 = !DILocation(line: 2044, column: 57, scope: !10180)
!10189 = !DILocation(line: 2044, column: 70, scope: !10180)
!10190 = !DILocation(line: 2044, column: 77, scope: !10180)
!10191 = !DILocation(line: 2044, column: 12, scope: !10180)
!10192 = !DILocation(line: 2044, column: 10, scope: !10180)
!10193 = !DILocation(line: 2045, column: 13, scope: !10180)
!10194 = !DILocation(line: 2045, column: 10, scope: !10180)
!10195 = !DILocation(line: 2049, column: 10, scope: !10153)
!10196 = !DILocation(line: 2050, column: 7, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 2050, column: 7)
!10198 = !DILocation(line: 2050, column: 14, scope: !10197)
!10199 = !DILocation(line: 2050, column: 24, scope: !10197)
!10200 = !DILocation(line: 2050, column: 7, scope: !10153)
!10201 = !DILocation(line: 2051, column: 8, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 2051, column: 8)
!10203 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 2050, column: 50)
!10204 = !DILocation(line: 2051, column: 16, scope: !10202)
!10205 = !DILocation(line: 2051, column: 14, scope: !10202)
!10206 = !DILocation(line: 2051, column: 23, scope: !10202)
!10207 = !DILocation(line: 2051, column: 27, scope: !10202)
!10208 = !DILocation(line: 2051, column: 30, scope: !10202)
!10209 = !DILocation(line: 2051, column: 38, scope: !10202)
!10210 = !DILocation(line: 2051, column: 36, scope: !10202)
!10211 = !DILocation(line: 2051, column: 47, scope: !10202)
!10212 = !DILocation(line: 2051, column: 45, scope: !10202)
!10213 = !DILocation(line: 2051, column: 8, scope: !10203)
!10214 = !DILocation(line: 2052, column: 14, scope: !10202)
!10215 = !DILocation(line: 2052, column: 19, scope: !10202)
!10216 = !DILocation(line: 2052, column: 28, scope: !10202)
!10217 = !DILocation(line: 2052, column: 26, scope: !10202)
!10218 = !DILocation(line: 2052, column: 16, scope: !10202)
!10219 = !DILocation(line: 2052, column: 12, scope: !10202)
!10220 = !DILocation(line: 2052, column: 5, scope: !10202)
!10221 = !DILocation(line: 2053, column: 3, scope: !10203)
!10222 = !DILocation(line: 2054, column: 12, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 2054, column: 12)
!10224 = !DILocation(line: 2054, column: 19, scope: !10223)
!10225 = !DILocation(line: 2054, column: 29, scope: !10223)
!10226 = !DILocation(line: 2054, column: 12, scope: !10197)
!10227 = !DILocation(line: 2055, column: 8, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 2055, column: 8)
!10229 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 2054, column: 56)
!10230 = !DILocation(line: 2055, column: 16, scope: !10228)
!10231 = !DILocation(line: 2055, column: 14, scope: !10228)
!10232 = !DILocation(line: 2055, column: 23, scope: !10228)
!10233 = !DILocation(line: 2055, column: 27, scope: !10228)
!10234 = !DILocation(line: 2055, column: 30, scope: !10228)
!10235 = !DILocation(line: 2055, column: 38, scope: !10228)
!10236 = !DILocation(line: 2055, column: 36, scope: !10228)
!10237 = !DILocation(line: 2055, column: 47, scope: !10228)
!10238 = !DILocation(line: 2055, column: 45, scope: !10228)
!10239 = !DILocation(line: 2055, column: 8, scope: !10229)
!10240 = !DILocation(line: 2056, column: 15, scope: !10228)
!10241 = !DILocation(line: 2056, column: 20, scope: !10228)
!10242 = !DILocation(line: 2056, column: 29, scope: !10228)
!10243 = !DILocation(line: 2056, column: 27, scope: !10228)
!10244 = !DILocation(line: 2056, column: 17, scope: !10228)
!10245 = !DILocation(line: 2056, column: 37, scope: !10228)
!10246 = !DILocation(line: 2056, column: 12, scope: !10228)
!10247 = !DILocation(line: 2056, column: 5, scope: !10228)
!10248 = !DILocation(line: 2057, column: 3, scope: !10229)
!10249 = !DILocation(line: 2060, column: 20, scope: !10153)
!10250 = !DILocation(line: 2060, column: 26, scope: !10153)
!10251 = !DILocation(line: 2060, column: 30, scope: !10153)
!10252 = !DILocation(line: 2060, column: 28, scope: !10153)
!10253 = !DILocation(line: 2060, column: 38, scope: !10153)
!10254 = !DILocation(line: 2060, column: 42, scope: !10153)
!10255 = !DILocation(line: 2060, column: 40, scope: !10153)
!10256 = !DILocation(line: 2060, column: 49, scope: !10153)
!10257 = !DILocation(line: 2060, column: 56, scope: !10153)
!10258 = !DILocation(line: 2060, column: 3, scope: !10153)
!10259 = !DILocation(line: 2062, column: 8, scope: !10153)
!10260 = !DILocation(line: 2062, column: 5, scope: !10153)
!10261 = !DILocation(line: 2063, column: 7, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 2063, column: 7)
!10263 = !DILocation(line: 2063, column: 13, scope: !10262)
!10264 = !DILocation(line: 2063, column: 7, scope: !10153)
!10265 = !DILocation(line: 2064, column: 9, scope: !10262)
!10266 = !DILocation(line: 2064, column: 16, scope: !10262)
!10267 = !DILocation(line: 2064, column: 6, scope: !10262)
!10268 = !DILocation(line: 2064, column: 4, scope: !10262)
!10269 = !DILocation(line: 2065, column: 2, scope: !10153)
!10270 = !DILocation(line: 2033, column: 47, scope: !10150)
!10271 = !DILocation(line: 2033, column: 53, scope: !10150)
!10272 = !DILocation(line: 2033, column: 45, scope: !10150)
!10273 = !DILocation(line: 2033, column: 2, scope: !10150)
!10274 = distinct !{!10274, !10151, !10275}
!10275 = !DILocation(line: 2065, column: 2, scope: !10144)
!10276 = !DILocation(line: 2067, column: 13, scope: !9959)
!10277 = !DILocation(line: 2067, column: 17, scope: !9959)
!10278 = !DILocation(line: 2067, column: 24, scope: !9959)
!10279 = !DILocation(line: 2067, column: 15, scope: !9959)
!10280 = !DILocation(line: 2067, column: 2, scope: !9959)
!10281 = !DILocation(line: 2067, column: 9, scope: !9959)
!10282 = !DILocation(line: 2067, column: 11, scope: !9959)
!10283 = !DILocation(line: 2068, column: 13, scope: !9959)
!10284 = !DILocation(line: 2068, column: 20, scope: !9959)
!10285 = !DILocation(line: 2068, column: 24, scope: !9959)
!10286 = !DILocation(line: 2068, column: 22, scope: !9959)
!10287 = !DILocation(line: 2068, column: 2, scope: !9959)
!10288 = !DILocation(line: 2068, column: 9, scope: !9959)
!10289 = !DILocation(line: 2068, column: 11, scope: !9959)
!10290 = !DILocation(line: 2069, column: 13, scope: !9959)
!10291 = !DILocation(line: 2069, column: 2, scope: !9959)
!10292 = !DILocation(line: 2069, column: 9, scope: !9959)
!10293 = !DILocation(line: 2069, column: 11, scope: !9959)
!10294 = !DILocation(line: 2070, column: 13, scope: !9959)
!10295 = !DILocation(line: 2070, column: 2, scope: !9959)
!10296 = !DILocation(line: 2070, column: 9, scope: !9959)
!10297 = !DILocation(line: 2070, column: 11, scope: !9959)
!10298 = !DILocation(line: 2071, column: 1, scope: !9959)
!10299 = distinct !DISubprogram(name: "ui_litem_layout_box", scope: !3, file: !3, line: 2259, type: !3469, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!10300 = !DILocalVariable(name: "litem", arg: 1, scope: !10299, file: !3, line: 2259, type: !1113)
!10301 = !DILocation(line: 2259, column: 43, scope: !10299)
!10302 = !DILocalVariable(name: "box", scope: !10299, file: !3, line: 2261, type: !2321)
!10303 = !DILocation(line: 2261, column: 18, scope: !10299)
!10304 = !DILocation(line: 2261, column: 42, scope: !10299)
!10305 = !DILocation(line: 2261, column: 24, scope: !10299)
!10306 = !DILocalVariable(name: "style", scope: !10299, file: !3, line: 2262, type: !1148)
!10307 = !DILocation(line: 2262, column: 11, scope: !10299)
!10308 = !DILocation(line: 2262, column: 19, scope: !10299)
!10309 = !DILocation(line: 2262, column: 26, scope: !10299)
!10310 = !DILocation(line: 2262, column: 32, scope: !10299)
!10311 = !DILocalVariable(name: "but", scope: !10299, file: !3, line: 2263, type: !2159)
!10312 = !DILocation(line: 2263, column: 9, scope: !10299)
!10313 = !DILocalVariable(name: "w", scope: !10299, file: !3, line: 2264, type: !1100)
!10314 = !DILocation(line: 2264, column: 6, scope: !10299)
!10315 = !DILocalVariable(name: "h", scope: !10299, file: !3, line: 2264, type: !1100)
!10316 = !DILocation(line: 2264, column: 9, scope: !10299)
!10317 = !DILocation(line: 2266, column: 6, scope: !10299)
!10318 = !DILocation(line: 2266, column: 13, scope: !10299)
!10319 = !DILocation(line: 2266, column: 4, scope: !10299)
!10320 = !DILocation(line: 2267, column: 6, scope: !10299)
!10321 = !DILocation(line: 2267, column: 13, scope: !10299)
!10322 = !DILocation(line: 2267, column: 4, scope: !10299)
!10323 = !DILocation(line: 2269, column: 14, scope: !10299)
!10324 = !DILocation(line: 2269, column: 21, scope: !10299)
!10325 = !DILocation(line: 2269, column: 2, scope: !10299)
!10326 = !DILocation(line: 2269, column: 9, scope: !10299)
!10327 = !DILocation(line: 2269, column: 11, scope: !10299)
!10328 = !DILocation(line: 2271, column: 6, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2271, column: 6)
!10330 = !DILocation(line: 2271, column: 8, scope: !10329)
!10331 = !DILocation(line: 2271, column: 6, scope: !10299)
!10332 = !DILocation(line: 2271, column: 30, scope: !10329)
!10333 = !DILocation(line: 2271, column: 37, scope: !10329)
!10334 = !DILocation(line: 2271, column: 28, scope: !10329)
!10335 = !DILocation(line: 2271, column: 14, scope: !10329)
!10336 = !DILocation(line: 2271, column: 21, scope: !10329)
!10337 = !DILocation(line: 2271, column: 23, scope: !10329)
!10338 = !DILocation(line: 2272, column: 6, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2272, column: 6)
!10340 = !DILocation(line: 2272, column: 8, scope: !10339)
!10341 = !DILocation(line: 2272, column: 6, scope: !10299)
!10342 = !DILocation(line: 2272, column: 30, scope: !10339)
!10343 = !DILocation(line: 2272, column: 37, scope: !10339)
!10344 = !DILocation(line: 2272, column: 28, scope: !10339)
!10345 = !DILocation(line: 2272, column: 14, scope: !10339)
!10346 = !DILocation(line: 2272, column: 21, scope: !10339)
!10347 = !DILocation(line: 2272, column: 23, scope: !10339)
!10348 = !DILocation(line: 2274, column: 25, scope: !10299)
!10349 = !DILocation(line: 2274, column: 2, scope: !10299)
!10350 = !DILocation(line: 2276, column: 14, scope: !10299)
!10351 = !DILocation(line: 2276, column: 21, scope: !10299)
!10352 = !DILocation(line: 2276, column: 2, scope: !10299)
!10353 = !DILocation(line: 2276, column: 9, scope: !10299)
!10354 = !DILocation(line: 2276, column: 11, scope: !10299)
!10355 = !DILocation(line: 2277, column: 14, scope: !10299)
!10356 = !DILocation(line: 2277, column: 21, scope: !10299)
!10357 = !DILocation(line: 2277, column: 2, scope: !10299)
!10358 = !DILocation(line: 2277, column: 9, scope: !10299)
!10359 = !DILocation(line: 2277, column: 11, scope: !10299)
!10360 = !DILocation(line: 2279, column: 6, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2279, column: 6)
!10362 = !DILocation(line: 2279, column: 8, scope: !10361)
!10363 = !DILocation(line: 2279, column: 6, scope: !10299)
!10364 = !DILocation(line: 2279, column: 30, scope: !10361)
!10365 = !DILocation(line: 2279, column: 37, scope: !10361)
!10366 = !DILocation(line: 2279, column: 28, scope: !10361)
!10367 = !DILocation(line: 2279, column: 14, scope: !10361)
!10368 = !DILocation(line: 2279, column: 21, scope: !10361)
!10369 = !DILocation(line: 2279, column: 23, scope: !10361)
!10370 = !DILocation(line: 2280, column: 6, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 2280, column: 6)
!10372 = !DILocation(line: 2280, column: 8, scope: !10371)
!10373 = !DILocation(line: 2280, column: 6, scope: !10299)
!10374 = !DILocation(line: 2280, column: 26, scope: !10371)
!10375 = !DILocation(line: 2280, column: 33, scope: !10371)
!10376 = !DILocation(line: 2280, column: 14, scope: !10371)
!10377 = !DILocation(line: 2280, column: 21, scope: !10371)
!10378 = !DILocation(line: 2280, column: 23, scope: !10371)
!10379 = !DILocation(line: 2283, column: 8, scope: !10299)
!10380 = !DILocation(line: 2283, column: 13, scope: !10299)
!10381 = !DILocation(line: 2283, column: 6, scope: !10299)
!10382 = !DILocation(line: 2284, column: 19, scope: !10299)
!10383 = !DILocation(line: 2284, column: 26, scope: !10299)
!10384 = !DILocation(line: 2284, column: 2, scope: !10299)
!10385 = !DILocation(line: 2284, column: 7, scope: !10299)
!10386 = !DILocation(line: 2284, column: 12, scope: !10299)
!10387 = !DILocation(line: 2284, column: 17, scope: !10299)
!10388 = !DILocation(line: 2285, column: 19, scope: !10299)
!10389 = !DILocation(line: 2285, column: 26, scope: !10299)
!10390 = !DILocation(line: 2285, column: 2, scope: !10299)
!10391 = !DILocation(line: 2285, column: 7, scope: !10299)
!10392 = !DILocation(line: 2285, column: 12, scope: !10299)
!10393 = !DILocation(line: 2285, column: 17, scope: !10299)
!10394 = !DILocation(line: 2286, column: 19, scope: !10299)
!10395 = !DILocation(line: 2286, column: 26, scope: !10299)
!10396 = !DILocation(line: 2286, column: 30, scope: !10299)
!10397 = !DILocation(line: 2286, column: 37, scope: !10299)
!10398 = !DILocation(line: 2286, column: 28, scope: !10299)
!10399 = !DILocation(line: 2286, column: 2, scope: !10299)
!10400 = !DILocation(line: 2286, column: 7, scope: !10299)
!10401 = !DILocation(line: 2286, column: 12, scope: !10299)
!10402 = !DILocation(line: 2286, column: 17, scope: !10299)
!10403 = !DILocation(line: 2287, column: 19, scope: !10299)
!10404 = !DILocation(line: 2287, column: 26, scope: !10299)
!10405 = !DILocation(line: 2287, column: 30, scope: !10299)
!10406 = !DILocation(line: 2287, column: 37, scope: !10299)
!10407 = !DILocation(line: 2287, column: 28, scope: !10299)
!10408 = !DILocation(line: 2287, column: 2, scope: !10299)
!10409 = !DILocation(line: 2287, column: 7, scope: !10299)
!10410 = !DILocation(line: 2287, column: 12, scope: !10299)
!10411 = !DILocation(line: 2287, column: 17, scope: !10299)
!10412 = !DILocation(line: 2288, column: 1, scope: !10299)
!10413 = distinct !DISubprogram(name: "ui_litem_layout_root", scope: !3, file: !3, line: 2239, type: !3469, scopeLine: 2240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!10414 = !DILocalVariable(name: "litem", arg: 1, scope: !10413, file: !3, line: 2239, type: !1113)
!10415 = !DILocation(line: 2239, column: 44, scope: !10413)
!10416 = !DILocation(line: 2241, column: 6, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 2241, column: 6)
!10418 = !DILocation(line: 2241, column: 13, scope: !10417)
!10419 = !DILocation(line: 2241, column: 19, scope: !10417)
!10420 = !DILocation(line: 2241, column: 24, scope: !10417)
!10421 = !DILocation(line: 2241, column: 6, scope: !10413)
!10422 = !DILocation(line: 2242, column: 23, scope: !10417)
!10423 = !DILocation(line: 2242, column: 3, scope: !10417)
!10424 = !DILocation(line: 2243, column: 11, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 2243, column: 11)
!10426 = !DILocation(line: 2243, column: 18, scope: !10425)
!10427 = !DILocation(line: 2243, column: 24, scope: !10425)
!10428 = !DILocation(line: 2243, column: 29, scope: !10425)
!10429 = !DILocation(line: 2243, column: 11, scope: !10417)
!10430 = !DILocation(line: 2244, column: 31, scope: !10425)
!10431 = !DILocation(line: 2244, column: 3, scope: !10425)
!10432 = !DILocation(line: 2246, column: 26, scope: !10425)
!10433 = !DILocation(line: 2246, column: 3, scope: !10425)
!10434 = !DILocation(line: 2247, column: 1, scope: !10413)
!10435 = distinct !DISubprogram(name: "ui_litem_layout_absolute", scope: !3, file: !3, line: 2433, type: !3469, scopeLine: 2434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!10436 = !DILocalVariable(name: "litem", arg: 1, scope: !10435, file: !3, line: 2433, type: !1113)
!10437 = !DILocation(line: 2433, column: 48, scope: !10435)
!10438 = !DILocalVariable(name: "item", scope: !10435, file: !3, line: 2435, type: !3181)
!10439 = !DILocation(line: 2435, column: 10, scope: !10435)
!10440 = !DILocalVariable(name: "scalex", scope: !10435, file: !3, line: 2436, type: !1180)
!10441 = !DILocation(line: 2436, column: 8, scope: !10435)
!10442 = !DILocalVariable(name: "scaley", scope: !10435, file: !3, line: 2436, type: !1180)
!10443 = !DILocation(line: 2436, column: 23, scope: !10435)
!10444 = !DILocalVariable(name: "x", scope: !10435, file: !3, line: 2437, type: !1100)
!10445 = !DILocation(line: 2437, column: 6, scope: !10435)
!10446 = !DILocalVariable(name: "y", scope: !10435, file: !3, line: 2437, type: !1100)
!10447 = !DILocation(line: 2437, column: 9, scope: !10435)
!10448 = !DILocalVariable(name: "newx", scope: !10435, file: !3, line: 2437, type: !1100)
!10449 = !DILocation(line: 2437, column: 12, scope: !10435)
!10450 = !DILocalVariable(name: "newy", scope: !10435, file: !3, line: 2437, type: !1100)
!10451 = !DILocation(line: 2437, column: 18, scope: !10435)
!10452 = !DILocalVariable(name: "itemx", scope: !10435, file: !3, line: 2437, type: !1100)
!10453 = !DILocation(line: 2437, column: 24, scope: !10435)
!10454 = !DILocalVariable(name: "itemy", scope: !10435, file: !3, line: 2437, type: !1100)
!10455 = !DILocation(line: 2437, column: 31, scope: !10435)
!10456 = !DILocalVariable(name: "itemh", scope: !10435, file: !3, line: 2437, type: !1100)
!10457 = !DILocation(line: 2437, column: 38, scope: !10435)
!10458 = !DILocalVariable(name: "itemw", scope: !10435, file: !3, line: 2437, type: !1100)
!10459 = !DILocation(line: 2437, column: 45, scope: !10435)
!10460 = !DILocalVariable(name: "minx", scope: !10435, file: !3, line: 2437, type: !1100)
!10461 = !DILocation(line: 2437, column: 52, scope: !10435)
!10462 = !DILocalVariable(name: "miny", scope: !10435, file: !3, line: 2437, type: !1100)
!10463 = !DILocation(line: 2437, column: 58, scope: !10435)
!10464 = !DILocalVariable(name: "totw", scope: !10435, file: !3, line: 2437, type: !1100)
!10465 = !DILocation(line: 2437, column: 64, scope: !10435)
!10466 = !DILocalVariable(name: "toth", scope: !10435, file: !3, line: 2437, type: !1100)
!10467 = !DILocation(line: 2437, column: 70, scope: !10435)
!10468 = !DILocation(line: 2439, column: 7, scope: !10435)
!10469 = !DILocation(line: 2440, column: 7, scope: !10435)
!10470 = !DILocation(line: 2441, column: 7, scope: !10435)
!10471 = !DILocation(line: 2442, column: 7, scope: !10435)
!10472 = !DILocation(line: 2444, column: 14, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 2444, column: 2)
!10474 = !DILocation(line: 2444, column: 21, scope: !10473)
!10475 = !DILocation(line: 2444, column: 27, scope: !10473)
!10476 = !DILocation(line: 2444, column: 12, scope: !10473)
!10477 = !DILocation(line: 2444, column: 7, scope: !10473)
!10478 = !DILocation(line: 2444, column: 34, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 2444, column: 2)
!10480 = !DILocation(line: 2444, column: 2, scope: !10473)
!10481 = !DILocation(line: 2445, column: 18, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 2444, column: 59)
!10483 = !DILocation(line: 2445, column: 3, scope: !10482)
!10484 = !DILocation(line: 2446, column: 16, scope: !10482)
!10485 = !DILocation(line: 2446, column: 3, scope: !10482)
!10486 = !DILocation(line: 2448, column: 17, scope: !10482)
!10487 = !DILocation(line: 2448, column: 23, scope: !10482)
!10488 = !DILocation(line: 2448, column: 10, scope: !10482)
!10489 = !DILocation(line: 2448, column: 8, scope: !10482)
!10490 = !DILocation(line: 2449, column: 17, scope: !10482)
!10491 = !DILocation(line: 2449, column: 23, scope: !10482)
!10492 = !DILocation(line: 2449, column: 10, scope: !10482)
!10493 = !DILocation(line: 2449, column: 8, scope: !10482)
!10494 = !DILocation(line: 2451, column: 17, scope: !10482)
!10495 = !DILocation(line: 2451, column: 23, scope: !10482)
!10496 = !DILocation(line: 2451, column: 31, scope: !10482)
!10497 = !DILocation(line: 2451, column: 29, scope: !10482)
!10498 = !DILocation(line: 2451, column: 10, scope: !10482)
!10499 = !DILocation(line: 2451, column: 8, scope: !10482)
!10500 = !DILocation(line: 2452, column: 17, scope: !10482)
!10501 = !DILocation(line: 2452, column: 23, scope: !10482)
!10502 = !DILocation(line: 2452, column: 31, scope: !10482)
!10503 = !DILocation(line: 2452, column: 29, scope: !10482)
!10504 = !DILocation(line: 2452, column: 10, scope: !10482)
!10505 = !DILocation(line: 2452, column: 8, scope: !10482)
!10506 = !DILocation(line: 2453, column: 2, scope: !10482)
!10507 = !DILocation(line: 2444, column: 47, scope: !10479)
!10508 = !DILocation(line: 2444, column: 53, scope: !10479)
!10509 = !DILocation(line: 2444, column: 45, scope: !10479)
!10510 = !DILocation(line: 2444, column: 2, scope: !10479)
!10511 = distinct !{!10511, !10480, !10512}
!10512 = !DILocation(line: 2453, column: 2, scope: !10473)
!10513 = !DILocation(line: 2455, column: 10, scope: !10435)
!10514 = !DILocation(line: 2455, column: 7, scope: !10435)
!10515 = !DILocation(line: 2456, column: 10, scope: !10435)
!10516 = !DILocation(line: 2456, column: 7, scope: !10435)
!10517 = !DILocation(line: 2458, column: 6, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 2458, column: 6)
!10519 = !DILocation(line: 2458, column: 13, scope: !10518)
!10520 = !DILocation(line: 2458, column: 15, scope: !10518)
!10521 = !DILocation(line: 2458, column: 18, scope: !10518)
!10522 = !DILocation(line: 2458, column: 23, scope: !10518)
!10523 = !DILocation(line: 2458, column: 6, scope: !10435)
!10524 = !DILocation(line: 2459, column: 19, scope: !10518)
!10525 = !DILocation(line: 2459, column: 26, scope: !10518)
!10526 = !DILocation(line: 2459, column: 12, scope: !10518)
!10527 = !DILocation(line: 2459, column: 37, scope: !10518)
!10528 = !DILocation(line: 2459, column: 30, scope: !10518)
!10529 = !DILocation(line: 2459, column: 28, scope: !10518)
!10530 = !DILocation(line: 2459, column: 10, scope: !10518)
!10531 = !DILocation(line: 2459, column: 3, scope: !10518)
!10532 = !DILocation(line: 2460, column: 6, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 2460, column: 6)
!10534 = !DILocation(line: 2460, column: 13, scope: !10533)
!10535 = !DILocation(line: 2460, column: 15, scope: !10533)
!10536 = !DILocation(line: 2460, column: 18, scope: !10533)
!10537 = !DILocation(line: 2460, column: 23, scope: !10533)
!10538 = !DILocation(line: 2460, column: 6, scope: !10435)
!10539 = !DILocation(line: 2461, column: 19, scope: !10533)
!10540 = !DILocation(line: 2461, column: 26, scope: !10533)
!10541 = !DILocation(line: 2461, column: 12, scope: !10533)
!10542 = !DILocation(line: 2461, column: 37, scope: !10533)
!10543 = !DILocation(line: 2461, column: 30, scope: !10533)
!10544 = !DILocation(line: 2461, column: 28, scope: !10533)
!10545 = !DILocation(line: 2461, column: 10, scope: !10533)
!10546 = !DILocation(line: 2461, column: 3, scope: !10533)
!10547 = !DILocation(line: 2463, column: 6, scope: !10435)
!10548 = !DILocation(line: 2463, column: 13, scope: !10435)
!10549 = !DILocation(line: 2463, column: 4, scope: !10435)
!10550 = !DILocation(line: 2464, column: 6, scope: !10435)
!10551 = !DILocation(line: 2464, column: 13, scope: !10435)
!10552 = !DILocation(line: 2464, column: 17, scope: !10435)
!10553 = !DILocation(line: 2464, column: 26, scope: !10435)
!10554 = !DILocation(line: 2464, column: 24, scope: !10435)
!10555 = !DILocation(line: 2464, column: 15, scope: !10435)
!10556 = !DILocation(line: 2464, column: 4, scope: !10435)
!10557 = !DILocation(line: 2466, column: 14, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 2466, column: 2)
!10559 = !DILocation(line: 2466, column: 21, scope: !10558)
!10560 = !DILocation(line: 2466, column: 27, scope: !10558)
!10561 = !DILocation(line: 2466, column: 12, scope: !10558)
!10562 = !DILocation(line: 2466, column: 7, scope: !10558)
!10563 = !DILocation(line: 2466, column: 34, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 2466, column: 2)
!10565 = !DILocation(line: 2466, column: 2, scope: !10558)
!10566 = !DILocation(line: 2467, column: 18, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 2466, column: 59)
!10568 = !DILocation(line: 2467, column: 3, scope: !10567)
!10569 = !DILocation(line: 2468, column: 16, scope: !10567)
!10570 = !DILocation(line: 2468, column: 3, scope: !10567)
!10571 = !DILocation(line: 2470, column: 7, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 2470, column: 7)
!10573 = !DILocation(line: 2470, column: 14, scope: !10572)
!10574 = !DILocation(line: 2470, column: 7, scope: !10567)
!10575 = !DILocation(line: 2471, column: 12, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 2470, column: 23)
!10577 = !DILocation(line: 2471, column: 20, scope: !10576)
!10578 = !DILocation(line: 2471, column: 18, scope: !10576)
!10579 = !DILocation(line: 2471, column: 11, scope: !10576)
!10580 = !DILocation(line: 2471, column: 28, scope: !10576)
!10581 = !DILocation(line: 2471, column: 26, scope: !10576)
!10582 = !DILocation(line: 2471, column: 9, scope: !10576)
!10583 = !DILocation(line: 2472, column: 13, scope: !10576)
!10584 = !DILocation(line: 2472, column: 21, scope: !10576)
!10585 = !DILocation(line: 2472, column: 19, scope: !10576)
!10586 = !DILocation(line: 2472, column: 28, scope: !10576)
!10587 = !DILocation(line: 2472, column: 26, scope: !10576)
!10588 = !DILocation(line: 2472, column: 12, scope: !10576)
!10589 = !DILocation(line: 2472, column: 37, scope: !10576)
!10590 = !DILocation(line: 2472, column: 35, scope: !10576)
!10591 = !DILocation(line: 2472, column: 46, scope: !10576)
!10592 = !DILocation(line: 2472, column: 44, scope: !10576)
!10593 = !DILocation(line: 2472, column: 10, scope: !10576)
!10594 = !DILocation(line: 2473, column: 12, scope: !10576)
!10595 = !DILocation(line: 2473, column: 19, scope: !10576)
!10596 = !DILocation(line: 2473, column: 17, scope: !10576)
!10597 = !DILocation(line: 2473, column: 10, scope: !10576)
!10598 = !DILocation(line: 2474, column: 3, scope: !10576)
!10599 = !DILocation(line: 2476, column: 7, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 2476, column: 7)
!10601 = !DILocation(line: 2476, column: 14, scope: !10600)
!10602 = !DILocation(line: 2476, column: 7, scope: !10567)
!10603 = !DILocation(line: 2477, column: 12, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 2476, column: 23)
!10605 = !DILocation(line: 2477, column: 20, scope: !10604)
!10606 = !DILocation(line: 2477, column: 18, scope: !10604)
!10607 = !DILocation(line: 2477, column: 11, scope: !10604)
!10608 = !DILocation(line: 2477, column: 28, scope: !10604)
!10609 = !DILocation(line: 2477, column: 26, scope: !10604)
!10610 = !DILocation(line: 2477, column: 9, scope: !10604)
!10611 = !DILocation(line: 2478, column: 13, scope: !10604)
!10612 = !DILocation(line: 2478, column: 21, scope: !10604)
!10613 = !DILocation(line: 2478, column: 19, scope: !10604)
!10614 = !DILocation(line: 2478, column: 28, scope: !10604)
!10615 = !DILocation(line: 2478, column: 26, scope: !10604)
!10616 = !DILocation(line: 2478, column: 12, scope: !10604)
!10617 = !DILocation(line: 2478, column: 37, scope: !10604)
!10618 = !DILocation(line: 2478, column: 35, scope: !10604)
!10619 = !DILocation(line: 2478, column: 46, scope: !10604)
!10620 = !DILocation(line: 2478, column: 44, scope: !10604)
!10621 = !DILocation(line: 2478, column: 10, scope: !10604)
!10622 = !DILocation(line: 2479, column: 12, scope: !10604)
!10623 = !DILocation(line: 2479, column: 19, scope: !10604)
!10624 = !DILocation(line: 2479, column: 17, scope: !10604)
!10625 = !DILocation(line: 2479, column: 10, scope: !10604)
!10626 = !DILocation(line: 2480, column: 3, scope: !10604)
!10627 = !DILocation(line: 2482, column: 20, scope: !10567)
!10628 = !DILocation(line: 2482, column: 26, scope: !10567)
!10629 = !DILocation(line: 2482, column: 30, scope: !10567)
!10630 = !DILocation(line: 2482, column: 28, scope: !10567)
!10631 = !DILocation(line: 2482, column: 38, scope: !10567)
!10632 = !DILocation(line: 2482, column: 36, scope: !10567)
!10633 = !DILocation(line: 2482, column: 44, scope: !10567)
!10634 = !DILocation(line: 2482, column: 48, scope: !10567)
!10635 = !DILocation(line: 2482, column: 46, scope: !10567)
!10636 = !DILocation(line: 2482, column: 56, scope: !10567)
!10637 = !DILocation(line: 2482, column: 54, scope: !10567)
!10638 = !DILocation(line: 2482, column: 62, scope: !10567)
!10639 = !DILocation(line: 2482, column: 69, scope: !10567)
!10640 = !DILocation(line: 2482, column: 3, scope: !10567)
!10641 = !DILocation(line: 2483, column: 2, scope: !10567)
!10642 = !DILocation(line: 2466, column: 47, scope: !10564)
!10643 = !DILocation(line: 2466, column: 53, scope: !10564)
!10644 = !DILocation(line: 2466, column: 45, scope: !10564)
!10645 = !DILocation(line: 2466, column: 2, scope: !10564)
!10646 = distinct !{!10646, !10565, !10647}
!10647 = !DILocation(line: 2483, column: 2, scope: !10558)
!10648 = !DILocation(line: 2485, column: 13, scope: !10435)
!10649 = !DILocation(line: 2485, column: 22, scope: !10435)
!10650 = !DILocation(line: 2485, column: 20, scope: !10435)
!10651 = !DILocation(line: 2485, column: 2, scope: !10435)
!10652 = !DILocation(line: 2485, column: 9, scope: !10435)
!10653 = !DILocation(line: 2485, column: 11, scope: !10435)
!10654 = !DILocation(line: 2486, column: 13, scope: !10435)
!10655 = !DILocation(line: 2486, column: 20, scope: !10435)
!10656 = !DILocation(line: 2486, column: 24, scope: !10435)
!10657 = !DILocation(line: 2486, column: 22, scope: !10435)
!10658 = !DILocation(line: 2486, column: 2, scope: !10435)
!10659 = !DILocation(line: 2486, column: 9, scope: !10435)
!10660 = !DILocation(line: 2486, column: 11, scope: !10435)
!10661 = !DILocation(line: 2487, column: 13, scope: !10435)
!10662 = !DILocation(line: 2487, column: 17, scope: !10435)
!10663 = !DILocation(line: 2487, column: 24, scope: !10435)
!10664 = !DILocation(line: 2487, column: 15, scope: !10435)
!10665 = !DILocation(line: 2487, column: 2, scope: !10435)
!10666 = !DILocation(line: 2487, column: 9, scope: !10435)
!10667 = !DILocation(line: 2487, column: 11, scope: !10435)
!10668 = !DILocation(line: 2488, column: 13, scope: !10435)
!10669 = !DILocation(line: 2488, column: 2, scope: !10435)
!10670 = !DILocation(line: 2488, column: 9, scope: !10435)
!10671 = !DILocation(line: 2488, column: 11, scope: !10435)
!10672 = !DILocation(line: 2489, column: 1, scope: !10435)
!10673 = distinct !DISubprogram(name: "ui_litem_layout_split", scope: !3, file: !3, line: 2497, type: !3469, scopeLine: 2498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!10674 = !DILocalVariable(name: "litem", arg: 1, scope: !10673, file: !3, line: 2497, type: !1113)
!10675 = !DILocation(line: 2497, column: 45, scope: !10673)
!10676 = !DILocalVariable(name: "split", scope: !10673, file: !3, line: 2499, type: !2327)
!10677 = !DILocation(line: 2499, column: 21, scope: !10673)
!10678 = !DILocation(line: 2499, column: 50, scope: !10673)
!10679 = !DILocation(line: 2499, column: 29, scope: !10673)
!10680 = !DILocalVariable(name: "item", scope: !10673, file: !3, line: 2500, type: !3181)
!10681 = !DILocation(line: 2500, column: 10, scope: !10673)
!10682 = !DILocalVariable(name: "percentage", scope: !10673, file: !3, line: 2501, type: !1180)
!10683 = !DILocation(line: 2501, column: 8, scope: !10673)
!10684 = !DILocalVariable(name: "tot", scope: !10673, file: !3, line: 2502, type: !4695)
!10685 = !DILocation(line: 2502, column: 12, scope: !10673)
!10686 = !DILocation(line: 2502, column: 33, scope: !10673)
!10687 = !DILocation(line: 2502, column: 40, scope: !10673)
!10688 = !DILocation(line: 2502, column: 18, scope: !10673)
!10689 = !DILocalVariable(name: "itemh", scope: !10673, file: !3, line: 2503, type: !1100)
!10690 = !DILocation(line: 2503, column: 6, scope: !10673)
!10691 = !DILocalVariable(name: "x", scope: !10673, file: !3, line: 2503, type: !1100)
!10692 = !DILocation(line: 2503, column: 13, scope: !10673)
!10693 = !DILocalVariable(name: "y", scope: !10673, file: !3, line: 2503, type: !1100)
!10694 = !DILocation(line: 2503, column: 16, scope: !10673)
!10695 = !DILocalVariable(name: "w", scope: !10673, file: !3, line: 2503, type: !1100)
!10696 = !DILocation(line: 2503, column: 19, scope: !10673)
!10697 = !DILocalVariable(name: "colw", scope: !10673, file: !3, line: 2503, type: !1100)
!10698 = !DILocation(line: 2503, column: 22, scope: !10673)
!10699 = !DILocation(line: 2505, column: 6, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 2505, column: 6)
!10701 = !DILocation(line: 2505, column: 10, scope: !10700)
!10702 = !DILocation(line: 2505, column: 6, scope: !10673)
!10703 = !DILocation(line: 2506, column: 3, scope: !10700)
!10704 = !DILocation(line: 2508, column: 6, scope: !10673)
!10705 = !DILocation(line: 2508, column: 13, scope: !10673)
!10706 = !DILocation(line: 2508, column: 4, scope: !10673)
!10707 = !DILocation(line: 2509, column: 6, scope: !10673)
!10708 = !DILocation(line: 2509, column: 13, scope: !10673)
!10709 = !DILocation(line: 2509, column: 4, scope: !10673)
!10710 = !DILocation(line: 2511, column: 16, scope: !10673)
!10711 = !DILocation(line: 2511, column: 23, scope: !10673)
!10712 = !DILocation(line: 2511, column: 34, scope: !10673)
!10713 = !DILocation(line: 2511, column: 15, scope: !10673)
!10714 = !DILocation(line: 2511, column: 59, scope: !10673)
!10715 = !DILocation(line: 2511, column: 52, scope: !10673)
!10716 = !DILocation(line: 2511, column: 50, scope: !10673)
!10717 = !DILocation(line: 2511, column: 65, scope: !10673)
!10718 = !DILocation(line: 2511, column: 72, scope: !10673)
!10719 = !DILocation(line: 2511, column: 13, scope: !10673)
!10720 = !DILocation(line: 2513, column: 7, scope: !10673)
!10721 = !DILocation(line: 2513, column: 14, scope: !10673)
!10722 = !DILocation(line: 2513, column: 19, scope: !10673)
!10723 = !DILocation(line: 2513, column: 23, scope: !10673)
!10724 = !DILocation(line: 2513, column: 30, scope: !10673)
!10725 = !DILocation(line: 2513, column: 37, scope: !10673)
!10726 = !DILocation(line: 2513, column: 28, scope: !10673)
!10727 = !DILocation(line: 2513, column: 16, scope: !10673)
!10728 = !DILocation(line: 2513, column: 4, scope: !10673)
!10729 = !DILocation(line: 2514, column: 9, scope: !10673)
!10730 = !DILocation(line: 2514, column: 13, scope: !10673)
!10731 = !DILocation(line: 2514, column: 11, scope: !10673)
!10732 = !DILocation(line: 2514, column: 7, scope: !10673)
!10733 = !DILocation(line: 2515, column: 9, scope: !10673)
!10734 = !DILocation(line: 2515, column: 7, scope: !10673)
!10735 = !DILocation(line: 2517, column: 14, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 2517, column: 2)
!10737 = !DILocation(line: 2517, column: 21, scope: !10736)
!10738 = !DILocation(line: 2517, column: 27, scope: !10736)
!10739 = !DILocation(line: 2517, column: 12, scope: !10736)
!10740 = !DILocation(line: 2517, column: 7, scope: !10736)
!10741 = !DILocation(line: 2517, column: 34, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10736, file: !3, line: 2517, column: 2)
!10743 = !DILocation(line: 2517, column: 2, scope: !10736)
!10744 = !DILocation(line: 2518, column: 16, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10742, file: !3, line: 2517, column: 59)
!10746 = !DILocation(line: 2518, column: 3, scope: !10745)
!10747 = !DILocation(line: 2520, column: 20, scope: !10745)
!10748 = !DILocation(line: 2520, column: 26, scope: !10745)
!10749 = !DILocation(line: 2520, column: 29, scope: !10745)
!10750 = !DILocation(line: 2520, column: 33, scope: !10745)
!10751 = !DILocation(line: 2520, column: 31, scope: !10745)
!10752 = !DILocation(line: 2520, column: 40, scope: !10745)
!10753 = !DILocation(line: 2520, column: 46, scope: !10745)
!10754 = !DILocation(line: 2520, column: 3, scope: !10745)
!10755 = !DILocation(line: 2521, column: 8, scope: !10745)
!10756 = !DILocation(line: 2521, column: 5, scope: !10745)
!10757 = !DILocation(line: 2523, column: 7, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 2523, column: 7)
!10759 = !DILocation(line: 2523, column: 13, scope: !10758)
!10760 = !DILocation(line: 2523, column: 7, scope: !10745)
!10761 = !DILocation(line: 2524, column: 12, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 2523, column: 19)
!10763 = !DILocation(line: 2524, column: 22, scope: !10762)
!10764 = !DILocation(line: 2524, column: 26, scope: !10762)
!10765 = !DILocation(line: 2524, column: 24, scope: !10762)
!10766 = !DILocation(line: 2524, column: 16, scope: !10762)
!10767 = !DILocation(line: 2524, column: 14, scope: !10762)
!10768 = !DILocation(line: 2524, column: 42, scope: !10762)
!10769 = !DILocation(line: 2524, column: 46, scope: !10762)
!10770 = !DILocation(line: 2524, column: 39, scope: !10762)
!10771 = !DILocation(line: 2524, column: 9, scope: !10762)
!10772 = !DILocation(line: 2525, column: 11, scope: !10762)
!10773 = !DILocation(line: 2525, column: 9, scope: !10762)
!10774 = !DILocation(line: 2527, column: 9, scope: !10762)
!10775 = !DILocation(line: 2527, column: 16, scope: !10762)
!10776 = !DILocation(line: 2527, column: 6, scope: !10762)
!10777 = !DILocation(line: 2528, column: 3, scope: !10762)
!10778 = !DILocation(line: 2529, column: 2, scope: !10745)
!10779 = !DILocation(line: 2517, column: 47, scope: !10742)
!10780 = !DILocation(line: 2517, column: 53, scope: !10742)
!10781 = !DILocation(line: 2517, column: 45, scope: !10742)
!10782 = !DILocation(line: 2517, column: 2, scope: !10742)
!10783 = distinct !{!10783, !10743, !10784}
!10784 = !DILocation(line: 2529, column: 2, scope: !10736)
!10785 = !DILocation(line: 2531, column: 13, scope: !10673)
!10786 = !DILocation(line: 2531, column: 17, scope: !10673)
!10787 = !DILocation(line: 2531, column: 24, scope: !10673)
!10788 = !DILocation(line: 2531, column: 15, scope: !10673)
!10789 = !DILocation(line: 2531, column: 2, scope: !10673)
!10790 = !DILocation(line: 2531, column: 9, scope: !10673)
!10791 = !DILocation(line: 2531, column: 11, scope: !10673)
!10792 = !DILocation(line: 2532, column: 13, scope: !10673)
!10793 = !DILocation(line: 2532, column: 20, scope: !10673)
!10794 = !DILocation(line: 2532, column: 24, scope: !10673)
!10795 = !DILocation(line: 2532, column: 22, scope: !10673)
!10796 = !DILocation(line: 2532, column: 2, scope: !10673)
!10797 = !DILocation(line: 2532, column: 9, scope: !10673)
!10798 = !DILocation(line: 2532, column: 11, scope: !10673)
!10799 = !DILocation(line: 2533, column: 13, scope: !10673)
!10800 = !DILocation(line: 2533, column: 2, scope: !10673)
!10801 = !DILocation(line: 2533, column: 9, scope: !10673)
!10802 = !DILocation(line: 2533, column: 11, scope: !10673)
!10803 = !DILocation(line: 2534, column: 13, scope: !10673)
!10804 = !DILocation(line: 2534, column: 2, scope: !10673)
!10805 = !DILocation(line: 2534, column: 9, scope: !10673)
!10806 = !DILocation(line: 2534, column: 11, scope: !10673)
!10807 = !DILocation(line: 2535, column: 1, scope: !10673)
!10808 = distinct !DISubprogram(name: "ui_litem_layout_overlap", scope: !3, file: !3, line: 2554, type: !3469, scopeLine: 2555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!10809 = !DILocalVariable(name: "litem", arg: 1, scope: !10808, file: !3, line: 2554, type: !1113)
!10810 = !DILocation(line: 2554, column: 47, scope: !10808)
!10811 = !DILocalVariable(name: "item", scope: !10808, file: !3, line: 2556, type: !3181)
!10812 = !DILocation(line: 2556, column: 10, scope: !10808)
!10813 = !DILocalVariable(name: "itemw", scope: !10808, file: !3, line: 2557, type: !1100)
!10814 = !DILocation(line: 2557, column: 6, scope: !10808)
!10815 = !DILocalVariable(name: "itemh", scope: !10808, file: !3, line: 2557, type: !1100)
!10816 = !DILocation(line: 2557, column: 13, scope: !10808)
!10817 = !DILocalVariable(name: "x", scope: !10808, file: !3, line: 2557, type: !1100)
!10818 = !DILocation(line: 2557, column: 20, scope: !10808)
!10819 = !DILocalVariable(name: "y", scope: !10808, file: !3, line: 2557, type: !1100)
!10820 = !DILocation(line: 2557, column: 23, scope: !10808)
!10821 = !DILocation(line: 2559, column: 6, scope: !10808)
!10822 = !DILocation(line: 2559, column: 13, scope: !10808)
!10823 = !DILocation(line: 2559, column: 4, scope: !10808)
!10824 = !DILocation(line: 2560, column: 6, scope: !10808)
!10825 = !DILocation(line: 2560, column: 13, scope: !10808)
!10826 = !DILocation(line: 2560, column: 4, scope: !10808)
!10827 = !DILocation(line: 2562, column: 14, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 2562, column: 2)
!10829 = !DILocation(line: 2562, column: 21, scope: !10828)
!10830 = !DILocation(line: 2562, column: 27, scope: !10828)
!10831 = !DILocation(line: 2562, column: 12, scope: !10828)
!10832 = !DILocation(line: 2562, column: 7, scope: !10828)
!10833 = !DILocation(line: 2562, column: 34, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 2562, column: 2)
!10835 = !DILocation(line: 2562, column: 2, scope: !10828)
!10836 = !DILocation(line: 2563, column: 16, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 2562, column: 59)
!10838 = !DILocation(line: 2563, column: 3, scope: !10837)
!10839 = !DILocation(line: 2564, column: 20, scope: !10837)
!10840 = !DILocation(line: 2564, column: 26, scope: !10837)
!10841 = !DILocation(line: 2564, column: 29, scope: !10837)
!10842 = !DILocation(line: 2564, column: 33, scope: !10837)
!10843 = !DILocation(line: 2564, column: 31, scope: !10837)
!10844 = !DILocation(line: 2564, column: 40, scope: !10837)
!10845 = !DILocation(line: 2564, column: 47, scope: !10837)
!10846 = !DILocation(line: 2564, column: 50, scope: !10837)
!10847 = !DILocation(line: 2564, column: 3, scope: !10837)
!10848 = !DILocation(line: 2566, column: 14, scope: !10837)
!10849 = !DILocation(line: 2566, column: 3, scope: !10837)
!10850 = !DILocation(line: 2566, column: 10, scope: !10837)
!10851 = !DILocation(line: 2566, column: 12, scope: !10837)
!10852 = !DILocation(line: 2567, column: 2, scope: !10837)
!10853 = !DILocation(line: 2562, column: 47, scope: !10834)
!10854 = !DILocation(line: 2562, column: 53, scope: !10834)
!10855 = !DILocation(line: 2562, column: 45, scope: !10834)
!10856 = !DILocation(line: 2562, column: 2, scope: !10834)
!10857 = distinct !{!10857, !10835, !10858}
!10858 = !DILocation(line: 2567, column: 2, scope: !10828)
!10859 = !DILocation(line: 2569, column: 13, scope: !10808)
!10860 = !DILocation(line: 2569, column: 2, scope: !10808)
!10861 = !DILocation(line: 2569, column: 9, scope: !10808)
!10862 = !DILocation(line: 2569, column: 11, scope: !10808)
!10863 = !DILocation(line: 2570, column: 13, scope: !10808)
!10864 = !DILocation(line: 2570, column: 17, scope: !10808)
!10865 = !DILocation(line: 2570, column: 24, scope: !10808)
!10866 = !DILocation(line: 2570, column: 15, scope: !10808)
!10867 = !DILocation(line: 2570, column: 2, scope: !10808)
!10868 = !DILocation(line: 2570, column: 9, scope: !10808)
!10869 = !DILocation(line: 2570, column: 11, scope: !10808)
!10870 = !DILocation(line: 2571, column: 1, scope: !10808)
!10871 = distinct !DISubprogram(name: "ui_litem_layout_radial", scope: !3, file: !3, line: 2147, type: !3469, scopeLine: 2148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!10872 = !DILocalVariable(name: "litem", arg: 1, scope: !10871, file: !3, line: 2147, type: !1113)
!10873 = !DILocation(line: 2147, column: 46, scope: !10871)
!10874 = !DILocalVariable(name: "item", scope: !10871, file: !3, line: 2149, type: !3181)
!10875 = !DILocation(line: 2149, column: 10, scope: !10871)
!10876 = !DILocalVariable(name: "itemh", scope: !10871, file: !3, line: 2150, type: !1100)
!10877 = !DILocation(line: 2150, column: 6, scope: !10871)
!10878 = !DILocalVariable(name: "itemw", scope: !10871, file: !3, line: 2150, type: !1100)
!10879 = !DILocation(line: 2150, column: 13, scope: !10871)
!10880 = !DILocalVariable(name: "x", scope: !10871, file: !3, line: 2150, type: !1100)
!10881 = !DILocation(line: 2150, column: 20, scope: !10871)
!10882 = !DILocalVariable(name: "y", scope: !10871, file: !3, line: 2150, type: !1100)
!10883 = !DILocation(line: 2150, column: 23, scope: !10871)
!10884 = !DILocalVariable(name: "itemnum", scope: !10871, file: !3, line: 2151, type: !1100)
!10885 = !DILocation(line: 2151, column: 6, scope: !10871)
!10886 = !DILocalVariable(name: "totitems", scope: !10871, file: !3, line: 2152, type: !1100)
!10887 = !DILocation(line: 2152, column: 6, scope: !10871)
!10888 = !DILocalVariable(name: "minx", scope: !10871, file: !3, line: 2154, type: !1100)
!10889 = !DILocation(line: 2154, column: 6, scope: !10871)
!10890 = !DILocalVariable(name: "miny", scope: !10871, file: !3, line: 2154, type: !1100)
!10891 = !DILocation(line: 2154, column: 12, scope: !10871)
!10892 = !DILocalVariable(name: "maxx", scope: !10871, file: !3, line: 2154, type: !1100)
!10893 = !DILocation(line: 2154, column: 18, scope: !10871)
!10894 = !DILocalVariable(name: "maxy", scope: !10871, file: !3, line: 2154, type: !1100)
!10895 = !DILocation(line: 2154, column: 24, scope: !10871)
!10896 = !DILocalVariable(name: "pie_radius", scope: !10871, file: !3, line: 2160, type: !1100)
!10897 = !DILocation(line: 2160, column: 6, scope: !10871)
!10898 = !DILocation(line: 2160, column: 21, scope: !10871)
!10899 = !DILocation(line: 2160, column: 19, scope: !10871)
!10900 = !DILocation(line: 2160, column: 39, scope: !10871)
!10901 = !DILocation(line: 2160, column: 37, scope: !10871)
!10902 = !DILocation(line: 2162, column: 6, scope: !10871)
!10903 = !DILocation(line: 2162, column: 13, scope: !10871)
!10904 = !DILocation(line: 2162, column: 4, scope: !10871)
!10905 = !DILocation(line: 2163, column: 6, scope: !10871)
!10906 = !DILocation(line: 2163, column: 13, scope: !10871)
!10907 = !DILocation(line: 2163, column: 4, scope: !10871)
!10908 = !DILocation(line: 2165, column: 9, scope: !10871)
!10909 = !DILocation(line: 2165, column: 7, scope: !10871)
!10910 = !DILocation(line: 2165, column: 19, scope: !10871)
!10911 = !DILocation(line: 2165, column: 17, scope: !10871)
!10912 = !DILocation(line: 2165, column: 29, scope: !10871)
!10913 = !DILocation(line: 2165, column: 27, scope: !10871)
!10914 = !DILocation(line: 2165, column: 39, scope: !10871)
!10915 = !DILocation(line: 2165, column: 37, scope: !10871)
!10916 = !DILocation(line: 2168, column: 14, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 2168, column: 2)
!10918 = !DILocation(line: 2168, column: 21, scope: !10917)
!10919 = !DILocation(line: 2168, column: 27, scope: !10917)
!10920 = !DILocation(line: 2168, column: 12, scope: !10917)
!10921 = !DILocation(line: 2168, column: 7, scope: !10917)
!10922 = !DILocation(line: 2168, column: 34, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 2168, column: 2)
!10924 = !DILocation(line: 2168, column: 2, scope: !10917)
!10925 = !DILocation(line: 2169, column: 11, scope: !10923)
!10926 = !DILocation(line: 2169, column: 3, scope: !10923)
!10927 = !DILocation(line: 2168, column: 47, scope: !10923)
!10928 = !DILocation(line: 2168, column: 53, scope: !10923)
!10929 = !DILocation(line: 2168, column: 45, scope: !10923)
!10930 = !DILocation(line: 2168, column: 2, scope: !10923)
!10931 = distinct !{!10931, !10924, !10932}
!10932 = !DILocation(line: 2169, column: 11, scope: !10917)
!10933 = !DILocation(line: 2171, column: 6, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 2171, column: 6)
!10935 = !DILocation(line: 2171, column: 15, scope: !10934)
!10936 = !DILocation(line: 2171, column: 6, scope: !10871)
!10937 = !DILocation(line: 2172, column: 3, scope: !10934)
!10938 = !DILocation(line: 2172, column: 10, scope: !10934)
!10939 = !DILocation(line: 2172, column: 16, scope: !10934)
!10940 = !DILocation(line: 2172, column: 23, scope: !10934)
!10941 = !DILocation(line: 2172, column: 32, scope: !10934)
!10942 = !DILocation(line: 2172, column: 38, scope: !10934)
!10943 = !DILocation(line: 2174, column: 14, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 2174, column: 2)
!10945 = !DILocation(line: 2174, column: 21, scope: !10944)
!10946 = !DILocation(line: 2174, column: 27, scope: !10944)
!10947 = !DILocation(line: 2174, column: 12, scope: !10944)
!10948 = !DILocation(line: 2174, column: 7, scope: !10944)
!10949 = !DILocation(line: 2174, column: 34, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 2174, column: 2)
!10951 = !DILocation(line: 2174, column: 2, scope: !10944)
!10952 = !DILocation(line: 2176, column: 37, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 2176, column: 7)
!10954 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 2174, column: 59)
!10955 = !DILocation(line: 2176, column: 7, scope: !10953)
!10956 = !DILocation(line: 2176, column: 7, scope: !10954)
!10957 = !DILocalVariable(name: "dir", scope: !10958, file: !3, line: 2177, type: !10959)
!10958 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 2176, column: 44)
!10959 = !DIDerivedType(tag: DW_TAG_typedef, name: "RadialDirection", file: !1012, line: 136, baseType: !1099)
!10960 = !DILocation(line: 2177, column: 20, scope: !10958)
!10961 = !DILocalVariable(name: "vec", scope: !10958, file: !3, line: 2178, type: !1454)
!10962 = !DILocation(line: 2178, column: 10, scope: !10958)
!10963 = !DILocalVariable(name: "factor", scope: !10958, file: !3, line: 2179, type: !1454)
!10964 = !DILocation(line: 2179, column: 10, scope: !10958)
!10965 = !DILocation(line: 2181, column: 31, scope: !10958)
!10966 = !DILocation(line: 2181, column: 36, scope: !10958)
!10967 = !DILocation(line: 2181, column: 10, scope: !10958)
!10968 = !DILocation(line: 2181, column: 8, scope: !10958)
!10969 = !DILocation(line: 2182, column: 17, scope: !10958)
!10970 = !DILocation(line: 2182, column: 24, scope: !10958)
!10971 = !DILocation(line: 2182, column: 16, scope: !10958)
!10972 = !DILocation(line: 2182, column: 44, scope: !10958)
!10973 = !DILocation(line: 2182, column: 51, scope: !10958)
!10974 = !DILocation(line: 2182, column: 43, scope: !10958)
!10975 = !DILocation(line: 2182, column: 4, scope: !10958)
!10976 = !DILocation(line: 2182, column: 14, scope: !10958)
!10977 = !DILocation(line: 2183, column: 17, scope: !10958)
!10978 = !DILocation(line: 2183, column: 24, scope: !10958)
!10979 = !DILocation(line: 2183, column: 16, scope: !10958)
!10980 = !DILocation(line: 2183, column: 44, scope: !10958)
!10981 = !DILocation(line: 2183, column: 51, scope: !10958)
!10982 = !DILocation(line: 2183, column: 43, scope: !10958)
!10983 = !DILocation(line: 2183, column: 4, scope: !10958)
!10984 = !DILocation(line: 2183, column: 14, scope: !10958)
!10985 = !DILocation(line: 2185, column: 11, scope: !10958)
!10986 = !DILocation(line: 2187, column: 8, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10958, file: !3, line: 2187, column: 8)
!10988 = !DILocation(line: 2187, column: 14, scope: !10987)
!10989 = !DILocation(line: 2187, column: 19, scope: !10987)
!10990 = !DILocation(line: 2187, column: 8, scope: !10958)
!10991 = !DILocalVariable(name: "bitem", scope: !10992, file: !3, line: 2188, type: !2308)
!10992 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 2187, column: 35)
!10993 = !DILocation(line: 2188, column: 19, scope: !10992)
!10994 = !DILocation(line: 2188, column: 44, scope: !10992)
!10995 = !DILocation(line: 2188, column: 27, scope: !10992)
!10996 = !DILocation(line: 2190, column: 27, scope: !10992)
!10997 = !DILocation(line: 2190, column: 5, scope: !10992)
!10998 = !DILocation(line: 2190, column: 12, scope: !10992)
!10999 = !DILocation(line: 2190, column: 17, scope: !10992)
!11000 = !DILocation(line: 2190, column: 25, scope: !10992)
!11001 = !DILocation(line: 2192, column: 5, scope: !10992)
!11002 = !DILocation(line: 2192, column: 12, scope: !10992)
!11003 = !DILocation(line: 2192, column: 17, scope: !10992)
!11004 = !DILocation(line: 2192, column: 22, scope: !10992)
!11005 = !DILocation(line: 2192, column: 27, scope: !10992)
!11006 = !DILocation(line: 2194, column: 37, scope: !10992)
!11007 = !DILocation(line: 2194, column: 35, scope: !10992)
!11008 = !DILocation(line: 2194, column: 5, scope: !10992)
!11009 = !DILocation(line: 2194, column: 12, scope: !10992)
!11010 = !DILocation(line: 2194, column: 17, scope: !10992)
!11011 = !DILocation(line: 2194, column: 22, scope: !10992)
!11012 = !DILocation(line: 2194, column: 27, scope: !10992)
!11013 = !DILocation(line: 2196, column: 36, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 2196, column: 9)
!11015 = !DILocation(line: 2196, column: 9, scope: !11014)
!11016 = !DILocation(line: 2196, column: 9, scope: !10992)
!11017 = !DILocation(line: 2197, column: 6, scope: !11014)
!11018 = !DILocation(line: 2197, column: 13, scope: !11014)
!11019 = !DILocation(line: 2197, column: 18, scope: !11014)
!11020 = !DILocation(line: 2197, column: 21, scope: !11014)
!11021 = !DILocation(line: 2198, column: 4, scope: !10992)
!11022 = !DILocation(line: 2200, column: 17, scope: !10958)
!11023 = !DILocation(line: 2200, column: 4, scope: !10958)
!11024 = !DILocation(line: 2202, column: 21, scope: !10958)
!11025 = !DILocation(line: 2202, column: 27, scope: !10958)
!11026 = !DILocation(line: 2202, column: 31, scope: !10958)
!11027 = !DILocation(line: 2202, column: 40, scope: !10958)
!11028 = !DILocation(line: 2202, column: 38, scope: !10958)
!11029 = !DILocation(line: 2202, column: 29, scope: !10958)
!11030 = !DILocation(line: 2202, column: 53, scope: !10958)
!11031 = !DILocation(line: 2202, column: 65, scope: !10958)
!11032 = !DILocation(line: 2202, column: 63, scope: !10958)
!11033 = !DILocation(line: 2202, column: 51, scope: !10958)
!11034 = !DILocation(line: 2202, column: 72, scope: !10958)
!11035 = !DILocation(line: 2202, column: 76, scope: !10958)
!11036 = !DILocation(line: 2202, column: 85, scope: !10958)
!11037 = !DILocation(line: 2202, column: 83, scope: !10958)
!11038 = !DILocation(line: 2202, column: 74, scope: !10958)
!11039 = !DILocation(line: 2202, column: 98, scope: !10958)
!11040 = !DILocation(line: 2202, column: 110, scope: !10958)
!11041 = !DILocation(line: 2202, column: 108, scope: !10958)
!11042 = !DILocation(line: 2202, column: 96, scope: !10958)
!11043 = !DILocation(line: 2202, column: 117, scope: !10958)
!11044 = !DILocation(line: 2202, column: 124, scope: !10958)
!11045 = !DILocation(line: 2202, column: 4, scope: !10958)
!11046 = !DILocation(line: 2204, column: 18, scope: !10958)
!11047 = !DILocation(line: 2204, column: 24, scope: !10958)
!11048 = !DILocation(line: 2204, column: 28, scope: !10958)
!11049 = !DILocation(line: 2204, column: 37, scope: !10958)
!11050 = !DILocation(line: 2204, column: 35, scope: !10958)
!11051 = !DILocation(line: 2204, column: 26, scope: !10958)
!11052 = !DILocation(line: 2204, column: 50, scope: !10958)
!11053 = !DILocation(line: 2204, column: 56, scope: !10958)
!11054 = !DILocation(line: 2204, column: 48, scope: !10958)
!11055 = !DILocation(line: 2204, column: 11, scope: !10958)
!11056 = !DILocation(line: 2204, column: 9, scope: !10958)
!11057 = !DILocation(line: 2205, column: 18, scope: !10958)
!11058 = !DILocation(line: 2205, column: 24, scope: !10958)
!11059 = !DILocation(line: 2205, column: 28, scope: !10958)
!11060 = !DILocation(line: 2205, column: 37, scope: !10958)
!11061 = !DILocation(line: 2205, column: 35, scope: !10958)
!11062 = !DILocation(line: 2205, column: 26, scope: !10958)
!11063 = !DILocation(line: 2205, column: 50, scope: !10958)
!11064 = !DILocation(line: 2205, column: 56, scope: !10958)
!11065 = !DILocation(line: 2205, column: 48, scope: !10958)
!11066 = !DILocation(line: 2205, column: 11, scope: !10958)
!11067 = !DILocation(line: 2205, column: 9, scope: !10958)
!11068 = !DILocation(line: 2206, column: 18, scope: !10958)
!11069 = !DILocation(line: 2206, column: 24, scope: !10958)
!11070 = !DILocation(line: 2206, column: 28, scope: !10958)
!11071 = !DILocation(line: 2206, column: 37, scope: !10958)
!11072 = !DILocation(line: 2206, column: 35, scope: !10958)
!11073 = !DILocation(line: 2206, column: 26, scope: !10958)
!11074 = !DILocation(line: 2206, column: 50, scope: !10958)
!11075 = !DILocation(line: 2206, column: 56, scope: !10958)
!11076 = !DILocation(line: 2206, column: 48, scope: !10958)
!11077 = !DILocation(line: 2206, column: 11, scope: !10958)
!11078 = !DILocation(line: 2206, column: 9, scope: !10958)
!11079 = !DILocation(line: 2207, column: 18, scope: !10958)
!11080 = !DILocation(line: 2207, column: 24, scope: !10958)
!11081 = !DILocation(line: 2207, column: 28, scope: !10958)
!11082 = !DILocation(line: 2207, column: 37, scope: !10958)
!11083 = !DILocation(line: 2207, column: 35, scope: !10958)
!11084 = !DILocation(line: 2207, column: 26, scope: !10958)
!11085 = !DILocation(line: 2207, column: 50, scope: !10958)
!11086 = !DILocation(line: 2207, column: 56, scope: !10958)
!11087 = !DILocation(line: 2207, column: 48, scope: !10958)
!11088 = !DILocation(line: 2207, column: 11, scope: !10958)
!11089 = !DILocation(line: 2207, column: 9, scope: !10958)
!11090 = !DILocation(line: 2208, column: 3, scope: !10958)
!11091 = !DILocation(line: 2209, column: 2, scope: !10954)
!11092 = !DILocation(line: 2174, column: 47, scope: !10950)
!11093 = !DILocation(line: 2174, column: 53, scope: !10950)
!11094 = !DILocation(line: 2174, column: 45, scope: !10950)
!11095 = !DILocation(line: 2174, column: 2, scope: !10950)
!11096 = distinct !{!11096, !10951, !11097}
!11097 = !DILocation(line: 2209, column: 2, scope: !10944)
!11098 = !DILocation(line: 2211, column: 13, scope: !10871)
!11099 = !DILocation(line: 2211, column: 2, scope: !10871)
!11100 = !DILocation(line: 2211, column: 9, scope: !10871)
!11101 = !DILocation(line: 2211, column: 11, scope: !10871)
!11102 = !DILocation(line: 2212, column: 13, scope: !10871)
!11103 = !DILocation(line: 2212, column: 2, scope: !10871)
!11104 = !DILocation(line: 2212, column: 9, scope: !10871)
!11105 = !DILocation(line: 2212, column: 11, scope: !10871)
!11106 = !DILocation(line: 2213, column: 13, scope: !10871)
!11107 = !DILocation(line: 2213, column: 20, scope: !10871)
!11108 = !DILocation(line: 2213, column: 18, scope: !10871)
!11109 = !DILocation(line: 2213, column: 2, scope: !10871)
!11110 = !DILocation(line: 2213, column: 9, scope: !10871)
!11111 = !DILocation(line: 2213, column: 11, scope: !10871)
!11112 = !DILocation(line: 2214, column: 13, scope: !10871)
!11113 = !DILocation(line: 2214, column: 20, scope: !10871)
!11114 = !DILocation(line: 2214, column: 18, scope: !10871)
!11115 = !DILocation(line: 2214, column: 2, scope: !10871)
!11116 = !DILocation(line: 2214, column: 9, scope: !10871)
!11117 = !DILocation(line: 2214, column: 11, scope: !10871)
!11118 = !DILocation(line: 2215, column: 1, scope: !10871)
!11119 = distinct !DISubprogram(name: "ui_item_fit", scope: !3, file: !3, line: 187, type: !11120, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!11120 = !DISubroutineType(types: !11121)
!11121 = !{!1100, !1100, !1100, !1100, !1100, !1100, !1100, !4313}
!11122 = !DILocalVariable(name: "item", arg: 1, scope: !11119, file: !3, line: 187, type: !1100)
!11123 = !DILocation(line: 187, column: 28, scope: !11119)
!11124 = !DILocalVariable(name: "pos", arg: 2, scope: !11119, file: !3, line: 187, type: !1100)
!11125 = !DILocation(line: 187, column: 38, scope: !11119)
!11126 = !DILocalVariable(name: "all", arg: 3, scope: !11119, file: !3, line: 187, type: !1100)
!11127 = !DILocation(line: 187, column: 47, scope: !11119)
!11128 = !DILocalVariable(name: "available", arg: 4, scope: !11119, file: !3, line: 187, type: !1100)
!11129 = !DILocation(line: 187, column: 56, scope: !11119)
!11130 = !DILocalVariable(name: "last", arg: 5, scope: !11119, file: !3, line: 187, type: !1100)
!11131 = !DILocation(line: 187, column: 71, scope: !11119)
!11132 = !DILocalVariable(name: "alignment", arg: 6, scope: !11119, file: !3, line: 187, type: !1100)
!11133 = !DILocation(line: 187, column: 81, scope: !11119)
!11134 = !DILocalVariable(name: "offset", arg: 7, scope: !11119, file: !3, line: 187, type: !4313)
!11135 = !DILocation(line: 187, column: 97, scope: !11119)
!11136 = !DILocation(line: 189, column: 6, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 189, column: 6)
!11138 = !DILocation(line: 189, column: 6, scope: !11119)
!11139 = !DILocation(line: 190, column: 4, scope: !11137)
!11140 = !DILocation(line: 190, column: 11, scope: !11137)
!11141 = !DILocation(line: 190, column: 3, scope: !11137)
!11142 = !DILocation(line: 193, column: 6, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 193, column: 6)
!11144 = !DILocation(line: 193, column: 16, scope: !11143)
!11145 = !DILocation(line: 193, column: 6, scope: !11119)
!11146 = !DILocation(line: 194, column: 10, scope: !11143)
!11147 = !DILocation(line: 194, column: 3, scope: !11143)
!11148 = !DILocation(line: 196, column: 6, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 196, column: 6)
!11150 = !DILocation(line: 196, column: 12, scope: !11149)
!11151 = !DILocation(line: 196, column: 10, scope: !11149)
!11152 = !DILocation(line: 196, column: 6, scope: !11119)
!11153 = !DILocation(line: 198, column: 7, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 198, column: 7)
!11155 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 196, column: 23)
!11156 = !DILocation(line: 198, column: 7, scope: !11155)
!11157 = !DILocation(line: 199, column: 11, scope: !11154)
!11158 = !DILocation(line: 199, column: 23, scope: !11154)
!11159 = !DILocation(line: 199, column: 21, scope: !11154)
!11160 = !DILocation(line: 199, column: 4, scope: !11154)
!11161 = !DILocation(line: 201, column: 12, scope: !11154)
!11162 = !DILocation(line: 201, column: 19, scope: !11154)
!11163 = !DILocation(line: 201, column: 17, scope: !11154)
!11164 = !DILocation(line: 201, column: 32, scope: !11154)
!11165 = !DILocation(line: 201, column: 30, scope: !11154)
!11166 = !DILocation(line: 201, column: 4, scope: !11154)
!11167 = !DILocation(line: 205, column: 7, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 205, column: 7)
!11169 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 203, column: 7)
!11170 = !DILocation(line: 205, column: 17, scope: !11168)
!11171 = !DILocation(line: 205, column: 7, scope: !11169)
!11172 = !DILocation(line: 206, column: 8, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 206, column: 8)
!11174 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 205, column: 44)
!11175 = !DILocation(line: 206, column: 8, scope: !11174)
!11176 = !DILocation(line: 207, column: 12, scope: !11173)
!11177 = !DILocation(line: 207, column: 24, scope: !11173)
!11178 = !DILocation(line: 207, column: 22, scope: !11173)
!11179 = !DILocation(line: 207, column: 5, scope: !11173)
!11180 = !DILocation(line: 209, column: 13, scope: !11173)
!11181 = !DILocation(line: 209, column: 20, scope: !11173)
!11182 = !DILocation(line: 209, column: 18, scope: !11173)
!11183 = !DILocation(line: 209, column: 33, scope: !11173)
!11184 = !DILocation(line: 209, column: 31, scope: !11173)
!11185 = !DILocation(line: 209, column: 5, scope: !11173)
!11186 = !DILocation(line: 212, column: 11, scope: !11168)
!11187 = !DILocation(line: 212, column: 4, scope: !11168)
!11188 = !DILocation(line: 214, column: 1, scope: !11119)
!11189 = distinct !DISubprogram(name: "ui_litem_min_width", scope: !3, file: !3, line: 1960, type: !11190, scopeLine: 1961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{!1100, !1100}
!11192 = !DILocalVariable(name: "itemw", arg: 1, scope: !11189, file: !3, line: 1960, type: !1100)
!11193 = !DILocation(line: 1960, column: 35, scope: !11189)
!11194 = !DILocation(line: 1962, column: 9, scope: !11189)
!11195 = !DILocation(line: 1962, column: 2, scope: !11189)
!11196 = distinct !DISubprogram(name: "ui_litem_layout_root_radial", scope: !3, file: !3, line: 2223, type: !3469, scopeLine: 2224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!11197 = !DILocalVariable(name: "litem", arg: 1, scope: !11196, file: !3, line: 2223, type: !1113)
!11198 = !DILocation(line: 2223, column: 51, scope: !11196)
!11199 = !DILocalVariable(name: "item", scope: !11196, file: !3, line: 2226, type: !3181)
!11200 = !DILocation(line: 2226, column: 10, scope: !11196)
!11201 = !DILocation(line: 2226, column: 17, scope: !11196)
!11202 = !DILocation(line: 2226, column: 24, scope: !11196)
!11203 = !DILocation(line: 2226, column: 30, scope: !11196)
!11204 = !DILocation(line: 2228, column: 6, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 2228, column: 6)
!11206 = !DILocation(line: 2228, column: 12, scope: !11205)
!11207 = !DILocation(line: 2228, column: 17, scope: !11205)
!11208 = !DILocation(line: 2228, column: 6, scope: !11196)
!11209 = !DILocalVariable(name: "itemh", scope: !11210, file: !3, line: 2229, type: !1100)
!11210 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 2228, column: 33)
!11211 = !DILocation(line: 2229, column: 7, scope: !11210)
!11212 = !DILocalVariable(name: "itemw", scope: !11210, file: !3, line: 2229, type: !1100)
!11213 = !DILocation(line: 2229, column: 14, scope: !11210)
!11214 = !DILocalVariable(name: "x", scope: !11210, file: !3, line: 2229, type: !1100)
!11215 = !DILocation(line: 2229, column: 21, scope: !11210)
!11216 = !DILocalVariable(name: "y", scope: !11210, file: !3, line: 2229, type: !1100)
!11217 = !DILocation(line: 2229, column: 24, scope: !11210)
!11218 = !DILocation(line: 2230, column: 7, scope: !11210)
!11219 = !DILocation(line: 2230, column: 14, scope: !11210)
!11220 = !DILocation(line: 2230, column: 5, scope: !11210)
!11221 = !DILocation(line: 2231, column: 7, scope: !11210)
!11222 = !DILocation(line: 2231, column: 14, scope: !11210)
!11223 = !DILocation(line: 2231, column: 5, scope: !11210)
!11224 = !DILocation(line: 2233, column: 16, scope: !11210)
!11225 = !DILocation(line: 2233, column: 3, scope: !11210)
!11226 = !DILocation(line: 2235, column: 20, scope: !11210)
!11227 = !DILocation(line: 2235, column: 26, scope: !11210)
!11228 = !DILocation(line: 2235, column: 30, scope: !11210)
!11229 = !DILocation(line: 2235, column: 36, scope: !11210)
!11230 = !DILocation(line: 2235, column: 28, scope: !11210)
!11231 = !DILocation(line: 2235, column: 41, scope: !11210)
!11232 = !DILocation(line: 2235, column: 47, scope: !11210)
!11233 = !DILocation(line: 2235, column: 62, scope: !11210)
!11234 = !DILocation(line: 2235, column: 60, scope: !11210)
!11235 = !DILocation(line: 2235, column: 81, scope: !11210)
!11236 = !DILocation(line: 2235, column: 57, scope: !11210)
!11237 = !DILocation(line: 2235, column: 43, scope: !11210)
!11238 = !DILocation(line: 2235, column: 90, scope: !11210)
!11239 = !DILocation(line: 2235, column: 97, scope: !11210)
!11240 = !DILocation(line: 2235, column: 3, scope: !11210)
!11241 = !DILocation(line: 2236, column: 2, scope: !11210)
!11242 = !DILocation(line: 2237, column: 1, scope: !11196)
!11243 = distinct !DISubprogram(name: "ui_item_is_radial_displayable", scope: !3, file: !3, line: 2129, type: !11244, scopeLine: 2130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!11244 = !DISubroutineType(types: !11245)
!11245 = !{!1413, !3181}
!11246 = !DILocalVariable(name: "item", arg: 1, scope: !11243, file: !3, line: 2129, type: !3181)
!11247 = !DILocation(line: 2129, column: 51, scope: !11243)
!11248 = !DILocation(line: 2132, column: 7, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 2132, column: 6)
!11250 = !DILocation(line: 2132, column: 13, scope: !11249)
!11251 = !DILocation(line: 2132, column: 18, scope: !11249)
!11252 = !DILocation(line: 2132, column: 34, scope: !11249)
!11253 = !DILocation(line: 2132, column: 55, scope: !11249)
!11254 = !DILocation(line: 2132, column: 62, scope: !11249)
!11255 = !DILocation(line: 2132, column: 67, scope: !11249)
!11256 = !DILocation(line: 2132, column: 72, scope: !11249)
!11257 = !DILocation(line: 2132, column: 6, scope: !11243)
!11258 = !DILocation(line: 2133, column: 3, scope: !11249)
!11259 = !DILocation(line: 2135, column: 2, scope: !11243)
!11260 = !DILocation(line: 2136, column: 1, scope: !11243)
!11261 = distinct !DISubprogram(name: "ui_get_radialbut_vec", scope: !3, file: !3, line: 2118, type: !11262, scopeLine: 2119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!11262 = !DISubroutineType(types: !11263)
!11263 = !{!10959, !1471, !1166}
!11264 = !DILocalVariable(name: "vec", arg: 1, scope: !11261, file: !3, line: 2118, type: !1471)
!11265 = !DILocation(line: 2118, column: 51, scope: !11261)
!11266 = !DILocalVariable(name: "itemnum", arg: 2, scope: !11261, file: !3, line: 2118, type: !1166)
!11267 = !DILocation(line: 2118, column: 65, scope: !11261)
!11268 = !DILocalVariable(name: "dir", scope: !11261, file: !3, line: 2120, type: !10959)
!11269 = !DILocation(line: 2120, column: 18, scope: !11261)
!11270 = !DILocation(line: 2123, column: 28, scope: !11261)
!11271 = !DILocation(line: 2123, column: 8, scope: !11261)
!11272 = !DILocation(line: 2123, column: 6, scope: !11261)
!11273 = !DILocation(line: 2124, column: 17, scope: !11261)
!11274 = !DILocation(line: 2124, column: 22, scope: !11261)
!11275 = !DILocation(line: 2124, column: 2, scope: !11261)
!11276 = !DILocation(line: 2126, column: 9, scope: !11261)
!11277 = !DILocation(line: 2126, column: 2, scope: !11261)
!11278 = distinct !DISubprogram(name: "ui_item_is_radial_drawable", scope: !3, file: !3, line: 2138, type: !11279, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!11279 = !DISubroutineType(types: !11280)
!11280 = !{!1413, !2308}
!11281 = !DILocalVariable(name: "bitem", arg: 1, scope: !11278, file: !3, line: 2138, type: !2308)
!11282 = !DILocation(line: 2138, column: 54, scope: !11278)
!11283 = !DILocation(line: 2141, column: 6, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 2141, column: 6)
!11285 = !DILocation(line: 2141, column: 6, scope: !11278)
!11286 = !DILocation(line: 2142, column: 3, scope: !11284)
!11287 = !DILocation(line: 2144, column: 2, scope: !11278)
!11288 = !DILocation(line: 2145, column: 1, scope: !11278)
!11289 = distinct !DISubprogram(name: "ui_intro_items", scope: !3, file: !3, line: 3242, type: !11290, scopeLine: 3243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!11290 = !DISubroutineType(types: !11291)
!11291 = !{null, !8123, !2069}
!11292 = !DILocalVariable(name: "ds", arg: 1, scope: !11289, file: !3, line: 3242, type: !8123)
!11293 = !DILocation(line: 3242, column: 36, scope: !11289)
!11294 = !DILocalVariable(name: "lb", arg: 2, scope: !11289, file: !3, line: 3242, type: !2069)
!11295 = !DILocation(line: 3242, column: 50, scope: !11289)
!11296 = !DILocalVariable(name: "item", scope: !11289, file: !3, line: 3244, type: !3181)
!11297 = !DILocation(line: 3244, column: 10, scope: !11289)
!11298 = !DILocation(line: 3246, column: 20, scope: !11289)
!11299 = !DILocation(line: 3246, column: 2, scope: !11289)
!11300 = !DILocation(line: 3248, column: 14, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 3248, column: 2)
!11302 = !DILocation(line: 3248, column: 18, scope: !11301)
!11303 = !DILocation(line: 3248, column: 12, scope: !11301)
!11304 = !DILocation(line: 3248, column: 7, scope: !11301)
!11305 = !DILocation(line: 3248, column: 25, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11301, file: !3, line: 3248, column: 2)
!11307 = !DILocation(line: 3248, column: 2, scope: !11301)
!11308 = !DILocation(line: 3250, column: 21, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 3248, column: 50)
!11310 = !DILocation(line: 3250, column: 3, scope: !11309)
!11311 = !DILocation(line: 3253, column: 11, scope: !11309)
!11312 = !DILocation(line: 3253, column: 17, scope: !11309)
!11313 = !DILocation(line: 3253, column: 3, scope: !11309)
!11314 = !DILocation(line: 3254, column: 52, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 3253, column: 23)
!11316 = !DILocation(line: 3254, column: 34, scope: !11315)
!11317 = !DILocation(line: 3254, column: 78, scope: !11315)
!11318 = !DILocation(line: 3255, column: 52, scope: !11315)
!11319 = !DILocation(line: 3255, column: 34, scope: !11315)
!11320 = !DILocation(line: 3255, column: 75, scope: !11315)
!11321 = !DILocation(line: 3256, column: 52, scope: !11315)
!11322 = !DILocation(line: 3256, column: 34, scope: !11315)
!11323 = !DILocation(line: 3256, column: 78, scope: !11315)
!11324 = !DILocation(line: 3257, column: 52, scope: !11315)
!11325 = !DILocation(line: 3257, column: 34, scope: !11315)
!11326 = !DILocation(line: 3257, column: 83, scope: !11315)
!11327 = !DILocation(line: 3258, column: 52, scope: !11315)
!11328 = !DILocation(line: 3258, column: 34, scope: !11315)
!11329 = !DILocation(line: 3258, column: 80, scope: !11315)
!11330 = !DILocation(line: 3259, column: 52, scope: !11315)
!11331 = !DILocation(line: 3259, column: 34, scope: !11315)
!11332 = !DILocation(line: 3259, column: 75, scope: !11315)
!11333 = !DILocation(line: 3260, column: 52, scope: !11315)
!11334 = !DILocation(line: 3260, column: 34, scope: !11315)
!11335 = !DILocation(line: 3260, column: 80, scope: !11315)
!11336 = !DILocation(line: 3261, column: 52, scope: !11315)
!11337 = !DILocation(line: 3261, column: 34, scope: !11315)
!11338 = !DILocation(line: 3261, column: 77, scope: !11315)
!11339 = !DILocation(line: 3262, column: 52, scope: !11315)
!11340 = !DILocation(line: 3262, column: 34, scope: !11315)
!11341 = !DILocation(line: 3262, column: 79, scope: !11315)
!11342 = !DILocation(line: 3263, column: 52, scope: !11315)
!11343 = !DILocation(line: 3263, column: 34, scope: !11315)
!11344 = !DILocation(line: 3263, column: 76, scope: !11315)
!11345 = !DILocation(line: 3264, column: 52, scope: !11315)
!11346 = !DILocation(line: 3264, column: 34, scope: !11315)
!11347 = !DILocation(line: 3264, column: 79, scope: !11315)
!11348 = !DILocation(line: 3267, column: 11, scope: !11309)
!11349 = !DILocation(line: 3267, column: 17, scope: !11309)
!11350 = !DILocation(line: 3267, column: 3, scope: !11309)
!11351 = !DILocation(line: 3269, column: 21, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 3267, column: 23)
!11353 = !DILocation(line: 3269, column: 41, scope: !11352)
!11354 = !DILocation(line: 3269, column: 25, scope: !11352)
!11355 = !DILocation(line: 3269, column: 5, scope: !11352)
!11356 = !DILocation(line: 3270, column: 5, scope: !11352)
!11357 = !DILocation(line: 3272, column: 23, scope: !11352)
!11358 = !DILocation(line: 3272, column: 5, scope: !11352)
!11359 = !DILocation(line: 3273, column: 20, scope: !11352)
!11360 = !DILocation(line: 3273, column: 38, scope: !11352)
!11361 = !DILocation(line: 3273, column: 45, scope: !11352)
!11362 = !DILocation(line: 3273, column: 5, scope: !11352)
!11363 = !DILocation(line: 3274, column: 5, scope: !11352)
!11364 = !DILocation(line: 3277, column: 21, scope: !11309)
!11365 = !DILocation(line: 3277, column: 3, scope: !11309)
!11366 = !DILocation(line: 3279, column: 7, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 3279, column: 7)
!11368 = !DILocation(line: 3279, column: 15, scope: !11367)
!11369 = !DILocation(line: 3279, column: 19, scope: !11367)
!11370 = !DILocation(line: 3279, column: 12, scope: !11367)
!11371 = !DILocation(line: 3279, column: 7, scope: !11309)
!11372 = !DILocation(line: 3280, column: 22, scope: !11367)
!11373 = !DILocation(line: 3280, column: 4, scope: !11367)
!11374 = !DILocation(line: 3281, column: 2, scope: !11309)
!11375 = !DILocation(line: 3248, column: 38, scope: !11306)
!11376 = !DILocation(line: 3248, column: 44, scope: !11306)
!11377 = !DILocation(line: 3248, column: 36, scope: !11306)
!11378 = !DILocation(line: 3248, column: 2, scope: !11306)
!11379 = distinct !{!11379, !11307, !11380}
!11380 = !DILocation(line: 3281, column: 2, scope: !11301)
!11381 = !DILocation(line: 3282, column: 20, scope: !11289)
!11382 = !DILocation(line: 3282, column: 2, scope: !11289)
!11383 = !DILocation(line: 3283, column: 1, scope: !11289)
!11384 = distinct !DISubprogram(name: "ui_intro_button", scope: !3, file: !3, line: 3223, type: !11385, scopeLine: 3224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2345)
!11385 = !DISubroutineType(types: !11386)
!11386 = !{null, !8123, !2308}
!11387 = !DILocalVariable(name: "ds", arg: 1, scope: !11384, file: !3, line: 3223, type: !8123)
!11388 = !DILocation(line: 3223, column: 37, scope: !11384)
!11389 = !DILocalVariable(name: "bitem", arg: 2, scope: !11384, file: !3, line: 3223, type: !2308)
!11390 = !DILocation(line: 3223, column: 55, scope: !11384)
!11391 = !DILocalVariable(name: "but", scope: !11384, file: !3, line: 3225, type: !2159)
!11392 = !DILocation(line: 3225, column: 9, scope: !11384)
!11393 = !DILocation(line: 3225, column: 15, scope: !11384)
!11394 = !DILocation(line: 3225, column: 22, scope: !11384)
!11395 = !DILocation(line: 3226, column: 21, scope: !11384)
!11396 = !DILocation(line: 3226, column: 45, scope: !11384)
!11397 = !DILocation(line: 3226, column: 50, scope: !11384)
!11398 = !DILocation(line: 3226, column: 2, scope: !11384)
!11399 = !DILocation(line: 3227, column: 21, scope: !11384)
!11400 = !DILocation(line: 3227, column: 53, scope: !11384)
!11401 = !DILocation(line: 3227, column: 58, scope: !11384)
!11402 = !DILocation(line: 3227, column: 2, scope: !11384)
!11403 = !DILocation(line: 3228, column: 21, scope: !11384)
!11404 = !DILocation(line: 3228, column: 45, scope: !11384)
!11405 = !DILocation(line: 3228, column: 50, scope: !11384)
!11406 = !DILocation(line: 3228, column: 56, scope: !11384)
!11407 = !DILocation(line: 3228, column: 61, scope: !11384)
!11408 = !DILocation(line: 3228, column: 2, scope: !11384)
!11409 = !DILocation(line: 3230, column: 6, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 3230, column: 6)
!11411 = !DILocation(line: 3230, column: 11, scope: !11410)
!11412 = !DILocation(line: 3230, column: 6, scope: !11384)
!11413 = !DILocalVariable(name: "opstr", scope: !11414, file: !3, line: 3231, type: !1855)
!11414 = distinct !DILexicalBlock(scope: !11410, file: !3, line: 3230, column: 19)
!11415 = !DILocation(line: 3231, column: 9, scope: !11414)
!11416 = !DILocation(line: 3231, column: 41, scope: !11414)
!11417 = !DILocation(line: 3231, column: 46, scope: !11414)
!11418 = !DILocation(line: 3231, column: 53, scope: !11414)
!11419 = !DILocation(line: 3231, column: 80, scope: !11414)
!11420 = !DILocation(line: 3231, column: 85, scope: !11414)
!11421 = !DILocation(line: 3231, column: 93, scope: !11414)
!11422 = !DILocation(line: 3231, column: 98, scope: !11414)
!11423 = !DILocation(line: 3231, column: 17, scope: !11414)
!11424 = !DILocation(line: 3232, column: 22, scope: !11414)
!11425 = !DILocation(line: 3232, column: 51, scope: !11414)
!11426 = !DILocation(line: 3232, column: 59, scope: !11414)
!11427 = !DILocation(line: 3232, column: 3, scope: !11414)
!11428 = !DILocation(line: 3233, column: 3, scope: !11414)
!11429 = !DILocation(line: 3233, column: 13, scope: !11414)
!11430 = !DILocation(line: 3234, column: 2, scope: !11414)
!11431 = !DILocation(line: 3236, column: 6, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 3236, column: 6)
!11433 = !DILocation(line: 3236, column: 11, scope: !11432)
!11434 = !DILocation(line: 3236, column: 6, scope: !11384)
!11435 = !DILocation(line: 3237, column: 22, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 3236, column: 20)
!11437 = !DILocation(line: 3237, column: 71, scope: !11436)
!11438 = !DILocation(line: 3237, column: 76, scope: !11436)
!11439 = !DILocation(line: 3237, column: 84, scope: !11436)
!11440 = !DILocation(line: 3237, column: 49, scope: !11436)
!11441 = !DILocation(line: 3237, column: 115, scope: !11436)
!11442 = !DILocation(line: 3237, column: 120, scope: !11436)
!11443 = !DILocation(line: 3237, column: 91, scope: !11436)
!11444 = !DILocation(line: 3237, column: 130, scope: !11436)
!11445 = !DILocation(line: 3237, column: 135, scope: !11436)
!11446 = !DILocation(line: 3237, column: 3, scope: !11436)
!11447 = !DILocation(line: 3238, column: 2, scope: !11436)
!11448 = !DILocation(line: 3240, column: 1, scope: !11384)
